Folder,Filename,Lexical Features,Syntactic Features,Semantic Features,Layout Features,Word Frequencies,Character N-grams
Alice Gana,aristotle.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'from': 6, 'selenium': 3, 'import': 4, 'webdriver': 1, 'selenium.webdriver.common.keys': 1, 'keys': 1, 'selenium.webdriver.chrome.options': 1, 'options': 2, 'time': 3, '###########################################################################################': 4, '#': 37, 'part': 15, '1:': 1, 'initializations': 1, '1.1.': 1, 'preventing': 2, 'the': 40, 'browser': 7, 'window': 3, 'opening': 2, '1.2.': 1, 'localizing': 2, 'driver': 7, '1.3.': 1, 'configuring': 2, 'so': 4, 'that': 4, 'can': 3, 'manipulate': 2, 'navigator': 2, '1.1': 1, '-': 3, 'create': 2, 'an': 2, 'object': 1, 'of': 1, 'class': 1, 'and': 3, 'adding': 1, 'argument': 1, '--headless': 1, 'to': 19, 'invoke': 1, 'chrome': 1, 'in': 10, 'headless': 1, 'mode': 1, 'chrome_options': 1, '=': 4, 'options()': 1, 'chrome_options.add_argument(""--headless"")': 1, '1.2': 1, 'setting': 1, 'path': 2, '""c://drivers/chromedriver.exe""': 1, '1.3': 1, 'webdriver.chrome(path)': 1, 'i': 1, 'include': 1, '""chrome_options""': 1, 'as': 1, 'a': 5, 'second': 7, 'parameter': 1, 'prevent': 1, 'opening)': 1, '2:': 1, 'accessing': 3, 'wikipedia': 3, '2.1.': 2, 'page': 12, 'using': 6, 'function': 2, '""get""': 2, '2.2.': 2, 'waiting': 6, 'one': 6, 'for': 4, 'web': 6, 'open': 4, '2.3.': 2, 'creating': 2, 'variable': 4, 'receive': 2, 'element': 3, 'refers': 2, 'search': 6, 'box': 6, '2.4.': 2, 'method': 4, 'send_keys': 4, 'write': 4, 'press': 2, '""enter""': 1, '2.5.': 2, 'has': 2, 'enough': 2, 'change': 2, 'another': 2, '2.6.': 2, 'saving': 2, 'xpath': 3, '2.7.': 2, '2.8.': 2, '2.9.': 1, 'printing': 1, 'first': 2, 'paragraph': 2, '2.10.': 2, 'closing': 2, 'driver.get(""https://en.wikipedia.org/wiki/main_page"")': 1, 'time.sleep(1)': 3, 'search_input=driver.find_element_by_xpath(\'//*[@id=""searchinput""]\')': 1, 'this': 1, 'link,': 1, 'click': 1, 'with': 1, 'right': 1, 'button': 1, 'then': 1, 'inspect/select': 1, 'page/copy': 1, 'enter': 2, 'search_input.send_keys(""aristotle"")': 1, 'pressing': 1, 'search_input.send_keys(keys.enter)': 1, 'found': 1, 'driver.find_element_by_xpath(""//*[@id=\'mw-content-text\']/div[3]/ul/li[1]/div[1]/a"")': 1, 'found.click()': 1, '2.9.printing': 1, 'first_paragraph=driver.find_element_by_xpath(""//*[@id=\'mw-content-text\']/div[1]/p[3]"")': 1, 'print(first_paragraph.get_attribute(""innertext""))': 1, '#driver.close()': 1}","{'fro': 6, 'rom': 13, 'om ': 6, 'm s': 3, ' se': 22, 'sel': 6, 'ele': 12, 'len': 5, 'eni': 8, 'niu': 5, 'ium': 5, 'um ': 3, 'm i': 1, ' im': 3, 'imp': 4, 'mpo': 4, 'por': 4, 'ort': 4, 'rt ': 4, 't w': 2, ' we': 8, 'web': 10, 'ebd': 4, 'bdr': 4, 'dri': 17, 'riv': 18, 'ive': 20, 'ver': 18, 'er\n': 7, 'r\nf': 1, '\nfr': 2, 'um.': 2, 'm.w': 2, '.we': 2, 'er.': 9, 'r.c': 3, '.co': 1, 'com': 1, 'omm': 1, 'mmo': 1, 'mon': 1, 'on.': 1, 'n.k': 1, '.ke': 1, 'key': 7, 'eys': 9, 'ys ': 5, 's i': 2, 't K': 1, ' Ke': 1, 'Key': 2, 'ys\n': 1, 's\nf': 1, '.ch': 1, 'chr': 5, 'hro': 7, 'ome': 7, 'me.': 4, 'e.o': 1, '.op': 1, 'opt': 4, 'pti': 7, 'tio': 10, 'ion': 10, 'ons': 8, 'ns ': 3, 't O': 1, ' Op': 3, 'Opt': 3, 'ns\n': 2, 's\ni': 1, '\nim': 1, 't t': 3, ' ti': 3, 'tim': 6, 'ime': 6, 'me\n': 1, 'e\n\n': 2, '\n\n#': 18, '\n##': 4, '###': 356, '##\n': 4, '#\n#': 6, '\n#\n': 4, '\n# ': 32, '#  ': 15, '   ': 15, '  P': 2, ' PA': 15, 'PAR': 15, 'ART': 15, 'RT ': 15, 'T 1': 4, ' 1:': 1, '1: ': 1, ': I': 1, ' In': 1, 'Ini': 1, 'nit': 1, 'iti': 7, 'tia': 1, 'ial': 1, 'ali': 3, 'liz': 3, 'iza': 1, 'zat': 1, 'ati': 3, 's\n#': 1, '  1': 3, ' 1.': 6, '1.1': 2, '.1.': 3, '1. ': 3, '. P': 2, ' Pr': 4, 'Pre': 3, 'rev': 3, 'eve': 3, 'ven': 3, 'ent': 16, 'nti': 4, 'tin': 13, 'ing': 35, 'ng ': 32, 'g t': 15, ' th': 46, 'the': 43, 'he ': 40, 'e b': 1, ' br': 7, 'bro': 7, 'row': 7, 'ows': 7, 'wse': 7, 'ser': 7, 'er ': 13, 'r w': 1, ' wi': 4, 'win': 3, 'ind': 6, 'ndo': 3, 'dow': 3, 'ow ': 3, 'w f': 3, ' fr': 3, 'm o': 3, ' op': 7, 'ope': 7, 'pen': 7, 'nin': 3, 'ng\n': 2, 'g\n#': 1, '1.2': 2, '.2.': 3, '2. ': 3, '. L': 1, ' Lo': 2, 'Loc': 2, 'oca': 2, 'cal': 2, 'izi': 2, 'zin': 2, 'e d': 6, ' dr': 7, 'r\n#': 4, '1.3': 2, '.3.': 3, '3. ': 3, '. C': 5, ' Co': 2, 'Con': 2, 'onf': 2, 'nfi': 2, 'fig': 2, 'igu': 2, 'gur': 2, 'uri': 2, 'rin': 5, 'r s': 2, ' so': 4, 'so ': 4, 'o t': 6, 'tha': 4, 'hat': 4, 'at ': 4, 't s': 2, 'm c': 2, ' ca': 3, 'can': 3, 'an ': 5, 'n m': 2, ' ma': 2, 'man': 2, 'ani': 2, 'nip': 2, 'ipu': 2, 'pul': 2, 'ula': 2, 'lat': 2, 'ate': 4, 'te ': 8, 'e t': 11, 'e n': 2, ' na': 2, 'nav': 2, 'avi': 4, 'vig': 2, 'iga': 2, 'gat': 2, 'ato': 2, 'tor': 2, 'or\n': 2, '#\n\n': 2, '# P': 14, '.1 ': 1, '1 -': 1, ' - ': 3, '- P': 1, 'g w': 1, 'g\n\n': 1, '# C': 1, ' Cr': 3, 'Cre': 3, 'rea': 4, 'eat': 4, 'e a': 2, ' an': 7, 'n o': 1, ' ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 3, 'ct ': 2, 't o': 1, ' of': 1, 'of ': 1, 'f t': 1, 'e c': 1, ' cl': 2, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 5, 's O': 1, 's a': 2, 'and': 3, 'nd ': 11, 'd a': 1, ' ad': 1, 'add': 2, 'ddi': 1, 'din': 1, ' ar': 1, 'arg': 2, 'rgu': 2, 'gum': 2, 'ume': 2, 'men': 8, 'nt ': 5, 't -': 1, ' --': 1, '--h': 2, '-he': 2, 'hea': 3, 'ead': 3, 'adl': 3, 'dle': 3, 'les': 3, 'ess': 9, 's t': 7, ' to': 18, 'to ': 18, 'o i': 1, ' in': 13, 'inv': 1, 'nvo': 1, 'vok': 1, 'oke': 1, 'ke ': 1, 'e C': 1, ' Ch': 1, 'Chr': 2, 'me ': 3, 'e i': 5, 'in ': 10, 'n h': 1, ' he': 1, 's m': 1, ' mo': 1, 'mod': 1, 'ode': 1, 'de\n': 1, 'e\nc': 1, '\nch': 2, 'me_': 3, 'e_o': 3, '_op': 3, 's =': 1, ' = ': 4, '= O': 1, 'ns(': 1, 's()': 1, '()\n': 3, ')\nc': 1, 'ns.': 1, 's.a': 1, '.ad': 1, 'dd_': 1, 'd_a': 1, '_ar': 1, 'nt(': 2, 't(""': 2, '(""-': 1, '""--': 1, 'ss""': 1, 's"")': 1, '"")\n': 5, ')\n\n': 12, '.2 ': 1, '2 -': 1, '- L': 1, '# S': 1, ' Se': 1, 'Set': 1, 'ett': 1, 'tti': 1, 'e p': 10, ' pa': 17, 'pat': 7, 'ath': 7, 'th\n': 2, 'h\nP': 1, '\nPA': 1, 'PAT': 2, 'ATH': 2, 'TH ': 1, 'H =': 1, '= ""': 1, ' ""C': 1, '""C:': 1, 'C:/': 1, '://': 2, '//D': 1, '/Dr': 1, 'Dri': 1, 'ers': 3, 'rs/': 1, 's/c': 1, '/ch': 1, 'med': 1, 'edr': 1, 'r.e': 1, '.ex': 1, 'exe': 1, 'xe""': 1, 'e""\n': 1, '""\n\n': 1, '.3 ': 1, '3 -': 1, '- C': 1, 'r\nd': 1, '\ndr': 2, 'r =': 1, '= w': 1, 'r.C': 1, '.Ch': 1, 'me(': 1, 'e(P': 1, '(PA': 1, 'TH)': 1, 'H) ': 1, ') #': 1, ' # ': 1, '# I': 1, ' I ': 1, 'I c': 1, 'n i': 2, 'inc': 1, 'ncl': 1, 'clu': 1, 'lud': 1, 'ude': 1, 'de ': 1, 'e ""': 1, ' ""c': 1, '""ch': 1, 'ns""': 1, 's"" ': 1, '"" a': 1, ' as': 1, 'as ': 3, ' a ': 5, 'a s': 1, 'sec': 7, 'eco': 7, 'con': 9, 'ond': 7, 'd p': 3, 'par': 5, 'ara': 5, 'ram': 1, 'ame': 1, 'met': 5, 'ete': 1, 'ter': 4, 'r t': 9, 'o p': 1, ' pr': 3, 'pre': 3, 'ng)': 1, 'g)\n': 1, '\n\n\n': 3, 'T 2': 11, ' 2:': 1, '2: ': 1, ': A': 1, ' Ac': 3, 'Acc': 3, 'cce': 3, 'ces': 3, 'ssi': 4, 'sin': 12, 'g W': 3, ' Wi': 3, 'Wik': 3, 'iki': 5, 'kip': 4, 'ipe': 4, 'ped': 4, 'edi': 4, 'dia': 4, 'ia\n': 1, 'a\n#': 1, '  2': 10, ' 2.': 20, '2.1': 4, '. A': 2, 'ia ': 2, 'a p': 2, 'pag': 13, 'age': 14, 'ge ': 6, 'e u': 2, ' us': 2, 'usi': 2, 'g f': 2, ' fu': 2, 'fun': 2, 'unc': 2, 'nct': 2, 'cti': 2, 'on ': 3, 'n ""': 2, ' ""g': 2, '""ge': 2, 'get': 4, 'et""': 2, 't""\n': 2, '""\n#': 2, '2.2': 2, '. W': 6, ' Wa': 6, 'Wai': 6, 'ait': 6, 'g o': 6, ' on': 6, 'one': 6, 'ne ': 6, 'e s': 12, 'd f': 4, ' fo': 4, 'for': 4, 'or ': 4, 'e w': 6, 'eb ': 6, 'b b': 6, 'o o': 4, 'en ': 5, 'n t': 12, 'ge\n': 8, 'e\n#': 5, '2.3': 2, 'g a': 2, 'a v': 4, ' va': 4, 'var': 4, 'ari': 4, 'ria': 4, 'iab': 4, 'abl': 4, 'ble': 4, 'le ': 2, 'o r': 2, ' re': 4, 'rec': 2, 'ece': 2, 'cei': 2, 'eiv': 2, 've ': 2, 'e e': 2, ' el': 3, 'lem': 6, 'eme': 6, 't r': 2, 'ref': 2, 'efe': 2, 'fer': 2, 'rs ': 2, 'sea': 10, 'ear': 10, 'arc': 10, 'rch': 10, 'ch ': 6, 'h b': 6, ' bo': 6, 'box': 6, 'ox\n': 4, 'x\n#': 2, '2.4': 2, '.4.': 2, '4. ': 2, '. U': 4, ' Us': 4, 'Usi': 4, 'e m': 4, ' me': 4, 'eth': 4, 'tho': 4, 'hod': 4, 'od ': 4, 'd s': 6, 'sen': 6, 'end': 6, 'nd_': 9, 'd_k': 6, '_ke': 6, 'o w': 4, ' wr': 4, 'wri': 4, 'rit': 4, 'ite': 4, 'ox ': 2, 'x a': 2, 'res': 3, 's ""': 1, ' ""e': 1, '""en': 1, 'nte': 5, 'er""': 1, 'r""\n': 1, '2.5': 2, '.5.': 2, '5. ': 2, 'r h': 2, ' ha': 2, 'has': 2, 's e': 3, ' en': 4, 'eno': 2, 'nou': 2, 'oug': 2, 'ugh': 2, 'gh ': 2, 'h t': 3, 'o c': 3, ' ch': 2, 'cha': 2, 'han': 2, 'ang': 2, 'nge': 2, 'o a': 2, 'ano': 2, 'not': 2, 'oth': 2, 'her': 2, 'r p': 2, '2.6': 2, '.6.': 2, '6. ': 2, '. S': 2, ' Sa': 2, 'Sav': 2, 'vin': 2, 'g x': 2, ' xp': 3, 'xpa': 6, 'th ': 3, 'h i': 4, 'n a': 2, 'le\n': 2, '2.7': 2, '.7.': 2, '7. ': 2, '2.8': 2, '.8.': 2, '8. ': 2, '2.9': 2, '.9.': 2, '9. ': 1, 'Pri': 2, 'int': 3, 'e f': 2, ' fi': 2, 'fir': 4, 'irs': 4, 'rst': 4, 'st ': 2, 't p': 2, 'rag': 4, 'agr': 4, 'gra': 4, 'rap': 4, 'aph': 4, 'ph ': 2, '.10': 2, '10.': 2, '0. ': 2, ' Cl': 2, 'Clo': 2, 'los': 3, 'osi': 2, '""\nd': 1, 'r.g': 1, '.ge': 2, 'et(': 1, '(""h': 1, '""ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '//e': 1, '/en': 1, 'en.': 1, 'n.w': 1, '.wi': 1, 'wik': 2, 'ia.': 1, 'a.o': 1, '.or': 1, 'org': 1, 'rg/': 1, 'g/w': 1, '/wi': 1, 'ki/': 1, 'i/M': 1, '/Ma': 1, 'Mai': 1, 'ain': 1, 'in_': 1, 'n_P': 1, '_Pa': 1, 'Pag': 1, 'ge""': 1, 'e"")': 2, 'e\nt': 3, '\nti': 3, 'e.s': 3, '.sl': 3, 'sle': 3, 'lee': 3, 'eep': 3, 'ep(': 3, 'p(1': 3, '(1)': 3, '1)\n': 3, 'x\ns': 1, '\nse': 3, 'ch_': 3, 'h_i': 3, '_in': 3, 'inp': 3, 'npu': 4, 'put': 4, 'ut=': 1, 't=d': 1, '=dr': 2, 'r.f': 3, '.fi': 3, 'fin': 3, 'd_e': 3, '_el': 3, 'nt_': 3, 't_b': 3, '_by': 3, 'by_': 3, 'y_x': 3, '_xp': 3, 'th(': 3, ""h('"": 1, ""('/"": 1, ""'//"": 1, '//*': 3, '/*[': 3, '*[@': 3, '[@i': 3, '@id': 3, 'id=': 3, 'd=""': 1, '=""s': 1, '""se': 1, 'chI': 1, 'hIn': 1, 'Inp': 1, 'ut""': 1, 't""]': 1, '""]\'': 1, ""]')"": 1, ""')\n"": 1, ')\n#': 1, '# T': 1, ' To': 1, 'To ': 1, ' cr': 1, 'cre': 1, 'thi': 1, 'his': 1, 'is ': 1, 's l': 1, ' li': 1, 'lin': 1, 'ink': 1, 'nk,': 1, 'k, ': 1, ', c': 1, 'cli': 2, 'lic': 2, 'ick': 2, 'ck ': 1, 'k w': 1, 'wit': 1, 'ith': 1, 'e r': 1, ' ri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht ': 1, 't b': 1, ' bu': 1, 'but': 2, 'utt': 1, 'tto': 1, 'ton': 1, 'hen': 1, 'ins': 1, 'nsp': 1, 'spe': 1, 'pec': 1, 'ct/': 1, 't/s': 1, '/se': 1, 'lec': 1, 't a': 1, 'n e': 1, 't i': 1, 'ge/': 1, 'e/c': 1, '/co': 1, 'cop': 1, 'opy': 1, 'py ': 1, 'y x': 1, 'h\n\n': 1, 'r\ns': 2, 'ut.': 2, 't.s': 2, '.se': 2, 'ys(': 2, 's(""': 1, '(""A': 1, '""Ar': 1, 'Ari': 1, 'ris': 1, 'ist': 1, 'sto': 1, 'tot': 1, 'otl': 1, 'tle': 1, 'le""': 1, 'g e': 1, 's(K': 1, '(Ke': 1, 'ys.': 1, 's.E': 1, '.EN': 1, 'ENT': 1, 'NTE': 1, 'TER': 1, 'ER)': 1, 'R)\n': 1, 'e\nf': 1, '\nfo': 2, 'fou': 2, 'oun': 2, 'und': 2, 'd =': 1, '= d': 1, 'h(""': 2, '(""/': 2, '""//': 2, ""d='"": 2, ""='m"": 2, ""'mw"": 2, 'mw-': 2, 'w-c': 2, '-co': 2, 'ont': 2, 'ten': 2, 'nt-': 2, 't-t': 2, '-te': 2, 'tex': 2, 'ext': 3, ""xt'"": 2, ""t']"": 2, ""']/"": 2, ']/d': 3, '/di': 3, 'div': 3, 'iv[': 3, 'v[3': 1, '[3]': 2, '3]/': 1, ']/u': 1, '/ul': 1, 'ul/': 1, 'l/l': 1, '/li': 1, 'li[': 1, 'i[1': 1, '[1]': 3, '1]/': 3, 'v[1': 2, ']/a': 1, '/a""': 1, 'a"")': 1, 'x\nf': 1, 'nd.': 1, 'd.c': 1, '.cl': 2, 'ck(': 1, 'k()': 1, '9.P': 1, '.Pr': 1, '\n\nf': 1, '\nfi': 1, 'st_': 2, 't_p': 2, '_pa': 2, 'ph=': 1, 'h=d': 1, ']/p': 1, '/p[': 1, 'p[3': 1, '3]""': 1, ']"")': 1, ')\np': 1, '\npr': 1, 'pri': 1, 't(f': 1, '(fi': 1, 'ph.': 1, 'h.g': 1, 'et_': 1, 't_a': 1, '_at': 1, 'att': 1, 'ttr': 1, 'tri': 1, 'rib': 1, 'ibu': 1, 'ute': 1, 'te(': 1, 'e(""': 1, '(""i': 1, '""in': 1, 'inn': 1, 'nne': 1, 'ner': 1, 'erT': 1, 'rTe': 1, 'Tex': 1, 'xt""': 1, 't"")': 1, '""))': 1, '))\n': 1, 'r\n\n': 1, '\n#d': 1, '#dr': 1, 'clo': 1, 'ose': 1, 'se(': 1, 'e()': 1}"
Alice Gana,basic_calculator.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'###############################################################################': 4, '#': 14, 'part': 2, '1:': 2, 'creating': 1, 'functions': 1, 'history': 6, '=[]': 1, 'function': 4, 'to': 6, 'add': 1, 'two': 4, 'numbers': 4, 'def': 5, 'addition():': 1, 'a': 16, '=': 13, 'float(input(""type': 8, 'number:': 9, '""))': 10, 'b': 10, 'float(input': 1, '(""type': 1, 'another': 5, 'print(""addition:': 1, '""': 1, ',': 1, '+b)': 1, 'operation_addition': 2, '=a': 1, '+': 1, 'global': 4, 'history.append(operation_addition)': 2, 'subtract': 1, 'subtraction():': 1, 'print(""subtraction:': 1, '"",': 3, '-': 9, 'b)': 3, 'divide': 1, 'division():': 1, 'while': 3, '==': 7, '0:': 1, 'print(""erro!': 1, 'try': 1, 'again"")': 1, 'print(""division:': 1, '/': 2, 'operation_division': 1, 'history.append(operation_division)': 1, 'multiply': 1, 'multiplication():': 1, 'print(""multiplication:': 1, '*': 2, 'operation_multiplication': 1, 'history.append(operation_multiplication)': 1, 'storing': 1, 'results': 1, 'see': 1, 'previous': 1, 'calculations': 1, 'showing_previous_calculations():': 1, 'print(history)': 1, '2:': 2, 'interacting': 1, 'with': 2, 'user': 2, 'infinite': 1, 'loop': 2, 'which': 1, 'will': 1, 'end': 1, 'the': 1, 'break': 3, 'statement': 2, 'true:': 1, 'print(""my': 1, 'calculator': 1, '2021"")': 1, 'print(""----------menu----------"")': 1, 'print(""""""select': 1, 'an': 2, 'option:': 2, '1': 1, 'addition': 1, '2': 1, 'subtraction': 1, '3': 1, 'multiplication': 1, '4': 1, 'division': 1, '5': 1, '6': 1, 'terminate': 1, '"""""")': 1, 'take': 1, 'input': 1, 'from': 1, 'click': 7, 'float(input(""enter': 1, 'if': 1, 'addition()': 1, 'elif': 5, 'subtraction()': 1, '3:': 1, 'multiplication()': 1, '4:': 1, 'division()': 1, '5:': 1, 'showing_previous_calculations()': 1, '6:': 1, 'stop': 1, 'else:': 1, 'print(""invalid': 1, 'option"")': 1}","{'###': 308, '##\n': 4, '#\n#': 6, '\n#\n': 4, '\n# ': 8, '#  ': 2, '   ': 146, '  P': 2, ' PA': 2, 'PAR': 2, 'ART': 2, 'RT ': 2, 'T 1': 1, ' 1:': 2, '1: ': 1, ': C': 1, ' Cr': 1, 'Cre': 1, 'rea': 4, 'eat': 1, 'ati': 18, 'tin': 2, 'ing': 5, 'ng ': 3, 'g f': 1, ' fu': 1, 'fun': 1, 'unc': 5, 'nct': 5, 'cti': 10, 'tio': 37, 'ion': 43, 'ons': 4, 'ns\n': 2, 's\n#': 1, '\n##': 3, '#\n\n': 2, '\n\nh': 1, '\nhi': 1, 'his': 10, 'ist': 11, 'sto': 12, 'tor': 13, 'ory': 11, 'ry ': 2, 'y =': 1, ' =[': 1, '=[]': 1, '[]\n': 1, ']\n\n': 1, '\n\n#': 7, '# F': 4, ' Fu': 4, 'Fun': 4, 'on ': 8, 'n t': 4, ' to': 6, 'to ': 6, 'o a': 1, ' ad': 3, 'add': 8, 'dd ': 1, 'd t': 1, ' tw': 4, 'two': 4, 'wo ': 4, 'o n': 4, ' nu': 13, 'num': 13, 'umb': 13, 'mbe': 13, 'ber': 13, 'ers': 4, 'rs\n': 4, 's\nd': 5, '\nde': 5, 'def': 5, 'ef ': 5, 'f a': 1, 'ddi': 8, 'dit': 8, 'iti': 8, 'on(': 8, 'n()': 8, '():': 5, '):\n': 5, ':\n ': 15, '\n  ': 54, '  a': 5, ' a ': 16, 'a =': 4, ' = ': 13, '= f': 10, ' fl': 10, 'flo': 10, 'loa': 10, 'oat': 10, 'at(': 10, 't(i': 10, '(in': 10, 'inp': 11, 'npu': 11, 'put': 11, 'ut(': 9, 't(""': 18, '(""T': 9, '""Ty': 9, 'Typ': 9, 'ype': 9, 'pe ': 9, 'e a': 9, 'a n': 4, 'er:': 9, 'r: ': 9, ': ""': 14, ' "")': 10, '""))': 10, '))\n': 10, ')\n ': 21, '  b': 6, ' b ': 6, 'b =': 6, 'ut ': 2, 't (': 1, ' (""': 1, ' an': 7, 'ano': 5, 'not': 5, 'oth': 5, 'the': 6, 'her': 5, 'er ': 6, 'r n': 5, '  p': 10, ' pr': 11, 'pri': 10, 'rin': 11, 'int': 10, 'nt(': 10, '(""a': 1, '""ad': 1, 'on:': 6, 'n: ': 5, ' "" ': 1, '"" ,': 1, ' , ': 1, ', a': 4, 'a +': 2, ' +b': 1, '+b)': 1, 'b)\n': 4, '  o': 4, ' op': 7, 'ope': 8, 'per': 8, 'era': 9, 'rat': 8, 'on_': 8, 'n_a': 4, '_ad': 4, 'n =': 4, ' =a': 1, '=a ': 1, ' + ': 1, '+ b': 1, ' b\n': 4, 'b\n\n': 4, '\n\n ': 6, '  g': 4, ' gl': 4, 'glo': 4, 'lob': 4, 'oba': 4, 'bal': 4, 'al ': 4, 'l h': 4, ' hi': 8, 'ry\n': 5, 'y\n ': 5, '  h': 4, 'ry.': 4, 'y.a': 4, '.ap': 4, 'app': 4, 'ppe': 4, 'pen': 4, 'end': 5, 'nd(': 4, 'd(o': 4, '(op': 4, 'on)': 4, 'n)\n': 4, ')\n\n': 7, 'o s': 3, ' su': 3, 'sub': 3, 'ubt': 5, 'btr': 5, 'tra': 5, 'rac': 6, 'act': 6, 'ct ': 2, 't t': 2, 'f s': 2, '(""S': 1, '""Su': 1, 'Sub': 2, ' "",': 3, '"", ': 3, 'a -': 2, ' - ': 9, '- b': 2, ' b)': 3, '= a': 3, 'o d': 1, ' di': 3, 'div': 6, 'ivi': 7, 'vid': 1, 'ide': 1, 'de ': 1, 'e t': 1, 'f d': 1, 'vis': 6, 'isi': 6, 'sio': 6, '  w': 1, ' wh': 3, 'whi': 4, 'hil': 3, 'ile': 3, 'le ': 3, 'e b': 2, ' ==': 7, '== ': 7, '= 0': 1, ' 0:': 1, '0:\n': 1, '(""E': 2, '""Er': 1, 'Err': 1, 'rro': 1, 'ro!': 1, 'o! ': 1, '! T': 1, ' Tr': 2, 'Try': 1, 'y a': 1, ' ag': 1, 'aga': 1, 'gai': 1, 'ain': 1, 'in""': 1, 'n"")': 2, '"")\n': 5, '(""d': 1, '""di': 1, 'a /': 2, ' / ': 2, '/ b': 2, 'n_d': 2, '_di': 2, 'o m': 1, ' mu': 3, 'mul': 6, 'ult': 8, 'lti': 7, 'tip': 7, 'ipl': 7, 'ply': 1, 'ly ': 1, 'y t': 1, 'f m': 1, 'pli': 6, 'lic': 13, 'ica': 6, 'cat': 6, '(""m': 1, '""mu': 1, 'a *': 2, ' * ': 2, '* b': 2, 'n_m': 2, '_mu': 2, '# S': 1, ' St': 1, 'Sto': 1, 'ori': 1, 'g r': 1, ' re': 1, 'res': 1, 'esu': 1, 'sul': 1, 'lts': 1, 'ts ': 1, 's t': 1, ' se': 1, 'see': 1, 'ee ': 1, 'e p': 1, 'pre': 3, 'rev': 3, 'evi': 3, 'vio': 3, 'iou': 3, 'ous': 3, 'us ': 1, 's c': 1, ' ca': 1, 'cal': 3, 'alc': 4, 'lcu': 4, 'cul': 4, 'ula': 4, 'lat': 4, ' sh': 2, 'sho': 2, 'how': 2, 'owi': 2, 'win': 2, 'ng_': 2, 'g_p': 2, '_pr': 2, 'us_': 2, 's_c': 2, '_ca': 2, 'ns(': 2, 's()': 2, 't(h': 1, '(hi': 1, 'ry)': 1, 'y)\n': 1, '\n\n\n': 1, 'T 2': 1, ' 2:': 2, '2: ': 1, ': I': 1, ' In': 2, 'Int': 1, 'nte': 2, 'ter': 2, 'g w': 1, ' wi': 3, 'wit': 2, 'ith': 2, 'th ': 2, 'h u': 1, ' us': 2, 'use': 2, 'ser': 2, 'er\n': 2, 'r\n#': 1, '# I': 1, 'Inf': 1, 'nfi': 1, 'fin': 1, 'ini': 1, 'nit': 1, 'ite': 1, 'te ': 1, 'e l': 2, ' lo': 2, 'loo': 2, 'oop': 2, 'op ': 2, 'p w': 1, 'hic': 1, 'ich': 1, 'ch ': 1, 'h w': 1, 'wil': 1, 'ill': 1, 'll ': 1, 'l e': 1, ' en': 1, 'nd ': 1, 'd w': 1, 'h t': 1, ' th': 1, 'he ': 1, ' br': 3, 'bre': 3, 'eak': 3, 'ak ': 3, 'k s': 2, ' st': 3, 'sta': 2, 'tat': 2, 'ate': 3, 'tem': 2, 'eme': 2, 'men': 2, 'ent': 2, 'nt\n': 1, 't\nw': 1, '\nwh': 1, 'e T': 1, 'Tru': 1, 'rue': 1, 'ue:': 1, 'e:\n': 2, '(""M': 1, '""My': 1, 'My ': 1, 'y C': 1, ' Ca': 1, 'Cal': 1, 'ato': 1, 'or ': 1, 'r -': 1, '- 2': 1, ' 20': 1, '202': 1, '021': 1, '21""': 1, '1"")': 1, '(""-': 1, '""--': 1, '---': 16, '--M': 1, '-ME': 1, 'MEN': 1, 'ENU': 1, 'NU-': 1, 'U--': 1, '--""': 1, '-"")': 1, '(""""': 1, '""""""': 2, '""""S': 1, '""Se': 1, 'Sel': 1, 'ele': 1, 'lec': 1, 'ect': 1, 't a': 1, 'an ': 2, 'n o': 2, 'opt': 3, 'pti': 3, 'n:\n': 1, '  1': 1, ' 1 ': 1, '1 -': 1, '- A': 1, ' Ad': 1, 'Add': 1, 'on\n': 4, 'n\n ': 4, '  2': 1, ' 2 ': 1, '2 -': 1, '- S': 1, ' Su': 1, '  3': 1, ' 3 ': 1, '3 -': 1, '- M': 1, ' Mu': 1, 'Mul': 1, '  4': 1, ' 4 ': 1, '4 -': 1, '- D': 1, ' Di': 1, 'Div': 1, '  5': 1, ' 5 ': 1, '5 -': 1, '- H': 1, ' Hi': 1, 'His': 1, '  6': 1, ' 6 ': 1, '6 -': 1, '- T': 1, ' Te': 1, 'Ter': 1, 'erm': 1, 'rmi': 1, 'min': 1, 'ina': 1, 'nat': 1, 'te\n': 1, 'e\n ': 1, '  ""': 1, ' """"': 1, '"""")': 1, '  #': 2, ' # ': 2, '# T': 1, ' Ta': 1, 'Tak': 1, 'ake': 1, 'ke ': 1, 'e i': 1, ' in': 1, 't f': 1, ' fr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm u': 1, 'r\n ': 1, '  c': 1, ' cl': 7, 'cli': 7, 'ick': 7, 'ck ': 7, 'k =': 7, '""En': 1, 'Ent': 1, 'r a': 1, '  i': 1, ' if': 1, 'if ': 6, 'f c': 6, '= 1': 1, '1:\n': 1, '()\n': 5, '  e': 6, ' el': 6, 'eli': 5, 'lif': 5, '= 2': 1, '2:\n': 1, '  s': 2, '= 3': 1, ' 3:': 1, '3:\n': 1, '  m': 1, '= 4': 1, ' 4:': 1, '4:\n': 1, '  d': 1, '= 5': 1, ' 5:': 1, '5:\n': 1, '= 6': 1, ' 6:': 1, '6:\n': 1, 'k  ': 1, '# b': 1, 'nt ': 1, 'top': 1, 'p a': 1, 'a w': 1, 'op\n': 1, 'p\n ': 1, 'els': 1, 'lse': 1, 'se:': 1, '(""I': 1, '""In': 1, 'Inv': 1, 'nva': 1, 'val': 1, 'ali': 1, 'lid': 1, 'id ': 1, 'd o': 1, 'on""': 1}"
Alice Gana,basic_calculator2.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'###############################################################################': 4, '#': 11, 'part': 2, '1:': 2, 'creating': 1, 'functions': 1, 'function': 4, 'to': 6, 'take': 1, 'input': 2, 'from': 2, 'user': 3, 'def': 6, 'taking_input_from_user():': 1, 'a': 2, '=': 10, 'float(input(""enter': 2, 'number:': 3, '""))': 4, 'b': 1, 'float(input': 1, '(""enter': 1, 'another': 2, 'return': 5, 'a,b': 1, 'add': 2, 'two': 4, 'numbers': 4, '(x,y):': 1, 'operation_add=x+y': 1, 'print(""addition:': 1, '"",operation_add)': 1, 'operation_add': 1, '#function': 1, 'subtract': 1, 'subtract(x,y):': 1, 'operation_subtract=x-y': 1, 'print(""subtraction:': 1, '"",x-y)': 1, 'operation_subtract': 1, 'divide': 1, 'divisao(x,y):': 1, 'while': 2, 'y': 3, '==': 5, '0:': 1, 'print(""warning:': 1, 'invalid': 1, 'equation!': 1, 'try': 1, 'again!"")': 1, 'operation_division': 2, 'x': 1, '/': 1, 'print(""division:': 1, '"",x/y)': 1, 'multiply': 1, 'multiplication(x,y):': 1, 'operation_multiplication=x*y': 1, 'print(""multiplication:': 1, '"",': 1, 'x*y)': 1, 'operation_multiplication': 1, 'storing': 1, 'results': 1, 'see': 1, 'previous': 1, 'calculations': 1, 'history(calculations):': 1, 'print(calculations)': 1, 'previous_calculations': 1, '[]': 1, '2:': 1, 'interacting': 1, 'with': 1, 'true:': 1, 'print(""my': 1, 'calculator': 1, '-': 7, '2021"")': 1, 'print(""----------menu----------"")': 1, 'print(""""""type': 1, 'an': 2, 'option:': 2, '1': 1, 'addition': 1, '2': 1, 'subtraction': 1, '3': 1, 'multiplication': 1, '4': 1, 'division': 1, '5': 1, 'history': 1, '6': 1, 'terminate': 1, '"""""")': 1, '#taking': 1, 'click': 9, 'float(input(""type': 1, 'num_1,': 2, 'num_2=0,0': 1, 'if': 2, '>=1': 1, 'and': 1, '<=4:': 1, 'num_2': 1, 'taking_input_from_user()': 1, 'operation=add(num_1,num_2)': 1, 'previous_calculations.append(operation)': 4, 'elif': 5, '==2:': 1, 'operation': 3, 'subtract(num_1,': 1, 'num_2)': 3, '3:': 1, 'multiplication(num_1,': 1, '==4:': 1, 'divisao(num_1,': 1, '5:': 1, 'history(previous_calculations)': 1, '6:': 1, 'break': 1, 'else:': 1, 'print(""invalid': 1, 'option"")': 1}","{'\n##': 4, '###': 308, '##\n': 4, '#\n#': 6, '\n#\n': 4, '\n# ': 7, '#  ': 2, '   ': 161, '  P': 2, ' PA': 2, 'PAR': 2, 'ART': 2, 'RT ': 2, 'T 1': 1, ' 1:': 2, '1: ': 1, ': C': 1, ' Cr': 1, 'Cre': 1, 'rea': 2, 'eat': 1, 'ati': 34, 'tin': 2, 'ing': 6, 'ng ': 4, 'g f': 1, ' fu': 1, 'fun': 1, 'unc': 6, 'nct': 6, 'cti': 9, 'tio': 46, 'ion': 50, 'ons': 10, 'ns\n': 2, 's\n#': 1, '#\n\n': 2, '\n\n#': 8, '# F': 4, ' Fu': 4, 'Fun': 5, 'on ': 9, 'n t': 5, ' to': 6, 'to ': 6, 'o t': 1, ' ta': 3, 'tak': 3, 'ake': 1, 'ke ': 1, 'e i': 1, ' in': 2, 'inp': 8, 'npu': 8, 'put': 8, 'ut ': 3, 't f': 2, ' fr': 2, 'fro': 4, 'rom': 4, 'om ': 2, 'm u': 2, ' us': 3, 'use': 5, 'ser': 5, 'er\n': 3, 'r\nd': 1, '\nde': 6, 'def': 6, 'ef ': 6, 'f t': 1, 'aki': 3, 'kin': 3, 'ng_': 2, 'g_i': 2, '_in': 2, 'ut_': 2, 't_f': 2, '_fr': 2, 'om_': 2, 'm_u': 2, '_us': 2, 'er(': 2, 'r()': 2, '():': 1, '):\n': 6, ':\n ': 17, '\n  ': 51, '  a': 1, ' a ': 2, 'a =': 1, ' = ': 10, '= f': 4, ' fl': 4, 'flo': 4, 'loa': 4, 'oat': 4, 'at(': 4, 't(i': 4, '(in': 4, 'ut(': 3, 't(""': 12, '(""E': 3, '""En': 3, 'Ent': 3, 'nte': 4, 'ter': 4, 'er ': 5, 'r a': 3, 'a n': 1, ' nu': 14, 'num': 19, 'umb': 7, 'mbe': 7, 'ber': 7, 'er:': 3, 'r: ': 3, ': ""': 8, ' "")': 4, '""))': 4, '))\n': 4, ')\n ': 15, '  b': 2, ' b ': 1, 'b =': 1, 't (': 1, ' (""': 1, ' an': 5, 'ano': 2, 'not': 2, 'oth': 2, 'the': 2, 'her': 2, 'r n': 2, '  r': 5, ' re': 6, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 5, 'n a': 1, ' a,': 1, 'a,b': 1, ',b\n': 1, 'b\n\n': 1, 'o a': 1, ' ad': 2, 'add': 6, 'dd ': 2, 'd t': 1, ' tw': 4, 'two': 4, 'wo ': 4, 'o n': 4, 'ers': 4, 'rs\n': 4, 's\nd': 5, 'f a': 1, 'd (': 1, ' (x': 1, '(x,': 4, 'x,y': 4, ',y)': 4, 'y):': 4, '  o': 8, ' op': 15, 'ope': 17, 'per': 17, 'era': 18, 'rat': 17, 'on_': 9, 'n_a': 3, '_ad': 3, 'dd=': 1, 'd=x': 1, '=x+': 1, 'x+y': 1, '+y\n': 1, 'y\n ': 5, '  p': 14, ' pr': 15, 'pri': 10, 'rin': 11, 'int': 10, 'nt(': 10, '(""A': 1, '""Ad': 1, 'Add': 2, 'ddi': 2, 'dit': 2, 'iti': 2, 'on:': 6, 'n: ': 5, ' "",': 4, '"",o': 1, ',op': 1, 'dd)': 1, 'd)\n': 1, 'n o': 6, 'dd\n': 1, 'd\n\n': 1, '\n#F': 1, '#Fu': 1, 'o s': 2, ' su': 3, 'sub': 5, 'ubt': 7, 'btr': 7, 'tra': 7, 'rac': 8, 'act': 8, 'ct ': 1, 't t': 1, 'f s': 1, 'ct(': 2, 't(x': 1, 'n_s': 2, '_su': 2, 'ct=': 1, 't=x': 1, '=x-': 1, 'x-y': 2, '-y\n': 1, '(""S': 1, '""Su': 1, 'Sub': 2, '"",x': 2, ',x-': 1, '-y)': 1, 'y)\n': 3, 'ct\n': 1, 't\n\n': 1, 'o d': 1, ' di': 3, 'div': 5, 'ivi': 7, 'vid': 1, 'ide': 1, 'de ': 1, 'e t': 1, 'f d': 1, 'vis': 6, 'isa': 2, 'sao': 2, 'ao(': 2, 'o(x': 1, '  w': 1, ' wh': 1, 'whi': 2, 'hil': 2, 'ile': 2, 'le ': 2, 'e y': 1, ' y ': 2, 'y =': 2, ' ==': 7, '== ': 5, '= 0': 1, ' 0:': 1, '0:\n': 1, '(""W': 1, '""WA': 1, 'WAR': 1, 'ARN': 1, 'RNI': 1, 'NIN': 1, 'ING': 1, 'NG:': 1, 'G: ': 1, ': I': 2, ' In': 2, 'Inv': 2, 'nva': 2, 'val': 2, 'ali': 2, 'lid': 2, 'id ': 2, 'd E': 1, ' Eq': 1, 'Equ': 1, 'qua': 1, 'uat': 1, 'on!': 1, 'n! ': 1, '! T': 1, ' Tr': 2, 'Try': 1, 'ry ': 1, 'y a': 1, ' ag': 1, 'aga': 1, 'gai': 1, 'ain': 1, 'in!': 1, 'n!""': 1, '!"")': 1, '"")\n': 5, '  y': 1, 'n_d': 2, '_di': 2, 'isi': 4, 'sio': 4, 'n =': 4, '= x': 1, ' x ': 1, 'x /': 1, ' / ': 1, '/ y': 1, ' y\n': 1, '(""D': 1, '""Di': 1, 'Div': 2, ',x/': 1, 'x/y': 1, '/y)': 1, 'on\n': 6, 'n\n\n': 2, 'o m': 1, ' mu': 3, 'mul': 5, 'ult': 8, 'lti': 7, 'tip': 7, 'ipl': 7, 'ply': 1, 'ly ': 1, 'y t': 1, 'f m': 1, 'pli': 6, 'lic': 15, 'ica': 6, 'cat': 6, 'on(': 2, 'n(x': 1, 'n_m': 2, '_mu': 2, 'on=': 2, 'n=x': 1, '=x*': 1, 'x*y': 2, '*y\n': 1, '(""M': 2, '""Mu': 1, 'Mul': 2, '"", ': 1, ', x': 1, ' x*': 1, '*y)': 1, '# S': 1, ' St': 1, 'Sto': 1, 'tor': 5, 'ori': 1, 'g r': 1, 'res': 1, 'esu': 1, 'sul': 1, 'lts': 1, 'ts ': 1, 's t': 1, ' se': 1, 'see': 1, 'ee ': 1, 'e p': 1, 'pre': 7, 'rev': 7, 'evi': 7, 'vio': 7, 'iou': 7, 'ous': 7, 'us ': 1, 's c': 1, ' ca': 1, 'cal': 9, 'alc': 10, 'lcu': 10, 'cul': 10, 'ula': 10, 'lat': 10, 'f h': 1, ' hi': 2, 'his': 2, 'ist': 3, 'sto': 3, 'ory': 3, 'ry(': 2, 'y(c': 1, '(ca': 2, 'ns)': 3, 's):': 1, 't(c': 1, 's)\n': 2, ')\n\n': 9, '\n\np': 1, '\npr': 1, 'us_': 6, 's_c': 6, '_ca': 6, 'ns ': 1, 's =': 1, '= [': 1, ' []': 1, '[]\n': 1, ']\n\n': 1, 'T 2': 1, ' 2:': 1, '2: ': 1, 'Int': 1, 'g w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'th ': 1, 'h u': 1, 'r\n#': 1, '\n\nw': 1, '\nwh': 1, 'e T': 1, 'Tru': 1, 'rue': 1, 'ue:': 1, 'e:\n': 2, '""My': 1, 'My ': 1, 'y C': 1, ' Ca': 1, 'Cal': 1, 'ato': 1, 'or ': 1, 'r -': 1, ' - ': 7, '- 2': 1, ' 20': 1, '202': 1, '021': 1, '21""': 1, '1"")': 1, '(""-': 1, '""--': 1, '---': 16, '--M': 1, '-ME': 1, 'MEN': 1, 'ENU': 1, 'NU-': 1, 'U--': 1, '--""': 1, '-"")': 1, '(""""': 1, '""""""': 2, '""""T': 1, '""Ty': 2, 'Typ': 2, 'ype': 2, 'pe ': 2, 'e a': 2, 'an ': 2, 'opt': 3, 'pti': 3, 'n:\n': 1, '  1': 1, ' 1 ': 1, '1 -': 1, '- A': 1, ' Ad': 1, 'n\n ': 4, '  2': 1, ' 2 ': 1, '2 -': 1, '- S': 1, ' Su': 1, '  3': 1, ' 3 ': 1, '3 -': 1, '- M': 1, ' Mu': 1, '  4': 1, ' 4 ': 1, '4 -': 1, '- D': 1, ' Di': 1, '  5': 1, ' 5 ': 1, '5 -': 1, '- H': 1, ' Hi': 1, 'His': 1, 'ry\n': 1, '  6': 1, ' 6 ': 1, '6 -': 1, '- T': 1, ' Te': 1, 'Ter': 1, 'erm': 1, 'rmi': 1, 'min': 1, 'ina': 1, 'nat': 1, 'ate': 1, 'te\n': 1, 'e\n ': 1, '  ""': 1, ' """"': 1, '"""")': 1, '\n#T': 1, '#Ta': 1, 'Tak': 1, 'g i': 1, 'r\n ': 1, '  c': 1, ' cl': 9, 'cli': 9, 'ick': 9, 'ck ': 9, 'k =': 7, '(""T': 1, '  n': 2, 'um_': 12, 'm_1': 6, '_1,': 6, '1, ': 5, ', n': 5, 'm_2': 6, '_2=': 1, '2=0': 1, '=0,': 1, '0,0': 1, ',0\n': 1, '0\n\n': 1, '\n\n ': 7, '  i': 2, ' if': 2, 'if ': 7, 'f c': 7, 'k >': 1, ' >=': 1, '>=1': 1, '=1 ': 1, '1 a': 1, 'and': 1, 'nd ': 1, 'd c': 1, 'k <': 1, ' <=': 1, '<=4': 1, '=4:': 2, '4:\n': 2, '_2 ': 1, '2 =': 1, '= t': 1, '()\n': 1, '= 1': 1, '1:\n': 1, 'n=a': 1, '=ad': 1, 'dd(': 1, 'd(n': 1, '(nu': 4, '1,n': 1, ',nu': 1, '_2)': 4, '2)\n': 4, 'ns.': 4, 's.a': 4, '.ap': 4, 'app': 4, 'ppe': 4, 'pen': 4, 'end': 4, 'nd(': 4, 'd(o': 4, '(op': 4, 'on)': 4, 'n)\n': 4, '  e': 6, ' el': 6, 'eli': 5, 'lif': 5, '==2': 1, '=2:': 1, '2:\n': 1, '= s': 1, 't(n': 1, '= 3': 1, ' 3:': 1, '3:\n': 1, '= m': 1, 'n(n': 1, '==4': 1, '= d': 1, 'o(n': 1, '= 5': 1, ' 5:': 1, '5:\n': 1, '  h': 1, 'y(p': 1, '(pr': 1, '= 6': 1, ' 6:': 1, '6:\n': 1, ' br': 1, 'bre': 1, 'eak': 1, 'ak\n': 1, 'k\n ': 1, 'els': 1, 'lse': 1, 'se:': 1, '(""I': 1, '""In': 1, 'd o': 1, 'on""': 1, 'n"")': 1, '\n\n\n': 1}"
Alice Gana,basic_calculator3.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'datetime': 1, '###############################################################################': 4, '#': 16, 'part': 2, '1:': 2, 'creating': 1, 'four': 1, 'functions': 1, 'history': 6, '=': 26, '[]': 5, '#function': 4, 'to': 8, 'add': 1, 'multiple': 3, 'numbers': 7, 'def': 5, 'add():': 1, 'operation_add': 3, '0': 2, 'user_input': 14, 'input(""enter': 8, 'a': 4, 'number:"")': 6, '#this': 3, 'while': 9, 'loop': 8, 'will': 4, 'happen': 3, 'until': 4, 'the': 21, 'user': 6, 'enters': 4, 'an': 6, 'empty': 4, 'string': 4, '(by': 4, 'pressing': 4, '""enter"")': 4, '!=': 6, '"""":': 4, 'numbers.append(float(user_input))': 4, 'another': 4, 'for': 9, 'repeats': 4, 'addition': 2, 'operation': 5, 'n': 8, 'in': 5, 'numbers:': 4, '+': 21, '#displaying': 2, 'answer:': 2, 'print(f""the': 4, 'sum': 2, 'of': 8, '{numbers}': 4, 'is': 8, 'equal': 8, '{operation_add}"")': 1, '#inserting': 2, 'answer': 6, 'inside': 4, 'list:': 3, 'sentence': 4, '""the': 3, '""': 12, 'str(numbers)': 4, 'to:': 4, 'str(operation_add)': 1, '""\\n""': 4, 'str(': 5, 'datetime.datetime.now().strftime(""%d/%m/%y': 4, '%h:%m:%s""))': 4, 'history.append(sentence)': 4, 'subtract': 1, 'subtraction():': 1, 'operation_subtraction': 3, 'this': 5, 'continue': 1, 'subtraction': 4, '-': 8, 'displaying': 2, '{operation_subtraction}"")': 1, 'inserting': 2, '""a': 1, 'str(operation_subtraction)': 1, 'division():': 1, 'operation_division': 3, '1': 3, '""""': 2, 'or': 4, 'len(numbers)': 1, '<': 1, '2:': 3, 'if': 3, 'else:': 3, 'print(""invalid': 3, 'operation!"")': 1, 'number': 2, 'click': 9, 'enter:"")': 2, 'division': 4, '*': 2, '{operation_division}"")': 1, 'list': 1, 'operation_division)': 1, 'multiply': 1, 'multiplication():': 1, 'operation_multiplication': 3, 'len(numbers)<2:': 1, 'operation"")': 1, 'multiplication': 4, '{operation_multiplication}"")': 1, 'str(operation_multiplication)': 1, 'show': 1, ""user's"": 1, 'previous': 1, 'calculations': 1, 'previous_calculations():': 1, 'line': 1, 'history:': 1, 'print(""\\n"",': 1, 'line)': 1, 'interacting': 1, 'with': 1, 'true:': 1, 'print(""my': 1, 'calculator': 1, '2021"")': 1, 'print(""----------menu----------"")': 1, 'print(""""""type': 1, 'option:': 2, '2': 1, '3': 1, '4': 1, '5': 1, '6': 1, 'terminate': 1, '"""""")': 1, 'selects': 1, 'int(input(""select': 1, '""))': 1, '==': 6, 'add()': 1, 'elif': 5, 'subtraction()': 1, '3:': 1, 'multiplication()': 1, '4:': 1, 'division()': 1, '5:': 1, 'previous_calculations()': 1, '6:': 1, 'break': 1, 'option.': 1, 'please': 1, 'try': 1, 'again': 1, ':-)"")': 1}","{'\nim': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't d': 1, ' da': 5, 'dat': 9, 'ate': 10, 'tet': 9, 'eti': 9, 'tim': 13, 'ime': 13, 'me\n': 1, 'e\n\n': 1, '\n\n#': 6, '\n##': 4, '###': 308, '##\n': 4, '#\n#': 6, '\n#\n': 4, '\n# ': 2, '#  ': 2, '   ': 340, '  P': 2, ' PA': 2, 'PAR': 2, 'ART': 2, 'RT ': 2, 'T 1': 1, ' 1:': 2, '1: ': 1, ': C': 1, ' Cr': 1, 'Cre': 1, 'rea': 2, 'eat': 5, 'ati': 42, 'tin': 7, 'ing': 18, 'ng ': 18, 'g f': 1, ' fo': 6, 'fou': 1, 'our': 1, 'ur ': 1, 'r f': 1, ' fu': 1, 'fun': 1, 'unc': 5, 'nct': 5, 'cti': 17, 'tio': 62, 'ion': 73, 'ons': 4, 'ns\n': 2, 's\n#': 1, '#\n\n': 2, '\n\nh': 1, '\nhi': 1, 'his': 18, 'ist': 15, 'sto': 11, 'tor': 12, 'ory': 11, 'ry ': 6, 'y =': 1, ' = ': 26, '= [': 5, ' []': 5, '[]\n': 5, ']\n\n': 1, '\n#F': 4, '#Fu': 4, 'Fun': 4, 'on ': 23, 'n t': 4, ' to': 12, 'to ': 8, 'o a': 1, ' ad': 4, 'add': 9, 'dd ': 4, 'd m': 1, ' mu': 9, 'mul': 14, 'ult': 15, 'lti': 15, 'tip': 15, 'ipl': 15, 'ple': 3, 'le ': 12, 'e n': 3, ' nu': 23, 'num': 33, 'umb': 33, 'mbe': 33, 'ber': 33, 'ers': 29, 'rs\n': 3, 's\nd': 4, '\nde': 5, 'def': 5, 'ef ': 5, 'f a': 1, 'dd(': 2, 'd()': 2, '():': 5, '):\n': 5, ':\n ': 32, '\n  ': 99, '  o': 9, ' op': 23, 'ope': 27, 'per': 27, 'era': 28, 'rat': 27, 'on_': 20, 'n_a': 5, '_ad': 5, 'd =': 2, '= 0': 2, ' 0\n': 2, '0\n ': 2, '  n': 8, 'rs ': 8, 's =': 4, ']\n ': 4, '  u': 8, ' us': 20, 'use': 24, 'ser': 29, 'er_': 18, 'r_i': 18, '_in': 18, 'inp': 27, 'npu': 27, 'put': 27, 'ut ': 14, 't =': 8, '= i': 9, ' in': 18, 'ut(': 9, 't(""': 16, '(""E': 8, '""En': 8, 'Ent': 8, 'nte': 27, 'ter': 19, 'er ': 23, 'r a': 8, ' a ': 4, 'a n': 4, 'er:': 10, 'r:""': 8, ':"")': 8, '"")\n': 22, ')\n\n': 14, '\n\n ': 10, '  #': 17, ' #T': 3, '#Th': 3, 'Thi': 8, 'is ': 16, 's W': 4, ' Wh': 4, 'Whi': 4, 'hil': 9, 'ile': 9, 'e L': 4, ' Lo': 8, 'Loo': 8, 'oop': 8, 'op ': 8, 'p w': 4, ' wi': 5, 'wil': 4, 'ill': 4, 'll ': 4, 'l h': 3, ' ha': 3, 'hap': 3, 'app': 11, 'ppe': 11, 'pen': 11, 'en ': 3, 'n u': 3, ' un': 4, 'unt': 4, 'nti': 5, 'til': 4, 'il ': 4, 'l t': 12, ' th': 21, 'the': 25, 'he ': 28, 'e u': 9, 'r e': 4, ' en': 6, 'ent': 18, 's a': 4, ' an': 18, 'an ': 6, 'n e': 4, ' em': 4, 'emp': 4, 'mpt': 4, 'pty': 4, 'ty ': 4, 'y s': 4, ' st': 16, 'str': 20, 'tri': 4, 'rin': 15, 'g (': 4, ' (b': 4, '(by': 4, 'by ': 4, 'y p': 4, ' pr': 18, 'pre': 7, 'res': 4, 'ess': 4, 'ssi': 4, 'sin': 4, 'g ""': 4, ' ""e': 4, '""en': 4, 'er""': 4, 'r"")': 4, ')\n ': 27, '  w': 4, ' wh': 4, 'whi': 5, 't !': 6, ' !=': 6, '!= ': 6, '= ""': 10, ' """"': 7, '"""":': 4, '"":\n': 4, 'rs.': 4, 's.a': 4, '.ap': 8, 'end': 8, 'nd(': 8, 'd(f': 4, '(fl': 4, 'flo': 4, 'loa': 4, 'oat': 4, 'at(': 4, 't(u': 4, '(us': 4, 'ut)': 4, 't))': 4, '))\n': 9, 'ano': 4, 'not': 4, 'oth': 4, 'her': 4, 'r n': 8, 's F': 4, ' Fo': 4, 'For': 4, 'or ': 14, 'r L': 4, 'p r': 4, ' re': 4, 'rep': 4, 'epe': 4, 'pea': 4, 'ats': 4, 'ts ': 5, 's t': 5, 'e a': 10, 'ddi': 2, 'dit': 2, 'iti': 2, 'n o': 12, 'on\n': 9, 'n\n ': 11, '  f': 5, 'for': 5, ' n ': 4, 'n i': 4, 'in ': 6, 'n n': 4, 'rs:': 4, 's:\n': 4, '= o': 4, 'd +': 1, ' + ': 21, '+ n': 1, ' n\n': 4, ' #D': 2, '#Di': 2, 'Dis': 4, 'isp': 4, 'spl': 4, 'pla': 4, 'lay': 4, 'ayi': 4, 'yin': 4, 'g t': 8, 'ans': 8, 'nsw': 8, 'swe': 8, 'wer': 8, 'r:\n': 2, '  p': 12, 'pri': 11, 'int': 12, 'nt(': 12, 't(f': 4, '(f""': 4, 'f""T': 4, '""Th': 7, 'The': 7, 'e s': 4, ' su': 8, 'sum': 2, 'um ': 2, 'm o': 2, ' of': 8, 'of ': 8, 'f {': 4, ' {n': 4, '{nu': 4, 'rs}': 4, 's} ': 4, '} i': 4, ' is': 8, 's e': 8, ' eq': 8, 'equ': 8, 'qua': 8, 'ual': 8, 'al ': 8, 'o {': 4, ' {o': 4, '{op': 4, 'dd}': 1, 'd}""': 1, '}"")': 4, ' #I': 2, '#In': 2, 'Ins': 4, 'nse': 4, 'ert': 4, 'rti': 4, 'r i': 4, 'ins': 4, 'nsi': 4, 'sid': 4, 'ide': 4, 'de ': 4, 'e t': 5, 'e h': 4, ' hi': 9, 'y l': 4, ' li': 6, 'lis': 4, 'st:': 3, 't:\n': 3, '  s': 5, ' se': 5, 'sen': 8, 'ten': 8, 'enc': 8, 'nce': 8, 'ce ': 4, 'e =': 4, ' ""T': 3, 'f ""': 4, ' "" ': 12, '"" +': 12, '+ s': 12, 'tr(': 12, 'r(n': 4, '(nu': 6, 'rs)': 6, 's) ': 5, ') +': 8, '+ ""': 8, '"" i': 4, 'to:': 4, 'o: ': 4, ': ""': 5, 'r(o': 3, '(op': 3, 'dd)': 1, 'd) ': 1, ' ""\\': 4, '""\\n': 5, '\\n""': 5, 'n"" ': 4, 'r(\n': 5, '(\n ': 5, '  d': 5, 'me.': 8, 'e.d': 4, '.da': 4, 'e.n': 4, '.no': 4, 'now': 4, 'ow(': 4, 'w()': 4, '().': 4, ').s': 4, '.st': 4, 'trf': 4, 'rft': 4, 'fti': 4, 'me(': 4, 'e(""': 4, '(""%': 4, '""%d': 4, '%d/': 4, 'd/%': 4, '/%m': 4, '%m/': 4, 'm/%': 4, '/%Y': 4, '%Y ': 4, 'Y %': 4, ' %H': 4, '%H:': 4, 'H:%': 4, ':%M': 4, '%M:': 4, 'M:%': 4, ':%S': 4, '%S""': 4, 'S"")': 4, '""))': 5, '  h': 4, 'ry.': 4, 'y.a': 4, 'd(s': 4, '(se': 4, 'ce)': 4, 'e)\n': 5, 'o s': 2, 'sub': 11, 'ubt': 12, 'btr': 12, 'tra': 12, 'rac': 13, 'act': 13, 'ct ': 2, 't m': 1, 'f s': 1, 'on(': 6, 'n()': 6, 'n_s': 5, '_su': 5, 'n =': 6, ' # ': 10, '# T': 5, ' Th': 5, 'l c': 1, ' co': 1, 'con': 1, 'ont': 1, 'inu': 1, 'nue': 1, 'ue ': 1, 'n -': 1, ' - ': 8, '- n': 1, '# D': 2, ' Di': 3, 'on}': 3, 'n}""': 3, '# I': 2, ' In': 3, ' ""A': 1, '""A ': 1, 'A s': 1, 'on)': 3, 'n) ': 3, '\n\n\n': 3, '\n\nd': 1, 'f d': 1, ' di': 5, 'div': 10, 'ivi': 11, 'vis': 11, 'isi': 11, 'sio': 11, 'n_d': 5, '_di': 5, '= 1': 3, ' 1\n': 2, '1\n ': 2, '"""" ': 2, '"" o': 2, ' or': 4, 'r l': 3, ' le': 2, 'len': 2, 'en(': 2, 'n(n': 2, ') <': 1, ' < ': 1, '< 2': 1, ' 2:': 3, '2:\n': 3, '  i': 3, ' if': 3, 'if ': 8, 'f u': 2, '  e': 8, ' el': 8, 'els': 3, 'lse': 3, 'se:': 3, 'e:\n': 4, '(""I': 3, '""In': 3, 'Inv': 3, 'nva': 3, 'val': 3, 'ali': 3, 'lid': 3, 'id ': 3, 'd o': 3, 'on!': 1, 'n!""': 1, '!"")': 1, 'r o': 2, 'r c': 2, ' cl': 9, 'cli': 9, 'lic': 20, 'ick': 9, 'ck ': 9, 'k e': 2, 'e d': 3, 'n *': 2, ' * ': 2, '* n': 2, 'n\n\n': 2, 'er\n': 3, 'r\n ': 2, 'st\n': 1, 't\n ': 1, 'o m': 1, 'ply': 1, 'ly ': 1, 'y m': 1, 'f m': 1, 'pli': 11, 'ica': 11, 'cat': 11, 'n_m': 5, '_mu': 5, 's)<': 1, ')<2': 1, '<2:': 1, 'on""': 1, 'n"")': 1, 'e m': 3, ' sh': 1, 'sho': 1, 'how': 1, 'ow ': 1, 'w u': 1, ""er'"": 1, ""r's"": 1, ""'s "": 1, 's p': 1, 'rev': 3, 'evi': 3, 'vio': 3, 'iou': 3, 'ous': 3, 'us ': 1, 's c': 1, ' ca': 1, 'cal': 3, 'alc': 4, 'lcu': 4, 'cul': 4, 'ula': 4, 'lat': 4, 'f p': 1, 'us_': 2, 's_c': 2, '_ca': 2, 'ns(': 2, 's()': 2, 'lin': 2, 'ine': 2, 'ne ': 1, 'e i': 1, 'n h': 1, 'ry:': 1, 'y:\n': 1, '(""\\': 1, 'n"",': 1, '"", ': 1, ', l': 1, 'ne)': 1, 'T 2': 1, '2: ': 1, ': I': 1, 'Int': 1, 'g w': 1, 'wit': 1, 'ith': 1, 'th ': 1, 'h u': 1, 'r\n#': 1, '\n\nw': 1, '\nwh': 1, 'e T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue:': 1, '(""M': 1, '""My': 1, 'My ': 1, 'y C': 1, ' Ca': 1, 'Cal': 1, 'ato': 1, 'r -': 1, '- 2': 1, ' 20': 1, '202': 1, '021': 1, '21""': 1, '1"")': 1, '(""-': 1, '""--': 1, '---': 16, '--M': 1, '-ME': 1, 'MEN': 1, 'ENU': 1, 'NU-': 1, 'U--': 1, '--""': 1, '-"")': 1, '(""""': 1, '""""""': 2, '""""T': 1, '""Ty': 1, 'Typ': 1, 'ype': 1, 'pe ': 1, 'opt': 3, 'pti': 3, 'on:': 2, 'n:\n': 1, '  1': 1, ' 1 ': 1, '1 -': 1, '- A': 1, ' Ad': 1, 'Add': 1, '  2': 1, ' 2 ': 1, '2 -': 1, '- S': 1, ' Su': 1, 'Sub': 1, '  3': 1, ' 3 ': 1, '3 -': 1, '- M': 1, ' Mu': 1, 'Mul': 1, '  4': 1, ' 4 ': 1, '4 -': 1, '- D': 1, 'Div': 1, '  5': 1, ' 5 ': 1, '5 -': 1, '- H': 1, ' Hi': 1, 'His': 1, 'ry\n': 1, 'y\n ': 1, '  6': 1, ' 6 ': 1, '6 -': 1, '- T': 1, ' Te': 1, 'Ter': 1, 'erm': 1, 'rmi': 1, 'min': 1, 'ina': 1, 'nat': 1, 'te\n': 1, 'e\n ': 1, '  ""': 1, '"""")': 1, '# U': 1, ' Us': 1, 'Use': 1, 'r s': 1, 'sel': 1, 'ele': 2, 'lec': 2, 'ect': 2, 'cts': 1, 'e o': 1, '  c': 1, 'k =': 7, 't(i': 1, '(in': 1, '(""S': 1, '""Se': 1, 'Sel': 1, 't a': 1, 'n: ': 1, ' "")': 1, 'f c': 6, ' ==': 6, '== ': 6, '1:\n': 1, '  a': 1, '()\n': 5, 'eli': 5, 'lif': 5, '= 2': 1, '= 3': 1, ' 3:': 1, '3:\n': 1, '  m': 1, '= 4': 1, ' 4:': 1, '4:\n': 1, '= 5': 1, ' 5:': 1, '5:\n': 1, '= 6': 1, ' 6:': 1, '6:\n': 1, '  b': 1, ' br': 1, 'bre': 1, 'eak': 1, 'ak\n': 1, 'k\n ': 1, 'on.': 1, 'n. ': 1, '. P': 1, ' Pl': 1, 'Ple': 1, 'lea': 1, 'eas': 1, 'ase': 1, 'se ': 1, ' tr': 1, 'try': 1, 'y a': 1, ' ag': 1, 'aga': 1, 'gai': 1, 'ain': 1, 'n :': 1, ' :-': 1, ':-)': 1, '-)""': 1, ')"")': 1}"
Alice Gana,functions.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'from': 1, 'setup': 1, 'import': 1, '*': 1, '#part': 1, '3:': 1, 'creating': 1, 'methods': 1, 'inside': 1, 'each': 1, 'class': 1, '-': 1, 'implementation': 1, 'phase': 6, '#': 5, 'function': 2, 'used': 4, 'in': 8, '2,': 1, '3': 1, 'and': 3, '4': 6, 'of': 5, 'part': 5, 'def': 10, 'login_or_register():': 1, 'if': 24, 'not': 9, 'toy_store.is_logged:': 2, 'opt': 3, '=': 25, 'int(input(""hi!': 1, 'you': 4, 'registered,': 2, 'type': 2, '1': 1, 'to': 4, 'join': 1, 'us.': 1, 'are': 1, '2': 1, 'login:""))': 1, '==': 7, '2:': 3, 'username': 3, 'input(""type': 4, 'your': 9, 'username:"")': 2, 'password': 3, 'password:"")': 2, 'int(password)': 1, 'toy_store.check_password(username,': 1, 'password):': 1, 'print(""\\n': 2, 'welcome': 1, 'our': 1, 'toy': 1, 'store!\\n"")': 1, 'toy_store.is_logged=true': 1, 'else:': 4, 'incorrect': 1, ':(': 1, 'try': 1, 'again!"")': 1, '1:': 4, 'name': 1, 'input(""full': 1, 'name:"")': 1, 'document_type': 1, 'input(""document': 1, 'type:"")': 1, 'id_crn': 1, 'id': 1, 'or': 3, 'crn:"")': 1, 'phone': 1, 'input(""phone:"")': 1, 'address': 1, 'input(""address:"")': 1, 'input(""create': 2, 'a': 3, 'email': 1, 'input(""email:"")': 1, 'new_user': 1, 'user(name,': 1, 'document_type,': 1, 'id_crn,': 1, 'phone,': 1, 'address,': 1, 'username,': 1, 'email,': 1, 'password)': 1, 'toy_store.add_new_user(new_user)': 1, 'toy_store.is_logged': 1, 'true': 2, 'check_availability(selected_product):': 1, 'toy_store.cheking_product_availability_website(': 1, 'selected_product)': 1, 'toy_store.cheking_product_availability_marketplace(selected_product):': 1, 'print(""this': 2, 'product': 3, 'is': 8, 'available"")': 2, 'return': 2, 'false': 1, 'shop': 1, 'shoppingcart(0,none)': 1, 'toy_store.add_new_shopping_cart(shop)': 1, 'adding_toy_to_cart():': 1, 'selected_product_by_user': 1, 'id:"")': 1, 'check_availability(selected_product_by_user):': 1, 'login_or_register()': 1, 'shop.customer': 1, 'none:': 3, 'shop.customer=toy_store.current_user': 1, 'selected_product_itself=toy_store.finding_products(selected_product_by_user)': 1, 'shop.add_products(selected_product_itself)': 1, 'shop.display()': 1, 'functions': 2, '6': 1, 'listing_delivery_methods=[]': 1, 'delivering():': 1, 'website_products=false': 1, 'marketplace_products=false': 1, 'for': 2, 'cart': 1, 'toy_store.list_shopping_cart:': 1, 'cart.customer==toy_store.current_user:': 1, 'prod': 1, 'cart.products:': 1, 'prod.product_vendor': 2, 'website_products=true': 1, 'marketplace_products=true': 1, 'marketplace_products': 1, 'true:': 2, 'listing_delivery_methods.append(company_postal_service)': 2, 'website_products': 1, 'click=0': 1, 'while': 1, 'click': 1, '[1,2]:': 1, 'click=int(input(""choose': 1, 'delivery': 1, 'method:': 1, '1-post': 1, 'office,': 1, '2-in-house': 1, 'courier:""))': 1, 'click==1:': 1, 'company_postal_service': 1, 'listing_delivery_methods:': 1, 'click==2:': 1, 'listing_delivery_methods.append(company_in_house_courier)': 1, '7': 1, 'storing_payment_information': 1, '[]': 1, 'promotional_code():': 1, 'p_cod': 1, 'int(input(""please': 4, 'enter': 7, 'promotional': 1, 'code:""))': 2, 'loyalty': 4, 'toy_store.finding_loyalty(p_cod)': 1, 'storing_payment_information.append(loyalty)': 2, 'print(""invalid': 2, 'code"")': 2, 'gift_voucher():': 1, 'g_code': 1, 'gift': 1, 'toy_store.finding_loyalty(g_code)': 1, 'credit_debit_card():': 1, 'card': 2, 'credit': 1, 'debit': 1, 'number:""))': 2, 'storing_payment_information.append(card)': 1, 'paypal():': 1, 'paypal': 2, 'storing_payment_information.append(paypal)': 1, '8': 1, 'paying=payment(1,1,storing_payment_information,toy_store.current_user)': 1, 'toy_store.add_new_payment(paying)': 1, 'choosing_to_store_payment_details():': 1, 'choosing': 3, 'int(input(""if': 1, 'want': 1, 'store': 2, 'payment': 5, 'details,': 1, 'please': 2, '1.': 1, ""don't,"": 1, '2:""))': 1, 'paying.stored_payment_details()': 1, 'print(""your': 2, 'details': 2, 'have': 2, 'been': 2, 'successfully': 1, 'stored"")': 2, '9': 1, '#=>': 1, 'accepted': 1, 'user': 1, 'receives': 1, 'an': 1, 'invoice': 1, 'message': 1, 'invoice():': 1, 'final_message': 2, 'int(input(""to': 1, 'finalize': 1, 'receive': 1, 'invoice,': 1, '1:""))': 1, 'print(""toy': 1, 'invoice:"")': 1, 'toy_store.showing_onlineorders()': 1}","{'fro': 1, 'rom': 3, 'om ': 1, 'm s': 1, ' se': 4, 'set': 1, 'etu': 3, 'tup': 1, 'up ': 1, 'p i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 7, 't *': 1, ' *\n': 1, '*\n\n': 1, '\n\n ': 6, '\n  ': 86, '   ': 572, '  #': 1, ' #P': 1, '#PA': 1, 'PAR': 1, 'ART': 1, 'RT ': 1, 'T 3': 1, ' 3:': 1, '3: ': 1, ': C': 1, ' Cr': 1, 'Cre': 3, 'rea': 3, 'eat': 3, 'ati': 7, 'tin': 6, 'ing': 30, 'ng ': 4, 'g m': 1, ' me': 3, 'met': 7, 'eth': 7, 'tho': 7, 'hod': 7, 'ods': 6, 'ds ': 1, 's i': 3, ' in': 31, 'ins': 1, 'nsi': 1, 'sid': 1, 'ide': 1, 'de ': 2, 'e e': 7, ' ea': 1, 'eac': 1, 'ach': 1, 'ch ': 1, 'h c': 1, ' cl': 6, 'cla': 1, 'las': 1, 'ass': 10, 'ss ': 2, 's -': 1, ' - ': 1, '- I': 1, ' IM': 1, 'IMP': 1, 'MPL': 1, 'PLE': 1, 'LEM': 1, 'EME': 1, 'MEN': 1, 'ENT': 1, 'NTA': 1, 'TAT': 1, 'ATI': 1, 'TIO': 1, 'ION': 1, 'ON ': 1, 'N P': 1, ' PH': 1, 'PHA': 1, 'HAS': 1, 'ASE': 1, 'SE\n': 1, 'E\n\n': 1, '\n\n#': 5, '\n# ': 5, '# F': 4, ' Fu': 4, 'Fun': 4, 'unc': 4, 'nct': 4, 'cti': 4, 'tio': 12, 'ion': 12, 'on ': 3, 'n u': 3, ' us': 12, 'use': 23, 'sed': 4, 'ed ': 6, 'd i': 5, 'in ': 9, 'n P': 4, ' Ph': 5, 'Pha': 5, 'has': 5, 'ase': 11, 'se ': 13, 'e 2': 2, ' 2,': 1, '2, ': 1, ', 3': 1, ' 3 ': 1, '3 a': 1, ' an': 4, 'and': 3, 'nd ': 3, 'd 4': 1, ' 4 ': 1, '4 o': 1, ' of': 5, 'of ': 5, 'f P': 5, ' Pa': 7, 'Par': 5, 'art': 12, 't 4': 5, ' 4\n': 5, '4\n\n': 4, '\n\nd': 7, '\nde': 10, 'def': 10, 'ef ': 10, 'f l': 3, ' lo': 7, 'log': 7, 'ogi': 3, 'gin': 3, 'in_': 3, 'n_o': 2, '_or': 2, 'or_': 2, 'r_r': 2, '_re': 2, 'reg': 4, 'egi': 4, 'gis': 4, 'ist': 10, 'ste': 4, 'ter': 11, 'er(': 5, 'r()': 3, '():': 9, '):\n': 13, ':\n ': 38, '  i': 22, ' if': 21, 'if ': 21, 'f n': 2, ' no': 9, 'not': 9, 'ot ': 9, 't t': 4, ' to': 16, 'toy': 19, 'oy_': 19, 'y_s': 18, '_st': 19, 'sto': 32, 'tor': 30, 'ore': 24, 're.': 18, 'e.i': 4, '.is': 4, 'is_': 4, 's_l': 4, '_lo': 6, 'ogg': 4, 'gge': 4, 'ged': 4, 'ed:': 2, 'd:\n': 2, '  o': 1, ' op': 3, 'opt': 3, 'pt ': 3, 't =': 3, ' = ': 25, '= i': 19, 'int': 18, 'nt(': 20, 't(i': 8, '(in': 8, 'inp': 19, 'npu': 19, 'put': 19, 'ut(': 19, 't(""': 28, '(""H': 1, '""Hi': 1, 'Hi!': 1, 'i! ': 1, '! I': 1, ' If': 3, 'If ': 4, 'f y': 4, ' yo': 13, 'you': 13, 'ou ': 4, 'u n': 1, 't r': 1, ' re': 6, 'ere': 2, 'red': 7, 'ed,': 2, 'd, ': 2, ', t': 2, ' ty': 3, 'typ': 5, 'ype': 9, 'pe ': 7, 'e 1': 1, ' 1 ': 1, '1 t': 1, 'to ': 4, 'o j': 1, ' jo': 1, 'joi': 1, 'oin': 1, 'us.': 1, 's. ': 1, '. I': 2, 'u a': 1, ' ar': 1, 'are': 1, 're ': 2, 'e r': 1, ' 2 ': 1, '2 t': 1, 'o l': 1, 'in:': 1, 'n:""': 1, ':"")': 20, '""))': 8, '))\n': 8, ')\n ': 35, 'f o': 2, ' ==': 7, '== ': 7, '= 2': 3, ' 2:': 4, '2:\n': 4, '  u': 2, 'ser': 21, 'ern': 7, 'rna': 7, 'nam': 10, 'ame': 10, 'me ': 5, 'e =': 8, '(""T': 8, '""Ty': 4, 'Typ': 4, 'e y': 5, 'our': 14, 'ur ': 12, 'r u': 1, 'me:': 3, 'e:""': 7, '"")\n': 20, '  p': 16, ' pa': 14, 'pas': 9, 'ssw': 9, 'swo': 9, 'wor': 9, 'ord': 10, 'rd ': 5, 'd =': 6, 'r p': 6, 'rd:': 2, 'd:""': 2, 't(p': 2, '(pa': 3, 'rd)': 4, 'd)\n': 4, ')\n\n': 11, 'f t': 2, 'e.c': 6, '.ch': 3, 'che': 6, 'hec': 3, 'eck': 3, 'ck_': 3, 'k_p': 1, '_pa': 10, 'rd(': 2, 'd(u': 1, '(us': 1, 'me,': 3, 'e, ': 7, ', p': 5, 'd):': 1, ' pr': 17, 'pri': 9, 'rin': 16, '(""\\': 2, '""\\n': 2, '\\n ': 2, 'n W': 1, ' We': 1, 'Wel': 1, 'elc': 1, 'lco': 1, 'com': 5, 'ome': 4, 'e t': 1, 'o o': 1, ' ou': 1, 'r T': 1, ' To': 1, 'Toy': 1, 'oy ': 1, 'y S': 1, ' St': 1, 'Sto': 1, 're!': 1, 'e!\\': 1, '!\\n': 1, '\\n""': 1, 'n"")': 1, '  t': 4, 'ed=': 1, 'd=T': 1, '=Tr': 3, 'Tru': 7, 'rue': 7, 'ue\n': 5, 'e\n ': 4, '  e': 5, ' el': 4, 'els': 4, 'lse': 7, 'se:': 4, 'e:\n': 9, 'n I': 1, ' In': 1, 'Inc': 1, 'nco': 1, 'cor': 1, 'orr': 1, 'rre': 4, 'rec': 3, 'ect': 9, 'ct ': 4, 't u': 1, 'e :': 1, ' :(': 1, ':( ': 1, '( T': 1, ' Tr': 5, 'Try': 1, 'ry ': 2, 'y a': 1, ' ag': 1, 'aga': 1, 'gai': 1, 'ain': 1, 'in!': 1, 'n!""': 1, '!"")': 1, '= 1': 4, ' 1:': 5, '1:\n': 5, '  n': 2, ' na': 2, '(""F': 1, '""Fu': 1, 'Ful': 1, 'ull': 2, 'll ': 1, 'l n': 2, '  d': 1, ' do': 3, 'doc': 2, 'ocu': 3, 'cum': 3, 'ume': 3, 'men': 18, 'ent': 28, 'nt_': 13, 't_t': 2, '_ty': 2, '(""D': 1, '""Do': 1, 'Doc': 1, 'nt ': 7, 'pe:': 1, ' id': 2, 'id_': 2, 'd_c': 2, '_cr': 2, 'crn': 2, 'rn ': 3, 'n =': 2, 'r I': 1, ' ID': 2, 'ID ': 1, 'D o': 1, ' or': 3, 'or ': 7, 'r C': 1, ' CR': 1, 'CRN': 1, 'RN:': 1, 'N:""': 1, ' ph': 2, 'pho': 2, 'hon': 3, 'one': 7, 'ne ': 1, '(""P': 5, '""Ph': 1, 'Pho': 1, 'ne:': 4, '  a': 1, ' ad': 3, 'add': 7, 'ddr': 3, 'dre': 3, 'res': 3, 'ess': 7, 's =': 1, '(""A': 1, '""Ad': 1, 'Add': 1, 'ss:': 1, 's:""': 1, '(""C': 3, '""Cr': 2, 'ate': 2, 'te ': 2, 'e a': 3, ' a ': 3, 'a u': 1, ' em': 2, 'ema': 2, 'mai': 3, 'ail': 14, 'il ': 1, 'l =': 2, '(""E': 1, '""Em': 1, 'Ema': 1, 'il:': 1, 'l:""': 1, 'a p': 1, ' ne': 1, 'new': 5, 'ew_': 5, 'w_u': 3, '_us': 9, 'er ': 11, 'r =': 4, '= U': 1, ' Us': 1, 'Use': 1, 'r(n': 2, '(na': 1, ', d': 1, 'pe,': 1, ', i': 1, 'rn,': 1, 'n, ': 1, 'ne,': 1, ', a': 1, 'ss,': 1, 's, ': 2, ', u': 1, ', e': 2, 'il,': 1, 'l, ': 1, 'e.a': 3, '.ad': 4, 'dd_': 4, 'd_n': 3, '_ne': 3, '(ne': 1, 'er)': 5, 'r)\n': 4, '= T': 1, 'e\n\n': 5, 'f c': 10, ' ch': 6, 'k_a': 2, '_av': 4, 'ava': 6, 'vai': 6, 'ila': 6, 'lab': 6, 'abi': 4, 'bil': 4, 'ili': 4, 'lit': 4, 'ity': 4, 'ty(': 4, 'y(s': 2, '(se': 5, 'sel': 10, 'ele': 8, 'lec': 8, 'cte': 8, 'ted': 9, 'ed_': 9, 'd_p': 10, '_pr': 18, 'pro': 29, 'rod': 27, 'odu': 24, 'duc': 24, 'uct': 24, 'ct)': 3, 't):': 2, 'hek': 2, 'eki': 2, 'kin': 2, 'ng_': 21, 'g_p': 9, 'ct_': 9, 't_a': 2, 'ty_': 2, 'y_w': 1, '_we': 1, 'web': 4, 'ebs': 4, 'bsi': 4, 'sit': 4, 'ite': 4, 'te(': 1, 'e(\n': 1, '(\n ': 1, '  s': 10, 't) ': 1, ') o': 1, 'r t': 1, 'y_m': 6, '_ma': 1, 'mar': 4, 'ark': 4, 'rke': 4, 'ket': 4, 'etp': 4, 'tpl': 4, 'pla': 5, 'lac': 4, 'ace': 4, 'ce(': 2, 'e(s': 1, '""Th': 2, 'Thi': 2, 'his': 2, 'is ': 10, 's p': 2, 't i': 6, ' is': 8, 's a': 3, ' av': 2, 'abl': 2, 'ble': 2, 'le""': 2, 'e"")': 4, '  r': 2, 'ret': 2, 'tur': 2, 'urn': 2, 'n T': 1, 's n': 3, 't a': 2, 'n F': 1, ' Fa': 1, 'Fal': 3, 'als': 3, 'se\n': 3, '\n\n\n': 1, '\n\ns': 2, '\nsh': 1, 'sho': 9, 'hop': 9, 'op ': 1, 'p =': 1, '= S': 1, ' Sh': 1, 'Sho': 1, 'opp': 3, 'ppi': 3, 'pin': 3, 'ngC': 1, 'gCa': 1, 'Car': 1, 'rt(': 3, 't(0': 1, '(0,': 1, '0,N': 1, ',No': 1, 'Non': 4, 'ne)': 1, 'e)\n': 4, ')\nt': 2, '\nto': 2, 'w_s': 1, '_sh': 2, 'g_c': 4, '_ca': 4, 'car': 10, 't(s': 1, '(sh': 1, 'op)': 1, 'p)\n': 1, 'f a': 1, 'ddi': 1, 'din': 4, 'g_t': 2, '_to': 3, 'y_t': 1, 'to_': 2, 'o_c': 1, 't()': 1, 't_b': 3, '_by': 3, 'by_': 3, 'y_u': 3, 'e p': 2, 't I': 1, 'ID:': 1, 'D:""': 1, 'r):': 1, '  l': 6, '()\n': 4, 'f s': 1, ' sh': 4, 'op.': 4, 'p.c': 2, '.cu': 6, 'cus': 3, 'ust': 3, 'tom': 3, 'mer': 3, 'r i': 2, 's N': 1, ' No': 3, 'er=': 2, 'r=t': 1, '=to': 3, 'cur': 3, 'urr': 3, 'ren': 3, 't_u': 3, 'er\n': 1, 'r\n ': 1, 't_i': 8, '_it': 2, 'its': 2, 'tse': 2, 'elf': 2, 'lf=': 1, 'f=t': 1, 'e.f': 3, '.fi': 3, 'fin': 6, 'ind': 3, 'ndi': 3, 'cts': 9, 'ts(': 2, 's(s': 2, 'p.a': 1, 'lf)': 1, 'f)\n': 1, 'p.d': 1, '.di': 1, 'dis': 1, 'isp': 1, 'spl': 1, 'lay': 1, 'ay(': 1, 'y()': 1, 'ons': 2, 'ns ': 2, 's u': 2, 'e 6': 1, ' 6 ': 1, '6 o': 1, '\n\nl': 1, '\nli': 1, 'lis': 6, 'sti': 5, 'g_d': 5, '_de': 8, 'del': 7, 'eli': 7, 'liv': 7, 'ive': 9, 'ver': 7, 'ery': 6, 'ry_': 5, '_me': 7, 'ds=': 1, 's=[': 1, '=[]': 1, '[]\n': 2, ']\nd': 2, 'f d': 1, ' de': 6, 'eri': 1, 'ng(': 1, 'g()': 1, '  w': 3, ' we': 3, 'te_': 3, 'e_p': 7, 'ts=': 4, 's=F': 2, '=Fa': 2, '  m': 2, ' ma': 3, 'ce_': 3, '  f': 3, ' fo': 2, 'for': 8, 'r c': 2, ' ca': 5, 'n t': 1, 'e.l': 1, '.li': 1, 'st_': 1, 't_s': 1, 'rt:': 1, 't:\n': 1, 'rt.': 2, 't.c': 1, 'r==': 1, '==t': 1, 'er:': 4, 'r:\n': 1, 'od ': 2, 'n c': 1, 't.p': 1, '.pr': 3, 'ts:': 1, 's:\n': 2, 'f p': 4, 'od.': 2, 'd.p': 2, 't_v': 3, '_ve': 2, 'ven': 2, 'end': 9, 'ndo': 2, 'dor': 2, 's=T': 2, 'f m': 1, 'ts ': 2, 's T': 2, 'ue:': 2, ' li': 4, 'ds.': 3, 's.a': 3, '.ap': 7, 'app': 7, 'ppe': 7, 'pen': 7, 'nd(': 7, 'd(c': 4, '(co': 3, 'omp': 4, 'mpa': 4, 'pan': 4, 'any': 4, 'ny_': 4, 'y_p': 3, '_po': 3, 'pos': 3, 'ost': 4, 'sta': 3, 'tal': 3, 'al_': 6, 'l_s': 3, '_se': 3, 'erv': 3, 'rvi': 3, 'vic': 3, 'ice': 7, 'ce)': 2, 'f w': 1, '  c': 4, 'cli': 5, 'lic': 5, 'ick': 5, 'ck=': 4, 'k=0': 1, '=0\n': 1, '0\n ': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e c': 2, 'ck ': 1, 'k n': 1, 'n [': 1, ' [1': 1, '[1,': 1, '1,2': 1, ',2]': 1, '2]:': 1, ']:\n': 1, 'k=i': 1, '=in': 1, '""Ch': 1, 'Cho': 1, 'hoo': 5, 'oos': 5, 'ose': 1, 'a d': 1, 'y m': 1, 'od:': 1, 'd: ': 1, ': 1': 1, ' 1-': 1, '1-P': 1, '-Po': 1, 'Pos': 1, 'st ': 1, 't O': 1, ' Of': 1, 'Off': 1, 'ffi': 1, 'fic': 1, 'ce,': 2, ', 2': 1, ' 2-': 1, '2-I': 1, '-In': 1, 'In-': 1, 'n-h': 1, '-ho': 1, 'hou': 2, 'ous': 2, ' co': 6, 'cou': 2, 'uri': 2, 'rie': 2, 'ier': 2, 'r:""': 3, 'k==': 2, '==1': 1, '=1:': 1, 'ce ': 2, 'e n': 2, 'n l': 1, 'ds:': 1, '==2': 1, '=2:': 1, 'y_i': 1, '_in': 7, 'n_h': 1, '_ho': 1, 'se_': 1, 'e_c': 1, '_co': 6, 'e 7': 1, ' 7 ': 1, '7 o': 1, '\nst': 1, 'ori': 6, 'pay': 19, 'aym': 15, 'yme': 15, 'inf': 6, 'nfo': 6, 'orm': 6, 'rma': 6, 'mat': 6, '= [': 1, ' []': 1, 'omo': 2, 'mot': 2, 'oti': 2, 'ona': 2, 'nal': 5, 'l_c': 1, 'cod': 9, 'ode': 7, 'de(': 1, 'e()': 2, ' p_': 1, 'p_c': 2, '""Pl': 4, 'Ple': 4, 'lea': 6, 'eas': 6, ' en': 7, 'nte': 7, 'r y': 4, 'al ': 3, 'l c': 1, 'de:': 2, 'loy': 8, 'oya': 8, 'yal': 8, 'alt': 8, 'lty': 8, 'ty ': 4, 'y =': 2, '= t': 2, 'g_l': 2, 'y(p': 1, '(p_': 1, 'od)': 1, 'y i': 2, 't N': 2, ' st': 7, 'on.': 4, 'n.a': 4, 'd(l': 2, '(lo': 2, 'ty)': 2, 'y)\n': 2, '(""I': 3, '""In': 2, 'Inv': 2, 'nva': 2, 'val': 2, 'ali': 3, 'lid': 2, 'id ': 2, 'd c': 2, 'de""': 2, 'f g': 1, ' gi': 2, 'gif': 2, 'ift': 2, 'ft_': 1, '_vo': 1, 'vou': 1, 'ouc': 1, 'uch': 1, 'her': 1, '  g': 1, ' g_': 1, 'r g': 1, 'ft ': 1, 't c': 2, 'y(g': 1, '(g_': 1, 'de)': 1, ' cr': 2, 'cre': 2, 'edi': 2, 'dit': 2, 'it_': 2, 't_d': 3, 'deb': 2, 'ebi': 2, 'bit': 2, 't_c': 1, 'ard': 4, 'd()': 1, 'it ': 2, 't o': 1, 'r d': 1, 'd n': 1, ' nu': 2, 'num': 2, 'umb': 2, 'mbe': 2, 'ber': 2, '(ca': 1, 'ayp': 3, 'ypa': 3, 'pal': 3, 'al(': 1, 'l()': 1, 'r P': 1, 'Pay': 3, 'ayP': 1, 'yPa': 1, 'Pal': 1, 'd(p': 1, 'al)': 1, 'l)\n': 1, 'e 8': 1, ' 8 ': 1, '8 o': 1, '\n\np': 1, '\npa': 1, 'ayi': 3, 'yin': 3, 'ng=': 1, 'g=P': 1, '=Pa': 1, 't(1': 1, '(1,': 1, '1,1': 1, ',1,': 1, '1,s': 1, ',st': 1, 'on,': 1, 'n,t': 1, ',to': 1, 'w_p': 1, 'ng)': 1, 'g)\n': 1, ')\nd': 1, 'cho': 4, 'osi': 4, 'sin': 4, 'o_s': 1, 're_': 1, 'det': 5, 'eta': 5, 'tai': 5, 'ils': 5, 'ls(': 2, 's()': 3, 'g =': 3, '""If': 1, 'u w': 1, ' wa': 1, 'wan': 1, 'ant': 1, 'o s': 1, 't d': 3, 'ls,': 1, ' pl': 2, 'ple': 2, 'r 1': 2, ' 1.': 1, '1. ': 1, 'u d': 1, 'don': 1, ""on'"": 1, ""n't"": 1, ""'t,"": 1, 't, ': 1, 'r 2': 1, '2:""': 1, 'ng.': 1, 'g.s': 1, '.st': 1, '(""Y': 2, '""Yo': 2, 'You': 2, 'ls ': 2, 's h': 2, ' ha': 2, 'hav': 2, 'ave': 2, 've ': 3, 'e b': 1, ' be': 2, 'bee': 2, 'een': 2, 'en ': 2, 'n s': 2, ' su': 1, 'suc': 1, 'ucc': 1, 'cce': 2, 'ces': 1, 'ssf': 1, 'sfu': 1, 'ful': 1, 'lly': 1, 'ly ': 1, 'y s': 1, 'ed""': 2, 'd"")': 2, 't b': 1, '# P': 1, 'e 9': 1, ' 9 ': 1, '9 o': 1, '4\n#': 1, '\n#=': 1, '#=>': 1, '=> ': 1, '> P': 1, ' ac': 1, 'acc': 1, 'cep': 1, 'ept': 1, 'pte': 1, 'd a': 1, 'd u': 1, 'r r': 1, 'ece': 2, 'cei': 2, 'eiv': 2, 'ves': 1, 'es ': 1, 'an ': 1, 'n i': 1, 'inv': 3, 'nvo': 3, 'voi': 3, 'oic': 3, 'e m': 1, 'mes': 3, 'ssa': 3, 'sag': 3, 'age': 3, 'ge\n': 1, 'f i': 1, ' fi': 3, 'ina': 3, 'l_m': 2, 'ge ': 2, '""To': 1, 'To ': 1, 'o f': 1, 'liz': 1, 'ize': 1, 'ze ': 1, 'd r': 1, '1:""': 1, 'f f': 1, '""TO': 1, 'TOY': 1, 'OY ': 1, 'Y S': 1, ' ST': 1, 'STO': 1, 'TOR': 1, 'ORE': 1, 'RE ': 1, 'E I': 1, ' IN': 1, 'INV': 1, 'NVO': 1, 'VOI': 1, 'OIC': 1, 'ICE': 1, 'CE:': 1, 'E:""': 1, 'e.s': 1, '.sh': 1, 'how': 1, 'owi': 1, 'win': 1, 'g_o': 1, '_on': 1, 'onl': 1, 'nli': 1, 'lin': 1, 'ine': 1, 'neo': 1, 'eor': 1, 'rde': 1, 'der': 1, 'ers': 1, 'rs(': 1}"
Alice Gana,function_exercise4.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'####################################################################################################################': 2, '#': 10, 'functions': 1, '-': 3, 'lab': 1, 'exercise': 1, '4': 1, 'write': 1, 'a': 4, 'function': 6, 'called': 1, 'is_palindrome': 1, 'that': 1, 'takes': 1, 'string': 3, 'as': 1, 'parameter.': 1, 'the': 9, 'will': 1, 'return': 7, 'true': 4, 'if': 5, 'is': 4, 'palindrome(': 1, 'same': 1, 'forward': 1, 'and': 1, 'backward).': 1, 'expected': 1, 'output:': 1, 'call': 2, 'is_palindrome(""level""),': 1, 'would': 2, 'is_palindrome(""house""),': 1, 'false': 3, 'def': 2, 'is_palindrome(pali):': 1, 'pali': 1, '==': 2, 'pali[::-1]:': 1, 'else:': 2, '#######################################################################################################################': 2, 'alternative': 1, 'solution:': 1, 'is_palindrome(string):': 1, 'reversed_string=': 1, '""""': 1, 'position': 3, '=': 1, 'len(string)': 1, '1': 2, 'while': 1, '>=': 1, '0:': 1, 'reversed_string': 1, '+=': 1, 'string[position]': 1, '-=': 1, 'reversed_string:': 1}","{'\n##': 4, '###': 462, '##\n': 4, '#\n#': 5, '\n# ': 7, '#  ': 5, '   ': 92, '  F': 1, ' Fu': 1, 'Fun': 1, 'unc': 7, 'nct': 7, 'cti': 7, 'tio': 11, 'ion': 11, 'ons': 1, 'ns ': 1, 's -': 1, ' - ': 3, '- L': 1, ' La': 1, 'Lab': 1, 'ab ': 1, 'b E': 1, ' Ex': 2, 'Exe': 1, 'xer': 1, 'erc': 1, 'rci': 1, 'cis': 1, 'ise': 1, 'se ': 1, 'e -': 1, '- 4': 1, ' 4\n': 1, '4\n#': 1, '\n#\n': 3, '  W': 1, ' Wr': 1, 'Wri': 1, 'rit': 1, 'ite': 1, 'te ': 1, 'e a': 1, ' a ': 4, 'a f': 1, ' fu': 6, 'fun': 6, 'on ': 9, 'n c': 3, ' ca': 3, 'cal': 3, 'all': 3, 'lle': 1, 'led': 1, 'ed ': 2, 'd i': 1, ' is': 9, 'is_': 5, 's_p': 5, '_pa': 5, 'pal': 9, 'ali': 9, 'lin': 6, 'ind': 6, 'ndr': 6, 'dro': 6, 'rom': 6, 'ome': 6, 'me ': 2, 'e t': 3, ' th': 9, 'tha': 1, 'hat': 1, 'at ': 1, 't t': 1, ' ta': 1, 'tak': 1, 'ake': 1, 'kes': 1, 'es ': 1, 's a': 3, 'a s': 1, ' st': 4, 'str': 9, 'tri': 9, 'rin': 9, 'ing': 9, 'ng ': 4, 'g a': 1, ' as': 1, 'as ': 1, 'a p': 2, ' pa': 4, 'par': 1, 'ara': 1, 'ram': 1, 'ame': 2, 'met': 1, 'ete': 1, 'ter': 1, 'er.': 1, 'r.\n': 1, '.\n#': 2, '  T': 1, ' Th': 1, 'The': 1, 'he ': 9, 'e f': 6, 'n w': 3, ' wi': 1, 'wil': 1, 'ill': 1, 'll ': 3, 'l r': 1, ' re': 10, 'ret': 7, 'etu': 7, 'tur': 7, 'urn': 7, 'rn ': 7, 'n T': 4, ' Tr': 4, 'Tru': 4, 'rue': 4, 'ue ': 1, 'e i': 1, ' if': 3, 'if ': 3, 'f t': 3, 'the': 8, 'e s': 2, 'g i': 1, 'is ': 4, 'me(': 5, 'e( ': 1, '( i': 1, 's t': 1, ' sa': 1, 'sam': 1, ' fo': 1, 'for': 1, 'orw': 1, 'rwa': 1, 'war': 2, 'ard': 2, 'rd ': 1, 'd a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd b': 1, ' ba': 1, 'bac': 1, 'ack': 1, 'ckw': 1, 'kwa': 1, 'rd)': 1, 'd).': 1, ').\n': 1, '# E': 1, 'Exp': 1, 'xpe': 1, 'pec': 1, 'ect': 1, 'cte': 1, 'ted': 1, 'd O': 1, ' Ou': 1, 'Out': 1, 'utp': 1, 'tpu': 1, 'put': 1, 'ut:': 1, 't:\n': 1, ':\n#': 2, '  I': 2, ' If': 2, 'If ': 2, 'l i': 2, 's i': 2, 'e(""': 2, '(""l': 1, '""le': 1, 'lev': 1, 'eve': 4, 'vel': 1, 'el""': 1, 'l"")': 1, '""),': 2, '), ': 2, ', t': 2, ' wo': 2, 'wou': 2, 'oul': 2, 'uld': 2, 'ld ': 2, 'd r': 2, 'ue\n': 3, 'e\n#': 2, '(""h': 1, '""ho': 1, 'hou': 1, 'ous': 1, 'use': 1, 'se""': 1, 'e"")': 1, 'n F': 3, ' Fa': 3, 'Fal': 3, 'als': 3, 'lse': 5, 'se\n': 3, '#\n\n': 2, '\n\n\n': 1, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f i': 2, 'e(p': 1, '(pa': 1, 'li)': 1, 'i):': 1, '):\n': 2, ':\n ': 7, '\n  ': 13, '  i': 2, 'f p': 1, 'li ': 1, 'i =': 1, ' ==': 2, '== ': 2, '= p': 1, 'li[': 1, 'i[:': 1, '[::': 1, '::-': 1, ':-1': 1, '-1]': 1, '1]:': 1, ']:\n': 1, '  r': 6, 'e\n ': 2, '  e': 2, ' el': 2, 'els': 2, 'se:': 2, 'e:\n': 2, 'e\n\n': 1, '\n\n#': 1, '# A': 1, ' AL': 1, 'ALT': 1, 'LTE': 1, 'TER': 1, 'ERN': 1, 'RNA': 1, 'NAT': 1, 'ATI': 1, 'TIV': 1, 'IVE': 1, 'VE ': 1, 'E S': 1, ' SO': 1, 'SOL': 1, 'OLU': 1, 'LUT': 1, 'UTI': 1, 'TIO': 1, 'ION': 1, 'ON:': 1, 'N:\n': 1, 'e(s': 1, '(st': 2, 'ng)': 2, 'g):': 1, 'rev': 3, 'ver': 3, 'ers': 3, 'rse': 3, 'sed': 3, 'ed_': 3, 'd_s': 3, '_st': 3, 'ng=': 1, 'g= ': 1, '= ""': 1, ' """"': 1, '""""\n': 1, '""\n ': 1, '  p': 2, ' po': 3, 'pos': 4, 'osi': 4, 'sit': 4, 'iti': 4, 'n =': 1, ' = ': 1, '= l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(s': 1, 'g) ': 1, ') -': 1, '- 1': 1, ' 1\n': 2, '1\n ': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e p': 1, 'n >': 1, ' >=': 1, '>= ': 1, '= 0': 1, ' 0:': 1, '0:\n': 1, 'g +': 1, ' +=': 1, '+= ': 1, '= s': 1, 'ng[': 1, 'g[p': 1, '[po': 1, 'on]': 1, 'n]\n': 1, ']\n ': 1, 'n -': 1, ' -=': 1, '-= ': 1, '= 1': 1, 'f s': 1, 'g =': 1, '= r': 1, 'ng:': 1, 'g:\n': 1}"
Alice Gana,functio_excercise1.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'####################################################################################################################': 2, '#': 13, 'functions': 1, '-': 1, 'lab': 1, 'exercise': 1, '1': 1, 'write': 1, 'a': 1, 'function': 7, 'called': 1, 'avg': 1, 'that': 1, 'takes': 1, 'two': 7, 'parameters.': 3, 'return': 8, 'the': 9, 'average': 1, 'of': 1, 'these': 1, 'if': 7, 'parameters': 3, 'are': 1, 'not': 1, 'numbers,': 1, 'string,': 1, 'please': 3, 'use': 5, 'numbers': 5, 'as': 5, 'expected': 1, 'output': 3, 'call': 4, 'is': 4, 'avg(10,25),': 1, 'then': 2, 'would': 2, '17.5': 2, 'avg(10,': 2, '""cat""),': 1, 'avg(10,25):': 1, 'def': 2, 'avg(n1,n2):': 2, 'type(n1)==type(""hello"")': 2, 'or': 2, 'type(n2)==type(""hello""):': 2, '""please': 2, 'parameters""': 2, '(n1+n2)/2': 2, 'print(avg(10,25))': 1, '=>': 2, '""cat""):': 1, 'print(avg(10,': 1, '""cat""))': 1}","{'\n##': 2, '###': 228, '##\n': 2, '#\n#': 4, '\n# ': 10, '#  ': 4, '   ': 35, '  F': 1, ' Fu': 1, 'Fun': 1, 'unc': 8, 'nct': 8, 'cti': 8, 'tio': 8, 'ion': 8, 'ons': 1, 'ns ': 1, 's -': 1, ' - ': 1, '- L': 1, ' La': 1, 'Lab': 1, 'ab ': 1, 'b E': 1, ' Ex': 2, 'Exe': 1, 'xer': 1, 'erc': 1, 'rci': 1, 'cis': 1, 'ise': 1, 'se ': 12, 'e 1': 1, ' 1\n': 1, '1\n#': 1, '\n#\n': 3, '# W': 1, ' Wr': 1, 'Wri': 1, 'rit': 1, 'ite': 1, 'te ': 1, 'e a': 2, ' a ': 1, 'a f': 1, ' fu': 7, 'fun': 7, 'on ': 7, 'n c': 5, ' ca': 5, 'cal': 5, 'all': 5, 'lle': 1, 'led': 1, 'ed ': 2, 'd a': 1, ' av': 8, 'avg': 9, 'vg ': 1, 'g t': 1, ' th': 13, 'tha': 1, 'hat': 1, 'at ': 1, 't t': 1, ' ta': 1, 'tak': 1, 'ake': 1, 'kes': 1, 'es ': 1, 's t': 1, ' tw': 7, 'two': 7, 'wo ': 7, 'o p': 2, ' pa': 8, 'par': 8, 'ara': 8, 'ram': 8, 'ame': 8, 'met': 8, 'ete': 8, 'ter': 8, 'ers': 14, 'rs.': 3, 's. ': 1, '. R': 1, ' Re': 1, 'Ret': 1, 'etu': 8, 'tur': 8, 'urn': 8, 'rn ': 8, 'n t': 4, 'the': 12, 'he ': 9, 'ave': 1, 'ver': 1, 'era': 1, 'rag': 1, 'age': 1, 'ge ': 1, 'e o': 1, ' of': 1, 'of ': 1, 'f t': 8, 'hes': 1, 'ese': 1, 'e t': 6, 's.\n': 2, '.\n#': 2, '# I': 3, ' If': 5, 'If ': 5, 'e p': 1, 'rs ': 6, 's a': 10, ' ar': 1, 'are': 1, 're ': 1, 'e n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't n': 1, ' nu': 6, 'num': 6, 'umb': 6, 'mbe': 6, 'ber': 6, 'rs,': 1, 's, ': 1, ', r': 1, ' re': 7, 'ret': 7, 'e s': 1, ' st': 1, 'str': 1, 'tri': 1, 'rin': 3, 'ing': 1, 'ng,': 1, 'g, ': 1, ', P': 1, ' Pl': 3, 'Ple': 5, 'lea': 5, 'eas': 5, 'ase': 5, 'e u': 5, ' us': 5, 'use': 5, 'o n': 5, ' as': 5, 'as ': 5, 's p': 5, '  E': 1, 'Exp': 1, 'xpe': 1, 'pec': 1, 'ect': 1, 'cte': 1, 'ted': 1, 'd O': 1, ' Ou': 3, 'Out': 3, 'utp': 3, 'tpu': 3, 'put': 3, 'ut\n': 1, 't\n#': 1, '  I': 2, 'e f': 6, 'll ': 4, 'l i': 4, ' is': 4, 'is ': 4, 'vg(': 8, 'g(1': 6, '(10': 6, '10,': 6, '0,2': 3, ',25': 3, '25)': 3, '5),': 1, '), ': 2, ', t': 2, 'hen': 2, 'en ': 2, 'n w': 2, ' wo': 2, 'wou': 2, 'oul': 2, 'uld': 2, 'ld ': 2, 'd r': 2, 'n 1': 1, ' 17': 2, '17.': 2, '7.5': 2, '.5\n': 2, '5\n#': 1, '0, ': 3, ', ""': 3, ' ""c': 3, '""ca': 3, 'cat': 3, 'at""': 3, 't"")': 3, '""),': 1, 'n P': 1, 'rs\n': 2, 's\n#': 1, '#\n\n': 1, '\n\n#': 3, '5):': 1, '):\n': 6, ':\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f a': 2, 'g(n': 2, '(n1': 6, 'n1,': 2, '1,n': 2, ',n2': 2, 'n2)': 6, '2):': 2, ':\n ': 4, '\n  ': 6, '  i': 2, ' if': 2, 'if ': 2, ' ty': 4, 'typ': 8, 'ype': 8, 'pe(': 8, 'e(n': 4, 'n1)': 2, '1)=': 2, ')==': 4, '==t': 4, '=ty': 4, 'e(""': 4, '(""H': 4, '""He': 4, 'Hel': 4, 'ell': 4, 'llo': 4, 'lo""': 4, 'o"")': 4, '"") ': 2, ') o': 2, ' or': 2, 'or ': 2, 'r t': 2, '(n2': 2, '2)=': 2, '""):': 3, '  r': 4, 'n ""': 2, ' ""P': 2, '""Pl': 2, 'rs""': 2, 's""\n': 2, '""\n ': 2, 'n (': 2, ' (n': 2, 'n1+': 2, '1+n': 2, '+n2': 2, '2)/': 2, ')/2': 2, '/2\n': 2, '2\n\n': 2, '\n\np': 2, '\npr': 2, 'pri': 2, 'int': 2, 'nt(': 2, 't(a': 2, '(av': 2, '5))': 1, '))\n': 2, ')\n#': 1, '# O': 2, 'ut ': 2, 't =': 2, ' =>': 2, '=> ': 2, '> 1': 1, '5\n\n': 1, '""))': 1, ')\n\n': 1, '> P': 1}"
Alice Gana,functio_excercise2.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'####################################################################################################################': 2, '#': 11, 'functions': 1, '-': 1, 'lab': 1, 'exercise': 1, '2': 5, 'write': 1, 'a': 5, 'function': 6, 'called': 1, 'odds_or_evens': 1, 'that': 1, 'takes': 1, 'boolean': 3, 'and': 1, 'list': 3, 'of': 3, 'integers': 1, 'as': 1, 'parameters.': 1, 'if': 11, 'the': 9, 'parameter': 2, 'is': 4, 'true,': 1, 'return': 6, 'only': 2, 'even': 1, 'numbers.': 2, 'isfalse,': 1, 'odd': 1, 'expected': 1, 'output:': 1, 'call': 3, 'odds_or_evens(true,': 1, '[8,': 4, '13,': 4, '22,': 5, '31]),': 2, 'would': 2, '[22,': 2, '8]': 2, 'odds_or_evens(false,': 2, '[13,': 3, '31]': 2, 'def': 2, 'odds_or_evens(boolean,': 2, 'my_list):': 2, 'boolean:': 2, 'for': 4, 'i': 8, 'in': 4, 'my_list:': 4, '%': 4, '!=': 2, '0:': 4, 'my_list.remove(i)': 4, 'else:': 2, '==': 2, 'my_list': 2, 'print(odds_or_evens(true,': 1, '31]))': 2, '#output': 2, '=>': 2, '8,': 1, '31]):': 1, 'print(odds_or_evens(false,': 1}","{'\n##': 2, '###': 228, '##\n': 2, '#\n#': 4, '\n# ': 8, '#  ': 4, '   ': 167, '  F': 1, ' Fu': 1, 'Fun': 1, 'unc': 7, 'nct': 7, 'cti': 7, 'tio': 7, 'ion': 7, 'ons': 1, 'ns ': 2, 's -': 1, ' - ': 1, '- L': 1, ' La': 1, 'Lab': 1, 'ab ': 1, 'b E': 1, ' Ex': 2, 'Exe': 1, 'xer': 1, 'erc': 1, 'rci': 1, 'cis': 1, 'ise': 1, 'se ': 1, 'e 2': 1, ' 2\n': 1, '2\n#': 1, '\n#\n': 3, '# W': 1, ' Wr': 1, 'Wri': 1, 'rit': 1, 'ite': 1, 'te ': 1, 'e a': 1, ' a ': 5, 'a f': 1, ' fu': 6, 'fun': 6, 'on ': 6, 'n c': 4, ' ca': 4, 'cal': 4, 'all': 4, 'lle': 1, 'led': 1, 'ed ': 2, 'd o': 1, ' od': 7, 'odd': 9, 'dds': 8, 'ds_': 8, 's_o': 8, '_or': 8, 'or_': 8, 'r_e': 8, '_ev': 8, 'eve': 9, 'ven': 9, 'ens': 8, 's t': 1, ' th': 10, 'tha': 1, 'hat': 1, 'at ': 1, 't t': 1, ' ta': 1, 'tak': 1, 'ake': 1, 'kes': 1, 'es ': 1, 's a': 2, 'a b': 1, ' bo': 5, 'boo': 7, 'ool': 7, 'ole': 7, 'lea': 7, 'ean': 7, 'an ': 3, 'n a': 3, ' an': 1, 'and': 1, 'nd ': 1, 'd a': 1, 'a l': 3, ' li': 3, 'lis': 15, 'ist': 15, 'st ': 3, 't o': 3, ' of': 3, 'of ': 3, 'f i': 5, ' in': 5, 'int': 3, 'nte': 1, 'teg': 1, 'ege': 1, 'ger': 1, 'ers': 4, 'rs ': 1, ' as': 1, 'as ': 1, 's p': 1, ' pa': 3, 'par': 3, 'ara': 3, 'ram': 3, 'ame': 3, 'met': 3, 'ete': 3, 'ter': 3, 'rs.': 3, 's.\n': 3, '.\n#': 3, '# I': 3, ' If': 5, 'If ': 5, 'f t': 5, 'the': 9, 'he ': 9, 'e b': 2, 'n p': 2, 'er ': 2, 'r i': 6, ' is': 5, 'is ': 4, 's T': 1, ' Tr': 1, 'Tru': 3, 'rue': 3, 'ue,': 3, 'e, ': 7, ', r': 2, ' re': 6, 'ret': 6, 'etu': 6, 'tur': 6, 'urn': 6, 'rn ': 6, 'f o': 4, ' on': 2, 'onl': 2, 'nly': 2, 'ly ': 2, 'y e': 1, ' ev': 1, 'en ': 1, 'n n': 1, ' nu': 2, 'num': 2, 'umb': 2, 'mbe': 2, 'ber': 2, 'isF': 1, 'sFa': 1, 'Fal': 4, 'als': 4, 'lse': 6, 'se,': 4, 'y o': 1, 'dd ': 1, 'd n': 1, '  E': 1, 'Exp': 1, 'xpe': 1, 'pec': 1, 'ect': 1, 'cte': 1, 'ted': 1, 'd O': 1, ' Ou': 1, 'Out': 3, 'utp': 3, 'tpu': 3, 'put': 3, 'ut:': 1, 't:\n': 5, ':\n#': 1, '  I': 2, 'e f': 5, 'll ': 3, 'l i': 3, 's o': 3, 'ns(': 7, 's(T': 2, '(Tr': 2, ', [': 5, ' [8': 4, '[8,': 4, '8, ': 5, ', 1': 4, ' 13': 4, '13,': 7, '3, ': 7, ', 2': 5, ' 22': 5, '22,': 7, '2, ': 7, ', 3': 7, ' 31': 7, '31]': 7, '1])': 5, ']),': 2, '), ': 2, ', t': 2, 'e t': 2, 'n w': 2, ' wo': 2, 'wou': 2, 'oul': 2, 'uld': 2, 'ld ': 2, 'd r': 2, 'n [': 2, ' [2': 2, '[22': 2, ', 8': 3, ' 8]': 2, '8]\n': 2, ']\n#': 2, 's(F': 3, '(Fa': 3, ' [1': 3, '[13': 3, '1]\n': 2, '#\n\n': 1, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 's(b': 2, '(bo': 2, 'an,': 2, 'n, ': 2, ', m': 2, ' my': 12, 'my_': 12, 'y_l': 12, '_li': 12, 'st)': 2, 't):': 2, '):\n': 3, ':\n ': 14, '\n  ': 18, '  i': 6, ' if': 6, 'if ': 6, 'f b': 2, 'an:': 2, 'n:\n': 2, '  f': 4, ' fo': 4, 'for': 4, 'or ': 4, ' i ': 8, 'i i': 4, 'in ': 4, 'n m': 6, 'st:': 4, 'i %': 4, ' % ': 4, '% 2': 4, ' 2 ': 4, '2 !': 2, ' !=': 2, '!= ': 2, '= 0': 4, ' 0:': 4, '0:\n': 4, '  m': 4, 'st.': 4, 't.r': 4, '.re': 4, 'rem': 4, 'emo': 4, 'mov': 4, 'ove': 4, 've(': 4, 'e(i': 4, '(i)': 4, 'i)\n': 4, ')\n ': 4, '  e': 2, ' el': 2, 'els': 2, 'se:': 2, 'e:\n': 2, '2 =': 2, ' ==': 2, '== ': 2, '  r': 2, 'st\n': 2, 't\n\n': 2, '\n\np': 2, '\npr': 2, 'pri': 2, 'rin': 2, 'nt(': 2, 't(o': 2, '(od': 2, ']))': 2, '))\n': 2, ')\n\n': 2, '\n\n#': 3, '\n#O': 2, '#Ou': 2, 'ut ': 2, 't =': 2, ' =>': 2, '=> ': 2, '> [': 2, ']\n\n': 1, ' 8,': 1, ']):': 1, ':\n\n': 1}"
Alice Gana,functio_excercise3.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'####################################################################################################################': 2, '#': 12, 'functions': 1, '-': 1, 'lab': 1, 'exercise': 1, '3': 1, 'write': 1, 'a': 4, 'function': 8, 'called': 1, 'search_list': 1, 'that': 1, 'takes': 1, 'list': 1, 'and': 1, 'search': 3, 'term': 3, 'as': 1, 'parameters.': 1, 'if': 7, 'the': 15, 'is': 6, 'located': 1, 'in': 4, 'list,': 2, 'return': 7, 'index': 1, 'of': 1, 'matching': 1, 'element.': 1, 'should': 1, 'work': 1, 'even': 1, 'there': 1, 'difference': 1, 'capitalization.': 1, 'not': 1, '-1.': 1, 'expected': 1, 'output:': 1, 'call': 3, 'search_list([""dog"",': 1, '""fish"",': 1, '""cat""],': 1, '""cat""),': 1, 'would': 3, '2': 1, 'search_list([""water"",': 1, '""toy"",': 1, '""house""],': 1, '""toy""),': 1, 'then': 1, '1': 1, 'search_list([""box"",': 1, '""car"",': 1, '""hat""],': 1, '""mouse""),': 1, '-1': 2, 'def': 1, 'search_list(my_list,': 1, 'search_term):': 1, 'for': 1, 'i': 2, 'range(len(my_list)):': 1, 'search_term': 1, '=': 2, 'search_term.lower()': 1, 'my_list[i]': 2, 'my_list[i].lower()': 1, '==': 1, 'search_term:': 1}","{'\n##': 2, '###': 228, '##\n': 2, '#\n#': 4, '\n# ': 9, '#  ': 5, '   ': 46, '  F': 1, ' Fu': 1, 'Fun': 1, 'unc': 9, 'nct': 9, 'cti': 9, 'tio': 10, 'ion': 10, 'ons': 1, 'ns ': 1, 's -': 1, ' - ': 1, '- L': 1, ' La': 1, 'Lab': 1, 'ab ': 1, 'b E': 1, ' Ex': 2, 'Exe': 1, 'xer': 1, 'erc': 1, 'rci': 1, 'cis': 1, 'ise': 1, 'se ': 1, 'e 3': 1, ' 3\n': 1, '3\n#': 1, '\n#\n': 3, '# W': 1, ' Wr': 1, 'Wri': 1, 'rit': 1, 'ite': 1, 'te ': 1, 'e a': 1, ' a ': 4, 'a f': 1, ' fu': 8, 'fun': 8, 'on ': 8, 'n c': 5, ' ca': 5, 'cal': 4, 'all': 4, 'lle': 1, 'led': 1, 'ed ': 3, 'd s': 1, ' se': 12, 'sea': 12, 'ear': 12, 'arc': 12, 'rch': 12, 'ch_': 9, 'h_l': 5, '_li': 10, 'lis': 13, 'ist': 13, 'st ': 2, 't t': 2, ' th': 17, 'tha': 1, 'hat': 2, 'at ': 1, ' ta': 1, 'tak': 1, 'ake': 1, 'kes': 1, 'es ': 1, 's a': 2, 'a l': 1, ' li': 3, 't a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd a': 1, 'a s': 1, 'ch ': 3, 'h t': 3, ' te': 3, 'ter': 9, 'erm': 7, 'rm ': 4, 'm a': 1, ' as': 1, 'as ': 1, 's p': 1, ' pa': 1, 'par': 1, 'ara': 1, 'ram': 1, 'ame': 1, 'met': 1, 'ete': 1, 'ers': 1, 'rs.': 1, 's.\n': 1, '.\n#': 4, '# I': 2, ' If': 5, 'If ': 5, 'f t': 7, 'the': 16, 'he ': 15, 'e s': 2, 'm i': 2, ' is': 6, 'is ': 6, 's l': 1, ' lo': 1, 'loc': 1, 'oca': 1, 'cat': 2, 'ate': 2, 'ted': 2, 'd i': 1, ' in': 5, 'in ': 4, 'n t': 4, 'e l': 2, 'st,': 3, 't, ': 3, ', r': 2, ' re': 7, 'ret': 7, 'etu': 7, 'tur': 7, 'urn': 7, 'rn ': 7, 'e i': 3, 'ind': 1, 'nde': 1, 'dex': 1, 'ex ': 1, 'x o': 1, ' of': 1, 'of ': 1, 'e m': 1, ' ma': 1, 'mat': 1, 'atc': 1, 'tch': 1, 'chi': 1, 'hin': 1, 'ing': 1, 'ng ': 1, 'g e': 1, ' el': 1, 'ele': 1, 'lem': 1, 'eme': 1, 'men': 1, 'ent': 1, 'nt.': 1, 't.\n': 1, '# T': 1, ' Th': 1, 'The': 1, 'e f': 7, 'n s': 1, ' sh': 1, 'sho': 1, 'hou': 2, 'oul': 4, 'uld': 4, 'ld ': 4, 'd w': 1, ' wo': 4, 'wor': 1, 'ork': 1, 'rk ': 1, 'k e': 1, ' ev': 1, 'eve': 1, 'ven': 1, 'en ': 2, 'n i': 2, ' if': 2, 'if ': 2, 'her': 1, 'ere': 2, 're ': 1, 'a d': 1, ' di': 1, 'dif': 1, 'iff': 1, 'ffe': 1, 'fer': 1, 'ren': 1, 'enc': 1, 'nce': 1, 'ce ': 1, 'cap': 1, 'api': 1, 'pit': 1, 'ita': 1, 'tal': 1, 'ali': 1, 'liz': 1, 'iza': 1, 'zat': 1, 'ati': 1, 'on.': 1, 'n.\n': 1, '  I': 3, 's n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't i': 1, 'n -': 3, ' -1': 3, '-1.': 1, '1.\n': 1, '  E': 1, 'Exp': 1, 'xpe': 1, 'pec': 1, 'ect': 1, 'cte': 1, 'd O': 1, ' Ou': 1, 'Out': 1, 'utp': 1, 'tpu': 1, 'put': 1, 'ut:': 1, 't:\n': 1, ':\n#': 1, 'll ': 3, 'l i': 3, 's s': 3, 'st(': 4, 't([': 3, '([""': 3, '[""d': 1, '""do': 1, 'dog': 1, 'og""': 1, 'g"",': 1, '"", ': 6, ', ""': 9, ' ""f': 1, '""fi': 1, 'fis': 1, 'ish': 1, 'sh""': 1, 'h"",': 1, ' ""c': 2, '""ca': 2, 'at""': 3, 't""]': 2, '""],': 3, '], ': 3, ' ""C': 1, '""Ca': 1, 'Cat': 1, 't"")': 1, '""),': 3, '), ': 3, ', t': 3, 'e t': 2, 'n w': 3, 'wou': 3, 'd r': 3, 'n 2': 1, ' 2\n': 1, '2\n#': 1, '[""w': 1, '""wa': 1, 'wat': 1, 'er""': 1, 'r"",': 2, ' ""T': 1, '""To': 1, 'Toy': 1, 'oy""': 2, 'y"",': 1, ' ""h': 2, '""ho': 1, 'ous': 2, 'use': 2, 'se""': 2, 'e""]': 1, ' ""t': 1, '""to': 1, 'toy': 1, 'y"")': 1, 'hen': 1, 'n 1': 1, ' 1\n': 1, '1\n#': 2, '[""b': 1, '""bo': 1, 'box': 1, 'ox""': 1, 'x"",': 1, 'car': 1, 'ar""': 1, '""ha': 1, ' ""m': 1, '""mo': 1, 'mou': 1, 'e"")': 1, '-1\n': 2, '#\n\n': 1, '\n\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f s': 1, 't(m': 1, '(my': 2, 'my_': 5, 'y_l': 5, ', s': 1, 'h_t': 4, '_te': 4, 'rm)': 1, 'm):': 1, '):\n': 2, ':\n ': 3, '\n  ': 6, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(l': 1, '(le': 1, 'len': 1, 'en(': 1, 'n(m': 1, 'st)': 1, 't))': 1, ')):': 1, '  s': 1, 'm =': 1, ' = ': 2, '= s': 2, 'rm.': 1, 'm.l': 1, '.lo': 2, 'low': 2, 'owe': 2, 'wer': 2, 'er(': 2, 'r()': 2, '()\n': 2, ')\n ': 1, '  m': 1, ' my': 3, 'st[': 3, 't[i': 3, '[i]': 3, 'i] ': 2, '] =': 2, '= m': 1, 'i].': 1, '].l': 1, ')\n\n': 1, '\n\n ': 1, '  i': 1, 'f m': 1, ' ==': 1, '== ': 1, 'rm:': 1, 'm:\n': 1, '  r': 2, ' i\n': 1, 'i\n ': 1}"
Alice Gana,list_exercise1.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'####################################################################################################################': 2, '#': 11, 'lists': 1, '-': 1, 'lab': 1, 'exercise': 1, '1': 1, 'write': 1, 'a': 3, 'program': 1, 'that': 1, 'takes': 1, 'list': 1, 'of': 2, 'integers': 1, 'called': 1, 'numbers': 5, 'and': 1, 'replaces': 1, 'each': 1, 'element': 3, 'greater': 1, 'than': 1, '10': 1, 'with': 1, ""'*'."": 1, 'print': 3, 'the': 1, 'new': 1, 'version': 1, 'numbers.': 1, 'expected': 1, 'output': 3, 'if': 4, '=': 6, '[30,': 2, '1,': 4, '20,': 2, '4]': 4, 'then': 2, 'you': 2, 'will': 2, ""['*',"": 2, ""'*',"": 4, '[5,': 4, '9,': 4, '11,': 2, '23]': 2, ""'*']"": 2, 'for': 2, 'in': 2, 'range(len(numbers)):': 2, 'numbers[element]': 4, '>': 2, '10:': 2, '""*""': 2, 'print(numbers)': 2, '=>': 2}","{'\n##': 2, '###': 228, '##\n': 2, '#\n#': 4, '\n# ': 8, '#  ': 4, '   ': 57, '  L': 1, ' LI': 1, 'LIS': 1, 'IST': 1, 'STS': 1, 'TS ': 1, 'S -': 1, ' - ': 1, '- L': 1, ' La': 1, 'Lab': 1, 'ab ': 1, 'b E': 1, ' Ex': 2, 'Exe': 1, 'xer': 1, 'erc': 1, 'rci': 1, 'cis': 1, 'ise': 1, 'se ': 1, 'e 1': 1, ' 1\n': 1, '1\n#': 1, '\n#\n': 3, '# W': 1, ' Wr': 1, 'Wri': 1, 'rit': 1, 'ite': 1, 'te ': 1, 'e a': 1, ' a ': 3, 'a p': 1, ' pr': 3, 'pro': 1, 'rog': 1, 'ogr': 1, 'gra': 1, 'ram': 1, 'am ': 1, 'm t': 1, ' th': 5, 'tha': 2, 'hat': 1, 'at ': 1, 't t': 2, ' ta': 1, 'tak': 1, 'ake': 1, 'kes': 1, 'es ': 2, 's a': 2, 'a l': 1, ' li': 1, 'lis': 1, 'ist': 1, 'st ': 1, 't o': 1, ' of': 2, 'of ': 2, 'f i': 1, ' in': 3, 'int': 6, 'nte': 1, 'teg': 1, 'ege': 1, 'ger': 1, 'ers': 16, 'rs ': 6, 's c': 1, ' ca': 1, 'cal': 1, 'all': 1, 'lle': 1, 'led': 1, 'ed ': 2, 'd n': 1, ' nu': 8, 'num': 14, 'umb': 14, 'mbe': 14, 'ber': 14, ' an': 1, 'and': 1, 'nd ': 1, 'd r': 1, ' re': 1, 'rep': 1, 'epl': 1, 'pla': 1, 'lac': 1, 'ace': 1, 'ces': 1, 's e': 1, ' ea': 1, 'eac': 1, 'ach': 1, 'ch ': 1, 'h e': 1, ' el': 3, 'ele': 7, 'lem': 7, 'eme': 7, 'men': 7, 'ent': 7, 'nt ': 6, 't g': 1, ' gr': 1, 'gre': 1, 'rea': 1, 'eat': 1, 'ate': 1, 'ter': 1, 'er ': 1, 'r t': 1, 'han': 1, 'an ': 1, 'n 1': 1, ' 10': 3, '10 ': 1, '0 w': 1, ' wi': 3, 'wit': 1, 'ith': 1, 'th ': 1, 'h a': 1, ""a '"": 1, "" '*"": 7, ""'*'"": 9, ""*'."": 1, ""'.\n"": 1, '.\n#': 2, '# P': 1, ' Pr': 1, 'Pri': 1, 'rin': 5, 'the': 3, 'he ': 1, 'e n': 1, ' ne': 1, 'new': 1, 'ew ': 1, 'w v': 1, ' ve': 1, 'ver': 1, 'rsi': 1, 'sio': 1, 'ion': 1, 'on ': 1, 'n o': 1, 'f n': 5, 'rs.': 1, 's.\n': 1, '  E': 1, 'Exp': 1, 'xpe': 1, 'pec': 1, 'ect': 1, 'cte': 1, 'ted': 1, 'd O': 1, ' Ou': 3, 'Out': 3, 'utp': 3, 'tpu': 3, 'put': 3, 'ut\n': 1, 't\n#': 1, '  I': 2, ' If': 2, 'If ': 2, 's =': 4, ' = ': 6, '= [': 4, ' [3': 2, '[30': 2, '30,': 2, '0, ': 4, ', 1': 6, ' 1,': 4, '1, ': 6, ', 2': 4, ' 20': 2, '20,': 2, ', 4': 4, ' 4]': 4, '4] ': 1, '] t': 2, 'hen': 2, 'en ': 2, 'n y': 2, ' yo': 2, 'you': 2, 'ou ': 2, 'u w': 2, 'wil': 2, 'ill': 2, 'll ': 2, 'l p': 2, 'pri': 4, 't [': 2, "" ['"": 2, ""['*"": 2, ""*',"": 6, ""', "": 6, "", '"": 6, '4]\n': 3, ']\n#': 2, ' [5': 4, '[5,': 4, '5, ': 4, ', 9': 4, ' 9,': 4, '9, ': 4, ' 11': 2, '11,': 2, ' 23': 2, '23]': 2, '3] ': 1, ""*']"": 2, ""']\n"": 2, '#\n\n': 1, '\n\nn': 2, '\nnu': 2, ']\n\n': 3, '\n\nf': 2, '\nfo': 2, 'for': 2, 'or ': 2, 'r e': 2, 't i': 2, 'in ': 2, 'n r': 2, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(l': 2, '(le': 2, 'len': 2, 'en(': 2, 'n(n': 2, '(nu': 4, 'rs)': 4, 's))': 2, ')):': 2, '):\n': 2, ':\n ': 4, '\n  ': 4, '  i': 2, ' if': 2, 'if ': 2, 'rs[': 4, 's[e': 4, '[el': 4, 'nt]': 4, 't] ': 4, '] >': 2, ' > ': 2, '> 1': 2, '10:': 2, '0:\n': 2, '  n': 2, '] =': 2, '= ""': 2, ' ""*': 2, '""*""': 2, '*""\n': 2, '""\n\n': 2, '\n\np': 2, '\npr': 2, 'nt(': 2, 't(n': 2, 's)\n': 2, ')\n\n': 2, '\n\n#': 2, '# O': 2, 'ut ': 2, 't =': 2, ' =>': 2, '=> ': 2, '> [': 2, '3]\n': 1}"
Alice Gana,list_exercise2.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'####################################################################################################################': 2, '#': 10, 'lab': 1, 'exercise': 1, '2': 1, 'write': 1, 'a': 3, 'program': 1, 'that': 1, 'takes': 1, 'list': 5, 'called': 1, 'my_list': 4, '(it': 1, 'could': 1, 'be': 1, 'of': 3, 'any': 1, 'data': 1, 'type)': 1, 'and': 1, 'prints': 1, 'the': 5, 'three': 1, 'times': 1, 'if': 5, 'length': 2, 'is': 2, 'less': 1, 'than': 2, '5.': 1, 'greater': 1, 'or': 1, 'equal': 1, 'to': 1, '5,': 1, 'then': 3, 'print': 3, 'one': 1, 'time.': 1, 'expected': 1, 'output': 2, '=': 2, ""['hi',"": 2, ""'hello']"": 2, 'you': 2, 'will': 2, ""'hello',"": 2, ""'hi',"": 2, '[65,': 2, '111,': 2, '2,': 5, '81,': 2, '65,': 2, '32]': 2, 'my_list=[1,2,3]': 1, 'len': 1, '(my_list)': 1, '<': 1, '5:': 1, 'print(my_list': 1, '*': 1, '3)': 1, 'else:': 1, 'print(my_list)': 1, '=>': 1, '[1,': 1, '3,': 2, '1,': 2, '3]': 1}","{'\n##': 2, '###': 228, '##\n': 2, '#\n#': 3, '\n# ': 8, '#  ': 7, '   ': 42, '  L': 1, ' La': 1, 'Lab': 1, 'ab ': 1, 'b E': 1, ' Ex': 2, 'Exe': 1, 'xer': 1, 'erc': 1, 'rci': 1, 'cis': 1, 'ise': 1, 'se ': 1, 'e 2': 1, ' 2\n': 1, '2\n#': 1, '\n#\n': 2, '  W': 1, ' Wr': 1, 'Wri': 1, 'rit': 1, 'ite': 1, 'te ': 1, 'e a': 2, ' a ': 3, 'a p': 1, ' pr': 7, 'pro': 1, 'rog': 1, 'ogr': 1, 'gra': 1, 'ram': 1, 'am ': 1, 'm t': 1, ' th': 12, 'tha': 3, 'hat': 1, 'at ': 1, 't t': 3, ' ta': 1, 'tak': 1, 'ake': 1, 'kes': 1, 'es ': 2, 's a': 1, 'a l': 2, ' li': 5, 'lis': 13, 'ist': 13, 'st ': 10, 't c': 2, ' ca': 1, 'cal': 1, 'all': 1, 'lle': 1, 'led': 1, 'ed ': 2, 'd m': 1, ' my': 4, 'my_': 8, 'y_l': 8, '_li': 8, 't (': 1, ' (i': 1, '(it': 1, 'it ': 1, ' co': 1, 'cou': 1, 'oul': 1, 'uld': 1, 'ld ': 1, 'd b': 1, ' be': 1, 'be ': 1, 't o': 2, ' of': 3, 'of ': 3, 'f a': 1, ' an': 2, 'any': 1, 'ny ': 1, 'y d': 1, ' da': 1, 'dat': 1, 'ata': 1, 'ta ': 1, 'a t': 1, ' ty': 1, 'typ': 1, 'ype': 1, 'pe)': 1, 'e)\n': 1, ')\n#': 1, '  a': 1, 'and': 1, 'nd ': 1, 'd p': 1, 'pri': 6, 'rin': 6, 'int': 6, 'nts': 1, 'ts ': 1, 's t': 2, 'the': 8, 'he ': 5, 'e l': 5, 'thr': 1, 'hre': 1, 'ree': 1, 'ee ': 1, 'e t': 2, ' ti': 2, 'tim': 2, 'ime': 2, 'mes': 1, 's i': 1, ' if': 1, 'if ': 2, 'f t': 3, ' le': 4, 'len': 3, 'eng': 2, 'ngt': 2, 'gth': 2, 'th ': 2, 'h o': 2, 't i': 2, ' is': 2, 'is ': 2, 's l': 1, 'les': 1, 'ess': 1, 'ss ': 1, 'han': 2, 'an ': 2, 'n 5': 1, ' 5.': 1, '5.\n': 1, '.\n#': 2, '  I': 3, ' If': 3, 'If ': 3, 'f m': 3, 's g': 1, ' gr': 1, 'gre': 1, 'rea': 1, 'eat': 1, 'ate': 1, 'ter': 1, 'er ': 1, 'r t': 1, 'n o': 1, ' or': 1, 'or ': 1, 'r e': 1, ' eq': 1, 'equ': 1, 'qua': 1, 'ual': 1, 'al ': 1, 'l t': 1, ' to': 1, 'to ': 1, 'o 5': 1, ' 5,': 1, '5, ': 5, ', t': 1, 'hen': 3, 'en ': 4, 'n p': 1, 'nt ': 3, ' on': 1, 'one': 1, 'ne ': 1, 'me.': 1, 'e.\n': 1, '  E': 1, 'Exp': 1, 'xpe': 1, 'pec': 1, 'ect': 1, 'cte': 1, 'ted': 1, 'd O': 1, ' Ou': 2, 'Out': 2, 'utp': 2, 'tpu': 2, 'put': 2, 'ut\n': 1, 't\n#': 1, 't =': 3, ' = ': 2, '= [': 2, "" ['"": 2, ""['h"": 2, ""'hi"": 4, ""hi'"": 4, ""i',"": 4, ""', "": 6, "", '"": 6, "" 'h"": 6, ""'he"": 4, 'hel': 4, 'ell': 4, 'llo': 4, ""lo'"": 4, ""o']"": 2, ""'] "": 1, '] t': 2, 'n y': 2, ' yo': 2, 'you': 2, 'ou ': 2, 'u w': 2, ' wi': 2, 'wil': 2, 'ill': 2, 'll ': 2, 'l p': 2, 't [': 2, ""o',"": 2, ""']\n"": 1, ']\n#': 2, ' [6': 2, '[65': 2, '65,': 4, ', 1': 4, ' 11': 2, '111': 2, '11,': 2, '1, ': 7, ', 2': 5, ' 2,': 5, '2, ': 5, ', 8': 2, ' 81': 2, '81,': 2, ', 6': 2, ' 65': 2, ', 3': 5, ' 32': 2, '32]': 2, '2] ': 1, '2]\n': 1, '#\n\n': 1, '\n\nm': 1, '\nmy': 1, 'st=': 1, 't=[': 1, '=[1': 1, '[1,': 2, '1,2': 1, ',2,': 1, '2,3': 1, ',3]': 1, '3]\n': 2, ']\ni': 1, '\nif': 1, 'f l': 1, 'n (': 1, ' (m': 1, '(my': 3, 'st)': 2, 't) ': 1, ') <': 1, ' < ': 1, '< 5': 1, ' 5:': 1, '5:\n': 1, ':\n ': 2, '\n  ': 2, '  p': 2, 'nt(': 2, 't(m': 2, 't *': 1, ' * ': 1, '* 3': 1, ' 3)': 1, '3)\n': 1, ')\ne': 1, '\nel': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, 't)\n': 1, ')\n\n': 1, '\n\n#': 1, '# O': 1, 'ut ': 1, ' =>': 1, '=> ': 1, '> [': 1, ' [1': 1, ' 3,': 2, '3, ': 2, ' 1,': 2, ' 3]': 1}"
Alice Gana,list_exercise3.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'####################################################################################################################': 2, '#': 13, 'lab': 1, 'exercise': 1, '3': 1, 'write': 1, 'a': 3, 'program': 2, 'that': 4, 'takes': 1, 'list': 1, 'called': 1, 'strings': 5, 'contains': 1, 'random': 3, 'selection': 1, 'of': 1, 'strings.': 1, 'your': 1, 'should': 1, 'print': 5, 'the': 7, 'first': 3, 'string': 1, 'when': 1, 'arranged': 1, 'in': 3, 'alphabetical': 1, 'order.': 1, 'expected': 1, 'output:': 1, 'if': 2, '=': 4, ""['luck',"": 2, ""'cat',"": 2, ""'kid',"": 2, ""'house']"": 2, 'then': 2, 'you': 2, 'will': 2, 'cat': 2, ""['duck',"": 2, ""'dddd',"": 2, ""'mouse',"": 2, ""'kite']"": 2, 'dddd': 2, 'import': 2, '(min': 2, '(strings))': 2, 'min': 2, 'function': 2, 'returns': 2, 'â\x80\x9csmallestâ\x80\x9d': 2, 'element.': 2, 'strings,': 2, ""it's"": 2, 'one': 2, 'comes': 2, 'alphabetically.': 2, 'output': 2, '=>': 2}","{'\n##': 2, '###': 228, '##\n': 2, '#\n#': 4, '\n# ': 10, '#  ': 6, '   ': 42, '  L': 1, ' La': 1, 'Lab': 1, 'ab ': 1, 'b E': 1, ' Ex': 2, 'Exe': 1, 'xer': 1, 'erc': 1, 'rci': 1, 'cis': 1, 'ise': 1, 'se ': 1, 'e 3': 1, ' 3\n': 1, '3\n#': 1, '\n#\n': 3, '  W': 1, ' Wr': 1, 'Wri': 1, 'rit': 1, 'ite': 3, 'te ': 1, 'e a': 1, ' a ': 3, 'a p': 1, ' pr': 5, 'pro': 2, 'rog': 2, 'ogr': 2, 'gra': 2, 'ram': 2, 'am ': 2, 'm t': 1, ' th': 11, 'tha': 4, 'hat': 4, 'at ': 4, 't t': 2, ' ta': 1, 'tak': 1, 'ake': 1, 'kes': 1, 'es ': 3, 's a': 2, 'a l': 1, ' li': 1, 'lis': 1, 'ist': 1, 'st ': 4, 't c': 5, ' ca': 3, 'cal': 4, 'all': 5, 'lle': 3, 'led': 1, 'ed ': 3, 'd s': 1, ' st': 7, 'str': 11, 'tri': 11, 'rin': 16, 'ing': 11, 'ngs': 10, 'gs ': 5, 's t': 5, ' co': 3, 'con': 1, 'ont': 1, 'nta': 1, 'tai': 1, 'ain': 1, 'ins': 1, 'ns ': 3, 'a r': 1, ' ra': 3, 'ran': 4, 'and': 3, 'ndo': 3, 'dom': 3, 'om ': 1, 'm s': 2, ' se': 1, 'sel': 1, 'ele': 3, 'lec': 1, 'ect': 2, 'cti': 3, 'tio': 3, 'ion': 3, 'on ': 3, 'n o': 1, ' of': 1, 'of ': 1, 'f s': 3, 'gs.': 1, 's.\n': 1, '.\n#': 2, '  Y': 1, ' Yo': 1, 'You': 1, 'our': 1, 'ur ': 1, 'r p': 1, ' sh': 1, 'sho': 1, 'hou': 3, 'oul': 1, 'uld': 1, 'ld ': 1, 'd p': 1, 'pri': 5, 'int': 5, 'nt ': 5, 'the': 7, 'he ': 7, 'e f': 1, ' fi': 3, 'fir': 3, 'irs': 3, 'rst': 3, 't s': 1, 'ng ': 1, 'g w': 1, ' wh': 1, 'whe': 1, 'hen': 3, 'en ': 3, 'n a': 2, ' ar': 1, 'arr': 1, 'rra': 1, 'ang': 1, 'nge': 1, 'ged': 1, 'd i': 1, ' in': 1, 'in ': 5, ' al': 3, 'alp': 3, 'lph': 3, 'pha': 3, 'hab': 3, 'abe': 3, 'bet': 3, 'eti': 3, 'tic': 3, 'ica': 3, 'al ': 1, 'l o': 1, ' or': 1, 'ord': 1, 'rde': 1, 'der': 1, 'er.': 1, 'r.\n': 1, '  E': 1, 'Exp': 1, 'xpe': 1, 'pec': 1, 'cte': 1, 'ted': 1, 'd O': 1, ' Ou': 3, 'Out': 3, 'utp': 3, 'tpu': 3, 'put': 3, 'ut:': 1, 't:\n': 1, ':\n#': 1, '  I': 2, ' If': 2, 'If ': 2, 's =': 4, ' = ': 4, '= [': 4, "" ['"": 4, ""['l"": 2, ""'lu"": 2, 'luc': 2, 'uck': 4, ""ck'"": 4, ""k',"": 4, ""', "": 12, "", '"": 12, "" 'c"": 2, ""'ca"": 2, 'cat': 4, ""at'"": 2, ""t',"": 2, "" 'k"": 4, ""'ki"": 4, 'kid': 2, ""id'"": 2, ""d',"": 4, "" 'h"": 2, ""'ho"": 2, 'ous': 4, 'use': 4, ""se'"": 4, ""e']"": 4, ""'] "": 2, '] t': 2, 'n y': 2, ' yo': 2, 'you': 2, 'ou ': 2, 'u w': 2, ' wi': 2, 'wil': 2, 'ill': 2, 'll ': 2, 'l p': 2, 'at\n': 2, 't\n#': 1, ""['d"": 2, ""'du"": 2, 'duc': 2, "" 'd"": 2, ""'dd"": 2, 'ddd': 8, ""dd'"": 2, "" 'm"": 2, ""'mo"": 2, 'mou': 2, ""e',"": 2, 'kit': 2, ""te'"": 2, 't d': 1, ' dd': 2, 'dd\n': 2, 'd\n#': 1, '#\n\n': 1, '\n\n\n': 1, '\n\ni': 2, '\nim': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't r': 2, 'om\n': 2, 'm\ns': 2, '\nst': 2, ""']\n"": 2, ']\np': 2, '\npr': 2, 't (': 2, ' (m': 2, '(mi': 2, 'min': 4, 'n (': 2, ' (s': 2, '(st': 2, 'gs)': 2, 's))': 2, '))\n': 2, ')\n#': 2, '# T': 2, ' Th': 2, 'The': 2, 'e m': 2, ' mi': 2, 'n f': 2, ' fu': 2, 'fun': 2, 'unc': 2, 'nct': 2, 'n r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rns': 2, 'e â': 2, ' â\x80': 2, 'â\x80\x9c': 2, '\x80\x9cs': 2, '\x9csm': 2, 'sma': 2, 'mal': 2, 'les': 2, 'est': 2, 'stâ': 2, 'tâ\x80': 2, 'â\x80\x9d': 2, '\x80\x9d ': 2, '\x9d e': 2, ' el': 2, 'lem': 2, 'eme': 2, 'men': 2, 'ent': 2, 'nt.': 2, 't. ': 2, '. I': 2, ' In': 2, 'In ': 2, 'n s': 2, 'gs,': 2, 's, ': 2, ', i': 2, ' it': 2, ""it'"": 2, ""t's"": 2, ""'s "": 2, 'e o': 2, ' on': 2, 'one': 2, 'ne ': 2, 'e t': 2, 'com': 2, 'ome': 2, 'mes': 2, 's f': 2, 't a': 2, 'lly': 2, 'ly.': 2, 'y.\n': 2, '.\n\n': 2, '\n\n#': 2, '# O': 2, 'ut ': 2, 't =': 2, ' =>': 2, '=> ': 2, '> c': 1, 't\n\n': 1, '> d': 1}"
Alice Gana,list_exercise4.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'####################################################################################################################': 2, '#': 11, 'lab': 1, 'exercise': 1, '4': 1, 'write': 1, 'a': 3, 'program': 2, 'that': 2, 'takes': 1, 'list': 1, 'called': 1, 'numbers': 6, 'contains': 1, 'integers': 1, 'in': 4, 'sequence': 2, '(the': 1, 'is': 1, 'always': 1, 'increasing,': 1, 'never': 1, 'decreasing).': 1, 'your': 1, 'should': 1, 'add': 1, 'the': 3, 'next': 1, 'two': 1, 'sequence,': 1, 'and': 1, 'then': 3, 'print': 3, 'list.': 1, 'expected': 1, 'output:': 1, 'if': 2, '=': 4, '[1,': 4, '2,': 4, '3,': 4, '4]': 2, 'you': 2, 'will': 2, '4,': 2, '5,': 2, '6]': 2, '[-5,': 4, '-4,': 4, '-3,': 4, '-2]': 2, '-2,': 2, '-1,': 2, '0]': 2, 'for': 2, 'i': 2, 'range(2):': 2, 'numbers.append(numbers[-1]+1)': 2, 'print(numbers)': 2, 'output': 2, '=>': 2}","{'\n##': 2, '###': 228, '##\n': 2, '#\n#': 3, '\n# ': 9, '#  ': 4, '   ': 42, '  L': 1, ' La': 1, 'Lab': 1, 'ab ': 1, 'b E': 1, ' Ex': 2, 'Exe': 1, 'xer': 1, 'erc': 1, 'rci': 1, 'cis': 1, 'ise': 1, 'se ': 1, 'e 4': 1, ' 4\n': 1, '4\n#': 1, '\n#\n': 2, '# W': 1, ' Wr': 1, 'Wri': 1, 'rit': 1, 'ite': 1, 'te ': 1, 'e a': 1, ' a ': 3, 'a p': 1, ' pr': 5, 'pro': 2, 'rog': 2, 'ogr': 2, 'gra': 2, 'ram': 2, 'am ': 2, 'm t': 1, ' th': 8, 'tha': 2, 'hat': 2, 'at ': 2, 't t': 3, ' ta': 1, 'tak': 1, 'ake': 1, 'kes': 1, 'es ': 1, 's a': 2, 'a l': 1, ' li': 2, 'lis': 2, 'ist': 2, 'st ': 1, 't c': 2, ' ca': 1, 'cal': 1, 'all': 1, 'lle': 1, 'led': 1, 'ed ': 2, 'd n': 1, ' nu': 6, 'num': 12, 'umb': 12, 'mbe': 12, 'ber': 12, 'ers': 13, 'rs ': 7, 's t': 1, ' co': 1, 'con': 1, 'ont': 1, 'nta': 1, 'tai': 1, 'ain': 1, 'ins': 1, 'ns ': 1, 's i': 4, ' in': 6, 'int': 6, 'nte': 1, 'teg': 1, 'ege': 1, 'ger': 1, 'in ': 4, 'n a': 1, 'a s': 1, ' se': 3, 'seq': 3, 'equ': 3, 'que': 3, 'uen': 3, 'enc': 3, 'nce': 3, 'ce\n': 1, 'e\n#': 1, '# (': 1, ' (t': 1, '(th': 1, 'the': 7, 'he ': 4, 'e s': 2, 'ce ': 1, 'e i': 1, ' is': 1, 'is ': 1, ' al': 1, 'alw': 1, 'lwa': 1, 'way': 1, 'ays': 1, 'ys ': 1, 'inc': 1, 'ncr': 1, 'cre': 2, 'rea': 2, 'eas': 2, 'asi': 2, 'sin': 2, 'ing': 2, 'ng,': 1, 'g, ': 1, ', n': 1, ' ne': 2, 'nev': 1, 'eve': 1, 'ver': 1, 'er ': 1, 'r d': 1, ' de': 1, 'dec': 1, 'ecr': 1, 'ng)': 1, 'g).': 1, ').\n': 1, '.\n#': 2, '# Y': 1, ' Yo': 1, 'You': 1, 'our': 1, 'ur ': 1, 'r p': 1, 'm s': 1, ' sh': 1, 'sho': 1, 'hou': 1, 'oul': 1, 'uld': 1, 'ld ': 1, 'd a': 1, ' ad': 1, 'add': 1, 'dd ': 1, 'd t': 2, 'e n': 1, 'nex': 1, 'ext': 1, 'xt ': 1, ' tw': 1, 'two': 1, 'wo ': 1, 'o n': 1, 'n t': 1, 'ce,': 1, 'e, ': 1, ', a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'hen': 3, 'en ': 3, 'n p': 1, 'pri': 5, 'rin': 5, 'nt ': 3, 'e l': 1, 'st.': 1, 't.\n': 1, '  E': 1, 'Exp': 1, 'xpe': 1, 'pec': 1, 'ect': 1, 'cte': 1, 'ted': 1, 'd O': 1, ' Ou': 3, 'Out': 3, 'utp': 3, 'tpu': 3, 'put': 3, 'ut:': 1, 't:\n': 1, ':\n#': 1, '  I': 2, ' If': 2, 'If ': 2, 'f n': 2, 's =': 4, ' = ': 4, '= [': 4, ' [1': 4, '[1,': 4, '1, ': 6, ', 2': 4, ' 2,': 4, '2, ': 6, ', 3': 4, ' 3,': 4, '3, ': 8, ', 4': 4, ' 4]': 2, '4] ': 1, '] t': 2, 'n y': 2, ' yo': 2, 'you': 2, 'ou ': 2, 'u w': 2, ' wi': 2, 'wil': 2, 'ill': 2, 'll ': 2, 'l p': 2, 't [': 2, ' 4,': 2, '4, ': 6, ', 5': 2, ' 5,': 2, '5, ': 6, ', 6': 2, ' 6]': 2, '6]\n': 2, ']\n#': 2, ' [-': 4, '[-5': 4, '-5,': 4, ', -': 14, ' -4': 4, '-4,': 4, ' -3': 4, '-3,': 4, ' -2': 4, '-2]': 2, '2] ': 1, '-2,': 2, ' -1': 2, '-1,': 2, ', 0': 2, ' 0]': 2, '0]\n': 2, '#\n\n': 1, '\n\nn': 2, '\nnu': 2, '4]\n': 1, ']\nf': 2, '\nfo': 2, 'for': 2, 'or ': 2, 'r i': 2, ' i ': 2, 'i i': 2, 'n r': 2, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(2': 2, '(2)': 2, '2):': 2, '):\n': 2, ':\n ': 2, '\n  ': 2, '  n': 2, 'rs.': 2, 's.a': 2, '.ap': 2, 'app': 2, 'ppe': 2, 'pen': 2, 'end': 2, 'nd(': 2, 'd(n': 2, '(nu': 4, 'rs[': 2, 's[-': 2, '[-1': 2, '-1]': 2, '1]+': 2, ']+1': 2, '+1)': 2, '1)\n': 2, ')\np': 2, '\npr': 2, 'nt(': 2, 't(n': 2, 'rs)': 2, 's)\n': 2, ')\n\n': 2, '\n\n#': 2, '# O': 2, 'ut ': 2, 't =': 2, ' =>': 2, '=> ': 2, '> [': 2, ']\n\n': 1, '2]\n': 1}"
Alice Gana,list_exercise5.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'####################################################################################################################': 2, '#': 13, 'lab': 1, 'exercise': 1, '5': 1, 'write': 1, 'a': 2, 'program': 2, 'that': 2, 'takes': 1, 'list': 1, 'called': 1, 'numbers': 4, 'has': 1, 'an': 2, 'even': 1, 'length.': 1, 'your': 1, 'should': 2, 'insert': 1, ""'*'"": 1, 'between': 1, 'each': 1, 'element': 1, 'of': 1, 'the': 2, 'list.': 2, 'then': 3, 'print': 1, 'modified': 1, 'expected': 1, 'output:': 1, 'if': 5, '=': 7, '[1,': 6, '2,': 6, '3,': 6, '4]': 6, 'you': 2, 'will': 2, 'print:': 2, ""'*',"": 19, '[0,': 4, '0,': 16, '0]': 4, 'num': 2, 'for': 2, 'i': 8, 'in': 2, 'range(len(num)': 2, '+': 2, 'len(num)': 2, '-': 2, '2):': 2, '%': 3, '2': 3, '!=': 3, '0:': 3, 'num.insert(i,': 2, '""*"")': 2, 'print(num)': 2, 'output': 3, '=>': 3, 'alternative': 1, 'solution': 1, 'length': 2, 'len(numbers)': 1, '0': 1, 'while': 1, '<': 1, 'length:': 1, 'numbers.insert(i,': 1, ""'*')"": 1, '+=': 2, '1': 2, 'print(numbers)': 1}","{'\n##': 2, '###': 228, '##\n': 2, '#\n#': 4, '\n# ': 10, '#  ': 4, '   ': 62, '  L': 1, ' La': 1, 'Lab': 1, 'ab ': 1, 'b E': 1, ' Ex': 2, 'Exe': 1, 'xer': 1, 'erc': 1, 'rci': 1, 'cis': 1, 'ise': 1, 'se ': 1, 'e 5': 1, ' 5\n': 1, '5\n#': 1, '\n#\n': 3, '# W': 1, ' Wr': 1, 'Wri': 1, 'rit': 1, 'ite': 1, 'te ': 1, 'e a': 1, ' a ': 2, 'a p': 1, ' pr': 5, 'pro': 2, 'rog': 2, 'ogr': 2, 'gra': 2, 'ram': 2, 'am ': 2, 'm t': 1, ' th': 6, 'tha': 2, 'hat': 2, 'at ': 2, 't t': 2, ' ta': 1, 'tak': 1, 'ake': 1, 'kes': 1, 'es ': 1, 's a': 2, 'a l': 1, ' li': 3, 'lis': 3, 'ist': 3, 'st ': 1, 't c': 1, ' ca': 1, 'cal': 1, 'all': 1, 'lle': 1, 'led': 1, 'ed ': 3, 'd n': 1, ' nu': 6, 'num': 17, 'umb': 7, 'mbe': 7, 'ber': 7, 'ers': 7, 'rs ': 4, 's t': 1, 't h': 1, ' ha': 1, 'has': 1, 'as ': 1, ' an': 2, 'an ': 2, 'n e': 2, ' ev': 1, 'eve': 1, 'ven': 1, 'en ': 5, 'n l': 1, ' le': 6, 'len': 9, 'eng': 4, 'ngt': 4, 'gth': 4, 'th.': 1, 'h.\n': 1, '.\n#': 2, '# Y': 1, ' Yo': 1, 'You': 1, 'our': 1, 'ur ': 1, 'r p': 1, 'm s': 1, ' sh': 2, 'sho': 2, 'hou': 2, 'oul': 2, 'uld': 2, 'ld ': 2, 'd s': 1, 'd i': 1, ' in': 3, 'ins': 4, 'nse': 4, 'ser': 4, 'ert': 4, 'rt ': 1, 't a': 1, ""n '"": 1, "" '*"": 21, ""'*'"": 21, ""*' "": 1, ""' b"": 1, ' be': 1, 'bet': 1, 'etw': 1, 'twe': 1, 'wee': 1, 'een': 1, ' ea': 1, 'eac': 1, 'ach': 1, 'ch ': 1, 'h e': 1, ' el': 1, 'ele': 1, 'lem': 1, 'eme': 1, 'men': 1, 'ent': 1, 'nt ': 2, 't o': 1, ' of': 1, 'of ': 1, 'f t': 1, 'the': 4, 'he ': 2, 'e l': 1, 'st.': 2, 't. ': 1, '. T': 1, ' Th': 1, 'The': 1, 'hen': 3, 'n p': 1, 'pri': 6, 'rin': 6, 'int': 6, 'e m': 1, ' mo': 1, 'mod': 1, 'odi': 1, 'dif': 1, 'ifi': 1, 'fie': 1, 'ied': 1, 'd l': 1, 't.\n': 1, '  E': 1, 'Exp': 1, 'xpe': 1, 'pec': 1, 'ect': 1, 'cte': 1, 'ted': 1, 'd O': 1, ' Ou': 4, 'Out': 4, 'utp': 4, 'tpu': 4, 'put': 4, 'ut:': 1, 't:\n': 1, ':\n#': 1, '  I': 2, ' If': 2, 'If ': 2, 'f n': 2, 's =': 3, ' = ': 7, '= [': 5, ' [1': 6, '[1,': 6, '1, ': 6, ', 2': 6, ' 2,': 6, '2, ': 6, ', 3': 6, ' 3,': 6, '3, ': 6, ', 4': 6, ' 4]': 6, '4] ': 1, '] t': 2, 'n y': 2, ' yo': 2, 'you': 2, 'ou ': 2, 'u w': 2, ' wi': 2, 'wil': 2, 'ill': 2, 'll ': 2, 'l p': 2, 'nt:': 2, 't: ': 2, ': [': 2, "", '"": 20, ""*',"": 19, ""', "": 19, '4]\n': 5, ']\n#': 2, ' [0': 4, '[0,': 4, '0, ': 20, ', 0': 20, ' 0,': 16, ' 0]': 4, '0] ': 1, '0]\n': 3, '#\n\n': 1, '\n\n\n': 1, '\n\nn': 3, '\nnu': 3, 'um ': 2, 'm =': 2, ']\nf': 2, '\nfo': 2, 'for': 2, 'or ': 2, 'r i': 2, ' i ': 7, 'i i': 2, 'in ': 2, 'n r': 2, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(l': 2, '(le': 2, 'en(': 5, 'n(n': 5, '(nu': 8, 'um)': 6, 'm) ': 4, ') +': 2, ' + ': 2, '+ l': 2, ') -': 2, ' - ': 2, '- 2': 2, ' 2)': 2, '2):': 2, '):\n': 2, ':\n ': 6, '\n  ': 8, '  i': 4, ' if': 3, 'if ': 3, 'f i': 3, 'i %': 3, ' % ': 3, '% 2': 3, ' 2 ': 3, '2 !': 3, ' !=': 3, '!= ': 3, '= 0': 4, ' 0:': 3, '0:\n': 3, '  n': 3, 'um.': 2, 'm.i': 2, '.in': 3, 'rt(': 3, 't(i': 3, '(i,': 3, 'i, ': 3, ', ""': 2, ' ""*': 2, '""*""': 2, '*"")': 2, '"")\n': 2, ')\n\n': 5, '\n\np': 3, '\npr': 3, 'nt(': 3, 't(n': 3, 'm)\n': 2, '\n\n#': 4, '# O': 3, 'ut ': 3, 't =': 3, ' =>': 3, '=> ': 3, '> [': 3, ']\n\n': 3, '# A': 1, ' AL': 1, 'ALT': 1, 'LTE': 1, 'TER': 1, 'ERN': 1, 'RNA': 1, 'NAT': 1, 'ATI': 1, 'TIV': 1, 'IVE': 1, 'VE ': 1, 'E S': 1, ' SO': 1, 'SOL': 1, 'OLU': 1, 'LUT': 1, 'UTI': 1, 'TIO': 1, 'ION': 1, 'ON\n': 1, 'N\n\n': 1, '\n\nl': 1, '\nle': 1, 'th ': 2, 'h =': 1, '= l': 1, 'rs)': 2, 's)\n': 2, ')\ni': 1, '\ni ': 1, 'i =': 1, ' 0\n': 1, '0\n\n': 1, '\n\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e i': 1, 'i <': 1, ' < ': 1, '< l': 1, 'th:': 1, 'h:\n': 1, 'rs.': 1, 's.i': 1, ""*')"": 1, ""')\n"": 1, ')\n ': 1, '  l': 1, 'h +': 1, ' +=': 2, '+= ': 2, '= 1': 2, ' 1\n': 2, '1\n ': 1, 'i +': 1, '1\n\n': 1}"
Alice Gana,main.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'from': 8, 'selenium': 3, 'import': 5, 'webdriver': 1, 'selenium.webdriver.common.keys': 1, 'keys': 1, 'selenium.webdriver.chrome.options': 1, 'options': 2, 'bs4': 1, 'beautifulsoup': 1, 'time': 3, '###########################################################################################': 6, '#': 59, 'part': 24, '1:': 1, 'initializations': 1, '1.1.': 2, 'preventing': 2, 'the': 55, 'browser': 8, 'window': 5, 'opening': 2, '1.2.': 1, 'localizing': 2, 'driver': 7, '1.3.': 1, 'configuring': 2, 'so': 4, 'that': 7, 'can': 4, 'manipulate': 2, 'navigator': 2, 'create': 2, 'an': 6, 'object': 3, 'of': 6, 'class': 3, 'and': 8, 'adding': 1, 'argument': 1, '--headless': 1, 'to': 19, 'invoke': 1, 'chrome': 1, 'in': 11, 'headless': 1, 'mode': 1, 'chrome_options': 1, '=': 8, 'options()': 1, 'chrome_options.add_argument(""--headless"")': 1, '1.2': 1, '-': 2, 'setting': 1, 'path': 2, '""c://drivers/chromedriver.exe""': 1, '1.3': 1, 'webdriver.chrome(path,options=chrome_options)': 1, 'i': 5, 'include': 1, '""chrome_options""': 1, 'as': 1, 'a': 5, 'second': 6, 'parameter': 1, 'prevent': 1, 'opening)': 1, '2:': 1, 'accessing': 4, 'google': 5, 'page': 18, '2.1.': 2, 'using': 15, 'function': 3, '""get""': 3, '2.2.': 2, 'waiting': 4, 'one': 4, 'for': 5, 'web': 5, 'open': 2, '2.3.': 2, 'creating': 2, 'variable': 1, 'receive': 1, 'element': 3, 'refers': 2, 'search': 4, 'box': 4, '2.4.': 2, 'method': 10, 'send_keys': 3, 'write': 3, 'press': 3, '""enter""': 1, '2.5.': 2, 'has': 2, 'enough': 2, 'change': 2, 'another': 2, '2.6.': 2, 'identifying': 2, 'current': 2, 'current_url': 2, '2.7.': 2, 'tell': 2, ""i'm"": 2, 'no': 2, 'longer': 2, 'page,': 2, 'am': 2, 'specific': 2, '2.8.': 2, 'identify': 2, 'source': 3, '2.9.': 1, 'automatically': 2, 'closing': 4, 'wikipedia': 1, 'driver.get(""http://google.com"")': 1, 'time.sleep(1)': 2, 'search_input': 1, 'driver.find_element_by_xpath(""/html/body/div[1]/div[3]/form/div[1]/div[1]/div[1]/div/div[2]/input"")': 1, 'this': 3, 'link,': 1, 'click': 1, 'with': 3, 'right': 1, 'button': 1, 'then': 1, 'inspect/select': 1, 'page/copy': 1, 'xpath': 1, 'enter': 2, 'search_input.send_keys(""wikipedia': 1, 'english"")': 1, 'search_input.send_keys(keys.enter)': 1, 'page_url': 1, 'driver.current_url': 1, 'driver.get(page_url)': 1, 'page_source': 1, 'driver.page_source': 1, 'print(page_source)': 1, 'driver.quit()': 1, '3:': 1, 'scrapping': 1, 'beautiful': 2, 'soup': 3, '3.1.': 2, '3.2.': 2, '""find""': 3, 'three': 2, 'steps': 1, '3.3.': 3, 'getting': 2, 'tag': 4, '3.4.': 1, 'find': 3, 'all': 4, '3.5.': 2, 'loop': 2, 'because': 2, 'content': 4, 'is': 4, 'set': 2, '3.6.': 2, 'choose': 1, 'what': 1, 'want': 2, 'bs.': 1, 'there': 1, '2': 1, 'parameters.': 1, 'first': 1, 'contains': 1, 'parser': 2, 'algorithm': 1, 'read': 1, 'turn': 1, 'it': 1, 'into': 1, 'programming': 1, 'beautifulsoup(page_source,': 1, '""html.parser"")': 1, 'steps:': 1, 'a)': 2, 'div,': 1, 'b)': 1, 'h3,': 1, 'c)': 1, ""h3's"": 1, 'soup.find(""div"",': 2, '{""class"":': 5, '""tf2cxc""}).find(""h3"").find(text=true)': 1, 'get': 2, 'link': 1, 'print': 2, '""tf2cxc""}).find(""a"")': 1, 'printing': 3, 'print(soup.find(""div"",': 2, '""tf2cxc""}).find(""a""))': 1, 'how': 1, 'tag?': 1, 'name': 1, 'attribute': 1, 'you': 1, '""tf2cxc""}).find(""a"")[\'href\'])': 1, '3.4.using': 1, 'result_list': 1, 'soup.find_all(""div"",': 1, '""tf2cxc""})': 1, 'inside': 1, 'are': 1, 'elements': 1, 'need': 1, '(tag': 1, 'h3': 1, 'r': 1, 'result_list:': 1, 'titles': 1, 'print(r.find(""h3"").find(text=true))': 1, 'will': 1, 'divs': 1, 'tf2cxc': 1, 'links': 1, 'print(r.find(""a"")[\'href\'])': 1, 'driver.close()': 1}","{'fro': 8, 'rom': 16, 'om ': 8, 'm s': 3, ' se': 20, 'sel': 6, 'ele': 11, 'len': 5, 'eni': 8, 'niu': 5, 'ium': 5, 'um ': 3, 'm i': 3, ' im': 4, 'imp': 5, 'mpo': 5, 'por': 5, 'ort': 5, 'rt ': 8, 't w': 2, ' we': 6, 'web': 8, 'ebd': 4, 'bdr': 4, 'dri': 19, 'riv': 20, 'ive': 21, 'ver': 20, 'er\n': 7, 'r\nf': 1, '\nfr': 3, 'um.': 2, 'm.w': 2, '.we': 2, 'er.': 11, 'r.c': 4, '.co': 2, 'com': 2, 'omm': 1, 'mmo': 1, 'mon': 1, 'on.': 1, 'n.k': 1, '.ke': 1, 'key': 6, 'eys': 8, 'ys ': 4, 's i': 2, 't K': 1, ' Ke': 1, 'Key': 2, 'ys\n': 1, 's\nf': 2, '.ch': 1, 'chr': 6, 'hro': 8, 'ome': 8, 'me.': 3, 'e.o': 1, '.op': 1, 'opt': 6, 'pti': 9, 'tio': 13, 'ion': 13, 'ons': 10, 'ns ': 4, 't O': 1, ' Op': 3, 'Opt': 3, 'ns\n': 2, 'm b': 1, ' bs': 1, 'bs4': 1, 's4 ': 1, '4 i': 1, 't B': 1, ' Be': 4, 'Bea': 4, 'eau': 4, 'aut': 4, 'uti': 4, 'tif': 8, 'ifu': 4, 'ful': 4, 'ulS': 2, 'lSo': 2, 'Sou': 4, 'oup': 10, 'up\n': 2, 'p\ni': 1, '\nim': 1, 't t': 4, ' ti': 4, 'tim': 5, 'ime': 5, 'me\n': 1, 'e\n\n': 1, '\n\n#': 26, '\n##': 6, '###': 534, '##\n': 6, '#\n#': 8, '\n#\n': 5, '\n# ': 49, '#  ': 21, '   ': 29, '  P': 3, ' PA': 21, 'PAR': 21, 'ART': 21, 'RT ': 21, 'T 1': 4, ' 1:': 1, '1: ': 1, ': I': 1, ' In': 1, 'Ini': 1, 'nit': 1, 'iti': 5, 'tia': 1, 'ial': 1, 'ali': 3, 'liz': 3, 'iza': 1, 'zat': 1, 'ati': 5, 's\n#': 2, '  1': 3, ' 1.': 6, '1.1': 2, '.1.': 6, '1. ': 6, '. P': 3, ' Pr': 3, 'Pre': 2, 'rev': 3, 'eve': 3, 'ven': 3, 'ent': 25, 'nti': 9, 'tin': 14, 'ing': 50, 'ng ': 46, 'g t': 17, ' th': 67, 'the': 57, 'he ': 55, 'e b': 4, ' br': 8, 'bro': 8, 'row': 8, 'ows': 8, 'wse': 8, 'ser': 11, 'er ': 17, 'r w': 2, ' wi': 9, 'win': 5, 'ind': 25, 'ndo': 5, 'dow': 5, 'ow ': 4, 'w f': 3, ' fr': 4, 'm o': 3, ' op': 5, 'ope': 5, 'pen': 5, 'nin': 3, 'ng\n': 3, 'g\n#': 2, '1.2': 2, '.2.': 5, '2. ': 5, '. L': 1, ' Lo': 4, 'Loc': 2, 'oca': 2, 'cal': 4, 'izi': 2, 'zin': 2, 'e d': 8, ' dr': 9, 'r\n#': 4, '1.3': 2, '.3.': 6, '3. ': 6, '. C': 4, ' Co': 2, 'Con': 2, 'onf': 2, 'nfi': 2, 'fig': 2, 'igu': 2, 'gur': 2, 'uri': 2, 'rin': 12, 'r s': 2, ' so': 8, 'so ': 4, 'o t': 6, 'tha': 7, 'hat': 8, 'at ': 8, 't s': 2, 'm c': 2, ' ca': 4, 'can': 4, 'an ': 10, 'n m': 2, ' ma': 2, 'man': 2, 'ani': 2, 'nip': 2, 'ipu': 2, 'pul': 2, 'ula': 2, 'lat': 2, 'ate': 4, 'te ': 8, 'e t': 17, 'e n': 3, ' na': 3, 'nav': 2, 'avi': 2, 'vig': 2, 'iga': 2, 'gat': 2, 'ato': 2, 'tor': 2, 'or\n': 2, '#\n\n': 3, '# P': 19, 'g\n\n': 2, '# C': 2, ' Cr': 3, 'Cre': 3, 'rea': 5, 'eat': 4, 'e a': 5, ' an': 16, 'n o': 2, ' ob': 3, 'obj': 3, 'bje': 3, 'jec': 3, 'ect': 5, 'ct ': 3, 't o': 5, ' of': 6, 'of ': 6, 'f t': 5, 'e c': 5, ' cl': 6, 'cla': 8, 'las': 8, 'ass': 8, 'ss ': 8, 's O': 1, 's a': 6, 'and': 8, 'nd ': 17, 'd a': 3, ' ad': 1, 'add': 2, 'ddi': 1, 'din': 1, ' ar': 2, 'arg': 2, 'rgu': 2, 'gum': 2, 'ume': 2, 'men': 7, 'nt ': 12, 't -': 1, ' --': 1, '--h': 2, '-he': 2, 'hea': 3, 'ead': 4, 'adl': 3, 'dle': 3, 'les': 4, 'ess': 10, 's t': 8, ' to': 18, 'to ': 19, 'o i': 1, ' in': 16, 'inv': 1, 'nvo': 1, 'vok': 1, 'oke': 1, 'ke ': 1, 'e C': 1, ' Ch': 1, 'Chr': 2, 'me ': 4, 'e i': 3, 'in ': 11, 'n h': 1, ' he': 1, 's m': 1, ' mo': 1, 'mod': 1, 'ode': 1, 'de\n': 1, 'e\nc': 1, '\nch': 2, 'me_': 4, 'e_o': 4, '_op': 4, 's =': 1, ' = ': 8, '= O': 1, 'ns(': 1, 's()': 1, '()\n': 3, ')\nc': 1, 'ns.': 1, 's.a': 1, '.ad': 1, 'dd_': 1, 'd_a': 2, '_ar': 1, 'nt(': 6, 't(""': 2, '(""-': 1, '""--': 1, 'ss""': 6, 's"")': 1, '"")\n': 6, ')\n\n': 17, '.2 ': 1, '2 -': 1, ' - ': 2, '- L': 1, '# S': 1, ' Se': 1, 'Set': 1, 'ett': 3, 'tti': 3, 'e p': 14, ' pa': 28, 'pat': 3, 'ath': 3, 'th\n': 2, 'h\nP': 1, '\nPA': 1, 'PAT': 2, 'ATH': 2, 'TH ': 1, 'H =': 1, '= ""': 1, ' ""C': 1, '""C:': 1, 'C:/': 1, '://': 2, '//D': 1, '/Dr': 1, 'Dri': 1, 'ers': 4, 'rs/': 1, 's/c': 1, '/ch': 1, 'med': 1, 'edr': 1, 'r.e': 1, '.ex': 1, 'exe': 1, 'xe""': 1, 'e""\n': 1, '""\n\n': 1, '.3 ': 1, '3 -': 1, '- C': 1, 'r\nd': 2, '\ndr': 5, 'r =': 1, '= w': 1, 'r.C': 1, '.Ch': 1, 'me(': 1, 'e(P': 1, '(PA': 1, 'TH,': 1, 'H,o': 1, ',op': 1, 'ns=': 1, 's=c': 1, '=ch': 1, 'ns)': 1, 's) ': 1, ') #': 1, ' # ': 5, '# I': 1, ' I ': 5, 'I c': 1, 'n i': 3, 'inc': 1, 'ncl': 1, 'clu': 1, 'lud': 1, 'ude': 1, 'de ': 2, 'e ""': 1, ' ""c': 1, '""ch': 1, 'ns""': 1, 's"" ': 1, '"" a': 1, ' as': 1, 'as ': 3, ' a ': 5, 'a s': 3, 'sec': 6, 'eco': 6, 'con': 11, 'ond': 6, 'd p': 4, 'par': 8, 'ara': 2, 'ram': 3, 'ame': 3, 'met': 12, 'ete': 2, 'ter': 4, 'r t': 7, 'o p': 2, ' pr': 12, 'pre': 4, 'ng)': 1, 'g)\n': 1, 'T 2': 9, ' 2:': 1, '2: ': 1, ': A': 1, ' Ac': 4, 'Acc': 4, 'cce': 4, 'ces': 4, 'ssi': 4, 'sin': 24, 'g G': 3, ' Go': 3, 'Goo': 3, 'oog': 6, 'ogl': 6, 'gle': 6, 'le ': 6, 'pag': 26, 'age': 27, 'ge\n': 8, 'e\n#': 7, '  2': 9, ' 2.': 17, '2.1': 2, '. A': 4, 'ge ': 12, 'e u': 5, ' us': 5, 'usi': 5, 'g f': 3, ' fu': 3, 'fun': 3, 'unc': 3, 'nct': 3, 'cti': 3, 'on ': 4, 'n ""': 3, ' ""g': 3, '""ge': 3, 'get': 7, 'et""': 3, 't""\n': 3, '""\n#': 3, '2.2': 2, '. W': 4, ' Wa': 4, 'Wai': 4, 'ait': 4, 'g o': 5, ' on': 4, 'one': 4, 'ne ': 4, 'e s': 14, 'd f': 4, ' fo': 2, 'for': 4, 'or ': 5, 'e w': 7, 'eb ': 5, 'b b': 4, 'o o': 2, 'en ': 3, 'n t': 10, '2.3': 2, 'g a': 3, 'a v': 1, ' va': 1, 'var': 1, 'ari': 1, 'ria': 1, 'iab': 1, 'abl': 1, 'ble': 1, 'o r': 1, ' re': 5, 'rec': 1, 'ece': 1, 'cei': 1, 'eiv': 1, 've ': 1, 'e e': 3, ' el': 4, 'lem': 5, 'eme': 5, 't r': 2, 'ref': 4, 'efe': 2, 'fer': 2, 'rs ': 2, 'sea': 7, 'ear': 7, 'arc': 7, 'rch': 7, 'ch ': 4, 'h b': 4, ' bo': 4, 'box': 4, 'ox\n': 2, 'x\n#': 1, '2.4': 2, '.4.': 4, '4. ': 3, '. U': 9, ' Us': 10, 'Usi': 11, 'e m': 2, ' me': 10, 'eth': 10, 'tho': 10, 'hod': 10, 'od ': 10, 'd s': 5, 'sen': 5, 'end': 5, 'nd_': 7, 'd_k': 5, '_ke': 5, 'o w': 2, ' wr': 2, 'wri': 2, 'rit': 4, 'ite': 3, 'ox ': 2, 'x a': 2, 'res': 5, 's ""': 1, ' ""e': 1, '""en': 1, 'nte': 6, 'er""': 2, 'r""\n': 1, '2.5': 2, '.5.': 4, '5. ': 4, 'r h': 2, ' ha': 2, 'has': 2, 's e': 3, ' en': 4, 'eno': 2, 'nou': 2, 'oug': 2, 'ugh': 2, 'gh ': 2, 'h t': 4, 'o c': 4, ' ch': 3, 'cha': 2, 'han': 2, 'ang': 2, 'nge': 4, 'o a': 3, 'ano': 2, 'not': 2, 'oth': 2, 'her': 3, 'r p': 2, '2.6': 2, '.6.': 4, '6. ': 4, '. I': 4, ' Id': 4, 'Ide': 4, 'den': 4, 'ify': 4, 'fyi': 2, 'yin': 2, ' cu': 4, 'cur': 5, 'urr': 5, 'rre': 5, 'ren': 5, 't p': 3, 'g m': 8, 'd c': 4, 'nt_': 4, 't_u': 3, '_ur': 5, 'url': 5, 'rl\n': 3, 'l\n#': 2, '2.7': 2, '.7.': 2, '7. ': 2, '. T': 4, ' Te': 2, 'Tel': 2, 'ell': 2, 'll ': 5, 'l t': 4, 't I': 3, "" I'"": 2, ""I'm"": 2, ""'m "": 2, 'm n': 2, ' no': 2, 'no ': 2, 'o l': 2, ' lo': 2, 'lon': 2, 'ong': 2, 'ger': 2, 'r i': 4, 'e g': 2, ' go': 2, 'goo': 3, 'ge,': 2, 'e, ': 3, ', I': 2, 'I a': 2, ' am': 2, 'am ': 2, 'n a': 3, 'n s': 2, ' sp': 2, 'spe': 3, 'pec': 3, 'eci': 2, 'cif': 2, 'ifi': 2, 'fic': 2, 'ic ': 2, 'c p': 2, '2.8': 2, '.8.': 2, '8. ': 2, 'fy ': 2, 'y t': 2, 'sou': 13, 'our': 7, 'urc': 7, 'rce': 7, 'ce\n': 3, '2.9': 1, '.9.': 1, '9. ': 1, ' Au': 2, 'Aut': 2, 'uto': 2, 'tom': 2, 'oma': 2, 'mat': 2, 'tic': 2, 'ica': 2, 'all': 7, 'lly': 2, 'ly ': 2, 'y c': 2, 'clo': 3, 'los': 5, 'osi': 4, 'ow\n': 2, 'w\n#': 1, 'g W': 1, ' Wi': 1, 'Wik': 1, 'iki': 2, 'kip': 2, 'ipe': 2, 'ped': 2, 'edi': 2, 'dia': 2, 'ia ': 2, 'a p': 2, '""\nd': 1, 'r.g': 2, '.ge': 2, 'et(': 2, '(""h': 3, '""ht': 2, 'htt': 1, 'ttp': 1, 'tp:': 1, 'p:/': 1, '//g': 1, '/go': 1, 'le.': 1, 'e.c': 1, 'om""': 1, 'm"")': 1, 'e\nt': 2, '\nti': 2, 'e.s': 2, '.sl': 2, 'sle': 2, 'lee': 2, 'eep': 2, 'ep(': 2, 'p(1': 2, '(1)': 2, '1)\n': 2, ' Pa': 1, 'Pag': 1, 'x\ns': 1, '\nse': 3, 'ch_': 3, 'h_i': 3, '_in': 3, 'inp': 4, 'npu': 4, 'put': 4, 'ut ': 1, 't =': 2, '= d': 3, 'r.f': 3, '.fi': 14, 'fin': 20, 'd_e': 1, '_el': 1, 't_b': 1, '_by': 1, 'by_': 1, 'y_x': 1, '_xp': 1, 'xpa': 2, 'th(': 1, 'h(""': 1, '(""/': 1, '""/h': 1, '/ht': 1, 'htm': 2, 'tml': 2, 'ml/': 1, 'l/b': 1, '/bo': 1, 'bod': 1, 'ody': 1, 'dy/': 1, 'y/d': 1, '/di': 7, 'div': 14, 'iv[': 6, 'v[1': 4, '[1]': 4, '1]/': 4, ']/d': 4, 'v[3': 1, '[3]': 1, '3]/': 1, ']/f': 1, '/fo': 1, 'orm': 1, 'rm/': 1, 'm/d': 1, 'iv/': 1, 'v/d': 1, 'v[2': 1, '[2]': 1, '2]/': 1, ']/i': 1, '/in': 1, 'ut""': 1, 't"")': 1, ')\n#': 2, '# T': 1, ' To': 1, 'To ': 1, ' cr': 1, 'cre': 1, 'thi': 3, 'his': 3, 'is ': 7, 's l': 1, ' li': 3, 'lin': 3, 'ink': 3, 'nk,': 1, 'k, ': 1, ', c': 1, 'cli': 1, 'lic': 1, 'ick': 1, 'ck ': 1, 'k w': 1, 'wit': 3, 'ith': 4, 'th ': 3, 'e r': 1, ' ri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht ': 1, 't b': 1, ' bu': 1, 'but': 2, 'utt': 1, 'tto': 1, 'ton': 1, 'hen': 1, 'ins': 3, 'nsp': 1, 'ct/': 1, 't/s': 1, '/se': 1, 'lec': 1, 't a': 3, 'n e': 1, 't i': 4, 'ge/': 1, 'e/c': 1, '/co': 1, 'cop': 1, 'opy': 1, 'py ': 1, 'y x': 1, ' xp': 1, 'h\n\n': 1, 'r\ns': 1, 'ut.': 2, 't.s': 2, '.se': 2, 'ys(': 2, 's(""': 1, '(""w': 1, '""wi': 1, 'wik': 1, 'a e': 1, 'eng': 1, 'ngl': 1, 'gli': 1, 'lis': 3, 'ish': 1, 'sh""': 1, 'h"")': 1, '# U': 1, 's E': 1, ' EN': 1, 'ENT': 2, 'NTE': 2, 'TER': 2, 'ER\n': 1, 'R\ns': 1, 's(K': 1, '(Ke': 1, 'ys.': 1, 's.E': 1, '.EN': 1, 'ER)': 1, 'R)\n': 1, 'l\np': 1, '\npa': 2, 'ge_': 6, 'e_u': 2, 'rl ': 1, 'l =': 1, '.cu': 1, 'l\n\n': 1, 'e\nd': 1, 't(p': 2, '(pa': 3, 'rl)': 1, 'l)\n': 1, 'e\np': 1, 'e_s': 4, '_so': 4, 'ce ': 2, 'e =': 1, 'r.p': 1, '.pa': 2, '# p': 4, 'pri': 9, 'int': 11, 'ce)': 1, 'e)\n': 2, '# A': 1, 'w\nd': 1, 'r.q': 1, '.qu': 1, 'qui': 1, 'uit': 1, 'it(': 1, 't()': 1, '\n\n\n': 1, 'T 3': 8, ' 3:': 1, '3: ': 1, ': W': 1, ' We': 1, 'Web': 1, 'b S': 1, ' Sc': 1, 'Scr': 1, 'cra': 1, 'rap': 1, 'app': 1, 'ppi': 1, 'pin': 1, 'g w': 1, 'h B': 1, 'ul ': 2, 'l S': 2, ' So': 2, 'p\n#': 1, '  3': 6, ' 3.': 13, '3.1': 2, '3.2': 2, 'd ""': 3, ' ""f': 3, '""fi': 3, 'nd""': 3, 'd"" ': 3, '"" i': 2, 'thr': 2, 'hre': 4, 'ree': 2, 'ee ': 2, ' st': 2, 'ste': 2, 'tep': 2, 'eps': 2, 'ps\n': 1, '3.3': 3, '. G': 2, ' Ge': 2, 'Get': 2, 'g p': 2, 'art': 3, ' ta': 5, 'tag': 6, 'ag\n': 2, '3.4': 2, ' fi': 4, ' al': 5, 'll\n': 2, '3.5': 2, 'g F': 2, ' Fo': 2, 'For': 2, 'r L': 2, 'Loo': 2, 'oop': 2, 'op ': 2, 'p b': 2, ' be': 2, 'bec': 2, 'eca': 2, 'cau': 2, 'aus': 2, 'use': 2, 'se ': 3, ' co': 5, 'ont': 5, 'ten': 4, ' is': 4, 'set': 2, 'et\n': 2, 't\n#': 1, '3.6': 2, ' Cl': 2, 'Clo': 2, 'r\n\n': 1, 'g B': 1, 'up ': 2, 'p t': 1, 'cho': 1, 'hoo': 1, 'oos': 1, 'ose': 2, ' wh': 1, 'wha': 1, 'I w': 1, ' wa': 2, 'wan': 2, 'ant': 2, 't f': 1, 'm t': 2, 'f B': 1, ' BS': 1, 'BS.': 1, 'S. ': 1, ' Th': 2, 'The': 2, 'ere': 1, 're ': 2, 'e 2': 1, ' 2 ': 1, '2 p': 1, 'rs.': 1, 's. ': 1, 'e f': 1, 'fir': 1, 'irs': 1, 'rst': 1, 'st ': 2, 't c': 2, 'nta': 1, 'tai': 1, 'ain': 1, 'd t': 4, 'd i': 1, 's p': 1, 'ars': 3, 'rse': 3, 'alg': 1, 'lgo': 1, 'gor': 1, 'ori': 1, 'thm': 1, 'hm ': 1, 'n r': 2, 'ad ': 1, ' tu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, ' it': 1, 'it ': 1, 'nto': 1, 'pro': 1, 'rog': 1, 'ogr': 1, 'gra': 1, 'amm': 1, 'mmi': 1, 'min': 1, 'ct\n': 1, 't\ns': 3, '\nso': 3, 'p =': 1, '= B': 1, 'up(': 1, 'p(p': 1, 'ce,': 1, ', ""': 1, ' ""h': 1, 'ml.': 1, 'l.p': 1, 'r"")': 1, 'ps:': 1, 's: ': 1, ': a': 1, ' a)': 2, 'a) ': 1, ') t': 3, 'o f': 1, ' di': 2, 'iv,': 1, 'v, ': 1, ', b': 1, ' b)': 1, 'b) ': 1, 'ag ': 3, 'g h': 2, ' h3': 3, 'h3,': 1, '3, ': 1, ', a': 1, ' c)': 1, 'c) ': 1, 'e h': 1, ""h3'"": 1, ""3's"": 1, ""'s "": 1, 's c': 3, 'nt\n': 3, 'up.': 5, 'p.f': 5, 'nd(': 12, 'd(""': 10, '(""d': 5, '""di': 5, 'iv""': 5, 'v"",': 5, '"", ': 5, ', {': 5, ' {""': 5, '{""c': 5, '""cl': 5, 's"":': 5, '"": ': 5, ': ""': 5, ' ""t': 5, '""tF': 5, 'tF2': 6, 'F2C': 6, '2Cx': 6, 'Cxc': 6, 'xc""': 5, 'c""}': 5, '""})': 5, '}).': 4, ').f': 6, '""h3': 2, 'h3""': 2, '3"")': 2, '"").': 2, 'd(t': 2, '(te': 2, 'tex': 2, 'ext': 2, 'xt=': 2, 't=T': 2, '=Tr': 2, 'Tru': 2, 'rue': 2, 'ue)': 2, '"" t': 1, 'o g': 2, ' ge': 2, 'et ': 2, 'e l': 1, 'nk ': 1, 'k a': 1, '(""a': 4, '""a""': 4, 'a"")': 4, 'Pri': 1, 'g\np': 1, '\npr': 2, 't(s': 2, '(so': 2, '""))': 1, '))\n': 1, '# H': 1, ' Ho': 1, 'How': 1, 'w t': 1, 'ag?': 1, 'g? ': 1, '? W': 1, ' Wr': 1, 'Wri': 1, 'nam': 1, 'e o': 1, ' at': 1, 'att': 1, 'ttr': 1, 'tri': 1, 'rib': 1, 'ibu': 1, 'ute': 1, 'e y': 1, ' yo': 1, 'you': 1, 'ou ': 1, 'u w': 1, 't\np': 1, '"")[': 2, "")['"": 2, ""['h"": 2, ""'hr"": 2, ""ef'"": 2, ""f']"": 2, ""'])"": 2, '])\n': 2, '4.U': 1, '.Us': 1, 'l\nr': 1, '\nre': 1, 'esu': 2, 'sul': 2, 'ult': 2, 'lt_': 2, 't_l': 2, '_li': 2, 'ist': 2, '= s': 1, '_al': 1, 'll(': 1, 'l(""': 1, '}) ': 1, ')  ': 2, '  #': 4, '# i': 1, 'nsi': 1, 'sid': 1, 'ide': 1, 'are': 1, 'nts': 1, 'ts ': 1, 's I': 1, 'I n': 1, ' ne': 1, 'nee': 1, 'eed': 1, 'ed ': 1, 'd (': 1, ' (t': 1, '(ta': 1, 'h3 ': 1, '3 a': 1, 'a)\n': 1, 't\nf': 1, '\nfo': 1, 'r r': 1, ' r ': 1, 'st:': 1, 't:\n': 1, ':\n ': 1, '\n  ': 4, 'tit': 1, 'itl': 1, 'tle': 1, 'es\n': 1, 's\n ': 2, '  p': 2, 't(r': 2, '(r.': 2, 'e))': 1, ')) ': 1, '# w': 1, 'wil': 1, 'ill': 1, 'l p': 1, 'ivs': 1, 'vs ': 1, 's w': 1, ' tF': 1, 'xc\n': 1, 'c\n ': 1, 'g l': 1, 'nks': 1, 'ks\n': 1, '.cl': 1, 'se(': 1, 'e()': 1}"
Alice Gana,main2.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 5, 'creating': 1, 'my': 1, 'binary': 1, 'tree': 4, 'def': 5, 'creating_my_tree(r):': 1, 'return[r,': 1, '[],': 14, '[]]': 3, 'inserting': 2, 'a': 2, 'new': 2, 'branch': 2, 'on': 4, 'the': 4, 'left': 2, 'insert_left(tree,new_branch):': 1, 'temp=tree.pop(1)': 1, 'if': 2, 'len(temp)>1:': 2, 'tree.insert(1,': 2, '[new_branch,': 4, 'temp,': 1, '[]])': 3, 'else:': 2, 'return': 5, 'right': 2, 'insert_right(tree,new_branch):': 1, 'temp=tree.pop(2)': 1, 'tree.insert(2,': 2, 'temp])': 1, 'functions': 1, 'to': 1, 'subtree': 1, 'and': 1, 'get_left_child(tree):': 1, 'tree[1]': 1, 'get_right_child(tree):': 1, '[2]': 1, 'driving': 1, 'code': 1, 'x': 1, '=': 1, ""creating_my_tree('a')"": 1, 'print(x)': 5, ""insert_left(x,'b')"": 1, ""insert_right(x,'c')"": 1, 'insert_right(get_right_child(x),': 1, ""'d')"": 1, 'insert_left(get_right_child(get_right_child(x)),': 1, ""'e')"": 1, '#output:': 1, ""#['a',"": 5, ""['b',"": 4, '[]],': 5, ""['c',"": 3, '[]]]': 1, ""['d',"": 2, '[]]]]': 2, ""['e',"": 1}","{'\n\n#': 6, '\n# ': 5, '# C': 1, ' Cr': 1, 'Cre': 1, 'rea': 3, 'eat': 3, 'ati': 3, 'tin': 5, 'ing': 6, 'ng ': 4, 'g m': 1, ' my': 1, 'my ': 1, 'y b': 1, ' bi': 1, 'bin': 1, 'ina': 1, 'nar': 1, 'ary': 1, 'ry ': 1, 'y t': 1, ' tr': 9, 'tre': 18, 'ree': 18, 'ee\n': 3, 'e\nd': 1, '\nde': 5, 'def': 5, 'ef ': 5, 'f c': 1, ' cr': 2, 'cre': 2, 'ng_': 2, 'g_m': 2, '_my': 2, 'my_': 2, 'y_t': 2, '_tr': 2, 'ee(': 2, 'e(r': 1, '(r)': 1, 'r):': 1, '):\n': 5, ':\n ': 9, '\n  ': 15, '   ': 46, '  r': 5, ' re': 6, 'ret': 6, 'etu': 6, 'tur': 6, 'urn': 6, 'rn[': 1, 'n[r': 1, '[r,': 1, 'r, ': 1, ', [': 42, ' []': 28, '[],': 14, '], ': 19, '[]]': 14, ']]\n': 6, ']\n\n': 2, '# I': 2, ' In': 2, 'Ins': 2, 'nse': 12, 'ser': 12, 'ert': 12, 'rti': 2, 'g a': 2, ' a ': 2, 'a n': 2, ' ne': 2, 'new': 8, 'ew ': 2, 'w b': 2, ' br': 2, 'bra': 8, 'ran': 8, 'anc': 8, 'nch': 8, 'ch ': 2, 'h o': 2, ' on': 4, 'on ': 4, 'n t': 8, ' th': 4, 'the': 4, 'he ': 4, 'e l': 2, ' le': 4, 'lef': 6, 'eft': 6, 'ft\n': 1, 't\nd': 3, 'f i': 2, ' in': 2, 'ins': 10, 'rt_': 6, 't_l': 4, '_le': 4, 'ft(': 3, 't(t': 2, '(tr': 4, 'ee,': 2, 'e,n': 2, ',ne': 2, 'ew_': 6, 'w_b': 6, '_br': 6, 'ch)': 2, 'h):': 2, '  t': 6, ' te': 4, 'tem': 6, 'emp': 6, 'mp=': 2, 'p=t': 2, '=tr': 2, 'ee.': 6, 'e.p': 2, '.po': 2, 'pop': 2, 'op(': 2, 'p(1': 1, '(1)': 1, '1)\n': 1, ')\n ': 6, '  i': 2, ' if': 2, 'if ': 2, 'f l': 2, 'len': 2, 'en(': 2, 'n(t': 2, '(te': 2, 'mp)': 2, 'p)>': 2, ')>1': 2, '>1:': 2, '1:\n': 2, 'e.i': 4, '.in': 4, 'rt(': 4, 't(1': 2, '(1,': 2, '1, ': 2, ' [n': 4, '[ne': 4, 'ch,': 4, 'h, ': 4, ', t': 2, 'mp,': 1, 'p, ': 1, ']])': 3, '])\n': 4, '  e': 2, ' el': 2, 'els': 2, 'lse': 2, 'se:': 2, 'e:\n': 2, 'rn ': 5, 'e\n\n': 2, 'e r': 2, ' ri': 2, 'rig': 9, 'igh': 9, 'ght': 9, 'ht\n': 2, 't_r': 7, '_ri': 7, 'ht(': 3, 'p(2': 1, '(2)': 1, '2)\n': 1, 't(2': 2, '(2,': 2, '2, ': 2, 'mp]': 1, 'p])': 1, '# F': 1, ' Fu': 1, 'Fun': 1, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'ons': 1, 'ns ': 1, 's t': 1, ' to': 1, 'to ': 1, 'o r': 1, 'n s': 1, ' su': 1, 'sub': 1, 'ubt': 1, 'btr': 1, 'ee ': 2, 'e o': 1, 'ft ': 1, 't a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd o': 1, 'f g': 2, ' ge': 2, 'get': 5, 'et_': 5, 'ft_': 1, 't_c': 5, '_ch': 5, 'chi': 5, 'hil': 5, 'ild': 5, 'ld(': 5, 'd(t': 2, 'ee)': 2, 'e):': 2, 'ee[': 1, 'e[1': 1, '[1]': 1, '1]\n': 1, ']\nd': 1, 'ht_': 4, 'e [': 1, ' [2': 1, '[2]': 1, '2]\n': 1, '# D': 1, ' Dr': 1, 'Dri': 1, 'riv': 1, 'ivi': 1, 'vin': 1, 'g C': 1, ' Co': 1, 'Cod': 1, 'ode': 1, 'de\n': 1, 'e\nx': 1, '\nx ': 1, 'x =': 1, ' = ': 1, '= c': 1, ""e('"": 1, ""('a"": 1, ""'a'"": 6, ""a')"": 1, ""')\n"": 5, ')\np': 5, '\npr': 5, 'pri': 5, 'rin': 5, 'int': 5, 'nt(': 5, 't(x': 7, '(x)': 7, 'x)\n': 5, ')\ni': 4, '\nin': 4, '(x,': 2, ""x,'"": 2, "",'b"": 1, ""'b'"": 5, ""b')"": 1, "",'c"": 1, ""'c'"": 4, ""c')"": 1, 't(g': 2, '(ge': 3, 'd(x': 2, 'x),': 1, '), ': 2, "", '"": 2, "" 'd"": 1, ""'d'"": 3, ""d')"": 1, 'd(g': 1, 'x))': 1, ')),': 1, "" 'e"": 1, ""'e'"": 2, ""e')"": 1, ')\n\n': 1, '\n#O': 1, '#OU': 1, 'OUT': 1, 'UTP': 1, 'TPU': 1, 'PUT': 1, 'UT:': 1, 'T:\n': 1, ':\n#': 1, '\n#[': 5, ""#['"": 5, ""['a"": 5, ""a',"": 5, ""', "": 15, ']\n#': 4, "" ['"": 10, ""['b"": 4, ""b',"": 4, ']],': 5, ""['c"": 3, ""c',"": 3, ']]]': 5, ""['d"": 2, ""d',"": 2, ""['e"": 1, ""e',"": 1}"
Alice Gana,main3.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 23, 'my': 1, 'toy': 1, 'store': 4, '=>': 1, 'summary:': 1, 'the': 9, 'development': 1, 'is': 9, 'divided': 1, 'into': 1, 'four': 1, 'parts:': 1, ')': 4, 'part': 5, '1:': 5, 'creating': 2, '13': 1, 'classes': 1, '-': 9, 'definition': 1, 'phase': 21, '(class': 1, 'files)': 1, '2:': 4, 'instantiating': 1, 'class': 2, 'instantiation': 1, '(file': 3, 'setup.py)': 1, '3:': 3, 'functions': 2, 'inside': 1, 'each': 1, 'implementation': 1, 'functions.py)': 1, '4:': 5, 'interacting': 2, 'with': 2, 'users': 2, 'interaction': 1, 'main.py)': 1, 'listing': 2, 'all': 2, 'products': 2, 'and': 8, 'showing': 2, 'them': 1, 'on': 2, 'screen': 2, 'visitor': 1, 'selects': 1, 'a': 3, 'product': 3, 'system': 4, 'offers': 4, 'possibility': 1, 'to': 12, 'register': 1, 'or': 13, 'login': 1, '(if': 1, 'he': 3, 'she': 3, 'not)': 1, 'checks': 3, 'availablity': 1, 'adds': 1, 'shopping': 1, 'cart': 1, 'says': 1, 'not': 1, 'available': 1, '5:': 3, 'user': 8, 'asked': 2, 'if': 9, 'wishes': 2, 'continue': 3, 'buying': 3, '(back': 1, '1)': 1, 'proceed': 3, 'checkout': 3, '6:system': 2, 'vendor': 2, 'website': 2, 'third': 2, 'party,': 2, 'then': 2, 'corresponding': 1, 'delivery': 2, 'methods': 4, '7:system': 2, '4': 3, 'payment': 6, 'chooses': 2, 'one': 3, 'more': 2, '8:': 2, 'asks': 2, 'wants': 2, 'details': 4, 'use': 2, 'stored': 2, '9:': 2, 'accepted': 2, 'receives': 2, 'an': 2, 'invoice': 2, 'from': 1, 'import': 1, '*': 1, 'toy_store.listing_all_products()': 2, '2,': 1, '3': 2, 'adding_toy_to_cart()': 2, 'while': 2, 'true:': 1, 'click': 12, '=': 3, 'int(input(""if': 1, 'you': 1, 'wish': 1, 'please': 1, '1,': 1, 'otherwise': 1, '2': 2, ':)': 1, '""))': 2, '==': 6, 'break': 1, 'correspondent': 1, 'delivering()': 1, 'provides': 1, 'none': 1, '!=': 1, 'print(""""""payment': 1, 'options:': 2, '1': 1, 'promotional_code': 1, 'gift': 1, 'voucher': 1, 'credit/debit': 1, 'paypal': 1, '5': 1, 'checkout"""""")': 1, 'int(input(""select': 1, 'promotional_code()': 1, 'elif': 3, 'gift_voucher()': 1, 'credit_debit_card()': 1, 'paypal()': 1, 'choosing_to_store_payment_details()': 1, 'message': 1, 'invoice()': 1, 'for': 1, 'l': 1, 'in': 1, 'listing_delivery_methods:': 1, 'l.display()': 1}","{'   ': 175, '  #': 2, ' # ': 2, '# M': 1, ' MY': 1, 'MY ': 1, 'Y T': 1, ' TO': 1, 'TOY': 1, 'OY ': 1, 'Y S': 1, ' ST': 1, 'STO': 1, 'TOR': 1, 'ORE': 1, 'RE\n': 1, 'E\n\n': 1, '\n\n#': 10, '\n# ': 21, '# =': 1, ' =>': 1, '=> ': 1, '> S': 1, ' Su': 1, 'Sum': 1, 'umm': 1, 'mma': 1, 'mar': 1, 'ary': 1, 'ry:': 1, 'y: ': 1, ': T': 1, ' Th': 1, 'The': 1, 'he ': 15, 'e d': 1, ' de': 7, 'dev': 1, 'eve': 1, 'vel': 1, 'elo': 1, 'lop': 1, 'opm': 1, 'pme': 1, 'men': 9, 'ent': 10, 'nt ': 9, 't i': 4, ' is': 9, 'is ': 9, 's d': 1, ' di': 1, 'div': 1, 'ivi': 1, 'vid': 2, 'ide': 3, 'ded': 1, 'ed ': 10, 'd i': 3, ' in': 7, 'int': 4, 'nto': 1, 'to ': 13, 'o f': 1, ' fo': 1, 'fou': 1, 'our': 1, 'ur ': 1, 'r p': 3, ' pa': 10, 'par': 3, 'art': 6, 'rts': 1, 'ts:': 1, 's:\n': 2, ':\n\n': 3, '# )': 4, ' ) ': 4, ') P': 4, ' PA': 5, 'PAR': 5, 'ART': 5, 'RT ': 5, 'T 1': 1, ' 1:': 5, '1: ': 3, ': C': 2, ' Cr': 3, 'Cre': 3, 'rea': 3, 'eat': 2, 'ati': 3, 'tin': 13, 'ing': 21, 'ng ': 14, 'g 1': 1, ' 13': 1, '13 ': 1, '3 c': 1, ' cl': 14, 'cla': 4, 'las': 4, 'ass': 4, 'sse': 1, 'ses': 3, 'es ': 8, 's -': 3, ' - ': 9, '- D': 1, ' DE': 1, 'DEF': 1, 'EFI': 1, 'FIN': 1, 'INI': 1, 'NIT': 1, 'ITI': 1, 'TIO': 4, 'ION': 4, 'ON ': 4, 'N P': 4, ' PH': 4, 'PHA': 4, 'HAS': 4, 'ASE': 4, 'SE ': 4, 'E (': 4, ' (c': 1, '(cl': 1, 'ss ': 3, 's f': 1, ' fi': 1, 'fil': 4, 'ile': 6, 'les': 1, 'es)': 1, 's)\n': 1, ')\n#': 4, 'T 2': 1, ' 2:': 4, '2: ': 2, ': I': 3, ' In': 3, 'Ins': 1, 'nst': 1, 'sta': 1, 'tan': 1, 'ant': 3, 'nti': 4, 'tia': 1, 'iat': 1, 'g t': 2, ' th': 13, 'the': 12, 'e c': 6, 's S': 1, ' St': 1, 'Sto': 1, 'tor': 9, 'ore': 10, 're ': 4, 'e -': 1, '- I': 3, ' IN': 2, 'INS': 1, 'NST': 1, 'STA': 1, 'TAN': 1, 'ANT': 1, 'NTI': 1, 'TIA': 1, 'IAT': 1, 'ATI': 2, ' (f': 3, '(fi': 3, 'le ': 5, 'e s': 4, ' se': 2, 'set': 1, 'etu': 1, 'tup': 1, 'up.': 1, 'p.p': 1, '.py': 3, 'py)': 3, 'y)\n': 3, 'T 3': 1, ' 3:': 3, '3: ': 2, 'g f': 1, ' fu': 3, 'fun': 3, 'unc': 3, 'nct': 3, 'cti': 5, 'tio': 7, 'ion': 7, 'ons': 5, 'ns ': 2, 's i': 6, 'ins': 1, 'nsi': 1, 'sid': 1, 'de ': 2, 'e e': 1, ' ea': 1, 'eac': 1, 'ach': 1, 'ch ': 1, 'h c': 1, ' IM': 1, 'IMP': 1, 'MPL': 1, 'PLE': 1, 'LEM': 1, 'EME': 1, 'MEN': 1, 'ENT': 1, 'NTA': 1, 'TAT': 1, 'e f': 1, 'ns.': 1, 's.p': 1, 'T 4': 2, ' 4:': 5, '4: ': 3, 'Int': 2, 'nte': 2, 'ter': 3, 'era': 2, 'rac': 2, 'act': 2, 'g w': 2, ' wi': 5, 'wit': 2, 'ith': 2, 'th ': 2, 'h u': 2, ' us': 12, 'use': 12, 'ser': 10, 'ers': 6, 'rs ': 5, 'INT': 1, 'NTE': 1, 'TER': 1, 'ERA': 1, 'RAC': 1, 'ACT': 1, 'CTI': 1, 'e m': 2, ' ma': 1, 'mai': 1, 'ain': 1, 'in.': 1, 'n.p': 1, ')\n\n': 12, '\n\n ': 7, '\n  ': 23, '# P': 17, 'rs\n': 1, 's\n\n': 3, ' Ph': 16, 'Pha': 16, 'has': 17, 'ase': 18, 'se ': 21, 'e 1': 3, ': L': 2, ' Li': 2, 'Lis': 2, 'ist': 6, 'sti': 5, 'g a': 2, ' al': 2, 'all': 4, 'll ': 2, 'l p': 2, ' pr': 11, 'pro': 12, 'rod': 7, 'odu': 7, 'duc': 7, 'uct': 7, 'cts': 5, 'ts ': 5, 's a': 11, ' an': 10, 'and': 8, 'nd ': 8, 'd s': 2, ' sh': 6, 'sho': 3, 'how': 2, 'owi': 2, 'win': 2, 'hem': 1, 'em ': 9, 'm o': 3, ' on': 5, 'on ': 2, 'n t': 1, ' sc': 2, 'scr': 2, 'cre': 3, 'ree': 2, 'een': 2, 'en\n': 2, 'n\n#': 1, 'e 2': 2, ': v': 1, ' vi': 1, 'vis': 1, 'isi': 1, 'sit': 3, 'ito': 1, 'or ': 17, 'r s': 5, 'sel': 1, 'ele': 2, 'lec': 2, 'ect': 2, ' a ': 3, 'a p': 1, 'ct\n': 1, 't\n#': 2, 'e 3': 1, ': s': 4, ' sy': 4, 'sys': 7, 'yst': 8, 'ste': 9, 'tem': 8, ' of': 4, 'off': 4, 'ffe': 4, 'fer': 4, 's t': 11, 'e p': 4, ' po': 1, 'pos': 1, 'oss': 1, 'ssi': 1, 'sib': 1, 'ibi': 1, 'bil': 1, 'ili': 1, 'lit': 2, 'ity': 2, 'ty ': 2, 'y t': 1, ' to': 13, 'o r': 1, ' re': 3, 'reg': 1, 'egi': 1, 'gis': 1, 'er ': 10, 'r o': 1, ' or': 13, 'r l': 2, ' lo': 1, 'log': 1, 'ogi': 1, 'gin': 1, 'in ': 2, 'n (': 1, ' (i': 1, '(if': 1, 'if ': 13, 'f h': 3, ' he': 3, 'e o': 8, 'she': 5, 'e i': 1, 's n': 2, ' no': 2, 'not': 2, 'ot)': 1, 't)\n': 1, 'e 4': 1, 'm c': 3, ' ch': 8, 'che': 8, 'hec': 7, 'eck': 7, 'cks': 3, 'ks ': 5, 's p': 1, 'ct ': 3, 't a': 2, ' av': 2, 'ava': 2, 'vai': 2, 'ail': 7, 'ila': 2, 'lab': 2, 'abl': 2, 'bli': 1, 'y a': 1, 'd a': 3, ' ad': 2, 'add': 3, 'dds': 1, 'ds ': 3, 'o s': 3, 'hop': 1, 'opp': 1, 'ppi': 1, 'pin': 1, 'g c': 1, ' ca': 1, 'car': 4, 'rt ': 2, 't o': 3, ' sa': 1, 'say': 1, 'ays': 1, 'ys ': 1, 'ot ': 1, 'ble': 1, 'le\n': 1, 'e\n#': 2, 'e 5': 2, ' 5:': 3, '5: ': 2, ': u': 2, 'r i': 4, ' as': 4, 'ask': 4, 'ske': 2, 'ked': 2, ' if': 9, 'e w': 4, 'wis': 4, 'ish': 3, 'hes': 2, 'o c': 6, ' co': 5, 'con': 3, 'ont': 3, 'inu': 3, 'nue': 3, 'ue ': 3, 'e b': 3, ' bu': 3, 'buy': 3, 'uyi': 3, 'yin': 3, 'g (': 1, ' (b': 1, '(ba': 1, 'bac': 1, 'ack': 1, 'ck ': 13, 'k t': 1, 'o p': 1, ' ph': 1, 'pha': 1, ' 1)': 1, '1) ': 1, ') o': 1, 'roc': 3, 'oce': 3, 'cee': 3, 'eed': 3, 'd t': 3, 'cko': 4, 'kou': 4, 'out': 4, 'ut\n': 2, 'e 6': 2, ' 6:': 2, '6:s': 1, ':sy': 3, 'f v': 2, ' ve': 2, 'ven': 2, 'end': 2, 'ndo': 2, 'dor': 2, ' we': 2, 'web': 2, 'ebs': 2, 'bsi': 2, 'ite': 2, 'te ': 2, 'r a': 2, 'a t': 2, 'thi': 2, 'hir': 2, 'ird': 2, 'rd ': 2, 'd p': 2, 'rty': 2, 'ty,': 2, 'y, ': 2, ', t': 2, 'hen': 2, 'en ': 2, 'n o': 2, 'cor': 2, 'orr': 2, 'rre': 2, 'res': 2, 'esp': 2, 'spo': 2, 'pon': 2, 'ond': 2, 'ndi': 1, 'din': 3, 'g d': 1, 'del': 4, 'eli': 7, 'liv': 4, 'ive': 6, 'ver': 4, 'ery': 3, 'ry ': 2, 'y m': 2, ' me': 5, 'met': 5, 'eth': 5, 'tho': 5, 'hod': 5, 'ods': 5, 'ds\n': 2, 's\n#': 2, 'e 7': 2, ' 7:': 2, '7:s': 2, 's 4': 2, ' 4 ': 3, '4 p': 2, 'pay': 8, 'aym': 8, 'yme': 8, 't m': 2, 'd u': 4, 'r c': 2, 'cho': 3, 'hoo': 3, 'oos': 3, 'ose': 2, 's o': 4, 'one': 4, 'ne ': 2, 'r m': 2, ' mo': 2, 'mor': 2, 're\n': 1, 'e 8': 2, ' 8:': 2, '8: ': 2, 'm a': 2, 'sks': 2, 'f u': 2, 'r w': 2, ' wa': 2, 'wan': 2, 'nts': 2, ' st': 4, 'sto': 7, 't d': 3, 'det': 5, 'eta': 5, 'tai': 5, 'ils': 5, 'ls ': 2, 'r u': 2, 'red': 4, 'd d': 2, 'ls\n': 2, 'e 9': 2, ' 9:': 2, '9: ': 2, ': p': 2, ' ac': 2, 'acc': 2, 'cce': 2, 'cep': 2, 'ept': 2, 'pte': 2, 'ted': 2, 'r r': 2, 'rec': 2, 'ece': 2, 'cei': 2, 'eiv': 2, 'ves': 2, 'an ': 2, 'n i': 2, 'inv': 3, 'nvo': 3, 'voi': 3, 'oic': 3, 'ice': 3, 'ce\n': 1, 'e\n\n': 4, '\n\nf': 2, '\nfr': 1, 'fro': 1, 'rom': 3, 'om ': 1, 'm f': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 't *': 1, ' *\n': 1, '*\n\n': 1, 'g o': 2, 'n s': 1, 'n\n\n': 1, '\n\nt': 1, '\nto': 1, 'toy': 4, 'oy_': 4, 'y_s': 2, '_st': 3, 're.': 2, 'e.l': 2, '.li': 2, 'lis': 3, 'ng_': 6, 'g_a': 2, '_al': 2, 'll_': 2, 'l_p': 2, '_pr': 2, 'ts(': 2, 's()': 3, '()\n': 12, ' 2,': 1, '2, ': 1, ', 3': 1, ' 3 ': 2, '3 a': 1, 'd 4': 1, '4:\n': 2, '\n\na': 1, '\nad': 1, 'ddi': 2, 'g_t': 3, '_to': 5, 'y_t': 2, 'to_': 3, 'o_c': 2, '_ca': 3, 'rt(': 2, 't()': 2, 't\n\n': 1, '\n\nw': 2, '\nwh': 2, 'whi': 2, 'hil': 2, 'e T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue:': 1, 'e:\n': 1, ':\n ': 8, '  c': 3, 'cli': 12, 'lic': 12, 'ick': 12, 'k =': 9, ' = ': 3, '= i': 2, 'nt(': 3, 't(i': 2, '(in': 2, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't(""': 3, '(""I': 1, '""If': 1, 'If ': 1, 'f y': 1, ' yo': 1, 'you': 1, 'ou ': 1, 'u w': 1, 'sh ': 1, 'h t': 1, 'g p': 1, ' pl': 1, 'ple': 1, 'lea': 1, 'eas': 1, 'k 1': 1, ' 1,': 1, '1, ': 1, ', o': 1, ' ot': 1, 'oth': 1, 'her': 3, 'erw': 1, 'rwi': 1, 'ise': 1, 'k 2': 1, ' 2 ': 2, '2 t': 1, 'ut ': 1, 't :': 1, ' :)': 1, ':) ': 1, ') ""': 1, ' "")': 2, '""))': 2, '))\n': 2, ')\n ': 3, '  i': 3, 'f c': 6, ' ==': 6, '== ': 6, '= 1': 2, '1:\n': 2, '  t': 1, '  a': 1, '= 2': 2, '2:\n': 2, '  b': 1, ' br': 1, 'bre': 1, 'eak': 1, 'ak\n': 1, 'k\n\n': 1, '6:S': 1, ':Sy': 1, 'Sys': 1, 'nde': 1, 'den': 1, '\n\nd': 1, '\nde': 1, 'eri': 1, 'rin': 2, 'ng(': 1, 'g()': 1, 'm p': 1, 'rov': 1, 'ovi': 1, 'des': 1, 'ne\n': 2, '\n\nc': 2, '\ncl': 1, '= N': 1, ' No': 1, 'Non': 1, 'k !': 1, ' !=': 1, '!= ': 1, '= 5': 1, '5:\n': 1, '  p': 3, 'pri': 1, '(""""': 1, '""""""': 2, '""""P': 1, '""Pa': 1, 'Pay': 2, ' op': 2, 'opt': 2, 'pti': 2, 'ns:': 2, 's: ': 2, ': \n': 1, ' \n ': 4, '  1': 1, ' 1 ': 1, '1 -': 1, '- p': 1, 'omo': 2, 'mot': 2, 'oti': 2, 'ona': 2, 'nal': 2, 'al_': 2, 'l_c': 2, '_co': 2, 'cod': 2, 'ode': 2, 'e \n': 1, '  2': 1, '2 -': 1, '- G': 1, ' Gi': 1, 'Gif': 1, 'ift': 2, 'ft ': 1, 't V': 1, ' Vo': 1, 'Vou': 1, 'ouc': 2, 'uch': 2, 'r \n': 1, '  3': 1, '3 -': 1, '- C': 1, 'edi': 2, 'dit': 2, 'it/': 1, 't/D': 1, '/De': 1, 'Deb': 1, 'ebi': 2, 'bit': 2, 'it ': 1, 't \n': 1, '  4': 1, '4 -': 1, '- P': 2, ' Pa': 1, 'ayP': 1, 'yPa': 1, 'Pal': 1, 'al\n': 1, 'l\n ': 1, '  5': 1, ' 5 ': 1, '5 -': 1, ' Pr': 1, 'Pro': 1, 'o C': 1, ' Ch': 1, 'Che': 1, 'ut""': 1, 't""""': 1, '"""")': 1, '"")\n': 1, '(""S': 1, '""Se': 1, 'Sel': 1, ': ""': 1, 'de(': 1, 'e()': 2, '  e': 3, ' el': 3, 'lif': 3, '  g': 1, ' gi': 1, 'gif': 1, 'ft_': 1, 't_v': 1, '_vo': 1, 'vou': 1, 'er(': 1, 'r()': 1, '= 3': 1, '3:\n': 1, ' cr': 1, 'it_': 2, 't_d': 2, '_de': 3, 'deb': 1, 't_c': 1, 'ard': 1, 'rd(': 1, 'd()': 1, '= 4': 1, 'ayp': 1, 'ypa': 1, 'pal': 1, 'al(': 1, 'l()': 1, '\nch': 1, 'osi': 1, 'sin': 1, 'o_s': 1, 're_': 1, 'e_p': 1, '_pa': 1, 'nt_': 1, 'ls(': 1, 'ce ': 1, 'mes': 1, 'ess': 1, 'ssa': 1, 'sag': 1, 'age': 1, 'ge\n': 1, '\n\ni': 1, '\nin': 1, 'ce(': 1, '\nfo': 1, 'for': 1, ' l ': 1, 'l i': 1, 'n l': 1, ' li': 1, 'g_d': 1, 'ry_': 1, 'y_m': 1, '_me': 1, 'ds:': 1, '  l': 1, ' l.': 1, 'l.d': 1, '.di': 1, 'dis': 1, 'isp': 1, 'spl': 1, 'pla': 1, 'lay': 1, 'ay(': 1, 'y()': 1}"
Alice Gana,products.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#6)': 1, 'class': 4, 'website': 1, 'products': 2, 'website_products:': 1, 'def': 4, '__init__(self,product_name,': 2, 'product_id,': 2, 'category,price,storefront,quantity,product_vendor):#function': 1, 'to': 3, 'create': 3, '5': 1, 'attributes': 1, 'self.product_name=product_name': 1, 'self.product_id=product_id': 1, 'self.category=category': 1, 'self.price=price': 1, 'self.storefront=storefront': 1, 'self.quantity=quantity': 2, 'self.product_vendor=product_vendor': 2, '#function': 1, 'one': 1, 'method:': 2, 'display(self):': 2, 'print(""product': 2, 'name"",': 2, 'self.product_name,""product_id:"",self.product_id,""category"",self.category,': 2, '""price"",self.price,""storefront"",self.storefront,""product': 2, 'vendor"",self.product_vendor)': 1, '#7)': 1, 'marketplace': 1, 'marketplaceproducts:': 1, 'category,price,storefront,quantity,product_vendor):': 1, 'self.product_name': 1, '=': 5, 'product_name': 1, 'self.product_id': 1, 'product_id': 1, 'self.category': 1, 'category': 1, 'self.price': 1, 'price': 1, 'self.storefront': 1, 'storefront': 1, '#': 1, 'function': 1, 'a': 1, 'vendor:"",self.product_vendor)': 1}","{'#6)': 1, '6) ': 1, ') C': 2, ' Cl': 2, 'Cla': 2, 'las': 4, 'ass': 4, 'ss ': 4, 's W': 2, ' We': 2, 'Web': 2, 'ebs': 2, 'bsi': 2, 'sit': 2, 'ite': 2, 'te ': 4, 'e P': 2, ' Pr': 2, 'Pro': 10, 'rod': 34, 'odu': 34, 'duc': 34, 'uct': 34, 'cts': 4, 'ts\n': 2, 's\nc': 2, '\ncl': 2, 'cla': 2, 'te_': 1, 'e_P': 1, '_Pr': 1, 'ts:': 2, 's:\n': 2, ':\n ': 7, '\n  ': 23, '   ': 130, '  d': 4, ' de': 4, 'def': 4, 'ef ': 4, 'f _': 2, ' __': 2, '__i': 2, '_in': 2, 'ini': 2, 'nit': 2, 'it_': 2, 't__': 2, '__(': 2, '_(s': 2, '(se': 4, 'sel': 30, 'elf': 30, 'lf,': 2, 'f,p': 2, ',pr': 6, 'pro': 24, 'ct_': 26, 't_n': 8, '_na': 8, 'nam': 10, 'ame': 10, 'me,': 4, 'e, ': 2, ', p': 2, ' pr': 7, 't_i': 8, '_id': 8, 'id,': 4, 'd, ': 2, ', c': 2, ' ca': 3, 'cat': 8, 'ate': 13, 'teg': 10, 'ego': 10, 'gor': 10, 'ory': 10, 'ry,': 4, 'y,p': 4, 'pri': 10, 'ric': 10, 'ice': 10, 'ce,': 4, 'e,s': 2, ',st': 2, 'sto': 8, 'tor': 10, 'ore': 10, 'ref': 10, 'efr': 10, 'fro': 10, 'ron': 10, 'ont': 10, 'nt,': 4, 't,q': 2, ',qu': 2, 'qua': 6, 'uan': 6, 'ant': 6, 'nti': 6, 'tit': 6, 'ity': 6, 'ty,': 2, 't_v': 8, '_ve': 8, 'ven': 8, 'end': 10, 'ndo': 10, 'dor': 10, 'or)': 4, 'r):': 2, '):#': 1, ':#F': 1, '#Fu': 2, 'Fun': 3, 'unc': 3, 'nct': 3, 'cti': 3, 'tio': 3, 'ion': 3, 'on ': 3, 'n t': 3, ' to': 3, 'to ': 3, 'o c': 3, ' cr': 3, 'cre': 3, 'rea': 3, 'eat': 3, 'e 5': 1, ' 5 ': 1, '5 a': 1, ' at': 1, 'att': 1, 'ttr': 1, 'tri': 1, 'rib': 1, 'ibu': 1, 'but': 1, 'ute': 1, 'tes': 1, 'es\n': 1, 's\n ': 1, '  s': 14, ' se': 16, 'lf.': 26, 'f.p': 16, '.pr': 16, 'me=': 1, 'e=p': 2, '=pr': 5, 'me\n': 2, 'e\n ': 4, 'id=': 1, 'd=p': 1, 'id\n': 2, 'd\n ': 2, 'f.c': 4, '.ca': 4, 'ry=': 1, 'y=c': 1, '=ca': 1, 'ry\n': 2, 'y\n ': 4, 'ce=': 1, 'ce\n': 2, 'f.s': 4, '.st': 4, 'nt=': 1, 't=s': 1, '=st': 1, 'nt\n': 2, 't\n ': 2, 'f.q': 2, '.qu': 2, 'ty=': 2, 'y=q': 2, '=qu': 2, 'ty\n': 2, 'or=': 2, 'r=p': 2, 'or\n': 2, 'r\n\n': 2, '\n\n#': 2, '\n#F': 1, 'e o': 1, ' on': 1, 'one': 1, 'ne ': 1, 'e m': 1, ' me': 2, 'met': 2, 'eth': 2, 'tho': 2, 'hod': 2, 'od:': 2, 'd:\n': 2, 'f d': 2, ' di': 2, 'dis': 2, 'isp': 2, 'spl': 2, 'pla': 4, 'lay': 2, 'ay(': 2, 'y(s': 2, 'lf)': 2, 'f):': 2, '):\n': 3, '  p': 2, 'rin': 2, 'int': 2, 'nt(': 2, 't(""': 2, '(""P': 2, '""Pr': 8, 'ct ': 4, 't n': 2, ' na': 2, 'me""': 2, 'e"",': 4, '"", ': 2, ', s': 2, 'e,""': 4, ',""P': 4, 't_I': 2, '_ID': 2, 'ID:': 2, 'D:""': 2, ':"",': 3, '"",s': 10, ',se': 10, 'd,""': 2, ',""C': 2, '""Ca': 2, 'Cat': 2, 'ry""': 2, 'y"",': 2, 'y,\n': 2, ',\n ': 2, '  ""': 2, ' ""P': 2, 'Pri': 2, 'ce""': 2, ',""S': 2, '""St': 2, 'Sto': 2, 'nt""': 2, 't"",': 2, 't,""': 2, 't V': 2, ' Ve': 2, 'Ven': 2, 'or""': 1, 'r"",': 1, 'r)\n': 2, ')\n\n': 1, '\n#7': 1, '#7)': 1, '7) ': 1, 's M': 2, ' Ma': 2, 'Mar': 2, 'ark': 2, 'rke': 2, 'ket': 2, 'etp': 2, 'tpl': 2, 'lac': 2, 'ace': 2, 'ce ': 2, 'ceP': 1, 'ePr': 1, 'me ': 1, 'e =': 2, ' = ': 5, '= p': 3, 'id ': 1, 'd =': 1, 'ry ': 1, 'y =': 1, '= c': 1, 'nt ': 1, 't =': 1, '= s': 1, ' st': 1, '\n\n ': 1, '  #': 1, ' # ': 1, '# F': 1, ' Fu': 1, 'e a': 1, ' a ': 1, 'a m': 1, 'or:': 1, 'r:""': 1}"
Alice Gana,reccursion_excercise1.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'####################################################################################################################': 2, '#': 16, 'lab': 1, 'exercise': 1, '1': 4, 'write': 1, 'a': 1, 'recursive': 1, 'function': 7, 'called': 1, 'recursive_power': 1, 'that': 1, 'takes': 1, 'two': 1, 'integers': 1, 'as': 1, 'parameters.': 1, 'the': 13, 'first': 1, 'parameter': 3, 'is': 6, 'base': 3, 'and': 1, 'second': 1, 'exponent.': 2, 'return': 7, 'to': 1, 'power': 1, 'of': 1, 'expected': 1, 'output:': 1, 'if': 6, 'call': 4, 'recursive_power(5,': 2, '3),': 1, 'then': 2, 'would': 2, '125': 3, 'recursive_power(4,': 2, '5),': 1, '1024': 2, '5)': 1, 'def': 2, 'recursive_power(n1,n2):': 2, '#base': 2, 'case': 2, 'n2': 2, '==': 2, '0:': 2, 'else:': 2, 'n1*recursive_power(n1,n2-1)': 2, 'print(recursive_power(4,': 1, '5))': 1, 'output': 3, '=>': 3, '3)': 1, 'print(recursive_power(5,': 1, '3))': 1, 'alternative': 1, 'solution:': 1, 'total': 2, '=': 4, '5': 1, 'exponent': 1, '3': 1, 'for': 1, 'i': 1, 'in': 1, 'range(exponent):': 1, 'total*base': 1, 'print(total)': 1}","{'###': 228, '##\n': 2, '#\n#': 4, '\n# ': 13, '#  ': 6, '   ': 52, '  L': 1, ' La': 1, 'Lab': 1, 'ab ': 1, 'b E': 1, ' Ex': 2, 'Exe': 1, 'xer': 1, 'erc': 1, 'rci': 1, 'cis': 1, 'ise': 1, 'se ': 6, 'e 1': 1, ' 1\n': 4, '1\n#': 1, '\n#\n': 3, '# W': 1, ' Wr': 1, 'Wri': 1, 'rit': 1, 'ite': 1, 'te ': 1, 'e a': 2, ' a ': 1, 'a r': 1, ' re': 14, 'rec': 12, 'ecu': 12, 'cur': 12, 'urs': 12, 'rsi': 12, 'siv': 12, 'ive': 12, 've ': 1, 'e f': 8, ' fu': 7, 'fun': 7, 'unc': 7, 'nct': 7, 'cti': 7, 'tio': 7, 'ion': 7, 'on ': 7, 'n c': 5, ' ca': 7, 'cal': 5, 'all': 5, 'lle': 1, 'led': 1, 'ed ': 2, 'd r': 3, 've_': 11, 'e_p': 11, '_po': 11, 'pow': 12, 'owe': 12, 'wer': 12, 'er ': 5, 'r t': 2, ' th': 15, 'tha': 1, 'hat': 1, 'at ': 1, 't t': 1, ' ta': 1, 'tak': 1, 'ake': 1, 'kes': 1, 'es ': 1, 's t': 3, ' tw': 1, 'two': 1, 'wo ': 1, 'o i': 1, ' in': 2, 'int': 4, 'nte': 1, 'teg': 1, 'ege': 1, 'ger': 1, 'ers': 2, 'rs ': 1, 's a': 1, ' as': 1, 'as ': 1, 's p': 1, ' pa': 4, 'par': 4, 'ara': 4, 'ram': 4, 'ame': 4, 'met': 4, 'ete': 4, 'ter': 4, 'rs.': 1, 's.\n': 1, '.\n#': 3, '# T': 1, ' Th': 1, 'The': 1, 'he ': 13, ' fi': 1, 'fir': 1, 'irs': 1, 'rst': 1, 'st ': 1, 't p': 1, 'r i': 3, ' is': 6, 'is ': 6, 'the': 14, 'e b': 2, ' ba': 2, 'bas': 6, 'ase': 8, ' an': 1, 'and': 1, 'nd ': 2, 'd t': 1, 'e s': 1, ' se': 1, 'sec': 1, 'eco': 1, 'con': 1, 'ond': 1, 'd p': 1, 'e e': 2, ' ex': 2, 'exp': 4, 'xpo': 4, 'pon': 4, 'one': 4, 'nen': 4, 'ent': 4, 'nt.': 2, 't.\n': 2, '# R': 1, ' Re': 1, 'Ret': 1, 'etu': 7, 'tur': 7, 'urn': 7, 'rn ': 7, 'n t': 3, 'e p': 2, ' to': 3, 'to ': 1, 'o t': 1, ' po': 1, 'r o': 1, ' of': 1, 'of ': 1, 'f t': 5, '  E': 1, 'Exp': 1, 'xpe': 1, 'pec': 1, 'ect': 1, 'cte': 1, 'ted': 1, 'd O': 1, ' Ou': 4, 'Out': 4, 'utp': 4, 'tpu': 4, 'put': 4, 'ut:': 1, 't:\n': 1, ':\n#': 1, '  I': 4, ' If': 4, 'If ': 4, 'll ': 4, 'l i': 4, 's r': 4, 'er(': 10, 'r(5': 3, '(5,': 3, '5, ': 3, ', 3': 3, ' 3)': 3, '3),': 1, '), ': 2, ', t': 2, 'hen': 2, 'en ': 2, 'n w': 2, ' wo': 2, 'wou': 2, 'oul': 2, 'uld': 2, 'ld ': 2, 'ret': 6, 'n 1': 4, ' 12': 3, '125': 3, '25\n': 3, '5\n#': 1, 'r(4': 3, '(4,': 3, '4, ': 3, ', 5': 3, ' 5)': 3, '5),': 1, ' 10': 2, '102': 2, '024': 2, '24\n': 2, '4\n#': 1, '\n##': 1, '#\n\n': 1, '\n\n#': 6, '5)\n': 1, ')\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f r': 2, 'r(n': 4, '(n1': 4, 'n1,': 4, '1,n': 4, ',n2': 4, 'n2)': 2, '2):': 2, '):\n': 3, ':\n ': 7, '\n  ': 11, '  #': 2, ' #b': 2, '#ba': 2, 'e c': 2, 'cas': 2, 'se\n': 3, 'e\n ': 2, '  i': 2, ' if': 2, 'if ': 2, 'f n': 2, ' n2': 2, 'n2 ': 2, '2 =': 2, ' ==': 2, '== ': 2, '= 0': 2, ' 0:': 2, '0:\n': 2, '  r': 4, '1\n ': 2, '  e': 2, ' el': 2, 'els': 2, 'lse': 2, 'se:': 2, 'e:\n': 2, 'n n': 2, ' n1': 2, 'n1*': 2, '1*r': 2, '*re': 2, 'n2-': 2, '2-1': 2, '-1)': 2, '1)\n': 2, ')\n\n': 5, '\n\np': 2, '\npr': 3, 'pri': 3, 'rin': 3, 'nt(': 3, 't(r': 2, '(re': 2, '5))': 1, '))\n': 2, '# O': 3, 'ut ': 3, 't =': 4, ' =>': 3, '=> ': 3, '> 1': 3, '4\n\n': 1, '3)\n': 1, '3))': 1, '5\n\n': 1, '# A': 1, ' AL': 1, 'ALT': 1, 'LTE': 1, 'TER': 1, 'ERN': 1, 'RNA': 1, 'NAT': 1, 'ATI': 1, 'TIV': 1, 'IVE': 1, 'VE ': 1, 'E S': 1, ' SO': 1, 'SOL': 1, 'OLU': 1, 'LUT': 1, 'UTI': 1, 'TIO': 1, 'ION': 1, 'ON:': 1, 'N:\n': 1, ':\n\n': 1, '\n\nt': 1, '\nto': 1, 'tot': 4, 'ota': 4, 'tal': 4, 'al ': 2, 'l =': 2, ' = ': 4, '= 1': 1, '1\nb': 1, '\nba': 1, 'e =': 1, '= 5': 1, ' 5\n': 1, '5\ne': 1, '\nex': 1, 'nt ': 1, '= 3': 1, ' 3\n': 1, '3\n\n': 1, '\n\nf': 1, '\nfo': 1, 'for': 1, 'or ': 1, ' i ': 1, 'i i': 1, 'in ': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(e': 1, '(ex': 1, 'nt)': 1, 't):': 1, '  t': 1, '= t': 1, 'al*': 1, 'l*b': 1, '*ba': 1, 'e\np': 1, 't(t': 1, '(to': 1, 'al)': 1, 'l)\n': 1}"
Alice Gana,shoppingcart.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#8)': 1, 'class': 2, 'shoppingcart': 1, 'shoppingcart:': 1, 'def': 4, '__init__(self,shopping_cart_id,': 1, 'customer):': 1, 'self.shopping_cart_id=shopping_cart_id': 1, 'self.products=[]': 1, 'self.customer=customer': 1, '#': 2, 'method': 1, 'display:': 1, 'display(self):': 1, 'print(""shopping': 1, 'cart': 2, 'id"",self.shopping_cart_id,""customer': 1, 'id:"",self.customer)': 1, 'for': 1, 'product': 2, 'in': 4, 'self.products:': 1, 'print(""product:"",product.product_name)': 1, 'function': 1, 'to': 2, 'add': 1, 'products:': 1, 'add_products(self,product):': 1, 'self.products.append(product)': 1, '#function': 1, 'check': 1, 'the': 2, 'id': 1, 'of': 1, 'each': 1, 'finding_product_id_cart(self):': 1, 'origin_of_product=self.products[0]': 1, 'if': 2, '""wp""': 1, 'origin_of_product:': 2, 'return': 2, 'true': 1, '""mp""': 1, 'false': 1}","{'\n#8': 1, '#8)': 1, '8) ': 1, ') C': 1, ' Cl': 1, 'Cla': 1, 'las': 2, 'ass': 2, 'ss ': 2, 's S': 2, ' Sh': 2, 'Sho': 3, 'hop': 7, 'opp': 7, 'ppi': 7, 'pin': 7, 'ing': 8, 'ngC': 2, 'gCa': 2, 'Car': 4, 'art': 9, 'rt\n': 2, 't\nc': 1, '\ncl': 1, 'cla': 1, 'rt:': 1, 't:\n': 3, ':\n ': 10, '\n  ': 16, '   ': 92, '  d': 4, ' de': 4, 'def': 4, 'ef ': 4, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 4, 'sel': 12, 'elf': 12, 'lf,': 2, 'f,s': 1, ',sh': 1, 'sho': 4, 'ng_': 5, 'g_c': 4, '_ca': 5, 'car': 5, 'rt_': 4, 't_i': 5, '_id': 5, 'id,': 2, 'd, ': 1, ', c': 1, ' cu': 1, 'cus': 4, 'ust': 5, 'sto': 5, 'tom': 5, 'ome': 5, 'mer': 5, 'er)': 2, 'r):': 1, '):\n': 4, '  s': 4, ' se': 5, 'lf.': 8, 'f.s': 2, '.sh': 2, 'id=': 1, 'd=s': 1, '=sh': 1, 'id\n': 1, 'd\n ': 1, 'f.p': 4, '.pr': 5, 'pro': 16, 'rod': 17, 'odu': 17, 'duc': 17, 'uct': 17, 'cts': 6, 'ts=': 1, 's=[': 1, '=[]': 1, '[]\n': 1, ']\n ': 2, 'f.c': 2, '.cu': 2, 'er=': 1, 'r=c': 1, '=cu': 1, 'er\n': 1, 'r\n\n': 1, '\n\n#': 3, '\n# ': 2, '# M': 1, ' Me': 1, 'Met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od ': 1, 'd D': 1, ' Di': 1, 'Dis': 1, 'isp': 2, 'spl': 2, 'pla': 2, 'lay': 2, 'ay:': 1, 'y:\n': 1, 'f d': 1, ' di': 1, 'dis': 1, 'ay(': 1, 'y(s': 1, 'lf)': 2, 'f):': 2, '  p': 2, ' pr': 5, 'pri': 2, 'rin': 2, 'int': 2, 'nt(': 2, 't(""': 2, '(""S': 1, '""Sh': 1, 'ng ': 1, 'g C': 1, ' Ca': 2, 'rt ': 1, 't I': 1, ' ID': 3, 'ID""': 1, 'D"",': 1, '"",s': 2, ',se': 2, 'd,""': 1, ',""C': 1, '""Cu': 1, 'Cus': 1, 'er ': 1, 'r I': 1, 'ID:': 1, 'D:""': 1, ':"",': 2, 'r)\n': 1, ')\n ': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r p': 1, 'ct ': 2, 't i': 2, ' in': 4, 'in ': 4, 'n s': 1, 'ts:': 2, 's:\n': 2, '(""P': 1, '""Pr': 1, 'Pro': 1, 'ct:': 3, 't:""': 1, '"",p': 1, ',pr': 2, 'ct.': 1, 't.p': 1, 'ct_': 2, 't_n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me)': 1, 'e)\n': 1, ')\n\n': 2, '# F': 1, ' Fu': 1, 'Fun': 2, 'unc': 2, 'nct': 2, 'cti': 2, 'tio': 2, 'ion': 2, 'on ': 2, 'n t': 3, ' to': 2, 'to ': 2, 'o a': 1, ' ad': 2, 'add': 2, 'dd ': 1, 'd p': 1, 'f a': 1, 'dd_': 1, 'd_p': 1, '_pr': 5, 'ts(': 1, 's(s': 1, 'f,p': 1, 'ct)': 2, 't):': 1, 'ts.': 1, 's.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(p': 1, '(pr': 1, 't)\n': 1, '\n#F': 1, '#Fu': 1, 'o c': 1, ' ch': 1, 'che': 1, 'hec': 1, 'eck': 1, 'ck ': 1, 'k t': 1, ' th': 2, 'the': 2, 'he ': 2, 'e I': 1, 'ID ': 1, 'D o': 1, ' of': 1, 'of ': 1, 'f e': 1, ' ea': 1, 'eac': 1, 'ach': 1, 'ch ': 1, 'h p': 1, 'e C': 1, 't\n ': 1, 'f f': 1, ' fi': 1, 'fin': 1, 'ind': 1, 'ndi': 1, 'din': 1, 'g_p': 1, 'id_': 1, 'd_c': 1, 'rt(': 1, 't(s': 1, '  o': 1, ' or': 3, 'ori': 3, 'rig': 3, 'igi': 3, 'gin': 3, 'in_': 3, 'n_o': 3, '_of': 3, 'of_': 3, 'f_p': 3, 'ct=': 1, 't=s': 1, '=se': 1, 'ts[': 1, 's[0': 1, '[0]': 1, '0]\n': 1, '  i': 2, ' if': 2, 'if ': 2, 'f ""': 2, ' ""W': 1, '""WP': 1, 'WP""': 1, 'P"" ': 2, '"" i': 2, 'n o': 2, '  r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1, 'e\n ': 1, ' ""M': 1, '""MP': 1, 'MP""': 1, 'n F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'e\n\n': 1, '\n\n\n': 1}"
AMAN KHARWAL,3d.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 4, 'numpy': 1, 'as': 3, 'np': 1, 'matplotlib.colors': 1, 'col': 1, 'from': 1, 'mpl_toolkits.mplot3d': 1, 'axes3d': 1, 'matplotlib.pyplot': 1, 'plt': 1, '#data': 2, 'for': 2, 'a': 1, 'three': 2, 'dimensional': 2, 'line': 1, 'z': 3, '=': 15, 'np.linspace(0,': 1, '15,': 1, '1000)': 1, 'x': 3, 'np.sin(z)': 2, 'y': 5, 'np.cos(z)': 2, 'ax.plot3d(x,': 1, 'y,': 3, 'z,': 3, ""'grey')"": 1, 'scattered': 1, 'points': 1, '15': 1, '*': 3, 'np.random.random(100)': 1, '+': 3, '0.1': 2, 'np.random.randn(100)': 2, 'ax.scatter3d(x,': 1, 'c=z,': 1, ""cmap='greens')"": 1, 'plt.show()': 4, 'def': 1, 'f(x,': 2, 'y):': 1, 'return': 1, 'np.sin(np.sqrt(x': 1, '**': 2, '2': 1, '2))': 1, 'np.linspace(-6,': 2, '6,': 2, '30)': 2, 'x,': 1, 'np.meshgrid(x,': 1, 'y)': 2, 'fig': 2, 'plt.figure()': 2, 'ax': 3, ""plt.axes(projection='3d')"": 3, 'ax.contour3d(x,y,z,50,': 1, ""cmap='binary')"": 1, ""ax.set_xlabel('x')"": 1, ""ax.set_ylabel('y')"": 1, ""ax.set_zlabel('z')"": 1, 'ax.plot_wireframe(x,y,z,': 1, ""color='black')"": 1, ""ax.set_title('wireframe')"": 1, 'ax.plot_surface(x,': 1, 'rstride=1,': 1, 'cstride=1,': 1, ""cmap='viridis',"": 1, ""edgecolor='none')"": 1, ""ax.set_title('surface')"": 1}","{'imp': 4, 'mpo': 4, 'por': 4, 'ort': 4, 'rt ': 4, 't n': 1, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 3, 'as ': 3, 's n': 1, ' np': 13, 'np\n': 1, 'p\ni': 1, '\nim': 2, 't m': 2, ' ma': 2, 'mat': 2, 'atp': 2, 'tpl': 2, 'plo': 7, 'lot': 7, 'otl': 2, 'tli': 2, 'lib': 2, 'ib.': 2, 'b.c': 1, '.co': 4, 'col': 4, 'olo': 3, 'lor': 3, 'ors': 1, 'rs ': 1, 's a': 1, 's c': 1, ' co': 2, 'ol\n': 1, 'l\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm m': 1, ' mp': 1, 'mpl': 2, 'pl_': 1, 'l_t': 1, '_to': 1, 'too': 1, 'ool': 1, 'olk': 1, 'lki': 1, 'kit': 1, 'its': 1, 'ts.': 1, 's.m': 1, '.mp': 1, 'ot3': 2, 't3d': 1, '3d ': 1, 'd i': 1, ' im': 1, 't A': 1, ' Ax': 1, 'Axe': 1, 'xes': 4, 'es3': 1, 's3D': 1, '3D\n': 1, 'D\ni': 1, 'b.p': 1, '.py': 1, 'pyp': 1, 'ypl': 1, 'ot ': 1, 't a': 1, 's p': 1, ' pl': 6, 'plt': 10, 'lt\n': 1, 't\n#': 1, '\n#D': 2, '#Da': 2, 'Dat': 2, 'ata': 2, 'ta ': 2, 'a f': 2, ' fo': 2, 'for': 2, 'or ': 2, 'r a': 1, ' a ': 1, 'a t': 1, ' th': 2, 'thr': 2, 'hre': 2, 'ree': 3, 'ee ': 2, 'e d': 2, ' di': 2, 'dim': 2, 'ime': 2, 'men': 2, 'ens': 3, 'nsi': 2, 'sio': 2, 'ion': 5, 'ona': 2, 'nal': 2, 'al ': 2, 'l l': 1, ' li': 1, 'lin': 4, 'ine': 1, 'ne\n': 1, 'e\nz': 1, '\nz ': 3, 'z =': 3, ' = ': 15, '= n': 8, 'np.': 13, 'p.l': 3, '.li': 3, 'ins': 3, 'nsp': 3, 'spa': 3, 'pac': 3, 'ace': 5, 'ce(': 4, 'e(0': 1, '(0,': 1, '0, ': 2, ', 1': 2, ' 15': 2, '15,': 1, '5, ': 1, ' 10': 1, '100': 4, '000': 1, '00)': 4, '0)\n': 6, ')\nx': 4, '\nx ': 3, 'x =': 6, 'p.s': 4, '.si': 3, 'sin': 3, 'in(': 3, 'n(z': 2, '(z)': 4, 'z)\n': 2, ')\ny': 3, '\ny ': 3, 'y =': 4, 'p.c': 2, 'cos': 2, 'os(': 2, 's(z': 2, ')\na': 12, '\nax': 13, 'ax.': 10, 'x.p': 3, '.pl': 3, 't3D': 1, '3D(': 3, 'D(x': 3, '(x,': 8, 'x, ': 7, ', y': 7, ' y,': 3, 'y, ': 3, ', z': 3, ' z,': 3, 'z, ': 5, "", '"": 1, "" 'g"": 1, ""'gr"": 1, 'gre': 1, 'rey': 1, ""ey'"": 1, ""y')"": 3, ""')\n"": 13, ')\n#': 1, 'r t': 1, 'l s': 1, ' sc': 1, 'sca': 2, 'cat': 2, 'att': 2, 'tte': 2, 'ter': 2, 'ere': 1, 'red': 1, 'ed ': 1, 'd p': 1, ' po': 1, 'poi': 1, 'oin': 1, 'int': 1, 'nts': 1, 'ts\n': 1, 's\nz': 1, '= 1': 1, '15 ': 1, '5 *': 1, ' * ': 3, '* n': 3, 'p.r': 3, '.ra': 6, 'ran': 6, 'and': 6, 'ndo': 4, 'dom': 4, 'om.': 3, 'm.r': 3, 'om(': 1, 'm(1': 1, '(10': 3, 'z) ': 2, ') +': 2, ' + ': 3, '+ 0': 2, ' 0.': 2, '0.1': 2, '.1 ': 2, '1 *': 2, 'ndn': 2, 'dn(': 2, 'n(1': 2, 'x.s': 6, '.sc': 1, 'er3': 1, 'r3D': 2, ', c': 5, ' c=': 1, 'c=z': 1, '=z,': 1, ' cm': 3, 'cma': 3, 'map': 3, 'ap=': 3, ""p='"": 3, ""='G"": 1, ""'Gr"": 1, 'Gre': 1, 'een': 1, ""ns'"": 1, ""s')"": 1, ')\np': 4, '\npl': 4, 'lt.': 9, 't.s': 4, '.sh': 4, 'sho': 4, 'how': 4, 'ow(': 4, 'w()': 4, '()\n': 6, ')\n\n': 3, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f f': 1, ' f(': 2, 'f(x': 2, ' y)': 3, 'y):': 1, '):\n': 1, ':\n ': 1, '\n  ': 3, '   ': 30, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n n': 1, 'n(n': 1, '(np': 1, '.sq': 1, 'sqr': 1, 'qrt': 1, 'rt(': 1, 't(x': 1, '(x ': 1, 'x *': 1, ' **': 2, '** ': 2, '* 2': 2, ' 2 ': 1, '2 +': 1, '+ y': 1, ' y ': 2, 'y *': 1, ' 2)': 1, '2))': 1, '))\n': 1, 'e(-': 2, '(-6': 2, '-6,': 2, '6, ': 4, ', 6': 2, ' 6,': 2, ', 3': 2, ' 30': 2, '30)': 2, '\nx,': 1, 'p.m': 1, '.me': 1, 'mes': 1, 'esh': 1, 'shg': 1, 'hgr': 1, 'gri': 1, 'rid': 4, 'id(': 1, 'd(x': 1, 'y)\n': 2, ')\nz': 1, '= f': 1, ')\nf': 1, '\nfi': 2, 'fig': 4, 'ig ': 2, 'g =': 2, '= p': 5, 't.f': 2, '.fi': 2, 'igu': 2, 'gur': 2, 'ure': 2, 're(': 2, 'e()': 2, 'ax ': 3, 't.a': 3, '.ax': 3, 'axe': 3, 'es(': 3, 's(p': 3, '(pr': 3, 'pro': 3, 'roj': 3, 'oje': 3, 'jec': 3, 'ect': 3, 'cti': 3, 'tio': 3, 'on=': 3, ""n='"": 3, ""='3"": 3, ""'3d"": 3, ""3d'"": 3, ""d')"": 3, 'x.c': 1, 'con': 1, 'ont': 1, 'nto': 1, 'tou': 1, 'our': 1, 'ur3': 1, 'x,y': 2, ',y,': 2, 'y,z': 2, ',z,': 2, 'z,5': 1, ',50': 1, '50,': 1, ""='b"": 2, ""'bi"": 1, 'bin': 1, 'ina': 1, 'nar': 1, 'ary': 1, ""ry'"": 1, '.se': 5, 'set': 5, 'et_': 5, 't_x': 1, '_xl': 1, 'xla': 1, 'lab': 3, 'abe': 3, 'bel': 3, 'el(': 3, ""l('"": 3, ""('x"": 1, ""'x'"": 1, ""x')"": 1, 't_y': 1, '_yl': 1, 'yla': 1, ""('y"": 1, ""'y'"": 1, 't_z': 1, '_zl': 1, 'zla': 1, ""('z"": 1, ""'z'"": 1, ""z')"": 1, '\n\nf': 1, 'ot_': 2, 't_w': 1, '_wi': 1, 'wir': 2, 'ire': 2, 'ref': 2, 'efr': 2, 'fra': 2, 'ram': 2, 'ame': 2, 'me(': 1, 'e(x': 2, 'or=': 2, ""r='"": 2, ""'bl"": 1, 'bla': 1, 'lac': 1, 'ack': 1, ""ck'"": 1, ""k')"": 1, 't_t': 2, '_ti': 2, 'tit': 2, 'itl': 2, 'tle': 2, 'le(': 2, ""e('"": 2, ""('w"": 1, ""'wi"": 1, ""me'"": 1, ""e')"": 3, '\n\na': 1, 't_s': 1, '_su': 1, 'sur': 2, 'urf': 2, 'rfa': 2, 'fac': 2, ', r': 1, ' rs': 1, 'rst': 1, 'str': 2, 'tri': 2, 'ide': 2, 'de=': 2, 'e=1': 2, '=1,': 2, '1,\n': 1, ',\n ': 2, '  c': 1, ' cs': 1, 'cst': 1, '1, ': 1, ""='v"": 1, ""'vi"": 1, 'vir': 1, 'iri': 1, 'idi': 1, 'dis': 1, ""is'"": 1, ""s',"": 1, ""',\n"": 1, '  e': 1, ' ed': 1, 'edg': 1, 'dge': 1, 'gec': 1, 'eco': 1, ""='n"": 1, ""'no"": 1, 'non': 1, 'one': 1, ""ne'"": 1, ""('s"": 1, ""'su"": 1, ""ce'"": 1}"
AMAN KHARWAL,Alarm Clock.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'from': 2, 'datetime': 2, 'import': 2, 'playsound': 2, 'alarm_time': 1, '=': 7, 'input(""enter': 1, 'the': 1, 'time': 1, 'of': 1, 'alarm': 1, 'to': 1, 'be': 1, 'set:hh:mm:ss\\n"")': 1, 'alarm_hour=alarm_time[0:2]': 1, 'alarm_minute=alarm_time[3:5]': 1, 'alarm_seconds=alarm_time[6:8]': 1, 'alarm_period': 1, 'alarm_time[9:11].upper()': 1, 'print(""setting': 1, 'up': 1, 'alarm.."")': 1, 'while': 1, 'true:': 1, 'now': 1, 'datetime.now()': 1, 'current_hour': 1, 'now.strftime(""%i"")': 1, 'current_minute': 1, 'now.strftime(""%m"")': 1, 'current_seconds': 1, 'now.strftime(""%s"")': 1, 'current_period': 1, 'now.strftime(""%p"")': 1, 'if(alarm_period==current_period):': 1, 'if(alarm_hour==current_hour):': 1, 'if(alarm_minute==current_minute):': 1, 'if(alarm_seconds==current_seconds):': 1, 'print(""wake': 1, 'up!"")': 1, ""playsound('audio.mp3')"": 1, 'break': 1}","{'fro': 2, 'rom': 2, 'om ': 2, 'm d': 1, ' da': 3, 'dat': 3, 'ate': 3, 'tet': 3, 'eti': 3, 'tim': 13, 'ime': 13, 'me ': 4, 'e i': 1, ' im': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't d': 1, 'e  ': 1, '   ': 97, '  \n': 1, ' \nf': 1, '\nfr': 1, 'm p': 1, ' pl': 3, 'pla': 3, 'lay': 3, 'ays': 3, 'yso': 3, 'sou': 3, 'oun': 3, 'und': 3, 'nd ': 1, 'd i': 1, 't p': 1, 'nd\n': 1, 'd\na': 1, '\nal': 5, 'ala': 15, 'lar': 15, 'arm': 15, 'rm_': 13, 'm_t': 5, '_ti': 5, 'e =': 2, ' = ': 7, '= i': 1, ' in': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut(': 1, 't(""': 3, '(""E': 1, '""En': 1, 'Ent': 1, 'nte': 1, 'ter': 1, 'er ': 1, 'r t': 1, ' th': 1, 'the': 1, 'he ': 1, 'e t': 1, ' ti': 1, 'e o': 1, ' of': 1, 'of ': 1, 'f a': 1, ' al': 3, 'rm ': 1, 'm t': 1, ' to': 1, 'to ': 1, 'o b': 1, ' be': 1, 'be ': 1, 'e s': 1, ' se': 1, 'set': 1, 'et:': 1, 't:H': 1, ':HH': 1, 'HH:': 1, 'H:M': 1, ':MM': 1, 'MM:': 1, 'M:S': 1, ':SS': 1, 'SS\\': 1, 'S\\n': 1, '\\n""': 1, 'n"")': 1, '"")\n': 7, ')\na': 1, 'm_h': 2, '_ho': 4, 'hou': 4, 'our': 4, 'ur=': 2, 'r=a': 1, '=al': 3, 'me[': 4, 'e[0': 1, '[0:': 1, '0:2': 1, ':2]': 1, '2]\n': 1, ']\na': 3, 'm_m': 2, '_mi': 4, 'min': 4, 'inu': 4, 'nut': 4, 'ute': 4, 'te=': 2, 'e=a': 1, 'e[3': 1, '[3:': 1, '3:5': 1, ':5]': 1, '5]\n': 1, 'm_s': 2, '_se': 4, 'sec': 4, 'eco': 4, 'con': 4, 'ond': 4, 'nds': 4, 'ds=': 2, 's=a': 1, 'e[6': 1, '[6:': 1, '6:8': 1, ':8]': 1, '8]\n': 1, 'm_p': 2, '_pe': 4, 'per': 5, 'eri': 4, 'rio': 4, 'iod': 4, 'od ': 2, 'd =': 2, '= a': 1, 'e[9': 1, '[9:': 1, '9:1': 1, ':11': 1, '11]': 1, '1].': 1, '].u': 1, '.up': 1, 'upp': 1, 'ppe': 1, 'er(': 1, 'r()': 1, '()\n': 2, ')\np': 1, '\npr': 1, 'pri': 2, 'rin': 2, 'int': 2, 'nt(': 2, '(""S': 1, '""Se': 1, 'Set': 1, 'ett': 1, 'tti': 1, 'tin': 1, 'ing': 1, 'ng ': 1, 'g u': 1, ' up': 1, 'up ': 1, 'p a': 1, 'rm.': 1, 'm..': 1, '..""': 1, '."")': 1, ')\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue:': 1, 'e:\n': 1, ':\n ': 5, '\n  ': 12, '  n': 1, ' no': 5, 'now': 6, 'ow ': 1, 'w =': 1, '= d': 1, 'me.': 1, 'e.n': 1, '.no': 1, 'ow(': 1, 'w()': 1, ')\n ': 7, '  c': 4, ' cu': 4, 'cur': 8, 'urr': 8, 'rre': 8, 'ren': 8, 'ent': 8, 'nt_': 8, 't_h': 2, 'ur ': 1, 'r =': 1, '= n': 4, 'ow.': 4, 'w.s': 4, '.st': 4, 'str': 4, 'trf': 4, 'rft': 4, 'fti': 4, 'me(': 4, 'e(""': 4, '(""%': 4, '""%I': 1, '%I""': 1, 'I"")': 1, 't_m': 2, 'te ': 1, '""%M': 1, '%M""': 1, 'M"")': 1, 't_s': 2, 'ds ': 1, 's =': 1, '""%S': 1, '%S""': 1, 'S"")': 1, 't_p': 2, '""%p': 1, '%p""': 1, 'p"")': 1, '  i': 4, ' if': 4, 'if(': 4, 'f(a': 4, '(al': 4, 'od=': 1, 'd==': 1, '==c': 4, '=cu': 4, 'od)': 1, 'd):': 1, '):\n': 4, 'r==': 1, 'ur)': 1, 'r):': 1, 'e==': 1, 'te)': 1, 'e):': 1, 's==': 1, 'ds)': 1, 's):': 1, '  p': 2, ' pr': 1, '(""W': 1, '""Wa': 1, 'Wak': 1, 'ake': 1, 'ke ': 1, 'e U': 1, ' Up': 1, 'Up!': 1, 'p!""': 1, '!"")': 1, 'nd(': 1, ""d('"": 1, ""('a"": 1, ""'au"": 1, 'aud': 1, 'udi': 1, 'dio': 1, 'io.': 1, 'o.m': 1, '.mp': 1, 'mp3': 1, ""p3'"": 1, ""3')"": 1, ""')\n"": 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1}"
AMAN KHARWAL,analog.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'try:': 1, 'import': 4, 'tkinter': 3, 'except:': 1, 'as': 1, 'math': 1, '#': 16, 'required': 2, 'for': 5, 'coordinates': 2, 'calculation': 1, 'time': 2, 'handling': 1, 'class': 2, 'main(tkinter.tk):': 1, 'def': 6, '__init__(self):': 1, 'tkinter.tk.__init__(self)': 1, 'self.x=150': 1, 'center': 2, 'point': 2, 'x': 1, 'self.y=150': 1, 'self.length=50': 1, 'stick': 2, 'length': 1, 'self.creating_all_function_trigger()': 1, 'creating': 5, 'trigger': 2, 'other': 1, 'functions': 1, 'creating_all_function_trigger(self):': 1, 'self.create_canvas_for_shapes()': 1, 'self.creating_background_()': 1, 'self.creating_sticks()': 1, 'return': 5, 'background': 1, 'creating_background_(self):': 1, ""self.image=tkinter.photoimage(file='clock.gif')"": 1, 'self.canvas.create_image(150,150,': 1, 'image=self.image)': 1, 'canvas': 1, 'create_canvas_for_shapes(self):': 1, 'self.canvas=tkinter.canvas(self,': 1, ""bg='black')"": 1, ""self.canvas.pack(expand='yes',fill='both')"": 1, 'moving': 1, 'sticks': 1, 'creating_sticks(self):': 1, 'self.sticks=[]': 1, 'i': 1, 'in': 2, 'range(3):': 1, 'store=self.canvas.create_line(self.x,': 1, 'self.y,self.x+self.length,self.y+self.length,width=2,': 1, ""fill='red')"": 1, 'self.sticks.append(store)': 1, 'function': 2, 'need': 1, 'regular': 1, 'update': 1, 'update_class(self):': 1, 'now=time.localtime()': 1, 't': 2, '=': 2, 'time.strptime(str(now.tm_hour),': 1, '""%h"")': 1, 'hour': 1, 'int(time.strftime(': 1, '""%i"",': 1, '))*5': 1, 'now=(hour,now.tm_min,now.tm_sec)': 1, 'changing': 1, 'n,i': 1, 'enumerate(now):': 1, 'x,y=self.canvas.coords(self.sticks[n])[0:2]': 1, 'cr=[x,y]': 1, 'cr.append(self.length*math.cos(math.radians(i*6)-math.radians(90))+self.x)': 1, 'cr.append(self.length*math.sin(math.radians(i*6)-math.radians(90))+self.y)': 1, 'self.canvas.coords(self.sticks[n],': 1, 'tuple(cr))': 1, 'main': 2, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'root=main()': 1, 'loop': 1, 'while': 1, 'true:': 1, 'root.update()': 1, 'root.update_idletasks()': 1, 'root.update_class()': 1}","{'try': 1, 'ry:': 1, 'y:\n': 1, ':\n\t': 13, '\n\ti': 2, '\tim': 2, 'imp': 4, 'mpo': 4, 'por': 4, 'ort': 4, 'rt ': 4, 't T': 1, ' Tk': 2, 'Tki': 6, 'kin': 7, 'int': 10, 'nte': 9, 'ter': 9, 'er\n': 3, 'r\ne': 1, '\nex': 1, 'exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pt:': 1, 't:\n': 1, 't t': 2, ' tk': 1, 'tki': 1, 'er ': 5, 'r a': 1, ' as': 1, 'as ': 1, 's T': 1, 'r\n\n': 1, '\n\ni': 1, '\nim': 2, 't m': 1, ' ma': 2, 'mat': 7, 'ath': 7, 'th\t': 1, 'h\t#': 1, '\t# ': 12, '# R': 2, ' Re': 3, 'Req': 2, 'equ': 2, 'qui': 2, 'uir': 2, 'ire': 2, 'red': 3, 'ed ': 3, 'd F': 2, ' Fo': 3, 'For': 3, 'or ': 5, 'r C': 1, ' Co': 2, 'Coo': 2, 'oor': 4, 'ord': 4, 'rdi': 2, 'din': 2, 'ina': 2, 'nat': 2, 'ate': 12, 'tes': 2, 'es ': 1, 's C': 1, ' Ca': 2, 'Cal': 1, 'alc': 1, 'lcu': 1, 'cul': 1, 'ula': 2, 'lat': 1, 'ati': 12, 'tio': 6, 'ion': 6, 'on\n': 1, 'n\ni': 1, ' ti': 2, 'tim': 7, 'ime': 8, 'me\t': 1, 'e\t#': 1, 'r T': 1, ' Ti': 1, 'Tim': 1, 'me ': 1, 'e H': 1, ' Ha': 1, 'Han': 1, 'and': 2, 'ndl': 1, 'dli': 1, 'lin': 2, 'ing': 14, 'ng\n': 1, 'g\n#': 1, '\n#\n': 2, '#\n#': 2, '\n# ': 2, '# c': 2, ' cl': 1, 'cla': 4, 'las': 4, 'ass': 4, 'ss\n': 1, 's\nc': 1, '\ncl': 1, 'ss ': 1, 's m': 1, 'mai': 3, 'ain': 5, 'in(': 3, 'n(T': 1, '(Tk': 1, 'er.': 4, 'r.T': 2, '.Tk': 2, 'Tk)': 1, 'k):': 1, '):\n': 9, '\n\td': 6, '\tde': 6, 'def': 6, 'ef ': 6, 'f _': 2, ' __': 2, '__i': 2, '_in': 2, 'ini': 2, 'nit': 2, 'it_': 2, 't__': 2, '__(': 2, '_(s': 3, '(se': 13, 'sel': 37, 'elf': 37, 'lf)': 7, 'f):': 6, '\n\t\t': 35, '\t\tT': 1, '\tTk': 1, 'Tk.': 1, 'k._': 1, '.__': 1, 'f)\n': 1, ')\n\t': 18, '\t\ts': 15, '\tse': 14, 'lf.': 29, 'f.x': 4, '.x=': 1, 'x=1': 1, '=15': 2, '150': 4, '50\t': 3, '0\t#': 3, '# C': 7, ' Ce': 2, 'Cen': 2, 'ent': 2, 'r P': 2, ' Po': 2, 'Poi': 2, 'oin': 2, 'nt ': 1, 't x': 1, ' x\n': 1, 'x\n\t': 1, 'f.y': 4, '.y=': 1, 'y=1': 1, 'nt\n': 1, 't\n\t': 1, 'f.l': 5, '.le': 5, 'len': 5, 'eng': 6, 'ngt': 6, 'gth': 6, 'th=': 2, 'h=5': 1, '=50': 1, '# S': 1, ' St': 3, 'Sti': 3, 'tic': 9, 'ick': 9, 'ck ': 2, 'k L': 1, ' Le': 1, 'Len': 1, 'th\n': 1, 'h\n\t': 1, 'f.c': 10, '.cr': 6, 'cre': 11, 'rea': 15, 'eat': 15, 'tin': 11, 'ng_': 6, 'g_a': 2, '_al': 2, 'all': 2, 'll_': 2, 'l_f': 2, '_fu': 2, 'fun': 2, 'unc': 5, 'nct': 5, 'cti': 5, 'on_': 2, 'n_t': 2, '_tr': 2, 'tri': 2, 'rig': 4, 'igg': 4, 'gge': 4, 'ger': 4, 'er(': 2, 'r()': 1, '()\n': 9, ')\n\n': 2, '\n\n\t': 6, '\n\t#': 6, ' Cr': 4, 'Cre': 4, 'ng ': 7, 'g T': 1, ' Tr': 3, 'Tri': 2, 'r F': 2, 'r O': 1, ' Ot': 1, 'Oth': 1, 'the': 1, 'her': 1, ' Fu': 3, 'Fun': 3, 'ons': 1, 'ns\n': 1, 's\n\t': 4, 'f c': 4, ' cr': 5, 'r(s': 1, 'te_': 7, 'e_c': 4, '_ca': 2, 'can': 8, 'anv': 10, 'nva': 10, 'vas': 10, 'as_': 2, 's_f': 2, '_fo': 2, 'for': 4, 'or_': 2, 'r_s': 2, '_sh': 2, 'sha': 2, 'hap': 2, 'ape': 2, 'pes': 2, 'es(': 2, 's()': 4, 'g_b': 2, '_ba': 2, 'bac': 2, 'ack': 5, 'ckg': 3, 'kgr': 3, 'gro': 3, 'rou': 3, 'oun': 3, 'und': 3, 'nd_': 2, 'd_(': 2, '_()': 1, 'g_s': 2, '_st': 2, 'sti': 6, 'cks': 7, 'ks(': 3, '\t\tr': 8, '\tre': 5, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn\n': 5, 'n\n\n': 5, 'g B': 1, ' Ba': 1, 'Bac': 1, 'nd\n': 1, 'd\n\t': 1, 'f.i': 2, '.im': 2, 'ima': 4, 'mag': 5, 'age': 5, 'ge=': 2, 'e=T': 1, '=Tk': 2, 'r.P': 1, '.Ph': 1, 'Pho': 1, 'hot': 1, 'oto': 1, 'toI': 1, 'oIm': 1, 'Ima': 1, 'ge(': 3, 'e(f': 1, '(fi': 1, 'fil': 3, 'ile': 2, 'le=': 1, ""e='"": 1, ""='c"": 1, ""'cl"": 1, 'clo': 1, 'loc': 2, 'ock': 1, 'ck.': 1, 'k.g': 1, '.gi': 1, 'gif': 1, ""if'"": 1, ""f')"": 1, ""')\n"": 4, '.ca': 6, 'as.': 5, 's.c': 4, 'e_i': 2, '_im': 1, 'e(1': 1, '(15': 1, '50,': 2, '0,1': 1, ',15': 1, '0, ': 1, ', i': 1, ' im': 1, 'e=s': 2, '=se': 3, 'ge)': 1, 'e)\n': 2, 'g C': 1, 'Can': 2, 'as\n': 1, 's(s': 6, 'as=': 1, 's=T': 1, 'r.C': 1, '.Ca': 1, 'as(': 1, 'lf,': 1, 'f, ': 1, ', b': 1, ' bg': 1, 'bg=': 1, ""g='"": 1, ""='b"": 2, ""'bl"": 1, 'bla': 1, 'lac': 1, ""ck'"": 1, ""k')"": 1, 's.p': 1, '.pa': 1, 'pac': 1, 'ck(': 1, 'k(e': 1, '(ex': 1, 'exp': 1, 'xpa': 1, 'pan': 1, 'nd=': 1, ""d='"": 1, ""='y"": 1, ""'ye"": 1, 'yes': 1, ""es'"": 1, ""s',"": 1, ""',f"": 1, ',fi': 1, 'ill': 2, 'll=': 2, ""l='"": 2, ""'bo"": 1, 'bot': 1, 'oth': 1, ""th'"": 1, ""h')"": 1, 'g M': 2, ' Mo': 1, 'Mov': 1, 'ovi': 1, 'vin': 1, 'g S': 2, 'ks\n': 1, 'f.s': 4, '.st': 6, 'ks=': 1, 's=[': 1, '=[]': 1, '[]\n': 1, ']\n\t': 3, '\t\tf': 2, '\tfo': 2, 'r i': 1, ' i ': 1, 'i i': 2, ' in': 3, 'in ': 4, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 2, 'nge': 1, 'e(3': 1, '(3)': 1, '3):': 1, '\t\t\t': 7, '\tst': 1, 'sto': 2, 'tor': 2, 'ore': 2, 're=': 1, 'e_l': 1, '_li': 1, 'ine': 1, 'ne(': 1, 'e(s': 2, '.x,': 1, 'x, ': 1, ', s': 1, ' se': 1, '.y,': 1, 'y,s': 1, ',se': 2, '.x+': 1, 'x+s': 1, '+se': 4, 'th,': 2, 'h,s': 1, '.y+': 1, 'y+s': 1, 'h,w': 1, ',wi': 1, 'wid': 1, 'idt': 1, 'dth': 1, 'h=2': 1, '=2,': 1, '2, ': 1, ', f': 1, ' fi': 1, ""='r"": 1, ""'re"": 1, ""ed'"": 1, ""d')"": 1, 'ks.': 1, 's.a': 1, '.ap': 3, 'app': 3, 'ppe': 3, 'pen': 3, 'end': 3, 'nd(': 3, 'd(s': 3, '(st': 2, 're)': 1, '# F': 1, 'on ': 2, 'n N': 1, ' Ne': 1, 'Nee': 1, 'eed': 1, 'd R': 1, 'Reg': 1, 'egu': 1, 'gul': 1, 'lar': 1, 'ar ': 1, 'r U': 1, ' Up': 1, 'Upd': 1, 'pda': 5, 'dat': 5, 'te\n': 1, 'e\n\t': 1, 'f u': 1, ' up': 1, 'upd': 4, '_cl': 2, 'ss(': 2, '\t\tn': 2, '\tno': 2, 'now': 6, 'ow=': 2, 'w=t': 1, '=ti': 1, 'me.': 3, 'e.l': 1, '.lo': 1, 'oca': 1, 'cal': 1, 'alt': 1, 'lti': 1, 'me(': 3, 'e()': 2, '\t\tt': 1, '\tt ': 1, 't =': 1, ' = ': 2, '= t': 1, 'e.s': 2, 'str': 3, 'trp': 1, 'rpt': 1, 'pti': 1, 'tr(': 1, 'r(n': 1, '(no': 2, 'ow.': 3, 'w.t': 3, '.tm': 3, 'tm_': 3, 'm_h': 1, '_ho': 1, 'hou': 3, 'our': 3, 'ur)': 1, 'r),': 1, '), ': 1, ', ""': 1, ' ""%': 2, '""%H': 1, '%H""': 1, 'H"")': 1, '"")\n': 1, '\t\th': 1, '\tho': 1, 'ur ': 1, 'r =': 1, '= i': 1, 'nt(': 1, 't(t': 1, '(ti': 1, 'trf': 1, 'rft': 1, 'fti': 1, 'e( ': 1, '( ""': 1, '""%I': 1, '%I""': 1, 'I"",': 1, '"", ': 1, ', t': 2, ' t ': 1, 't )': 1, ' ))': 1, '))*': 1, ')*5': 1, '*5\n': 1, '5\n\t': 1, 'w=(': 1, '=(h': 1, '(ho': 1, 'ur,': 1, 'r,n': 1, ',no': 2, 'm_m': 1, '_mi': 1, 'min': 1, 'in,': 1, 'n,n': 1, 'm_s': 1, '_se': 1, 'sec': 1, 'ec)': 1, 'c)\n': 1, '\t\t#': 1, ' Ch': 1, 'Cha': 1, 'han': 1, 'ngi': 1, 'gin': 1, 'k C': 1, 'es\n': 1, 'r n': 1, ' n,': 1, 'n,i': 1, ',i ': 1, 'n e': 1, ' en': 1, 'enu': 1, 'num': 1, 'ume': 1, 'mer': 1, 'era': 1, 'rat': 1, 'te(': 2, 'e(n': 1, 'ow)': 1, 'w):': 1, '\t\tx': 1, '\tx,': 1, 'x,y': 2, ',y=': 1, 'y=s': 1, '.co': 3, 'coo': 2, 'rds': 2, 'ds(': 2, 'ks[': 2, 's[n': 2, '[n]': 2, 'n])': 1, '])[': 1, ')[0': 1, '[0:': 1, '0:2': 1, ':2]': 1, '2]\n': 1, '\t\tc': 3, '\tcr': 3, 'cr=': 1, 'r=[': 1, '=[x': 1, '[x,': 1, ',y]': 1, 'y]\n': 1, 'cr.': 2, 'r.a': 2, 'th*': 2, 'h*m': 2, '*ma': 2, 'th.': 6, 'h.c': 1, 'cos': 1, 'os(': 1, 's(m': 1, '(ma': 2, 'h.r': 4, '.ra': 4, 'rad': 4, 'adi': 4, 'dia': 4, 'ian': 4, 'ans': 4, 'ns(': 4, 's(i': 2, '(i*': 2, 'i*6': 2, '*6)': 2, '6)-': 2, ')-m': 2, '-ma': 2, 's(9': 2, '(90': 2, '90)': 2, '0))': 2, '))+': 2, ')+s': 2, '.x)': 1, 'x)\n': 1, 'h.s': 1, '.si': 1, 'sin': 1, 'n(m': 1, '.y)': 1, 'y)\n': 1, 'n],': 1, '], ': 1, ' tu': 1, 'tup': 1, 'upl': 1, 'ple': 1, 'le(': 1, 'e(c': 1, '(cr': 1, 'cr)': 1, 'r))': 1, '))\n': 1, '\n\n#': 1, '# M': 1, ' Ma': 2, 'Mai': 2, 'n F': 1, 'n T': 1, 'r\ni': 1, '\nif': 1, 'if ': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '\n\tr': 1, '\tro': 4, 'roo': 4, 'oot': 4, 'ot=': 1, 't=m': 1, '=ma': 1, 'n()': 1, 'n L': 1, ' Lo': 1, 'Loo': 1, 'oop': 1, 'op\n': 1, 'p\n\t': 1, '\n\tw': 1, '\twh': 1, 'whi': 1, 'hil': 1, 'le ': 1, 'e T': 1, 'Tru': 1, 'rue': 1, 'ue:': 1, 'e:\n': 1, 'ot.': 3, 't.u': 3, '.up': 3, '_id': 1, 'idl': 1, 'dle': 1, 'let': 1, 'eta': 1, 'tas': 1, 'ask': 1, 'sks': 1}"
AMAN KHARWAL,BMI.py,"[0.0043, 0.1888, 0.1669, 0.0412, 0.1785, 0.1639, 0.015, 0.0289, 0.2824, 0.0177, 0.1147, 0.0611, 0.1906, 0.0694, 0.1786, 0.0787, 0.0595, 0.1299, 0.1984, 0.1312, 0.2093, 0.2601, 0.0842, 0.2076, 0.1282, 0.1101, 0.0444, 0.1826, 0.0646, 0.1412, 0.0462, 0.1603]","[0.027, 0.0621, 0.1038, 0.0651, 0.0314, 0.1176, 0.1168, 0.1131, 0.0526, 0.0197, 0.0688, 0.0704, 0.083, 0.0847, 0.0088, 0.0073, 0.2513, 0.1572, 0.1354, 0.3853, 0.2993, 0.0823, 0.0769, 0.1222, 0.0316, 0.1248]","[0.0641, 0.0158, 0.0115, 0.0235, 0.013, 0.0571, 0.1296, 0.1829, 0.1057, 0.0601, 0.3428, 0.0153, 0.0146, 0.0643, 0.1836, 0.1059, 0.1513, 0.1234, 0.1759, 0.1362]","[0.1436, 0.0496, 0.0334, 0.2322, 0.0841, 0.064, 0.0017, 0.0807, 0.3487, 0.2225, 0.0665, 0.0076, 0.3039, 0.192, 0.1472, 0.0541, 0.1216, 0.087, 0.0999, 0.0425, 0.1239, 0.342, 0.2095, 0.1615, 0.1019, 0.0805, 0.1057, 0.0123, 0.2131, 0.2235, 0.149]","{'height=float(input(""enter': 1, 'your': 2, 'height': 2, 'in': 2, 'centimeters:': 1, '""))': 2, 'weight=float(input(""enter': 1, 'weight': 1, 'kg:': 1, '=': 1, 'height/100': 1, 'bmi=weight/(height*height)': 1, 'print(""your': 1, 'body': 1, 'mass': 1, 'index': 1, 'is:': 1, '"",bmi)': 1, 'if(bmi>0):': 1, 'if(bmi<=16):': 1, 'print(""you': 5, 'are': 5, 'severely': 2, 'underweight"")': 2, 'elif(bmi<=18.5):': 1, 'elif(bmi<=25):': 1, 'healthy"")': 1, 'elif(bmi<=30):': 1, 'overweight"")': 2, 'else:': 1, 'else:(""enter': 1, 'valid': 1, 'details"")': 1}","{'Hei': 5, 'eig': 13, 'igh': 13, 'ght': 13, 'ht=': 2, 't=f': 2, '=fl': 2, 'flo': 2, 'loa': 2, 'oat': 2, 'at(': 2, 't(i': 2, '(in': 2, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't(""': 8, '(""E': 2, '""En': 2, 'Ent': 2, 'nte': 3, 'ter': 4, 'er ': 3, 'r y': 2, ' yo': 2, 'you': 8, 'our': 3, 'ur ': 3, 'r h': 1, ' he': 1, 'hei': 1, 'ht ': 3, 't i': 2, ' in': 2, 'in ': 2, 'n c': 1, ' ce': 1, 'cen': 1, 'ent': 2, 'nti': 1, 'tim': 1, 'ime': 1, 'met': 1, 'ete': 1, 'ers': 1, 'rs:': 1, 's: ': 2, ': ""': 3, ' "")': 2, '""))': 2, '))\n': 2, ')\nW': 1, '\nWe': 1, 'Wei': 3, 'r W': 1, ' We': 1, 'n K': 1, ' Kg': 1, 'Kg:': 1, 'g: ': 1, ')\nH': 1, '\nHe': 1, 't =': 1, ' = ': 1, '= H': 1, ' He': 2, 'ht/': 2, 't/1': 1, '/10': 1, '100': 1, '00\n': 1, '0\nB': 1, '\nBM': 1, 'BMI': 7, 'MI=': 1, 'I=W': 1, '=We': 1, 't/(': 1, '/(H': 1, '(He': 1, 'ht*': 1, 't*H': 1, '*He': 1, 'ht)': 1, 't)\n': 1, ')\np': 1, '\npr': 1, 'pri': 6, 'rin': 6, 'int': 6, 'nt(': 6, '(""y': 6, '""yo': 6, 'r B': 1, ' Bo': 1, 'Bod': 1, 'ody': 1, 'dy ': 1, 'y M': 1, ' Ma': 1, 'Mas': 1, 'ass': 1, 'ss ': 1, 's I': 1, ' In': 1, 'Ind': 1, 'nde': 3, 'dex': 1, 'ex ': 1, 'x i': 1, ' is': 1, 'is:': 1, ' "",': 1, '"",B': 1, ',BM': 1, 'MI)': 1, 'I)\n': 1, ')\ni': 1, '\nif': 1, 'if(': 5, 'f(B': 5, '(BM': 5, 'MI>': 1, 'I>0': 1, '>0)': 1, '0):': 2, '):\n': 5, ':\n\t': 5, '\n\ti': 1, '\tif': 1, 'MI<': 4, 'I<=': 4, '<=1': 2, '=16': 1, '16)': 1, '6):': 1, '\n\t\t': 4, '\t\tp': 4, '\tpr': 4, 'ou ': 5, 'u a': 5, ' ar': 5, 'are': 5, 're ': 5, 'e s': 2, ' se': 2, 'sev': 2, 'eve': 2, 'ver': 4, 'ere': 2, 'rel': 2, 'ely': 2, 'ly ': 2, 'y u': 1, ' un': 2, 'und': 2, 'der': 2, 'erw': 4, 'rwe': 4, 'wei': 4, 'ht""': 4, 't"")': 4, '"")\n': 6, ')\n\t': 4, '\n\te': 4, '\tel': 4, 'eli': 3, 'lif': 3, '=18': 1, '18.': 1, '8.5': 1, '.5)': 1, '5):': 2, 'e u': 1, '<=2': 1, '=25': 1, '25)': 1, 'e H': 1, 'Hea': 1, 'eal': 1, 'alt': 1, 'lth': 1, 'thy': 1, 'hy""': 1, 'y"")': 1, '<=3': 1, '=30': 1, '30)': 1, 'e o': 1, ' ov': 2, 'ove': 2, 'els': 2, 'lse': 2, 'se:': 2, 'e: ': 1, ': p': 1, ' pr': 1, 'y o': 1, ')\ne': 1, '\nel': 1, 'e:(': 1, ':(""': 1, '(""e': 1, '""en': 1, 'r v': 1, ' va': 1, 'val': 1, 'ali': 1, 'lid': 1, 'id ': 1, 'd d': 1, ' de': 1, 'det': 1, 'eta': 1, 'tai': 1, 'ail': 1, 'ils': 1, 'ls""': 1, 's"")': 1}"
AMAN KHARWAL,calculator.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'from': 5, 'kivy.app': 1, 'import': 5, 'app': 1, 'kivy.uix.button': 1, 'button': 2, 'kivy.uix.boxlayout': 1, 'boxlayout': 1, 'kivy.uix.gridlayout': 1, 'gridlayout': 1, 'kivy.uix.label': 1, 'label': 1, 'class': 1, 'myapp(app):': 1, 'def': 5, 'build(self):': 1, 'root_widget': 2, '=': 11, ""boxlayout(orientation='vertical')"": 1, 'output_label': 1, 'label(size_hint_y': 1, '0.75,': 1, 'font_size=50)': 1, 'button_symbols': 1, ""('1',"": 1, ""'2',"": 1, ""'3',"": 1, ""'+',"": 1, ""'4',"": 1, ""'5',"": 1, ""'6',"": 1, ""'-',"": 1, ""'7',"": 1, ""'8',"": 1, ""'9',"": 1, ""'.',"": 1, ""'0',"": 1, ""'*',"": 1, ""'/',"": 1, ""'=')"": 1, 'button_grid': 1, 'gridlayout(cols=4,': 1, 'size_hint_y=2)': 1, 'for': 2, 'symbol': 1, 'in': 2, 'button_symbols:': 1, 'button_grid.add_widget(button(text=symbol))': 1, 'clear_button': 1, 'button(text': 1, ""'clear',"": 1, 'size_hint_y=none,': 1, 'height=100)': 1, 'print_button_text(instance):': 1, 'output_label.text': 4, '+=': 1, 'instance.text': 1, 'button_grid.children[1:]:': 1, 'button.bind(on_press=print_button_text)': 1, 'resize_label_text(label,': 1, 'new_height):': 1, 'label.fontsize': 1, '0.5*label.height': 1, 'output_label.bind(height=resize_label_text)': 1, 'evaluate_result(instance):': 1, 'try:': 1, 'str(eval(output_label.text))': 1, 'except': 1, 'syntaxerror:': 1, ""'python"": 1, 'syntax': 1, ""error!'"": 1, 'button_grid.children[0].bind(on_press=evaluate_result)': 1, 'clear_label(instance):': 1, '""': 2, 'clear_button.bind(on_press=clear_label)': 1, 'root_widget.add_widget(output_label)': 1, 'root_widget.add_widget(button_grid)': 1, 'root_widget.add_widget(clear_button)': 1, 'return': 1, 'myapp().run()': 1}","{'fro': 5, 'rom': 5, 'om ': 5, 'm k': 5, ' ki': 5, 'kiv': 5, 'ivy': 5, 'vy.': 5, 'y.a': 1, '.ap': 1, 'app': 1, 'pp ': 1, 'p i': 1, ' im': 5, 'imp': 5, 'mpo': 5, 'por': 5, 'ort': 5, 'rt ': 5, 't A': 1, ' Ap': 1, 'App': 4, 'pp\n': 1, 'p\nf': 1, '\nfr': 4, 'y.u': 4, '.ui': 4, 'uix': 4, 'ix.': 4, 'x.b': 2, '.bu': 1, 'but': 15, 'utt': 18, 'tto': 18, 'ton': 18, 'on ': 4, 'n i': 2, 't B': 2, ' Bu': 2, 'But': 3, 'on\n': 1, 'n\nf': 1, '.bo': 1, 'box': 1, 'oxl': 1, 'xla': 1, 'lay': 2, 'ayo': 6, 'you': 6, 'out': 14, 'ut ': 2, 't i': 2, ' Bo': 2, 'Box': 2, 'oxL': 2, 'xLa': 2, 'Lay': 4, 'ut\n': 2, 't\nf': 2, 'x.g': 1, '.gr': 1, 'gri': 6, 'rid': 8, 'idl': 1, 'dla': 1, 't G': 1, ' Gr': 2, 'Gri': 2, 'idL': 2, 'dLa': 2, 'x.l': 1, '.la': 1, 'lab': 16, 'abe': 18, 'bel': 18, 'el ': 2, 'l i': 2, 't L': 1, ' La': 2, 'Lab': 2, 'el\n': 1, 'l\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's m': 1, ' my': 1, 'myA': 2, 'yAp': 2, 'pp(': 2, 'p(A': 1, '(Ap': 1, 'pp)': 1, 'p):': 1, '):\n': 6, ':\n ': 10, '\n  ': 31, '   ': 280, '  d': 5, ' de': 5, 'def': 5, 'ef ': 5, 'f b': 1, ' bu': 9, 'bui': 1, 'uil': 1, 'ild': 3, 'ld(': 1, 'd(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf)': 1, 'f):': 1, '  r': 5, ' ro': 5, 'roo': 5, 'oot': 5, 'ot_': 5, 't_w': 5, '_wi': 9, 'wid': 9, 'idg': 9, 'dge': 9, 'get': 9, 'et ': 1, 't =': 5, ' = ': 11, '= B': 2, 'ut(': 2, 't(o': 2, '(or': 1, 'ori': 1, 'rie': 1, 'ien': 1, 'ent': 1, 'nta': 3, 'tat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'on=': 1, ""n='"": 1, ""='v"": 1, ""'ve"": 1, 'ver': 1, 'ert': 1, 'rti': 1, 'tic': 1, 'ica': 1, 'cal': 1, ""al'"": 1, ""l')"": 1, ""')\n"": 2, ')\n ': 10, '  o': 6, ' ou': 6, 'utp': 8, 'tpu': 8, 'put': 8, 'ut_': 8, 't_l': 8, '_la': 12, 'l =': 1, '= L': 1, 'el(': 2, 'l(s': 1, '(si': 1, 'siz': 7, 'ize': 7, 'ze_': 5, 'e_h': 3, '_hi': 3, 'hin': 3, 'int': 5, 'nt_': 6, 't_y': 3, '_y ': 1, 'y =': 1, '= 0': 2, ' 0.': 2, '0.7': 1, '.75': 1, '75,': 1, '5, ': 1, ', f': 1, ' fo': 3, 'fon': 2, 'ont': 2, 't_s': 1, '_si': 1, 'ze=': 1, 'e=5': 1, '=50': 1, '50)': 1, '0)\n': 2, '  b': 5, 'on_': 12, 'n_s': 2, '_sy': 2, 'sym': 4, 'ymb': 4, 'mbo': 4, 'bol': 4, 'ols': 3, 'ls ': 1, 's =': 1, '= (': 1, "" ('"": 1, ""('1"": 1, ""'1'"": 1, ""1',"": 1, ""', "": 13, "", '"": 12, "" '2"": 1, ""'2'"": 1, ""2',"": 1, "" '3"": 1, ""'3'"": 1, ""3',"": 1, "" '+"": 1, ""'+'"": 1, ""+',"": 1, ""',\n"": 3, ',\n ': 3, ""  '"": 3, "" '4"": 1, ""'4'"": 1, ""4',"": 1, "" '5"": 1, ""'5'"": 1, ""5',"": 1, "" '6"": 1, ""'6'"": 1, ""6',"": 1, "" '-"": 1, ""'-'"": 1, ""-',"": 1, "" '7"": 1, ""'7'"": 1, ""7',"": 1, "" '8"": 1, ""'8'"": 1, ""8',"": 1, "" '9"": 1, ""'9'"": 1, ""9',"": 1, "" '."": 1, ""'.'"": 1, "".',"": 1, "" '0"": 1, ""'0'"": 1, ""0',"": 1, "" '*"": 1, ""'*'"": 1, ""*',"": 1, "" '/"": 1, ""'/'"": 1, ""/',"": 1, "" '="": 1, ""'='"": 1, ""=')"": 1, 'n_g': 5, '_gr': 5, 'id ': 1, 'd =': 1, '= G': 1, 't(c': 2, '(co': 1, 'col': 1, 'ls=': 1, 's=4': 1, '=4,': 1, '4, ': 1, ', s': 2, ' si': 2, '_y=': 2, 'y=2': 1, '=2)': 1, '2)\n': 1, '  f': 2, 'for': 2, 'or ': 2, 'r s': 1, ' sy': 1, 'ol ': 1, ' in': 3, 'in ': 2, 'n b': 2, 'ls:': 1, 's:\n': 1, 'id.': 3, 'd.a': 1, '.ad': 4, 'add': 4, 'dd_': 4, 'd_w': 4, 'et(': 4, 't(B': 1, '(Bu': 1, 'on(': 2, 'n(t': 2, '(te': 2, 'tex': 12, 'ext': 12, 'xt=': 1, 't=s': 1, '=sy': 1, 'ol)': 1, 'l))': 1, '))\n': 2, ')\n\n': 4, '\n\n ': 4, '  c': 2, ' cl': 3, 'cle': 5, 'lea': 6, 'ear': 6, 'ar_': 5, 'r_b': 3, '_bu': 5, 'n =': 1, 'xt ': 5, ""= '"": 2, "" 'C"": 1, ""'Cl"": 1, 'Cle': 1, ""ar'"": 1, ""r',"": 1, 'y=N': 1, '=No': 1, 'Non': 1, 'one': 1, 'ne,': 1, 'e, ': 1, ', h': 1, ' he': 1, 'hei': 4, 'eig': 4, 'igh': 4, 'ght': 4, 'ht=': 2, 't=1': 1, '=10': 1, '100': 1, '00)': 1, 'f p': 1, ' pr': 1, 'pri': 2, 'rin': 2, 't_b': 2, 'n_t': 2, '_te': 4, 'xt(': 2, 't(i': 2, '(in': 3, 'ins': 4, 'nst': 4, 'sta': 4, 'tan': 4, 'anc': 4, 'nce': 4, 'ce)': 3, 'e):': 3, 'el.': 8, 'l.t': 5, '.te': 6, 't +': 1, ' +=': 1, '+= ': 1, '= i': 1, 'ce.': 1, 'e.t': 1, 'xt\n': 1, 't\n ': 2, 'r b': 1, 'd.c': 2, '.ch': 2, 'chi': 2, 'hil': 2, 'ldr': 2, 'dre': 2, 'ren': 2, 'en[': 2, 'n[1': 1, '[1:': 1, '1:]': 1, ':]:': 1, ']:\n': 1, 'on.': 2, 'n.b': 2, '.bi': 4, 'bin': 4, 'ind': 4, 'nd(': 4, 'd(o': 3, '(on': 3, 'n_p': 3, '_pr': 3, 'pre': 3, 'res': 7, 'ess': 3, 'ss=': 3, 's=p': 1, '=pr': 1, 'xt)': 3, 't)\n': 3, 'f r': 1, ' re': 2, 'esi': 2, 'e_l': 2, 'el_': 2, 'l_t': 2, 't(l': 1, '(la': 1, 'el,': 1, 'l, ': 1, ', n': 1, ' ne': 1, 'new': 1, 'ew_': 1, 'w_h': 1, '_he': 1, 'ht)': 1, 't):': 1, '  l': 1, ' la': 1, 'l.f': 1, '.fo': 1, 'nts': 1, 'tsi': 1, 'ze ': 1, 'e =': 1, '0.5': 1, '.5*': 1, '5*l': 1, '*la': 1, 'l.h': 1, '.he': 1, 'ht\n': 1, 'l.b': 1, 'd(h': 1, '(he': 1, 't=r': 1, '=re': 1, 'f e': 1, ' ev': 1, 'eva': 3, 'val': 3, 'alu': 2, 'lua': 2, 'uat': 2, 'ate': 2, 'te_': 2, 'e_r': 2, '_re': 2, 'esu': 2, 'sul': 2, 'ult': 2, 'lt(': 1, '  t': 1, ' tr': 1, 'try': 1, 'ry:': 1, 'y:\n': 1, '= s': 1, ' st': 1, 'str': 1, 'tr(': 1, 'r(e': 1, '(ev': 1, 'al(': 1, 'l(o': 1, '(ou': 2, 't))': 1, '  e': 1, ' ex': 1, 'exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pt ': 1, 't S': 1, ' Sy': 2, 'Syn': 2, 'ynt': 2, 'tax': 2, 'axE': 1, 'xEr': 1, 'Err': 1, 'rro': 2, 'ror': 2, 'or:': 1, 'r:\n': 1, "" 'P"": 1, ""'Py"": 1, 'Pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'n S': 1, 'ax ': 1, 'x e': 1, ' er': 1, 'err': 1, 'or!': 1, ""r!'"": 1, ""!'\n"": 1, ""'\n "": 1, 'n[0': 1, '[0]': 1, '0].': 1, '].b': 1, 's=e': 1, '=ev': 1, 'lt)': 1, 'f c': 1, 'r_l': 2, 'l(i': 1, '= ""': 1, ' "" ': 1, '"" ""': 1, ' ""\n': 1, '""\n ': 1, 's=c': 1, '=cl': 1, 'el)': 2, 'l)\n': 2, 'et.': 3, 't.a': 3, 't(b': 1, '(bu': 1, 'id)': 1, 'd)\n': 1, '(cl': 1, 'on)': 1, 'n)\n': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n r': 1, 'et\n': 1, 't\nm': 1, '\nmy': 1, 'p()': 1, '().': 1, ').r': 1, '.ru': 1, 'run': 1, 'un(': 1, 'n()': 1, '()\n': 1}"
AMAN KHARWAL,chess.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 3, 'matplotlib.pyplot': 1, 'as': 2, 'plt': 1, 'numpy': 1, 'np': 1, 'from': 1, 'matplotlib.colors': 1, 'lognorm': 1, 'dx,': 1, 'dy': 1, '=': 7, '0.015,': 1, '0.05': 1, 'x': 3, 'np.arange(-4.0,': 2, '4.0,': 2, 'dx)': 1, 'y': 4, 'dy)': 1, 'x,': 1, 'np.meshgrid(x,': 1, 'y)': 2, 'extent': 1, 'np.min(x),': 1, 'np.max(x),': 1, 'np.min(y),': 1, 'np.max(y)': 1, 'z1': 1, 'np.add.outer(range(8),': 1, 'range(8))': 1, '%': 1, '2': 3, 'plt.imshow(z1,': 1, 'cmap=""binary_r"",': 1, 'interpolation=""nearest"",': 1, 'extent=extent,': 1, 'alpha=1)': 1, 'def': 1, 'chess(x,': 2, 'y):': 1, 'return': 1, '(1': 1, '-': 1, '/': 1, '+': 3, '**': 4, '5': 1, '6)': 1, '*': 1, 'np.exp(-(x': 1, '2))': 1, 'z2': 1, 'plt.imshow(z2,': 1, 'alpha=0.7,': 1, 'interpolation=""bilinear"",': 1, 'extent=extent)': 1, 'plt.title(""chess': 1, 'board': 1, 'with': 1, 'python"")': 1, 'plt.show()': 1}","{'imp': 3, 'mpo': 3, 'por': 3, 'ort': 3, 'rt ': 3, 't m': 1, ' ma': 2, 'mat': 2, 'atp': 2, 'tpl': 2, 'plo': 3, 'lot': 3, 'otl': 2, 'tli': 2, 'lib': 2, 'ib.': 2, 'b.p': 1, '.py': 1, 'pyp': 1, 'ypl': 1, 'ot ': 1, 't a': 1, ' as': 2, 'as ': 2, 's p': 1, ' pl': 1, 'plt': 5, 'lt\n': 1, 't\ni': 1, '\nim': 1, 't n': 1, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, 's n': 1, ' np': 10, 'np\n': 1, 'p\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm m': 1, 'b.c': 1, '.co': 1, 'col': 1, 'olo': 1, 'lor': 1, 'ors': 1, 'rs ': 1, 's i': 1, ' im': 1, 't L': 1, ' Lo': 1, 'Log': 1, 'ogN': 1, 'gNo': 1, 'Nor': 1, 'orm': 1, 'rm\n': 1, 'm\n\n': 1, '\n\nd': 2, '\ndx': 1, 'dx,': 1, 'x, ': 3, ', d': 3, ' dy': 2, 'dy ': 1, 'y =': 2, ' = ': 7, '= 0': 1, ' 0.': 2, '0.0': 2, '.01': 1, '015': 1, '15,': 1, '5, ': 1, ', 0': 1, '.05': 1, '05\n': 1, '5\nx': 1, '\nx ': 1, 'x =': 1, '= n': 5, 'np.': 9, 'p.a': 3, '.ar': 2, 'ara': 2, 'ran': 4, 'ang': 4, 'nge': 4, 'ge(': 4, 'e(-': 2, '(-4': 2, '-4.': 2, '4.0': 4, '.0,': 4, '0, ': 4, ', 4': 2, ' 4.': 2, ' dx': 1, 'dx)': 1, 'x)\n': 1, ')\ny': 1, '\ny ': 1, 'dy)': 1, 'y)\n': 3, ')\nX': 1, '\nX,': 1, 'X, ': 2, ', Y': 2, ' Y ': 1, 'Y =': 1, 'p.m': 5, '.me': 1, 'mes': 1, 'esh': 1, 'shg': 1, 'hgr': 1, 'gri': 1, 'rid': 1, 'id(': 1, 'd(x': 1, '(x,': 2, ', y': 2, ' y)': 2, ')\ne': 1, '\nex': 1, 'ext': 5, 'xte': 5, 'ten': 5, 'ent': 5, 'nt ': 1, 't =': 1, '.mi': 2, 'min': 2, 'in(': 2, 'n(x': 1, '(x)': 2, 'x),': 2, '), ': 4, ', n': 3, '.ma': 2, 'max': 2, 'ax(': 2, 'x(x': 1, 'n(y': 1, '(y)': 2, 'y),': 1, 'x(y': 1, ')\nz': 2, '\nz1': 1, 'z1 ': 1, '1 =': 1, '.ad': 1, 'add': 1, 'dd.': 1, 'd.o': 1, '.ou': 1, 'out': 1, 'ute': 1, 'ter': 3, 'er(': 1, 'r(r': 1, '(ra': 1, 'e(8': 2, '(8)': 2, '8),': 1, ', r': 1, ' ra': 1, '8))': 1, ')) ': 1, ') %': 1, ' % ': 1, '% 2': 1, ' 2\n': 1, '2\np': 1, '\npl': 4, 'lt.': 4, 't.i': 2, '.im': 2, 'ims': 2, 'msh': 2, 'sho': 3, 'how': 3, 'ow(': 3, 'w(z': 2, '(z1': 1, 'z1,': 1, '1, ': 1, ', c': 1, ' cm': 1, 'cma': 1, 'map': 1, 'ap=': 1, 'p=""': 1, '=""b': 2, '""bi': 2, 'bin': 1, 'ina': 1, 'nar': 1, 'ary': 1, 'ry_': 1, 'y_r': 1, '_r""': 1, 'r"",': 2, '"", ': 3, ', i': 2, ' in': 2, 'int': 2, 'nte': 2, 'erp': 2, 'rpo': 2, 'pol': 2, 'ola': 2, 'lat': 2, 'ati': 2, 'tio': 2, 'ion': 2, 'on=': 2, 'n=""': 2, '=""n': 1, '""ne': 1, 'nea': 2, 'ear': 2, 'are': 1, 'res': 1, 'est': 1, 'st""': 1, 't"",': 1, ', e': 2, ' ex': 2, 'nt=': 2, 't=e': 2, '=ex': 2, 'nt,': 1, 't, ': 1, ', a': 2, ' al': 2, 'alp': 2, 'lph': 2, 'pha': 2, 'ha=': 2, 'a=1': 1, '=1)': 1, '1)\n': 1, ')\n\n': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f c': 1, ' ch': 2, 'che': 2, 'hes': 3, 'ess': 3, 'ss(': 2, 's(x': 1, 'y):': 1, '):\n': 1, ':\n ': 1, '\n  ': 1, '   ': 2, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n (': 1, ' (1': 1, '(1 ': 1, '1 -': 1, ' - ': 1, '- x': 1, ' x ': 2, 'x /': 1, ' / ': 1, '/ 2': 1, ' 2 ': 2, '2 +': 2, ' + ': 3, '+ x': 1, 'x *': 2, ' **': 4, '** ': 4, '* 5': 1, ' 5 ': 1, '5 +': 1, '+ y': 2, ' y ': 2, 'y *': 2, '* 6': 1, ' 6)': 1, '6) ': 1, ') *': 1, ' * ': 1, '* n': 1, 'p.e': 1, '.ex': 1, 'exp': 1, 'xp(': 1, 'p(-': 1, '(-(': 1, '-(x': 1, '(x ': 1, '* 2': 2, ' 2)': 1, '2))': 1, '))\n': 1, '\nz2': 1, 'z2 ': 1, '2 =': 1, '= c': 1, 's(X': 1, '(X,': 1, ' Y)': 1, 'Y)\n': 1, ')\np': 3, '(z2': 1, 'z2,': 1, '2, ': 1, 'a=0': 1, '=0.': 1, '0.7': 1, '.7,': 1, '7, ': 1, 'bil': 1, 'ili': 1, 'lin': 1, 'ine': 1, 'ar""': 1, 'nt)': 1, 't)\n': 1, 't.t': 1, '.ti': 1, 'tit': 1, 'itl': 1, 'tle': 1, 'le(': 1, 'e(""': 1, '(""C': 1, '""Ch': 1, 'Che': 1, 'ss ': 1, 's B': 1, ' Bo': 1, 'Boa': 1, 'oar': 1, 'ard': 1, 'rd ': 1, 'd w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'th ': 1, 'h P': 1, ' Py': 1, 'Pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on""': 1, 'n"")': 1, '"")\n': 1, 't.s': 1, '.sh': 1, 'w()': 1, '()\n': 1}"
AMAN KHARWAL,clock.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'from': 1, 'tkinter': 1, 'import': 2, 'label,': 1, 'tk': 1, 'time': 1, 'app_window': 1, '=': 5, 'tk()': 1, 'app_window.title(""digital': 1, 'clock"")': 1, 'app_window.geometry(""420x150"")': 1, 'app_window.resizable(1,1)': 1, 'text_font=': 1, '(""boulder"",': 1, '68,': 1, ""'bold')"": 1, 'background': 1, '""#f2e750""': 1, 'foreground=': 1, '""#363529""': 1, 'border_width': 1, '25': 1, 'label': 1, 'label(app_window,': 1, 'font=text_font,': 1, 'bg=background,': 1, 'fg=foreground,': 1, 'bd=border_width)': 1, 'label.grid(row=0,': 1, 'column=1)': 1, 'def': 1, 'digital_clock():': 1, 'time_live': 1, 'time.strftime(""%h:%m:%s"")': 1, 'label.config(text=time_live)': 1, 'label.after(200,': 1, 'digital_clock)': 1, 'digital_clock()': 1, 'app_window.mainloop()': 1}","{'\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm t': 1, ' tk': 1, 'tki': 1, 'kin': 1, 'int': 1, 'nte': 1, 'ter': 2, 'er ': 1, 'r i': 1, ' im': 1, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't L': 1, ' La': 2, 'Lab': 2, 'abe': 6, 'bel': 6, 'el,': 1, 'l, ': 1, ', T': 1, ' Tk': 2, 'Tk ': 1, 'k \n': 1, ' \ni': 1, '\nim': 1, 't t': 1, ' ti': 3, 'tim': 5, 'ime': 5, 'me\n': 1, 'e\na': 1, '\nap': 5, 'app': 6, 'pp_': 6, 'p_w': 6, '_wi': 8, 'win': 6, 'ind': 6, 'ndo': 6, 'dow': 6, 'ow ': 1, 'w =': 1, ' = ': 5, '= T': 1, 'Tk(': 1, 'k()': 3, '() ': 1, ') \n': 5, ' \na': 3, 'ow.': 4, 'w.t': 1, '.ti': 1, 'tit': 1, 'itl': 1, 'tle': 1, 'le(': 2, 'e(""': 2, '(""D': 1, '""Di': 1, 'Dig': 1, 'igi': 4, 'git': 4, 'ita': 4, 'tal': 4, 'al ': 1, 'l C': 1, ' Cl': 1, 'Clo': 1, 'loc': 4, 'ock': 4, 'ck""': 1, 'k"")': 1, '"") ': 2, 'w.g': 1, '.ge': 1, 'geo': 1, 'eom': 1, 'ome': 1, 'met': 1, 'etr': 1, 'try': 1, 'ry(': 1, 'y(""': 1, '(""4': 1, '""42': 1, '420': 1, '20x': 1, '0x1': 1, 'x15': 1, '150': 1, '50""': 2, '0"")': 1, 'w.r': 1, '.re': 1, 'res': 1, 'esi': 1, 'siz': 1, 'iza': 1, 'zab': 1, 'abl': 1, 'ble': 1, 'e(1': 1, '(1,': 1, '1,1': 1, ',1)': 1, '1)\n': 2, ')\n\n': 3, '\n\nt': 1, '\nte': 1, 'tex': 3, 'ext': 3, 'xt_': 2, 't_f': 2, '_fo': 2, 'fon': 3, 'ont': 3, 'nt=': 2, 't= ': 1, '= (': 1, ' (""': 1, '(""B': 1, '""Bo': 1, 'Bou': 1, 'oul': 1, 'uld': 1, 'lde': 1, 'der': 3, 'er""': 1, 'r"",': 1, '"", ': 1, ', 6': 1, ' 68': 1, '68,': 1, '8, ': 1, "", '"": 1, "" 'b"": 1, ""'bo"": 1, 'bol': 1, 'old': 1, ""ld'"": 1, ""d')"": 1, ""')\n"": 1, ')\nb': 1, '\nba': 1, 'bac': 2, 'ack': 2, 'ckg': 2, 'kgr': 2, 'gro': 4, 'rou': 4, 'oun': 4, 'und': 4, 'nd ': 1, 'd =': 1, '= ""': 2, ' ""#': 2, '""#f': 1, '#f2': 1, 'f2e': 1, '2e7': 1, 'e75': 1, '750': 1, '0""\n': 1, '""\nf': 1, '\nfo': 1, 'for': 2, 'ore': 2, 'reg': 2, 'egr': 2, 'nd=': 1, 'd= ': 1, '""#3': 1, '#36': 1, '363': 1, '635': 1, '352': 1, '529': 1, '29""': 1, '9""\n': 1, '""\nb': 1, '\nbo': 1, 'bor': 2, 'ord': 2, 'rde': 2, 'er_': 2, 'r_w': 2, 'wid': 2, 'idt': 2, 'dth': 2, 'th ': 1, 'h =': 1, '= 2': 1, ' 25': 1, '25\n': 1, '5\n\n': 1, '\n\nl': 1, '\nla': 2, 'lab': 4, 'el ': 1, 'l =': 1, '= L': 1, 'el(': 1, 'l(a': 1, '(ap': 1, 'ow,': 1, 'w, ': 1, ', f': 2, ' fo': 1, 't=t': 2, '=te': 1, 'nt,': 1, 't, ': 1, ', b': 2, ' bg': 1, 'bg=': 1, 'g=b': 1, '=ba': 1, 'nd,': 2, 'd, ': 2, ' fg': 1, 'fg=': 1, 'g=f': 1, '=fo': 1, ' bd': 1, 'bd=': 1, 'd=b': 1, '=bo': 1, 'th)': 1, 'h) ': 1, ' \nl': 1, 'el.': 3, 'l.g': 1, '.gr': 1, 'gri': 1, 'rid': 1, 'id(': 1, 'd(r': 1, '(ro': 1, 'row': 1, 'ow=': 1, 'w=0': 1, '=0,': 1, '0, ': 2, ', c': 1, ' co': 1, 'col': 1, 'olu': 1, 'lum': 1, 'umn': 1, 'mn=': 1, 'n=1': 1, '=1)': 1, '\n\nd': 2, '\nde': 1, 'def': 1, 'ef ': 1, 'f d': 1, ' di': 2, 'dig': 3, 'al_': 3, 'l_c': 3, '_cl': 3, 'clo': 3, 'ck(': 2, '():': 1, '): ': 1, ': \n': 1, ' \n ': 2, '\n  ': 3, '   ': 3, '  t': 1, 'me_': 2, 'e_l': 2, '_li': 2, 'liv': 2, 'ive': 2, 've ': 1, 'e =': 1, '= t': 1, 'me.': 1, 'e.s': 1, '.st': 1, 'str': 1, 'trf': 1, 'rft': 1, 'fti': 1, 'me(': 1, '(""%': 1, '""%H': 1, '%H:': 1, 'H:%': 1, ':%M': 1, '%M:': 1, 'M:%': 1, ':%S': 1, '%S""': 1, 'S"")': 1, '"")\n': 1, ')\n ': 1, '  l': 2, ' la': 2, 'l.c': 1, '.co': 1, 'con': 1, 'onf': 1, 'nfi': 1, 'fig': 1, 'ig(': 1, 'g(t': 1, '(te': 1, 'xt=': 1, '=ti': 1, 've)': 1, 'e) ': 1, 'l.a': 1, '.af': 1, 'aft': 1, 'fte': 1, 'er(': 1, 'r(2': 1, '(20': 1, '200': 1, '00,': 1, ', d': 1, 'ck)': 1, 'k)\n': 1, '\ndi': 1, '()\n': 2, ')\na': 1, 'w.m': 1, '.ma': 1, 'mai': 1, 'ain': 1, 'inl': 1, 'nlo': 1, 'loo': 1, 'oop': 1, 'op(': 1, 'p()': 1}"
AMAN KHARWAL,dice.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#importing': 1, 'module': 1, 'for': 1, 'random': 4, 'number': 1, 'generation': 1, 'import': 1, '#range': 1, 'of': 2, 'the': 6, 'values': 2, 'a': 1, 'dice': 2, 'min_val': 1, '=': 4, '1': 3, 'max_val': 1, '6': 3, '#to': 1, 'loop': 2, 'rolling': 1, 'through': 1, 'user': 2, 'input': 2, 'roll_again': 4, '""yes""': 2, '#loop': 1, 'while': 1, '==': 2, 'or': 2, '""y"":': 1, 'print(""rolling': 1, 'dices..."")': 1, 'print(""the': 1, 'are': 1, ':"")': 1, '#generating': 2, 'and': 2, 'printing': 2, '1st': 1, 'integer': 2, 'from': 2, 'to': 3, 'print(random.randint(min_val,': 2, 'max_val))': 2, '2nd': 1, '#asking': 1, 'roll': 1, 'again.': 1, 'any': 1, 'other': 1, 'than': 1, 'yes': 1, 'y': 1, 'will': 1, 'terminate': 1, 'input(""roll': 1, 'dices': 1, 'again?"")': 1}","{'#im': 1, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rti': 1, 'tin': 5, 'ing': 8, 'ng ': 8, 'g m': 1, ' mo': 1, 'mod': 1, 'odu': 1, 'dul': 1, 'ule': 1, 'le ': 2, 'e f': 1, ' fo': 1, 'for': 1, 'or ': 3, 'r r': 2, ' ra': 4, 'ran': 9, 'and': 10, 'ndo': 6, 'dom': 6, 'om ': 5, 'm n': 1, ' nu': 1, 'num': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'er ': 6, 'r g': 1, ' ge': 1, 'gen': 3, 'ene': 3, 'ner': 3, 'era': 3, 'rat': 3, 'ati': 3, 'tio': 1, 'ion': 1, 'on\n': 1, 'n\ni': 1, '\nim': 1, 'rt ': 1, 't r': 2, 'om\n': 1, 'm\n\n': 1, '\n\n#': 3, '\n#r': 1, '#ra': 1, 'ang': 1, 'nge': 1, 'ge ': 1, 'e o': 1, ' of': 2, 'of ': 2, 'f t': 1, ' th': 7, 'the': 6, 'he ': 7, 'e v': 1, ' va': 1, 'val': 7, 'alu': 2, 'lue': 2, 'ues': 2, 'es ': 4, 's o': 2, 'f a': 1, ' a ': 1, 'a d': 1, ' di': 2, 'dic': 2, 'ice': 4, 'ce\n': 1, 'e\nm': 1, '\nmi': 1, 'min': 4, 'in_': 3, 'n_v': 3, '_va': 6, 'al ': 2, 'l =': 2, ' = ': 4, '= 1': 1, ' 1\n': 1, '1\nm': 1, '\nma': 1, 'max': 3, 'ax_': 3, 'x_v': 3, '= 6': 1, ' 6\n': 3, '6\n\n': 1, '\n#t': 1, '#to': 1, 'to ': 4, 'o l': 1, ' lo': 2, 'loo': 3, 'oop': 3, 'op ': 1, 'p t': 1, 'e r': 2, ' ro': 5, 'rol': 6, 'oll': 8, 'lli': 2, 'lin': 2, 'g t': 1, 'thr': 1, 'hro': 1, 'rou': 1, 'oug': 1, 'ugh': 1, 'gh ': 1, 'h u': 1, ' us': 2, 'use': 2, 'ser': 2, 'r i': 1, ' in': 5, 'inp': 3, 'npu': 3, 'put': 3, 'ut\n': 1, 't\nr': 1, '\nro': 1, 'll_': 4, 'l_a': 4, '_ag': 4, 'aga': 5, 'gai': 6, 'ain': 6, 'in ': 4, 'n =': 4, '= ""': 3, ' ""y': 3, '""ye': 2, 'yes': 3, 'es""': 2, 's""\n': 1, '""\n\n': 1, '\n#l': 1, '#lo': 1, 'op\n': 2, 'p\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'ile': 1, ' ==': 2, '== ': 2, 's"" ': 1, '"" o': 1, ' or': 2, '""y""': 1, 'y"":': 1, '"":\n': 1, ':\n ': 1, '\n  ': 11, '   ': 22, '  p': 4, ' pr': 6, 'pri': 6, 'rin': 6, 'int': 10, 'nt(': 6, 't(""': 3, '(""R': 2, '""Ro': 2, 'Rol': 2, 'g T': 1, ' Th': 1, 'The': 2, 'e D': 2, ' Di': 2, 'Dic': 2, 'ces': 2, 'es.': 1, 's..': 1, '...': 1, '..""': 1, '."")': 1, '"")\n': 3, ')\n ': 4, '(""T': 1, '""Th': 1, 'e V': 1, ' Va': 1, 'Val': 1, 's a': 1, ' ar': 1, 'are': 1, 're ': 1, 'e :': 1, ' :""': 1, ':"")': 1, '  \n': 3, ' \n ': 3, '  #': 3, ' #g': 2, '#ge': 2, 'g a': 2, ' an': 2, 'nd ': 3, 'd p': 2, 'nti': 2, 'g 1': 1, ' 1s': 1, '1st': 1, 'st ': 1, 'm i': 2, 'nte': 2, 'teg': 2, 'ege': 2, 'ger': 2, 'r f': 2, ' fr': 2, 'fro': 2, 'rom': 2, 'm 1': 2, ' 1 ': 2, '1 t': 2, ' to': 3, 'o 6': 2, '6\n ': 2, 't(r': 2, '(ra': 2, 'om.': 2, 'm.r': 2, '.ra': 2, 'ndi': 2, 'din': 2, 't(m': 2, '(mi': 2, 'al,': 2, 'l, ': 2, ', m': 2, ' ma': 2, 'al)': 2, 'l))': 2, '))\n': 2, 'g 2': 1, ' 2n': 1, '2nd': 1, 'd r': 1, ' #a': 1, '#as': 1, 'ask': 1, 'ski': 1, 'kin': 1, 'g u': 1, 'r t': 2, 'o r': 1, 'll ': 3, 'l t': 3, 'e d': 1, 'ce ': 1, 'e a': 1, ' ag': 1, 'in.': 1, 'n. ': 1, '. A': 1, ' An': 1, 'Any': 1, 'ny ': 1, 'y i': 1, 'ut ': 1, 't o': 1, ' ot': 1, 'oth': 1, 'her': 1, 'tha': 1, 'han': 1, 'an ': 1, 'n y': 1, ' ye': 1, 'r y': 1, ' y ': 1, 'y w': 1, ' wi': 1, 'wil': 1, 'ill': 1, ' te': 1, 'ter': 1, 'erm': 1, 'rmi': 1, 'ina': 1, 'nat': 1, 'ate': 1, 'te ': 1, 'e t': 1, 'e l': 1, 'p\n ': 1, '  r': 1, '= i': 1, 'ut(': 1, 's A': 1, ' Ag': 1, 'Aga': 1, 'in?': 1, 'n?""': 1, '?"")': 1}"
AMAN KHARWAL,fidget spinner.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'from': 1, 'turtle': 1, 'import': 1, '*': 1, 'state': 1, '=': 2, ""{'turn':"": 1, '0}': 1, 'def': 3, 'spinner():': 1, 'clear()': 1, 'angle': 1, ""state['turn']/10"": 1, 'right(angle)': 1, 'forward(100)': 3, 'dot(120,': 3, ""'red')"": 1, 'back(100)': 3, 'right(120)': 3, ""'green')"": 1, ""'blue')"": 1, 'update()': 1, 'animate():': 1, 'if': 1, ""state['turn']>0:"": 1, ""state['turn']-=1"": 1, 'spinner()': 1, 'ontimer(animate,': 1, '20)': 1, 'flick():': 1, ""state['turn']+=10"": 1, 'setup(420,': 1, '420,': 1, '370,': 1, '0)': 1, 'hideturtle()': 1, 'tracer(false)': 1, 'width(20)': 1, 'onkey(flick,': 1, ""'space')"": 1, 'listen()': 1, 'animate()': 1, 'done()': 1}","{'fro': 1, 'rom': 1, 'om ': 1, 'm t': 1, ' tu': 1, 'tur': 7, 'urt': 2, 'rtl': 2, 'tle': 2, 'le ': 2, 'e i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't *': 1, ' *\n': 1, '*\ns': 1, '\nst': 1, 'sta': 5, 'tat': 5, 'ate': 9, 'te ': 1, 'e =': 2, ' = ': 2, '= {': 1, "" {'"": 1, ""{'t"": 1, ""'tu"": 5, 'urn': 5, ""rn'"": 5, ""n':"": 1, ""': "": 1, ': 0': 1, ' 0}': 1, '0}\n': 1, '}\nd': 1, '\nde': 3, 'def': 3, 'ef ': 3, 'f s': 2, ' sp': 2, 'spi': 2, 'pin': 2, 'inn': 2, 'nne': 2, 'ner': 2, 'er(': 4, 'r()': 3, '():': 3, '):\n': 3, ':\n ': 4, '\n  ': 21, '   ': 46, '  c': 1, ' cl': 1, 'cle': 1, 'lea': 1, 'ear': 1, 'ar(': 1, '()\n': 7, ')\n ': 15, '  a': 1, ' an': 2, 'ang': 2, 'ngl': 2, 'gle': 2, '= s': 1, ' st': 4, 'te[': 4, ""e['"": 4, ""['t"": 4, ""n']"": 4, ""']/"": 1, ']/1': 1, '/10': 1, '10\n': 2, '0\n ': 1, '  r': 4, ' ri': 4, 'rig': 4, 'igh': 4, 'ght': 4, 'ht(': 4, 't(a': 1, '(an': 2, 'le)': 1, 'e)\n': 2, '  f': 3, ' fo': 3, 'for': 3, 'orw': 3, 'rwa': 3, 'war': 3, 'ard': 3, 'rd(': 3, 'd(1': 3, '(10': 6, '100': 6, '00)': 6, '0)\n': 12, '  d': 3, ' do': 3, 'dot': 3, 'ot(': 3, 't(1': 6, '(12': 6, '120': 6, '20,': 5, '0, ': 6, "", '"": 4, "" 'r"": 1, ""'re"": 1, 'red': 1, ""ed'"": 1, ""d')"": 1, ""')\n"": 4, '  b': 3, ' ba': 3, 'bac': 3, 'ack': 3, 'ck(': 4, 'k(1': 3, '20)': 5, "" 'g"": 1, ""'gr"": 1, 'gre': 1, 'ree': 1, 'een': 1, ""en'"": 1, ""n')"": 1, "" 'b"": 1, ""'bl"": 1, 'blu': 1, 'lue': 1, ""ue'"": 1, ""e')"": 2, '  u': 1, ' up': 1, 'upd': 1, 'pda': 1, 'dat': 1, 'te(': 3, 'e()': 5, ')\nd': 3, 'f a': 1, 'ani': 3, 'nim': 3, 'ima': 3, 'mat': 3, '  i': 1, ' if': 1, 'if ': 1, ""']>"": 1, ']>0': 1, '>0:': 1, '0:\n': 1, '  s': 3, ""']-"": 1, ']-=': 1, '-=1': 1, '=1\n': 1, '1\n\n': 1, '\n\n ': 1, '  o': 1, ' on': 1, 'ont': 1, 'nti': 1, 'tim': 1, 'ime': 1, 'mer': 1, 'r(a': 1, 'te,': 1, 'e, ': 1, ', 2': 1, ' 20': 1, 'f f': 1, ' fl': 1, 'fli': 2, 'lic': 2, 'ick': 2, 'k()': 1, ""']+"": 1, ']+=': 1, '+=1': 1, '=10': 1, '0\n\n': 1, '\n\ns': 1, '\nse': 1, 'set': 1, 'etu': 2, 'tup': 1, 'up(': 1, 'p(4': 1, '(42': 1, '420': 2, ', 4': 1, ' 42': 1, ', 3': 1, ' 37': 1, '370': 1, '70,': 1, ', 0': 1, ' 0)': 1, ')\nh': 1, '\nhi': 1, 'hid': 1, 'ide': 1, 'det': 1, 'le(': 1, ')\nt': 1, '\ntr': 1, 'tra': 1, 'rac': 1, 'ace': 2, 'cer': 1, 'r(F': 1, '(Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 'se)': 1, ')\nw': 1, '\nwi': 1, 'wid': 1, 'idt': 1, 'dth': 1, 'th(': 1, 'h(2': 1, '(20': 1, ')\no': 1, '\non': 1, 'onk': 1, 'nke': 1, 'key': 1, 'ey(': 1, 'y(f': 1, '(fl': 1, 'ck,': 1, 'k, ': 1, "" 's"": 1, ""'sp"": 1, 'spa': 1, 'pac': 1, ""ce'"": 1, ')\nl': 1, '\nli': 1, 'lis': 1, 'ist': 1, 'ste': 1, 'ten': 1, 'en(': 1, 'n()': 1, ')\na': 1, '\nan': 1, '\ndo': 1, 'don': 1, 'one': 1, 'ne(': 1}"
AMAN KHARWAL,game of life.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'class': 1, 'game_of_life:': 1, 'def': 1, 'gameoflife(self,': 1, 'board:': 1, 'list[list[int]])': 1, '->': 1, 'none:': 1, '""""""': 2, 'do': 1, 'not': 1, 'return': 1, 'anything,': 1, 'modify': 1, 'board': 3, 'in-place': 1, 'instead.': 1, '#': 8, 'neighbors': 2, 'array': 1, 'to': 1, 'find': 1, '8': 1, 'neighboring': 2, 'cells': 1, 'for': 7, 'a': 3, 'given': 1, 'cell': 4, '=': 9, '[(1,0),': 1, '(1,-1),': 1, '(0,-1),': 1, '(-1,-1),': 1, '(-1,0),': 1, '(-1,1),': 1, '(0,1),': 1, '(1,1)]': 1, 'rows': 2, 'len(board)': 1, 'cols': 2, 'len(board[0])': 1, 'create': 1, 'copy': 1, 'of': 3, 'the': 6, 'original': 1, 'copy_board': 1, '[[board[row][col]': 1, 'col': 2, 'in': 5, 'range(cols)]': 1, 'row': 2, 'range(rows)]': 1, 'iterate': 1, 'through': 1, 'by': 1, 'cell.': 2, 'range(rows):': 1, 'range(cols):': 1, 'each': 1, 'count': 1, 'number': 1, 'live': 2, 'neighbors.': 1, 'live_neighbors': 4, '0': 3, 'neighbor': 1, 'neighbors:': 1, 'r': 2, '(row': 1, '+': 2, 'neighbor[0])': 1, 'c': 2, '(col': 1, 'neighbor[1])': 1, 'check': 1, 'validity': 1, 'and': 7, 'if': 4, 'it': 1, 'was': 1, 'originally': 1, 'evaluation': 1, 'is': 2, 'done': 1, 'against': 1, 'copy,': 1, 'since': 1, 'that': 1, 'never': 1, 'updated.': 1, '(r': 1, '<': 3, '>=': 2, '0)': 2, '(c': 1, '(copy_board[r][c]': 1, '==': 4, '1):': 1, '+=': 1, '1': 4, 'rule': 3, 'or': 2, '3': 1, 'copy_board[row][col]': 2, '(live_neighbors': 1, '2': 1, '>': 1, '3):': 1, 'board[row][col]': 2, '4': 1, '3:': 1}","{'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's g': 1, ' ga': 2, 'gam': 2, 'ame': 2, 'me_': 1, 'e_o': 1, '_of': 1, 'of_': 1, 'f_l': 1, '_li': 1, 'lif': 1, 'ife': 2, 'fe:': 1, 'e:\n': 2, ':\n ': 6, '\n  ': 28, '   ': 330, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'f g': 1, 'meO': 1, 'eOf': 1, 'OfL': 1, 'fLi': 1, 'Lif': 1, 'fe(': 1, 'e(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', b': 1, ' bo': 6, 'boa': 13, 'oar': 13, 'ard': 13, 'rd:': 1, 'd: ': 1, ': L': 1, ' Li': 1, 'Lis': 2, 'ist': 2, 'st[': 2, 't[L': 1, '[Li': 1, 't[i': 1, '[in': 1, 'int': 1, 'nt]': 1, 't]]': 1, ']])': 1, ']) ': 1, ') -': 1, ' ->': 1, '-> ': 1, '> N': 1, ' No': 1, 'Non': 1, 'one': 2, 'ne:': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 1, '  D': 1, ' Do': 1, 'Do ': 1, 'o n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n a': 1, ' an': 8, 'any': 1, 'nyt': 1, 'yth': 1, 'thi': 1, 'hin': 1, 'ing': 3, 'ng,': 1, 'g, ': 1, ', m': 1, ' mo': 1, 'mod': 1, 'odi': 1, 'dif': 1, 'ify': 1, 'fy ': 1, 'y b': 1, 'rd ': 3, 'd i': 2, ' in': 7, 'in-': 1, 'n-p': 1, '-pl': 1, 'pla': 1, 'lac': 1, 'ace': 1, 'ce ': 2, 'e i': 1, 'ins': 2, 'nst': 2, 'ste': 1, 'tea': 1, 'ead': 1, 'ad.': 1, 'd.\n': 2, '.\n ': 5, '""\n\n': 1, '\n\n ': 8, '  #': 8, ' # ': 8, '# N': 1, ' Ne': 1, 'Nei': 1, 'eig': 14, 'igh': 14, 'ghb': 14, 'hbo': 14, 'bor': 14, 'ors': 9, 'rs ': 7, 's a': 3, ' ar': 1, 'arr': 1, 'rra': 1, 'ray': 1, 'ay ': 1, 'y t': 1, ' to': 1, 'to ': 1, 'o f': 1, ' fi': 1, 'fin': 1, 'ind': 1, 'nd ': 8, 'd 8': 1, ' 8 ': 1, '8 n': 1, ' ne': 9, 'nei': 13, 'ori': 4, 'rin': 2, 'ng ': 2, 'g c': 2, ' ce': 7, 'cel': 7, 'ell': 7, 'lls': 1, 'ls ': 3, 's f': 1, ' fo': 6, 'for': 6, 'or ': 10, 'r a': 1, ' a ': 3, 'a g': 1, ' gi': 1, 'giv': 1, 'ive': 8, 'ven': 1, 'en ': 1, 'n c': 1, 'll\n': 1, 'l\n ': 1, '  n': 1, 's =': 5, ' = ': 9, '= [': 2, ' [(': 1, '[(1': 1, '(1,': 3, '1,0': 2, ',0)': 2, '0),': 2, '), ': 7, ', (': 7, ' (1': 2, '1,-': 2, ',-1': 3, '-1)': 3, '1),': 5, ' (0': 2, '(0,': 2, '0,-': 1, ' (-': 3, '(-1': 3, '-1,': 3, '1,1': 2, ',1)': 3, '0,1': 1, '1)]': 1, ')]\n': 2, ']\n\n': 2, '  r': 2, ' ro': 4, 'row': 12, 'ows': 4, 'ws ': 2, '= l': 2, ' le': 2, 'len': 2, 'en(': 2, 'n(b': 2, '(bo': 2, 'rd)': 1, 'd)\n': 1, ')\n ': 2, '  c': 3, ' co': 10, 'col': 12, 'ols': 4, 'rd[': 7, 'd[0': 1, '[0]': 2, '0])': 2, '])\n': 3, ')\n\n': 2, '# C': 2, ' Cr': 1, 'Cre': 1, 'rea': 1, 'eat': 1, 'ate': 3, 'te ': 2, 'e a': 2, 'a c': 1, 'cop': 6, 'opy': 6, 'py ': 1, 'y o': 2, ' of': 3, 'of ': 3, 'f t': 2, ' th': 7, 'the': 5, 'he ': 6, 'e o': 1, ' or': 4, 'rig': 2, 'igi': 2, 'gin': 2, 'ina': 2, 'nal': 2, 'al ': 1, 'l b': 2, 'rd\n': 1, 'd\n ': 1, 'py_': 4, 'y_b': 4, '_bo': 4, 'd =': 1, ' [[': 1, '[[b': 1, '[bo': 1, 'd[r': 6, '[ro': 5, 'ow]': 5, 'w][': 5, '][c': 6, '[co': 5, 'ol]': 5, 'l] ': 5, '] f': 2, 'r c': 2, 'ol ': 3, 'l i': 2, 'in ': 5, 'n r': 4, ' ra': 4, 'ran': 4, 'ang': 4, 'nge': 4, 'ge(': 4, 'e(c': 2, '(co': 4, 'ls)': 2, 's)]': 2, ')] ': 1, 'r r': 2, 'ow ': 3, 'w i': 2, 'e(r': 2, '(ro': 3, 'ws)': 2, '# I': 1, ' It': 1, 'Ite': 1, 'ter': 1, 'era': 1, 'rat': 1, 'e t': 2, 'thr': 1, 'hro': 1, 'rou': 1, 'oug': 1, 'ugh': 1, 'gh ': 1, 'h b': 1, 'd c': 2, 'll ': 3, ' by': 1, 'by ': 1, 'y c': 1, 'll.': 2, 'l.\n': 2, '  f': 3, 's):': 2, '):\n': 4, ':\n\n': 2, '# F': 1, ' Fo': 1, 'For': 1, 'r e': 1, ' ea': 1, 'eac': 1, 'ach': 1, 'ch ': 1, 'h c': 1, 'l c': 1, 'cou': 1, 'oun': 1, 'unt': 1, 'nt ': 1, 't t': 2, 'e n': 3, ' nu': 1, 'num': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'er ': 2, 'r o': 1, 'f l': 1, ' li': 6, 'liv': 7, 've ': 2, 'rs.': 1, 's.\n': 1, '  l': 2, 've_': 5, 'e_n': 5, '_ne': 5, '= 0': 5, ' 0\n': 2, '0\n ': 2, 'r n': 1, 'r i': 1, 'n n': 1, 'rs:': 1, 's:\n': 1, ' r ': 2, 'r =': 1, '= (': 2, ' (r': 2, 'w +': 1, ' + ': 2, '+ n': 2, 'or[': 2, 'r[0': 1, ' c ': 2, 'c =': 1, ' (c': 3, 'l +': 1, 'r[1': 1, '[1]': 1, '1])': 1, ' Ch': 1, 'Che': 1, 'hec': 1, 'eck': 1, 'ck ': 1, 'k t': 1, 'e v': 1, ' va': 1, 'val': 2, 'ali': 1, 'lid': 1, 'idi': 1, 'dit': 1, 'ity': 1, 'ty ': 1, 'l a': 1, 'and': 7, ' if': 4, 'if ': 4, 'f i': 1, ' it': 1, 'it ': 1, 't w': 1, ' wa': 1, 'was': 1, 'as ': 1, 's o': 1, 'all': 1, 'lly': 1, 'ly ': 1, 'y a': 1, 'a l': 1, 'e c': 2, '# T': 1, ' Th': 1, 'The': 1, 'e e': 1, ' ev': 1, 'eva': 1, 'alu': 1, 'lua': 1, 'uat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n i': 1, ' is': 2, 'is ': 2, 's d': 1, ' do': 1, 'don': 1, 'ne ': 1, ' ag': 1, 'aga': 1, 'gai': 1, 'ain': 1, 'st ': 1, 'py,': 1, 'y, ': 1, ', s': 1, ' si': 1, 'sin': 1, 'inc': 1, 'nce': 1, 'tha': 1, 'hat': 1, 'at ': 1, 't i': 1, 's n': 1, 'nev': 1, 'eve': 1, 'ver': 1, 'r u': 1, ' up': 1, 'upd': 1, 'pda': 1, 'dat': 1, 'ted': 1, 'ed.': 1, '  i': 3, 'f (': 1, '(r ': 1, 'r <': 1, ' < ': 3, '< r': 1, 'd r': 1, 'r >': 1, ' >=': 2, '>= ': 2, ' 0)': 2, '0) ': 2, ') a': 2, 'd (': 3, '(c ': 1, 'c <': 1, '< c': 1, 'c >': 1, '[r]': 1, 'r][': 1, '[c]': 1, 'c] ': 1, '] =': 5, ' ==': 4, '== ': 4, '= 1': 4, ' 1)': 1, '1):': 1, 's +': 1, ' +=': 1, '+= ': 1, ' 1\n': 2, '1\n\n': 1, '# R': 2, ' Ru': 3, 'Rul': 3, 'ule': 3, 'le ': 3, 'e 1': 1, ' 1 ': 2, '1 o': 1, 'r R': 1, 'e 3': 1, ' 3 ': 1, '3  ': 1, '  \n': 1, ' \n ': 1, 'f c': 2, '1 a': 1, ' (l': 1, '(li': 1, 's <': 1, '< 2': 1, ' 2 ': 1, '2 o': 1, 'r l': 1, 's >': 1, ' > ': 1, '> 3': 1, ' 3)': 1, '3):': 1, '  b': 2, 'e 4': 1, ' 4\n': 1, '4\n ': 1, ' 0 ': 1, '0 a': 1, 'd l': 1, '= 3': 1, ' 3:': 1, '3:\n': 1}"
AMAN KHARWAL,image converter.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 3, 'tkinter': 2, 'as': 1, 'tk': 1, 'from': 2, 'filedialog': 1, 'pil': 1, 'image': 1, 'root': 1, '=': 8, 'tk.tk()': 1, 'canvas1': 1, 'tk.canvas(root,': 1, 'width=300,': 1, 'height=250,': 1, ""bg='azure3',"": 1, ""relief='raised')"": 1, 'canvas1.pack()': 1, 'label1': 1, 'tk.label(root,': 1, 'text=""image': 1, 'converter"",': 1, ""bg='azure3')"": 1, ""label1.config(font=('helvetica',"": 1, '20))': 1, 'canvas1.create_window(150,': 3, '60,': 1, 'window=label1)': 1, 'def': 2, 'getpng():': 1, 'global': 2, 'im1': 3, 'import_file_path': 1, 'filedialog.askopenfilename()': 1, 'image.open(import_file_path)': 1, 'browse_png': 1, 'tk.button(text=""select': 1, 'png': 2, 'file"",': 1, 'command=getpng,': 1, 'bg=""royalblue"",': 1, ""fg='white',"": 2, ""font=('helvetica',"": 2, '12,': 2, ""'bold'))"": 2, '130,': 1, 'window=browse_png)': 1, 'convert():': 1, 'export_file_path': 1, ""filedialog.asksaveasfilename(defaultextension='.jpg')"": 1, 'im1.save(export_file_path)': 1, 'saveasbutton': 1, 'tk.button(text=""convert': 1, 'to': 1, 'jpg"",': 1, 'command=convert,': 1, ""bg='royalblue',"": 1, '180,': 1, 'window=saveasbutton)': 1, 'root.mainloop()': 1}","{'imp': 5, 'mpo': 5, 'por': 7, 'ort': 7, 'rt ': 4, 't t': 1, ' tk': 8, 'tki': 2, 'kin': 2, 'int': 2, 'nte': 2, 'ter': 3, 'er ': 2, 'r a': 1, ' as': 1, 'as ': 1, 's t': 1, 'tk\n': 1, 'k\nf': 1, '\nfr': 2, 'fro': 2, 'rom': 2, 'om ': 2, 'm t': 1, 'r i': 1, ' im': 7, 't f': 1, ' fi': 4, 'fil': 10, 'ile': 10, 'led': 3, 'edi': 3, 'dia': 3, 'ial': 3, 'alo': 3, 'log': 3, 'og\n': 1, 'g\nf': 1, 'm P': 1, ' PI': 1, 'PIL': 1, 'IL ': 1, 'L i': 1, 't I': 1, ' Im': 2, 'Ima': 3, 'mag': 3, 'age': 3, 'ge\n': 1, 'e\n\n': 1, '\n\nr': 1, '\nro': 2, 'roo': 4, 'oot': 4, 'ot ': 1, 't =': 1, ' = ': 8, '= t': 5, 'tk.': 5, 'k.T': 1, '.Tk': 1, 'Tk(': 1, 'k()': 2, '()\n': 4, ')\nc': 5, '\nca': 5, 'can': 5, 'anv': 6, 'nva': 6, 'vas': 6, 'as1': 5, 's1 ': 1, '1 =': 3, 'k.C': 1, '.Ca': 1, 'Can': 1, 'as(': 1, 's(r': 1, '(ro': 2, 'ot,': 2, 't, ': 3, ', w': 4, ' wi': 4, 'wid': 1, 'idt': 1, 'dth': 1, 'th=': 1, 'h=3': 1, '=30': 1, '300': 1, '00,': 1, '0, ': 8, ', h': 1, ' he': 1, 'hei': 1, 'eig': 1, 'igh': 1, 'ght': 1, 'ht=': 1, 't=2': 1, '=25': 1, '250': 1, '50,': 4, ', b': 4, ' bg': 4, 'bg=': 4, ""g='"": 5, ""='a"": 2, ""'az"": 2, 'azu': 2, 'zur': 2, 'ure': 2, 're3': 2, ""e3'"": 2, ""3',"": 1, ""', "": 7, ', r': 1, ' re': 1, 'rel': 1, 'eli': 1, 'lie': 1, 'ief': 1, 'ef=': 1, ""f='"": 1, ""='r"": 2, ""'ra"": 1, 'rai': 1, 'ais': 1, 'ise': 1, 'sed': 1, ""ed'"": 1, ""d')"": 3, ""')\n"": 3, 's1.': 4, '1.p': 1, '.pa': 1, 'pac': 1, 'ack': 1, 'ck(': 1, ')\n\n': 5, '\n\nl': 1, '\nla': 2, 'lab': 3, 'abe': 4, 'bel': 4, 'el1': 3, 'l1 ': 1, 'k.L': 1, '.La': 1, 'Lab': 1, 'el(': 1, 'l(r': 1, ', t': 1, ' te': 1, 'tex': 4, 'ext': 4, 'xt=': 3, 't=""': 3, '=""I': 1, '""Im': 1, 'ge ': 1, 'e C': 1, ' Co': 1, 'Con': 2, 'onv': 4, 'nve': 4, 'ver': 4, 'ert': 4, 'rte': 1, 'er""': 1, 'r"",': 1, '"", ': 4, ""3')"": 1, ')\nl': 1, 'l1.': 1, '1.c': 4, '.co': 1, 'con': 3, 'onf': 1, 'nfi': 2, 'fig': 1, 'ig(': 1, 'g(f': 1, '(fo': 1, 'fon': 3, 'ont': 3, 'nt=': 3, 't=(': 3, ""=('"": 3, ""('h"": 3, ""'he"": 3, 'hel': 3, 'elv': 3, 'lve': 3, 'vet': 3, 'eti': 3, 'tic': 3, 'ica': 3, ""ca'"": 3, ""a',"": 3, ', 2': 1, ' 20': 1, '20)': 1, '0))': 1, '))\n': 3, '.cr': 3, 'cre': 3, 'rea': 3, 'eat': 3, 'ate': 3, 'te_': 3, 'e_w': 3, '_wi': 3, 'win': 6, 'ind': 6, 'ndo': 6, 'dow': 6, 'ow(': 3, 'w(1': 3, '(15': 3, '150': 3, ', 6': 1, ' 60': 1, '60,': 1, 'ow=': 3, 'w=l': 1, '=la': 1, 'l1)': 1, '1)\n': 1, '\n\nd': 2, '\nde': 2, 'def': 3, 'ef ': 2, 'f g': 1, ' ge': 1, 'get': 2, 'etP': 2, 'tPN': 2, 'PNG': 4, 'NG(': 1, 'G()': 1, '():': 2, '):\n': 2, ':\n ': 2, '\n  ': 6, '   ': 12, '  g': 2, ' gl': 2, 'glo': 2, 'lob': 2, 'oba': 2, 'bal': 2, 'al ': 2, 'l i': 2, 'im1': 4, 'm1\n': 2, '1\n ': 2, '  i': 3, 'rt_': 4, 't_f': 4, '_fi': 4, 'le_': 4, 'e_p': 6, '_pa': 4, 'pat': 4, 'ath': 4, 'th ': 2, 'h =': 2, '= f': 2, 'og.': 2, 'g.a': 2, '.as': 2, 'ask': 2, 'sko': 1, 'kop': 1, 'ope': 2, 'pen': 2, 'enf': 1, 'len': 2, 'ena': 2, 'nam': 2, 'ame': 2, 'me(': 2, 'e()': 1, ')\n ': 2, 'm1 ': 1, '= I': 1, 'ge.': 1, 'e.o': 1, '.op': 1, 'en(': 1, 'n(i': 1, '(im': 1, 'th)': 2, 'h)\n': 2, '\n\nb': 1, '\nbr': 1, 'bro': 2, 'row': 2, 'ows': 2, 'wse': 2, 'se_': 2, '_pn': 2, 'png': 2, 'ng ': 1, 'g =': 1, 'k.B': 2, '.Bu': 2, 'But': 2, 'utt': 4, 'tto': 4, 'ton': 4, 'on(': 2, 'n(t': 2, '(te': 2, '=""S': 1, '""Se': 1, 'Sel': 1, 'ele': 1, 'lec': 1, 'ect': 1, 'ct ': 1, 't P': 2, ' PN': 2, 'NG ': 2, 'G f': 1, 'le""': 1, 'e"",': 2, ', c': 2, ' co': 3, 'com': 2, 'omm': 2, 'mma': 2, 'man': 2, 'and': 2, 'nd=': 2, 'd=g': 1, '=ge': 1, 'NG,': 1, 'G, ': 1, 'g=""': 1, '=""r': 1, '""ro': 1, 'roy': 2, 'oya': 2, 'yal': 2, 'alb': 2, 'lbl': 2, 'blu': 2, 'lue': 2, 'ue""': 1, ', f': 4, ' fg': 2, 'fg=': 2, ""='w"": 2, ""'wh"": 2, 'whi': 2, 'hit': 2, 'ite': 2, ""te'"": 2, ""e',"": 3, ' fo': 2, ', 1': 4, ' 12': 2, '12,': 2, '2, ': 2, "", '"": 2, "" 'b"": 2, ""'bo"": 2, 'bol': 2, 'old': 2, ""ld'"": 2, ""'))"": 2, ' 13': 1, '130': 1, '30,': 1, 'w=b': 1, '=br': 1, 'ng)': 1, 'g)\n': 1, 'f c': 1, 'rt(': 1, 't()': 1, '  e': 1, ' ex': 1, 'exp': 2, 'xpo': 2, 'sks': 1, 'ksa': 1, 'sav': 4, 'ave': 4, 'vea': 3, 'eas': 3, 'asf': 1, 'sfi': 1, 'e(d': 1, '(de': 1, 'efa': 1, 'fau': 1, 'aul': 1, 'ult': 1, 'lte': 1, 'xte': 1, 'ten': 1, 'ens': 1, 'nsi': 1, 'sio': 1, 'ion': 1, 'on=': 1, ""n='"": 1, ""='."": 1, ""'.j"": 1, '.jp': 1, 'jpg': 1, ""pg'"": 1, ""g')"": 1, 'm1.': 1, '1.s': 1, '.sa': 1, 've(': 1, 'e(e': 1, '(ex': 1, '\n\ns': 1, '\nsa': 1, 'asb': 2, 'sbu': 2, 'but': 2, 'on ': 1, 'n =': 1, '=""C': 1, '""Co': 1, 'G t': 1, ' to': 1, 'to ': 1, 'o J': 1, ' JP': 1, 'JPG': 1, 'PG""': 1, 'G"",': 1, 'd=c': 1, '=co': 1, 'rt,': 1, ""'ro"": 1, ""ue'"": 1, ' 18': 1, '180': 1, '80,': 1, 'w=s': 1, '=sa': 1, 'on)': 1, 'n)\n': 1, ')\nr': 1, 'ot.': 1, 't.m': 1, '.ma': 1, 'mai': 1, 'ain': 1, 'inl': 1, 'nlo': 1, 'loo': 1, 'oop': 1, 'op(': 1, 'p()': 1}"
AMAN KHARWAL,Monty hall.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 3, 'random': 2, 'from': 1, 'seed,': 1, 'randint': 1, 'numpy': 1, 'def': 1, 'game(winningdoor,': 1, 'selecteddoor,': 1, 'change=false):': 1, 'assert': 2, 'winningdoor': 3, '<': 1, '3': 1, '>=': 1, '0': 1, '#': 3, 'presenter': 1, 'removes': 1, 'the': 2, 'first': 1, 'door': 1, 'that': 1, 'was': 1, 'not': 1, 'selected': 1, 'neither': 1, 'winning': 1, 'removeddoor': 1, '=': 5, 'next(i': 2, 'for': 4, 'i': 6, 'in': 4, 'range(3)': 2, 'if': 6, '!=': 4, 'selecteddoor': 4, 'and': 2, 'winningdoor)': 1, 'player': 2, 'decides': 1, 'to': 2, 'change': 2, 'its': 2, 'choice': 1, 'change:': 1, 'removeddoor)': 1, 'we': 1, 'suppose': 1, 'never': 1, 'wants': 1, 'initial': 1, 'choice.': 1, 'return': 1, '==': 2, '__name__': 1, ""'__main__':"": 1, 'playerdoors': 3, 'numpy.random.random_integers(0,2,': 1, '(1000': 1, '*': 2, '1000': 1, '1,))': 1, 'winningdoors': 2, '[d': 2, 'd': 2, 'game(1,': 2, 'd)]': 1, 'print(""winning': 2, 'percentage': 2, 'without': 1, 'changing': 2, 'choice:': 2, '"",': 2, 'len(winningdoors)': 2, '/': 2, 'len(playerdoors))': 2, 'd,': 1, 'change=true)]': 1, 'while': 1}","{'imp': 3, 'mpo': 3, 'por': 3, 'ort': 3, 'rt ': 5, 't r': 1, ' ra': 5, 'ran': 7, 'and': 7, 'ndo': 4, 'dom': 4, 'om\n': 1, 'm\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 2, 'm r': 1, 'm i': 1, ' im': 1, 't s': 2, ' se': 7, 'see': 1, 'eed': 1, 'ed,': 1, 'd, ': 2, ', r': 1, 'ndi': 1, 'din': 1, 'int': 4, 'nt\n': 1, 't\ni': 1, '\nim': 1, 't n': 1, ' nu': 2, 'num': 2, 'ump': 2, 'mpy': 2, 'py\n': 1, 'y\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f g': 3, ' ga': 3, 'gam': 3, 'ame': 4, 'me(': 3, 'e(w': 1, '(wi': 3, 'win': 10, 'inn': 12, 'nni': 12, 'nin': 12, 'ing': 14, 'ngd': 9, 'gdo': 9, 'doo': 22, 'oor': 22, 'or,': 2, 'r, ': 2, ', s': 1, 'sel': 6, 'ele': 6, 'lec': 6, 'ect': 6, 'cte': 6, 'ted': 6, 'edd': 7, 'ddo': 7, ', c': 2, ' ch': 11, 'cha': 7, 'han': 7, 'ang': 9, 'nge': 7, 'ge=': 2, 'e=F': 1, '=Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 'se)': 1, 'e):': 1, '):\n': 1, ':\n ': 3, '\n  ': 14, '   ': 32, '  a': 2, ' as': 2, 'ass': 2, 'sse': 2, 'ser': 2, 'ert': 2, 't w': 3, ' wi': 8, 'or ': 12, 'r <': 1, ' < ': 1, '< 3': 1, ' 3\n': 1, '3\n ': 1, 'r >': 1, ' >=': 1, '>= ': 1, '= 0': 1, ' 0\n': 1, '0\n\n': 1, '\n\n ': 5, '  #': 3, ' # ': 3, '# P': 2, ' Pr': 1, 'Pre': 1, 'res': 1, 'ese': 1, 'sen': 1, 'ent': 3, 'nte': 2, 'ter': 1, 'er ': 5, 'r r': 1, ' re': 4, 'rem': 3, 'emo': 3, 'mov': 3, 'ove': 3, 'ves': 1, 'es ': 2, 's t': 3, ' th': 3, 'the': 3, 'he ': 2, 'e f': 1, ' fi': 1, 'fir': 1, 'irs': 1, 'rst': 1, 'st ': 1, 't d': 1, ' do': 1, 'r t': 1, 'tha': 1, 'hat': 1, 'at ': 1, ' wa': 2, 'was': 1, 'as ': 1, 's n': 1, ' no': 1, 'not': 1, 'ot ': 1, 'ed ': 1, 'd n': 1, ' ne': 4, 'nei': 1, 'eit': 1, 'ith': 2, 'her': 1, 'r w': 2, 'ng\n': 1, 'g\n ': 1, '  r': 2, 'ved': 2, 'r =': 3, ' = ': 5, '= n': 3, 'nex': 2, 'ext': 2, 'xt(': 2, 't(i': 2, '(i ': 2, 'i f': 2, ' fo': 4, 'for': 4, 'r i': 2, ' i ': 6, 'i i': 2, ' in': 5, 'in ': 4, 'n r': 2, 'ge(': 2, 'e(3': 2, '(3)': 2, '3) ': 2, ') i': 2, ' if': 5, 'if ': 6, 'f i': 2, 'i !': 4, ' !=': 4, '!= ': 4, '= s': 2, 'r a': 2, ' an': 2, 'nd ': 2, 'd i': 4, '= w': 2, 'or)': 2, 'r)\n': 2, ')\n\n': 4, ' Pl': 1, 'Pla': 1, 'lay': 7, 'aye': 7, 'yer': 7, 'r d': 3, ' de': 1, 'dec': 1, 'eci': 1, 'cid': 1, 'ide': 1, 'des': 1, ' to': 2, 'to ': 2, 'o c': 2, 'ge ': 4, 'e i': 2, ' it': 2, 'its': 2, 'ts ': 3, 's c': 1, 'cho': 4, 'hoi': 4, 'oic': 4, 'ice': 4, 'ce\n': 1, 'e\n ': 1, '  i': 1, 'f c': 1, 'ge:': 1, 'e:\n': 1, '  s': 1, '= r': 1, '# W': 1, ' We': 1, 'We ': 1, 'e s': 1, ' su': 1, 'sup': 1, 'upp': 1, 'ppo': 1, 'pos': 1, 'ose': 1, 'se ': 1, 'e t': 1, 'e p': 1, ' pl': 4, 'pla': 6, 'r n': 1, 'nev': 1, 'eve': 1, 'ver': 1, 'wan': 1, 'ant': 1, 'nts': 1, 's i': 3, 'ini': 1, 'nit': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'al ': 1, 'l c': 1, 'ce.': 1, 'e.\n': 1, '.\n ': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n s': 1, ' ==': 2, '== ': 2, 'or\n': 1, 'r\n\n': 1, '\n\n\n': 1, '\n\ni': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  p': 3, 'erd': 5, 'rdo': 5, 'ors': 9, 'rs ': 5, 's =': 3, 'py.': 1, 'y.r': 1, '.ra': 2, 'om.': 1, 'm.r': 1, 'om_': 1, 'm_i': 1, '_in': 1, 'teg': 1, 'ege': 1, 'ger': 1, 'ers': 1, 'rs(': 1, 's(0': 1, '(0,': 1, '0,2': 1, ',2,': 1, '2, ': 1, ', (': 1, ' (1': 1, '(10': 1, '100': 2, '000': 2, '00 ': 2, '0 *': 2, ' * ': 2, '* 1': 2, ' 10': 1, ' 1,': 1, '1,)': 1, ',))': 1, '))\n': 3, '  w': 2, '= [': 2, ' [d': 2, '[d ': 2, 'd f': 2, ' d ': 2, 'n p': 2, 'e(1': 2, '(1,': 2, '1, ': 2, ', d': 2, ' d)': 1, 'd)]': 1, ')]\n': 2, ']\n ': 2, ' pr': 2, 'pri': 2, 'rin': 2, 'nt(': 2, 't(""': 2, '(""W': 2, '""Wi': 2, 'Win': 2, 'ng ': 4, 'g p': 2, ' pe': 2, 'per': 2, 'erc': 2, 'rce': 2, 'cen': 2, 'nta': 2, 'tag': 2, 'age': 2, 'e w': 2, 'wit': 1, 'tho': 1, 'hou': 1, 'out': 1, 'ut ': 1, 't c': 1, 'ngi': 2, 'gin': 2, 'g c': 2, 'ce:': 2, 'e: ': 2, ': ""': 2, ' "",': 2, '"", ': 2, ', l': 2, ' le': 4, 'len': 4, 'en(': 4, 'n(w': 2, 'rs)': 4, 's) ': 2, ') /': 2, ' / ': 2, '/ l': 2, 'n(p': 2, '(pl': 2, 's))': 2, ' d,': 1, 'e=T': 1, '=Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e)]': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e c': 1}"
AMAN KHARWAL,Music player.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 4, 'pygame': 1, 'tkinter': 1, 'as': 1, 'tkr': 1, 'from': 1, 'tkinter.filedialog': 1, 'askdirectory': 1, 'os': 1, 'music_player': 1, '=': 11, 'tkr.tk()': 1, 'music_player.title(""my': 1, 'music': 1, 'player"")': 1, 'music_player.geometry(""450x350"")': 1, 'directory': 1, 'askdirectory()': 1, 'os.chdir(directory)': 1, 'song_list': 1, 'os.listdir()': 1, 'play_list': 1, 'tkr.listbox(music_player,': 1, 'font=""helvetica': 6, '12': 6, 'bold"",': 6, ""bg='yellow',"": 1, 'selectmode=tkr.single)': 1, 'for': 1, 'item': 1, 'in': 1, 'song_list:': 1, 'pos': 2, '0': 1, 'play_list.insert(pos,': 1, 'item)': 1, '+=': 1, '1': 1, 'pygame.init()': 1, 'pygame.mixer.init()': 1, 'def': 4, 'play():': 1, 'pygame.mixer.music.load(play_list.get(tkr.active))': 1, 'var.set(play_list.get(tkr.active))': 1, 'pygame.mixer.music.play()': 1, 'stop():': 1, 'pygame.mixer.music.stop()': 1, 'pause():': 1, 'pygame.mixer.music.pause()': 1, 'unpause():': 1, 'pygame.mixer.music.unpause()': 1, 'button1': 1, 'tkr.button(music_player,': 4, 'width=5,': 4, 'height=3,': 4, 'text=""play"",': 1, 'command=play,': 1, 'bg=""blue"",': 1, 'fg=""white"")': 4, 'button2': 1, 'text=""stop"",': 1, 'command=stop,': 1, 'bg=""red"",': 1, 'button3': 1, 'text=""pause"",': 1, 'command=pause,': 1, 'bg=""purple"",': 1, 'button4': 1, 'text=""unpause"",': 1, 'command=unpause,': 1, 'bg=""orange"",': 1, 'var': 1, 'tkr.stringvar()': 1, 'song_title': 1, 'tkr.label(music_player,': 1, 'textvariable=var)': 1, 'song_title.pack()': 1, 'button1.pack(fill=""x"")': 1, 'button2.pack(fill=""x"")': 1, 'button3.pack(fill=""x"")': 1, 'button4.pack(fill=""x"")': 1, 'play_list.pack(fill=""both"",': 1, 'expand=""yes"")': 1, 'music_player.mainloop()': 1}","{'imp': 4, 'mpo': 4, 'por': 4, 'ort': 4, 'rt ': 4, 't p': 1, ' py': 6, 'pyg': 8, 'yga': 8, 'gam': 8, 'ame': 8, 'me\n': 1, 'e\ni': 1, '\nim': 2, 't t': 1, ' tk': 11, 'tki': 2, 'kin': 2, 'int': 2, 'nte': 2, 'ter': 2, 'er ': 2, 'r a': 1, ' as': 3, 'as ': 1, 's t': 1, 'tkr': 12, 'kr\n': 1, 'r\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm t': 1, 'er.': 10, 'r.f': 1, '.fi': 1, 'fil': 6, 'ile': 1, 'led': 1, 'edi': 1, 'dia': 1, 'ial': 1, 'alo': 1, 'log': 1, 'og ': 1, 'g i': 1, ' im': 1, 't a': 1, 'ask': 2, 'skd': 2, 'kdi': 2, 'dir': 6, 'ire': 4, 'rec': 4, 'ect': 5, 'cto': 4, 'tor': 4, 'ory': 4, 'ry\n': 1, 'y\ni': 1, 't o': 1, ' os': 2, 'os\n': 1, 's\n\n': 1, '\n\nm': 1, '\nmu': 4, 'mus': 15, 'usi': 16, 'sic': 16, 'ic_': 10, 'c_p': 10, '_pl': 10, 'pla': 18, 'lay': 19, 'aye': 11, 'yer': 11, 'r =': 2, ' = ': 11, '= t': 8, 'kr.': 11, 'r.T': 1, '.Tk': 1, 'Tk(': 1, 'k()': 2, '()\n': 11, ')\nm': 3, 'r.t': 1, '.ti': 1, 'tit': 3, 'itl': 3, 'tle': 3, 'le(': 1, 'e(""': 1, '(""M': 1, '""My': 1, 'My ': 1, 'y M': 1, ' Mu': 1, 'Mus': 1, 'ic ': 1, 'c P': 1, ' Pl': 1, 'Pla': 1, 'er""': 1, 'r"")': 1, '"")\n': 11, 'r.g': 1, '.ge': 3, 'geo': 1, 'eom': 1, 'ome': 1, 'met': 1, 'etr': 1, 'try': 1, 'ry(': 2, 'y(""': 1, '(""4': 1, '""45': 1, '450': 1, '50x': 1, '0x3': 1, 'x35': 1, '350': 1, '50""': 1, '0"")': 1, ')\nd': 4, '\ndi': 1, 'ry ': 1, 'y =': 1, '= a': 1, 'y()': 3, ')\no': 1, '\nos': 1, 'os.': 2, 's.c': 1, '.ch': 1, 'chd': 1, 'hdi': 1, 'ir(': 2, 'r(d': 1, '(di': 1, 'ry)': 1, 'y)\n': 1, ')\ns': 1, '\nso': 3, 'son': 4, 'ong': 4, 'ng_': 4, 'g_l': 2, '_li': 7, 'lis': 8, 'ist': 9, 'st ': 2, 't =': 2, '= o': 1, 's.l': 1, '.li': 1, 'std': 1, 'tdi': 1, 'r()': 2, ')\n\n': 4, '\n\np': 1, '\npl': 2, 'ay_': 5, 'y_l': 5, 'r.L': 2, '.Li': 1, 'Lis': 1, 'stb': 1, 'tbo': 1, 'box': 1, 'ox(': 1, 'x(m': 1, '(mu': 6, 'er,': 6, 'r, ': 6, ', f': 10, ' fo': 6, 'fon': 6, 'ont': 6, 'nt=': 6, 't=""': 10, '=""H': 6, '""He': 6, 'Hel': 6, 'elv': 6, 'lve': 6, 'vet': 6, 'eti': 6, 'tic': 6, 'ica': 6, 'ca ': 6, 'a 1': 6, ' 12': 6, '12 ': 6, '2 b': 6, ' bo': 6, 'bol': 6, 'old': 6, 'ld""': 6, 'd"",': 7, '"", ': 15, ', b': 5, ' bg': 5, 'bg=': 5, ""g='"": 1, ""='y"": 1, ""'ye"": 1, 'yel': 1, 'ell': 1, 'llo': 1, 'low': 1, ""ow'"": 1, ""w',"": 1, ""', "": 1, ', s': 1, ' se': 1, 'sel': 1, 'ele': 1, 'lec': 1, 'ctm': 1, 'tmo': 1, 'mod': 1, 'ode': 1, 'de=': 1, 'e=t': 1, '=tk': 1, 'r.S': 2, '.SI': 1, 'SIN': 1, 'ING': 1, 'NGL': 1, 'GLE': 1, 'LE)': 1, 'E)\n': 1, ')\nf': 1, '\nfo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' it': 2, 'ite': 6, 'tem': 2, 'em ': 1, 'm i': 1, ' in': 1, 'in ': 1, 'n s': 1, ' so': 1, 'st:': 1, 't:\n': 1, ':\n ': 5, '\n  ': 9, '   ': 18, '  p': 8, ' po': 2, 'pos': 3, 'os ': 2, 's =': 1, '= 0': 1, ' 0\n': 1, '0\n ': 1, ' pl': 2, 'st.': 4, 't.i': 1, '.in': 3, 'ins': 1, 'nse': 1, 'ser': 1, 'ert': 1, 'rt(': 1, 't(p': 2, '(po': 1, 'os,': 1, 's, ': 1, ', i': 1, 'em)': 1, 'm)\n': 1, ')\n ': 3, 's +': 1, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 1, '1\np': 1, '\npy': 2, 'me.': 7, 'e.i': 1, 'ini': 2, 'nit': 2, 'it(': 2, 't()': 2, ')\np': 2, 'e.m': 6, '.mi': 6, 'mix': 6, 'ixe': 6, 'xer': 6, 'r.i': 1, '\n\nd': 1, '\nde': 4, 'def': 4, 'ef ': 4, 'f p': 2, 'ay(': 2, '():': 4, '):\n': 4, 'r.m': 6, '.mu': 5, 'ic.': 5, 'c.l': 1, '.lo': 1, 'loa': 1, 'oad': 1, 'ad(': 1, 'd(p': 1, '(pl': 2, 't.g': 2, 'get': 2, 'et(': 3, 't(t': 2, '(tk': 2, 'r.A': 2, '.AC': 2, 'ACT': 2, 'CTI': 2, 'TIV': 2, 'IVE': 2, 'VE)': 2, 'E))': 2, '))\n': 2, '  v': 1, ' va': 1, 'var': 4, 'ar.': 1, 'r.s': 1, '.se': 1, 'set': 1, 'c.p': 2, '.pl': 1, 'f s': 1, ' st': 1, 'sto': 3, 'top': 3, 'op(': 3, 'p()': 3, 'c.s': 1, '.st': 1, ' pa': 1, 'pau': 6, 'aus': 6, 'use': 6, 'se(': 4, 'e()': 4, '.pa': 7, 'f u': 1, ' un': 1, 'unp': 3, 'npa': 3, 'c.u': 1, '.un': 1, ')\nB': 8, '\nBu': 8, 'But': 12, 'utt': 12, 'tto': 12, 'ton': 12, 'on1': 2, 'n1 ': 1, '1 =': 1, 'r.B': 4, '.Bu': 4, 'on(': 4, 'n(m': 4, ', w': 4, ' wi': 4, 'wid': 4, 'idt': 4, 'dth': 4, 'th=': 4, 'h=5': 4, '=5,': 4, '5, ': 4, ', h': 4, ' he': 4, 'hei': 4, 'eig': 4, 'igh': 4, 'ght': 4, 'ht=': 4, 't=3': 4, '=3,': 4, '3, ': 4, ', t': 5, ' te': 5, 'tex': 5, 'ext': 5, 'xt=': 4, '=""P': 2, '""PL': 1, 'PLA': 1, 'LAY': 1, 'AY""': 1, 'Y"",': 1, ', c': 4, ' co': 4, 'com': 4, 'omm': 4, 'mma': 4, 'man': 4, 'and': 5, 'nd=': 5, 'd=p': 2, '=pl': 1, 'ay,': 1, 'y, ': 1, 'g=""': 8, '=""b': 2, '""bl': 1, 'blu': 1, 'lue': 1, 'ue""': 1, 'e"",': 3, ' fg': 4, 'fg=': 4, '=""w': 4, '""wh': 4, 'whi': 4, 'hit': 4, 'te""': 4, 'e"")': 4, 'on2': 2, 'n2 ': 1, '2 =': 1, '=""S': 1, '""ST': 1, 'STO': 1, 'TOP': 1, 'OP""': 1, 'P"",': 1, 'd=s': 1, '=st': 1, 'op,': 1, 'p, ': 1, '=""r': 1, '""re': 1, 'red': 1, 'ed""': 1, 'on3': 2, 'n3 ': 1, '3 =': 1, '""PA': 1, 'PAU': 2, 'AUS': 2, 'USE': 2, 'SE""': 2, 'E"",': 2, '=pa': 1, 'se,': 2, 'e, ': 2, '=""p': 1, '""pu': 1, 'pur': 1, 'urp': 1, 'rpl': 1, 'ple': 1, 'le""': 1, 'on4': 2, 'n4 ': 1, '4 =': 1, '=""U': 1, '""UN': 1, 'UNP': 1, 'NPA': 1, 'd=u': 1, '=un': 1, '=""o': 1, '""or': 1, 'ora': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge""': 1, '\n\nv': 1, '\nva': 1, 'ar ': 1, '.St': 1, 'Str': 1, 'tri': 1, 'rin': 1, 'ing': 1, 'ngV': 1, 'gVa': 1, 'Var': 1, 'ar(': 1, '() ': 1, ') \n': 1, ' \ns': 1, 'g_t': 2, '_ti': 2, 'le ': 1, 'e =': 1, '.La': 1, 'Lab': 1, 'abe': 1, 'bel': 1, 'el(': 1, 'l(m': 1, 'xtv': 1, 'tva': 1, 'ari': 1, 'ria': 1, 'iab': 1, 'abl': 1, 'ble': 1, 'le=': 1, 'e=v': 1, '=va': 1, 'ar)': 1, 'r)\n': 1, '\n\ns': 1, 'le.': 1, 'e.p': 1, 'pac': 6, 'ack': 6, 'ck(': 6, 'n1.': 1, '1.p': 1, 'k(f': 5, '(fi': 5, 'ill': 5, 'll=': 5, 'l=""': 5, '=""x': 4, '""x""': 4, 'x"")': 4, 'n2.': 1, '2.p': 1, 'n3.': 1, '3.p': 1, 'n4.': 1, '4.p': 1, 't.p': 1, '""bo': 1, 'bot': 1, 'oth': 1, 'th""': 1, 'h"",': 1, ', e': 1, ' ex': 1, 'exp': 1, 'xpa': 1, 'pan': 1, 'd=""': 1, '=""y': 1, '""ye': 1, 'yes': 1, 'es""': 1, 's"")': 1, '.ma': 1, 'mai': 1, 'ain': 1, 'inl': 1, 'nlo': 1, 'loo': 1, 'oop': 1}"
AMAN KHARWAL,number guessing game.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 9, 'to': 8, 'import': 2, 'random': 3, 'module': 1, 'create': 1, 'a': 3, 'range': 1, 'of': 1, 'numbers': 1, 'between': 1, '1-10': 1, 'n': 5, '=': 4, 'random.randrange(1,100)': 1, 'take': 1, 'user': 2, 'input': 4, 'enter': 1, 'number': 3, 'guess': 9, 'int(input(""enter': 3, 'any': 1, 'number:': 1, '""))': 3, 'while': 2, 'n!=': 1, 'guess:': 1, 'means': 1, 'if': 5, 'is': 3, 'not': 1, 'equal': 1, 'the': 3, 'smaller': 1, 'than': 2, '<': 1, 'n:': 2, 'print(""too': 2, 'low"")': 1, 'again': 2, 'ask': 2, 'for': 2, 'again:': 2, 'greater': 1, 'elif': 1, '>': 1, 'high!"")': 1, 'gets': 1, 'equals': 1, 'terminate': 1, 'loop': 1, 'else:': 1, 'break': 1, 'print(""you': 1, 'guessed': 1, 'it': 1, 'right!!"")': 1}","{'# t': 5, ' to': 8, 'to ': 8, 'o i': 1, ' im': 1, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't r': 3, ' ra': 5, 'ran': 7, 'and': 5, 'ndo': 4, 'dom': 4, 'om ': 2, 'm m': 1, ' mo': 1, 'mod': 1, 'odu': 1, 'dul': 1, 'ule': 1, 'le\n': 1, 'e\ni': 1, '\nim': 1, 'om\n': 1, 'm\n#': 1, '\n# ': 2, 'o c': 1, ' cr': 1, 'cre': 1, 'rea': 3, 'eat': 2, 'ate': 3, 'te ': 2, 'e a': 2, ' a ': 3, 'a r': 1, 'ang': 2, 'nge': 2, 'ge ': 1, 'e o': 1, ' of': 1, 'of ': 1, 'f r': 1, 'm n': 1, ' nu': 5, 'num': 5, 'umb': 5, 'mbe': 5, 'ber': 5, 'ers': 1, 'rs ': 1, 's b': 1, ' be': 1, 'bet': 1, 'etw': 1, 'twe': 1, 'wee': 1, 'een': 1, 'en ': 1, 'n 1': 1, ' 1-': 1, '1-1': 1, '-10': 1, '10\n': 1, '0\nn': 1, '\nn ': 1, 'n =': 1, ' = ': 4, '= r': 1, 'om.': 1, 'm.r': 1, '.ra': 1, 'ndr': 1, 'dra': 1, 'ge(': 1, 'e(1': 1, '(1,': 1, '1,1': 1, ',10': 1, '100': 1, '00)': 1, '0)\n': 1, ')\n#': 1, 'o t': 2, ' ta': 1, 'tak': 1, 'ake': 1, 'ke ': 1, 'a u': 1, ' us': 2, 'use': 2, 'ser': 2, 'er ': 10, 'r i': 3, ' in': 7, 'inp': 7, 'npu': 7, 'put': 7, 'ut ': 2, 't t': 1, 'o e': 1, ' en': 1, 'ent': 1, 'nte': 4, 'ter': 6, 'r a': 4, 'a n': 1, 'er\n': 1, 'r\ng': 1, '\ngu': 1, 'gue': 11, 'ues': 11, 'ess': 11, 'ss ': 8, 's =': 3, '= i': 3, 'int': 6, 'nt(': 6, 't(i': 3, '(in': 3, 'ut(': 3, 't(""': 6, '(""E': 3, '""En': 3, 'Ent': 3, ' an': 1, 'any': 1, 'ny ': 1, 'y n': 1, 'er:': 1, 'r: ': 1, ': ""': 3, ' "")': 3, '""))': 3, '))\n': 3, ')\nw': 1, '\nwh': 1, 'whi': 2, 'hil': 2, 'ile': 2, 'le ': 2, 'e n': 1, ' n!': 1, 'n!=': 1, '!= ': 1, '= g': 1, ' gu': 10, 'ss:': 1, 's: ': 1, ': #': 1, ' # ': 6, '# m': 1, ' me': 1, 'mea': 1, 'ean': 1, 'ans': 1, 'ns ': 1, 's i': 3, ' if': 5, 'if ': 6, 'f n': 1, ' n ': 2, 'n i': 1, ' is': 3, 'is ': 3, 's n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't e': 1, ' eq': 2, 'equ': 2, 'qua': 2, 'ual': 2, 'al ': 1, 'l t': 1, ' th': 5, 'the': 3, 'he ': 3, 'e i': 1, 't g': 1, 'ss\n': 1, 's\n ': 1, '\n  ': 13, '   ': 54, '  #': 5, '# i': 3, 'f g': 5, 's s': 1, ' sm': 1, 'sma': 1, 'mal': 1, 'all': 1, 'lle': 1, 'ler': 1, 'r t': 3, 'tha': 2, 'han': 2, 'an ': 2, 'n n': 2, ' n\n': 2, 'n\n ': 2, '  i': 1, 's <': 1, ' < ': 1, '< n': 1, ' n:': 2, 'n:\n': 2, ':\n ': 3, '  p': 2, ' pr': 2, 'pri': 3, 'rin': 3, '(""T': 2, '""To': 2, 'Too': 2, 'oo ': 2, 'o l': 1, ' lo': 2, 'low': 1, 'ow""': 1, 'w"")': 1, '"")\n': 3, ')\n ': 4, 'o a': 2, ' ag': 4, 'aga': 4, 'gai': 4, 'ain': 4, 'in ': 2, 'n a': 2, ' as': 2, 'ask': 2, 'sk ': 2, 'k f': 2, ' fo': 2, 'for': 2, 'or ': 2, 'ut\n': 2, 't\n ': 2, '  g': 2, 'r n': 2, 'in:': 2, 'n: ': 2, 's g': 2, ' gr': 1, 'gre': 1, '  e': 2, ' el': 2, 'eli': 1, 'lif': 1, 's >': 1, ' > ': 1, '> n': 1, 'o h': 1, ' hi': 1, 'hig': 1, 'igh': 2, 'gh!': 1, 'h!""': 1, '!"")': 2, 'e u': 1, ' ge': 1, 'get': 1, 'ets': 1, 'ts ': 1, 's e': 1, 'als': 1, 'ls ': 1, 's t': 1, 'o n': 1, 'n t': 1, ' te': 1, 'erm': 1, 'rmi': 1, 'min': 1, 'ina': 1, 'nat': 1, 'e t': 1, 'e w': 1, ' wh': 1, 'e l': 1, 'loo': 1, 'oop': 1, 'op\n': 1, 'p\n ': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, '  b': 1, ' br': 1, 'bre': 1, 'eak': 1, 'ak\n': 1, 'k\np': 1, '\npr': 1, '(""y': 1, '""yo': 1, 'you': 1, 'ou ': 1, 'u g': 1, 'sse': 1, 'sed': 1, 'ed ': 1, 'd i': 1, ' it': 1, 'it ': 1, ' ri': 1, 'rig': 1, 'ght': 1, 'ht!': 1, 't!!': 1, '!!""': 1}"
AMAN KHARWAL,Quiz_game.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'def': 1, 'check_guess(guess,': 1, 'answer):': 1, 'global': 1, 'score': 5, 'still_guessing': 3, '=': 10, 'true': 1, 'attempt': 6, '0': 2, 'while': 1, 'and': 1, '<': 2, '3:': 2, 'if': 3, 'guess.lower()': 1, '==': 2, 'answer.lower():': 1, 'print(""correct': 1, 'answer"")': 1, '+': 2, '1': 2, 'false': 1, 'else:': 1, '2:': 1, 'guess': 1, 'input(""sorry': 1, 'wrong': 1, 'answer,': 1, 'try': 1, 'again"")': 1, 'print(""the': 1, 'correct': 1, 'answer': 1, 'is': 4, '"",answer': 1, ')': 1, 'print(""guess': 1, 'the': 4, 'animal"")': 1, 'guess1': 1, 'input(""which': 3, 'bear': 1, 'lives': 1, 'at': 1, 'north': 1, 'pole?': 1, '"")': 3, 'check_guess(guess1,': 1, '""polar': 1, 'bear"")': 1, 'guess2': 1, 'fastest': 1, 'land': 1, 'animal?': 2, 'check_guess(guess2,': 1, '""cheetah"")': 1, 'guess3': 1, 'larget': 1, 'check_guess(guess3,': 1, '""blue': 1, 'whale"")': 1, 'print(""your': 1, '""+': 1, 'str(score))': 1}","{'def': 1, 'ef ': 1, 'f c': 1, ' ch': 1, 'che': 4, 'hec': 4, 'eck': 4, 'ck_': 4, 'k_g': 4, '_gu': 7, 'gue': 16, 'ues': 17, 'ess': 17, 'ss(': 4, 's(g': 4, '(gu': 4, 'ss,': 1, 's, ': 1, ', a': 1, ' an': 6, 'ans': 4, 'nsw': 6, 'swe': 6, 'wer': 8, 'er)': 1, 'r):': 1, '):\n': 2, ':\n ': 6, '\n  ': 15, '   ': 94, '  g': 2, ' gl': 1, 'glo': 1, 'lob': 1, 'oba': 1, 'bal': 1, 'al ': 1, 'l s': 1, ' sc': 3, 'sco': 5, 'cor': 6, 'ore': 6, 're\n': 1, 'e\n ': 3, '  s': 3, ' st': 4, 'sti': 3, 'til': 3, 'ill': 3, 'll_': 3, 'l_g': 3, 'ssi': 3, 'sin': 3, 'ing': 3, 'ng ': 4, 'g =': 2, ' = ': 10, '= T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1, '  a': 2, ' at': 7, 'att': 6, 'tte': 6, 'tem': 6, 'emp': 6, 'mpt': 6, 'pt ': 6, 't =': 3, '= 0': 2, ' 0\n': 2, '0\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e s': 1, 'g a': 1, 'and': 2, 'nd ': 2, 'd a': 2, 't <': 2, ' < ': 2, '< 3': 1, ' 3:': 2, '3:\n': 2, '  i': 3, ' if': 3, 'if ': 3, 'f g': 1, ' gu': 2, 'ss.': 1, 's.l': 1, '.lo': 2, 'low': 2, 'owe': 2, 'er(': 2, 'r()': 2, '() ': 1, ') =': 1, ' ==': 2, '== ': 2, '= a': 2, 'er.': 1, 'r.l': 1, '():': 1, '  p': 2, ' pr': 2, 'pri': 4, 'rin': 4, 'int': 4, 'nt(': 4, 't(""': 8, '(""C': 1, '""Co': 1, 'Cor': 2, 'orr': 3, 'rre': 2, 'rec': 2, 'ect': 2, 'ct ': 2, 't A': 1, ' An': 3, 'Ans': 2, 'er""': 1, 'r"")': 2, '"")\n': 9, ')\n ': 3, 're ': 4, 'e =': 2, '= s': 1, 'e +': 1, ' + ': 2, '+ 1': 2, ' 1\n': 2, '1\n ': 2, '= F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'lse': 2, 'se\n': 1, '  e': 1, ' el': 1, 'els': 1, 'se:': 1, 'e:\n': 1, 'f a': 2, '< 2': 1, ' 2:': 1, '2:\n': 1, 'ss ': 2, 's =': 1, '= i': 4, ' in': 4, 'inp': 4, 'npu': 4, 'put': 4, 'ut(': 4, '(""S': 1, '""So': 1, 'Sor': 1, 'rry': 1, 'ry ': 2, 'y W': 1, ' Wr': 1, 'Wro': 1, 'ron': 1, 'ong': 1, 'g A': 1, 'er,': 1, 'r, ': 1, ', t': 1, ' tr': 1, 'try': 1, 'y a': 1, ' ag': 1, 'aga': 1, 'gai': 1, 'ain': 1, 'in""': 1, 'n"")': 1, 't +': 1, '= 3': 1, '(""T': 1, '""Th': 1, 'The': 1, 'he ': 5, 'e C': 1, ' Co': 1, 't a': 2, 'er ': 2, 'r i': 1, ' is': 4, 'is ': 4, 's ""': 2, ' "",': 1, '"",a': 1, ',an': 1, 'r )': 1, ' )\n': 1, '  \n': 1, ' \ns': 1, '\nsc': 1, '0\np': 1, '\npr': 2, '(""G': 1, '""Gu': 1, 'Gue': 1, 's t': 3, ' th': 4, 'the': 4, 'e A': 1, 'Ani': 1, 'nim': 3, 'ima': 3, 'mal': 3, 'al""': 1, 'l"")': 1, ')\ng': 3, '\ngu': 3, 'ss1': 2, 's1 ': 1, '1 =': 1, '(""W': 3, '""Wh': 3, 'Whi': 3, 'hic': 3, 'ich': 3, 'ch ': 3, 'h b': 1, ' be': 2, 'bea': 2, 'ear': 2, 'ar ': 2, 'r l': 1, ' li': 1, 'liv': 1, 'ive': 1, 'ves': 1, 'es ': 1, 's a': 1, 'at ': 1, 't t': 1, 'e N': 1, ' No': 1, 'Nor': 1, 'ort': 1, 'rth': 1, 'th ': 1, 'h P': 1, ' Po': 1, 'Pol': 1, 'ole': 1, 'le?': 1, 'e? ': 1, '? ""': 3, ' "")': 3, ')\nc': 3, '\nch': 3, 's1,': 1, '1, ': 1, ', ""': 3, ' ""p': 1, '""po': 1, 'pol': 1, 'ola': 1, 'lar': 2, 'r b': 1, 'ar""': 1, 'ss2': 2, 's2 ': 1, '2 =': 1, 'h i': 2, 'e f': 1, ' fa': 1, 'fas': 1, 'ast': 1, 'ste': 1, 'tes': 1, 'est': 1, 'st ': 1, 't l': 1, ' la': 2, 'lan': 1, 'ani': 2, 'al?': 2, 'l? ': 2, 's2,': 1, '2, ': 1, ' ""C': 1, '""Ch': 1, 'Che': 1, 'hee': 1, 'eet': 1, 'eta': 1, 'tah': 1, 'ah""': 1, 'h"")': 1, 'ss3': 2, 's3 ': 1, '3 =': 1, 'e l': 1, 'arg': 1, 'rge': 1, 'get': 1, 'et ': 1, 's3,': 1, '3, ': 1, ' ""B': 1, '""Bl': 1, 'Blu': 1, 'lue': 1, 'ue ': 1, 'e W': 1, ' Wh': 1, 'Wha': 1, 'hal': 1, 'ale': 1, 'le""': 1, 'e"")': 1, ')\np': 1, '(""Y': 1, '""Yo': 1, 'You': 1, 'our': 1, 'ur ': 1, 'r S': 1, ' Sc': 1, 'Sco': 1, 'e i': 1, ' ""+': 1, '""+ ': 1, '+ s': 1, 'str': 1, 'tr(': 1, 'r(s': 1, '(sc': 1, 're)': 1, 'e))': 1, '))\n': 1}"
AMAN KHARWAL,rainy.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 4, 'numpy': 1, 'as': 3, 'np': 1, 'pandas': 1, 'pd': 1, 'data': 1, '=': 3, 'pd.read_csv(""seattle2014.csv"")': 1, 'print(data.head())': 1, 'rainfall': 1, 'data[""prcp""].values': 1, 'inches': 1, 'rainfall/254': 1, 'print(inches.shape)': 1, 'matplotlib.pyplot': 1, 'plt': 1, 'seaborn': 1, 'seaborn.set()': 1, 'plt.hist(inches,': 1, '40)': 1, 'plt.show()': 1, 'print(""number': 4, 'of': 4, 'days': 4, 'without': 1, 'rain:': 2, '"",': 4, 'np.sum(inches': 2, '==': 1, '0))': 2, 'with': 3, '!=': 1, 'rain': 2, 'more': 1, 'than': 1, '0.5': 1, 'inches:': 2, 'np.sum(inches>0.5))': 1, '<': 2, '0.2': 1, 'np.sum((inches': 1, '>': 1, '0)&': 1, '(inches': 1, '0.2)))': 1}","{'imp': 4, 'mpo': 4, 'por': 4, 'ort': 4, 'rt ': 4, 't n': 1, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 3, 'as ': 4, 's n': 1, ' np': 5, 'np\n': 1, 'p\ni': 1, '\nim': 3, 't p': 1, ' pa': 1, 'pan': 1, 'and': 1, 'nda': 1, 'das': 1, 's a': 1, 's p': 2, ' pd': 2, 'pd\n': 1, 'd\n\n': 1, '\n\nd': 1, '\nda': 1, 'dat': 3, 'ata': 3, 'ta ': 1, 'a =': 1, ' = ': 3, '= p': 1, 'pd.': 1, 'd.r': 1, '.re': 1, 'rea': 1, 'ead': 2, 'ad_': 1, 'd_c': 1, '_cs': 1, 'csv': 2, 'sv(': 1, 'v(""': 1, '(""S': 1, '""Se': 1, 'Sea': 1, 'eat': 1, 'att': 1, 'ttl': 1, 'tle': 1, 'le2': 1, 'e20': 1, '201': 1, '014': 1, '14.': 1, '4.c': 1, '.cs': 1, 'sv""': 1, 'v"")': 1, '"")\n': 1, ')\np': 6, '\npr': 6, 'pri': 6, 'rin': 6, 'int': 6, 'nt(': 6, 't(d': 1, '(da': 1, 'ta.': 1, 'a.h': 1, '.he': 1, 'hea': 1, 'ad(': 1, 'd()': 1, '())': 1, '))\n': 5, ')\n\n': 4, '\n\nr': 1, '\nra': 1, 'rai': 6, 'ain': 6, 'inf': 2, 'nfa': 2, 'fal': 2, 'all': 2, 'll ': 1, 'l =': 1, '= d': 1, ' da': 5, 'ta[': 1, 'a[""': 1, '[""P': 1, '""PR': 1, 'PRC': 1, 'RCP': 1, 'CP""': 1, 'P""]': 1, '""].': 1, '].v': 1, '.va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ues': 1, 'es\n': 1, 's\ni': 1, '\nin': 1, 'inc': 10, 'nch': 10, 'che': 10, 'hes': 10, 'es ': 5, 's =': 2, '= r': 1, ' ra': 5, 'll/': 1, 'l/2': 1, '/25': 1, '254': 1, '54\n': 1, '4\np': 1, 't(i': 2, '(in': 7, 'es.': 1, 's.s': 1, '.sh': 2, 'sha': 1, 'hap': 1, 'ape': 1, 'pe)': 1, 'e)\n': 1, '\n\ni': 1, 't m': 1, ' ma': 1, 'mat': 1, 'atp': 1, 'tpl': 1, 'plo': 2, 'lot': 2, 'otl': 1, 'tli': 1, 'lib': 1, 'ib.': 1, 'b.p': 1, '.py': 1, 'pyp': 1, 'ypl': 1, 'ot ': 1, 't a': 1, ' pl': 1, 'plt': 3, 'lt\n': 1, 't\ni': 1, 't s': 1, ' se': 1, 'sea': 2, 'eab': 2, 'abo': 2, 'bor': 2, 'orn': 2, 'rn\n': 1, 'n\ns': 1, '\nse': 1, 'rn.': 1, 'n.s': 1, '.se': 1, 'set': 1, 'et(': 1, 't()': 1, '()\n': 2, '\npl': 2, 'lt.': 2, 't.h': 1, '.hi': 1, 'his': 1, 'ist': 1, 'st(': 1, 'es,': 1, 's, ': 1, ', 4': 1, ' 40': 1, '40)': 1, '0)\n': 1, 't.s': 1, 'sho': 1, 'how': 1, 'ow(': 1, 'w()': 1, '\n\np': 1, 't(""': 4, '(""N': 4, '""Nu': 4, 'Num': 4, 'umb': 4, 'mbe': 4, 'ber': 4, 'er ': 4, 'r o': 4, ' of': 4, 'of ': 4, 'f d': 4, 'day': 4, 'ays': 4, 'ys ': 4, 's w': 4, ' wi': 4, 'wit': 4, 'ith': 4, 'tho': 1, 'hou': 1, 'out': 1, 'ut ': 1, 't r': 1, 'in:': 2, 'n: ': 2, ': ""': 4, ' "",': 4, '"", ': 4, ', n': 4, 'np.': 4, 'p.s': 4, '.su': 4, 'sum': 4, 'um(': 4, 'm(i': 3, ' ==': 1, '== ': 1, '= 0': 2, ' 0)': 3, '0))': 2, 'th ': 3, 'h r': 3, 's !': 1, ' !=': 1, '!= ': 1, 'in ': 2, 'n m': 1, ' mo': 1, 'mor': 1, 'ore': 1, 're ': 1, 'e t': 1, ' th': 1, 'tha': 1, 'han': 1, 'an ': 1, 'n 0': 1, ' 0.': 3, '0.5': 2, '.5 ': 1, '5 i': 1, ' in': 2, 'es:': 2, 's: ': 2, 'es>': 1, 's>0': 1, '>0.': 1, '.5)': 1, '5))': 1, 'n <': 1, ' < ': 2, '< 0': 2, '0.2': 2, '.2 ': 1, '2 i': 1, 'm((': 1, '((i': 1, 's >': 1, ' > ': 1, '> 0': 1, '0)&': 1, ')& ': 1, '& (': 1, ' (i': 1, 's <': 1, '.2)': 1, '2))': 1, ')))': 1}"
AMAN KHARWAL,rock.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'random': 1, 'choices': 1, '=': 6, '[""rock"",': 1, '""paper"",': 1, '""scissors""]': 1, 'computer': 4, 'random.choice(choices)': 1, 'player': 6, 'false': 1, 'cpu_score': 1, '0': 2, 'player_score': 1, 'while': 1, 'true:': 1, 'input(""rock,': 1, 'paper': 1, 'or': 1, 'scissors?"").capitalize()': 1, '##': 1, 'conditions': 1, 'of': 1, 'rock,paper': 1, 'and': 1, 'scissors': 1, 'if': 4, '==': 7, 'computer:': 1, 'print(""tie!"")': 1, 'elif': 4, '""rock"":': 2, '""paper"":': 2, 'print(""you': 6, 'lose!"",': 2, 'computer,': 3, '""covers"",': 2, 'player)': 3, 'cpu_score+=1': 3, 'else:': 3, 'win!"",': 3, 'player,': 3, '""smashes"",': 2, 'computer)': 3, 'player_score+=1': 3, '""scissors"":': 2, '""cut"",': 2, 'lose..."",': 1, ""player=='end':"": 1, 'print(""final': 1, 'scores:"")': 1, 'print(f""cpu:{cpu_score}"")': 1, 'print(f""plaer:{player_score}"")': 1, 'break': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't r': 1, ' ra': 2, 'ran': 2, 'and': 3, 'ndo': 2, 'dom': 2, 'om\n': 1, 'm\nc': 1, '\nch': 1, 'cho': 3, 'hoi': 3, 'oic': 3, 'ice': 3, 'ces': 2, 'es ': 1, 's =': 1, ' = ': 6, '= [': 1, ' [""': 1, '[""R': 1, '""Ro': 4, 'Roc': 5, 'ock': 5, 'ck""': 3, 'k"",': 1, '"", ': 14, ', ""': 8, ' ""P': 3, '""Pa': 3, 'Pap': 5, 'ape': 5, 'per': 5, 'er""': 3, 'r"",': 1, ' ""S': 3, '""Sc': 3, 'Sci': 5, 'cis': 5, 'iss': 5, 'sso': 5, 'sor': 5, 'ors': 5, 'rs""': 5, 's""]': 1, '""]\n': 1, ']\nc': 1, '\nco': 1, 'com': 11, 'omp': 11, 'mpu': 11, 'put': 12, 'ute': 11, 'ter': 11, 'er ': 12, 'r =': 10, '= r': 1, 'om.': 1, 'm.c': 1, '.ch': 1, 'ce(': 1, 'e(c': 1, '(ch': 1, 'es)': 1, 's)\n': 1, ')\np': 1, '\npl': 2, 'pla': 18, 'lay': 18, 'aye': 18, 'yer': 18, '= F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'lse': 4, 'se\n': 1, 'e\nc': 1, '\ncp': 1, 'cpu': 5, 'pu_': 5, 'u_s': 5, '_sc': 10, 'sco': 10, 'cor': 11, 'ore': 11, 're ': 2, 'e =': 2, '= 0': 2, ' 0\n': 2, '0\np': 1, 'er_': 5, 'r_s': 5, '0\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue:': 1, 'e:\n': 4, ':\n ': 12, '\n  ': 30, '   ': 200, '  p': 14, ' pl': 15, '= i': 1, ' in': 1, 'inp': 1, 'npu': 1, 'ut(': 1, 't(""': 9, '(""R': 1, 'ck,': 2, 'k, ': 1, ', P': 1, ' Pa': 1, 'r o': 1, ' or': 1, 'or ': 1, 'r  ': 1, '  S': 1, ' Sc': 3, 'rs?': 1, 's?""': 1, '?"")': 1, '"").': 1, ').c': 1, '.ca': 1, 'cap': 1, 'api': 1, 'pit': 1, 'ita': 1, 'tal': 1, 'ali': 1, 'liz': 1, 'ize': 1, 'ze(': 1, 'e()': 1, '()\n': 1, ')\n ': 11, '  #': 1, ' ##': 1, '## ': 1, '# C': 1, ' Co': 1, 'Con': 1, 'ond': 1, 'ndi': 1, 'dit': 1, 'iti': 1, 'tio': 1, 'ion': 1, 'ons': 1, 'ns ': 1, 's o': 1, ' of': 1, 'of ': 1, 'f R': 1, ' Ro': 1, 'k,P': 1, ',Pa': 1, 'r a': 1, ' an': 1, 'nd ': 1, 'd S': 1, 'rs\n': 1, 's\n ': 1, '  i': 4, ' if': 4, 'if ': 8, 'f p': 5, ' ==': 7, '== ': 7, '= c': 1, ' co': 10, 'er:': 2, 'r:\n': 1, ' pr': 10, 'pri': 10, 'rin': 10, 'int': 10, 'nt(': 10, '(""T': 1, '""Ti': 1, 'Tie': 1, 'ie!': 1, 'e!""': 3, '!"")': 1, '"")\n': 4, '  e': 7, ' el': 7, 'eli': 4, 'lif': 4, '= ""': 6, ' ""R': 2, 'k"":': 2, '"":\n': 6, 'f c': 3, 'r"":': 2, '(""Y': 6, '""Yo': 6, 'You': 6, 'ou ': 6, 'u l': 3, ' lo': 3, 'los': 3, 'ose': 3, 'se!': 2, '!"",': 5, ', c': 6, 'er,': 6, 'r, ': 6, ' ""c': 4, '""co': 2, 'cov': 2, 'ove': 2, 'ver': 2, 'ers': 2, 's"",': 4, ', p': 6, 'er)': 6, 'r)\n': 6, '  c': 3, ' cp': 3, 're+': 6, 'e+=': 6, '+=1': 6, '=1\n': 6, '1\n ': 6, 'els': 3, 'se:': 3, 'u w': 3, ' wi': 3, 'win': 3, 'in!': 3, 'n!""': 3, ' ""s': 2, '""sm': 2, 'sma': 2, 'mas': 2, 'ash': 2, 'she': 2, 'hes': 2, 'es""': 2, 's"":': 2, '""cu': 2, 'cut': 2, 'ut""': 2, 't"",': 2, 'se.': 1, 'e..': 1, '...': 1, '..""': 1, '."",': 1, 'er=': 1, 'r==': 1, ""=='"": 1, ""='E"": 1, ""'En"": 1, 'End': 1, ""nd'"": 1, ""d':"": 1, ""':\n"": 1, '(""F': 1, '""Fi': 1, 'Fin': 1, 'ina': 1, 'nal': 1, 'al ': 1, 'l S': 1, 'Sco': 1, 'res': 1, 'es:': 1, 's:""': 1, ':"")': 1, 't(f': 2, '(f""': 2, 'f""C': 1, '""CP': 1, 'CPU': 1, 'PU:': 1, 'U:{': 1, ':{c': 1, '{cp': 1, 're}': 2, 'e}""': 2, '}"")': 2, 'f""P': 1, '""Pl': 1, 'Pla': 1, 'lae': 1, 'aer': 1, 'r:{': 1, ':{p': 1, '{pl': 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1}"
AMAN KHARWAL,video to audio.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'from': 1, 'pytube': 2, 'import': 3, 'youtube': 2, 'os': 1, 'def': 1, 'main():': 1, 'video_url': 1, '=': 6, ""input('enter"": 1, 'video': 1, 'url:': 1, ""')"": 1, 'if': 3, 'os.name': 2, '==': 3, ""'nt':"": 2, 'path': 4, 'os.getcwd()': 2, '+': 6, ""'\\\\'"": 1, 'else:': 2, ""'/'"": 1, 'name': 3, 'pytube.extract.video_id(video_url)': 1, 'youtube(video_url).streams.filter(only_audio=true).first().download(filename=name)': 1, 'location': 1, ""'.mp4'"": 1, 'renametomp3': 1, ""'.mp3'"": 1, ""os.system('ren"": 1, '{0}': 2, ""{1}'."": 2, 'format(location,': 2, 'renametomp3))': 2, ""os.system('mv"": 1, '__name__': 1, ""'__main__':"": 1, 'main()': 1}","{'fro': 1, 'rom': 1, 'om ': 1, 'm p': 1, ' py': 3, 'pyt': 3, 'ytu': 3, 'tub': 3, 'ube': 6, 'be ': 2, 'e i': 1, ' im': 1, 'imp': 3, 'mpo': 3, 'por': 3, 'ort': 3, 'rt ': 3, 't Y': 1, ' Yo': 3, 'You': 3, 'ouT': 3, 'uTu': 3, 'Tub': 3, 'be\n': 2, 'e\ni': 2, '\nim': 2, 't p': 1, 't o': 1, ' os': 7, 'os\n': 1, 's\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, 'n()': 2, '():': 1, '):\n': 1, ':\n ': 6, '\n  ': 15, '   ': 46, '  v': 1, ' vi': 2, 'vid': 5, 'ide': 5, 'deo': 5, 'eo_': 4, 'o_u': 3, '_ur': 3, 'url': 3, 'rl ': 1, 'l =': 1, ' = ': 6, '= i': 1, ' in': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut(': 1, ""t('"": 1, ""('E"": 1, ""'En"": 1, 'Ent': 1, 'nte': 1, 'ter': 2, 'er ': 1, 'r Y': 1, 'e v': 1, 'eo ': 1, 'o U': 1, ' UR': 1, 'URL': 1, 'RL:': 1, 'L: ': 1, "": '"": 1, "" ')"": 1, ""')\n"": 1, ')\n\n': 1, '\n\n ': 3, '  i': 2, ' if': 2, 'if ': 3, 'f o': 2, 'os.': 6, 's.n': 2, '.na': 2, 'nam': 11, 'ame': 11, 'me ': 5, 'e =': 3, ' ==': 3, '== ': 3, ""= '"": 3, "" 'n"": 2, ""'nt"": 2, ""nt'"": 2, ""t':"": 2, ""':\n"": 3, '  p': 2, ' pa': 4, 'pat': 4, 'ath': 4, 'th ': 4, 'h =': 2, '= o': 2, 's.g': 2, '.ge': 2, 'get': 2, 'etc': 2, 'tcw': 2, 'cwd': 2, 'wd(': 2, 'd()': 2, '() ': 2, ') +': 2, ' + ': 6, ""+ '"": 4, "" '\\"": 1, ""'\\\\"": 1, ""\\\\'"": 1, ""\\'\n"": 1, ""'\n "": 2, '  e': 2, ' el': 2, 'els': 2, 'lse': 2, 'se:': 2, 'e:\n': 2, "" '/"": 1, ""'/'"": 1, ""/'\n"": 1, ""'\n\n"": 2, '  n': 1, ' na': 3, '= p': 3, 'be.': 1, 'e.e': 1, '.ex': 1, 'ext': 1, 'xtr': 1, 'tra': 1, 'rac': 1, 'act': 1, 'ct.': 1, 't.v': 1, '.vi': 1, 'o_i': 1, '_id': 1, 'id(': 1, 'd(v': 1, '(vi': 2, 'rl)': 2, 'l)\n': 1, ')\n ': 4, '  Y': 1, 'be(': 1, 'e(v': 1, 'l).': 1, ').s': 1, '.st': 1, 'str': 1, 'tre': 1, 'rea': 1, 'eam': 1, 'ams': 1, 'ms.': 1, 's.f': 1, '.fi': 2, 'fil': 2, 'ilt': 1, 'lte': 1, 'er(': 1, 'r(o': 1, '(on': 1, 'onl': 1, 'nly': 1, 'ly_': 1, 'y_a': 1, '_au': 1, 'aud': 1, 'udi': 1, 'dio': 1, 'io=': 1, 'o=T': 1, '=Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e).': 1, ').f': 1, 'fir': 1, 'irs': 1, 'rst': 1, 'st(': 1, 't()': 1, '().': 1, ').d': 1, '.do': 1, 'dow': 1, 'own': 1, 'wnl': 1, 'nlo': 1, 'loa': 1, 'oad': 1, 'ad(': 1, 'd(f': 1, '(fi': 1, 'ile': 1, 'len': 1, 'ena': 4, 'me=': 1, 'e=n': 1, '=na': 1, 'me)': 1, 'e)\n': 1, '  l': 1, ' lo': 1, 'loc': 3, 'oca': 3, 'cat': 3, 'ati': 3, 'tio': 3, 'ion': 3, 'on ': 1, 'n =': 1, 'h +': 2, '+ n': 2, 'e +': 2, "" '."": 2, ""'.m"": 2, '.mp': 2, 'mp4': 1, ""p4'"": 1, ""4'\n"": 1, '  r': 1, ' re': 3, 'ren': 4, 'met': 3, 'eto': 3, 'tom': 3, 'omp': 3, 'mp3': 4, 'p3 ': 1, '3 =': 1, ""p3'"": 1, ""3'\n"": 1, '  o': 2, 's.s': 2, '.sy': 2, 'sys': 2, 'yst': 2, 'ste': 2, 'tem': 2, 'em(': 2, ""m('"": 2, ""('r"": 1, ""'re"": 1, 'en ': 1, 'n {': 1, ' {0': 2, '{0}': 2, '0} ': 2, '} {': 2, ' {1': 2, '{1}': 2, ""1}'"": 2, ""}'."": 2, ""'. "": 2, '. f': 2, ' fo': 2, 'for': 2, 'orm': 2, 'rma': 2, 'mat': 2, 'at(': 2, 't(l': 2, '(lo': 2, 'on,': 2, 'n, ': 2, ', r': 2, 'p3)': 2, '3))': 2, '))\n': 2, ""('m"": 1, ""'mv"": 1, 'mv ': 1, 'v {': 1, '  \n': 1, ' \ni': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, '  m': 1, '()\n': 1}"
AMAN KHARWAL,video to text.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 3, 'speech_recognition': 1, 'as': 3, 'sr': 1, 'moviepy.editor': 1, 'mp': 1, 'from': 1, 'moviepy.video.io.ffmpeg_tools': 1, 'ffmpeg_extract_subclip': 1, 'num_seconds_video=': 1, '52*60': 1, 'print(""the': 1, 'video': 1, 'is': 1, '{}': 1, 'seconds"".format(num_seconds_video))': 1, 'l=list(range(0,num_seconds_video+1,60))': 1, 'diz={}': 1, 'for': 1, 'i': 1, 'in': 1, 'range(len(l)-1):': 1, 'ffmpeg_extract_subclip(""videorl.mp4"",': 1, 'l[i]-2*(l[i]!=0),': 1, 'l[i+1],': 1, 'targetname=""chunks/cut{}.mp4"".format(i+1))': 1, 'clip': 1, '=': 5, 'mp.videofileclip(r""chunks/cut{}.mp4"".format(i+1))': 1, 'clip.audio.write_audiofile(r""converted/converted{}.wav"".format(i+1))': 1, 'r': 1, 'sr.recognizer()': 1, 'audio': 2, 'sr.audiofile(""converted/converted{}.wav"".format(i+1))': 1, 'with': 1, 'source:': 1, 'r.adjust_for_ambient_noise(source)': 1, 'audio_file': 1, 'r.record(source)': 1, 'result': 1, 'r.recognize_google(audio_file)': 1, ""diz['chunk{}'.format(i+1)]=result"": 1}","{'imp': 3, 'mpo': 3, 'por': 3, 'ort': 3, 'rt ': 3, 't s': 1, ' sp': 1, 'spe': 1, 'pee': 1, 'eec': 1, 'ech': 1, 'ch_': 1, 'h_r': 1, '_re': 1, 'rec': 3, 'eco': 8, 'cog': 3, 'ogn': 3, 'gni': 3, 'nit': 1, 'iti': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n a': 1, ' as': 3, 'as ': 3, 's s': 2, ' sr': 3, 'sr ': 1, 'r \n': 1, ' \ni': 1, '\nim': 1, 't m': 1, ' mo': 2, 'mov': 2, 'ovi': 2, 'vie': 2, 'iep': 2, 'epy': 2, 'py.': 2, 'y.e': 1, '.ed': 1, 'edi': 1, 'dit': 1, 'ito': 1, 'tor': 1, 'or ': 2, 'r a': 1, 's m': 1, ' mp': 2, 'mp\n': 1, 'p\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm m': 1, 'y.v': 1, '.vi': 1, 'vid': 6, 'ide': 7, 'deo': 7, 'eo.': 1, 'o.i': 1, '.io': 1, 'io.': 2, 'o.f': 1, '.ff': 1, 'ffm': 3, 'fmp': 3, 'mpe': 3, 'peg': 3, 'eg_': 3, 'g_t': 1, '_to': 1, 'too': 1, 'ool': 1, 'ols': 1, 'ls ': 1, 's i': 1, ' im': 1, 't f': 1, ' ff': 2, 'g_e': 2, '_ex': 2, 'ext': 2, 'xtr': 2, 'tra': 2, 'rac': 2, 'act': 2, 'ct_': 2, 't_s': 2, '_su': 2, 'sub': 2, 'ubc': 2, 'bcl': 2, 'cli': 4, 'lip': 5, 'ip\n': 1, 'p\n\n': 1, '\n\nn': 1, '\nnu': 1, 'num': 3, 'um_': 3, 'm_s': 3, '_se': 3, 'sec': 4, 'con': 8, 'ond': 4, 'nds': 4, 'ds_': 3, 's_v': 3, '_vi': 3, 'eo=': 1, 'o= ': 1, '= 5': 1, ' 52': 1, '52*': 1, '2*6': 1, '*60': 1, '60\n': 1, '0\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 't(""': 1, '(""T': 1, '""Th': 1, 'The': 1, 'he ': 1, 'e v': 1, ' vi': 1, 'eo ': 1, 'o i': 1, ' is': 1, 'is ': 1, 's {': 1, ' {}': 1, '{} ': 1, '} s': 1, ' se': 1, 'ds""': 1, 's"".': 1, '"".f': 5, '.fo': 6, 'for': 8, 'orm': 6, 'rma': 6, 'mat': 6, 'at(': 6, 't(n': 1, '(nu': 1, 'eo)': 1, 'o))': 1, '))\n': 5, ')\nl': 1, '\nl=': 1, 'l=l': 1, '=li': 1, 'lis': 1, 'ist': 1, 'st(': 1, 't(r': 1, '(ra': 1, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(0': 1, '(0,': 1, '0,n': 1, ',nu': 1, 'eo+': 1, 'o+1': 1, '+1,': 1, '1,6': 1, ',60': 1, '60)': 1, '0))': 1, ')\n\n': 1, '\n\nd': 1, '\ndi': 1, 'diz': 2, 'iz=': 1, 'z={': 1, '={}': 1, '{}\n': 1, '}\nf': 1, '\nfo': 1, 'r i': 1, ' i ': 1, 'i i': 1, ' in': 1, 'in ': 1, 'n r': 1, ' ra': 1, 'e(l': 1, '(le': 1, 'len': 1, 'en(': 1, 'n(l': 1, '(l)': 1, 'l)-': 1, ')-1': 1, '-1)': 1, '1):': 1, '):\n': 1, ':\n ': 2, '\n  ': 10, '   ': 24, '  f': 1, 'ip(': 2, 'p(""': 1, '(""v': 1, '""vi': 1, 'eor': 1, 'orl': 1, 'rl.': 1, 'l.m': 1, '.mp': 3, 'mp4': 3, 'p4""': 3, '4"",': 1, '"", ': 1, ', l': 2, ' l[': 2, 'l[i': 3, '[i]': 2, 'i]-': 1, ']-2': 1, '-2*': 1, '2*(': 1, '*(l': 1, '(l[': 1, 'i]!': 1, ']!=': 1, '!=0': 1, '=0)': 1, '0),': 1, '), ': 1, '[i+': 1, 'i+1': 6, '+1]': 1, '1],': 1, '], ': 1, ', t': 1, ' ta': 1, 'tar': 1, 'arg': 1, 'rge': 1, 'get': 1, 'etn': 1, 'tna': 1, 'nam': 1, 'ame': 1, 'me=': 1, 'e=""': 1, '=""c': 1, '""ch': 2, 'chu': 3, 'hun': 3, 'unk': 3, 'nks': 2, 'ks/': 2, 's/c': 2, '/cu': 2, 'cut': 2, 'ut{': 2, 't{}': 2, '{}.': 4, '}.m': 2, '4"".': 2, 't(i': 5, '(i+': 5, '+1)': 5, '1))': 4, ')\n ': 6, '  c': 2, ' cl': 2, 'ip ': 1, 'p =': 1, ' = ': 5, '= m': 1, 'mp.': 1, 'p.V': 1, '.Vi': 1, 'Vid': 1, 'eoF': 1, 'oFi': 2, 'Fil': 2, 'ile': 5, 'leC': 1, 'eCl': 1, 'Cli': 1, 'p(r': 1, '(r""': 2, 'r""c': 2, ')) ': 1, ') \n': 1, ' \n ': 2, 'ip.': 1, 'p.a': 1, '.au': 1, 'aud': 6, 'udi': 7, 'dio': 7, 'o.w': 1, '.wr': 1, 'wri': 1, 'rit': 1, 'ite': 1, 'te_': 1, 'e_a': 1, '_au': 1, 'iof': 1, 'ofi': 1, 'fil': 3, 'le(': 3, 'e(r': 1, '""co': 2, 'onv': 4, 'nve': 4, 'ver': 4, 'ert': 4, 'rte': 4, 'ted': 4, 'ed/': 2, 'd/c': 2, '/co': 2, 'ed{': 2, 'd{}': 2, '}.w': 2, '.wa': 2, 'wav': 2, 'av""': 2, 'v"".': 2, '  r': 3, ' r ': 1, 'r =': 1, '= s': 2, 'sr.': 2, 'r.R': 1, '.Re': 1, 'Rec': 1, 'niz': 2, 'ize': 2, 'zer': 1, 'er(': 1, 'r()': 1, '()\n': 1, '  a': 2, ' au': 3, 'io ': 2, 'o =': 1, 'r.A': 1, '.Au': 1, 'Aud': 1, 'ioF': 1, 'e(""': 1, '(""c': 1, '  w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'th ': 1, 'h a': 1, 'o a': 1, ' so': 1, 'sou': 3, 'our': 3, 'urc': 3, 'rce': 3, 'ce:': 1, 'e:\n': 1, ' r.': 3, 'r.a': 1, '.ad': 1, 'adj': 1, 'dju': 1, 'jus': 1, 'ust': 1, 'st_': 1, 't_f': 1, '_fo': 1, 'or_': 1, 'r_a': 1, '_am': 1, 'amb': 1, 'mbi': 1, 'bie': 1, 'ien': 1, 'ent': 1, 'nt_': 1, 't_n': 1, '_no': 1, 'noi': 1, 'ois': 1, 'ise': 1, 'se(': 1, 'e(s': 1, '(so': 2, 'ce)': 2, 'e) ': 1, ')  ': 1, '  \n': 1, 'io_': 2, 'o_f': 2, '_fi': 2, 'le ': 1, 'e =': 1, '= r': 2, 'r.r': 2, '.re': 2, 'cor': 1, 'ord': 1, 'rd(': 1, 'd(s': 1, 'e)\n': 2, ' re': 1, 'res': 2, 'esu': 2, 'sul': 2, 'ult': 2, 'lt ': 1, 't =': 1, 'ze_': 1, 'e_g': 1, '_go': 1, 'goo': 1, 'oog': 1, 'ogl': 1, 'gle': 1, 'e(a': 1, '(au': 1, 'le)': 1, '  d': 1, ' di': 1, 'iz[': 1, ""z['"": 1, ""['c"": 1, ""'ch"": 1, 'nk{': 1, 'k{}': 1, ""{}'"": 1, ""}'."": 1, ""'.f"": 1, '1)]': 1, ')]=': 1, ']=r': 1, '=re': 1, 'lt\n': 1}"
AMAN KHARWAL,weight converter.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'from': 1, 'tkinter': 1, 'import': 1, '*': 1, '#': 1, 'creating': 1, 'a': 1, 'gui': 1, 'window': 2, '=': 14, 'tk()': 1, 'def': 1, 'from_kg():': 1, 'gram': 1, 'float(e2_value.get())*1000': 1, 'pound': 1, 'float(e2_value.get())*2.20462': 1, 'ounce': 1, 'float(e2_value.get())*35.274': 1, 't1.delete(""1.0"",end)': 1, 't1.insert(end,': 1, 'gram)': 1, 't2.delete(""1.0"",': 1, 'end)': 2, 't2.insert(end,': 1, 'pound)': 1, 't3.delete(""1.0"",': 1, 't3.insert(end,': 1, 'ounce)': 1, 'e1': 1, 'label(window,': 4, 'text=""input': 1, 'the': 1, 'weight': 1, 'in': 1, 'kg"")': 1, 'e2_value': 1, 'stringvar()': 1, 'e2': 1, 'entry(window,': 1, 'textvariable=e2_value)': 1, 'e3': 1, 'text=""gram"")': 1, 'e4': 1, 'text=""pound"")': 1, 'e5': 1, 'text=""ounce"")': 1, 't1': 1, 'text(window,': 3, 'height=5,': 3, 'width=30)': 3, 't2': 1, 't3': 1, 'b1': 1, 'button(window,': 1, 'text=""convert"",': 1, 'command=from_kg)': 1, 'e1.grid(row=0,': 1, 'column=0)': 3, 'e2.grid(row=0,': 1, 'column=1)': 3, 'e3.grid(row=1,': 1, 'e4.grid(row=1,': 1, 'e5.grid(row=1,': 1, 'column=2)': 3, 't1.grid(row=2,': 1, 't2.grid(row=2,': 1, 't3.grid(row=2,': 1, 'b1.grid(row=0,': 1, 'window.mainloop()': 1}","{'fro': 3, 'rom': 3, 'om ': 1, 'm t': 1, ' tk': 1, 'tki': 1, 'kin': 1, 'int': 1, 'nte': 1, 'ter': 1, 'er ': 1, 'r i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't *': 1, ' *\n': 1, '*\n#': 1, '\n# ': 1, '# C': 1, ' Cr': 1, 'Cre': 1, 'rea': 1, 'eat': 1, 'ati': 1, 'tin': 1, 'ing': 2, 'ng ': 1, 'g a': 1, ' a ': 1, 'a G': 1, ' GU': 1, 'GUI': 1, 'UI ': 1, 'I W': 1, ' Wi': 1, 'Win': 1, 'ind': 12, 'ndo': 12, 'dow': 12, 'ow\n': 1, 'w\nw': 1, '\nwi': 2, 'win': 11, 'ow ': 1, 'w =': 1, ' = ': 14, '= T': 4, ' Tk': 1, 'Tk(': 1, 'k()': 1, '()\n': 3, ')\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f f': 1, ' fr': 1, 'om_': 2, 'm_k': 2, '_kg': 2, 'kg(': 1, 'g()': 1, '():': 1, '):\n': 1, ':\n ': 1, '\n  ': 9, '   ': 18, '  g': 1, ' gr': 2, 'gra': 2, 'ram': 3, 'am ': 1, 'm =': 1, '= f': 3, ' fl': 3, 'flo': 3, 'loa': 3, 'oat': 3, 'at(': 3, 't(e': 3, '(e2': 3, 'e2_': 5, '2_v': 5, '_va': 5, 'val': 5, 'alu': 5, 'lue': 5, 'ue.': 3, 'e.g': 3, '.ge': 3, 'get': 3, 'et(': 3, 't()': 3, '())': 3, '))*': 3, ')*1': 1, '*10': 1, '100': 1, '000': 1, '00\n': 1, '0\n ': 1, '  p': 1, ' po': 2, 'pou': 2, 'oun': 5, 'und': 3, 'nd ': 1, 'd =': 1, ')*2': 1, '*2.': 1, '2.2': 1, '.20': 1, '204': 1, '046': 1, '462': 1, '62\n': 1, '2\n ': 1, '  o': 1, ' ou': 2, 'unc': 3, 'nce': 3, 'ce ': 1, 'e =': 2, ')*3': 1, '*35': 1, '35.': 1, '5.2': 1, '.27': 1, '274': 1, '74\n': 1, '4\n ': 1, '  t': 6, ' t1': 2, 't1.': 3, '1.d': 1, '.de': 3, 'del': 3, 'ele': 3, 'let': 3, 'ete': 3, 'te(': 3, 'e(""': 3, '(""1': 3, '""1.': 3, '1.0': 3, '.0""': 3, '0"",': 3, '"",E': 1, ',EN': 1, 'END': 6, 'ND)': 3, 'D)\n': 3, ')\n ': 5, '1.i': 1, '.in': 3, 'ins': 3, 'nse': 3, 'ser': 3, 'ert': 4, 'rt(': 3, 't(E': 3, '(EN': 3, 'ND,': 3, 'D, ': 3, ', g': 1, 'am)': 1, 'm)\n': 1, ' t2': 2, 't2.': 3, '2.d': 1, '"", ': 3, ', E': 2, ' EN': 2, '2.i': 1, ', p': 1, 'nd)': 1, 'd)\n': 1, ' t3': 2, 't3.': 3, '3.d': 1, '3.i': 1, ', o': 1, 'ce)': 1, 'e)\n': 2, ')\n\n': 5, '\n\ne': 2, '\ne1': 2, 'e1 ': 1, '1 =': 3, '= L': 4, ' La': 4, 'Lab': 4, 'abe': 4, 'bel': 4, 'el(': 4, 'l(w': 4, '(wi': 9, 'ow,': 9, 'w, ': 9, ', t': 6, ' te': 6, 'tex': 6, 'ext': 9, 'xt=': 5, 't=""': 5, '=""I': 1, '""In': 1, 'Inp': 1, 'npu': 1, 'put': 1, 'ut ': 1, 't t': 1, ' th': 1, 'the': 1, 'he ': 1, 'e w': 1, ' we': 1, 'wei': 1, 'eig': 4, 'igh': 4, 'ght': 4, 'ht ': 1, 't i': 1, ' in': 1, 'in ': 1, 'n K': 1, ' KG': 1, 'KG""': 1, 'G"")': 1, '"")\n': 4, ')\ne': 9, '\ne2': 3, 'ue ': 1, '= S': 1, ' St': 1, 'Str': 1, 'tri': 1, 'rin': 1, 'ngV': 1, 'gVa': 1, 'Var': 1, 'ar(': 1, 'r()': 1, 'e2 ': 1, '2 =': 2, '= E': 1, ' En': 1, 'Ent': 1, 'ntr': 1, 'try': 1, 'ry(': 1, 'y(w': 1, 'xtv': 1, 'tva': 1, 'var': 1, 'ari': 1, 'ria': 1, 'iab': 1, 'abl': 1, 'ble': 1, 'le=': 1, 'e=e': 1, '=e2': 1, 'ue)': 1, '\ne3': 2, 'e3 ': 1, '3 =': 2, '=""G': 1, '""Gr': 1, 'Gra': 1, 'am""': 1, 'm"")': 1, '\ne4': 2, 'e4 ': 1, '4 =': 1, '=""P': 1, '""Po': 1, 'Pou': 1, 'nd""': 1, 'd"")': 1, '\ne5': 2, 'e5 ': 1, '5 =': 1, '=""O': 1, '""Ou': 1, 'Oun': 1, 'ce""': 1, 'e"")': 1, '\n\nt': 1, '\nt1': 2, 't1 ': 1, ' Te': 3, 'Tex': 3, 'xt(': 3, 't(w': 3, ', h': 3, ' he': 3, 'hei': 3, 'ht=': 3, 't=5': 3, '=5,': 3, '5, ': 3, ', w': 3, ' wi': 3, 'wid': 3, 'idt': 3, 'dth': 3, 'th=': 3, 'h=3': 3, '=30': 3, '30)': 3, '0)\n': 6, ')\nt': 5, '\nt2': 2, 't2 ': 1, '\nt3': 2, 't3 ': 1, '\n\nb': 1, '\nb1': 2, 'b1 ': 1, '= B': 1, ' Bu': 1, 'But': 1, 'utt': 1, 'tto': 1, 'ton': 1, 'on(': 1, 'n(w': 1, '=""C': 1, '""Co': 1, 'Con': 1, 'onv': 1, 'nve': 1, 'ver': 1, 'rt""': 1, 't"",': 1, ', c': 10, ' co': 10, 'com': 1, 'omm': 1, 'mma': 1, 'man': 1, 'and': 1, 'nd=': 1, 'd=f': 1, '=fr': 1, 'kg)': 1, 'g)\n': 1, 'e1.': 1, '1.g': 3, '.gr': 9, 'gri': 9, 'rid': 9, 'id(': 9, 'd(r': 9, '(ro': 9, 'row': 9, 'ow=': 9, 'w=0': 3, '=0,': 3, '0, ': 3, 'col': 9, 'olu': 9, 'lum': 9, 'umn': 9, 'mn=': 9, 'n=0': 3, '=0)': 3, 'e2.': 1, '2.g': 2, 'n=1': 3, '=1)': 3, '1)\n': 3, 'e3.': 1, '3.g': 2, 'w=1': 3, '=1,': 3, '1, ': 3, 'e4.': 1, '4.g': 1, 'e5.': 1, '5.g': 1, 'n=2': 3, '=2)': 3, '2)\n': 3, 'w=2': 3, '=2,': 3, '2, ': 3, ')\nb': 1, 'b1.': 1, '\n\nw': 1, 'ow.': 1, 'w.m': 1, '.ma': 1, 'mai': 1, 'ain': 1, 'inl': 1, 'nlo': 1, 'loo': 1, 'oop': 1, 'op(': 1, 'p()': 1}"
Armin Ronacher,aio.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 5, 'asyncio': 3, 'threading': 1, 'contextlib': 1, 'from': 2, 'weakref': 1, 'weakkeydictionary': 1, '.threads': 1, 'get_thread_call_context': 1, '_local': 1, '=': 16, 'threading.local()': 1, 'def': 4, 'set_task_call_context(task,': 3, 'ctx):': 1, '""""""binds': 1, 'the': 4, 'given': 1, 'call': 2, 'context': 2, 'to': 1, 'current': 2, 'task.""""""': 2, 'try:': 3, 'contexts': 2, '_local.asyncio_contexts': 2, 'except': 3, 'attributeerror:': 1, 'weakkeydictionary()': 1, 'contexts[task]': 1, 'ctx': 5, 'return': 7, 'get_task_call_context(create=false):': 1, '""""""returns': 1, 'associated': 1, 'with': 1, 'loop': 1, 'asyncio.get_event_loop()': 1, '(assertionerror,': 1, 'runtimeerror):': 1, 'task': 4, 'asyncio.task.current_task(loop=loop)': 1, 'if': 2, 'is': 1, 'none:': 1, '_local.asyncio_contexts[task]': 1, '(attributeerror,': 1, 'lookuperror):': 1, 'none': 1, 'not': 1, 'create:': 1, 'contextlib.new_call_context(parent=get_thread_call_context())': 1, 'ctx)': 1, 'patch_asyncio():': 1, '#': 1, 'support': 1, 'ensure_future': 1, 'asyncio.ensure_future': 2, 'better_ensure_future(coro_or_future,': 1, '*,': 1, 'loop=none):': 1, 'contextlib.get_call_context()': 1, 'ensure_future(coro_or_future,': 1, 'loop=loop)': 1, 'new_ctx': 1, ""contextlib.new_call_context(name='task-0x%x'"": 1, '%': 1, 'id(task),': 1, 'parent=ctx)': 1, 'new_ctx)': 1, 'better_ensure_future': 2, 'asyncio.tasks.ensure_future': 1, 'asyncio.get_task_call_context': 1, 'get_task_call_context': 1}","{'imp': 5, 'mpo': 5, 'por': 6, 'ort': 6, 'rt ': 5, 't a': 3, ' as': 10, 'asy': 13, 'syn': 13, 'ync': 13, 'nci': 13, 'cio': 13, 'io\n': 1, 'o\ni': 1, '\nim': 2, 't t': 3, ' th': 6, 'thr': 5, 'hre': 5, 'rea': 7, 'ead': 5, 'adi': 2, 'din': 2, 'ing': 2, 'ng\n': 1, 'g\ni': 1, 't c': 2, ' co': 9, 'con': 23, 'ont': 23, 'nte': 23, 'tex': 23, 'ext': 23, 'xtl': 4, 'tli': 4, 'lib': 4, 'ib\n': 1, 'b\n\n': 1, '\n\nf': 2, '\nfr': 2, 'fro': 2, 'rom': 2, 'om ': 2, 'm w': 1, ' we': 1, 'wea': 1, 'eak': 3, 'akr': 1, 'kre': 1, 'ref': 1, 'ef ': 5, 'f i': 1, ' im': 2, 't W': 1, ' We': 2, 'Wea': 2, 'akK': 2, 'kKe': 2, 'Key': 2, 'eyD': 2, 'yDi': 2, 'Dic': 2, 'ict': 2, 'cti': 2, 'tio': 3, 'ion': 3, 'ona': 2, 'nar': 2, 'ary': 2, 'ry\n': 1, 'y\n\n': 1, 'm .': 1, ' .t': 1, '.th': 1, 'ads': 1, 'ds ': 2, 's i': 1, 't g': 1, ' ge': 3, 'get': 7, 'et_': 10, 't_t': 9, '_th': 2, 'ad_': 2, 'd_c': 2, '_ca': 11, 'cal': 18, 'all': 13, 'll_': 11, 'l_c': 11, '_co': 14, 'xt\n': 2, 't\n\n': 1, '\n\n\n': 4, '\n\n_': 1, '\n_l': 1, '_lo': 5, 'loc': 5, 'oca': 5, 'al ': 1, 'l =': 1, ' = ': 16, '= t': 1, 'ng.': 1, 'g.l': 1, '.lo': 1, 'al(': 1, 'l()': 1, '()\n': 4, ')\n\n': 2, '\n\nd': 3, '\nde': 3, 'def': 4, 'f s': 1, ' se': 3, 'set': 3, '_ta': 7, 'tas': 20, 'ask': 22, 'sk_': 6, 'k_c': 6, 'xt(': 8, 't(t': 3, '(ta': 4, 'sk,': 3, 'k, ': 3, ', c': 2, ' ct': 7, 'ctx': 10, 'tx)': 4, 'x):': 1, '):\n': 6, ':\n ': 12, '\n  ': 34, '   ': 120, '  ""': 2, ' """"': 2, '""""""': 4, '""""B': 1, '""Bi': 1, 'Bin': 1, 'ind': 1, 'nds': 1, 's t': 2, 'the': 4, 'he ': 4, 'e g': 1, ' gi': 1, 'giv': 1, 'ive': 1, 'ven': 2, 'en ': 1, 'n c': 2, ' ca': 2, 'll ': 2, 'l c': 2, 'xt ': 3, ' to': 1, 'to ': 1, 'o t': 2, 'e c': 3, ' cu': 2, 'cur': 3, 'urr': 3, 'rre': 3, 'ren': 5, 'ent': 6, 'nt ': 2, 'io ': 2, ' ta': 6, 'sk.': 3, 'k.""': 2, '.""""': 2, '""""\n': 2, '""\n ': 2, '  t': 5, ' tr': 3, 'try': 3, 'ry:': 3, 'y:\n': 3, '  c': 5, 'xts': 6, 'ts ': 3, 's =': 3, '= _': 1, ' _l': 3, 'al.': 3, 'l.a': 3, '.as': 3, 'io_': 3, 'o_c': 3, 'ts\n': 1, 's\n ': 1, '  e': 4, ' ex': 3, 'exc': 3, 'xce': 3, 'cep': 3, 'ept': 3, 'pt ': 3, 't A': 1, ' At': 1, 'Att': 2, 'ttr': 2, 'tri': 2, 'rib': 2, 'ibu': 2, 'but': 2, 'ute': 2, 'teE': 2, 'eEr': 3, 'Err': 5, 'rro': 5, 'ror': 5, 'or:': 1, 'r:\n': 1, '  _': 1, '= c': 5, '= W': 1, 'ry(': 1, 'y()': 1, ')\n ': 8, 'ts[': 2, 's[t': 2, '[ta': 2, 'sk]': 2, 'k] ': 1, '] =': 1, 'tx\n': 2, 'x\n ': 1, '  r': 7, ' re': 7, 'ret': 7, 'etu': 8, 'tur': 18, 'urn': 8, 'rn ': 4, 'x\n\n': 1, 'f g': 1, 't(c': 1, '(cr': 1, 'cre': 2, 'eat': 2, 'ate': 3, 'te=': 1, 'e=F': 1, '=Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 'se)': 1, 'e):': 2, '""""R': 1, '""Re': 1, 'Ret': 1, 'rns': 1, 'ns ': 1, 'ass': 1, 'sso': 1, 'soc': 1, 'oci': 1, 'cia': 1, 'iat': 1, 'ted': 1, 'ed ': 1, 'd w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'th ': 1, 'h t': 1, '  l': 1, ' lo': 3, 'loo': 7, 'oop': 7, 'op ': 1, 'p =': 1, '= a': 3, 'io.': 6, 'o.g': 2, '.ge': 3, 't_e': 1, '_ev': 1, 'eve': 1, 'nt_': 2, 't_l': 1, 'op(': 1, 'p()': 1, 't (': 2, ' (A': 2, '(As': 1, 'Ass': 1, 'sse': 1, 'ser': 1, 'ert': 1, 'rti': 1, 'onE': 1, 'nEr': 1, 'or,': 2, 'r, ': 2, ', R': 1, ' Ru': 1, 'Run': 1, 'unt': 1, 'nti': 1, 'tim': 1, 'ime': 1, 'meE': 1, 'or)': 2, 'r):': 2, 'rn\n': 3, 'n\n\n': 3, '\n\n ': 6, 'sk ': 3, 'k =': 2, 'o.T': 1, '.Ta': 1, 'Tas': 2, 'k.c': 1, '.cu': 1, 'sk(': 1, 'k(l': 1, '(lo': 1, 'op=': 3, 'p=l': 2, '=lo': 2, 'op)': 2, 'p)\n': 2, '  i': 2, ' if': 2, 'if ': 2, 'f t': 1, 'k i': 1, ' is': 1, 'is ': 1, 's N': 1, ' No': 2, 'Non': 3, 'one': 3, 'ne:': 1, 'e:\n': 2, 'n _': 1, 'k]\n': 1, ']\n ': 1, '(At': 1, ', L': 1, ' Lo': 1, 'Loo': 1, 'ook': 1, 'oku': 1, 'kup': 1, 'upE': 1, 'pEr': 1, 'tx ': 4, 'x =': 4, '= N': 1, 'ne\n': 1, 'e\n\n': 2, 'f n': 1, ' no': 1, 'not': 1, 'ot ': 1, ' cr': 1, 'te:': 1, 'ib.': 3, 'b.n': 2, '.ne': 2, 'new': 4, 'ew_': 4, 'w_c': 4, 't(p': 1, '(pa': 1, 'par': 2, 'are': 2, 'nt=': 2, 't=g': 1, '=ge': 1, 't()': 2, '())': 1, '))\n': 1, 'n s': 1, 'x)\n': 3, 'f p': 1, ' pa': 2, 'pat': 1, 'atc': 1, 'tch': 1, 'ch_': 1, 'h_a': 1, '_as': 1, 'io(': 1, 'o()': 1, '():': 1, '  #': 1, ' # ': 1, '# a': 1, 'o s': 1, ' su': 1, 'sup': 1, 'upp': 1, 'ppo': 1, 'rt\n': 1, 't\n ': 1, ' en': 2, 'ens': 8, 'nsu': 8, 'sur': 8, 'ure': 18, 're_': 8, 'e_f': 8, '_fu': 10, 'fut': 10, 'utu': 10, 're ': 3, 'e =': 3, 'o.e': 2, '.en': 3, 're\n': 3, '  d': 1, ' de': 1, 'f b': 1, ' be': 3, 'bet': 3, 'ett': 3, 'tte': 3, 'ter': 3, 'er_': 3, 'r_e': 3, '_en': 3, 're(': 2, 'e(c': 2, '(co': 2, 'cor': 2, 'oro': 2, 'ro_': 2, 'o_o': 2, '_or': 2, 'or_': 2, 'r_f': 2, 're,': 2, 'e, ': 2, ', *': 1, ' *,': 1, '*, ': 1, ', l': 2, 'p=N': 1, '=No': 1, 'ne)': 1, 'b.g': 1, 't_c': 1, '= e': 1, '  n': 1, ' ne': 2, '_ct': 2, 't(n': 1, '(na': 1, 'nam': 1, 'ame': 1, 'me=': 1, ""e='"": 1, ""='T"": 1, ""'Ta"": 1, 'sk-': 1, 'k-0': 1, '-0x': 1, '0x%': 1, 'x%x': 1, ""%x'"": 1, ""x' "": 1, ""' %"": 1, ' % ': 1, '% i': 1, ' id': 1, 'id(': 1, 'd(t': 1, 'sk)': 1, 'k),': 1, '), ': 1, ', p': 1, 't=c': 1, '=ct': 1, '  s': 1, ', n': 1, 'n t': 1, 'sk\n': 1, 'k\n\n': 1, '  a': 3, '= b': 2, 'e\n ': 2, 'o.t': 1, '.ta': 1, 'sks': 1, 'ks.': 1, 's.e': 1, 't =': 1, '= g': 1}"
Armin Ronacher,atomicfile.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 7, 'os': 1, 'tempfile': 1, 'sys': 1, 'errno': 1, 'time': 1, 'random': 1, 'can_rename_open_file': 3, '=': 28, 'false': 6, 'if': 13, 'os.name': 1, '==': 2, ""'nt':"": 1, '#': 5, 'pragma:': 1, 'no': 1, 'cover': 1, '_rename': 1, 'lambda': 2, 'src,': 2, 'dst:': 2, '_rename_atomic': 1, 'try:': 5, 'ctypes': 1, '_movefile_replace_existing': 3, '0x1': 1, '_movefile_write_through': 1, '0x8': 1, '_movefileex': 1, 'ctypes.windll.kernel32.movefileexw': 1, 'def': 10, '_rename(src,': 2, 'dst):': 5, 'not': 5, 'isinstance(src,': 1, 'unicode):': 2, 'src': 1, 'unicode(src,': 1, 'sys.getfilesystemencoding())': 2, 'isinstance(dst,': 1, 'dst': 1, 'unicode(dst,': 1, '_rename_atomic(src,': 2, 'return': 10, 'true': 3, 'retry': 6, '0': 2, 'rv': 9, 'while': 2, 'and': 6, '<': 2, '100:': 2, '_movefileex(src,': 1, 'dst,': 2, '|': 2, '_movefile_write_through)': 1, 'rv:': 2, 'time.sleep(0.001)': 2, '+=': 2, '1': 2, 'new': 1, 'in': 2, 'vista': 1, 'windows': 1, 'server': 1, '2008': 1, '_createtransaction': 1, 'ctypes.windll.ktmw32.createtransaction': 1, '_committransaction': 1, 'ctypes.windll.ktmw32.committransaction': 1, '_movefiletransacted': 1, 'ctypes.windll.kernel32.movefiletransactedw': 1, '_closehandle': 1, 'ctypes.windll.kernel32.closehandle': 1, 'ta': 2, '_createtransaction(none,': 1, '0,': 4, '1000,': 1, ""'atomic"": 1, ""rename')"": 1, '-1:': 1, '_movefiletransacted(src,': 1, 'none,': 2, '_movefile_write_through,': 1, 'ta)': 1, '_committransaction(ta)': 1, 'break': 1, 'else:': 3, 'finally:': 1, '_closehandle(ta)': 1, 'except': 4, 'exception:': 2, 'pass': 3, 'atomic_rename(src,': 1, 'try': 1, 'atomic': 1, 'or': 3, 'pseudo-atomic': 1, 'rename': 1, 'fall': 1, 'back': 1, 'to': 1, '""move': 1, 'away': 1, 'replace""': 1, 'os.rename(src,': 2, 'dst)': 2, '(exceptiontype1,': 1, 'exceptiontype2)': 1, 'as': 2, 'e:': 1, 'handle': 1, 'the': 4, 'exception': 1, 'e.errno': 1, '!=': 1, 'errno.eexist:': 1, 'raise': 2, 'old': 1, '""%s-%08x""': 1, '%': 2, '(dst,': 1, 'random.randint(0,': 1, 'sys.maxint))': 1, 'os.rename(dst,': 1, 'old)': 1, 'os.unlink(old)': 1, 'atomic_rename': 1, 'os.rename': 1, 'class': 2, '_atomicwfile(object):': 1, '""""""helper': 1, 'for': 1, ':func:`atomic_open`.""""""': 1, '__init__(self,': 1, 'f,': 1, 'tmp_filename,': 1, 'filename):': 1, 'self._f': 1, 'f': 2, 'self._tmp_filename': 1, 'tmp_filename': 1, 'self._filename': 1, 'filename': 1, '__getattr__(self,': 1, 'attr):': 1, 'getattr(self._f,': 1, 'attr)': 1, '__enter__(self):': 1, 'self': 1, 'close(self):': 1, 'self._f.closed:': 1, 'self._f.close()': 2, 'atomic_rename(self._tmp_filename,': 1, 'self._filename)': 1, '__exit__(self,': 1, 'exc_type,': 1, 'exc_value,': 1, 'tb):': 1, 'exc_type': 1, 'is': 2, 'none:': 1, 'self.close()': 1, 'os.remove(self._tmp_filename)': 1, 'oserror:': 1, '__repr__(self):': 1, ""'<%s"": 1, '%s%r,': 1, 'mode': 2, ""%r>'"": 1, '(': 1, 'self.__class__.__name__,': 1, 'self._f.closed': 1, ""'closed"": 1, ""'"": 1, ""'',"": 1, 'self._filename,': 1, 'self._f.mode': 1, ')': 1, 'atomic_open(filename,': 1, ""mode='w'):"": 1, '""""""works': 1, 'like': 1, 'a': 3, 'regular': 2, '`open()`': 1, 'but': 1, 'writes': 1, 'updates': 1, 'into': 1, 'temporary': 1, 'file': 4, 'instead': 1, 'of': 1, 'given': 1, 'moves': 1, 'it': 2, 'over': 1, 'when': 1, 'closed.': 1, 'returned': 1, 'behaves': 1, 'was': 1, 'python': 1, '""""""': 1, ""('r',"": 1, ""'rb',"": 1, ""'r+',"": 1, ""'rb+',"": 1, ""'a',"": 1, ""'ab'):"": 1, ""typeerror('read"": 1, 'append': 1, 'modes': 1, ""don\\'t"": 1, 'work': 1, 'with': 1, ""atomic_open')"": 1, 'tempfile.namedtemporaryfile(mode,': 1, ""prefix='.___atomic_write',"": 1, 'dir=os.path.dirname(filename),': 1, 'delete=false)': 1, '_atomicwfile(f,': 1, 'f.name,': 1, 'filename)': 1}","{'imp': 7, 'mpo': 9, 'por': 9, 'ort': 7, 'rt ': 7, 't o': 2, ' os': 8, 'os\n': 1, 's\ni': 2, '\nim': 5, 't t': 2, ' te': 3, 'tem': 5, 'emp': 4, 'mpf': 2, 'pfi': 2, 'fil': 24, 'ile': 35, 'le\n': 2, 'e\ni': 3, 't s': 1, ' sy': 4, 'sys': 6, 'ys\n': 1, 't e': 1, ' er': 2, 'err': 3, 'rrn': 3, 'rno': 3, 'no\n': 1, 'o\ni': 1, ' ti': 3, 'tim': 3, 'ime': 3, 'me\n': 5, 't r': 4, ' ra': 4, 'ran': 12, 'and': 13, 'ndo': 3, 'dom': 2, 'om\n': 1, 'm\n\n': 1, '\n\n\n': 3, '\n\nc': 2, '\nca': 1, 'can': 3, 'an_': 3, 'n_r': 3, '_re': 13, 'ren': 18, 'ena': 31, 'nam': 35, 'ame': 36, 'me_': 7, 'e_o': 3, '_op': 6, 'ope': 7, 'pen': 8, 'en_': 3, 'n_f': 3, '_fi': 11, 'le ': 11, 'e =': 9, ' = ': 28, '= F': 3, ' Fa': 7, 'Fal': 8, 'als': 7, 'lse': 10, 'se\n': 7, '\nif': 1, 'if ': 13, 'f o': 1, 'os.': 8, 's.n': 1, '.na': 2, 'me ': 5, ' ==': 2, '== ': 2, ""= '"": 1, "" 'n"": 1, ""'nt"": 1, ""nt'"": 1, ""t':"": 1, ""': "": 1, ': #': 1, ' # ': 5, '# p': 1, ' pr': 2, 'pra': 1, 'rag': 1, 'agm': 1, 'gma': 1, 'ma:': 1, 'a: ': 1, ': n': 1, ' no': 6, 'no ': 2, 'o c': 1, ' co': 1, 'cov': 1, 'ove': 11, 'ver': 3, 'er\n': 1, 'r\n ': 1, '\n  ': 111, '   ': 1107, '  _': 13, ' _r': 6, '= l': 2, ' la': 2, 'lam': 2, 'amb': 2, 'mbd': 2, 'bda': 2, 'da ': 2, 'a s': 2, ' sr': 3, 'src': 14, 'rc,': 13, 'c, ': 13, ', d': 11, ' ds': 12, 'dst': 16, 'st:': 2, 't: ': 2, ': F': 2, 'e\n ': 11, 'e_a': 3, '_at': 4, 'ato': 12, 'tom': 15, 'omi': 15, 'mic': 15, 'ic ': 4, 'c =': 2, 'e\n\n': 4, '\n\n ': 13, '  t': 8, ' tr': 5, 'try': 11, 'ry:': 5, 'y:\n': 6, ':\n ': 37, '  i': 12, ' im': 1, 't c': 1, ' ct': 6, 'cty': 6, 'typ': 8, 'ype': 11, 'pes': 6, 'es\n': 1, 's\n\n': 3, ' _M': 10, '_MO': 6, 'MOV': 6, 'OVE': 6, 'VEF': 6, 'EFI': 6, 'FIL': 6, 'ILE': 6, 'LE_': 6, 'E_R': 3, '_RE': 3, 'REP': 3, 'EPL': 3, 'PLA': 3, 'LAC': 3, 'ACE': 3, 'CE_': 3, 'E_E': 3, '_EX': 3, 'EXI': 4, 'XIS': 4, 'IST': 4, 'STI': 3, 'TIN': 3, 'ING': 3, 'NG ': 3, 'G =': 1, '= 0': 4, ' 0x': 2, '0x1': 1, 'x1\n': 1, '1\n ': 3, 'E_W': 3, '_WR': 3, 'WRI': 3, 'RIT': 3, 'ITE': 3, 'TE_': 3, 'E_T': 3, '_TH': 3, 'THR': 3, 'HRO': 3, 'ROU': 3, 'OUG': 3, 'UGH': 3, 'GH ': 1, 'H =': 1, '0x8': 1, 'x8\n': 1, '8\n ': 2, '_Mo': 4, 'Mov': 6, 'veF': 6, 'eFi': 6, 'Fil': 9, 'leE': 3, 'eEx': 3, 'Ex ': 1, 'x =': 1, '= c': 5, 'es.': 5, 's.w': 5, '.wi': 5, 'win': 5, 'ind': 6, 'ndl': 9, 'dll': 5, 'll.': 5, 'l.k': 5, '.ke': 3, 'ker': 3, 'ern': 3, 'rne': 4, 'nel': 3, 'el3': 3, 'l32': 3, '32.': 5, '2.M': 2, '.Mo': 2, 'ExW': 1, 'xW\n': 1, 'W\n\n': 1, '  d': 12, ' de': 10, 'def': 10, 'ef ': 10, 'f _': 9, 'me(': 8, 'e(s': 10, '(sr': 11, 'st)': 7, 't):': 6, '):\n': 16, ' if': 12, 'f n': 3, 'not': 5, 'ot ': 5, 't i': 2, ' is': 4, 'isi': 2, 'sin': 2, 'ins': 3, 'nst': 3, 'sta': 3, 'tan': 2, 'anc': 2, 'nce': 2, 'ce(': 2, ', u': 2, ' un': 4, 'uni': 4, 'nic': 4, 'ico': 4, 'cod': 6, 'ode': 10, 'de)': 2, 'e):': 3, '  s': 11, 'rc ': 1, '= u': 2, 'de(': 2, ', s': 4, 'ys.': 3, 's.g': 2, '.ge': 2, 'get': 4, 'etf': 2, 'tfi': 2, 'les': 2, 'esy': 2, 'yst': 2, 'ste': 3, 'eme': 2, 'men': 2, 'enc': 2, 'nco': 2, 'odi': 2, 'din': 3, 'ing': 2, 'ng(': 2, 'g()': 2, '())': 2, '))\n': 3, ')\n ': 20, 'e(d': 3, '(ds': 4, 'st,': 6, 't, ': 6, 'st ': 1, 't =': 1, 'ic(': 2, 'c(s': 2, '  r': 21, ' re': 22, 'ret': 17, 'etu': 11, 'tur': 11, 'urn': 11, 'rn ': 8, 'n T': 1, ' Tr': 4, 'Tru': 3, 'rue': 3, 'ue\n': 3, 'etr': 6, 'ry ': 7, 'y =': 2, ' 0\n': 2, '0\n ': 2, ' rv': 11, 'rv ': 7, 'v =': 5, '  w': 2, ' wh': 3, 'whi': 2, 'hil': 2, 'e n': 2, 'v a': 2, ' an': 6, 'nd ': 7, 'd r': 3, 'y <': 2, ' < ': 2, '< 1': 2, ' 10': 3, '100': 3, '00:': 2, '0:\n': 2, '= _': 4, 'Ex(': 1, 'x(s': 1, ', _': 1, 'G |': 2, ' |\n': 2, '|\n ': 2, 'GH)': 1, 'H)\n': 1, 'rv:': 2, 'v:\n': 2, 'me.': 2, 'e.s': 2, '.sl': 2, 'sle': 2, 'lee': 2, 'eep': 2, 'ep(': 2, 'p(0': 2, '(0.': 2, '0.0': 2, '.00': 2, '001': 2, '01)': 2, '1)\n': 2, 'y +': 2, ' +=': 2, '+= ': 2, '= 1': 2, ' 1\n': 2, 'n r': 2, 'rv\n': 2, 'v\n\n': 1, '  #': 4, '# n': 1, ' ne': 1, 'new': 1, 'ew ': 1, 'w i': 1, ' in': 4, 'in ': 2, 'n V': 1, ' Vi': 1, 'Vis': 1, 'ist': 1, 'ta ': 3, 'a a': 1, 'd W': 1, ' Wi': 1, 'Win': 1, 'dow': 1, 'ows': 1, 'ws ': 1, 's S': 1, ' Se': 1, 'Ser': 1, 'erv': 1, 'rve': 1, 'er ': 3, 'r 2': 1, ' 20': 1, '200': 1, '008': 1, '08\n': 1, ' _C': 6, '_Cr': 2, 'Cre': 3, 'rea': 4, 'eat': 3, 'ate': 4, 'teT': 3, 'eTr': 6, 'Tra': 9, 'ans': 9, 'nsa': 9, 'sac': 9, 'act': 9, 'cti': 6, 'tio': 11, 'ion': 11, 'on ': 2, 'n =': 2, '.kt': 2, 'ktm': 2, 'tmw': 2, 'mw3': 2, 'w32': 2, '2.C': 3, '.Cr': 1, 'on\n': 4, 'n\n ': 5, '_Co': 2, 'Com': 3, 'omm': 3, 'mmi': 3, 'mit': 3, 'itT': 3, 'tTr': 3, '.Co': 1, 'leT': 3, 'cte': 3, 'ted': 3, 'ed ': 4, 'd =': 2, 'edW': 1, 'dW\n': 1, 'W\n ': 1, '_Cl': 2, 'Clo': 3, 'los': 11, 'ose': 11, 'seH': 3, 'eHa': 3, 'Han': 4, 'dle': 4, '.Cl': 1, '  c': 3, ' ca': 2, '= T': 2, ' ta': 3, 'a =': 2, 'on(': 2, 'n(N': 1, '(No': 1, 'Non': 4, 'one': 4, 'ne,': 3, 'e, ': 9, ', 0': 4, ' 0,': 4, '0, ': 6, ', 1': 1, '000': 1, '00,': 1, "", '"": 6, "" 'A"": 1, ""'At"": 1, 'Ato': 3, 'c r': 2, ""me'"": 1, ""e')"": 1, ""')\n"": 2, 'f t': 2, '= -': 1, ' -1': 1, '-1:': 1, '1:\n': 1, 'n F': 1, 'ed(': 1, 'd(s': 1, ', N': 2, ' No': 3, 'e,\n': 2, ',\n ': 6, 'GH,': 1, 'H, ': 1, ', t': 3, 'ta)': 3, 'a)\n': 3, 'f r': 1, 'n(t': 1, '(ta': 2, '  b': 1, ' br': 1, 'bre': 1, 'eak': 1, 'ak\n': 1, 'k\n ': 1, '  e': 6, ' el': 2, 'els': 3, 'se:': 3, 'e:\n': 5, 'v\n ': 1, '  f': 3, ' fi': 8, 'fin': 1, 'ina': 1, 'nal': 1, 'all': 2, 'lly': 1, 'ly:': 1, 'le(': 4, 'e(t': 1, ' ex': 8, 'exc': 8, 'xce': 9, 'cep': 9, 'ept': 9, 'pt ': 4, 't E': 2, ' Ex': 3, 'Exc': 4, 'pti': 5, 'on:': 2, 'n:\n': 2, '  p': 3, ' pa': 3, 'pas': 3, 'ass': 6, 'ss\n': 3, 'f a': 2, ' at': 8, 'ic_': 7, 'c_r': 3, '# T': 1, 'Try': 1, 'y a': 2, 'c o': 1, ' or': 3, 'or ': 4, 'r p': 1, ' ps': 1, 'pse': 1, 'seu': 1, 'eud': 1, 'udo': 1, 'do-': 1, 'o-a': 1, '-at': 1, 'rn\n': 2, '# F': 1, 'll ': 1, 'l b': 1, ' ba': 1, 'bac': 1, 'ack': 1, 'ck ': 1, 'k t': 1, ' to': 1, 'to ': 2, 'o ""': 1, ' ""m': 1, '""mo': 1, 'mov': 3, 've ': 1, 'e a': 3, ' aw': 1, 'awa': 1, 'way': 1, 'ay ': 1, 'rep': 2, 'epl': 1, 'pla': 1, 'lac': 1, 'ace': 1, 'ce""': 1, 'e""\n': 1, '""\n ': 2, '  o': 6, 's.r': 5, '.re': 5, 't)\n': 2, 't (': 1, ' (E': 1, '(Ex': 1, 'onT': 2, 'nTy': 2, 'Typ': 3, 'pe1': 1, 'e1,': 1, '1, ': 1, ', E': 1, 'pe2': 1, 'e2)': 1, '2) ': 1, ') a': 1, ' as': 2, 'as ': 3, 's e': 1, ' e:': 1, '# H': 1, ' Ha': 1, 'e t': 1, ' th': 3, 'the': 3, 'he ': 4, 'e e': 1, 'n\n\n': 1, 'f e': 2, ' e.': 1, 'e.e': 1, '.er': 1, 'o !': 1, ' !=': 1, '!= ': 1, '= e': 1, 'no.': 1, 'o.E': 1, '.EE': 1, 'EEX': 1, 'ST:': 1, 'T:\n': 1, 'rai': 2, 'ais': 2, 'ise': 2, ' ol': 2, 'old': 3, 'ld ': 1, '= ""': 1, ' ""%': 1, '""%s': 1, '%s-': 1, 's-%': 1, '-%0': 1, '%08': 1, '08x': 1, '8x""': 1, 'x"" ': 1, '"" %': 1, ' % ': 2, '% (': 2, ' (d': 1, ', r': 1, 'om.': 1, 'm.r': 1, '.ra': 1, 'ndi': 1, 'int': 3, 'nt(': 1, 't(0': 1, '(0,': 1, 's.m': 1, '.ma': 1, 'max': 1, 'axi': 1, 'xin': 1, 'nt)': 1, 't))': 1, ', o': 1, 'ld)': 2, 'd)\n': 2, 's.u': 1, '.un': 1, 'unl': 1, 'nli': 1, 'lin': 1, 'ink': 1, 'nk(': 1, 'k(o': 1, '(ol': 1, 's\ne': 1, '\nel': 1, '  a': 2, '= o': 1, '\ncl': 1, 'cla': 3, 'las': 3, 'ss ': 2, 's _': 1, ' _A': 2, '_At': 2, 'icW': 2, 'cWF': 2, 'WFi': 2, 'e(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, '  ""': 3, ' """"': 3, '""""""': 4, '""""H': 1, '""He': 1, 'Hel': 1, 'elp': 1, 'lpe': 1, 'per': 1, 'r c': 1, ' cl': 3, 's f': 1, ' fo': 1, 'for': 1, 'r :': 1, ' :f': 1, ':fu': 1, 'fun': 1, 'unc': 1, 'nc:': 1, 'c:`': 1, ':`a': 1, '`at': 1, 'c_o': 3, 'en`': 1, 'n`.': 1, '`.""': 1, '.""""': 1, '""""\n': 2, '""\n\n': 1, ' __': 5, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 2, 't__': 2, '__(': 5, '_(s': 5, '(se': 9, 'sel': 22, 'elf': 22, 'lf,': 3, 'f, ': 6, ', f': 4, ' f,': 1, ' tm': 2, 'tmp': 5, 'mp_': 5, 'p_f': 5, 'len': 13, 'me,': 5, 'me)': 5, ' se': 13, 'lf.': 15, 'f._': 14, '._f': 10, '_f ': 1, 'f =': 2, '= f': 2, ' f\n': 1, 'f\n ': 1, '._t': 3, '_tm': 3, '= t': 2, '__g': 1, '_ge': 1, 'eta': 2, 'tat': 2, 'att': 4, 'ttr': 4, 'tr_': 1, 'r__': 3, ', a': 2, 'tr)': 2, 'r):': 1, 'n g': 1, ' ge': 1, 'tr(': 1, 'r(s': 1, '_f,': 1, 'r)\n': 1, ')\n\n': 3, '__e': 2, '_en': 1, 'ent': 1, 'nte': 1, 'ter': 1, 'er_': 1, 'lf)': 3, 'f):': 3, 'n s': 1, 'lf\n': 1, 'f\n\n': 1, 'f c': 1, 'clo': 8, 'se(': 4, 'f s': 1, '_f.': 5, 'f.c': 5, '.cl': 5, 'sed': 4, 'ed:': 1, 'd:\n': 1, 'e()': 3, '()\n': 3, 'e)\n': 4, '_ex': 1, 'exi': 1, 'xit': 1, ', e': 2, 'xc_': 3, 'c_t': 2, '_ty': 2, 'pe,': 1, 'c_v': 1, '_va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ue,': 1, ' tb': 1, 'tb)': 1, 'b):': 1, 'pe ': 1, 'e i': 4, 'is ': 1, 's N': 1, 'ne:': 1, 'rem': 1, 'emo': 1, 've(': 1, 't O': 1, ' OS': 1, 'OSE': 1, 'SEr': 1, 'Err': 2, 'rro': 2, 'ror': 2, 'or:': 1, 'r:\n': 1, '__r': 1, 'epr': 1, 'pr_': 1, ""n '"": 1, "" '<"": 1, ""'<%"": 1, '<%s': 1, '%s ': 1, 's %': 1, ' %s': 1, '%s%': 1, 's%r': 1, '%r,': 1, 'r, ': 1, ', m': 2, ' mo': 5, 'mod': 6, 'de ': 2, 'e %': 1, ' %r': 1, '%r>': 1, ""r>'"": 1, "">' "": 1, ""' %"": 1, ' (\n': 1, '(\n ': 1, '.__': 3, '__c': 1, '_cl': 1, 'ss_': 1, 's__': 1, '__.': 1, '_._': 1, '__n': 1, '_na': 1, 'e__': 1, '__,': 1, '_,\n': 1, 'd a': 1, ""d '"": 2, "" 'c"": 1, ""'cl"": 1, "" ' "": 1, ""' o"": 1, ""r '"": 1, "" ''"": 1, ""'',"": 1, ""',\n"": 2, 'f.m': 1, '.mo': 1, 'de\n': 1, '  )': 1, ' )\n': 1, '\n\nd': 1, '\nde': 1, 'en(': 2, 'n(f': 1, '(fi': 2, 'de=': 1, ""e='"": 1, ""='w"": 1, ""'w'"": 1, ""w')"": 1, ""'):"": 2, '""""W': 1, '""Wo': 1, 'Wor': 1, 'ork': 2, 'rks': 1, 'ks ': 1, 's l': 1, ' li': 1, 'lik': 1, 'ike': 1, 'ke ': 1, ' a ': 3, 'a r': 2, 'reg': 2, 'egu': 2, 'gul': 2, 'ula': 2, 'lar': 2, 'ar ': 2, 'r `': 1, ' `o': 1, '`op': 1, 'n()': 1, '()`': 1, ')` ': 1, '` b': 1, ' bu': 1, 'but': 1, 'ut ': 1, 't w': 3, ' wr': 1, 'wri': 2, 'rit': 2, 'ite': 2, 'tes': 2, 'es ': 5, 's u': 1, ' up': 1, 'upd': 1, 'pda': 1, 'dat': 1, 's i': 3, 'nto': 1, 'o a': 1, 'a t': 1, 'ora': 2, 'rar': 2, 'ary': 2, 'ry\n': 1, 'y\n ': 1, 'tea': 1, 'ead': 2, 'ad ': 2, 'd o': 2, ' of': 1, 'of ': 1, 'e g': 1, ' gi': 1, 'giv': 1, 'ive': 1, 'ven': 1, 'en ': 2, 'n f': 1, 'd m': 2, 'ves': 2, ' it': 2, 'it ': 2, ' ov': 1, 'r w': 1, 'whe': 1, 'hen': 1, 'n t': 1, 'e f': 2, 'is\n': 1, 's\n ': 1, 'ed.': 1, 'd. ': 1, '.  ': 1, '  T': 1, ' Th': 1, 'The': 1, 'e r': 1, 'ned': 1, 'd b': 1, ' be': 1, 'beh': 1, 'eha': 1, 'hav': 1, 'ave': 1, 's a': 2, 'f i': 1, ' wa': 1, 'was': 1, 'r P': 1, ' Py': 1, 'Pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'f m': 1, 'n (': 1, "" ('"": 1, ""('r"": 1, ""'r'"": 1, ""r',"": 1, ""', "": 5, "" 'r"": 3, ""'rb"": 2, ""rb'"": 1, ""b',"": 1, ""'r+"": 1, ""r+'"": 1, ""+',"": 2, 'rb+': 1, ""b+'"": 1, "" 'a"": 2, ""'a'"": 1, ""a',"": 1, ""'ab"": 1, ""ab'"": 1, ""b')"": 1, 'se ': 1, 'e T': 1, ' Ty': 1, 'peE': 1, 'eEr': 1, 'or(': 1, ""r('"": 1, ""('R"": 1, ""'Re"": 1, 'Rea': 1, 'r a': 1, ' ap': 1, 'app': 1, 'ppe': 1, 'end': 1, 'des': 1, 's d': 1, ' do': 1, 'don': 1, 'on\\': 1, ""n\\'"": 1, ""\\'t"": 1, ""'t "": 1, ' wo': 1, 'wor': 1, 'rk ': 1, 'k w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'th ': 1, 'h a': 1, ""en'"": 1, ""n')"": 1, ' f ': 1, 'le.': 1, 'e.N': 1, '.Na': 1, 'Nam': 1, 'med': 1, 'edT': 1, 'dTe': 1, 'Tem': 1, 'ryF': 1, 'yFi': 1, 'e(m': 1, '(mo': 1, 'de,': 1, ', p': 1, 'pre': 1, 'ref': 1, 'efi': 1, 'fix': 1, 'ix=': 1, ""x='"": 1, ""='."": 1, ""'._"": 1, '___': 1, '__a': 1, 'c_w': 1, '_wr': 1, ""te'"": 1, ""e',"": 1, ' di': 1, 'dir': 2, 'ir=': 1, 'r=o': 1, '=os': 1, 's.p': 1, '.pa': 1, 'pat': 1, 'ath': 1, 'th.': 1, 'h.d': 1, '.di': 1, 'irn': 1, 'rna': 1, 'e(f': 2, 'e),': 1, '),\n': 1, 'del': 1, 'ele': 1, 'let': 1, 'ete': 1, 'te=': 1, 'e=F': 1, '=Fa': 1, 'se)': 1, 'n _': 1, '(f,': 1, ' f.': 1, 'f.n': 1}"
Armin Ronacher,classyext.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 66, 'flasky': 2, 'extensions.': 1, 'pygments': 1, 'style': 3, 'based': 1, 'on': 1, 'tango': 1, 'from': 2, 'pygments.style': 1, 'import': 2, 'pygments.token': 1, 'keyword,': 1, 'name,': 1, 'comment,': 1, 'string,': 1, 'error,': 1, '\\': 1, 'number,': 1, 'operator,': 1, 'generic,': 1, 'whitespace,': 1, 'punctuation,': 1, 'other,': 1, 'literal': 1, 'class': 3, 'classystyle(style):': 1, 'background_color': 1, '=': 3, '""#f8f8f8""': 1, 'default_style': 1, '""""': 1, 'styles': 1, '{': 1, 'no': 1, 'corresponding': 1, 'for': 1, 'the': 3, 'following:': 1, '#text:': 1, '"""",': 1, 'class:': 60, ""''"": 1, 'whitespace:': 1, '""underline': 1, '#f8f8f8"",': 1, ""'w'"": 1, 'error:': 1, '""#a40000': 1, 'border:#ef2929"",': 1, ""'err'"": 1, 'other:': 1, '""#000000"",': 15, ""'x'"": 1, 'comment:': 1, '""italic': 3, '#8f5902"",': 2, ""'c'"": 1, 'comment.preproc:': 1, '""noitalic"",': 1, ""'cp'"": 1, 'keyword:': 1, '""bold': 15, '#004461"",': 9, ""'k'"": 1, 'keyword.constant:': 1, ""'kc'"": 1, 'keyword.declaration:': 1, ""'kd'"": 1, 'keyword.namespace:': 1, ""'kn'"": 1, 'keyword.pseudo:': 1, ""'kp'"": 1, 'keyword.reserved:': 1, ""'kr'"": 1, 'keyword.type:': 1, ""'kt'"": 1, 'operator:': 1, '""#582800"",': 1, ""'o'"": 1, 'operator.word:': 1, ""'ow'"": 1, '-': 12, 'like': 3, 'keywords': 1, 'punctuation:': 1, '#000000"",': 3, ""'p'"": 1, 'because': 1, 'special': 1, 'names': 1, 'such': 2, 'as': 3, 'name.class,': 1, 'name.function,': 1, 'etc.': 1, 'are': 1, 'not': 1, 'recognized': 1, 'later': 1, 'in': 1, 'parsing,': 1, 'we': 1, 'choose': 1, 'them': 1, 'to': 10, 'look': 1, 'same': 1, 'ordinary': 1, 'variables.': 1, 'name:': 1, ""'n'"": 1, 'name.attribute:': 1, '""#c4a000"",': 1, ""'na'"": 1, 'be': 9, 'revised': 9, 'name.builtin:': 1, '""#004461"",': 1, ""'nb'"": 1, 'name.builtin.pseudo:': 1, '""#3465a4"",': 1, ""'bp'"": 1, 'name.class:': 1, ""'nc'"": 1, 'name.constant:': 1, ""'no'"": 1, 'name.decorator:': 1, '""#888"",': 2, ""'nd'"": 1, 'name.entity:': 1, '""#ce5c00"",': 1, ""'ni'"": 1, 'name.exception:': 1, '#cc0000"",': 1, ""'ne'"": 1, 'name.function:': 1, ""'nf'"": 1, 'name.property:': 1, ""'py'"": 1, 'name.label:': 1, '""#f57900"",': 1, ""'nl'"": 1, 'name.namespace:': 1, ""'nn'"": 1, 'name.other:': 1, ""'nx'"": 1, 'name.tag:': 1, ""'nt'"": 1, 'a': 2, 'keyword': 1, 'name.variable:': 1, ""'nv'"": 1, 'name.variable.class:': 1, ""'vc'"": 1, 'name.variable.global:': 1, ""'vg'"": 1, 'name.variable.instance:': 1, ""'vi'"": 1, 'number:': 1, '""#990000"",': 1, ""'m'"": 1, 'literal:': 1, ""'l'"": 1, 'literal.date:': 1, ""'ld'"": 1, 'string:': 1, '""#4e9a06"",': 11, ""'s'"": 1, 'string.backtick:': 1, ""'sb'"": 1, 'string.char:': 1, ""'sc'"": 1, 'string.doc:': 1, ""'sd'"": 1, 'comment': 1, 'string.double:': 1, ""'s2'"": 1, 'string.escape:': 1, ""'se'"": 1, 'string.heredoc:': 1, ""'sh'"": 1, 'string.interpol:': 1, ""'si'"": 1, 'string.other:': 1, ""'sx'"": 1, 'string.regex:': 1, ""'sr'"": 1, 'string.single:': 1, ""'s1'"": 1, 'string.symbol:': 1, ""'ss'"": 1, 'generic:': 1, ""'g'"": 1, 'generic.deleted:': 1, '""#a40000"",': 1, ""'gd'"": 1, 'generic.emph:': 1, ""'ge'"": 1, 'generic.error:': 1, '""#ef2929"",': 1, ""'gr'"": 1, 'generic.heading:': 1, '#000080"",': 1, ""'gh'"": 1, 'generic.inserted:': 1, '""#00a000"",': 1, ""'gi'"": 1, 'generic.output:': 1, ""'go'"": 1, 'generic.prompt:': 1, '""#745334"",': 1, ""'gp'"": 1, 'generic.strong:': 1, ""'gs'"": 1, 'generic.subheading:': 1, '#800080"",': 1, ""'gu'"": 1, 'generic.traceback:': 1, '#a40000"",': 1, ""'gt'"": 1, '}': 1}","{'# f': 1, ' fl': 2, 'fla': 2, 'las': 69, 'ask': 2, 'sky': 2, 'ky ': 2, 'y e': 1, ' ex': 1, 'ext': 2, 'xte': 1, 'ten': 1, 'ens': 1, 'nsi': 1, 'sio': 1, 'ion': 7, 'ons': 3, 'ns.': 1, 's. ': 1, '.  ': 1, '  f': 1, 'y p': 1, ' py': 3, 'pyg': 3, 'ygm': 3, 'gme': 3, 'men': 7, 'ent': 7, 'nts': 3, 'ts ': 1, 's s': 3, ' st': 3, 'sty': 5, 'tyl': 8, 'yle': 8, 'le ': 3, 'e b': 1, ' ba': 2, 'bas': 1, 'ase': 1, 'sed': 10, 'ed ': 2, 'd o': 1, ' on': 1, 'on ': 1, 'n t': 2, ' ta': 1, 'tan': 4, 'ang': 1, 'ngo': 1, 'go ': 1, 'o s': 1, 'le\n': 2, 'e\nf': 2, '\nfr': 2, 'fro': 2, 'rom': 3, 'om ': 2, 'm p': 2, 'ts.': 2, 's.s': 1, '.st': 1, 'e i': 1, ' im': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't S': 1, ' St': 14, 'Sty': 3, 's.t': 1, '.to': 1, 'tok': 1, 'oke': 1, 'ken': 1, 'en ': 1, 'n i': 1, 't K': 1, ' Ke': 8, 'Key': 8, 'eyw': 10, 'ywo': 10, 'wor': 10, 'ord': 13, 'rd,': 1, 'd, ': 1, ', N': 2, ' Na': 22, 'Nam': 24, 'ame': 26, 'me,': 1, 'e, ': 2, ', C': 1, ' Co': 3, 'Com': 3, 'omm': 4, 'mme': 4, 'nt,': 1, 't, ': 1, ', S': 1, 'Str': 14, 'tri': 14, 'rin': 13, 'ing': 19, 'ng,': 2, 'g, ': 2, ', E': 1, ' Er': 2, 'Err': 3, 'rro': 3, 'ror': 3, 'or,': 2, 'r, ': 4, ', \\': 1, ' \\\n': 1, '\\\n ': 1, '\n  ': 70, '   ': 1372, '  N': 21, ' Nu': 2, 'Num': 2, 'umb': 2, 'mbe': 2, 'ber': 2, 'er,': 2, ', O': 2, ' Op': 3, 'Ope': 3, 'per': 4, 'era': 6, 'rat': 5, 'ato': 4, 'tor': 4, ', G': 1, ' Ge': 12, 'Gen': 12, 'ene': 12, 'ner': 12, 'eri': 12, 'ric': 12, 'ic,': 1, 'c, ': 1, ', W': 1, ' Wh': 2, 'Whi': 2, 'hit': 2, 'ite': 5, 'tes': 2, 'esp': 5, 'spa': 4, 'pac': 4, 'ace': 5, 'ce,': 1, ', P': 1, ' Pu': 2, 'Pun': 2, 'unc': 4, 'nct': 4, 'ctu': 2, 'tua': 2, 'uat': 2, 'ati': 3, 'tio': 6, 'on,': 2, 'n, ': 2, ' Ot': 2, 'Oth': 4, 'the': 8, 'her': 4, ', L': 1, ' Li': 3, 'Lit': 3, 'ter': 5, 'ral': 3, 'al\n': 1, 'l\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 64, 'ass': 67, 'ss ': 3, 's C': 1, ' Cl': 1, 'Cla': 4, 'ssy': 1, 'syS': 1, 'ySt': 1, 'le(': 1, 'e(S': 1, '(St': 1, 'le)': 1, 'e):': 1, '):\n': 1, ':\n ': 2, '  b': 1, 'bac': 2, 'ack': 3, 'ckg': 1, 'kgr': 1, 'gro': 1, 'rou': 1, 'oun': 1, 'und': 2, 'nd_': 1, 'd_c': 1, '_co': 1, 'col': 1, 'olo': 1, 'lor': 1, 'or ': 2, 'r =': 1, ' = ': 3, '= ""': 2, ' ""#': 41, '""#f': 2, '#f8': 2, 'f8f': 4, '8f8': 4, 'f8""': 2, '8""\n': 1, '""\n ': 1, '  d': 1, ' de': 1, 'def': 1, 'efa': 1, 'fau': 1, 'aul': 1, 'ult': 1, 'lt_': 1, 't_s': 1, '_st': 1, 'e =': 1, ' """"': 2, '""""\n': 1, '""\n\n': 1, '\n\n ': 10, '  s': 1, 'les': 2, 'es ': 2, 's =': 1, '= {': 1, ' {\n': 1, '{\n ': 1, '  #': 61, ' # ': 65, '# N': 1, ' No': 1, 'No ': 1, 'o c': 1, ' co': 2, 'cor': 2, 'orr': 1, 'rre': 1, 'res': 1, 'spo': 1, 'pon': 1, 'ond': 1, 'ndi': 1, 'din': 4, 'ng ': 1, 'g c': 1, ' cl': 62, 's f': 1, ' fo': 2, 'for': 1, 'r t': 1, ' th': 4, 'he ': 3, 'e f': 1, 'fol': 1, 'oll': 1, 'llo': 1, 'low': 1, 'owi': 1, 'win': 1, 'ng:': 5, 'g:\n': 1, ' #T': 1, '#Te': 1, 'Tex': 1, 'xt:': 1, 't: ': 6, ':  ': 62, '  ""': 61, '"""",': 1, '"", ': 61, ', #': 5, '# c': 61, 'ss:': 62, 's: ': 62, ""  '"": 1, "" ''"": 1, ""''\n"": 1, ""'\n "": 42, '  W': 1, 'ce:': 4, 'e: ': 12, ' ""u': 1, '""un': 1, 'nde': 1, 'der': 2, 'erl': 1, 'rli': 1, 'lin': 1, 'ine': 1, 'ne ': 1, 'e #': 1, ' #f': 1, '8"",': 3, ',  ': 56, "": '"": 59, "" 'w"": 1, ""'w'"": 1, ""w'\n"": 1, '  E': 1, 'or:': 4, 'r: ': 9, '""#a': 2, '#a4': 3, 'a40': 3, '400': 3, '000': 87, '00 ': 1, '0 b': 1, ' bo': 1, 'bor': 1, 'rde': 1, 'er:': 5, 'r:#': 1, ':#e': 1, '#ef': 2, 'ef2': 2, 'f29': 2, '292': 2, '929': 2, '29""': 2, '9"",': 2, "" 'e"": 1, ""'er"": 1, 'err': 1, ""rr'"": 1, ""r'\n"": 4, '  O': 3, '""#0': 17, '#00': 30, '00""': 27, '0"",': 29, ""s '"": 1, "" 'x"": 1, ""'x'"": 1, ""x'\n"": 3, ""'\n\n"": 7, '  C': 2, 'nt:': 3, ' ""i': 3, '""it': 3, 'ita': 4, 'tal': 4, 'ali': 4, 'lic': 4, 'ic ': 3, 'c #': 3, ' #8': 3, '#8f': 2, '8f5': 2, 'f59': 2, '590': 2, '902': 2, '02""': 2, '2"",': 2, "" 'c"": 2, ""'c'"": 1, ""c'\n"": 3, 'nt.': 1, 't.P': 1, '.Pr': 3, 'Pre': 1, 'rep': 1, 'epr': 1, 'pro': 1, 'roc': 1, 'oc:': 3, 'c: ': 4, ' ""n': 1, '""no': 1, 'noi': 1, 'oit': 1, 'ic""': 1, 'c"",': 1, ""'cp"": 1, ""cp'"": 1, ""p'\n"": 5, '  K': 7, 'rd:': 2, 'd: ': 5, ' ""b': 15, '""bo': 15, 'bol': 16, 'old': 15, 'ld ': 15, 'd #': 15, ' #0': 13, '004': 10, '044': 10, '446': 10, '461': 10, '61""': 10, '1"",': 10, "" 'k"": 7, ""'k'"": 1, ""k'\n"": 1, 'rd.': 6, 'd.C': 1, '.Co': 2, 'Con': 2, 'nst': 3, 'sta': 3, 'ant': 2, ""'kc"": 1, ""kc'"": 1, 'd.D': 1, '.De': 3, 'Dec': 2, 'ecl': 1, 'lar': 1, 'ara': 1, 'on:': 4, 'n: ': 5, ""'kd"": 1, ""kd'"": 1, ""d'\n"": 3, 'd.N': 1, '.Na': 2, 'mes': 3, ""'kn"": 1, ""kn'"": 1, ""n'\n"": 2, 'd.P': 1, '.Ps': 2, 'Pse': 2, 'seu': 2, 'eud': 2, 'udo': 2, 'do:': 2, 'o: ': 2, ""'kp"": 1, ""kp'"": 1, 'd.R': 1, '.Re': 2, 'Res': 1, 'ese': 1, 'ser': 2, 'erv': 1, 'rve': 1, 'ved': 1, 'ed:': 3, ""'kr"": 1, ""kr'"": 1, 'd.T': 1, '.Ty': 1, 'Typ': 1, 'ype': 1, 'pe:': 2, ""'kt"": 1, ""kt'"": 1, ""t'\n"": 2, '""#5': 1, '#58': 1, '582': 1, '828': 1, '280': 1, '800': 2, "" 'o"": 2, ""'o'"": 1, ""o'\n"": 2, 'or.': 1, 'r.W': 1, '.Wo': 1, 'Wor': 1, ""'ow"": 1, ""ow'"": 1, ""w' "": 1, ""' -"": 12, ' - ': 12, '- l': 3, ' li': 3, 'lik': 3, 'ike': 3, 'ke ': 3, 'e k': 1, ' ke': 2, 'key': 2, 'rds': 1, 'ds\n': 1, 's\n\n': 1, '  P': 1, "" 'p"": 2, ""'p'"": 1, '# b': 1, ' be': 10, 'bec': 1, 'eca': 1, 'cau': 1, 'aus': 1, 'use': 1, 'se ': 2, 'e s': 2, ' sp': 1, 'spe': 1, 'pec': 1, 'eci': 1, 'cia': 1, 'ial': 1, 'al ': 1, 'l n': 1, ' na': 1, 'nam': 1, ' su': 2, 'suc': 2, 'uch': 2, 'ch ': 2, 'h a': 1, ' as': 3, 'as ': 3, 's N': 1, 'me.': 20, 'e.C': 4, '.Cl': 3, 'ss,': 1, 's, ': 1, 'e.F': 2, '.Fu': 2, 'Fun': 2, 'cti': 2, ', e': 1, ' et': 1, 'etc': 1, 'tc.': 1, 'c.\n': 1, '.\n ': 2, '# a': 1, ' ar': 1, 'are': 1, 're ': 1, 'e n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't r': 1, ' re': 10, 'rec': 1, 'eco': 2, 'cog': 1, 'ogn': 1, 'gni': 1, 'niz': 1, 'ize': 1, 'zed': 1, 'd a': 1, 'h l': 1, ' la': 1, 'lat': 1, 'ate': 2, 'er ': 1, 'r i': 1, ' in': 1, 'in ': 1, 'e p': 1, ' pa': 1, 'par': 1, 'ars': 1, 'rsi': 1, 'sin': 1, ', w': 1, ' we': 1, 'we ': 1, 'e c': 1, ' ch': 1, 'cho': 1, 'hoo': 1, 'oos': 1, 'ose': 1, 'e t': 1, 'hem': 1, 'em\n': 1, 'm\n ': 1, '# t': 1, ' to': 10, 'to ': 10, 'o l': 1, ' lo': 1, 'loo': 1, 'ook': 1, 'ok ': 1, 'k t': 1, ' sa': 1, 'sam': 1, 'me ': 1, 'e a': 3, 's o': 1, ' or': 1, 'rdi': 1, 'ina': 1, 'nar': 1, 'ary': 1, 'ry ': 1, 'y v': 1, ' va': 1, 'var': 1, 'ari': 5, 'ria': 5, 'iab': 5, 'abl': 5, 'ble': 6, 'es.': 1, 's.\n': 1, 'me:': 1, "" 'n"": 14, ""'n'"": 1, 'e.A': 1, '.At': 1, 'Att': 1, 'ttr': 1, 'rib': 1, 'ibu': 1, 'but': 1, 'ute': 1, 'te:': 2, '""#c': 2, '#c4': 1, 'c4a': 1, '4a0': 1, 'a00': 1, ""'na"": 1, ""na'"": 1, ""a' "": 1, '- t': 9, 'o b': 9, 'be ': 9, 'e r': 9, 'rev': 9, 'evi': 9, 'vis': 9, 'ise': 9, 'ed\n': 9, 'd\n ': 9, 'e.B': 2, '.Bu': 2, 'Bui': 2, 'uil': 2, 'ilt': 2, 'lti': 2, 'tin': 2, 'in:': 1, ""'nb"": 1, ""nb'"": 1, ""b'\n"": 2, 'in.': 1, 'n.P': 1, '""#3': 1, '#34': 1, '346': 1, '465': 1, '65a': 1, '5a4': 1, 'a4""': 1, '4"",': 2, "" 'b"": 1, ""'bp"": 1, ""bp'"": 1, ""'nc"": 1, ""nc'"": 1, ""c' "": 2, ""'no"": 1, ""no'"": 1, ""o' "": 1, 'e.D': 1, 'ora': 1, '""#8': 2, '#88': 2, '888': 2, '88""': 2, ""'nd"": 1, ""nd'"": 1, ""d' "": 2, 'e.E': 2, '.En': 1, 'Ent': 1, 'nti': 1, 'tit': 1, 'ity': 1, 'ty:': 2, 'y: ': 2, '#ce': 1, 'ce5': 1, 'e5c': 1, '5c0': 1, 'c00': 2, ""'ni"": 1, ""ni'"": 1, ""i'\n"": 3, '.Ex': 1, 'Exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pti': 1, ' #c': 1, '#cc': 1, 'cc0': 1, ""'ne"": 1, ""ne'"": 1, ""e'\n"": 3, ""'nf"": 1, ""nf'"": 1, ""f'\n"": 1, 'e.P': 1, 'Pro': 2, 'rop': 1, 'ope': 1, 'ert': 2, 'rty': 1, ""'py"": 1, ""py'"": 1, ""y'\n"": 1, 'e.L': 1, '.La': 1, 'Lab': 1, 'abe': 1, 'bel': 1, 'el:': 1, 'l: ': 5, '#f5': 1, 'f57': 1, '579': 1, '790': 1, '900': 2, ""'nl"": 1, ""nl'"": 1, ""l'\n"": 2, 'e.N': 1, ""'nn"": 1, ""nn'"": 1, ""n' "": 1, 'e.O': 1, '.Ot': 2, ""'nx"": 1, ""nx'"": 1, 'e.T': 1, '.Ta': 1, 'Tag': 1, 'ag:': 1, 'g: ': 5, ""'nt"": 1, ""nt'"": 1, ""t' "": 1, ' a ': 2, 'a k': 1, 'rd\n': 1, 'e.V': 4, '.Va': 4, 'Var': 4, 'le:': 3, ""'nv"": 1, ""nv'"": 1, ""v' "": 1, 'le.': 3, "" 'v"": 3, ""'vc"": 1, ""vc'"": 1, 'e.G': 1, '.Gl': 1, 'Glo': 1, 'lob': 1, 'oba': 1, 'bal': 1, 'al:': 2, ""'vg"": 1, ""vg'"": 1, ""g' "": 1, 'e.I': 1, '.In': 3, 'Ins': 2, 'anc': 1, 'nce': 1, ""'vi"": 1, ""vi'"": 1, ""i' "": 1, 'd\n\n': 1, '""#9': 1, '#99': 1, '990': 1, "" 'm"": 1, ""'m'"": 1, ""m'\n"": 1, '  L': 2, "" 'l"": 2, ""'l'"": 1, 'al.': 1, 'l.D': 1, '.Da': 1, 'Dat': 1, ""'ld"": 1, ""ld'"": 1, '  S': 12, '""#4': 11, '#4e': 11, '4e9': 11, 'e9a': 11, '9a0': 11, 'a06': 11, '06""': 11, '6"",': 11, "" 's"": 12, ""'s'"": 1, ""s'\n"": 3, 'ng.': 11, 'g.B': 1, '.Ba': 1, 'Bac': 1, 'ckt': 1, 'kti': 1, 'tic': 1, 'ick': 1, 'ck:': 2, 'k: ': 2, ""'sb"": 1, ""sb'"": 1, 'g.C': 1, '.Ch': 1, 'Cha': 1, 'har': 1, 'ar:': 1, ""'sc"": 1, ""sc'"": 1, 'g.D': 2, '.Do': 2, 'Doc': 1, ""'sd"": 1, ""sd'"": 1, 'a c': 1, 'com': 1, 'nt\n': 1, 't\n ': 1, 'Dou': 1, 'oub': 1, 'ubl': 1, ""'s2"": 1, ""s2'"": 1, ""2'\n"": 1, 'g.E': 1, '.Es': 1, 'Esc': 1, 'sca': 1, 'cap': 1, 'ape': 1, ""'se"": 1, ""se'"": 1, 'g.H': 1, '.He': 2, 'Her': 1, 'ere': 1, 'red': 1, 'edo': 1, 'doc': 1, ""'sh"": 1, ""sh'"": 1, ""h'\n"": 2, 'g.I': 1, 'Int': 1, 'nte': 1, 'erp': 1, 'rpo': 1, 'pol': 1, 'ol:': 2, ""'si"": 1, ""si'"": 1, 'g.O': 1, ""'sx"": 1, ""sx'"": 1, 'g.R': 1, 'Reg': 1, 'ege': 1, 'gex': 1, 'ex:': 1, 'x: ': 1, ""'sr"": 1, ""sr'"": 1, 'g.S': 2, '.Si': 1, 'Sin': 1, 'ngl': 1, 'gle': 1, ""'s1"": 1, ""s1'"": 1, ""1'\n"": 1, '.Sy': 1, 'Sym': 1, 'ymb': 1, 'mbo': 1, ""'ss"": 1, ""ss'"": 1, '  G': 11, 'ic:': 1, "" 'g"": 11, ""'g'"": 1, ""g'\n"": 1, 'ic.': 10, 'c.D': 1, 'Del': 1, 'ele': 1, 'let': 1, 'ete': 1, 'ted': 2, ""'gd"": 1, ""gd'"": 1, 'c.E': 2, '.Em': 1, 'Emp': 1, 'mph': 1, 'ph:': 1, 'h: ': 1, ""'ge"": 1, ""ge'"": 1, '.Er': 1, '""#e': 1, ""'gr"": 1, ""gr'"": 1, 'c.H': 1, 'Hea': 1, 'ead': 2, 'adi': 2, '008': 2, '080': 2, '80""': 2, ""'gh"": 1, ""gh'"": 1, 'c.I': 1, 'nse': 1, 'rte': 1, '00A': 1, '0A0': 1, 'A00': 1, ""'gi"": 1, ""gi'"": 1, 'c.O': 1, '.Ou': 1, 'Out': 1, 'utp': 1, 'tpu': 1, 'put': 1, 'ut:': 1, ""'go"": 1, ""go'"": 1, 'c.P': 1, 'omp': 1, 'mpt': 1, 'pt:': 1, '""#7': 1, '#74': 1, '745': 1, '453': 1, '533': 1, '334': 1, '34""': 1, ""'gp"": 1, ""gp'"": 1, 'c.S': 2, '.St': 1, 'tro': 1, 'ron': 1, 'ong': 1, ""'gs"": 1, ""gs'"": 1, '.Su': 1, 'Sub': 1, 'ubh': 1, 'bhe': 1, 'hea': 1, '#80': 1, ""'gu"": 1, ""gu'"": 1, ""u'\n"": 1, 'c.T': 1, '.Tr': 1, 'Tra': 1, 'rac': 1, 'ceb': 1, 'eba': 1, ' #a': 1, ""'gt"": 1, ""gt'"": 1, '  }': 1, ' }\n': 1}"
Armin Ronacher,cli.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, '-*-': 2, 'coding:': 1, 'utf-8': 1, '""""""': 2, 'rstblog.cli': 1, '~~~~~~~~~~~': 1, 'the': 4, 'command': 1, 'line': 1, 'interface': 1, ':copyright:': 1, '(c)': 1, '2010': 1, 'by': 1, 'armin': 1, 'ronacher.': 1, ':license:': 1, 'bsd,': 1, 'see': 1, 'license': 1, 'for': 3, 'more': 1, 'details.': 1, 'from': 5, '__future__': 3, 'import': 7, 'with_statement': 1, 'absolute_import': 1, 'print_function': 1, 'sys': 1, 'os': 1, 'rstblog.config': 1, 'config': 4, 'rstblog.builder': 1, 'builder': 3, 'def': 2, 'get_builder(project_folder):': 1, '""""""runs': 1, 'given': 1, 'project': 1, 'folder.""""""': 1, 'config_filename': 1, '=': 8, 'os.path.join(project_folder,': 1, ""'config.yml')"": 1, 'config()': 1, 'if': 6, 'not': 3, 'os.path.isfile(config_filename):': 1, 'raise': 1, ""valueerror('root"": 1, 'file': 1, '""%s""': 1, 'is': 1, ""required'"": 1, '%': 1, 'config_filename)': 1, 'with': 1, 'open(config_filename)': 1, 'as': 1, 'f:': 1, 'config.add_from_file(f)': 1, 'return': 1, 'builder(project_folder,': 1, 'config)': 1, 'main():': 1, '""""""entrypoint': 1, 'console': 1, 'script.""""""': 1, 'len(sys.argv)': 3, 'in': 2, '(1,': 1, '2,': 1, '3):': 1, ""print('usage:"": 1, 'rstblog': 1, '<action>': 1, ""<folder>',"": 1, 'file=sys.stderr)': 2, '>=': 2, '2:': 1, 'action': 4, 'sys.argv[1]': 1, 'else:': 3, ""'build'"": 1, '3:': 1, 'folder': 2, 'sys.argv[2]': 1, 'os.getcwd()': 1, ""('build',"": 1, ""'serve'):"": 1, ""print('unknown"": 1, ""action',"": 1, 'action,': 1, 'get_builder(folder)': 1, '==': 1, ""'build':"": 1, 'builder.run()': 1, 'builder.debug_serve()': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 10, 'cod': 1, 'odi': 1, 'din': 1, 'ing': 1, 'ng:': 1, 'g: ': 1, ': u': 1, ' ut': 1, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\n""': 1, '\n""""': 2, '""""""': 6, '""""\n': 4, '""\n ': 3, '\n  ': 31, '   ': 102, '  r': 3, ' rs': 4, 'rst': 4, 'stb': 4, 'tbl': 4, 'blo': 4, 'log': 4, 'og.': 3, 'g.c': 2, '.cl': 1, 'cli': 1, 'li\n': 1, 'i\n ': 1, '  ~': 1, ' ~~': 1, '~~~': 9, '~~\n': 1, '~\n\n': 1, '\n\n ': 3, '  T': 1, ' Th': 1, 'The': 1, 'he ': 4, 'e c': 2, 'com': 1, 'omm': 1, 'mma': 1, 'man': 1, 'and': 1, 'nd ': 1, 'd l': 1, ' li': 1, 'lin': 1, 'ine': 1, 'ne ': 1, 'e i': 1, ' in': 3, 'int': 5, 'nte': 1, 'ter': 1, 'erf': 1, 'rfa': 1, 'fac': 1, 'ace': 1, 'ce\n': 1, 'e\n\n': 1, '  :': 2, ' :c': 1, ':co': 1, 'cop': 1, 'opy': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 1, ': (': 1, ' (c': 1, '(c)': 1, 'c) ': 1, ') 2': 1, ' 20': 1, '201': 1, '010': 1, '10 ': 1, '0 b': 1, ' by': 1, 'by ': 1, 'y A': 1, ' Ar': 1, 'Arm': 1, 'rmi': 1, 'min': 1, 'in ': 3, 'n R': 1, ' Ro': 1, 'Ron': 1, 'ona': 1, 'nac': 1, 'ach': 1, 'che': 1, 'her': 1, 'er.': 4, 'r.\n': 1, '.\n ': 1, ' :l': 1, ':li': 1, 'lic': 1, 'ice': 1, 'cen': 1, 'ens': 1, 'nse': 1, 'se:': 4, 'e: ': 2, ': B': 1, ' BS': 1, 'BSD': 1, 'SD,': 1, 'D, ': 1, ', s': 1, ' se': 1, 'see': 1, 'ee ': 1, 'e L': 1, ' LI': 1, 'LIC': 1, 'ICE': 1, 'CEN': 1, 'ENS': 1, 'NSE': 1, 'SE ': 1, 'E f': 1, ' fo': 6, 'for': 3, 'or ': 3, 'r m': 1, ' mo': 1, 'mor': 1, 'ore': 1, 're ': 1, 'e d': 1, ' de': 1, 'det': 1, 'eta': 1, 'tai': 1, 'ail': 1, 'ils': 1, 'ls.': 1, 's.\n': 1, '.\n""': 1, '""\nf': 1, '\nfr': 5, 'fro': 6, 'rom': 6, 'om ': 5, 'm _': 3, ' __': 3, '__f': 3, '_fu': 4, 'fut': 3, 'utu': 3, 'tur': 4, 'ure': 3, 're_': 3, 'e__': 3, '__ ': 3, '_ i': 3, ' im': 5, 'imp': 8, 'mpo': 8, 'por': 8, 'ort': 8, 'rt ': 7, 't w': 1, ' wi': 2, 'wit': 2, 'ith': 2, 'th_': 1, 'h_s': 1, '_st': 1, 'sta': 1, 'tat': 1, 'ate': 1, 'tem': 1, 'eme': 1, 'men': 1, 'ent': 1, 'nt\n': 1, 't\nf': 2, 't a': 1, ' ab': 1, 'abs': 1, 'bso': 1, 'sol': 2, 'olu': 1, 'lut': 1, 'ute': 1, 'te_': 1, 'e_i': 1, '_im': 1, 'rt\n': 1, 't p': 1, ' pr': 4, 'pri': 3, 'rin': 3, 'nt_': 1, 't_f': 4, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 8, 'tio': 8, 'ion': 8, 'on\n': 1, 'n\ni': 1, '\nim': 2, 't s': 1, ' sy': 3, 'sys': 8, 'ys\n': 1, 's\ni': 1, 't o': 2, ' os': 4, 'os\n': 1, 's\nf': 1, 'm r': 2, '.co': 1, 'con': 12, 'onf': 13, 'nfi': 13, 'fig': 13, 'ig ': 4, 'g i': 1, 't C': 1, ' Co': 2, 'Con': 2, 'ig\n': 1, 'g\nf': 1, 'g.b': 1, '.bu': 1, 'bui': 10, 'uil': 12, 'ild': 12, 'lde': 17, 'der': 19, 'er ': 5, 'r i': 1, 't B': 1, ' Bu': 2, 'Bui': 2, 'er\n': 1, 'r\n\n': 1, '\n\n\n': 2, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f g': 1, ' ge': 2, 'get': 3, 'et_': 2, 't_b': 2, '_bu': 2, 'er(': 3, 'r(p': 2, '(pr': 3, 'pro': 4, 'roj': 4, 'oje': 4, 'jec': 4, 'ect': 4, 'ct_': 3, '_fo': 3, 'fol': 8, 'old': 8, 'er)': 2, 'r):': 1, '):\n': 5, ':\n ': 12, '  ""': 2, ' """"': 2, '""""R': 1, '""Ru': 1, 'Run': 1, 'uns': 1, 'ns ': 1, 's t': 1, ' th': 3, 'the': 3, 'e b': 1, ' bu': 4, 'r f': 1, 'r t': 2, 'e g': 1, ' gi': 1, 'giv': 1, 'ive': 1, 'ven': 1, 'en ': 1, 'n p': 1, 'ct ': 1, 't f': 2, 'r.""': 1, '.""""': 2, '  c': 3, 'ig_': 4, 'g_f': 4, '_fi': 5, 'fil': 9, 'ile': 9, 'len': 7, 'ena': 4, 'nam': 4, 'ame': 4, 'me ': 1, 'e =': 1, ' = ': 8, '= o': 2, 'os.': 3, 's.p': 2, '.pa': 2, 'pat': 2, 'ath': 2, 'th.': 2, 'h.j': 1, '.jo': 1, 'joi': 1, 'oin': 2, 'in(': 2, 'n(p': 1, 'er,': 2, 'r, ': 2, "", '"": 2, "" 'c"": 1, ""'co"": 1, 'ig.': 2, 'g.y': 1, '.ym': 1, 'yml': 1, ""ml'"": 1, ""l')"": 1, ""')\n"": 1, ')\n ': 8, 'g =': 2, '= C': 1, 'ig(': 1, 'g()': 1, '()\n': 4, '  i': 6, ' if': 6, 'if ': 6, 'f n': 1, ' no': 3, 'not': 3, 'ot ': 4, 'h.i': 1, '.is': 1, 'isf': 1, 'sfi': 1, 'le(': 2, 'e(c': 1, '(co': 2, 'me)': 3, 'e):': 1, ' ra': 1, 'rai': 1, 'ais': 1, 'ise': 1, 'se ': 1, 'e V': 1, ' Va': 1, 'Val': 1, 'alu': 1, 'lue': 1, 'ueE': 1, 'eEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or(': 1, ""r('"": 1, ""('r"": 1, ""'ro"": 1, 'roo': 1, 'oot': 1, 't c': 1, 'g f': 1, ' fi': 3, 'le ': 2, 'e ""': 1, ' ""%': 1, '""%s': 1, '%s""': 1, 's"" ': 1, '"" i': 1, ' is': 1, 'is ': 1, 's r': 1, ' re': 2, 'req': 1, 'equ': 1, 'qui': 1, 'uir': 1, 'ire': 1, 'red': 1, ""ed'"": 1, ""d' "": 1, ""' %"": 1, ' % ': 1, '% c': 1, 'e)\n': 1, '  w': 1, 'th ': 1, 'h o': 1, ' op': 1, 'ope': 1, 'pen': 1, 'en(': 4, 'n(c': 1, 'e) ': 1, ') a': 1, ' as': 1, 'as ': 1, 's f': 1, ' f:': 1, 'f:\n': 1, '= c': 1, 'g.a': 1, '.ad': 1, 'add': 1, 'dd_': 1, 'd_f': 1, '_fr': 1, 'om_': 1, 'm_f': 1, 'e(f': 1, '(f)': 1, 'f)\n': 1, 'ret': 1, 'etu': 1, 'urn': 1, 'rn ': 1, 'n B': 1, ', c': 1, 'ig)': 1, 'g)\n': 1, ')\n\n': 2, 'f m': 1, ' ma': 1, 'mai': 1, 'ain': 1, 'n()': 2, '():': 1, '""""E': 1, '""En': 1, 'Ent': 1, 'ntr': 1, 'try': 1, 'ryp': 1, 'ypo': 1, 'poi': 1, 'nt ': 1, 'ons': 1, 'nso': 1, 'ole': 1, 'e s': 1, ' sc': 1, 'scr': 1, 'cri': 1, 'rip': 1, 'ipt': 1, 'pt.': 1, 't.""': 1, 'f l': 3, ' le': 3, 'n(s': 3, '(sy': 3, 'ys.': 7, 's.a': 5, '.ar': 5, 'arg': 5, 'rgv': 5, 'gv)': 3, 'v) ': 3, ') n': 1, 't i': 2, 'n (': 2, ' (1': 1, '(1,': 1, '1, ': 1, ', 2': 1, ' 2,': 1, '2, ': 1, ', 3': 1, ' 3)': 1, '3):': 1, '  p': 2, 'nt(': 2, ""t('"": 2, ""('u"": 2, ""'us"": 1, 'usa': 1, 'sag': 1, 'age': 1, 'ge:': 1, ': r': 1, 'og ': 1, 'g <': 1, ' <a': 1, '<ac': 1, 'act': 7, 'on>': 1, 'n> ': 1, '> <': 1, ' <f': 1, '<fo': 1, 'er>': 1, ""r>'"": 1, "">',"": 1, ""', "": 3, ', f': 2, 'le=': 2, 'e=s': 2, '=sy': 2, 's.s': 2, '.st': 2, 'std': 2, 'tde': 2, 'err': 2, 'rr)': 2, 'r)\n': 3, ') >': 2, ' >=': 2, '>= ': 2, '= 2': 1, ' 2:': 1, '2:\n': 1, '  a': 2, ' ac': 6, 'on ': 4, 'n =': 3, '= s': 2, 'gv[': 2, 'v[1': 1, '[1]': 1, '1]\n': 1, ']\n ': 2, '  e': 3, ' el': 3, 'els': 3, 'lse': 3, 'e:\n': 3, ""= '"": 2, "" 'b"": 2, ""'bu"": 3, ""ld'"": 3, ""d'\n"": 1, ""'\n "": 1, '= 3': 1, ' 3:': 1, '3:\n': 1, '  f': 2, 'r =': 3, 'v[2': 1, '[2]': 1, '2]\n': 1, 's.g': 1, '.ge': 1, 'etc': 1, 'tcw': 1, 'cwd': 1, 'wd(': 1, 'd()': 1, 'f a': 2, 'n n': 1, "" ('"": 1, ""('b"": 1, ""d',"": 1, "" 's"": 1, ""'se"": 1, 'ser': 2, 'erv': 2, 'rve': 2, ""ve'"": 1, ""e')"": 1, ""'):"": 1, ""'un"": 1, 'unk': 1, 'nkn': 1, 'kno': 1, 'now': 1, 'own': 1, 'wn ': 1, 'n a': 1, ""on'"": 1, ""n',"": 1, ', a': 1, 'on,': 1, 'n, ': 1, '  b': 3, '= g': 1, 'r(f': 1, '(fo': 1, ' ==': 1, '== ': 1, ""d':"": 1, ""':\n"": 1, 'r.r': 1, '.ru': 1, 'run': 1, 'un(': 1, 'r.d': 1, '.de': 1, 'deb': 1, 'ebu': 1, 'bug': 1, 'ug_': 1, 'g_s': 1, '_se': 1, 've(': 1, 'e()': 1}"
Armin Ronacher,config.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, '-*-': 2, 'coding:': 1, 'utf-8': 1, '""""""': 4, 'rstblog.config': 1, '~~~~~~~~~~~~~~': 1, 'holds': 1, 'the': 1, 'configuration': 1, 'and': 1, 'can': 1, 'read': 1, 'it': 1, 'from': 6, 'another': 3, 'file.': 2, ':copyright:': 1, '(c)': 1, '2010': 1, 'by': 1, 'armin': 1, 'ronacher.': 1, ':license:': 1, 'bsd,': 1, 'see': 1, 'license': 1, 'for': 6, 'more': 1, 'details.': 1, '__future__': 1, 'import': 3, 'absolute_import': 1, 'yaml': 1, 'six': 1, 'missing': 1, '=': 14, 'object()': 1, 'class': 1, 'config(object):': 1, '""""""a': 1, 'stacked': 1, 'config.""""""': 1, 'def': 10, '__init__(self):': 1, 'self.stack': 2, '[]': 1, '__getitem__(self,': 1, 'key):': 3, 'layer': 6, 'in': 5, 'reversed(self.stack):': 2, 'rv': 10, 'layer.get(key,': 2, 'missing)': 2, 'if': 8, 'is': 3, 'not': 4, 'missing:': 2, 'return': 9, 'raise': 3, 'keyerror(key)': 1, 'get(self,': 1, 'key,': 4, 'default=none):': 2, 'try:': 1, 'self[key]': 1, 'except': 1, 'keyerror:': 1, 'default': 1, 'list_entries(self,': 1, '{}': 2, 'prefix': 2, 'key': 2, '+': 5, ""'.'"": 1, 'self.stack:': 1, 'value': 4, 'six.iteritems(layer):': 1, 'key.startswith(prefix):': 1, 'rv[key]': 1, 'merged_get(self,': 1, 'result': 4, 'none': 1, 'none:': 1, 'else:': 3, 'isinstance(result,': 2, 'list):': 1, 'result.extend(rv)': 1, 'elif': 1, 'dict):': 3, 'result.update(rv)': 1, ""valueerror('expected"": 1, 'list': 1, 'or': 1, ""dict')"": 2, 'root_get(self,': 1, 'self.stack[0].get(key,': 1, 'default)': 1, 'add_from_dict(self,': 1, 'd):': 1, '""""""returns': 2, 'a': 5, 'new': 2, 'config': 5, 'this': 2, 'with': 2, 'added': 2, 'given': 2, 'dictionary.': 1, 'config()': 1, 'rv.stack': 1, '[layer]': 1, '_walk(d,': 2, 'prefix):': 1, 'six.iteritems(d):': 1, 'isinstance(value,': 1, '_walk(value,': 1, ""'.')"": 1, 'layer[prefix': 1, 'key]': 1, ""'')"": 1, 'add_from_file(self,': 1, 'fd):': 1, 'd': 1, 'yaml.safe_load(fd)': 1, 'd:': 1, 'isinstance(d,': 1, ""valueerror('configuration"": 1, 'has': 1, 'to': 1, 'contain': 1, 'self.add_from_dict(d)': 1, 'pop(self):': 1, 'self.stack.pop()': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 9, 'cod': 1, 'odi': 1, 'din': 1, 'ing': 6, 'ng:': 3, 'g: ': 1, ': u': 1, ' ut': 1, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\n""': 1, '\n""""': 2, '""""""': 8, '""""\n': 5, '""\n ': 3, '\n  ': 71, '   ': 586, '  r': 23, ' rs': 1, 'rst': 1, 'stb': 1, 'tbl': 1, 'blo': 1, 'log': 1, 'og.': 1, 'g.c': 1, '.co': 1, 'con': 9, 'onf': 11, 'nfi': 11, 'fig': 11, 'ig\n': 1, 'g\n ': 1, '  ~': 1, ' ~~': 1, '~~~': 12, '~~\n': 1, '~\n\n': 1, '\n\n ': 11, '  H': 1, ' Ho': 1, 'Hol': 1, 'old': 1, 'lds': 1, 'ds ': 1, 's t': 2, ' th': 3, 'the': 4, 'he ': 1, 'e c': 1, 'igu': 2, 'gur': 2, 'ura': 2, 'rat': 2, 'ati': 2, 'tio': 3, 'ion': 3, 'on ': 2, 'n a': 2, ' an': 4, 'and': 1, 'nd ': 1, 'd c': 2, ' ca': 1, 'can': 1, 'an ': 1, 'n r': 7, ' re': 18, 'rea': 1, 'ead': 1, 'ad ': 1, 'd i': 1, ' it': 1, 'it ': 1, 't f': 1, ' fr': 5, 'fro': 9, 'rom': 9, 'om ': 6, 'm a': 3, 'ano': 3, 'not': 7, 'oth': 3, 'her': 4, 'er ': 9, 'r f': 1, ' fi': 2, 'fil': 3, 'ile': 3, 'le.': 2, 'e.\n': 2, '.\n\n': 1, '  :': 2, ' :c': 1, ':co': 1, 'cop': 1, 'opy': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 1, ': (': 1, ' (c': 1, '(c)': 1, 'c) ': 1, ') 2': 1, ' 20': 1, '201': 1, '010': 1, '10 ': 1, '0 b': 1, ' by': 1, 'by ': 1, 'y A': 1, ' Ar': 1, 'Arm': 1, 'rmi': 1, 'min': 1, 'in ': 7, 'n R': 1, ' Ro': 1, 'Ron': 1, 'ona': 2, 'nac': 1, 'ach': 1, 'che': 1, 'er.': 3, 'r.\n': 1, '.\n ': 3, ' :l': 1, ':li': 1, 'lic': 1, 'ice': 1, 'cen': 1, 'ens': 1, 'nse': 1, 'se:': 4, 'e: ': 1, ': B': 1, ' BS': 1, 'BSD': 1, 'SD,': 1, 'D, ': 1, ', s': 1, ' se': 8, 'see': 1, 'ee ': 1, 'e L': 1, ' LI': 1, 'LIC': 1, 'ICE': 1, 'CEN': 1, 'ENS': 1, 'NSE': 1, 'SE ': 1, 'E f': 1, ' fo': 6, 'for': 6, 'or ': 7, 'r m': 1, ' mo': 1, 'mor': 1, 'ore': 1, 're ': 1, 'e d': 1, ' de': 15, 'det': 1, 'eta': 1, 'tai': 2, 'ail': 1, 'ils': 1, 'ls.': 1, 's.\n': 1, '.\n""': 1, '""\nf': 1, '\nfr': 1, 'm _': 1, ' __': 3, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 12, 'ure': 1, 're_': 1, 'e__': 1, '__ ': 1, '_ i': 1, ' im': 1, 'imp': 4, 'mpo': 4, 'por': 4, 'ort': 4, 'rt ': 3, 't a': 1, ' ab': 1, 'abs': 1, 'bso': 1, 'sol': 1, 'olu': 1, 'lut': 1, 'ute': 1, 'te_': 1, 'e_i': 1, '_im': 1, 'rt\n': 1, 't\ni': 1, '\nim': 2, 't y': 1, ' ya': 2, 'yam': 2, 'aml': 2, 'ml\n': 1, 'l\ni': 1, 't s': 1, ' si': 3, 'six': 3, 'ix\n': 1, 'x\n\n': 1, '\n\n\n': 2, '\n\nm': 1, '\nmi': 1, 'mis': 5, 'iss': 5, 'ssi': 5, 'sin': 9, 'ng ': 1, 'g =': 1, ' = ': 14, '= o': 1, ' ob': 1, 'obj': 2, 'bje': 2, 'jec': 2, 'ect': 3, 'ct(': 3, 't()': 1, '()\n': 3, ')\n\n': 4, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's C': 1, ' Co': 2, 'Con': 3, 'ig(': 2, 'g(o': 1, '(ob': 1, 'ct)': 4, 't):': 5, '):\n': 20, ':\n ': 30, '  ""': 5, ' """"': 5, '""""A': 1, '""A ': 1, 'A s': 1, ' st': 1, 'sta': 14, 'tac': 9, 'ack': 9, 'cke': 1, 'ked': 1, 'ed ': 2, 'ig.': 1, 'g.""': 1, '.""""': 1, '""\n\n': 1, '  d': 11, 'def': 14, 'ef ': 10, 'f _': 3, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 2, '_(s': 2, '(se': 11, 'sel': 18, 'elf': 18, 'lf)': 2, 'f):': 2, '  s': 2, 'lf.': 8, 'f.s': 7, '.st': 9, 'ck ': 3, 'k =': 2, '= [': 1, ' []': 1, '[]\n': 1, ']\n\n': 1, '__g': 1, '_ge': 3, 'get': 7, 'eti': 1, 'tit': 1, 'ite': 5, 'tem': 3, 'em_': 1, 'm__': 1, 'lf,': 7, 'f, ': 7, ', k': 5, ' ke': 11, 'key': 17, 'ey)': 4, 'y):': 3, '  f': 7, 'r l': 5, ' la': 9, 'lay': 11, 'aye': 11, 'yer': 11, 'r i': 3, ' in': 5, 'rev': 2, 'eve': 2, 'ver': 2, 'ers': 2, 'rse': 2, 'sed': 2, 'ed(': 2, 'd(s': 2, 'ck)': 2, 'k):': 2, ' rv': 12, 'rv ': 6, 'v =': 4, '= l': 2, 'r.g': 2, '.ge': 3, 'et(': 6, 't(k': 3, '(ke': 4, 'ey,': 7, 'y, ': 7, ', m': 2, ' mi': 4, 'ng)': 2, 'g)\n': 2, ')\n ': 10, '  i': 8, ' if': 8, 'if ': 9, 'f r': 4, 'v i': 2, ' is': 7, 'is ': 5, 's n': 2, ' no': 4, 'ot ': 4, 't m': 2, 'g:\n': 2, 'ret': 9, 'etu': 11, 'urn': 11, 'rn ': 8, 'rv\n': 4, 'v\n ': 2, ' ra': 3, 'rai': 3, 'ais': 3, 'ise': 3, 'se ': 3, 'e K': 1, ' Ke': 2, 'Key': 2, 'eyE': 2, 'yEr': 2, 'Err': 4, 'rro': 4, 'ror': 4, 'or(': 3, 'r(k': 1, 'y)\n': 1, 'f g': 1, ' ge': 1, 't(s': 4, ', d': 7, 'efa': 4, 'fau': 4, 'aul': 4, 'ult': 12, 'lt=': 2, 't=N': 2, '=No': 2, 'Non': 4, 'one': 4, 'ne)': 2, 'e):': 2, '  t': 1, ' tr': 1, 'try': 1, 'ry:': 1, 'y:\n': 1, 'n s': 6, 'lf[': 1, 'f[k': 1, '[ke': 2, 'ey]': 3, 'y]\n': 1, ']\n ': 2, '  e': 5, ' ex': 1, 'exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pt ': 1, 't K': 1, 'or:': 1, 'r:\n': 1, 'n d': 2, 'lt\n': 2, 't\n\n': 2, 'f l': 1, ' li': 3, 'lis': 3, 'ist': 3, 'st_': 1, 't_e': 1, '_en': 1, 'ent': 1, 'ntr': 1, 'tri': 1, 'rie': 1, 'ies': 1, 'es(': 1, 's(s': 1, '= {': 2, ' {}': 2, '{}\n': 2, '}\n ': 2, '  p': 1, ' pr': 3, 'pre': 5, 'ref': 5, 'efi': 5, 'fix': 5, 'ix ': 3, 'x =': 1, '= k': 1, 'ey ': 2, 'y +': 2, ' + ': 5, ""+ '"": 2, "" '."": 2, ""'.'"": 2, "".'\n"": 1, ""'\n "": 1, 'ck:': 1, 'k:\n': 1, 'r k': 2, ', v': 2, ' va': 4, 'val': 6, 'alu': 8, 'lue': 8, 'ue ': 2, 'e i': 2, 'ix.': 2, 'x.i': 2, '.it': 2, 'ter': 2, 'eri': 2, 'rit': 2, 'ems': 2, 'ms(': 2, 's(l': 1, '(la': 1, 'er)': 1, 'r):': 1, 'f k': 1, 'ey.': 1, 'y.s': 1, 'tar': 1, 'art': 1, 'rts': 1, 'tsw': 1, 'swi': 1, 'wit': 3, 'ith': 3, 'th(': 1, 'h(p': 1, '(pr': 1, 'ix)': 2, 'x):': 2, 'rv[': 1, 'v[k': 1, 'y] ': 2, '] =': 2, '= v': 2, 'ue\n': 2, 'e\n ': 3, 'v\n\n': 2, 'f m': 1, ' me': 1, 'mer': 1, 'erg': 1, 'rge': 1, 'ged': 1, 'ed_': 1, 'd_g': 1, 'res': 8, 'esu': 8, 'sul': 8, 'lt ': 3, 't =': 2, '= N': 1, ' No': 2, 'ne\n': 1, 't i': 2, 's N': 1, 'ne:': 1, 'e:\n': 4, '= r': 1, ' el': 4, 'els': 3, 'lse': 3, 'f i': 3, 'isi': 4, 'ins': 4, 'nst': 4, 'tan': 4, 'anc': 4, 'nce': 4, 'ce(': 4, 'e(r': 3, '(re': 2, 'lt,': 2, 't, ': 2, ', l': 1, 'st)': 1, 'lt.': 2, 't.e': 1, '.ex': 1, 'ext': 1, 'xte': 1, 'ten': 1, 'end': 1, 'nd(': 1, 'd(r': 1, '(rv': 2, 'rv)': 2, 'v)\n': 2, 'eli': 1, 'lif': 1, ' di': 6, 'dic': 8, 'ict': 8, 't.u': 1, '.up': 1, 'upd': 1, 'pda': 1, 'dat': 1, 'ate': 1, 'te(': 1, 'e V': 2, ' Va': 2, 'Val': 2, 'ueE': 2, 'eEr': 2, ""r('"": 2, ""('e"": 1, ""'ex"": 1, 'exp': 1, 'xpe': 1, 'pec': 1, 'cte': 1, 'ted': 1, 'd l': 1, 'st ': 1, 't o': 1, ' or': 1, 'r d': 1, ""ct'"": 2, ""t')"": 2, ""')\n"": 4, ' ro': 1, 'roo': 1, 'oot': 1, 'ot_': 1, 't_g': 1, 'ck[': 1, 'k[0': 1, '[0]': 1, '0].': 1, '].g': 1, 'lt)': 1, 't)\n': 1, 'f a': 2, ' ad': 4, 'add': 5, 'dd_': 3, 'd_f': 3, '_fr': 3, 'om_': 3, 'm_d': 2, '_di': 2, ' d)': 1, 'd):': 3, '""""R': 2, '""Re': 2, 'Ret': 2, 'rns': 2, 'ns ': 2, 's a': 2, ' a ': 5, 'a n': 2, ' ne': 2, 'new': 2, 'ew ': 2, 'w c': 2, 'ig ': 5, 'g f': 3, 'm t': 2, 'thi': 2, 'his': 2, 's c': 2, 'g w': 2, ' wi': 2, 'th ': 2, 'h a': 2, 'r a': 2, 'dde': 2, 'ded': 2, 'ed\n': 2, 'd\n ': 2, 'a g': 2, ' gi': 2, 'giv': 2, 'ive': 2, 'ven': 2, 'en ': 2, 'cti': 1, 'nar': 1, 'ary': 1, 'ry.': 1, 'y.\n': 1, '  l': 2, 'r =': 1, '= C': 1, 'g()': 1, 'rv.': 1, 'v.s': 1, '= s': 1, 'k +': 1, '+ [': 1, ' [l': 1, '[la': 1, 'er]': 1, 'r]\n': 1, ' _w': 3, '_wa': 3, 'wal': 3, 'alk': 3, 'lk(': 3, 'k(d': 2, '(d,': 3, 'd, ': 3, ', p': 2, 's(d': 1, '(d)': 2, 'e(v': 1, '(va': 2, 'ue,': 2, 'e, ': 2, '  _': 2, 'k(v': 1, 'x +': 2, '+ k': 2, "".')"": 1, 'er[': 1, 'r[p': 1, '[pr': 1, "", '"": 1, "" ''"": 1, ""'')"": 1, 'm_f': 1, '_fi': 1, 'le(': 1, 'e(s': 1, ', f': 1, ' fd': 1, 'fd)': 2, 'n c': 1, ' d ': 1, 'd =': 1, '= y': 1, 'ml.': 1, 'l.s': 1, '.sa': 1, 'saf': 1, 'afe': 1, 'fe_': 1, 'e_l': 1, '_lo': 1, 'loa': 1, 'oad': 1, 'ad(': 1, 'd(f': 1, '(fd': 1, 'd)\n': 2, 'f n': 2, 't d': 1, ' d:': 1, 'd:\n': 1, 'rn\n': 1, 'n\n ': 1, 'e(d': 1, ""('C"": 1, ""'Co"": 1, 'n h': 1, ' ha': 1, 'has': 1, 'as ': 1, ' to': 1, 'to ': 1, 'o c': 1, 'ont': 1, 'nta': 1, 'ain': 1, 'a d': 1, 'f.a': 1, '.ad': 1, 't(d': 1, 'f p': 1, ' po': 1, 'pop': 2, 'op(': 2, 'p(s': 1, 'ck.': 1, 'k.p': 1, '.po': 1, 'p()': 1}"
Armin Ronacher,flask_theme_support.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 66, 'flasky': 2, 'extensions.': 1, 'pygments': 1, 'style': 3, 'based': 1, 'on': 1, 'tango': 1, 'from': 2, 'pygments.style': 1, 'import': 2, 'pygments.token': 1, 'keyword,': 1, 'name,': 1, 'comment,': 1, 'string,': 1, 'error,': 1, '\\': 1, 'number,': 1, 'operator,': 1, 'generic,': 1, 'whitespace,': 1, 'punctuation,': 1, 'other,': 1, 'literal': 1, 'class': 3, 'flaskystyle(style):': 1, 'background_color': 1, '=': 3, '""#f8f8f8""': 1, 'default_style': 1, '""""': 1, 'styles': 1, '{': 1, 'no': 1, 'corresponding': 1, 'for': 1, 'the': 3, 'following:': 1, '#text:': 1, '"""",': 1, 'class:': 60, ""''"": 1, 'whitespace:': 1, '""underline': 1, '#f8f8f8"",': 1, ""'w'"": 1, 'error:': 1, '""#a40000': 1, 'border:#ef2929"",': 1, ""'err'"": 1, 'other:': 1, '""#000000"",': 15, ""'x'"": 1, 'comment:': 1, '""italic': 3, '#8f5902"",': 2, ""'c'"": 1, 'comment.preproc:': 1, '""noitalic"",': 1, ""'cp'"": 1, 'keyword:': 1, '""bold': 15, '#004461"",': 9, ""'k'"": 1, 'keyword.constant:': 1, ""'kc'"": 1, 'keyword.declaration:': 1, ""'kd'"": 1, 'keyword.namespace:': 1, ""'kn'"": 1, 'keyword.pseudo:': 1, ""'kp'"": 1, 'keyword.reserved:': 1, ""'kr'"": 1, 'keyword.type:': 1, ""'kt'"": 1, 'operator:': 1, '""#582800"",': 1, ""'o'"": 1, 'operator.word:': 1, ""'ow'"": 1, '-': 12, 'like': 3, 'keywords': 1, 'punctuation:': 1, '#000000"",': 3, ""'p'"": 1, 'because': 1, 'special': 1, 'names': 1, 'such': 2, 'as': 3, 'name.class,': 1, 'name.function,': 1, 'etc.': 1, 'are': 1, 'not': 1, 'recognized': 1, 'later': 1, 'in': 1, 'parsing,': 1, 'we': 1, 'choose': 1, 'them': 1, 'to': 10, 'look': 1, 'same': 1, 'ordinary': 1, 'variables.': 1, 'name:': 1, ""'n'"": 1, 'name.attribute:': 1, '""#c4a000"",': 1, ""'na'"": 1, 'be': 9, 'revised': 9, 'name.builtin:': 1, '""#004461"",': 1, ""'nb'"": 1, 'name.builtin.pseudo:': 1, '""#3465a4"",': 1, ""'bp'"": 1, 'name.class:': 1, ""'nc'"": 1, 'name.constant:': 1, ""'no'"": 1, 'name.decorator:': 1, '""#888"",': 2, ""'nd'"": 1, 'name.entity:': 1, '""#ce5c00"",': 1, ""'ni'"": 1, 'name.exception:': 1, '#cc0000"",': 1, ""'ne'"": 1, 'name.function:': 1, ""'nf'"": 1, 'name.property:': 1, ""'py'"": 1, 'name.label:': 1, '""#f57900"",': 1, ""'nl'"": 1, 'name.namespace:': 1, ""'nn'"": 1, 'name.other:': 1, ""'nx'"": 1, 'name.tag:': 1, ""'nt'"": 1, 'a': 2, 'keyword': 1, 'name.variable:': 1, ""'nv'"": 1, 'name.variable.class:': 1, ""'vc'"": 1, 'name.variable.global:': 1, ""'vg'"": 1, 'name.variable.instance:': 1, ""'vi'"": 1, 'number:': 1, '""#990000"",': 1, ""'m'"": 1, 'literal:': 1, ""'l'"": 1, 'literal.date:': 1, ""'ld'"": 1, 'string:': 1, '""#4e9a06"",': 11, ""'s'"": 1, 'string.backtick:': 1, ""'sb'"": 1, 'string.char:': 1, ""'sc'"": 1, 'string.doc:': 1, ""'sd'"": 1, 'comment': 1, 'string.double:': 1, ""'s2'"": 1, 'string.escape:': 1, ""'se'"": 1, 'string.heredoc:': 1, ""'sh'"": 1, 'string.interpol:': 1, ""'si'"": 1, 'string.other:': 1, ""'sx'"": 1, 'string.regex:': 1, ""'sr'"": 1, 'string.single:': 1, ""'s1'"": 1, 'string.symbol:': 1, ""'ss'"": 1, 'generic:': 1, ""'g'"": 1, 'generic.deleted:': 1, '""#a40000"",': 1, ""'gd'"": 1, 'generic.emph:': 1, ""'ge'"": 1, 'generic.error:': 1, '""#ef2929"",': 1, ""'gr'"": 1, 'generic.heading:': 1, '#000080"",': 1, ""'gh'"": 1, 'generic.inserted:': 1, '""#00a000"",': 1, ""'gi'"": 1, 'generic.output:': 1, ""'go'"": 1, 'generic.prompt:': 1, '""#745334"",': 1, ""'gp'"": 1, 'generic.strong:': 1, ""'gs'"": 1, 'generic.subheading:': 1, '#800080"",': 1, ""'gu'"": 1, 'generic.traceback:': 1, '#a40000"",': 1, ""'gt'"": 1, '}': 1}","{'# f': 1, ' fl': 2, 'fla': 2, 'las': 69, 'ask': 3, 'sky': 3, 'ky ': 2, 'y e': 1, ' ex': 1, 'ext': 2, 'xte': 1, 'ten': 1, 'ens': 1, 'nsi': 1, 'sio': 1, 'ion': 7, 'ons': 3, 'ns.': 1, 's. ': 1, '.  ': 1, '  f': 1, 'y p': 1, ' py': 3, 'pyg': 3, 'ygm': 3, 'gme': 3, 'men': 7, 'ent': 7, 'nts': 3, 'ts ': 1, 's s': 3, ' st': 3, 'sty': 5, 'tyl': 8, 'yle': 8, 'le ': 3, 'e b': 1, ' ba': 2, 'bas': 1, 'ase': 1, 'sed': 10, 'ed ': 2, 'd o': 1, ' on': 1, 'on ': 1, 'n t': 2, ' ta': 1, 'tan': 4, 'ang': 1, 'ngo': 1, 'go ': 1, 'o s': 1, 'le\n': 2, 'e\nf': 2, '\nfr': 2, 'fro': 2, 'rom': 3, 'om ': 2, 'm p': 2, 'ts.': 2, 's.s': 1, '.st': 1, 'e i': 1, ' im': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't S': 1, ' St': 14, 'Sty': 3, 's.t': 1, '.to': 1, 'tok': 1, 'oke': 1, 'ken': 1, 'en ': 1, 'n i': 1, 't K': 1, ' Ke': 8, 'Key': 8, 'eyw': 10, 'ywo': 10, 'wor': 10, 'ord': 13, 'rd,': 1, 'd, ': 1, ', N': 2, ' Na': 22, 'Nam': 24, 'ame': 26, 'me,': 1, 'e, ': 2, ', C': 1, ' Co': 3, 'Com': 3, 'omm': 4, 'mme': 4, 'nt,': 1, 't, ': 1, ', S': 1, 'Str': 14, 'tri': 14, 'rin': 13, 'ing': 19, 'ng,': 2, 'g, ': 2, ', E': 1, ' Er': 2, 'Err': 3, 'rro': 3, 'ror': 3, 'or,': 2, 'r, ': 4, ', \\': 1, ' \\\n': 1, '\\\n ': 1, '\n  ': 70, '   ': 1372, '  N': 21, ' Nu': 2, 'Num': 2, 'umb': 2, 'mbe': 2, 'ber': 2, 'er,': 2, ', O': 2, ' Op': 3, 'Ope': 3, 'per': 4, 'era': 6, 'rat': 5, 'ato': 4, 'tor': 4, ', G': 1, ' Ge': 12, 'Gen': 12, 'ene': 12, 'ner': 12, 'eri': 12, 'ric': 12, 'ic,': 1, 'c, ': 1, ', W': 1, ' Wh': 2, 'Whi': 2, 'hit': 2, 'ite': 5, 'tes': 2, 'esp': 5, 'spa': 4, 'pac': 4, 'ace': 5, 'ce,': 1, ', P': 1, ' Pu': 2, 'Pun': 2, 'unc': 4, 'nct': 4, 'ctu': 2, 'tua': 2, 'uat': 2, 'ati': 3, 'tio': 6, 'on,': 2, 'n, ': 2, ' Ot': 2, 'Oth': 4, 'the': 8, 'her': 4, ', L': 1, ' Li': 3, 'Lit': 3, 'ter': 5, 'ral': 3, 'al\n': 1, 'l\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 64, 'ass': 66, 'ss ': 3, 's F': 1, ' Fl': 1, 'Fla': 1, 'kyS': 1, 'ySt': 1, 'le(': 1, 'e(S': 1, '(St': 1, 'le)': 1, 'e):': 1, '):\n': 1, ':\n ': 2, '  b': 1, 'bac': 2, 'ack': 3, 'ckg': 1, 'kgr': 1, 'gro': 1, 'rou': 1, 'oun': 1, 'und': 2, 'nd_': 1, 'd_c': 1, '_co': 1, 'col': 1, 'olo': 1, 'lor': 1, 'or ': 2, 'r =': 1, ' = ': 3, '= ""': 2, ' ""#': 41, '""#f': 2, '#f8': 2, 'f8f': 4, '8f8': 4, 'f8""': 2, '8""\n': 1, '""\n ': 1, '  d': 1, ' de': 1, 'def': 1, 'efa': 1, 'fau': 1, 'aul': 1, 'ult': 1, 'lt_': 1, 't_s': 1, '_st': 1, 'e =': 1, ' """"': 2, '""""\n': 1, '""\n\n': 1, '\n\n ': 10, '  s': 1, 'les': 2, 'es ': 2, 's =': 1, '= {': 1, ' {\n': 1, '{\n ': 1, '  #': 61, ' # ': 65, '# N': 1, ' No': 1, 'No ': 1, 'o c': 1, ' co': 2, 'cor': 2, 'orr': 1, 'rre': 1, 'res': 1, 'spo': 1, 'pon': 1, 'ond': 1, 'ndi': 1, 'din': 4, 'ng ': 1, 'g c': 1, ' cl': 62, 's f': 1, ' fo': 2, 'for': 1, 'r t': 1, ' th': 4, 'he ': 3, 'e f': 1, 'fol': 1, 'oll': 1, 'llo': 1, 'low': 1, 'owi': 1, 'win': 1, 'ng:': 5, 'g:\n': 1, ' #T': 1, '#Te': 1, 'Tex': 1, 'xt:': 1, 't: ': 6, ':  ': 62, '  ""': 61, '"""",': 1, '"", ': 61, ', #': 5, '# c': 61, 'ss:': 62, 's: ': 62, ""  '"": 1, "" ''"": 1, ""''\n"": 1, ""'\n "": 42, '  W': 1, 'ce:': 4, 'e: ': 12, ' ""u': 1, '""un': 1, 'nde': 1, 'der': 2, 'erl': 1, 'rli': 1, 'lin': 1, 'ine': 1, 'ne ': 1, 'e #': 1, ' #f': 1, '8"",': 3, ',  ': 56, "": '"": 59, "" 'w"": 1, ""'w'"": 1, ""w'\n"": 1, '  E': 1, 'or:': 4, 'r: ': 9, '""#a': 2, '#a4': 3, 'a40': 3, '400': 3, '000': 87, '00 ': 1, '0 b': 1, ' bo': 1, 'bor': 1, 'rde': 1, 'er:': 5, 'r:#': 1, ':#e': 1, '#ef': 2, 'ef2': 2, 'f29': 2, '292': 2, '929': 2, '29""': 2, '9"",': 2, "" 'e"": 1, ""'er"": 1, 'err': 1, ""rr'"": 1, ""r'\n"": 4, '  O': 3, '""#0': 17, '#00': 30, '00""': 27, '0"",': 29, ""s '"": 1, "" 'x"": 1, ""'x'"": 1, ""x'\n"": 3, ""'\n\n"": 7, '  C': 2, 'nt:': 3, ' ""i': 3, '""it': 3, 'ita': 4, 'tal': 4, 'ali': 4, 'lic': 4, 'ic ': 3, 'c #': 3, ' #8': 3, '#8f': 2, '8f5': 2, 'f59': 2, '590': 2, '902': 2, '02""': 2, '2"",': 2, "" 'c"": 2, ""'c'"": 1, ""c'\n"": 3, 'nt.': 1, 't.P': 1, '.Pr': 3, 'Pre': 1, 'rep': 1, 'epr': 1, 'pro': 1, 'roc': 1, 'oc:': 3, 'c: ': 4, ' ""n': 1, '""no': 1, 'noi': 1, 'oit': 1, 'ic""': 1, 'c"",': 1, ""'cp"": 1, ""cp'"": 1, ""p'\n"": 5, '  K': 7, 'rd:': 2, 'd: ': 5, ' ""b': 15, '""bo': 15, 'bol': 16, 'old': 15, 'ld ': 15, 'd #': 15, ' #0': 13, '004': 10, '044': 10, '446': 10, '461': 10, '61""': 10, '1"",': 10, "" 'k"": 7, ""'k'"": 1, ""k'\n"": 1, 'rd.': 6, 'd.C': 1, '.Co': 2, 'Con': 2, 'nst': 3, 'sta': 3, 'ant': 2, ""'kc"": 1, ""kc'"": 1, 'd.D': 1, '.De': 3, 'Dec': 2, 'ecl': 1, 'lar': 1, 'ara': 1, 'on:': 4, 'n: ': 5, ""'kd"": 1, ""kd'"": 1, ""d'\n"": 3, 'd.N': 1, '.Na': 2, 'mes': 3, ""'kn"": 1, ""kn'"": 1, ""n'\n"": 2, 'd.P': 1, '.Ps': 2, 'Pse': 2, 'seu': 2, 'eud': 2, 'udo': 2, 'do:': 2, 'o: ': 2, ""'kp"": 1, ""kp'"": 1, 'd.R': 1, '.Re': 2, 'Res': 1, 'ese': 1, 'ser': 2, 'erv': 1, 'rve': 1, 'ved': 1, 'ed:': 3, ""'kr"": 1, ""kr'"": 1, 'd.T': 1, '.Ty': 1, 'Typ': 1, 'ype': 1, 'pe:': 2, ""'kt"": 1, ""kt'"": 1, ""t'\n"": 2, '""#5': 1, '#58': 1, '582': 1, '828': 1, '280': 1, '800': 2, "" 'o"": 2, ""'o'"": 1, ""o'\n"": 2, 'or.': 1, 'r.W': 1, '.Wo': 1, 'Wor': 1, ""'ow"": 1, ""ow'"": 1, ""w' "": 1, ""' -"": 12, ' - ': 12, '- l': 3, ' li': 3, 'lik': 3, 'ike': 3, 'ke ': 3, 'e k': 1, ' ke': 2, 'key': 2, 'rds': 1, 'ds\n': 1, 's\n\n': 1, '  P': 1, "" 'p"": 2, ""'p'"": 1, '# b': 1, ' be': 10, 'bec': 1, 'eca': 1, 'cau': 1, 'aus': 1, 'use': 1, 'se ': 2, 'e s': 2, ' sp': 1, 'spe': 1, 'pec': 1, 'eci': 1, 'cia': 1, 'ial': 1, 'al ': 1, 'l n': 1, ' na': 1, 'nam': 1, ' su': 2, 'suc': 2, 'uch': 2, 'ch ': 2, 'h a': 1, ' as': 3, 'as ': 3, 's N': 1, 'me.': 20, 'e.C': 4, '.Cl': 3, 'Cla': 3, 'ss,': 1, 's, ': 1, 'e.F': 2, '.Fu': 2, 'Fun': 2, 'cti': 2, ', e': 1, ' et': 1, 'etc': 1, 'tc.': 1, 'c.\n': 1, '.\n ': 2, '# a': 1, ' ar': 1, 'are': 1, 're ': 1, 'e n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't r': 1, ' re': 10, 'rec': 1, 'eco': 2, 'cog': 1, 'ogn': 1, 'gni': 1, 'niz': 1, 'ize': 1, 'zed': 1, 'd a': 1, 'h l': 1, ' la': 1, 'lat': 1, 'ate': 2, 'er ': 1, 'r i': 1, ' in': 1, 'in ': 1, 'e p': 1, ' pa': 1, 'par': 1, 'ars': 1, 'rsi': 1, 'sin': 1, ', w': 1, ' we': 1, 'we ': 1, 'e c': 1, ' ch': 1, 'cho': 1, 'hoo': 1, 'oos': 1, 'ose': 1, 'e t': 1, 'hem': 1, 'em\n': 1, 'm\n ': 1, '# t': 1, ' to': 10, 'to ': 10, 'o l': 1, ' lo': 1, 'loo': 1, 'ook': 1, 'ok ': 1, 'k t': 1, ' sa': 1, 'sam': 1, 'me ': 1, 'e a': 3, 's o': 1, ' or': 1, 'rdi': 1, 'ina': 1, 'nar': 1, 'ary': 1, 'ry ': 1, 'y v': 1, ' va': 1, 'var': 1, 'ari': 5, 'ria': 5, 'iab': 5, 'abl': 5, 'ble': 6, 'es.': 1, 's.\n': 1, 'me:': 1, "" 'n"": 14, ""'n'"": 1, 'e.A': 1, '.At': 1, 'Att': 1, 'ttr': 1, 'rib': 1, 'ibu': 1, 'but': 1, 'ute': 1, 'te:': 2, '""#c': 2, '#c4': 1, 'c4a': 1, '4a0': 1, 'a00': 1, ""'na"": 1, ""na'"": 1, ""a' "": 1, '- t': 9, 'o b': 9, 'be ': 9, 'e r': 9, 'rev': 9, 'evi': 9, 'vis': 9, 'ise': 9, 'ed\n': 9, 'd\n ': 9, 'e.B': 2, '.Bu': 2, 'Bui': 2, 'uil': 2, 'ilt': 2, 'lti': 2, 'tin': 2, 'in:': 1, ""'nb"": 1, ""nb'"": 1, ""b'\n"": 2, 'in.': 1, 'n.P': 1, '""#3': 1, '#34': 1, '346': 1, '465': 1, '65a': 1, '5a4': 1, 'a4""': 1, '4"",': 2, "" 'b"": 1, ""'bp"": 1, ""bp'"": 1, ""'nc"": 1, ""nc'"": 1, ""c' "": 2, ""'no"": 1, ""no'"": 1, ""o' "": 1, 'e.D': 1, 'ora': 1, '""#8': 2, '#88': 2, '888': 2, '88""': 2, ""'nd"": 1, ""nd'"": 1, ""d' "": 2, 'e.E': 2, '.En': 1, 'Ent': 1, 'nti': 1, 'tit': 1, 'ity': 1, 'ty:': 2, 'y: ': 2, '#ce': 1, 'ce5': 1, 'e5c': 1, '5c0': 1, 'c00': 2, ""'ni"": 1, ""ni'"": 1, ""i'\n"": 3, '.Ex': 1, 'Exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pti': 1, ' #c': 1, '#cc': 1, 'cc0': 1, ""'ne"": 1, ""ne'"": 1, ""e'\n"": 3, ""'nf"": 1, ""nf'"": 1, ""f'\n"": 1, 'e.P': 1, 'Pro': 2, 'rop': 1, 'ope': 1, 'ert': 2, 'rty': 1, ""'py"": 1, ""py'"": 1, ""y'\n"": 1, 'e.L': 1, '.La': 1, 'Lab': 1, 'abe': 1, 'bel': 1, 'el:': 1, 'l: ': 5, '#f5': 1, 'f57': 1, '579': 1, '790': 1, '900': 2, ""'nl"": 1, ""nl'"": 1, ""l'\n"": 2, 'e.N': 1, ""'nn"": 1, ""nn'"": 1, ""n' "": 1, 'e.O': 1, '.Ot': 2, ""'nx"": 1, ""nx'"": 1, 'e.T': 1, '.Ta': 1, 'Tag': 1, 'ag:': 1, 'g: ': 5, ""'nt"": 1, ""nt'"": 1, ""t' "": 1, ' a ': 2, 'a k': 1, 'rd\n': 1, 'e.V': 4, '.Va': 4, 'Var': 4, 'le:': 3, ""'nv"": 1, ""nv'"": 1, ""v' "": 1, 'le.': 3, "" 'v"": 3, ""'vc"": 1, ""vc'"": 1, 'e.G': 1, '.Gl': 1, 'Glo': 1, 'lob': 1, 'oba': 1, 'bal': 1, 'al:': 2, ""'vg"": 1, ""vg'"": 1, ""g' "": 1, 'e.I': 1, '.In': 3, 'Ins': 2, 'anc': 1, 'nce': 1, ""'vi"": 1, ""vi'"": 1, ""i' "": 1, 'd\n\n': 1, '""#9': 1, '#99': 1, '990': 1, "" 'm"": 1, ""'m'"": 1, ""m'\n"": 1, '  L': 2, "" 'l"": 2, ""'l'"": 1, 'al.': 1, 'l.D': 1, '.Da': 1, 'Dat': 1, ""'ld"": 1, ""ld'"": 1, '  S': 12, '""#4': 11, '#4e': 11, '4e9': 11, 'e9a': 11, '9a0': 11, 'a06': 11, '06""': 11, '6"",': 11, "" 's"": 12, ""'s'"": 1, ""s'\n"": 3, 'ng.': 11, 'g.B': 1, '.Ba': 1, 'Bac': 1, 'ckt': 1, 'kti': 1, 'tic': 1, 'ick': 1, 'ck:': 2, 'k: ': 2, ""'sb"": 1, ""sb'"": 1, 'g.C': 1, '.Ch': 1, 'Cha': 1, 'har': 1, 'ar:': 1, ""'sc"": 1, ""sc'"": 1, 'g.D': 2, '.Do': 2, 'Doc': 1, ""'sd"": 1, ""sd'"": 1, 'a c': 1, 'com': 1, 'nt\n': 1, 't\n ': 1, 'Dou': 1, 'oub': 1, 'ubl': 1, ""'s2"": 1, ""s2'"": 1, ""2'\n"": 1, 'g.E': 1, '.Es': 1, 'Esc': 1, 'sca': 1, 'cap': 1, 'ape': 1, ""'se"": 1, ""se'"": 1, 'g.H': 1, '.He': 2, 'Her': 1, 'ere': 1, 'red': 1, 'edo': 1, 'doc': 1, ""'sh"": 1, ""sh'"": 1, ""h'\n"": 2, 'g.I': 1, 'Int': 1, 'nte': 1, 'erp': 1, 'rpo': 1, 'pol': 1, 'ol:': 2, ""'si"": 1, ""si'"": 1, 'g.O': 1, ""'sx"": 1, ""sx'"": 1, 'g.R': 1, 'Reg': 1, 'ege': 1, 'gex': 1, 'ex:': 1, 'x: ': 1, ""'sr"": 1, ""sr'"": 1, 'g.S': 2, '.Si': 1, 'Sin': 1, 'ngl': 1, 'gle': 1, ""'s1"": 1, ""s1'"": 1, ""1'\n"": 1, '.Sy': 1, 'Sym': 1, 'ymb': 1, 'mbo': 1, ""'ss"": 1, ""ss'"": 1, '  G': 11, 'ic:': 1, "" 'g"": 11, ""'g'"": 1, ""g'\n"": 1, 'ic.': 10, 'c.D': 1, 'Del': 1, 'ele': 1, 'let': 1, 'ete': 1, 'ted': 2, ""'gd"": 1, ""gd'"": 1, 'c.E': 2, '.Em': 1, 'Emp': 1, 'mph': 1, 'ph:': 1, 'h: ': 1, ""'ge"": 1, ""ge'"": 1, '.Er': 1, '""#e': 1, ""'gr"": 1, ""gr'"": 1, 'c.H': 1, 'Hea': 1, 'ead': 2, 'adi': 2, '008': 2, '080': 2, '80""': 2, ""'gh"": 1, ""gh'"": 1, 'c.I': 1, 'nse': 1, 'rte': 1, '00A': 1, '0A0': 1, 'A00': 1, ""'gi"": 1, ""gi'"": 1, 'c.O': 1, '.Ou': 1, 'Out': 1, 'utp': 1, 'tpu': 1, 'put': 1, 'ut:': 1, ""'go"": 1, ""go'"": 1, 'c.P': 1, 'omp': 1, 'mpt': 1, 'pt:': 1, '""#7': 1, '#74': 1, '745': 1, '453': 1, '533': 1, '334': 1, '34""': 1, ""'gp"": 1, ""gp'"": 1, 'c.S': 2, '.St': 1, 'tro': 1, 'ron': 1, 'ong': 1, ""'gs"": 1, ""gs'"": 1, '.Su': 1, 'Sub': 1, 'ubh': 1, 'bhe': 1, 'hea': 1, '#80': 1, ""'gu"": 1, ""gu'"": 1, ""u'\n"": 1, 'c.T': 1, '.Tr': 1, 'Tra': 1, 'rac': 1, 'ceb': 1, 'eba': 1, ' #a': 1, ""'gt"": 1, ""gt'"": 1, '  }': 1, ' }\n': 1}"
Armin Ronacher,hello.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 5, 'click': 1, 'random': 1, 'from': 3, 'flask': 1, 'flask,': 1, 'render_template,': 1, 'request,': 1, 'redirect,': 1, 'url_for,': 1, 'response': 1, 'flask_sqlalchemy': 1, 'sqlalchemy': 1, 'app': 1, '=': 9, 'flask(__name__)': 1, ""app.config.from_pyfile('hello.cfg')"": 1, 'db': 1, 'sqlalchemy(app)': 1, 'raven.contrib.flask': 1, 'sentry': 2, 'sentry(app,': 1, ""dsn='https://6a7935a211ef47efa902125bb86174f5:3165dde52f6545d4826c02e896d5cb74@sentry.io/117852')"": 1, 'class': 1, 'paste(db.model):': 1, 'id': 1, 'db.column(db.integer,': 1, 'primary_key=true)': 1, 'title': 1, 'db.column(db.string)': 2, 'contents': 1, 'pub_date': 1, 'db.column(db.datetime)': 1, '@app.cli.command()': 2, 'def': 6, 'initdb():': 1, '""""""initialize': 1, 'database""""""': 2, 'db.create_all()': 1, ""@click.confirmation_option(help='are"": 1, 'you': 2, 'sure': 1, 'want': 1, 'to': 1, 'drop': 1, 'the': 1, ""db?')"": 1, 'dropdb():': 1, '""""""drop': 1, 'db.drop_all()': 1, ""@app.route('/')"": 1, 'index():': 1, 'return': 5, ""render_template('index.html',"": 1, 'name=random.choice(': 1, ""['warchest',"": 1, ""'fireteam',"": 1, ""'splash"": 1, ""damage']))"": 1, ""@app.route('/new',"": 1, ""methods=['get',"": 1, ""'post'])"": 1, 'new_paste():': 1, 'if': 1, 'request.method': 1, '==': 1, ""'post':"": 1, 'paste': 2, ""paste(title=request.form['title'],"": 1, ""contents=request.form['contents'])"": 1, 'db.session.add(paste)': 1, 'db.session.commit()': 1, '1/0': 1, ""redirect(url_for('show_paste',"": 1, 'paste_id=paste.id))': 1, ""render_template('new.html')"": 1, ""@app.route('/paste/<int:paste_id>')"": 1, 'show_paste(paste_id):': 1, 'paste.query.get_or_404(paste_id)': 1, ""render_template('show.html',"": 1, 'paste=paste)': 1, '@app.errorhandler(404)': 1, 'not_found(error):': 1, ""response(render_template('not_found.html'),"": 1, 'status=404)': 1}","{'imp': 5, 'mpo': 5, 'por': 5, 'ort': 5, 'rt ': 5, 't c': 1, ' cl': 1, 'cli': 4, 'lic': 2, 'ick': 2, 'ck\n': 1, 'k\ni': 1, '\nim': 1, 't r': 1, ' ra': 2, 'ran': 2, 'and': 5, 'ndo': 2, 'dom': 2, 'om\n': 1, 'm\nf': 1, '\nfr': 3, 'fro': 4, 'rom': 4, 'om ': 3, 'm f': 2, ' fl': 2, 'fla': 3, 'las': 7, 'ask': 5, 'sk ': 2, 'k i': 2, ' im': 3, 't F': 1, ' Fl': 2, 'Fla': 2, 'sk,': 1, 'k, ': 1, ', r': 3, ' re': 13, 'ren': 5, 'end': 5, 'nde': 7, 'der': 5, 'er_': 5, 'r_t': 5, '_te': 5, 'tem': 5, 'emp': 5, 'mpl': 5, 'pla': 6, 'lat': 5, 'ate': 8, 'te,': 1, 'e, ': 1, 'req': 4, 'equ': 4, 'que': 5, 'ues': 4, 'est': 5, 'st,': 1, 't, ': 2, 'red': 2, 'edi': 2, 'dir': 2, 'ire': 3, 'rec': 2, 'ect': 2, 'ct,': 1, ', u': 1, ' ur': 1, 'url': 2, 'rl_': 2, 'l_f': 2, '_fo': 4, 'for': 4, 'or,': 1, 'r, ': 2, ', R': 1, ' Re': 2, 'Res': 2, 'esp': 2, 'spo': 2, 'pon': 2, 'ons': 2, 'nse': 2, 'se\n': 1, 'e\nf': 1, 'sk_': 1, 'k_s': 1, '_sq': 1, 'sql': 1, 'qla': 1, 'lal': 1, 'alc': 1, 'lch': 3, 'che': 4, 'hem': 3, 'emy': 3, 'my ': 1, 'y i': 1, 't S': 2, ' SQ': 2, 'SQL': 2, 'QLA': 2, 'LAl': 2, 'Alc': 2, 'my\n': 1, 'y\n\n': 1, '\n\na': 1, '\nap': 2, 'app': 10, 'pp ': 1, 'p =': 1, ' = ': 9, '= F': 1, 'sk(': 1, 'k(_': 1, '(__': 1, '__n': 1, '_na': 1, 'nam': 2, 'ame': 2, 'me_': 1, 'e__': 1, '__)': 1, '_)\n': 1, ')\na': 1, 'pp.': 7, 'p.c': 3, '.co': 6, 'con': 6, 'onf': 2, 'nfi': 2, 'fig': 1, 'ig.': 1, 'g.f': 1, '.fr': 1, 'om_': 1, 'm_p': 1, '_py': 1, 'pyf': 1, 'yfi': 1, 'fil': 1, 'ile': 1, 'le(': 1, ""e('"": 8, ""('h"": 1, ""'he"": 1, 'hel': 2, 'ell': 1, 'llo': 1, 'lo.': 1, 'o.c': 1, '.cf': 1, 'cfg': 1, ""fg'"": 1, ""g')"": 1, ""')\n"": 6, ')\nd': 7, '\ndb': 1, 'db ': 1, 'b =': 1, '= S': 2, 'my(': 1, 'y(a': 2, '(ap': 2, 'pp)': 1, 'p)\n': 1, ')\n\n': 8, '\n\nf': 1, 'm r': 1, 'rav': 1, 'ave': 1, 'ven': 1, 'en.': 1, 'n.c': 2, 'ont': 4, 'ntr': 5, 'tri': 3, 'rib': 1, 'ib.': 1, 'b.f': 1, '.fl': 1, ' Se': 2, 'Sen': 2, 'ent': 7, 'try': 4, 'ry\n': 1, 'y\ns': 1, '\nse': 1, 'sen': 2, 'ry ': 1, 'y =': 1, 'ry(': 1, 'pp,': 1, 'p, ': 1, ', d': 1, ' ds': 1, 'dsn': 1, 'sn=': 1, ""n='"": 1, ""='h"": 1, ""'ht"": 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//6': 1, '/6a': 1, '6a7': 1, 'a79': 1, '793': 1, '935': 1, '35a': 1, '5a2': 1, 'a21': 1, '211': 1, '11e': 1, '1ef': 1, 'ef4': 1, 'f47': 1, '47e': 1, '7ef': 1, 'efa': 1, 'fa9': 1, 'a90': 1, '902': 1, '021': 1, '212': 1, '125': 1, '25b': 1, '5bb': 1, 'bb8': 1, 'b86': 1, '861': 1, '617': 1, '174': 1, '74f': 1, '4f5': 1, 'f5:': 1, '5:3': 1, ':31': 1, '316': 1, '165': 1, '65d': 1, '5dd': 1, 'dde': 1, 'de5': 1, 'e52': 1, '52f': 1, '2f6': 1, 'f65': 1, '654': 1, '545': 1, '45d': 1, '5d4': 1, 'd48': 1, '482': 1, '826': 1, '26c': 1, '6c0': 1, 'c02': 1, '02e': 1, '2e8': 1, 'e89': 1, '896': 1, '96d': 1, '6d5': 1, 'd5c': 1, '5cb': 1, 'cb7': 1, 'b74': 1, '74@': 1, '4@s': 1, '@se': 1, 'ry.': 2, 'y.i': 1, '.io': 1, 'io/': 1, 'o/1': 1, '/11': 1, '117': 1, '178': 1, '785': 1, '852': 1, ""52'"": 1, ""2')"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'ass': 1, 'ss ': 1, 's P': 1, ' Pa': 3, 'Pas': 3, 'ast': 17, 'ste': 17, 'te(': 11, 'e(d': 1, '(db': 5, 'db.': 13, 'b.M': 1, '.Mo': 1, 'Mod': 1, 'ode': 1, 'del': 1, 'el)': 1, 'l):': 1, '):\n': 7, ':\n ': 8, '\n  ': 21, '   ': 84, '  i': 2, ' id': 1, 'id ': 1, 'd =': 2, '= d': 4, ' db': 9, 'b.C': 4, '.Co': 4, 'Col': 4, 'olu': 4, 'lum': 4, 'umn': 4, 'mn(': 4, 'n(d': 4, 'b.I': 1, '.In': 1, 'Int': 1, 'nte': 4, 'teg': 1, 'ege': 1, 'ger': 1, 'er,': 1, ', p': 3, ' pr': 1, 'pri': 1, 'rim': 1, 'ima': 1, 'mar': 1, 'ary': 1, 'ry_': 1, 'y_k': 1, '_ke': 1, 'key': 1, 'ey=': 1, 'y=T': 1, '=Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e)\n': 4, ')\n ': 8, '  t': 1, ' ti': 1, 'tit': 3, 'itl': 3, 'tle': 3, 'le ': 1, 'e =': 4, 'b.S': 2, '.St': 2, 'Str': 2, 'rin': 2, 'ing': 2, 'ng)': 2, 'g)\n': 2, '  c': 2, ' co': 2, 'ten': 3, 'nts': 3, 'ts ': 1, 's =': 1, '  p': 3, ' pu': 1, 'pub': 1, 'ub_': 1, 'b_d': 1, '_da': 1, 'dat': 3, 'te ': 3, 'b.D': 1, '.Da': 1, 'Dat': 1, 'teT': 1, 'eTi': 1, 'Tim': 1, 'ime': 1, 'me)': 1, '\n\n@': 6, '\n@a': 6, '@ap': 6, '.cl': 2, 'li.': 2, 'i.c': 2, 'com': 3, 'omm': 3, 'mma': 2, 'man': 2, 'nd(': 3, 'd()': 2, '()\n': 5, '\nde': 6, 'def': 6, 'ef ': 6, 'f i': 2, ' in': 2, 'ini': 1, 'nit': 2, 'itd': 1, 'tdb': 1, 'db(': 2, 'b()': 2, '():': 4, '  ""': 2, ' """"': 2, '""""""': 4, '""""I': 1, '""In': 1, 'Ini': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'ali': 1, 'liz': 1, 'ize': 1, 'ze ': 1, 'e d': 2, ' da': 2, 'ata': 2, 'tab': 2, 'aba': 2, 'bas': 2, 'ase': 2, 'se""': 2, 'e""""': 2, '""""\n': 2, '""\n ': 2, '  d': 4, 'b.c': 1, '.cr': 1, 'cre': 1, 'rea': 1, 'eat': 1, 'te_': 5, 'e_a': 1, '_al': 2, 'all': 2, 'll(': 2, 'l()': 2, ')\n@': 1, '\n@c': 1, '@cl': 1, 'ck.': 1, 'k.c': 1, 'fir': 1, 'irm': 1, 'rma': 1, 'mat': 1, 'ati': 1, 'tio': 2, 'ion': 4, 'on_': 1, 'n_o': 1, '_op': 1, 'opt': 1, 'pti': 1, 'on(': 1, 'n(h': 1, '(he': 1, 'elp': 1, 'lp=': 1, ""p='"": 1, ""='A"": 1, ""'Ar"": 1, 'Are': 1, 're ': 2, 'e y': 2, ' yo': 2, 'you': 2, 'ou ': 2, 'u s': 1, ' su': 1, 'sur': 1, 'ure': 1, 'u w': 1, ' wa': 1, 'wan': 1, 'ant': 1, 'nt ': 1, 't t': 1, ' to': 1, 'to ': 1, 'o d': 1, ' dr': 2, 'dro': 3, 'rop': 4, 'op ': 2, 'p t': 1, ' th': 1, 'the': 1, 'he ': 1, 'db?': 1, ""b?'"": 1, ""?')"": 1, 'f d': 1, 'opd': 1, 'pdb': 1, '""""D': 1, '""Dr': 1, 'Dro': 1, 'p d': 1, 'b.d': 1, '.dr': 1, 'op_': 1, 'p_a': 1, 'p.r': 3, '.ro': 3, 'rou': 3, 'out': 3, 'ute': 3, ""('/"": 3, ""'/'"": 1, ""/')"": 1, 'ind': 2, 'dex': 2, 'ex(': 1, 'x()': 1, '  r': 5, 'ret': 6, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 5, 'n r': 4, ""('i"": 1, ""'in"": 1, 'ex.': 1, 'x.h': 1, '.ht': 4, 'htm': 4, 'tml': 4, ""ml'"": 4, ""l',"": 2, ""', "": 7, ', n': 1, ' na': 1, 'me=': 1, 'e=r': 2, '=ra': 1, 'om.': 1, 'm.c': 1, '.ch': 1, 'cho': 1, 'hoi': 1, 'oic': 1, 'ice': 1, 'ce(': 1, 'e(\n': 1, '(\n ': 1, '  [': 1, "" ['"": 1, ""['W"": 1, ""'Wa"": 1, 'War': 1, 'arc': 1, 'rch': 1, 'hes': 1, ""st'"": 1, ""t',"": 1, "", '"": 3, "" 'F"": 1, ""'Fi"": 1, 'Fir': 1, 'ete': 1, 'tea': 1, 'eam': 1, ""am'"": 1, ""m',"": 1, "" 'S"": 1, ""'Sp"": 1, 'Spl': 1, 'ash': 1, 'sh ': 1, 'h D': 1, ' Da': 1, 'Dam': 1, 'ama': 1, 'mag': 1, 'age': 1, ""ge'"": 1, ""e']"": 2, ""'])"": 3, ']))': 1, '))\n': 2, ""'/n"": 1, '/ne': 1, 'new': 3, ""ew'"": 1, ""w',"": 1, ', m': 1, ' me': 1, 'met': 2, 'eth': 2, 'tho': 2, 'hod': 2, 'ods': 1, 'ds=': 1, 's=[': 1, ""=['"": 1, ""['G"": 1, ""'GE"": 1, 'GET': 1, ""ET'"": 1, ""T',"": 1, "" 'P"": 2, ""'PO"": 2, 'POS': 2, 'OST': 2, ""ST'"": 2, ""T']"": 1, '])\n': 2, 'f n': 2, ' ne': 1, 'ew_': 1, 'w_p': 3, '_pa': 3, 'pas': 14, 'e()': 1, ' if': 1, 'if ': 1, 'f r': 1, 'st.': 3, 't.m': 1, '.me': 1, 'od ': 1, ' ==': 1, '== ': 1, ""= '"": 1, ""T':"": 1, ""':\n"": 1, ' pa': 4, '= P': 2, 'e(t': 1, '(ti': 1, 'le=': 1, '=re': 2, 't.f': 2, '.fo': 2, 'orm': 2, 'rm[': 2, ""m['"": 2, ""['t"": 1, ""'ti"": 1, ""le'"": 1, ""'],"": 1, '],\n': 1, ',\n ': 1, 'ts=': 1, 's=r': 1, ""['c"": 1, ""'co"": 1, ""ts'"": 1, ""s']"": 1, 'b.s': 2, '.se': 2, 'ses': 2, 'ess': 2, 'ssi': 2, 'sio': 2, 'on.': 2, 'n.a': 1, '.ad': 1, 'add': 1, 'dd(': 1, 'd(p': 1, '(pa': 3, 'te)': 2, 'mmi': 1, 'mit': 1, 'it(': 1, 't()': 1, '  1': 1, ' 1/': 1, '1/0': 1, '/0\n': 1, '0\n ': 1, 'ct(': 1, 't(u': 1, '(ur': 1, 'or(': 1, ""r('"": 1, ""('s"": 2, ""'sh"": 2, 'sho': 3, 'how': 3, 'ow_': 2, ""te'"": 1, ""e',"": 1, 'e_i': 4, '_id': 4, 'id=': 1, 'd=p': 1, '=pa': 2, 'te.': 2, 'e.i': 1, '.id': 1, 'id)': 3, 'd))': 1, ""('n"": 2, ""'ne"": 1, 'ew.': 1, 'w.h': 2, ""l')"": 2, ""'/p"": 1, '/pa': 1, 'te/': 1, 'e/<': 1, '/<i': 1, '<in': 1, 'int': 1, 'nt:': 1, 't:p': 1, ':pa': 1, 'id>': 1, ""d>'"": 1, "">')"": 1, 'f s': 1, ' sh': 1, 'e(p': 1, 'd):': 1, 'e.q': 1, '.qu': 1, 'uer': 1, 'ery': 1, 'y.g': 1, '.ge': 1, 'get': 1, 'et_': 1, 't_o': 1, '_or': 1, 'or_': 1, 'r_4': 1, '_40': 1, '404': 3, '04(': 1, '4(p': 1, 'd)\n': 1, 'ow.': 1, 'te=': 1, 'e=p': 1, 'p.e': 1, '.er': 1, 'err': 2, 'rro': 2, 'ror': 2, 'orh': 1, 'rha': 1, 'han': 1, 'ndl': 1, 'dle': 1, 'ler': 1, 'er(': 1, 'r(4': 1, '(40': 1, '04)': 2, '4)\n': 2, ' no': 1, 'not': 2, 'ot_': 2, 't_f': 2, 'fou': 2, 'oun': 2, 'und': 2, 'd(e': 1, '(er': 1, 'or)': 1, 'r):': 1, 'n R': 1, 'se(': 1, 'e(r': 1, '(re': 1, ""'no"": 1, 'nd.': 1, 'd.h': 1, ""'),"": 1, '), ': 1, ', s': 1, ' st': 1, 'sta': 1, 'tat': 1, 'atu': 1, 'tus': 1, 'us=': 1, 's=4': 1, '=40': 1}"
Armin Ronacher,manage.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'from': 2, 'flask.ext.script': 1, 'import': 2, 'manager': 2, 'pastebin': 1, 'app,': 1, 'db': 1, '=': 1, 'manager(app)': 1, '@manager.command': 2, 'def': 2, 'initdb():': 1, '""""""creates': 1, 'all': 2, 'database': 2, 'tables.""""""': 2, 'db.create_all()': 1, 'dropdb():': 1, '""""""drops': 1, 'db.drop_all()': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'manager.run()': 1}","{'fro': 2, 'rom': 2, 'om ': 2, 'm f': 1, ' fl': 1, 'fla': 1, 'las': 1, 'ask': 1, 'sk.': 1, 'k.e': 1, '.ex': 1, 'ext': 1, 'xt.': 1, 't.s': 1, '.sc': 1, 'scr': 1, 'cri': 1, 'rip': 1, 'ipt': 1, 'pt ': 1, 't i': 1, ' im': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't M': 1, ' Ma': 2, 'Man': 2, 'ana': 6, 'nag': 6, 'age': 6, 'ger': 6, 'er\n': 1, 'r\nf': 1, '\nfr': 1, 'm p': 1, ' pa': 1, 'pas': 1, 'ast': 1, 'ste': 1, 'teb': 1, 'ebi': 1, 'bin': 1, 'in ': 1, 'n i': 1, 't a': 1, ' ap': 1, 'app': 2, 'pp,': 1, 'p, ': 1, ', d': 1, ' db': 3, 'db\n': 1, 'b\n\n': 1, '\n\n\n': 4, '\n\nm': 1, '\nma': 1, 'man': 6, 'er ': 1, 'r =': 1, ' = ': 1, '= M': 1, 'er(': 1, 'r(a': 1, '(ap': 1, 'pp)': 1, 'p)\n': 1, ')\n\n': 3, '\n\n@': 2, '\n@m': 2, '@ma': 2, 'er.': 3, 'r.c': 2, '.co': 2, 'com': 2, 'omm': 2, 'mma': 2, 'and': 2, 'nd\n': 2, 'd\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f i': 1, ' in': 1, 'ini': 1, 'nit': 1, 'itd': 1, 'tdb': 1, 'db(': 2, 'b()': 2, '():': 2, '):\n': 2, ':\n ': 3, '\n  ': 5, '   ': 10, '  ""': 2, ' """"': 2, '""""""': 4, '""""C': 1, '""Cr': 1, 'Cre': 1, 'rea': 2, 'eat': 2, 'ate': 2, 'tes': 1, 'es ': 1, 's a': 2, ' al': 2, 'all': 4, 'll ': 2, 'l d': 2, ' da': 2, 'dat': 2, 'ata': 2, 'tab': 4, 'aba': 2, 'bas': 2, 'ase': 2, 'se ': 2, 'e t': 2, ' ta': 2, 'abl': 2, 'ble': 2, 'les': 2, 'es.': 2, 's.""': 2, '.""""': 2, '""""\n': 2, '""\n ': 2, '  d': 2, 'db.': 2, 'b.c': 1, '.cr': 1, 'cre': 1, 'te_': 1, 'e_a': 1, '_al': 2, 'll(': 2, 'l()': 2, '()\n': 3, 'f d': 1, ' dr': 1, 'dro': 2, 'rop': 3, 'opd': 1, 'pdb': 1, '""""D': 1, '""Dr': 1, 'Dro': 1, 'ops': 1, 'ps ': 1, 'b.d': 1, '.dr': 1, 'op_': 1, 'p_a': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  m': 1, ' ma': 1, 'r.r': 1, '.ru': 1, 'run': 1, 'un(': 1, 'n()': 1}"
Armin Ronacher,pastebin.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'from': 5, 'datetime': 2, 'import': 5, 'flask': 1, 'flask,': 1, 'request,': 1, 'url_for,': 1, 'redirect,': 1, 'g,': 1, 'session,': 1, 'flash,': 1, '\\': 1, 'abort,': 1, 'render_template': 1, 'flask.ext.sqlalchemy': 1, 'sqlalchemy': 1, 'flask.ext.oauth': 1, 'oauth': 2, 'juggernaut': 2, 'app': 1, '=': 44, 'flask(__name__)': 1, ""app.config.from_pyfile('config.cfg')"": 1, 'db': 1, 'sqlalchemy(app)': 1, 'oauth()': 1, 'jug': 1, 'juggernaut()': 1, 'facebook': 1, ""oauth.remote_app('facebook',"": 1, ""base_url='https://graph.facebook.com/',"": 1, 'request_token_url=none,': 1, ""access_token_url='/oauth/access_token',"": 1, ""authorize_url='https://www.facebook.com/dialog/oauth',"": 1, ""consumer_key='188477911223606',"": 1, ""consumer_secret='621413ddea2bcc5b2e83d42fc40495de',"": 1, ""request_token_params={'scope':"": 1, ""'email'}"": 1, ')': 1, 'def': 12, 'url_for_other_page(page):': 1, 'args': 1, 'request.view_args.copy()': 1, ""args['page']"": 1, 'page': 1, 'return': 14, 'url_for(request.endpoint,': 1, '**args)': 1, ""app.jinja_env.globals['url_for_other_page']"": 1, 'url_for_other_page': 1, 'class': 2, 'paste(db.model):': 1, 'id': 2, 'db.column(db.integer,': 4, 'primary_key=true)': 2, 'code': 2, 'db.column(db.text)': 1, 'pub_date': 1, 'db.column(db.datetime)': 1, 'user_id': 4, ""db.foreignkey('user.id'))"": 1, 'parent_id': 1, ""db.foreignkey('paste.id'))"": 1, 'parent': 5, ""db.relationship('paste',"": 1, 'lazy=true,': 1, ""backref='children',"": 1, 'uselist=false,': 1, 'remote_side=[id])': 1, '__init__(self,': 1, 'user,': 1, 'code,': 1, 'parent=none):': 1, 'self.user': 1, 'user': 6, 'self.code': 1, 'self.pub_date': 1, 'datetime.utcnow()': 1, 'self.parent': 1, 'user(db.model):': 1, 'display_name': 1, 'db.column(db.string(120))': 1, 'fb_id': 1, 'db.column(db.string(30),': 1, 'unique=true)': 1, 'pastes': 1, 'db.relationship(paste,': 1, ""lazy='dynamic',"": 1, ""backref='user')"": 1, 'send_new_paste_notifications(paste,': 1, 'reply):': 1, '""""""notifies': 1, 'clients': 1, 'about': 1, 'new': 1, 'pastes.""""""': 1, 'none': 5, 'if': 12, 'paste.user:': 2, 'paste.user.display_name': 1, 'paste.user.id': 1, 'data': 1, ""{'paste_id':"": 1, 'paste.id,': 2, ""'reply_id':"": 1, 'reply.id,': 1, ""'user':"": 1, 'user}': 1, ""jug.publish('paste-replies:%d'"": 1, '%': 3, 'data)': 2, 'is': 7, 'not': 3, 'none:': 6, ""jug.publish('user-replies:%d'"": 1, 'user_id,': 1, '@app.before_request': 1, 'check_user_status():': 1, 'g.user': 5, ""'user_id'"": 1, 'in': 3, 'session:': 1, ""user.query.get(session['user_id'])"": 1, ""@app.route('/',"": 1, ""methods=['get',"": 2, ""'post'])"": 2, 'new_paste():': 1, 'reply_to': 2, ""request.args.get('reply_to',"": 1, 'type=int)': 1, 'paste.query.get(reply_to)': 1, 'request.method': 2, '==': 2, ""'post'"": 1, 'and': 1, ""request.form['code']:"": 1, 'paste': 3, 'paste(g.user,': 1, ""request.form['code'],"": 1, 'parent=parent)': 2, 'db.session.add(paste)': 1, 'db.session.commit()': 3, 'send_new_paste_notifications(parent,': 1, 'paste)': 1, ""redirect(url_for('show_paste',"": 2, 'paste_id=paste.id))': 2, ""render_template('new_paste.html',"": 1, ""@app.route('/<int:paste_id>')"": 1, 'show_paste(paste_id):': 1, ""paste.query.options(db.eagerload('children')).get_or_404(paste_id)"": 1, ""render_template('show_paste.html',"": 1, 'paste=paste)': 2, ""@app.route('/<int:paste_id>/delete',"": 1, 'delete_paste(paste_id):': 1, 'paste.query.get_or_404(paste_id)': 1, 'or': 4, '!=': 1, 'abort(401)': 1, ""'post':"": 1, ""'yes'"": 1, 'request.form:': 1, 'db.session.delete(paste)': 1, ""flash('paste"": 1, 'was': 1, ""deleted')"": 1, ""redirect(url_for('new_paste'))"": 2, 'else:': 1, ""render_template('delete_paste.html',"": 1, ""@app.route('/my-pastes/',"": 1, ""defaults={'page':"": 1, '1})': 1, ""@app.route('/my-pastes/page/<int:page>')"": 1, 'my_pastes(page):': 1, ""redirect(url_for('login',"": 1, 'next=request.url))': 1, 'pagination': 1, 'paste.query.filter_by(user=g.user).paginate(page)': 1, ""render_template('my_pastes.html',"": 1, 'pagination=pagination)': 1, ""@app.route('/login')"": 1, 'login():': 1, ""facebook.authorize(callback=url_for('facebook_authorized',"": 1, ""next=request.args.get('next')"": 1, 'request.referrer': 1, 'none,': 1, '_external=true))': 1, ""@app.route('/logout')"": 1, 'logout():': 1, 'session.clear()': 1, ""flash('you"": 3, 'were': 1, 'logged': 2, ""out')"": 1, ""@app.route('/login/authorized')"": 1, '@facebook.authorized_handler': 1, 'facebook_authorized(resp):': 1, 'next_url': 1, ""request.args.get('next')"": 1, ""url_for('new_paste')"": 1, 'resp': 1, 'denied': 1, 'the': 1, ""login')"": 1, 'redirect(next_url)': 2, ""session['fb_access_token']"": 1, ""(resp['access_token'],"": 1, ""'')"": 1, 'me': 1, ""facebook.get('/me')"": 1, ""user.query.filter_by(fb_id=me.data['id']).first()"": 1, 'user()': 1, 'user.fb_id': 1, ""me.data['id']"": 1, 'db.session.add(user)': 1, 'user.display_name': 1, ""me.data['name']"": 1, ""session['user_id']"": 1, 'user.id': 1, 'are': 1, 'now': 1, 'as': 1, ""%s'"": 1, 'user.display_name)': 1, '@facebook.tokengetter': 1, 'get_facebook_oauth_token():': 1, ""session.get('fb_access_token')"": 1}","{'fro': 6, 'rom': 6, 'om ': 5, 'm d': 1, ' da': 6, 'dat': 11, 'ate': 12, 'tet': 3, 'eti': 3, 'tim': 3, 'ime': 4, 'me ': 4, 'e i': 1, ' im': 5, 'imp': 5, 'mpo': 5, 'por': 5, 'ort': 7, 'rt ': 5, 't d': 1, 'me\n': 2, 'e\nf': 2, '\nfr': 4, 'm f': 3, ' fl': 8, 'fla': 8, 'las': 12, 'ask': 5, 'sk ': 1, 'k i': 1, 't F': 1, ' Fl': 2, 'Fla': 2, 'sk,': 1, 'k, ': 1, ', r': 6, ' re': 45, 'req': 16, 'equ': 16, 'que': 23, 'ues': 16, 'est': 16, 'st,': 1, 't, ': 5, ', u': 3, ' ur': 5, 'url': 20, 'rl_': 12, 'l_f': 12, '_fo': 12, 'for': 16, 'or,': 1, 'r, ': 7, 'red': 8, 'edi': 8, 'dir': 8, 'ire': 8, 'rec': 8, 'ect': 8, 'ct,': 1, ', g': 1, ' g,': 1, 'g, ': 1, ', s': 1, ' se': 12, 'ses': 13, 'ess': 18, 'ssi': 13, 'sio': 13, 'ion': 21, 'on,': 1, 'n, ': 1, ', f': 1, 'ash': 5, 'sh,': 1, 'h, ': 1, ', \\': 1, ' \\\n': 1, '\\\n ': 1, '\n  ': 93, '   ': 360, '  a': 6, ' ab': 3, 'abo': 3, 'bor': 2, 'rt,': 1, 'ren': 20, 'end': 8, 'nde': 5, 'der': 5, 'er_': 21, 'r_t': 5, '_te': 5, 'tem': 5, 'emp': 5, 'mpl': 5, 'pla': 9, 'lat': 7, 'te\n': 1, 'sk.': 2, 'k.e': 2, '.ex': 2, 'ext': 11, 'xt.': 2, 't.s': 1, '.sq': 1, 'sql': 1, 'qla': 1, 'lal': 1, 'alc': 1, 'lch': 3, 'che': 4, 'hem': 3, 'emy': 3, 'my ': 1, 'y i': 1, 't S': 1, ' SQ': 2, 'SQL': 2, 'QLA': 2, 'LAl': 2, 'Alc': 2, 'my\n': 1, 'y\nf': 1, 't.o': 1, '.oa': 1, 'oau': 6, 'aut': 15, 'uth': 14, 'th ': 2, 'h i': 1, 't O': 1, ' OA': 2, 'OAu': 2, 'Aut': 2, 'th\n': 1, 'h\nf': 1, 'm j': 1, ' ju': 3, 'jug': 4, 'ugg': 3, 'gge': 5, 'ger': 8, 'ern': 4, 'rna': 4, 'nau': 3, 'ut ': 2, 't i': 2, 't J': 1, ' Ju': 2, 'Jug': 2, 'ut\n': 1, 't\n\n': 2, '\n\n\n': 14, '\n\na': 1, '\nap': 3, 'app': 14, 'pp ': 1, 'p =': 1, ' = ': 44, '= F': 1, 'sk(': 1, 'k(_': 1, '(__': 1, '__n': 1, '_na': 5, 'nam': 7, 'ame': 6, 'me_': 1, 'e__': 1, '__)': 1, '_)\n': 1, ')\na': 2, 'pp.': 11, 'p.c': 1, '.co': 8, 'con': 4, 'onf': 2, 'nfi': 2, 'fig': 2, 'ig.': 2, 'g.f': 1, '.fr': 1, 'om_': 1, 'm_p': 1, '_py': 1, 'pyf': 1, 'yfi': 1, 'fil': 3, 'ile': 1, 'le(': 1, ""e('"": 13, ""('c"": 2, ""'co"": 3, 'g.c': 1, '.cf': 1, 'cfg': 1, ""fg'"": 1, ""g')"": 1, ""')\n"": 14, ')\nd': 7, '\ndb': 1, 'db ': 1, 'b =': 1, '= S': 1, 'my(': 1, 'y(a': 1, '(ap': 1, 'pp)': 1, 'p)\n': 1, ')\no': 1, '\noa': 1, 'h =': 1, '= O': 1, 'th(': 1, 'h()': 1, '()\n': 10, ')\nj': 1, '\nju': 1, 'ug ': 1, 'g =': 1, '= J': 1, 'ut(': 2, 't()': 6, ')\n\n': 16, '\n\nf': 1, '\nfa': 1, 'fac': 11, 'ace': 11, 'ceb': 11, 'ebo': 11, 'boo': 11, 'ook': 11, 'ok ': 1, 'k =': 1, '= o': 1, ' oa': 1, 'th.': 1, 'h.r': 1, '.re': 4, 'rem': 2, 'emo': 2, 'mot': 2, 'ote': 2, 'te_': 15, 'e_a': 1, '_ap': 1, 'pp(': 1, ""p('"": 2, ""('f"": 3, ""'fa"": 2, ""ok'"": 1, ""k',"": 1, ""',\n"": 8, ',\n ': 10, '  b': 1, ' ba': 3, 'bas': 1, 'ase': 1, 'se_': 1, 'e_u': 2, '_ur': 7, 'rl=': 4, ""l='"": 3, ""='h"": 2, ""'ht"": 2, 'htt': 2, 'ttp': 2, 'tps': 2, 'ps:': 2, 's:/': 2, '://': 2, '//g': 1, '/gr': 1, 'gra': 1, 'rap': 1, 'aph': 1, 'ph.': 1, 'h.f': 1, '.fa': 2, 'ok.': 6, 'k.c': 2, 'com': 5, 'om/': 2, ""m/'"": 1, ""/',"": 3, '  r': 17, 'st_': 2, 't_t': 2, '_to': 12, 'tok': 9, 'oke': 9, 'ken': 9, 'en_': 3, 'n_u': 2, 'l=N': 1, '=No': 2, 'Non': 14, 'one': 14, 'ne,': 2, 'e,\n': 2, ' ac': 1, 'acc': 5, 'cce': 5, 'ces': 5, 'ss_': 5, 's_t': 5, ""='/"": 1, ""'/o"": 1, '/oa': 2, 'th/': 1, 'h/a': 1, '/ac': 1, ""en'"": 6, ""n',"": 3, ' au': 1, 'tho': 10, 'hor': 6, 'ori': 6, 'riz': 6, 'ize': 6, 'ze_': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.f': 1, 'm/d': 1, '/di': 1, 'dia': 1, 'ial': 1, 'alo': 1, 'log': 10, 'og/': 1, 'g/o': 1, ""th'"": 1, ""h',"": 1, '  c': 3, ' co': 5, 'ons': 7, 'nsu': 2, 'sum': 2, 'ume': 2, 'mer': 2, 'r_k': 1, '_ke': 3, 'key': 3, 'ey=': 3, ""y='"": 2, ""='1"": 1, ""'18"": 1, '188': 1, '884': 1, '847': 1, '477': 1, '779': 1, '791': 1, '911': 1, '112': 1, '122': 1, '223': 1, '236': 1, '360': 1, '606': 1, ""06'"": 1, ""6',"": 1, 'r_s': 2, '_se': 1, 'sec': 1, 'ecr': 1, 'cre': 1, 'ret': 15, 'et=': 1, ""t='"": 1, ""='6"": 1, ""'62"": 1, '621': 1, '214': 1, '141': 1, '413': 1, '13d': 1, '3dd': 1, 'dde': 1, 'dea': 1, 'ea2': 1, 'a2b': 1, '2bc': 1, 'bcc': 1, 'cc5': 1, 'c5b': 1, '5b2': 1, 'b2e': 1, '2e8': 1, 'e83': 1, '83d': 1, '3d4': 1, 'd42': 1, '42f': 1, '2fc': 1, 'fc4': 1, 'c40': 1, '404': 3, '049': 1, '495': 1, '95d': 1, '5de': 1, ""de'"": 3, ""e',"": 5, 'n_p': 1, '_pa': 19, 'par': 14, 'ara': 1, 'ram': 1, 'ams': 1, 'ms=': 1, 's={': 2, ""={'"": 2, ""{'s"": 1, ""'sc"": 1, 'sco': 1, 'cop': 2, 'ope': 1, ""pe'"": 1, ""e':"": 2, ""': "": 5, "": '"": 1, "" 'e"": 1, ""'em"": 1, 'ema': 1, 'mai': 1, 'ail': 1, ""il'"": 1, ""l'}"": 1, ""'}\n"": 1, '}\n)': 1, '\n)\n': 1, '\n\nd': 2, '\nde': 11, 'def': 13, 'ef ': 12, 'f u': 3, 'or_': 5, 'r_o': 3, '_ot': 3, 'oth': 3, 'the': 4, 'her': 3, 'r_p': 3, 'pag': 15, 'age': 12, 'ge(': 1, 'e(p': 5, '(pa': 11, 'ge)': 3, 'e):': 3, '):\n': 14, ':\n ': 27, ' ar': 3, 'arg': 7, 'rgs': 7, 'gs ': 1, 's =': 2, '= r': 3, 'st.': 12, 't.v': 1, '.vi': 1, 'vie': 1, 'iew': 1, 'ew_': 8, 'w_a': 1, '_ar': 1, 'gs.': 4, 's.c': 1, 'opy': 1, 'py(': 1, 'y()': 1, ')\n ': 37, 'gs[': 1, ""s['"": 2, ""['p"": 1, ""'pa"": 5, ""ge'"": 3, ""e']"": 5, ""'] "": 4, '] =': 4, '= p': 5, ' pa': 28, 'ge\n': 2, 'e\n ': 7, 'etu': 14, 'tur': 14, 'urn': 14, 'rn ': 14, 'n u': 1, 'or(': 8, 'r(r': 1, '(re': 4, 't.e': 1, '.en': 1, 'ndp': 1, 'dpo': 1, 'poi': 1, 'oin': 1, 'int': 5, 'nt,': 2, ', *': 1, ' **': 1, '**a': 1, '*ar': 1, 'gs)': 1, 's)\n': 1, 'p.j': 1, '.ji': 1, 'jin': 1, 'inj': 1, 'nja': 1, 'ja_': 1, 'a_e': 1, '_en': 1, 'env': 1, 'nv.': 1, 'v.g': 1, '.gl': 1, 'glo': 1, 'lob': 1, 'oba': 1, 'bal': 1, 'als': 2, 'ls[': 1, ""['u"": 3, ""'ur"": 1, '= u': 3, 'e\n\n': 1, '\n\nc': 2, '\ncl': 2, 'cla': 2, 'ass': 2, 'ss ': 2, 's P': 1, ' Pa': 6, 'Pas': 9, 'ast': 58, 'ste': 58, 'te(': 19, 'e(d': 1, '(db': 11, 'db.': 29, 'b.M': 2, '.Mo': 2, 'Mod': 2, 'ode': 8, 'del': 7, 'el)': 2, 'l):': 2, '  i': 14, ' id': 2, 'id ': 9, 'd =': 10, '= d': 11, ' db': 18, 'b.C': 8, '.Co': 8, 'Col': 8, 'olu': 8, 'lum': 8, 'umn': 8, 'mn(': 8, 'n(d': 8, 'b.I': 4, '.In': 4, 'Int': 4, 'nte': 4, 'teg': 4, 'ege': 4, 'er,': 6, ', p': 11, ' pr': 2, 'pri': 2, 'rim': 2, 'ima': 2, 'mar': 2, 'ary': 2, 'ry_': 2, 'y_k': 2, 'y=T': 3, '=Tr': 5, 'Tru': 5, 'rue': 5, 'ue)': 4, 'e)\n': 11, 'cod': 6, 'de ': 2, 'e =': 10, 'b.T': 1, '.Te': 1, 'Tex': 1, 'xt)': 1, 't)\n': 4, '  p': 10, ' pu': 1, 'pub': 4, 'ub_': 2, 'b_d': 2, '_da': 2, 'te ': 6, 'b.D': 1, '.Da': 1, 'Dat': 1, 'teT': 1, 'eTi': 1, 'Tim': 1, 'me)': 2, '  u': 10, ' us': 18, 'use': 40, 'ser': 43, 'r_i': 8, '_id': 22, ', d': 5, 'b.F': 2, '.Fo': 2, 'For': 2, 'ore': 3, 'rei': 2, 'eig': 2, 'ign': 2, 'gnK': 2, 'nKe': 2, 'Key': 2, 'ey(': 2, ""y('"": 2, ""('u"": 2, ""'us"": 7, 'er.': 9, 'r.i': 3, '.id': 9, ""id'"": 9, ""d')"": 4, ""'))"": 5, '))\n': 9, 'are': 14, 'ent': 14, 'nt_': 1, 't_i': 1, ""('p"": 2, 'pas': 49, 'te.': 16, 'e.i': 5, 'nt ': 5, 't =': 4, 'b.r': 2, 'rel': 2, 'ela': 2, 'ati': 7, 'tio': 8, 'nsh': 2, 'shi': 2, 'hip': 2, 'ip(': 2, ""('P"": 2, ""'Pa"": 2, ""te'"": 7, ""', "": 15, ', l': 2, ' la': 2, 'laz': 2, 'azy': 2, 'zy=': 2, 'ue,': 1, 'e, ': 5, ', b': 2, 'bac': 3, 'ack': 3, 'ckr': 2, 'kre': 2, 'ref': 3, 'ef=': 2, ""f='"": 2, ""='c"": 1, ""'ch"": 2, 'chi': 2, 'hil': 2, 'ild': 2, 'ldr': 2, 'dre': 2, 'sel': 6, 'eli': 1, 'lis': 3, 'ist': 1, 'st=': 1, 't=F': 1, '=Fa': 1, 'Fal': 1, 'lse': 2, 'se,': 1, 'e_s': 1, '_si': 1, 'sid': 1, 'ide': 1, 'de=': 1, 'e=[': 1, '=[i': 1, '[id': 1, 'id]': 1, 'd])': 1, '])\n': 4, '\n\n ': 5, '  d': 9, ' de': 5, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 2, 'elf': 5, 'lf,': 1, 'f, ': 1, ', c': 1, 'de,': 1, 'nt=': 3, 't=N': 1, 'ne)': 1, '  s': 8, 'lf.': 4, 'f.u': 1, '.us': 12, 'er ': 12, 'r =': 7, 'er\n': 3, 'r\n ': 1, 'f.c': 1, '= c': 1, 'de\n': 1, 'f.p': 2, '.pu': 3, 'me.': 4, 'e.u': 5, '.ut': 1, 'utc': 1, 'tcn': 1, 'cno': 1, 'now': 2, 'ow(': 1, 'w()': 1, '.pa': 2, 'nt\n': 1, 's U': 1, ' Us': 4, 'Use': 4, 'er(': 2, 'r(d': 1, ' di': 1, 'dis': 4, 'isp': 4, 'spl': 4, 'lay': 4, 'ay_': 4, 'y_n': 4, 'b.S': 2, '.St': 2, 'Str': 2, 'tri': 2, 'rin': 2, 'ing': 2, 'ng(': 2, 'g(1': 1, '(12': 1, '120': 1, '20)': 1, '0))': 1, '  f': 5, ' fb': 1, 'fb_': 5, 'b_i': 3, 'g(3': 1, '(30': 1, '30)': 1, '0),': 1, '), ': 1, ' un': 1, 'uni': 1, 'niq': 1, 'iqu': 1, 'ue=': 1, 'e=T': 1, 'tes': 6, 'es ': 2, 'p(P': 1, '(Pa': 1, 'te,': 2, ""='d"": 1, ""'dy"": 1, 'dyn': 1, 'yna': 1, 'ami': 1, 'mic': 1, ""ic'"": 1, ""c',"": 1, ""='u"": 1, ""er'"": 2, ""r')"": 1, 'f s': 2, 'sen': 2, 'nd_': 2, 'd_n': 2, '_ne': 2, 'new': 8, 'w_p': 11, 'e_n': 2, '_no': 2, 'not': 5, 'oti': 3, 'tif': 3, 'ifi': 3, 'fic': 2, 'ica': 2, 'cat': 2, 'ns(': 3, 's(p': 3, 'rep': 9, 'epl': 9, 'ply': 7, 'ly)': 1, 'y):': 1, '  ""': 1, ' """"': 1, '""""""': 2, '""""N': 1, '""No': 1, 'Not': 1, 'fie': 1, 'ies': 3, 's c': 1, ' cl': 1, 'cli': 1, 'lie': 3, 'ien': 1, 'nts': 1, 'ts ': 1, 's a': 1, 'bou': 1, 'out': 12, 't n': 1, ' ne': 5, 'ew ': 1, 'w p': 1, 'es.': 2, 's.""': 1, '.""""': 1, '""""\n': 1, '""\n ': 1, '= N': 4, ' No': 12, 'ne\n': 4, ' if': 12, 'if ': 12, 'f p': 2, 'er:': 2, 'r:\n': 2, 'r.d': 3, '.di': 3, 'id\n': 2, 'd\n ': 1, 'ata': 6, 'ta ': 1, 'a =': 1, '= {': 1, "" {'"": 1, ""{'p"": 2, 'e_i': 9, ""d':"": 2, ': p': 1, 'id,': 4, 'd, ': 4, "", '"": 5, "" 'r"": 1, ""'re"": 2, 'ly_': 5, 'y_i': 1, ': r': 1, 'ly.': 1, 'y.i': 1, "" 'u"": 2, ""r':"": 1, ': u': 1, 'er}': 1, 'r}\n': 1, '}\n ': 1, '  j': 2, 'ug.': 2, 'g.p': 2, 'ubl': 2, 'bli': 2, 'ish': 2, 'sh(': 6, ""h('"": 6, 'te-': 1, 'e-r': 1, '-re': 2, 'pli': 2, 'es:': 2, 's:%': 2, ':%d': 2, ""%d'"": 2, ""d' "": 3, ""' %"": 3, ' % ': 3, '% p': 1, 'ta)': 2, 'a)\n': 2, 'd i': 2, ' is': 7, 'is ': 7, 's n': 3, ' no': 4, 'ot ': 3, 't N': 3, 'ne:': 6, 'e:\n': 7, 'er-': 1, 'r-r': 1, '% u': 2, '\n\n@': 9, '\n@a': 9, '@ap': 9, 'p.b': 1, '.be': 1, 'bef': 1, 'efo': 1, 're_': 1, 'e_r': 1, '_re': 1, 'st\n': 1, 't\nd': 1, 'f c': 1, ' ch': 1, 'hec': 1, 'eck': 1, 'ck_': 1, 'k_u': 1, '_us': 1, '_st': 1, 'sta': 1, 'tat': 1, 'atu': 1, 'tus': 1, 'us(': 1, 's()': 1, '():': 5, '  g': 2, ' g.': 5, 'g.u': 7, ""f '"": 2, ""' i"": 2, ' in': 3, 'in ': 3, 'n s': 2, 'on:': 1, 'n:\n': 1, '= U': 3, 'r.q': 2, '.qu': 6, 'uer': 6, 'ery': 6, 'ry.': 6, 'y.g': 3, '.ge': 9, 'get': 11, 'et(': 7, 't(s': 1, 'on[': 3, ""n['"": 3, ""d']"": 4, ""'])"": 4, 'p.r': 8, '.ro': 8, 'rou': 8, 'ute': 8, ""('/"": 9, ""'/'"": 1, ', m': 2, ' me': 5, 'met': 4, 'eth': 4, 'hod': 4, 'ods': 2, 'ds=': 2, 's=[': 2, ""=['"": 2, ""['G"": 2, ""'GE"": 2, 'GET': 2, ""ET'"": 2, ""T',"": 2, "" 'P"": 4, ""'PO"": 4, 'POS': 4, 'OST': 4, ""ST'"": 4, ""T']"": 2, 'f n': 1, 'e()': 1, 'y_t': 4, 'to ': 2, 'o =': 1, 't.a': 3, '.ar': 3, 's.g': 3, ""t('"": 5, ""('r"": 1, ""to'"": 1, ""o',"": 1, ', t': 1, ' ty': 1, 'typ': 1, 'ype': 1, 'pe=': 1, 'e=i': 1, '=in': 1, 'nt)': 3, 'f r': 4, 'o i': 1, '= P': 5, 'e.q': 4, 't(r': 1, 'to)': 1, 'o)\n': 1, 't.m': 2, '.me': 2, 'od ': 2, ' ==': 2, '== ': 2, ""= '"": 2, ""T' "": 1, ""' a"": 1, ' an': 1, 'and': 2, 'nd ': 1, 'd r': 1, 't.f': 3, '.fo': 3, 'orm': 3, 'rm[': 2, ""m['"": 2, ""['c"": 2, ""']:"": 1, ']:\n': 1, 'e(g': 1, '(g.': 1, ""'],"": 2, '], ': 2, 't=p': 2, '=pa': 7, 'b.s': 6, '.se': 6, 'on.': 8, 'n.a': 2, '.ad': 2, 'add': 2, 'dd(': 2, 'd(p': 1, 'te)': 5, 'n.c': 4, 'omm': 3, 'mmi': 3, 'mit': 3, 'it(': 3, 'n r': 12, 'ct(': 7, 't(u': 5, '(ur': 5, ""r('"": 7, ""('s"": 3, ""'sh"": 3, 'sho': 4, 'how': 4, 'ow_': 4, 'id=': 3, 'd=p': 2, 'id)': 6, 'd))': 2, ""('n"": 6, ""'ne"": 6, 'e.h': 3, '.ht': 4, 'htm': 4, 'tml': 4, ""ml'"": 4, ""l',"": 4, ""'/<"": 2, '/<i': 3, '<in': 3, 'nt:': 3, 't:p': 3, ':pa': 3, 'id>': 2, ""d>'"": 1, "">')"": 2, ' sh': 1, 'd):': 2, 'y.o': 1, '.op': 1, 'opt': 1, 'pti': 1, 's(d': 1, 'b.e': 1, '.ea': 1, 'eag': 1, 'erl': 1, 'rlo': 1, 'loa': 1, 'oad': 1, 'ad(': 1, ""d('"": 1, ""n')"": 4, ')).': 1, ').g': 1, 'et_': 3, 't_o': 2, '_or': 2, 'r_4': 2, '_40': 2, '04(': 2, '4(p': 2, 'd)\n': 2, 'te=': 2, 'e=p': 2, 'd>/': 1, '>/d': 1, '/de': 1, 'ele': 5, 'let': 5, 'ete': 5, 'f d': 1, 'e_p': 2, 'f g': 3, 'r i': 3, 's N': 4, 'ne ': 1, 'e o': 1, ' or': 4, 'or ': 4, 'r g': 1, 'r !': 1, ' !=': 1, '!= ': 1, 'rt(': 1, 't(4': 1, '(40': 1, '401': 1, '01)': 1, '1)\n': 1, ""T':"": 1, ""':\n"": 1, "" 'y"": 1, ""'ye"": 1, 'yes': 1, ""es'"": 1, ""s' "": 2, 'rm:': 1, 'm:\n': 1, 'n.d': 1, '.de': 1, 'e w': 1, ' wa': 1, 'was': 1, 'as ': 2, 's d': 1, 'ted': 1, ""ed'"": 3, ""e')"": 4, '  e': 1, ' el': 1, 'els': 1, 'se:': 1, ""('d"": 1, ""'de"": 1, ""'/m"": 3, '/my': 2, 'my-': 2, 'y-p': 2, '-pa': 2, 'es/': 2, ""s/'"": 1, 'efa': 1, 'fau': 1, 'aul': 1, 'ult': 1, 'lts': 1, 'ts=': 1, ': 1': 1, ' 1}': 1, '1})': 1, '})\n': 1, ')\n@': 2, 's/p': 1, '/pa': 1, 'ge/': 1, 'e/<': 1, 'ge>': 1, ""e>'"": 1, 'f m': 1, ' my': 1, 'my_': 2, 'y_p': 2, 'es(': 1, ""('l"": 1, ""'lo"": 1, 'ogi': 5, 'gin': 9, ""in'"": 3, ', n': 1, 'nex': 7, 'xt=': 2, 't=r': 2, '=re': 2, 't.u': 1, '.ur': 1, 'rl)': 3, 'l))': 1, 'agi': 4, 'ina': 4, 'nat': 4, 'on ': 1, 'n =': 1, 'y.f': 2, '.fi': 3, 'ilt': 2, 'lte': 2, 'ter': 4, 'r_b': 2, '_by': 2, 'by(': 2, 'y(u': 1, '(us': 2, 'er=': 1, 'r=g': 1, '=g.': 1, 'er)': 2, 'r).': 1, ').p': 1, ""('m"": 1, ""'my"": 1, 's.h': 1, 'on=': 1, 'n=p': 1, 'on)': 1, 'n)\n': 1, ""'/l"": 3, '/lo': 3, 'f l': 2, ' lo': 5, 'in(': 1, 'n()': 2, 'n f': 1, ' fa': 3, 'k.a': 2, '.au': 2, 'ze(': 1, 'e(c': 1, '(ca': 1, 'cal': 1, 'all': 1, 'llb': 1, 'lba': 1, 'ck=': 1, 'k=u': 1, '=ur': 1, 'ok_': 3, 'k_a': 2, '_au': 2, 'zed': 4, ""d',"": 1, '  n': 2, ""xt'"": 2, ""t')"": 4, ""') "": 2, ') o': 2, 'r r': 1, 't.r': 1, 'efe': 1, 'fer': 1, 'err': 1, 'rre': 1, 'rer': 1, 'r o': 1, 'r N': 1, '  _': 1, ' _e': 1, '_ex': 1, 'xte': 1, 'nal': 1, 'al=': 1, 'l=T': 1, 'e))': 1, 'ogo': 2, 'gou': 2, ""ut'"": 2, '.cl': 1, 'cle': 1, 'lea': 1, 'ear': 1, 'ar(': 1, 'r()': 2, ""('Y"": 3, ""'Yo"": 3, 'You': 3, 'ou ': 3, 'u w': 1, ' we': 1, 'wer': 1, 'ere': 1, 're ': 2, 'e l': 2, 'ogg': 2, 'ged': 2, 'ed ': 3, 'd o': 1, ' ou': 1, 'in/': 1, 'n/a': 1, '/au': 1, '\n@f': 2, '@fa': 2, 'ed_': 1, 'd_h': 1, '_ha': 1, 'han': 1, 'ndl': 1, 'dle': 1, 'ler': 1, 'r\nd': 2, 'f f': 1, 'ed(': 1, 'd(r': 1, 'res': 3, 'esp': 3, 'sp)': 1, 'p):': 1, 'xt_': 3, 't_u': 3, 'rl ': 1, 'l =': 1, 'r u': 1, 'sp ': 1, 'p i': 1, 'u d': 1, 'den': 1, 'eni': 1, 'nie': 1, 'ied': 1, 'd t': 1, ' th': 1, 'he ': 1, 't(n': 2, '(ne': 2, 'l)\n': 2, ""['f"": 1, ""'fb"": 2, 'b_a': 2, '_ac': 2, ""n']"": 2, '= (': 1, ' (r': 1, 'sp[': 1, ""p['"": 1, ""['a"": 1, ""'ac"": 1, "" ''"": 1, ""'')"": 1, '  m': 1, '= f': 1, 'k.g': 1, '/me': 1, ""me'"": 2, 'y(f': 1, '(fb': 1, 'd=m': 1, '=me': 1, 'e.d': 3, '.da': 3, 'ta[': 3, ""a['"": 3, ""['i"": 2, ""'id"": 2, ']).': 1, ').f': 1, 'fir': 1, 'irs': 1, 'rst': 1, 'st(': 1, 'r.f': 1, '.fb': 1, '= m': 2, ""']\n"": 2, ']\n ': 2, 'd(u': 1, 'r)\n': 1, ""['n"": 1, ""'na"": 1, 'd\n\n': 1, 'u a': 1, 'e n': 1, 'ow ': 1, 'w l': 1, 'n a': 1, ' as': 1, 's %': 1, ' %s': 1, ""%s'"": 1, 'k.t': 1, '.to': 1, 'eng': 1, 'nge': 1, 'ett': 1, 'tte': 1, ' ge': 1, 't_f': 1, '_fa': 1, 'k_o': 1, '_oa': 1, 'th_': 1, 'h_t': 1, 'en(': 1, 'n.g': 1}"
Armin Ronacher,programs.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, '-*-': 2, 'coding:': 1, 'utf-8': 1, '""""""': 2, 'rstblog.programs': 1, '~~~~~~~~~~~~~~~~': 1, 'builtin': 1, 'build': 1, 'programs.': 1, ':copyright:': 1, '(c)': 1, '2010': 1, 'by': 1, 'armin': 1, 'ronacher.': 1, ':license:': 1, 'bsd,': 1, 'see': 1, 'license': 1, 'for': 3, 'more': 1, 'details.': 1, 'from': 5, '__future__': 2, 'import': 8, 'with_statement': 1, 'absolute_import': 1, 'os': 1, 'yaml': 1, 'shutil': 1, 'datetime': 2, 'io': 1, 'stringio': 1, 'weakref': 1, 'ref': 1, 'class': 4, 'program(object):': 1, 'def': 15, '__init__(self,': 1, 'context):': 1, 'self._context': 1, '=': 32, 'ref(context)': 1, '@property': 1, 'context(self):': 1, 'rv': 7, 'self._context()': 1, 'if': 12, 'is': 7, 'none:': 6, 'raise': 3, ""runtimeerror('context"": 1, 'went': 1, 'away,': 1, 'program': 3, ""invalid')"": 1, 'return': 10, 'get_desired_filename(self):': 2, 'folder,': 1, 'basename': 1, 'os.path.split(self.context.source_filename)': 1, 'simple_name': 2, 'os.path.splitext(basename)[0]': 1, '==': 1, ""'index':"": 1, 'suffix': 2, ""'index.html'"": 1, 'else:': 1, 'os.path.join(simple_name,': 1, ""'index.html')"": 1, 'os.path.join(folder,': 1, 'suffix)': 1, 'prepare(self):': 2, 'pass': 2, 'render_contents(self):': 2, ""u''"": 1, 'run(self):': 3, 'notimplementederror()': 1, 'copyprogram(program):': 1, '""""""a': 2, 'that': 2, 'copies': 1, 'a': 2, 'file': 3, 'over': 1, 'unchanged""""""': 1, 'self.context.make_destination_folder()': 1, 'shutil.copy(self.context.full_source_filename,': 1, 'self.context.full_destination_filename)': 1, 'self.context.source_filename': 1, 'templatedprogram(program):': 1, 'default_template': 2, 'none': 2, 'get_template_context(self):': 2, '{}': 1, 'template_name': 1, ""self.context.config.get('template')"": 1, '\\': 2, 'or': 1, 'self.default_template': 1, 'context': 1, 'self.get_template_context()': 1, 'self.context.render_template(template_name,': 1, 'context)': 1, 'with': 3, 'self.context.open_destination_file()': 1, 'as': 3, 'f:': 5, ""f.write(rv.encode('utf-8')"": 1, '+': 1, ""b'\\n')"": 1, 'rstprogram(templatedprogram):': 1, 'renders': 1, 'an': 1, 'rst': 1, 'into': 1, 'template""""""': 1, ""'rst_display.html'"": 1, '_fragment_cache': 1, 'headers': 1, ""['---']"": 1, 'self.context.open_source_file()': 2, 'line': 4, 'in': 3, 'line.rstrip().decode(""utf-8"")': 1, 'not': 9, 'line:': 2, 'break': 2, 'headers.append(line)': 1, 'title': 4, 'self.parse_text_title(f)': 1, 'cfg': 1, ""yaml.safe_load(stringio('\\n'.join(headers)))"": 1, 'cfg:': 1, 'isinstance(cfg,': 1, 'dict):': 1, ""valueerror('expected"": 1, 'dict': 1, 'config': 1, '""%s"",': 1, 'got:': 1, ""%.40r'"": 1, '%': 1, '(self.context.source_filename,': 1, 'cfg))': 1, 'self.context.config': 1, 'self.context.config.add_from_dict(cfg)': 1, 'self.context.destination_filename': 1, 'cfg.get(': 1, ""'destination_filename',"": 1, 'self.context.destination_filename)': 1, 'title_override': 3, ""cfg.get('title')"": 1, 'pub_date_override': 4, ""cfg.get('pub_date')"": 1, 'isinstance(pub_date_override,': 1, 'datetime):': 1, 'datetime(pub_date_override.year,': 1, 'pub_date_override.month,': 1, 'pub_date_override.day)': 1, 'self.context.pub_date': 1, 'summary_override': 3, ""cfg.get('summary')"": 1, 'self.context.summary': 1, 'self.context.title': 1, 'parse_text_title(self,': 1, 'f):': 1, 'buffer': 1, '[]': 1, 'line.rstrip()': 1, 'buffer.append(line)': 1, ""self.context.render_rst(b'\\n'.join(buffer).decode('utf-8')).get('title')"": 1, 'get_fragments(self):': 1, 'self._fragment_cache': 3, 'while': 1, 'f.readline().strip():': 1, ""self.context.render_rst(f.read().decode('utf-8'))"": 1, ""self.get_fragments()['fragment']"": 1, 'ctx': 2, 'templatedprogram.get_template_context(self)': 1, ""ctx['rst']"": 1, 'self.get_fragments()': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 7, 'cod': 5, 'odi': 1, 'din': 1, 'ing': 3, 'ng:': 1, 'g: ': 1, ': u': 1, ' ut': 1, 'utf': 5, 'tf-': 5, 'f-8': 5, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\n""': 1, '\n""""': 2, '""""""': 6, '""""\n': 4, '""\n ': 2, '\n  ': 103, '   ': 832, '  r': 17, ' rs': 2, 'rst': 8, 'stb': 1, 'tbl': 1, 'blo': 1, 'log': 1, 'og.': 1, 'g.p': 1, '.pr': 1, 'pro': 6, 'rog': 13, 'ogr': 13, 'gra': 13, 'ram': 13, 'ams': 2, 'ms\n': 1, 's\n ': 2, '  ~': 1, ' ~~': 1, '~~~': 14, '~~\n': 1, '~\n\n': 1, '\n\n ': 22, '  B': 1, ' Bu': 1, 'Bui': 1, 'uil': 2, 'ilt': 1, 'lti': 1, 'tin': 7, 'in ': 5, 'n b': 1, ' bu': 3, 'bui': 1, 'ild': 1, 'ld ': 1, 'd p': 1, ' pr': 6, 'ms.': 1, 's.\n': 2, '.\n\n': 1, '  :': 2, ' :c': 1, ':co': 1, 'cop': 3, 'opy': 3, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 2, ': (': 1, ' (c': 1, '(c)': 1, 'c) ': 1, ') 2': 1, ' 20': 1, '201': 1, '010': 1, '10 ': 1, '0 b': 1, ' by': 1, 'by ': 1, 'y A': 1, ' Ar': 1, 'Arm': 1, 'rmi': 1, 'min': 1, 'n R': 1, ' Ro': 1, 'Ron': 1, 'ona': 1, 'nac': 1, 'ach': 5, 'che': 5, 'her': 1, 'er.': 2, 'r.\n': 1, '.\n ': 1, ' :l': 1, ':li': 1, 'lic': 1, 'ice': 1, 'cen': 1, 'ens': 1, 'nse': 1, 'se:': 2, 'e: ': 1, ': B': 1, ' BS': 1, 'BSD': 1, 'SD,': 1, 'D, ': 1, ', s': 2, ' se': 28, 'see': 1, 'ee ': 1, 'e L': 1, ' LI': 1, 'LIC': 1, 'ICE': 1, 'CEN': 1, 'ENS': 1, 'NSE': 1, 'SE ': 1, 'E f': 1, ' fo': 4, 'for': 3, 'or ': 4, 'r m': 1, ' mo': 1, 'mor': 1, 'ore': 1, 're ': 1, 'e d': 1, ' de': 18, 'det': 1, 'eta': 1, 'tai': 1, 'ail': 1, 'ils': 1, 'ls.': 1, '.\n""': 1, '""\nf': 1, '\nfr': 5, 'fro': 6, 'rom': 6, 'om ': 5, 'm _': 2, ' __': 3, '__f': 2, '_fu': 2, 'fut': 2, 'utu': 2, 'tur': 12, 'ure': 2, 're_': 2, 'e__': 2, '__ ': 2, '_ i': 2, ' im': 5, 'imp': 12, 'mpo': 9, 'por': 9, 'ort': 9, 'rt ': 8, 't w': 2, ' wi': 4, 'wit': 4, 'ith': 4, 'th_': 1, 'h_s': 1, '_st': 1, 'sta': 3, 'tat': 1, 'ate': 30, 'tem': 13, 'eme': 2, 'men': 10, 'ent': 13, 'nt\n': 1, 't\nf': 1, 't a': 2, ' ab': 1, 'abs': 1, 'bso': 1, 'sol': 1, 'olu': 1, 'lut': 1, 'ute': 1, 'te_': 15, 'e_i': 1, '_im': 1, 'rt\n': 1, 't\ni': 1, '\nim': 3, 't o': 1, ' os': 5, 'os\n': 1, 's\ni': 1, 't y': 1, ' ya': 2, 'yam': 2, 'aml': 2, 'ml\n': 1, 'l\ni': 1, 't s': 1, ' sh': 2, 'shu': 2, 'hut': 2, 'uti': 2, 'til': 2, 'il\n': 1, 'l\nf': 1, 'm d': 1, ' da': 4, 'dat': 14, 'tet': 4, 'eti': 4, 'tim': 5, 'ime': 5, 'me ': 6, 'e i': 9, 't d': 1, 'me\n': 2, 'e\nf': 1, 'm i': 2, ' io': 1, 'io ': 1, 'o i': 1, 't S': 1, ' St': 1, 'Str': 2, 'tri': 5, 'rin': 2, 'ngI': 2, 'gIO': 2, 'IO\n': 1, 'O\nf': 1, 'm w': 1, ' we': 2, 'wea': 1, 'eak': 3, 'akr': 1, 'kre': 1, 'ref': 3, 'ef ': 16, 'f i': 1, 't r': 2, ' re': 15, 'ef\n': 1, 'f\n\n': 1, '\n\n\n': 4, '\n\nc': 4, '\ncl': 4, 'cla': 4, 'las': 4, 'ass': 6, 'ss ': 4, 's P': 1, ' Pr': 1, 'Pro': 8, 'am(': 4, 'm(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 2, 'ct)': 2, 't):': 3, '):\n': 22, ':\n\n': 1, '  d': 17, 'def': 18, 'f _': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 19, 'sel': 46, 'elf': 46, 'lf,': 2, 'f, ': 2, ', c': 3, 'con': 38, 'ont': 35, 'nte': 35, 'tex': 35, 'ext': 35, 'xt)': 3, ':\n ': 37, '  s': 15, 'lf.': 30, 'f._': 5, '._c': 2, '_co': 8, 'xt ': 3, 't =': 2, ' = ': 32, '= r': 2, 'ef(': 1, 'f(c': 1, '(co': 1, 't)\n': 2, ')\n\n': 8, '  @': 1, ' @p': 1, '@pr': 1, 'rop': 1, 'ope': 4, 'per': 1, 'ert': 1, 'rty': 1, 'ty\n': 1, 'y\n ': 1, 'f c': 2, 'xt(': 7, 't(s': 5, 'lf)': 14, 'f):': 14, ' rv': 7, 'rv ': 4, 'v =': 3, '= s': 9, 't()': 2, '()\n': 6, ')\n ': 21, '  i': 12, ' if': 12, 'if ': 12, 'f r': 6, 'v i': 1, ' is': 9, 'is ': 7, 's N': 1, ' No': 9, 'Non': 8, 'one': 8, 'ne:': 8, 'e:\n': 9, ' ra': 3, 'rai': 3, 'ais': 3, 'ise': 3, 'se ': 3, 'e R': 1, ' Ru': 1, 'Run': 1, 'unt': 1, 'nti': 1, 'meE': 1, 'eEr': 2, 'Err': 3, 'rro': 3, 'ror': 3, 'or(': 3, ""r('"": 2, ""('c"": 1, ""'co"": 1, 'wen': 1, 'nt ': 1, ' aw': 1, 'awa': 1, 'way': 1, 'ay,': 1, 'y, ': 1, ', p': 1, 'am ': 3, 's i': 1, ' in': 5, 'inv': 1, 'nva': 1, 'val': 1, 'ali': 1, 'lid': 1, ""id'"": 1, ""d')"": 1, ""')\n"": 7, 'ret': 10, 'etu': 10, 'urn': 10, 'rn ': 10, 'n r': 3, 'rv\n': 3, 'v\n\n': 2, 'f g': 5, ' ge': 5, 'get': 15, 'et_': 9, 't_d': 3, '_de': 5, 'des': 8, 'esi': 2, 'sir': 2, 'ire': 2, 'red': 2, 'ed_': 2, 'd_f': 3, '_fi': 13, 'fil': 16, 'ile': 17, 'len': 10, 'ena': 12, 'nam': 17, 'ame': 17, 'me(': 3, 'e(s': 5, '  f': 4, 'fol': 3, 'old': 3, 'lde': 3, 'der': 12, 'er,': 2, 'r, ': 2, ', b': 1, ' ba': 1, 'bas': 2, 'ase': 2, 'sen': 2, 'e =': 19, '= o': 3, 'os.': 4, 's.p': 4, '.pa': 5, 'pat': 4, 'ath': 4, 'th.': 4, 'h.s': 2, '.sp': 2, 'spl': 3, 'pli': 2, 'lit': 2, 'it(': 1, 'f.c': 20, '.co': 24, 'xt.': 20, 't.s': 4, '.so': 3, 'sou': 6, 'our': 6, 'urc': 6, 'rce': 6, 'ce_': 6, 'e_f': 6, 'me)': 5, 'e)\n': 5, ' si': 2, 'sim': 3, 'mpl': 19, 'ple': 4, 'le_': 6, 'e_n': 5, '_na': 5, 'ite': 2, 't(b': 2, '(ba': 1, 'e)[': 1, ')[0': 1, '[0]': 1, '0]\n': 1, ']\n ': 3, 'f s': 3, ' ==': 1, '== ': 1, ""= '"": 3, "" 'i"": 3, ""'in"": 3, 'ind': 3, 'nde': 9, 'dex': 3, ""ex'"": 1, ""x':"": 1, ""':\n"": 1, ' su': 6, 'suf': 3, 'uff': 6, 'ffi': 3, 'fix': 3, 'ix ': 2, 'x =': 3, 'ex.': 2, 'x.h': 2, '.ht': 3, 'htm': 3, 'tml': 3, ""ml'"": 3, ""l'\n"": 2, ""'\n "": 2, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'h.j': 2, '.jo': 4, 'joi': 4, 'oin': 4, 'in(': 4, 'n(s': 4, '(si': 1, 'me,': 4, 'e, ': 4, "", '"": 1, ""l')"": 1, 'n o': 1, 'n(f': 1, '(fo': 1, 'ix)': 1, 'x)\n': 1, 'f p': 4, 'pre': 2, 'rep': 2, 'epa': 2, 'par': 4, 'are': 2, 're(': 2, '  p': 6, ' pa': 3, 'pas': 2, 'ss\n': 2, 's\n\n': 1, 'ren': 6, 'end': 8, 'er_': 5, 'r_c': 2, 'ten': 2, 'nts': 5, 'ts(': 5, 's(s': 3, 'n u': 1, "" u'"": 1, ""u''"": 1, ""''\n"": 1, ""'\n\n"": 1, ' ru': 3, 'run': 3, 'un(': 3, 'e N': 1, 'Not': 1, 'otI': 1, 'tIm': 1, 'Imp': 1, 'lem': 1, 'ted': 5, 'edE': 1, 'dEr': 1, 'r()': 2, 's C': 1, ' Co': 1, 'Cop': 1, 'pyP': 1, 'yPr': 1, 'm(P': 2, '(Pr': 2, 'am)': 3, 'm):': 3, '  ""': 2, ' """"': 2, '""""A': 2, '""A ': 2, 'A p': 2, 'm t': 2, ' th': 2, 'tha': 2, 'hat': 2, 'at ': 2, 't c': 2, 'opi': 1, 'pie': 1, 'ies': 1, 'es ': 1, 's a': 2, ' a ': 2, 'a f': 1, ' fi': 3, 'le ': 8, 'e o': 1, ' ov': 1, 'ove': 15, 'ver': 15, 'er ': 2, 'r u': 1, ' un': 1, 'unc': 1, 'nch': 1, 'cha': 1, 'han': 1, 'ang': 1, 'nge': 1, 'ged': 1, 'ed""': 1, 'd""""': 1, '""\n\n': 1, 't.m': 1, '.ma': 1, 'mak': 1, 'ake': 1, 'ke_': 1, 'e_d': 1, 'est': 6, 'sti': 6, 'ina': 6, 'nat': 6, 'ati': 6, 'tio': 6, 'ion': 6, 'on_': 6, 'n_f': 6, '_fo': 1, 'er(': 1, 'il.': 1, 'l.c': 1, 'py(': 1, 'y(s': 1, 't.f': 2, '.fu': 2, 'ful': 2, 'ull': 2, 'll_': 2, 'l_s': 1, '_so': 3, 'e,\n': 1, ',\n ': 4, 'l_d': 1, 'n s': 4, 'e\n\n': 7, 's T': 1, ' Te': 2, 'Tem': 3, 'emp': 15, 'pla': 16, 'lat': 15, 'edP': 3, 'dPr': 3, 'efa': 3, 'fau': 3, 'aul': 3, 'ult': 3, 'lt_': 3, 't_t': 9, '_te': 10, 'te ': 3, '= N': 2, 'ne\n': 2, 'e_c': 4, 'n {': 1, ' {}': 1, '{}\n': 1, '}\n\n': 1, '  t': 4, ' te': 2, 't.c': 3, 'onf': 4, 'nfi': 4, 'fig': 4, 'ig.': 2, 'g.g': 5, '.ge': 10, 'et(': 6, ""t('"": 5, ""('t"": 3, ""'te"": 1, ""te'"": 2, ""e')"": 4, ""') "": 2, ') \\': 1, ' \\\n': 2, '\\\n ': 2, '  o': 1, ' or': 1, 'r s': 1, 'f.d': 1, '.de': 6, 'te\n': 1, 'e\n ': 2, '  c': 4, 'f.g': 3, 't.r': 3, '.re': 5, 'r_t': 1, 'te(': 2, 'e(t': 1, '(te': 1, '  w': 4, 'th ': 3, 'h s': 3, 't.o': 3, '.op': 3, 'pen': 5, 'en_': 3, 'n_d': 1, 'le(': 5, 'e()': 4, '() ': 3, ') a': 3, ' as': 3, 'as ': 3, 's f': 3, ' f:': 5, 'f:\n': 5, ' f.': 2, 'f.w': 1, '.wr': 1, 'wri': 1, 'rit': 1, 'e(r': 1, '(rv': 1, 'rv.': 1, 'v.e': 1, '.en': 1, 'enc': 1, 'nco': 1, 'ode': 4, 'de(': 4, ""e('"": 3, ""('u"": 3, ""'ut"": 3, ""-8'"": 3, ""8')"": 3, ') +': 1, ' + ': 1, '+ b': 1, "" b'"": 1, ""b'\\"": 2, ""'\\n"": 3, ""\\n'"": 3, ""n')"": 1, 's R': 1, ' RS': 1, 'RST': 1, 'STP': 1, 'TPr': 1, 'm(T': 1, '(Te': 1, 'ers': 4, 'rs ': 2, ' an': 1, 'an ': 1, 'st ': 1, 't f': 1, 'int': 1, 'nto': 1, 'to ': 1, 'o a': 1, 'a t': 1, 'te""': 1, 'e""""': 1, "" 'r"": 1, ""'rs"": 2, 'st_': 1, '_di': 2, 'dis': 1, 'isp': 1, 'lay': 1, 'ay.': 1, 'y.h': 1, '  _': 1, ' _f': 1, '_fr': 8, 'fra': 8, 'rag': 8, 'agm': 8, 'gme': 8, 'nt_': 4, 't_c': 4, '_ca': 4, 'cac': 4, 'he ': 3, '  h': 2, ' he': 2, 'hea': 3, 'ead': 5, 'ade': 3, 's =': 1, '= [': 2, "" ['"": 1, ""['-"": 1, ""'--"": 1, '---': 1, ""--'"": 1, ""-']"": 1, ""']\n"": 2, 'n_s': 2, 'r l': 2, ' li': 8, 'lin': 11, 'ine': 11, 'ne ': 4, 'n f': 3, '  l': 2, '= l': 2, 'ne.': 2, 'e.r': 2, '.rs': 2, 'str': 3, 'rip': 3, 'ip(': 3, 'p()': 3, '().': 3, ').d': 3, 'dec': 3, 'eco': 3, 'e(""': 1, '(""u': 1, '""ut': 1, '-8""': 1, '8"")': 1, '"")\n': 1, 'f n': 4, ' no': 9, 'not': 9, 'ot ': 9, 't l': 2, '  b': 4, ' br': 2, 'bre': 2, 'rea': 4, 'ak\n': 2, 'k\n ': 2, 'rs.': 1, 's.a': 1, '.ap': 2, 'app': 2, 'ppe': 2, 'nd(': 2, 'd(l': 2, '(li': 2, 'ne)': 2, ' ti': 7, 'tit': 12, 'itl': 12, 'tle': 12, 'f.p': 1, 'ars': 2, 'rse': 2, 'se_': 2, 'e_t': 2, 'xt_': 2, '_ti': 2, 'e(f': 1, '(f)': 1, 'f)\n': 2, ' cf': 7, 'cfg': 9, 'fg ': 1, 'g =': 2, '= y': 1, 'ml.': 1, 'l.s': 1, '.sa': 1, 'saf': 1, 'afe': 1, 'fe_': 1, 'e_l': 1, '_lo': 1, 'loa': 1, 'oad': 1, 'ad(': 2, 'd(S': 1, '(St': 1, 'IO(': 1, ""O('"": 1, ""('\\"": 1, ""n'."": 2, ""'.j"": 2, 'n(h': 1, '(he': 1, 'rs)': 1, 's))': 1, ')))': 1, '))\n': 3, 'fg:': 1, 'g:\n': 1, 't i': 2, 'isi': 2, 'sin': 2, 'ins': 2, 'nst': 2, 'tan': 2, 'anc': 2, 'nce': 2, 'ce(': 2, 'e(c': 1, '(cf': 2, 'fg,': 1, 'g, ': 1, ', d': 2, ' di': 2, 'dic': 3, 'ict': 3, 'e V': 1, ' Va': 1, 'Val': 1, 'alu': 1, 'lue': 1, 'ueE': 1, ""('e"": 1, ""'ex"": 1, 'exp': 1, 'xpe': 1, 'pec': 1, 'cte': 1, 'ed ': 1, 'd d': 1, 'ct ': 1, 'ig ': 2, 'g i': 1, 'e ""': 1, ' ""%': 1, '""%s': 1, '%s""': 1, 's"",': 1, '"", ': 1, ', g': 1, ' go': 1, 'got': 1, 'ot:': 1, ': %': 1, ' %.': 1, '%.4': 1, '.40': 1, '40r': 1, ""0r'"": 1, ""r' "": 1, ""' \\"": 1, '  %': 1, ' % ': 1, '% (': 1, ' (s': 1, 'fg)': 2, 'g))': 1, 'g.a': 1, '.ad': 1, 'add': 1, 'dd_': 1, 'om_': 1, 'm_d': 1, 'ct(': 1, 't(c': 1, 'g)\n': 1, 't.d': 2, '= c': 4, 'fg.': 4, 't(\n': 1, '(\n ': 1, ""  '"": 1, "" 'd"": 1, ""'de"": 1, ""me'"": 1, ""e',"": 1, ""',\n"": 1, 'e_o': 11, '_ov': 14, 'err': 14, 'rri': 14, 'rid': 14, 'ide': 14, 'de ': 7, ""'ti"": 2, ""le'"": 2, 'f t': 2, 's n': 5, 't N': 5, '= t': 2, 'de\n': 3, ' pu': 6, 'pub': 10, 'ub_': 10, 'b_d': 10, '_da': 10, ""('p"": 1, ""'pu"": 1, 'e(p': 2, '(pu': 2, 'de,': 1, 'e):': 1, '= d': 1, 'de.': 3, 'e.y': 1, '.ye': 1, 'yea': 1, 'ear': 1, 'ar,': 1, 'r,\n': 1, 'e.m': 1, '.mo': 1, 'mon': 1, 'nth': 1, 'th,': 1, 'h,\n': 1, 'e.d': 1, '.da': 1, 'day': 1, 'ay)': 1, 'y)\n': 1, 't.p': 1, '.pu': 1, '= p': 1, 'sum': 5, 'umm': 5, 'mma': 5, 'mar': 5, 'ary': 5, 'ry_': 3, 'y_o': 3, ""('s"": 1, ""'su"": 1, ""ry'"": 1, ""y')"": 1, '.su': 1, 'ry ': 1, 'y =': 1, 't.t': 1, '.ti': 1, 'le\n': 1, ', f': 1, ' f)': 1, 'buf': 3, 'ffe': 3, 'fer': 3, 'r =': 1, ' []': 1, '[]\n': 1, 'r.a': 1, 'r_r': 2, '_rs': 2, 'st(': 2, ""(b'"": 1, 'n(b': 1, '(bu': 1, 'er)': 1, 'r).': 1, ""'))"": 2, ')).': 1, ').g': 1, 't_f': 3, '._f': 3, 'he\n': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'e f': 1, 'f.r': 2, 'adl': 1, 'dli': 1, 'ne(': 1, ').s': 1, '.st': 1, '():': 1, 't(f': 1, '(f.': 1, 'd()': 1, 'v\n ': 1, 's()': 2, '()[': 1, "")['"": 1, ""['f"": 1, ""'fr"": 1, ""nt'"": 1, ""t']"": 2, ']\n\n': 1, ' ct': 3, 'ctx': 3, 'tx ': 1, '= T': 1, 'am.': 1, 'm.g': 1, 'tx[': 1, ""x['"": 1, ""['r"": 1, ""st'"": 1, ""'] "": 1, '] =': 1, 'n c': 1, 'tx\n': 1}"
Armin Ronacher,re_scan.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'from': 3, 'sre_parse': 1, 'import': 3, 'pattern,': 2, 'subpattern,': 1, 'parse': 1, 'sre_compile': 2, 'compile': 1, 'as': 1, 'sre_constants': 1, 'branch,': 1, 'subpattern': 1, 'class': 3, '_scanmatch(object):': 1, 'def': 14, '__init__(self,': 3, 'match,': 1, 'rule,': 6, 'start,': 3, 'end):': 1, 'self._match': 1, '=': 26, 'match': 6, 'self._start': 2, 'start': 1, 'self._end': 1, 'end': 4, 'self._rule': 2, 'rule': 1, '__getattr__(self,': 1, 'name):': 1, 'return': 11, 'getattr(self._match,': 1, 'name)': 1, '__group_proc(self,': 1, 'method,': 1, 'group):': 1, 'if': 10, 'group': 3, '==': 1, '0:': 1, 'method()': 1, 'isinstance(group,': 1, 'basestring):': 1, 'method(self._rule': 1, '+': 5, ""'\\x00'"": 2, 'group)': 5, 'real_group': 2, '>': 1, 'self._end:': 1, 'raise': 3, ""indexerror('no"": 1, 'such': 1, ""group')"": 1, 'method(real_group)': 1, 'group(self,': 1, '*groups):': 1, 'len(groups)': 1, 'in': 6, '(0,': 1, '1):': 2, 'self.__group_proc(self._match.group,': 1, 'groups': 1, 'and': 3, 'groups[0]': 1, 'or': 3, '0)': 1, 'tuple(self.__group_proc(self._match.group,': 1, 'for': 5, 'groups)': 1, 'groupdict(self,': 1, 'default=none):': 1, 'prefix': 1, 'rv': 2, '{}': 1, 'key,': 1, 'value': 2, 'self._match.groupdict(default).iteritems():': 1, 'key.startswith(prefix):': 1, 'rv[key[len(prefix):]]': 1, 'span(self,': 1, 'group=0):': 3, 'self.__group_proc(self._match.span,': 1, 'groups(self):': 1, 'self._match.groups()[self._start:self._end]': 1, 'start(self,': 1, 'self.__group_proc(self._match.start,': 1, 'end(self,': 1, 'self.__group_proc(self._match.end,': 1, 'expand(self,': 1, 'template):': 1, ""runtimeerror('unsupported"": 1, 'on': 1, 'scan': 1, ""matches')"": 1, 'scanend(exception):': 1, 'pos):': 1, 'exception.__init__(self,': 1, 'pos)': 1, 'self.pos': 1, 'pos': 3, 'scanner(object):': 1, 'rules,': 1, 'flags=0):': 1, 'pattern': 1, 'pattern()': 1, 'pattern.flags': 1, 'flags': 1, 'pattern.groups': 3, 'len(rules)': 1, '1': 2, '_og': 1, 'pattern.opengroup': 2, 'lambda': 1, 'n:': 1, '_og(n': 1, ""'%s\\x00%s'"": 1, '%': 1, '(name,': 2, 'n)': 2, 'self.rules': 1, '[]': 2, 'subpatterns': 1, 'group,': 1, 'regex)': 1, 'enumerate(rules,': 1, 'last_group': 1, '-': 3, 'subpatterns.append(subpattern(pattern,': 1, '[': 1, '(subpattern,': 1, '(group,': 1, 'parse(regex,': 1, 'flags,': 1, 'pattern))),': 1, ']))': 1, 'self.rules.append((name,': 1, 'last_group,': 1, '1))': 1, 'self._scanner': 1, 'sre_compile(subpattern(': 1, '[(branch,': 1, '(none,': 1, 'subpatterns))])).scanner': 1, 'scan(self,': 1, 'string,': 1, 'skip=false):': 1, 'sc': 1, 'self._scanner(string)': 1, 'none': 1, 'iter(sc.search': 1, 'skip': 1, 'else': 1, 'sc.match,': 1, 'none):': 1, 'self.rules[match.lastindex': 1, '1]': 1, 'yield': 4, '_scanmatch(match,': 1, 'end)': 1, 'not': 1, 'skip:': 1, 'match.end()': 2, '0': 2, '<': 1, 'len(string):': 1, 'scanend(end)': 1, 'scan_with_holes(self,': 1, 'string):': 1, 'self.scan(string,': 1, 'skip=true):': 1, 'hole': 4, 'string[pos:match.start()]': 1, 'hole:': 2, 'none,': 2, 'string[pos:]': 1}","{'fro': 3, 'rom': 3, 'om ': 3, 'm s': 3, ' sr': 5, 'sre': 5, 're_': 5, 'e_p': 1, '_pa': 1, 'par': 3, 'ars': 3, 'rse': 3, 'se ': 5, 'e i': 3, ' im': 3, 'imp': 3, 'mpo': 3, 'por': 4, 'ort': 4, 'rt ': 5, 't P': 1, ' Pa': 2, 'Pat': 5, 'att': 20, 'tte': 18, 'ter': 20, 'ern': 18, 'rn,': 4, 'n, ': 5, ', S': 2, ' Su': 1, 'Sub': 3, 'ubP': 3, 'bPa': 3, ', p': 6, ' pa': 11, 'se\n': 1, 'e\nf': 2, '\nfr': 2, 'e_c': 4, '_co': 4, 'com': 4, 'omp': 4, 'mpi': 4, 'pil': 4, 'ile': 4, 'le ': 7, 't c': 1, ' co': 1, 'e a': 1, ' as': 1, 'as ': 1, 's s': 1, 'le\n': 4, 'con': 1, 'ons': 1, 'nst': 2, 'sta': 13, 'tan': 2, 'ant': 1, 'nts': 1, 'ts ': 1, 's i': 1, 't B': 1, ' BR': 1, 'BRA': 2, 'RAN': 2, 'ANC': 2, 'NCH': 2, 'CH,': 2, 'H, ': 2, ' SU': 1, 'SUB': 2, 'UBP': 2, 'BPA': 2, 'PAT': 2, 'ATT': 2, 'TTE': 2, 'TER': 2, 'ERN': 2, 'RN\n': 1, 'N\n\n': 1, '\n\n\n': 3, '\n\nc': 3, '\ncl': 3, 'cla': 3, 'las': 6, 'ass': 3, 'ss ': 3, 's _': 1, ' _S': 2, '_Sc': 2, 'Sca': 5, 'can': 12, 'anM': 2, 'nMa': 2, 'Mat': 2, 'atc': 25, 'tch': 25, 'ch(': 2, 'h(o': 1, '(ob': 2, 'obj': 2, 'bje': 2, 'jec': 2, 'ect': 2, 'ct)': 2, 't):': 2, '):\n': 25, ':\n\n': 3, '\n\n ': 19, '\n  ': 79, '   ': 565, '  d': 14, ' de': 15, 'def': 16, 'ef ': 14, 'f _': 5, ' __': 5, '__i': 4, '_in': 4, 'ini': 4, 'nit': 4, 'it_': 4, 't__': 4, '__(': 5, '_(s': 5, '(se': 23, 'sel': 45, 'elf': 45, 'lf,': 14, 'f, ': 14, ', m': 4, ' ma': 10, 'mat': 23, 'ch,': 4, 'h, ': 4, ', r': 4, ' ru': 8, 'rul': 16, 'ule': 16, 'le,': 6, 'e, ': 12, ', s': 8, ' st': 9, 'tar': 11, 'art': 11, 'rt,': 4, 't, ': 4, ', e': 3, ' en': 8, 'end': 16, 'nd)': 3, 'd):': 1, ':\n ': 27, '  s': 11, ' se': 20, 'lf.': 30, 'f._': 25, '._m': 9, '_ma': 9, 'ch ': 7, 'h =': 2, ' = ': 26, '= m': 3, 'ch\n': 2, 'h\n ': 2, '._s': 5, '_st': 3, 't =': 1, '= s': 8, 'rt\n': 1, 't\n ': 1, '._e': 3, '_en': 3, 'nd ': 7, 'd =': 3, '= e': 1, 'nd\n': 1, 'd\n ': 1, '._r': 3, '_ru': 3, 'e =': 3, '= r': 1, 'e\n\n': 1, '__g': 7, '_ge': 1, 'get': 2, 'eta': 2, 'tat': 2, 'ttr': 2, 'tr_': 1, 'r__': 1, ', n': 3, ' na': 2, 'nam': 5, 'ame': 5, 'me)': 2, 'e):': 6, '  r': 18, ' re': 14, 'ret': 11, 'etu': 11, 'tur': 11, 'urn': 11, 'rn ': 12, 'n g': 2, ' ge': 1, 'tr(': 1, 'r(s': 3, 'e)\n': 1, ')\n\n': 12, '_gr': 11, 'gro': 44, 'rou': 44, 'oup': 44, 'up_': 6, 'p_p': 6, '_pr': 6, 'pro': 6, 'roc': 6, 'oc(': 6, 'c(s': 6, ' me': 4, 'met': 4, 'eth': 4, 'tho': 4, 'hod': 4, 'od,': 1, 'd, ': 2, ', g': 8, ' gr': 20, 'up)': 7, 'p):': 1, '  i': 9, ' if': 10, 'if ': 10, 'f g': 4, 'up ': 6, 'p =': 4, ' ==': 1, '== ': 1, '= 0': 2, ' 0:': 1, '0:\n': 1, 'n m': 4, 'od(': 3, 'd()': 3, '()\n': 3, ')\n ': 9, 'f i': 1, ' is': 1, 'isi': 1, 'sin': 1, 'ins': 1, 'anc': 1, 'nce': 1, 'ce(': 1, 'e(g': 1, '(gr': 3, 'up,': 6, 'p, ': 5, ', b': 1, ' ba': 1, 'bas': 1, 'ase': 1, 'ses': 1, 'est': 1, 'str': 8, 'tri': 8, 'rin': 8, 'ing': 8, 'ng)': 4, 'g):': 3, 'd(s': 3, 'e +': 2, ' + ': 5, ""+ '"": 2, "" '\\"": 2, ""'\\x"": 2, '\\x0': 3, 'x00': 3, ""00'"": 2, ""0' "": 1, ""' +"": 1, '+ g': 2, 'p)\n': 6, 'rea': 3, 'eal': 3, 'al_': 3, 'l_g': 3, 't +': 1, 'up\n': 2, 'p\n ': 2, 'f r': 1, 'p >': 1, ' > ': 1, '> s': 1, 'nd:': 1, 'd:\n': 1, ' ra': 3, 'rai': 3, 'ais': 3, 'ise': 3, 'e I': 1, ' In': 1, 'Ind': 1, 'nde': 2, 'dex': 2, 'exE': 1, 'xEr': 1, 'Err': 2, 'rro': 2, 'ror': 2, 'or(': 2, ""r('"": 2, ""('n"": 1, ""'no"": 1, 'no ': 1, 'o s': 1, ' su': 4, 'suc': 1, 'uch': 1, 'h g': 1, ""up'"": 1, ""p')"": 1, ""')\n"": 2, 'd(r': 1, '(re': 2, 'up(': 1, 'p(s': 1, ', *': 1, ' *g': 1, '*gr': 1, 'ups': 10, 'ps)': 3, 's):': 2, 'f l': 1, ' le': 3, 'len': 4, 'en(': 4, 'n(g': 1, 's) ': 2, ') i': 2, ' in': 6, 'in ': 6, 'n (': 1, ' (0': 1, '(0,': 1, '0, ': 1, ', 1': 2, ' 1)': 3, '1):': 2, 'n s': 8, '.__': 6, 'ch.': 11, 'h.g': 4, '.gr': 7, 'p,\n': 1, ',\n ': 2, '  g': 1, 'ps ': 4, 's a': 1, ' an': 3, 'and': 4, 'd g': 1, 'ps[': 1, 's[0': 1, '[0]': 1, '0] ': 1, '] o': 1, ' or': 3, 'or ': 8, 'r 0': 2, ' 0)': 1, '0)\n': 1, 'n t': 1, ' tu': 1, 'tup': 1, 'upl': 1, 'ple': 1, 'le(': 2, 'e(s': 1, '  f': 5, ' fo': 5, 'for': 5, 'r g': 2, 'p i': 1, 's)\n': 2, 'upd': 2, 'pdi': 2, 'dic': 2, 'ict': 2, 'ct(': 2, 't(s': 2, ', d': 1, 'efa': 2, 'fau': 2, 'aul': 2, 'ult': 2, 'lt=': 1, 't=N': 1, '=No': 1, 'Non': 6, 'one': 6, 'ne)': 2, '  p': 8, ' pr': 1, 'pre': 3, 'ref': 3, 'efi': 3, 'fix': 3, 'ix ': 1, 'x =': 1, ""0'\n"": 1, ""'\n "": 1, ' rv': 3, 'rv ': 1, 'v =': 1, '= {': 1, ' {}': 1, '{}\n': 1, '}\n ': 1, 'r k': 1, ' ke': 2, 'key': 3, 'ey,': 1, 'y, ': 1, ', v': 1, ' va': 2, 'val': 2, 'alu': 2, 'lue': 2, 'ue ': 1, 't(d': 1, '(de': 1, 'lt)': 1, 't).': 1, ').i': 1, '.it': 1, 'ite': 3, 'eri': 1, 'rit': 1, 'tem': 2, 'ems': 1, 'ms(': 1, 's()': 2, '():': 1, 'f k': 1, 'ey.': 1, 'y.s': 1, '.st': 3, 'rts': 1, 'tsw': 1, 'swi': 1, 'wit': 2, 'ith': 2, 'th(': 1, 'h(p': 1, '(pr': 2, 'ix)': 2, 'x):': 2, 'rv[': 1, 'v[k': 1, '[ke': 1, 'ey[': 1, 'y[l': 1, '[le': 1, 'n(p': 2, '):]': 1, ':]]': 1, ']] ': 1, '] =': 1, '= v': 1, 'ue\n': 1, 'e\n ': 3, 'n r': 1, 'rv\n': 1, 'v\n\n': 1, 'f s': 5, ' sp': 1, 'spa': 2, 'pan': 3, 'an(': 3, 'n(s': 4, 'up=': 3, 'p=0': 3, '=0)': 4, '0):': 4, 'h.s': 3, '.sp': 1, 'an,': 1, 'ps(': 2, 's(s': 2, 'lf)': 1, 'f):': 1, '()[': 1, ')[s': 1, '[se': 1, 'rt:': 1, 't:s': 1, ':se': 1, 'nd]': 1, 'd]\n': 1, ']\n\n': 1, 'rt(': 2, 'f e': 3, 'nd(': 8, 'h.e': 3, '.en': 3, 'nd,': 1, ' ex': 1, 'exp': 1, 'xpa': 1, ', t': 1, ' te': 1, 'emp': 1, 'mpl': 1, 'pla': 1, 'lat': 1, 'ate': 2, 'te)': 1, 'e R': 1, ' Ru': 1, 'Run': 1, 'unt': 1, 'nti': 1, 'tim': 1, 'ime': 1, 'meE': 1, 'eEr': 1, ""('U"": 1, ""'Un"": 1, 'Uns': 1, 'nsu': 1, 'sup': 1, 'upp': 1, 'ppo': 1, 'rte': 1, 'ted': 1, 'ed ': 1, 'd o': 1, ' on': 1, 'on ': 1, ' sc': 5, 'sca': 7, 'an ': 1, 'che': 1, 'hes': 1, ""es'"": 1, ""s')"": 1, 's S': 2, ' Sc': 3, 'anE': 2, 'nEn': 2, 'End': 2, 'd(E': 1, '(Ex': 1, 'Exc': 2, 'xce': 2, 'cep': 2, 'ept': 2, 'pti': 2, 'tio': 2, 'ion': 2, 'on)': 1, 'n):': 1, ' po': 5, 'pos': 8, 'os)': 2, '  E': 1, ' Ex': 1, 'on.': 1, 'n._': 1, 'f.p': 1, '.po': 1, 'os ': 3, 's =': 7, '= p': 3, 'os\n': 1, 's\n\n': 1, 'ann': 4, 'nne': 4, 'ner': 4, 'er(': 3, 'r(o': 1, 'les': 7, 'es,': 2, 's, ': 3, ', f': 2, ' fl': 3, 'fla': 4, 'lag': 4, 'ags': 4, 'gs=': 1, 's=0': 1, 'pat': 13, 'n =': 1, '= P': 1, 'rn(': 3, 'n()': 1, 'rn.': 6, 'n.f': 1, '.fl': 1, 'gs ': 1, '= f': 1, 'gs\n': 1, 's\n ': 1, 'n.g': 3, '= l': 2, 'n(r': 1, '(ru': 2, 'es)': 1, ') +': 1, '+ 1': 1, ' 1\n': 2, '1\n\n': 1, '  _': 1, ' _o': 2, '_og': 2, 'og ': 1, 'g =': 1, 'n.o': 2, '.op': 2, 'ope': 2, 'pen': 4, 'eng': 2, 'ngr': 2, ' la': 3, 'lam': 1, 'amb': 1, 'mbd': 1, 'bda': 1, 'da ': 1, 'a n': 1, ' n:': 1, 'n: ': 1, ': _': 1, 'og(': 1, 'g(n': 1, '(n ': 1, 'n a': 1, ""d '"": 1, "" '%"": 1, ""'%s"": 1, '%s\\': 1, 's\\x': 1, '00%': 1, '0%s': 1, ""%s'"": 1, ""s' "": 1, ""' %"": 1, ' % ': 1, '% (': 1, ' (n': 2, '(na': 3, 'me,': 3, ' n)': 2, 'n) ': 1, ') o': 2, 'r n': 1, 'n)\n': 1, 'f.r': 3, '.ru': 3, 'es ': 1, '= [': 2, ' []': 2, '[]\n': 2, ']\n ': 5, 'sub': 3, 'ubp': 3, 'bpa': 3, 'rns': 3, 'ns ': 1, ', (': 3, 'reg': 2, 'ege': 2, 'gex': 2, 'ex)': 1, 'x) ': 1, 'n e': 1, 'enu': 1, 'num': 1, 'ume': 1, 'mer': 1, 'era': 1, 'rat': 1, 'te(': 1, 'e(r': 2, '  l': 1, 'ast': 3, 'st_': 2, 't_g': 2, 's -': 2, ' - ': 3, '- 1': 3, '1\n ': 1, 'ns.': 1, 's.a': 2, '.ap': 2, 'app': 2, 'ppe': 2, 'd(S': 1, '(Su': 2, '(pa': 1, ', [': 2, ' [\n': 1, '[\n ': 1, '  (': 1, ' (S': 1, '(SU': 1, 'RN,': 1, 'N, ': 1, ' (g': 1, 'se(': 1, 'ex,': 1, 'x, ': 1, 'gs,': 1, 'rn)': 1, 'n))': 1, ')))': 1, ')),': 1, '),\n': 1, '  ]': 1, ' ])': 1, ']))': 2, '))\n': 2, 'es.': 1, 'd((': 1, '((n': 1, ', l': 1, '1))': 1, '_sc': 2, 'er ': 1, 'r =': 1, 'e(S': 1, 'n(\n': 1, '(\n ': 1, ' [(': 1, '[(B': 1, '(BR': 1, ' (N': 1, '(No': 1, 'ne,': 3, 'ns)': 1, 's))': 1, '))]': 1, ')])': 1, ')).': 1, ').s': 1, '.sc': 2, 'er\n': 1, 'r\n\n': 1, 'ng,': 2, 'g, ': 2, ' sk': 4, 'ski': 4, 'kip': 4, 'ip=': 2, 'p=F': 1, '=Fa': 1, 'Fal': 1, 'als': 1, 'lse': 2, 'se)': 1, 'sc ': 1, 'c =': 1, '(st': 3, 'g)\n': 1, '  m': 1, '= N': 1, ' No': 4, 'ne\n': 1, 'r m': 1, 'h i': 3, 'n i': 1, ' it': 1, '(sc': 1, 'sc.': 2, 'c.s': 1, '.se': 1, 'sea': 1, 'ear': 1, 'arc': 1, 'rch': 1, 'ip ': 1, 'p e': 1, ' el': 1, 'els': 1, 'e s': 1, 'c.m': 1, '.ma': 1, ', N': 1, 'es[': 1, 's[m': 1, '[ma': 1, 'h.l': 1, '.la': 1, 'sti': 1, 'tin': 1, 'ind': 1, 'ex ': 1, 'x -': 1, ' 1]': 1, '1]\n': 1, '  y': 4, ' yi': 4, 'yie': 4, 'iel': 4, 'eld': 4, 'ld ': 4, 'd r': 2, ', _': 1, 'h(m': 1, '(ma': 1, 'd)\n': 2, 'f n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't s': 1, 'ip:': 1, 'p:\n': 1, '  e': 1, 'h a': 1, 'd m': 1, '() ': 1, ' 0\n': 2, '0\n ': 2, 'd <': 1, ' < ': 1, '< l': 1, 'e S': 1, 'd(e': 1, '(en': 1, 'an_': 1, 'n_w': 1, '_wi': 1, 'th_': 1, 'h_h': 1, '_ho': 1, 'hol': 7, 'ole': 7, 'es(': 1, 'r r': 1, 'f.s': 1, 'p=T': 1, '=Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, '  h': 2, ' ho': 6, 'ng[': 2, 'g[p': 2, '[po': 2, 'os:': 2, 's:m': 1, ':ma': 1, 't()': 1, '()]': 1, ')]\n': 1, 'f h': 2, 'le:': 2, 'e:\n': 2, 'd N': 2, ', h': 2, 's:]': 1, ':]\n': 1}"
Armin Ronacher,rust_setup_tools.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 12, '-*-': 2, 'coding:': 1, 'utf-8': 1, 'import': 6, 'os': 1, 'sys': 1, 'shutil': 1, 'subprocess': 1, 'from': 3, 'distutils.cmd': 1, 'command': 1, 'distutils.command.install_lib': 1, 'install_lib': 2, 'if': 12, 'sys.platform': 3, '==': 3, ""'win32':"": 2, 'dynamic_lib_suffix': 3, '=': 26, ""'.dll'"": 1, 'elif': 1, ""'darwin':"": 1, ""'.dylib'"": 1, 'else:': 4, ""'.so'"": 1, 'class': 3, 'rustbuildcommand(command):': 1, 'description': 1, ""'build"": 1, 'rust': 2, 'crates': 1, 'into': 2, 'python': 2, ""extensions'"": 1, 'user_options': 1, '[]': 1, 'def': 7, 'initialize_options(self):': 1, 'for': 4, 'k,': 2, 'v': 1, 'in': 3, 'self.__class__.rust_build_args.iteritems():': 1, 'setattr(self,': 1, 'v)': 1, 'finalize_options(self):': 1, 'pass': 2, 'run(self):': 1, 'self.debug:': 2, 'debug_or_release': 2, ""'--debug'"": 1, ""'--release'"": 1, 'make': 1, 'sure': 1, 'that': 2, 'pythonxx-sys': 2, 'is': 2, 'used,': 1, 'it': 5, 'builds': 1, 'against': 1, 'the': 7, 'current': 1, 'executing': 1, 'interpreter.': 1, 'bindir': 2, 'os.path.dirname(sys.executable)': 1, 'path_sep': 3, ""';'"": 1, ""':'"": 1, 'env': 1, 'dict(os.environ)': 1, 'env.update({': 1, 'disables': 1, ""rust's"": 1, 'pkg-config': 1, 'seeking': 1, 'specified': 1, 'packages,': 1, 'which': 1, 'causes': 1, 'to': 5, 'fall': 1, 'back': 1, 'detecting': 1, 'interpreter': 1, 'path.': 1, ""'python_2.7_no_pkg_config':"": 1, ""'1',"": 1, ""'path':"": 1, '+': 3, ""env.get('path',"": 1, ""'')"": 1, '})': 1, 'crate_path,': 1, 'dest': 1, 'self.cargo_crates:': 1, 'execute': 2, 'cargo.': 1, 'try:': 2, 'toml': 1, 'os.path.join(crate_path,': 2, ""'cargo.toml')"": 1, 'args': 1, ""(['cargo',"": 1, ""'build',"": 1, ""'--manifest-path',"": 1, 'toml,': 1, 'debug_or_release]': 1, 'list(self.extra_cargo_args': 1, 'or': 1, '[]))': 1, 'not': 3, 'self.quiet:': 2, 'print': 2, '>>': 2, 'sys.stderr,': 2, ""'"": 2, ""'.join(args)"": 1, 'output': 2, 'subprocess.check_output(args,': 1, 'env=env)': 1, 'except': 3, 'subprocess.calledprocesserror': 1, 'as': 2, 'e:': 1, 'msg': 1, ""'cargo"": 1, 'failed': 1, 'with': 1, 'code:': 1, ""%d\\n%s'"": 1, '%': 1, '(e.returncode,': 1, 'e.output)': 1, 'raise': 2, 'exception(msg)': 1, 'oserror:': 2, ""exception('unable"": 1, 'cargo': 3, '-': 1, 'this': 1, 'package': 1, ""'requires"": 1, 'be': 2, 'installed': 1, 'and': 2, 'on': 1, ""path')"": 1, 'find': 1, 'shared': 2, 'library': 2, 'hopefully': 1, 'produced': 2, 'copy': 2, 'build': 1, 'directory': 1, 'were': 1, 'by': 1, 'build_cext.': 1, 'suffix': 2, ""'debug'"": 1, ""'release'"": 1, 'dylib_path': 1, ""'target/',"": 1, 'suffix)': 1, 'ask': 1, 'build_ext': 2, 'where': 1, 'would': 1, 'go': 1, 'had': 1, 'built': 1, 'it,': 1, 'then': 1, 'there.': 1, ""self.get_finalized_command('build_ext')"": 1, 'target': 2, ""os.path.dirname(build_ext.get_ext_fullpath('x'))"": 1, 'os.makedirs(target)': 1, 'os.path.join(target,': 2, 'dest)': 1, 'filename': 1, 'os.listdir(dylib_path):': 1, 'filename.endswith(dynamic_lib_suffix):': 1, 'shutil.copy(os.path.join(dylib_path,': 1, 'filename),': 1, 'filename))': 1, 'build_rust_cmdclass(crates,': 1, 'debug=false,': 1, 'extra_cargo_args=none,': 1, 'quiet=false):': 1, '_rustbuildcommand(rustbuildcommand):': 1, 'rust_build_args': 1, '{': 1, ""'cargo_crates':"": 1, 'crates,': 1, ""'debug':"": 1, 'debug,': 1, ""'extra_cargo_args':"": 1, 'extra_cargo_args,': 1, ""'quiet':"": 1, 'quiet,': 1, '}': 1, 'return': 2, '_rustbuildcommand': 1, 'build_install_lib_cmdclass(base=none):': 1, 'base': 2, 'none:': 1, '_rustinstalllibcommand(base):': 1, 'build(self):': 1, 'base.build(self)': 1, 'self.skip_build:': 1, ""self.run_command('build_rust')"": 1, '_rustinstalllibcommand': 1, 'rust_crates(dist,': 1, 'attr,': 1, 'value):': 1, 'dist.is_pure': 1, 'lambda:': 1, 'false': 1, ""dist.cmdclass['build_rust']"": 1, 'build_rust_cmdclass(value)': 1, ""dist.cmdclass['install_lib']"": 1, 'build_install_lib_cmdclass(': 1, ""dist.cmdclass.get('install_lib'))"": 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 4, 'cod': 3, 'odi': 1, 'din': 1, 'ing': 4, 'ng:': 1, 'g: ': 1, ': u': 1, ' ut': 1, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\ni': 1, '\nim': 4, 'imp': 6, 'mpo': 6, 'por': 6, 'ort': 6, 'rt ': 6, 't o': 1, ' os': 9, 'os\n': 1, 's\ni': 2, 't s': 7, ' sy': 6, 'sys': 9, 'ys\n': 1, ' sh': 4, 'shu': 2, 'hut': 2, 'uti': 5, 'til': 4, 'il\n': 1, 'l\ni': 1, ' su': 7, 'sub': 3, 'ubp': 3, 'bpr': 3, 'pro': 5, 'roc': 4, 'oce': 4, 'ces': 4, 'ess': 4, 'ss\n': 3, 's\n\n': 3, '\n\nf': 1, '\nfr': 2, 'fro': 3, 'rom': 3, 'om ': 3, 'm d': 2, ' di': 9, 'dis': 8, 'ist': 9, 'stu': 2, 'tut': 2, 'ils': 2, 'ls.': 2, 's.c': 3, '.cm': 4, 'cmd': 8, 'md ': 1, 'd i': 1, ' im': 2, 't C': 1, ' Co': 1, 'Com': 8, 'omm': 11, 'mma': 11, 'man': 12, 'and': 13, 'nd\n': 3, 'd\nf': 1, '.co': 2, 'com': 3, 'nd.': 1, 'd.i': 1, '.in': 1, 'ins': 9, 'nst': 11, 'sta': 10, 'tal': 10, 'all': 12, 'll_': 7, 'l_l': 7, '_li': 7, 'lib': 13, 'ib ': 1, 'b i': 1, 't i': 5, ' in': 11, 'ib\n': 2, 'b\n\n': 1, '\n\n\n': 5, '\n\ni': 1, '\nif': 1, 'if ': 13, 'f s': 5, 'ys.': 6, 's.p': 10, '.pl': 3, 'pla': 3, 'lat': 3, 'atf': 3, 'tfo': 3, 'for': 7, 'orm': 3, 'rm ': 3, 'm =': 3, ' ==': 3, '== ': 3, ""= '"": 14, "" 'w"": 2, ""'wi"": 2, 'win': 3, 'in3': 2, 'n32': 2, ""32'"": 2, ""2':"": 2, ""':\n"": 3, ':\n ': 32, '\n  ': 89, '   ': 810, '  D': 3, ' DY': 3, 'DYN': 4, 'YNA': 4, 'NAM': 4, 'AMI': 4, 'MIC': 4, 'IC_': 4, 'C_L': 4, '_LI': 4, 'LIB': 4, 'IB_': 4, 'B_S': 4, '_SU': 4, 'SUF': 4, 'UFF': 4, 'FFI': 4, 'FIX': 4, 'IX ': 3, 'X =': 3, ' = ': 26, "" '."": 4, ""'.d"": 2, '.dl': 1, 'dll': 1, ""ll'"": 1, ""l'\n"": 1, ""'\ne"": 2, '\nel': 2, 'eli': 1, 'lif': 1, "" 'd"": 3, ""'da"": 1, 'dar': 1, 'arw': 1, 'rwi': 1, ""in'"": 1, ""n':"": 1, '.dy': 1, 'dyl': 4, 'yli': 4, ""ib'"": 3, ""b'\n"": 1, 'els': 4, 'lse': 7, 'se:': 4, 'e:\n': 6, ""'.s"": 1, '.so': 1, ""so'"": 1, ""o'\n"": 1, ""'\n\n"": 5, '\n\nc': 1, '\ncl': 1, 'cla': 11, 'las': 11, 'ass': 13, 'ss ': 3, 's R': 1, ' Ru': 1, 'Rus': 6, 'ust': 16, 'stB': 4, 'tBu': 4, 'Bui': 4, 'uil': 25, 'ild': 24, 'ldC': 4, 'dCo': 4, 'nd(': 5, 'd(C': 1, '(Co': 1, 'nd)': 2, 'd):': 2, '):\n': 13, '  d': 13, ' de': 13, 'des': 3, 'esc': 1, 'scr': 1, 'cri': 1, 'rip': 1, 'ipt': 1, 'pti': 6, 'tio': 6, 'ion': 7, 'on ': 4, 'n =': 1, "" 'b"": 2, ""'bu"": 5, 'bui': 21, 'ld ': 3, 'd r': 1, ' ru': 6, 'rus': 10, 'st ': 4, 't c': 2, ' cr': 3, 'cra': 9, 'rat': 9, 'ate': 10, 'tes': 6, 'es ': 4, 's i': 3, 'int': 6, 'nto': 2, 'to ': 7, 'o P': 1, ' Py': 1, 'Pyt': 1, 'yth': 4, 'tho': 4, 'hon': 4, 'n e': 1, ' ex': 8, 'ext': 11, 'xte': 1, 'ten': 1, 'ens': 1, 'nsi': 1, 'sio': 1, 'ons': 4, ""ns'"": 1, ""s'\n"": 1, '\n\n ': 15, '  u': 1, ' us': 2, 'use': 3, 'ser': 1, 'er_': 1, 'r_o': 1, '_op': 3, 'opt': 3, 'ns ': 1, 's =': 3, '= [': 1, ' []': 2, '[]\n': 1, ']\n\n': 1, 'def': 7, 'ef ': 7, 'f i': 3, 'ini': 1, 'nit': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'ali': 3, 'liz': 3, 'ize': 3, 'ze_': 2, 'e_o': 2, 'ns(': 2, 's(s': 2, '(se': 7, 'sel': 16, 'elf': 16, 'lf)': 5, 'f):': 4, '  f': 3, ' fo': 4, 'or ': 6, 'r k': 1, ' k,': 2, 'k, ': 2, ', v': 3, ' v ': 1, 'v i': 1, 'in ': 3, 'n s': 2, ' se': 11, 'lf.': 10, 'f._': 1, '.__': 1, '__c': 1, '_cl': 1, 'ss_': 1, 's__': 1, '__.': 1, '_.r': 1, '.ru': 2, 'st_': 5, 't_b': 2, '_bu': 3, 'ld_': 13, 'd_a': 2, '_ar': 6, 'arg': 28, 'rgs': 9, 'gs.': 1, 's.i': 1, '.it': 1, 'ite': 2, 'ter': 5, 'eri': 1, 'rit': 1, 'tem': 1, 'ems': 1, 'ms(': 1, 's()': 1, '():': 1, '  s': 5, 'set': 1, 'eta': 1, 'tat': 1, 'att': 2, 'ttr': 2, 'tr(': 1, 'r(s': 1, 'lf,': 1, 'f, ': 1, ', k': 1, ' v)': 1, 'v)\n': 2, ')\n\n': 7, 'f f': 2, ' fi': 5, 'fin': 2, 'ina': 2, 'nal': 2, '  p': 6, ' pa': 8, 'pas': 2, 'f r': 2, 'run': 2, 'un(': 1, 'n(s': 1, '  i': 8, ' if': 11, 'f.d': 2, '.de': 2, 'deb': 10, 'ebu': 10, 'bug': 10, 'ug:': 2, 'g:\n': 2, 'ug_': 3, 'g_o': 3, '_or': 3, 'or_': 3, 'r_r': 3, '_re': 3, 'rel': 5, 'ele': 5, 'lea': 5, 'eas': 5, 'ase': 10, 'se ': 6, 'e =': 4, "" '-"": 3, ""'--"": 3, '--d': 1, '-de': 1, ""ug'"": 3, ""g'\n"": 2, ""'\n "": 4, '  e': 9, ' el': 3, '--r': 1, '-re': 1, ""se'"": 2, ""e'\n"": 2, '  #': 11, ' # ': 11, '# M': 1, ' Ma': 1, 'Mak': 1, 'ake': 2, 'ke ': 1, 'e s': 3, 'sur': 1, 'ure': 2, 're ': 4, 'e t': 3, ' th': 12, 'tha': 2, 'hat': 2, 'at ': 2, 'f p': 1, ' py': 3, 'pyt': 3, 'onX': 2, 'nXX': 2, 'XX-': 2, 'X-s': 2, '-sy': 2, 'ys ': 2, ' is': 2, 'is ': 3, 's u': 1, 'sed': 1, 'ed,': 1, 'd, ': 1, ', i': 1, ' it': 6, 'it ': 5, 't b': 1, ' bu': 11, 'lds': 1, 'ds ': 1, 's a': 1, ' ag': 1, 'aga': 1, 'gai': 1, 'ain': 1, 't t': 3, 'the': 9, 'he\n': 2, 'e\n ': 3, '# c': 1, ' cu': 1, 'cur': 1, 'urr': 1, 'rre': 1, 'ren': 1, 'ent': 1, 'nt ': 3, 't e': 1, 'exe': 3, 'xec': 4, 'ecu': 4, 'cut': 4, 'tin': 2, 'ng ': 3, 'g p': 1, 'n i': 1, 'nte': 2, 'erp': 2, 'rpr': 2, 'pre': 2, 'ret': 5, 'ete': 3, 'er.': 1, 'r.\n': 1, '.\n ': 5, '  b': 5, ' bi': 2, 'bin': 2, 'ind': 3, 'ndi': 2, 'dir': 7, 'ir ': 2, 'r =': 1, '= o': 5, 'os.': 10, '.pa': 7, 'pat': 19, 'ath': 19, 'th.': 8, 'h.d': 2, '.di': 2, 'irn': 2, 'rna': 2, 'nam': 6, 'ame': 6, 'me(': 2, 'e(s': 1, '(sy': 1, 's.e': 2, '.ex': 2, 'uta': 1, 'tab': 1, 'abl': 3, 'ble': 3, 'le)': 1, 'e)\n': 2, ')\n ': 14, 'th_': 3, 'h_s': 3, '_se': 3, 'sep': 3, 'ep ': 3, 'p =': 2, "" ';"": 1, ""';'"": 1, "";'\n"": 1, "" ':"": 1, ""':'"": 1, "":'\n"": 1, ' en': 4, 'env': 6, 'nv ': 1, 'v =': 1, '= d': 1, 'dic': 1, 'ict': 1, 'ct(': 1, 't(o': 1, '(os': 2, '.en': 2, 'nvi': 1, 'vir': 1, 'iro': 1, 'ron': 1, 'on)': 1, 'n)\n': 1, 'nv.': 2, 'v.u': 1, '.up': 1, 'upd': 1, 'pda': 1, 'dat': 1, 'te(': 1, 'e({': 1, '({\n': 1, '{\n ': 2, '# d': 1, 'isa': 1, 'sab': 1, 'les': 1, 's r': 2, ""st'"": 3, ""t's"": 1, ""'s "": 1, 's p': 3, ' pk': 1, 'pkg': 1, 'kg-': 1, 'g-c': 1, '-co': 1, 'con': 1, 'onf': 1, 'nfi': 1, 'fig': 1, 'ig ': 1, 'g s': 1, 'see': 1, 'eek': 1, 'eki': 1, 'kin': 1, 'g f': 1, 'r s': 1, ' sp': 1, 'spe': 1, 'pec': 1, 'eci': 1, 'cif': 1, 'ifi': 1, 'fie': 1, 'ied': 1, 'ed ': 7, 'd p': 1, 'pac': 2, 'ack': 3, 'cka': 2, 'kag': 2, 'age': 2, 'ges': 1, 'es,': 3, 's,\n': 3, ',\n ': 10, '# w': 1, ' wh': 2, 'whi': 1, 'hic': 1, 'ich': 1, 'ch ': 1, 'h c': 2, ' ca': 5, 'cau': 1, 'aus': 1, 'ses': 1, 's t': 1, ' to': 7, 'o f': 2, ' fa': 2, 'fal': 1, 'll ': 1, 'l b': 1, ' ba': 4, 'bac': 1, 'ck ': 1, 'k t': 1, 'o d': 1, 'det': 1, 'tec': 1, 'ect': 2, 'cti': 1, 'g t': 1, '# i': 2, 'er ': 1, 'r f': 2, ' fr': 1, 'm t': 1, 'he ': 5, 'e p': 2, 'h.\n': 1, ""  '"": 7, "" 'P"": 2, ""'PY"": 1, 'PYT': 1, 'YTH': 1, 'THO': 1, 'HON': 1, 'ON_': 1, 'N_2': 1, '_2.': 1, '2.7': 1, '.7_': 1, '7_N': 1, '_NO': 1, 'NO_': 1, 'O_P': 1, '_PK': 1, 'PKG': 1, 'KG_': 1, 'G_C': 1, '_CO': 1, 'CON': 1, 'ONF': 1, 'NFI': 1, 'FIG': 1, ""IG'"": 1, ""G':"": 1, ""': "": 6, "": '"": 1, "" '1"": 1, ""'1'"": 1, ""1',"": 1, ""',\n"": 1, ""'PA"": 2, 'PAT': 3, 'ATH': 3, ""TH'"": 3, ""H':"": 1, ':  ': 1, 'r +': 1, ' + ': 3, '+ p': 1, 'p +': 1, '+ e': 1, 'v.g': 1, '.ge': 4, 'get': 10, 'et(': 2, ""t('"": 2, ""('P"": 1, ""H',"": 1, ""', "": 5, "", '"": 6, "" ''"": 1, ""'')"": 1, ""')\n"": 5, '  }': 2, ' })': 1, '})\n': 1, 'r c': 1, 'te_': 3, 'e_p': 3, '_pa': 6, 'th,': 4, 'h, ': 4, ', d': 3, 'est': 3, 'f.c': 1, '.ca': 1, 'car': 12, 'rgo': 13, 'go_': 6, 'o_c': 2, '_cr': 3, 'es:': 1, 's:\n': 1, '# E': 1, ' Ex': 3, 'Exe': 1, 'ute': 2, 'te ': 2, 'e c': 2, 'go.': 2, 'o.\n': 1, '  t': 5, ' tr': 2, 'try': 2, 'ry:': 2, 'y:\n': 2, 'tom': 3, 'oml': 3, 'ml ': 1, 'l =': 1, 'h.j': 5, '.jo': 6, 'joi': 6, 'oin': 6, 'in(': 6, 'n(c': 2, '(cr': 3, "" 'C"": 1, ""'Ca"": 1, 'Car': 1, 'o.t': 1, '.to': 1, ""ml'"": 1, ""l')"": 1, '  a': 1, ' ar': 1, 'gs ': 3, '= (': 1, ' ([': 1, ""(['"": 1, ""['c"": 1, ""'ca"": 3, ""go'"": 1, ""o',"": 1, ""ld'"": 1, ""d',"": 1, '--m': 1, '-ma': 1, 'ani': 1, 'nif': 1, 'ife': 1, 'fes': 1, 'st-': 1, 't-p': 1, '-pa': 1, ""th'"": 1, ""h',"": 1, ', t': 1, 'ml,': 1, 'l,\n': 1, 'se]': 1, 'e] ': 1, '] +': 1, '+ l': 1, ' li': 3, 'lis': 2, 'st(': 1, 't(s': 1, 'f.e': 1, 'xtr': 4, 'tra': 4, 'ra_': 4, 'a_c': 4, '_ca': 4, 'o_a': 4, 's o': 1, ' or': 1, 'r [': 1, '[])': 1, ']))': 1, '))\n': 4, 'f n': 3, ' no': 3, 'not': 3, 'ot ': 3, 'f.q': 2, '.qu': 2, 'qui': 6, 'uie': 5, 'iet': 5, 'et:': 2, 't:\n': 2, ' pr': 4, 'pri': 2, 'rin': 2, 't >': 2, ' >>': 2, '>> ': 2, '> s': 2, 's.s': 2, '.st': 2, 'std': 3, 'tde': 2, 'der': 2, 'err': 2, 'rr,': 2, 'r, ': 3, "" ' "": 1, ""' '"": 1, ""'.j"": 1, 'n(a': 1, '(ar': 2, 'gs)': 1, 's)\n': 1, '  o': 3, ' ou': 2, 'out': 4, 'utp': 4, 'tpu': 4, 'put': 4, 'ut ': 1, 't =': 4, '= s': 2, 'ss.': 3, '.ch': 1, 'che': 1, 'hec': 1, 'eck': 1, 'ck_': 1, 'k_o': 1, '_ou': 1, 'ut(': 1, 't(a': 1, 'gs,': 2, 's, ': 2, ', e': 2, 'nv=': 1, 'v=e': 1, '=en': 1, 'nv)': 1, 'exc': 3, 'xce': 5, 'cep': 5, 'ept': 5, 'pt ': 3, 's.C': 1, '.Ca': 1, 'Cal': 1, 'lle': 2, 'led': 3, 'edP': 1, 'dPr': 1, 'Pro': 1, 'ssE': 1, 'sEr': 1, 'Err': 3, 'rro': 3, 'ror': 3, 'r a': 1, ' as': 2, 'as ': 2, 's e': 1, ' e:': 1, '  m': 1, ' ms': 1, 'msg': 2, 'sg ': 1, 'g =': 1, "" 'c"": 2, 'go ': 5, 'fai': 1, 'ail': 1, 'ile': 5, 'd w': 1, ' wi': 1, 'wit': 2, 'ith': 2, 'th ': 2, 'ode': 2, 'de:': 1, 'e: ': 1, ': %': 1, ' %d': 1, '%d\\': 1, 'd\\n': 1, '\\n%': 1, 'n%s': 1, ""%s'"": 1, ""s' "": 1, ""' %"": 1, ' % ': 1, '% (': 1, ' (e': 1, '(e.': 1, 'e.r': 1, '.re': 1, 'etu': 3, 'tur': 3, 'urn': 3, 'rnc': 1, 'nco': 1, 'de,': 1, 'e, ': 2, ' e.': 1, 'e.o': 1, '.ou': 1, 'ut)': 1, 't)\n': 3, '  r': 5, ' ra': 2, 'rai': 2, 'ais': 2, 'ise': 2, 'e E': 2, 'Exc': 2, 'on(': 2, 'n(m': 1, '(ms': 1, 'sg)': 1, 'g)\n': 1, 't O': 2, ' OS': 2, 'OSE': 2, 'SEr': 2, 'or:': 2, 'r:\n': 2, ""n('"": 1, ""('U"": 1, ""'Un"": 1, 'Una': 1, 'nab': 1, 'le ': 1, 'o e': 1, 'o -': 1, ' - ': 1, '- t': 1, 'thi': 1, 'his': 1, 'ge ': 1, ""e '"": 1, "" '\n"": 1, "" 'r"": 2, ""'re"": 2, 'req': 1, 'equ': 1, 'uir': 1, 'ire': 2, 'res': 1, 'o b': 2, ' be': 2, 'be ': 2, 'e i': 3, 'd a': 2, ' an': 2, 'nd ': 3, 'd c': 2, 'o t': 2, 'e o': 1, ' on': 1, 'n t': 1, 'e P': 1, ' PA': 1, ""H')"": 1, ', o': 1, 'ut\n': 1, 't\n\n': 1, '# F': 1, ' Fi': 1, 'Fin': 1, 'd t': 1, 'sha': 2, 'har': 2, 'are': 2, 'red': 2, 'd l': 2, 'ibr': 2, 'bra': 2, 'rar': 2, 'ary': 2, 'ry ': 3, 'y t': 1, 'o h': 1, ' ho': 1, 'hop': 1, 'ope': 1, 'pef': 1, 'efu': 1, 'ful': 2, 'ull': 2, 'lly': 1, 'ly ': 1, 'y p': 1, 'rod': 2, 'odu': 2, 'duc': 2, 'uce': 2, 'ced': 2, 'cop': 3, 'opy': 3, 'py\n': 1, 'y\n ': 2, 'e b': 1, 'd d': 1, 'rec': 1, 'cto': 1, 'tor': 1, 'ory': 1, 'y a': 1, 't w': 2, ' we': 1, 'wer': 1, 'ere': 3, 'd b': 2, ' by': 1, 'by\n': 1, '# b': 1, 'd_c': 2, '_ce': 1, 'cex': 1, 'xt.': 2, 't.\n': 1, 'suf': 3, 'uff': 3, 'ffi': 3, 'fix': 3, 'ix ': 2, 'x =': 2, ""'de"": 2, ' dy': 1, 'ib_': 5, 'b_p': 3, 'h =': 1, "" 't"": 1, ""'ta"": 1, 'tar': 6, 'rge': 6, 'et/': 1, ""t/'"": 1, ""/',"": 1, ', s': 1, 'ix)': 1, 'x)\n': 1, '# A': 1, ' As': 1, 'Ask': 1, 'sk ': 1, 'k b': 1, 'd_e': 4, '_ex': 5, 'xt ': 2, 'whe': 1, 'her': 2, 'y w': 1, ' wo': 1, 'wou': 1, 'oul': 1, 'uld': 1, 'd g': 1, ' go': 1, 'o i': 1, 't h': 1, ' ha': 1, 'had': 1, 'ad ': 1, 'ilt': 1, 'lt ': 1, 'it,': 1, 't,\n': 2, '# t': 1, 'hen': 1, 'en ': 1, 'n c': 1, 'py ': 1, 'y i': 1, 're.': 1, 'e.\n': 1, 'f.g': 1, 'et_': 2, 't_f': 2, '_fi': 1, 'zed': 1, 'ed_': 1, '_co': 2, ""d('"": 2, ""('b"": 2, ""xt'"": 1, ""t')"": 2, ' ta': 2, 'et ': 2, 'e(b': 1, '(bu': 1, 't.g': 1, 't_e': 1, 'xt_': 1, '_fu': 1, 'llp': 1, 'lpa': 1, 'th(': 2, ""h('"": 1, ""('x"": 1, ""'x'"": 1, ""x')"": 1, ""'))"": 2, 's.m': 1, '.ma': 1, 'mak': 1, 'ked': 1, 'edi': 1, 'irs': 1, 'rs(': 1, 's(t': 1, '(ta': 3, 'et)': 1, 'n(t': 2, 'et,': 3, 't, ': 3, 'st)': 1, 'fil': 4, 'len': 4, 'ena': 4, 'me ': 1, 'n o': 1, 's.l': 1, '.li': 1, 'tdi': 1, 'ir(': 1, 'r(d': 1, '(dy': 2, 'th)': 1, 'h):': 1, 'me.': 1, 'e.e': 1, 'end': 1, 'nds': 1, 'dsw': 1, 'swi': 1, 'h(D': 1, '(DY': 1, 'IX)': 1, 'X):': 1, 'il.': 1, 'l.c': 1, 'py(': 1, 'y(o': 1, 'n(d': 1, ', f': 2, 'me)': 2, 'e),': 1, '),\n': 1, 'e))': 1, '\n\nd': 3, '\nde': 3, 'f b': 4, 'd_r': 4, '_ru': 4, 't_c': 3, '_cm': 4, 'mdc': 7, 'dcl': 7, 'ss(': 4, 's(c': 1, 'ug=': 1, 'g=F': 1, '=Fa': 2, 'Fal': 3, 'als': 3, 'se,': 1, 'e,\n': 1, 'gs=': 1, 's=N': 1, '=No': 2, 'Non': 3, 'one': 3, 'ne,': 1, ', q': 1, ' qu': 2, 'et=': 1, 't=F': 1, 'se)': 2, 'e):': 4, '  c': 2, ' cl': 2, 's _': 2, ' _R': 4, '_Ru': 4, 'd(R': 1, '(Ru': 1, '= {': 1, ' {\n': 1, ""es'"": 1, ""s':"": 2, ': c': 1, ""g':"": 1, ': d': 1, 'ug,': 1, 'g,\n': 1, "" 'e"": 1, ""'ex"": 1, ""gs'"": 1, ': e': 1, "" 'q"": 1, ""'qu"": 1, ""et'"": 1, ""t':"": 1, ': q': 1, ' }\n': 1, '}\n\n': 1, ' re': 2, 'rn ': 2, 'n _': 2, 'd\n\n': 2, 'd_i': 2, '_in': 2, 'b_c': 2, 's(b': 1, '(ba': 2, 'bas': 5, 'se=': 1, 'e=N': 1, 'ne)': 1, 's N': 1, ' No': 1, 'ne:': 1, '= i': 1, 'b\n ': 1, 'stI': 2, 'tIn': 2, 'Ins': 2, 'llL': 2, 'lLi': 2, 'Lib': 2, 'ibC': 2, 'bCo': 2, 'd(b': 1, 'ld(': 2, 'd(s': 2, 'se.': 1, 'e.b': 1, '.bu': 1, 'f)\n': 1, 'f.s': 1, '.sk': 1, 'ski': 1, 'kip': 1, 'ip_': 1, 'p_b': 1, 'ld:': 1, 'd:\n': 1, 'f.r': 1, 'un_': 1, 'n_c': 1, 'es(': 1, 's(d': 1, '(di': 1, 'st,': 1, ', a': 1, ' at': 1, 'tr,': 1, ' va': 1, 'val': 2, 'alu': 2, 'lue': 2, 'ue)': 2, 'st.': 4, 't.i': 1, '.is': 1, 'is_': 1, 's_p': 1, '_pu': 1, 'pur': 1, '= l': 1, ' la': 1, 'lam': 1, 'amb': 1, 'mbd': 1, 'bda': 1, 'da:': 1, 'a: ': 1, ': F': 1, ' Fa': 1, 'se\n': 1, 't.c': 3, 'ss[': 2, ""s['"": 2, ""['b"": 1, ""t']"": 1, ""'] "": 2, '] =': 2, '= b': 2, 's(v': 1, '(va': 1, ""['i"": 1, ""'in"": 2, ""b']"": 1, 's(\n': 1, '(\n ': 1, 's.g': 1, ""('i"": 1, ""b')"": 1}"
Armin Ronacher,server.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, '-*-': 2, 'coding:': 1, 'utf-8': 1, '""""""': 2, 'rstblog.server': 1, '~~~~~~~~~~~~~~': 1, 'development': 1, 'server': 1, 'that': 1, 'rebuilds': 1, 'automatically': 1, ':copyright:': 1, '(c)': 1, '2010': 1, 'by': 1, 'armin': 1, 'ronacher.': 1, ':license:': 1, 'bsd,': 1, 'see': 1, 'license': 1, 'for': 3, 'more': 1, 'details.': 1, 'from': 4, '__future__': 2, 'import': 8, 'absolute_import': 1, 'print_function': 1, 'os': 1, 'sys': 1, 'six.moves.urllib.request,': 1, 'six.moves.urllib.parse,': 1, 'six.moves.urllib.error': 1, 'posixpath': 1, 'six.moves.basehttpserver': 1, 'httpserver': 1, 'six.moves.simplehttpserver': 1, 'simplehttprequesthandler': 1, 'class': 2, 'simplerequesthandler(simplehttprequesthandler):': 1, 'def': 6, 'do_get(self):': 1, 'if': 3, 'self.server.builder.anything_needs_build():': 1, ""print('detected"": 1, 'change,': 1, ""building',"": 1, 'file=sys.stderr)': 1, 'self.server.builder.run()': 1, 'simplehttprequesthandler.do_get(self)': 1, 'translate_path(self,': 1, 'path):': 1, 'path': 5, '=': 9, ""path.split('?',"": 1, ""1)[0].split('#',"": 1, '1)[0]': 1, 'posixpath.normpath(six.moves.urllib.parse.unquote(path))': 1, 'words': 3, ""path.split('/')"": 1, '[_f': 1, '_f': 1, 'in': 3, '_f]': 1, 'self.server.builder.default_output_folder': 1, 'word': 4, 'words:': 1, 'drive,': 1, 'os.path.splitdrive(word)': 1, 'head,': 1, 'os.path.split(word)': 1, '(os.curdir,': 1, 'os.pardir):': 1, 'continue': 1, 'os.path.join(path,': 1, 'word)': 1, 'return': 1, 'log_request(self,': 1, ""code='-',"": 1, ""size='-'):"": 1, 'pass': 3, 'log_error(self,': 1, '*args):': 2, 'log_message(self,': 1, 'format,': 1, 'server(httpserver):': 1, '__init__(self,': 1, 'host,': 1, 'port,': 1, 'builder):': 1, 'httpserver.__init__(self,': 1, '(host,': 1, 'int(port)),': 1, 'simplerequesthandler)': 1, 'self.builder': 1, 'builder': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 3, 'cod': 2, 'odi': 1, 'din': 2, 'ing': 3, 'ng:': 1, 'g: ': 1, ': u': 1, ' ut': 1, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\n""': 1, '\n""""': 2, '""""""': 2, '""""\n': 2, '""\n ': 1, '\n  ': 32, '   ': 180, '  r': 2, ' rs': 1, 'rst': 1, 'stb': 1, 'tbl': 1, 'blo': 1, 'log': 4, 'og.': 1, 'g.s': 1, '.se': 4, 'ser': 5, 'erv': 11, 'rve': 11, 'ver': 11, 'er\n': 5, 'r\n ': 2, '  ~': 1, ' ~~': 1, '~~~': 12, '~~\n': 1, '~\n\n': 1, '\n\n ': 8, '  D': 1, ' De': 1, 'Dev': 1, 'eve': 1, 'vel': 1, 'elo': 1, 'lop': 1, 'opm': 1, 'pme': 1, 'men': 1, 'ent': 1, 'nt ': 1, 't s': 3, ' se': 6, 'er ': 4, 'r t': 1, ' th': 1, 'tha': 1, 'hat': 1, 'at ': 1, 't r': 1, ' re': 2, 'reb': 1, 'ebu': 1, 'bui': 9, 'uil': 9, 'ild': 9, 'lds': 1, 'ds ': 4, 's a': 1, ' au': 1, 'aut': 1, 'uto': 1, 'tom': 1, 'oma': 1, 'mat': 2, 'ati': 1, 'tic': 1, 'ica': 1, 'cal': 1, 'all': 1, 'lly': 1, 'ly\n': 1, 'y\n\n': 1, '  :': 2, ' :c': 1, ':co': 1, 'cop': 1, 'opy': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 1, ': (': 1, ' (c': 1, '(c)': 1, 'c) ': 1, ') 2': 1, ' 20': 1, '201': 1, '010': 1, '10 ': 1, '0 b': 1, ' by': 1, 'by ': 1, 'y A': 1, ' Ar': 1, 'Arm': 1, 'rmi': 1, 'min': 1, 'in ': 4, 'n R': 1, ' Ro': 1, 'Ron': 1, 'ona': 1, 'nac': 1, 'ach': 1, 'che': 1, 'her': 1, 'er.': 9, 'r.\n': 1, '.\n ': 1, ' :l': 1, ':li': 1, 'lic': 1, 'ice': 1, 'cen': 1, 'ens': 1, 'nse': 1, 'se:': 1, 'e: ': 1, ': B': 1, ' BS': 1, 'BSD': 1, 'SD,': 1, 'D, ': 1, ', s': 4, 'see': 1, 'ee ': 1, 'e L': 1, ' LI': 1, 'LIC': 1, 'ICE': 1, 'CEN': 1, 'ENS': 1, 'NSE': 1, 'SE ': 1, 'E f': 1, ' fo': 4, 'for': 4, 'or ': 3, 'r m': 1, ' mo': 1, 'mor': 1, 'ore': 1, 're ': 1, 'e d': 1, ' de': 7, 'det': 1, 'eta': 1, 'tai': 1, 'ail': 1, 'ils': 1, 'ls.': 1, 's.\n': 1, '.\n""': 1, '""\nf': 1, '\nfr': 4, 'fro': 4, 'rom': 4, 'om ': 4, 'm _': 2, ' __': 3, '__f': 2, '_fu': 3, 'fut': 2, 'utu': 2, 'tur': 3, 'ure': 2, 're_': 2, 'e__': 2, '__ ': 2, '_ i': 2, ' im': 4, 'imp': 15, 'mpo': 9, 'por': 11, 'ort': 11, 'rt ': 8, 't a': 1, ' ab': 1, 'abs': 1, 'bso': 1, 'sol': 1, 'olu': 1, 'lut': 1, 'ute': 1, 'te_': 2, 'e_i': 1, '_im': 1, 'rt\n': 1, 't\nf': 1, 't p': 2, ' pr': 2, 'pri': 2, 'rin': 2, 'int': 3, 'nt_': 1, 't_f': 2, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'on\n': 1, 'n\ni': 1, '\nim': 4, 't o': 1, ' os': 5, 'os\n': 1, 's\ni': 2, ' sy': 1, 'sys': 2, 'ys\n': 1, ' si': 6, 'six': 8, 'ix.': 6, 'x.m': 6, '.mo': 6, 'mov': 6, 'ove': 6, 'ves': 6, 'es.': 6, 's.u': 4, '.ur': 4, 'url': 4, 'rll': 4, 'lli': 4, 'lib': 4, 'ib.': 4, 'b.r': 1, '.re': 1, 'req': 2, 'equ': 7, 'que': 7, 'ues': 7, 'est': 7, 'st,': 3, 't, ': 5, 'b.p': 2, '.pa': 6, 'par': 3, 'ars': 2, 'rse': 2, 'se,': 1, 'e, ': 3, 'b.e': 1, '.er': 1, 'err': 3, 'rro': 2, 'ror': 2, 'or\n': 1, 'r\ni': 1, ' po': 3, 'pos': 2, 'osi': 2, 'ixp': 2, 'xpa': 2, 'pat': 17, 'ath': 17, 'th\n': 2, 'h\nf': 1, 'm s': 2, 's.B': 1, '.Ba': 1, 'Bas': 1, 'ase': 1, 'seH': 1, 'eHT': 5, 'HTT': 8, 'TTP': 8, 'TPS': 5, 'PSe': 5, 'Ser': 6, 'r i': 2, 't H': 1, ' HT': 2, 'r\nf': 1, 's.S': 1, '.Si': 1, 'Sim': 6, 'mpl': 6, 'ple': 6, 'leH': 4, 't S': 1, ' Si': 4, 'TPR': 3, 'PRe': 3, 'Req': 5, 'stH': 5, 'tHa': 5, 'Han': 5, 'and': 5, 'ndl': 5, 'dle': 5, 'ler': 5, 'r\n\n': 1, '\n\n\n': 2, '\n\nc': 2, '\ncl': 2, 'cla': 2, 'las': 2, 'ass': 5, 'ss ': 2, 's S': 2, 'leR': 2, 'eRe': 2, 'er(': 2, 'r(S': 1, '(Si': 1, 'er)': 4, 'r):': 4, '):\n': 10, ':\n\n': 2, '  d': 7, 'def': 7, 'ef ': 6, 'f d': 1, ' do': 1, 'do_': 2, 'o_G': 2, '_GE': 2, 'GET': 2, 'ET(': 2, 'T(s': 2, '(se': 8, 'sel': 12, 'elf': 12, 'lf)': 2, 'f):': 1, ':\n ': 9, '  i': 2, ' if': 3, 'if ': 3, 'f s': 1, 'lf.': 4, 'f.s': 3, 'r.b': 3, '.bu': 4, 'lde': 7, 'der': 8, 'r.a': 1, '.an': 1, 'any': 1, 'nyt': 1, 'yth': 1, 'thi': 1, 'hin': 1, 'ng_': 1, 'g_n': 1, '_ne': 1, 'nee': 1, 'eed': 1, 'eds': 1, 'ds_': 1, 's_b': 1, '_bu': 1, 'ld(': 1, 'd()': 1, '():': 1, '  p': 8, 'nt(': 2, ""t('"": 4, ""('D"": 1, ""'De"": 1, 'Det': 1, 'ete': 1, 'tec': 1, 'ect': 1, 'cte': 1, 'ted': 1, 'ed ': 1, 'd c': 1, ' ch': 1, 'cha': 1, 'han': 1, 'ang': 1, 'nge': 1, 'ge,': 1, ', b': 2, ' bu': 3, 'ldi': 1, ""ng'"": 1, ""g',"": 1, ""', "": 4, ', f': 2, ' fi': 1, 'fil': 1, 'ile': 1, 'le=': 1, 'e=s': 1, '=sy': 1, 'ys.': 1, 's.s': 1, '.st': 1, 'std': 1, 'tde': 1, 'rr)': 1, 'r)\n': 2, ')\n ': 8, '  s': 2, 'r.r': 1, '.ru': 1, 'run': 1, 'un(': 1, 'n()': 1, '()\n': 1, '  S': 1, 'r.d': 2, '.do': 1, 'f)\n': 1, ')\n\n': 1, 'f t': 1, ' tr': 1, 'tra': 1, 'ran': 1, 'ans': 1, 'nsl': 1, 'sla': 1, 'lat': 1, 'ate': 1, 'e_p': 1, '_pa': 1, 'th(': 2, 'h(s': 2, 'lf,': 6, 'f, ': 6, ', p': 2, ' pa': 11, 'th)': 2, 'h):': 1, 'th ': 4, 'h =': 4, ' = ': 9, '= p': 3, 'th.': 6, 'h.s': 4, '.sp': 5, 'spl': 5, 'pli': 5, 'lit': 5, 'it(': 4, ""('?"": 1, ""'?'"": 1, ""?',"": 1, ', 1': 2, ' 1)': 2, '1)[': 2, ')[0': 2, '[0]': 2, '0].': 1, '].s': 1, ""('#"": 1, ""'#'"": 1, ""#',"": 1, '0]\n': 1, ']\n ': 2, 'h.n': 1, '.no': 1, 'nor': 1, 'orm': 2, 'rmp': 1, 'mpa': 1, '(si': 1, 'se.': 1, 'e.u': 1, '.un': 1, 'unq': 1, 'nqu': 1, 'quo': 1, 'uot': 1, 'ote': 1, 'te(': 1, 'e(p': 1, '(pa': 2, 'h))': 1, '))\n': 1, '  w': 2, ' wo': 9, 'wor': 11, 'ord': 11, 'rds': 4, 's =': 2, ""('/"": 1, ""'/'"": 1, ""/')"": 1, ""')\n"": 1, '= [': 1, ' [_': 1, '[_f': 1, '_f ': 2, 'f f': 1, 'r _': 1, ' _f': 2, 'f i': 1, ' in': 4, 'n w': 2, 's i': 1, 'f _': 2, '_f]': 1, 'f]\n': 1, '= s': 1, '.de': 1, 'efa': 1, 'fau': 1, 'aul': 1, 'ult': 1, 'lt_': 1, 't_o': 1, '_ou': 1, 'out': 1, 'utp': 1, 'tpu': 1, 'put': 1, 'ut_': 1, '_fo': 1, 'fol': 1, 'old': 1, '  f': 1, 'r w': 1, 'rd ': 4, 'd i': 2, 'ds:': 1, 's:\n': 1, ' dr': 1, 'dri': 2, 'riv': 2, 'ive': 2, 've,': 1, ', w': 3, 'd =': 2, '= o': 3, 'os.': 5, 's.p': 4, 'itd': 1, 'tdr': 1, 've(': 1, 'e(w': 1, '(wo': 2, 'rd)': 3, 'd)\n': 3, '  h': 1, ' he': 1, 'hea': 1, 'ead': 1, 'ad,': 1, 'd, ': 1, 't(w': 1, 'f w': 1, 'n (': 1, ' (o': 1, '(os': 1, 's.c': 1, '.cu': 1, 'cur': 1, 'urd': 1, 'rdi': 2, 'dir': 2, 'ir,': 1, 'r, ': 1, ', o': 1, 'ard': 1, 'ir)': 1, '  c': 1, 'con': 1, 'ont': 1, 'nti': 1, 'tin': 1, 'inu': 1, 'nue': 1, 'ue\n': 1, 'e\n ': 1, 'h.j': 1, '.jo': 1, 'joi': 1, 'oin': 1, 'in(': 1, 'n(p': 1, 'th,': 1, 'h, ': 1, 'ret': 1, 'etu': 1, 'urn': 1, 'rn ': 1, 'n p': 1, 'h\n\n': 1, 'f l': 3, ' lo': 3, 'og_': 3, 'g_r': 1, '_re': 1, 'st(': 1, 't(s': 1, ', c': 1, 'ode': 1, 'de=': 1, ""e='"": 2, ""='-"": 2, ""'-'"": 2, ""-',"": 1, 'siz': 1, 'ize': 1, 'ze=': 1, ""-')"": 1, ""'):"": 1, 'pas': 3, 'ss\n': 3, 's\n\n': 3, 'g_e': 1, '_er': 1, 'or(': 1, 'r(s': 1, ', *': 2, ' *a': 2, '*ar': 2, 'arg': 2, 'rgs': 2, 'gs)': 2, 's):': 2, 'g_m': 1, '_me': 1, 'mes': 1, 'ess': 1, 'ssa': 1, 'sag': 1, 'age': 1, 'ge(': 1, 'e(s': 1, 'rma': 1, 'at,': 1, ' Se': 1, 'r(H': 1, '(HT': 1, '__i': 2, '_in': 2, 'ini': 2, 'nit': 2, 'it_': 2, 't__': 2, '__(': 2, '_(s': 2, ', h': 1, ' ho': 1, 'hos': 2, 'ost': 2, 'rt,': 1, '  H': 1, 'r._': 1, '.__': 1, ', (': 1, ' (h': 1, '(ho': 1, ', i': 1, 't(p': 1, '(po': 1, 'rt)': 1, 't))': 1, ')),': 1, '), ': 1, ', S': 1, 'f.b': 1, 'r =': 1, '= b': 1}"
Armin Ronacher,signals.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 1, '-*-': 2, 'coding:': 1, 'utf-8': 1, '""""""': 2, 'rstblog.signals': 1, '~~~~~~~~~~~~~~~': 1, 'blinker': 2, 'signals': 2, 'for': 2, 'the': 14, 'modules': 1, 'and': 2, 'other': 1, 'hooks.': 1, ':copyright:': 1, '(c)': 1, '2010': 1, 'by': 1, 'armin': 1, 'ronacher.': 1, ':license:': 1, 'bsd,': 1, 'see': 1, 'license': 1, 'more': 2, 'details.': 1, 'from': 3, '__future__': 1, 'import': 2, 'absolute_import': 1, 'namespace': 1, '=': 7, 'namespace()': 1, '#:': 10, 'before': 4, 'file': 4, 'is': 6, 'processed.': 1, 'context': 2, 'already': 2, 'prepared': 2, 'if': 1, 'given': 1, 'program': 1, 'was': 3, 'able': 1, 'to': 5, 'extract': 1, 'configuration': 1, 'file,': 1, 'it': 1, 'will': 1, 'be': 2, 'stored': 1, 'on': 1, 'context.': 1, 'before_file_processed': 1, ""signals.signal('before_file_processed')"": 1, 'after': 2, 'after_file_prepared': 1, ""signals.signal('after_file_prepared')"": 1, 'published': 1, '(public:': 1, 'yes)': 1, 'after_file_published': 1, ""signals.signal('after_file_published')"": 1, 'fired': 2, 'moment': 1, 'a': 2, 'template': 1, 'rendered': 1, 'with': 1, 'object': 1, 'that': 1, 'about': 1, 'passed': 1, 'template.': 1, 'before_template_rendered': 1, ""signals.signal('before_template_rendered')"": 1, 'right': 2, 'build': 2, 'finished.': 1, 'this': 1, 'perfect': 1, 'place': 1, 'write': 1, 'some': 1, 'files': 1, 'folder.': 1, 'before_build_finished': 1, ""signals.signal('before_build_finished')"": 1, 'emitted': 1, 'actually': 1, 'built.': 1, 'before_file_built': 1, ""signals.signal('before_file_built')"": 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 5, 'cod': 1, 'odi': 1, 'din': 1, 'ing': 1, 'ng:': 1, 'g: ': 1, ': u': 1, ' ut': 1, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\n""': 1, '\n""""': 2, '""""""': 2, '""""\n': 2, '""\n ': 1, '\n  ': 5, '   ': 10, '  r': 1, ' rs': 1, 'rst': 1, 'stb': 1, 'tbl': 1, 'blo': 1, 'log': 1, 'og.': 1, 'g.s': 1, '.si': 7, 'sig': 15, 'ign': 15, 'gna': 15, 'nal': 15, 'als': 9, 'ls\n': 1, 's\n ': 1, '  ~': 1, ' ~~': 1, '~~~': 13, '~~\n': 1, '~\n\n': 1, '\n\n ': 2, '  B': 1, ' Bl': 1, 'Bli': 1, 'lin': 2, 'ink': 2, 'nke': 2, 'ker': 2, 'er ': 5, 'r s': 1, ' si': 7, 'ls ': 2, 's f': 1, ' fo': 3, 'for': 14, 'or ': 2, 'r t': 3, ' th': 14, 'the': 14, 'he ': 14, 'e m': 3, ' mo': 4, 'mod': 1, 'odu': 1, 'dul': 1, 'ule': 1, 'les': 2, 'es ': 2, 's a': 5, ' an': 2, 'and': 2, 'nd ': 2, 'd o': 2, ' ot': 1, 'oth': 1, 'her': 2, 'r h': 1, ' ho': 1, 'hoo': 1, 'ook': 1, 'oks': 1, 'ks.': 1, 's.\n': 2, '.\n\n': 1, '  :': 2, ' :c': 1, ':co': 1, 'cop': 1, 'opy': 1, 'pyr': 1, 'yri': 1, 'rig': 3, 'igh': 3, 'ght': 3, 'ht:': 1, 't: ': 1, ': (': 1, ' (c': 1, '(c)': 1, 'c) ': 1, ') 2': 1, ' 20': 1, '201': 1, '010': 1, '10 ': 1, '0 b': 1, ' by': 1, 'by ': 1, 'y A': 1, ' Ar': 1, 'Arm': 1, 'rmi': 1, 'min': 1, 'in ': 1, 'n R': 1, ' Ro': 1, 'Ron': 1, 'ona': 1, 'nac': 1, 'ach': 1, 'che': 1, 'er.': 2, 'r.\n': 2, '.\n ': 1, ' :l': 1, ':li': 1, 'lic': 2, 'ice': 1, 'cen': 1, 'ens': 1, 'nse': 1, 'se:': 1, 'e: ': 1, ': B': 1, ' BS': 1, 'BSD': 1, 'SD,': 1, 'D, ': 1, ', s': 1, ' se': 1, 'see': 1, 'ee ': 1, 'e L': 1, ' LI': 1, 'LIC': 1, 'ICE': 1, 'CEN': 1, 'ENS': 1, 'NSE': 1, 'SE ': 1, 'E f': 1, 'r m': 1, 'mor': 2, 'ore': 15, 're ': 6, 'e d': 1, ' de': 1, 'det': 1, 'eta': 1, 'tai': 1, 'ail': 1, 'ils': 1, 'ls.': 7, '.\n""': 1, '""\nf': 1, '\nfr': 2, 'fro': 3, 'rom': 3, 'om ': 3, 'm _': 1, ' __': 1, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 1, 'ure': 1, 're_': 9, 'e__': 1, '__ ': 1, '_ i': 1, ' im': 2, 'imp': 3, 'mpo': 3, 'por': 3, 'ort': 3, 'rt ': 2, 't a': 1, ' ab': 3, 'abs': 1, 'bso': 1, 'sol': 1, 'olu': 1, 'lut': 1, 'ute': 1, 'te_': 3, 'e_i': 1, '_im': 1, 'rt\n': 1, 't\nf': 1, 'm b': 1, ' bl': 1, 'bli': 5, 'r i': 1, 't N': 1, ' Na': 2, 'Nam': 2, 'ame': 2, 'mes': 2, 'esp': 2, 'spa': 2, 'pac': 2, 'ace': 3, 'ce\n': 1, 'e\n\n': 1, '\n\n\n': 1, '\n\ns': 1, '\nsi': 1, 's =': 1, ' = ': 7, '= N': 1, 'ce(': 1, 'e()': 1, '()\n': 1, ')\n\n': 6, '\n\n#': 6, '\n#:': 10, '#: ': 10, ': b': 1, ' be': 6, 'bef': 12, 'efo': 12, 'e t': 5, 'e f': 5, ' fi': 9, 'fil': 14, 'ile': 14, 'le ': 5, 'e i': 3, ' is': 6, 'is ': 7, 's p': 3, ' pr': 4, 'pro': 4, 'roc': 3, 'oce': 3, 'ces': 3, 'ess': 3, 'sse': 4, 'sed': 4, 'ed.': 2, 'd. ': 2, '.  ': 2, '  T': 2, ' Th': 2, 'The': 1, 'e c': 3, 'con': 4, 'ont': 3, 'nte': 3, 'tex': 3, 'ext': 4, 'xt ': 2, 't i': 2, ' al': 2, 'alr': 2, 'lre': 2, 'rea': 2, 'ead': 2, 'ady': 2, 'dy ': 2, 'y p': 1, 'pre': 4, 'rep': 4, 'epa': 4, 'par': 4, 'are': 4, 'red': 10, 'ed ': 13, 'd a': 1, 'd i': 1, ' if': 1, 'if\n': 1, 'f\n#': 1, ': t': 2, 'e g': 1, ' gi': 1, 'giv': 1, 'ive': 1, 'ven': 1, 'en ': 1, 'n p': 1, 'rog': 1, 'ogr': 1, 'gra': 1, 'ram': 1, 'am ': 1, 'm w': 1, ' wa': 3, 'was': 3, 'as ': 3, 'abl': 1, 'ble': 1, ' to': 5, 'to ': 4, 'o e': 1, ' ex': 1, 'xtr': 1, 'tra': 1, 'rac': 1, 'act': 2, 'ct ': 2, 't c': 1, 'onf': 1, 'nfi': 1, 'fig': 1, 'igu': 1, 'gur': 1, 'ura': 1, 'rat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'on ': 2, 'n f': 1, ' fr': 1, 'm t': 1, 'le,': 1, 'e, ': 1, ', i': 1, ' it': 1, 'it\n': 1, 't\n#': 2, ': w': 2, ' wi': 2, 'wil': 1, 'ill': 1, 'll ': 1, 'l a': 1, 'y b': 2, 'be ': 2, 'e s': 2, ' st': 1, 'sto': 1, 'tor': 1, ' on': 1, 'n t': 1, 'xt.': 1, 't.\n': 2, '.\nb': 4, '\nbe': 4, 'e_f': 4, '_fi': 10, 'le_': 8, 'e_p': 6, '_pr': 4, 'd =': 5, '= s': 6, 's.s': 6, 'al(': 6, ""l('"": 6, ""('b"": 4, ""'be"": 4, ""ed'"": 5, ""d')"": 5, ""')\n"": 6, ': a': 2, ' af': 2, 'aft': 6, 'fte': 6, 'ter': 6, 'e w': 2, 'ed\n': 1, 'd\na': 1, '\naf': 2, 'er_': 4, 'r_f': 4, ""('a"": 2, ""'af"": 2, ' pu': 1, 'pub': 4, 'ubl': 4, 'lis': 3, 'ish': 6, 'she': 6, 'hed': 6, 'd (': 1, ' (p': 1, '(pu': 1, 'ic:': 1, 'c: ': 1, ': y': 1, ' ye': 1, 'yes': 1, 'es)': 1, 's)\n': 1, ')\na': 1, '_pu': 2, ': f': 2, 'fir': 2, 'ire': 2, 'd t': 2, 'mom': 1, 'ome': 2, 'men': 1, 'ent': 1, 'nt ': 1, 't b': 3, 'e a': 2, ' a ': 2, 'a t': 1, ' te': 2, 'tem': 4, 'emp': 4, 'mpl': 4, 'pla': 5, 'lat': 4, 'ate': 4, 'te ': 2, 's r': 1, ' re': 1, 'ren': 3, 'end': 3, 'nde': 3, 'der': 4, 'ere': 3, 'd w': 1, 'wit': 1, 'ith': 1, 'th ': 1, 'h t': 1, 't o': 1, ' ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 2, 'ct\n': 1, 'tha': 1, 'hat': 1, 'at ': 1, 'abo': 1, 'bou': 1, 'out': 1, 'ut ': 1, 't t': 1, 'o b': 1, 'e p': 2, ' pa': 1, 'pas': 1, 'ass': 1, 'o t': 2, 'te.': 1, 'e.\n': 1, 'e_t': 2, '_te': 2, 'e_r': 2, '_re': 2, 'd r': 2, ' ri': 2, 'ht ': 2, 'e b': 2, ' bu': 3, 'bui': 7, 'uil': 7, 'ild': 4, 'ld ': 2, 'd f': 2, 'fin': 3, 'ini': 3, 'nis': 3, 'Thi': 1, 'his': 1, 's i': 1, 's t': 2, ' pe': 1, 'per': 1, 'erf': 1, 'rfe': 1, 'fec': 1, 't p': 1, ' pl': 1, 'lac': 1, 'ce ': 1, 'to\n': 1, 'o\n#': 1, ' wr': 1, 'wri': 1, 'rit': 1, 'ite': 1, ' so': 1, 'som': 1, 'me ': 1, 'fol': 1, 'old': 1, 'lde': 1, 'e_b': 4, '_bu': 4, 'ld_': 2, 'd_f': 2, ': e': 1, ' em': 1, 'emi': 1, 'mit': 1, 'itt': 1, 'tte': 1, 'ted': 1, 'a f': 1, ' ac': 1, 'ctu': 1, 'tua': 1, 'ual': 1, 'all': 1, 'lly': 1, 'ly ': 1, 'ilt': 3, 'lt.': 1, 'lt ': 1, 't =': 1, ""lt'"": 1, ""t')"": 1}"
Armin Ronacher,speaklater.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 1, '-*-': 2, 'coding:': 1, 'utf-8': 1, 'r""""""': 1, 'speaklater': 4, '~~~~~~~~~~': 1, 'a': 13, 'module': 1, 'that': 6, 'provides': 1, 'lazy': 10, 'strings': 4, 'for': 6, 'translations.': 1, 'basically': 1, 'you': 7, 'get': 1, 'an': 2, 'object': 2, 'appears': 1, 'to': 9, 'be': 2, 'string': 12, 'but': 1, 'changes': 1, 'the': 14, 'value': 5, 'every': 1, 'time': 1, 'is': 4, 'evaluated': 1, 'based': 1, 'on': 2, 'callable': 1, 'provide.': 1, 'example': 2, 'can': 2, 'have': 2, 'global': 1, '`lazy_gettext`': 1, 'function': 5, 'returns': 1, 'with': 5, 'of': 4, 'current': 1, 'set': 1, 'language.': 1, 'example:': 2, '>>>': 26, 'from': 4, 'import': 5, 'make_lazy_string': 1, 'sval': 2, '=': 18, ""u'hello"": 3, ""world'"": 4, 'make_lazy_string(lambda:': 1, 'sval)': 1, 'this': 3, 'will': 3, 'evaluate': 1, '`sval`': 1, 'variable.': 1, ""lu'hello"": 1, 'unicode(string)': 1, 'string.upper()': 2, 'if': 7, 'change': 2, 'value,': 1, 'as': 5, 'well:': 1, ""u'hallo"": 2, ""welt'"": 2, 'especially': 1, 'handy': 1, 'when': 1, 'combined': 1, 'thread': 1, 'local': 2, 'and': 1, 'gettext': 3, 'translations': 2, 'or': 1, 'dicts': 1, 'translatable': 1, 'strings:': 1, 'make_lazy_gettext': 1, 'threading': 1, 'l': 1, 'local()': 1, 'l.translations': 1, ""{u'yes':"": 2, ""'ja'}"": 1, 'lazy_gettext': 3, 'make_lazy_gettext(lambda:': 2, 'l.translations.get)': 1, 'yes': 3, ""lazy_gettext(u'yes')"": 2, 'print': 2, 'ja': 1, ""l.translations[u'yes']"": 1, ""u'si'"": 2, 'si': 1, 'are': 1, 'no': 1, 'real': 1, 'so': 2, 'pass': 2, 'sort': 1, 'performs': 1, 'instance': 1, 'check,': 1, 'it': 2, 'fail.': 1, 'in': 3, 'case': 1, 'explicitly': 1, 'convert': 1, '`unicode`': 1, 'and/or': 1, '`string`': 1, 'depending': 1, 'what': 1, 'type': 1, 'encapsulates.': 1, 'check': 1, 'lazy,': 1, 'use': 1, '`is_lazy_string`': 1, 'function:': 1, 'is_lazy_string': 1, ""is_lazy_string(u'yes')"": 1, 'false': 1, 'is_lazy_string(yes)': 1, 'true': 1, 'new': 1, 'version': 1, '1.2:': 1, ""it's"": 1, 'now': 1, 'also': 1, 'possible': 1, 'keyword': 1, 'arguments': 1, 'callback': 1, 'used': 1, '`make_lazy_string`.': 1, ':copyright:': 1, '(c)': 1, '2010': 1, 'by': 4, 'armin': 1, 'ronacher.': 1, ':license:': 1, 'bsd,': 1, 'see': 1, 'license': 1, 'more': 1, 'details.': 1, '""""""': 3, 'def': 30, 'is_lazy_string(obj):': 1, '""""""checks': 1, 'given': 1, 'string.""""""': 1, 'return': 31, 'isinstance(obj,': 1, '_lazystring)': 1, 'make_lazy_string(__func,': 1, '*args,': 1, '**kwargs):': 1, '""""""creates': 2, 'invoking': 1, 'func': 2, 'args.""""""': 1, '_lazystring(__func,': 1, 'args,': 2, 'kwargs)': 1, 'make_lazy_gettext(lookup_func):': 1, 'dispatches': 1, 'returned': 1, '`lookup_func`.': 1, ""u'ja'}"": 1, 'translations.get)': 1, 'x': 3, ""lu'ja'"": 1, ""translations[u'yes']"": 1, ""lu'si'"": 1, 'lazy_gettext(string):': 1, 'is_lazy_string(string):': 1, 'make_lazy_string(lookup_func(),': 1, 'string)': 1, 'class': 1, '_lazystring(object):': 1, '""""""class': 1, 'created': 1, 'call.': 1, 'proxy': 1, 'implementation': 1, 'attempts': 1, 'complete': 1, 'possible,': 1, 'objects': 1, 'should': 1, 'mostly': 1, 'work': 1, 'expected,': 1, 'sorting.': 1, '__slots__': 1, ""('_func',"": 1, ""'_args',"": 1, ""'_kwargs')"": 1, '__init__(self,': 1, 'func,': 1, 'kwargs):': 1, 'self._func': 1, 'self._args': 1, 'args': 1, 'self._kwargs': 3, 'kwargs': 1, 'property(lambda': 1, 'x:': 1, 'x._func(*x._args,': 1, '**x._kwargs))': 1, '__contains__(self,': 1, 'key):': 2, 'key': 1, 'self.value': 13, '__nonzero__(self):': 1, 'bool(self.value)': 1, '__dir__(self):': 1, 'dir(unicode)': 1, '__iter__(self):': 1, 'iter(self.value)': 1, '__len__(self):': 1, 'len(self.value)': 1, '__str__(self):': 1, 'str(self.value)': 1, '__unicode__(self):': 1, 'unicode(self.value)': 1, '__add__(self,': 1, 'other):': 12, '+': 3, 'other': 12, '__radd__(self,': 1, '__mod__(self,': 1, '%': 3, '__rmod__(self,': 1, '__mul__(self,': 1, '*': 2, '__rmul__(self,': 1, '__lt__(self,': 1, '<': 1, '__le__(self,': 1, '<=': 1, '__eq__(self,': 1, '==': 3, '__ne__(self,': 1, '!=': 1, '__gt__(self,': 1, '>': 1, '__ge__(self,': 1, '>=': 1, '__getattr__(self,': 1, 'name):': 1, 'name': 1, ""'__members__':"": 1, 'self.__dir__()': 1, 'getattr(self.value,': 1, 'name)': 1, '__getstate__(self):': 1, 'self._func,': 2, 'self._args,': 2, '__setstate__(self,': 1, 'tup):': 1, 'tup': 1, '__getitem__(self,': 1, 'self.value[key]': 1, '__copy__(self):': 1, 'self': 1, '__repr__(self):': 1, 'try:': 1, ""'l'"": 1, 'repr(self.value)': 1, 'except': 1, 'exception:': 1, ""'<%s"": 1, ""broken>'"": 1, 'self.__class__.__name__': 1, '__name__': 1, ""'__main__':"": 1, 'doctest': 1, 'doctest.testmod()': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 4, 'cod': 6, 'odi': 1, 'din': 3, 'ing': 44, 'ng:': 1, 'g: ': 1, ': u': 2, ' ut': 1, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\nr': 1, '\nr""': 1, 'r""""': 1, '""""""': 10, '""""\n': 6, '""\n ': 5, '\n  ': 137, '   ': 434, '  s': 5, ' sp': 4, 'spe': 5, 'pea': 5, 'eak': 4, 'akl': 4, 'kla': 4, 'lat': 14, 'ate': 12, 'ter': 6, 'er\n': 10, 'r\n ': 1, '  ~': 1, ' ~~': 1, '~~~': 8, '~~\n': 1, '~\n\n': 1, '\n\n ': 45, '  A': 1, ' A ': 1, 'A m': 1, ' mo': 3, 'mod': 4, 'odu': 1, 'dul': 1, 'ule': 1, 'le ': 6, 'e t': 8, ' th': 22, 'tha': 6, 'hat': 7, 'at ': 6, 't p': 2, ' pr': 6, 'pro': 4, 'rov': 2, 'ovi': 2, 'vid': 2, 'ide': 2, 'des': 1, 'es ': 6, 's l': 3, ' la': 17, 'laz': 32, 'azy': 36, 'zy ': 10, 'y s': 8, ' st': 22, 'str': 38, 'tri': 39, 'rin': 41, 'ngs': 5, 'gs ': 7, 's f': 2, ' fo': 5, 'for': 6, 'or ': 8, 'r t': 1, ' tr': 7, 'tra': 9, 'ran': 9, 'ans': 9, 'nsl': 9, 'sla': 9, 'ati': 9, 'tio': 16, 'ion': 17, 'ons': 8, 'ns.': 3, 's. ': 1, '.  ': 2, '  B': 1, ' Ba': 1, 'Bas': 1, 'asi': 1, 'sic': 1, 'ica': 1, 'cal': 7, 'all': 6, 'lly': 2, 'ly ': 4, 'y y': 1, ' yo': 7, 'you': 7, 'ou\n': 1, 'u\n ': 1, '  g': 1, ' ge': 5, 'get': 21, 'et ': 2, 't a': 2, ' an': 4, 'an ': 4, 'n o': 5, ' ob': 3, 'obj': 6, 'bje': 4, 'jec': 4, 'ect': 5, 'ct ': 2, 't t': 1, ' ap': 1, 'app': 1, 'ppe': 3, 'ear': 1, 'ars': 1, 'rs ': 1, 's t': 6, ' to': 8, 'to ': 6, 'o b': 2, ' be': 2, 'be ': 2, 'e a': 5, ' a ': 12, 'a s': 2, 'ng ': 12, 'g b': 2, ' bu': 1, 'but': 1, 'ut ': 1, 't c': 2, ' ch': 5, 'cha': 3, 'han': 4, 'ang': 4, 'nge': 3, 'ges': 1, 'the': 37, 'he ': 14, 'e v': 5, ' va': 7, 'val': 33, 'alu': 29, 'lue': 27, 'ue ': 14, 'e e': 1, ' ev': 3, 'eve': 1, 'ver': 3, 'ery': 1, 'ry\n': 1, 'y\n ': 1, '  t': 5, ' ti': 1, 'tim': 1, 'ime': 1, 'me ': 2, 'e i': 1, ' is': 10, 'is ': 7, 's e': 3, 'eva': 2, 'lua': 2, 'uat': 2, 'ted': 3, 'ed ': 6, 'd b': 3, ' ba': 1, 'bas': 1, 'ase': 2, 'sed': 2, 'd o': 1, ' on': 2, 'on ': 9, 'n a': 3, 'a c': 1, ' ca': 6, 'lla': 1, 'lab': 1, 'abl': 3, 'ble': 5, 'e y': 2, 'ou ': 6, 'u p': 2, 'de.': 1, 'e.\n': 3, '.\n\n': 7, '  F': 2, ' Fo': 1, 'For': 1, 'r e': 2, ' ex': 5, 'exa': 2, 'xam': 4, 'amp': 4, 'mpl': 6, 'ple': 6, 'u c': 3, 'can': 2, 'n h': 1, ' ha': 3, 'hav': 2, 'ave': 2, 've ': 2, 'a g': 2, ' gl': 1, 'glo': 1, 'lob': 1, 'oba': 1, 'bal': 1, 'al ': 5, 'l `': 1, ' `l': 2, '`la': 1, 'zy_': 22, 'y_g': 11, '_ge': 15, 'ett': 14, 'tte': 15, 'tex': 14, 'ext': 14, 'xt`': 1, 't` ': 1, '` f': 2, ' fu': 9, 'fun': 19, 'unc': 19, 'nct': 6, 'cti': 6, 'n t': 3, 't r': 1, ' re': 35, 'ret': 33, 'etu': 33, 'tur': 33, 'urn': 33, 'rns': 1, 'ns\n': 1, 's\n ': 4, '  a': 2, 'a l': 4, 'g w': 3, ' wi': 8, 'wit': 5, 'ith': 5, 'th ': 5, 'h t': 1, 'e o': 2, ' of': 4, 'of ': 4, 'f t': 4, 'e c': 3, ' cu': 1, 'cur': 1, 'urr': 1, 'rre': 1, 'ren': 1, 'ent': 3, 'nt ': 3, 't s': 2, ' se': 28, 'set': 2, 't l': 2, 'lan': 1, 'ngu': 1, 'gua': 1, 'uag': 1, 'age': 1, 'ge.': 1, '  E': 2, ' Ex': 3, 'Exa': 2, 'le:': 2, 'e:\n': 2, ':\n\n': 5, '  >': 26, ' >>': 26, '>>>': 26, '>> ': 26, '> f': 4, ' fr': 4, 'fro': 4, 'rom': 4, 'om ': 4, 'm s': 3, 'er ': 6, 'r i': 3, ' im': 6, 'imp': 6, 'mpo': 5, 'por': 5, 'ort': 7, 'rt ': 7, 't m': 2, ' ma': 8, 'mak': 9, 'ake': 9, 'ke_': 9, 'e_l': 9, '_la': 15, 'y_s': 11, '_st': 12, 'ng\n': 5, 'g\n ': 5, '> s': 6, ' sv': 3, 'sva': 4, 'l =': 3, ' = ': 18, '= u': 4, "" u'"": 8, ""u'H"": 6, ""'He"": 3, 'Hel': 3, 'ell': 4, 'llo': 4, 'lo ': 4, 'o W': 4, ' Wo': 3, 'Wor': 3, 'orl': 3, 'rld': 3, ""ld'"": 3, ""d'\n"": 3, ""'\n "": 8, 'g =': 1, '= m': 3, 'ng(': 9, 'g(l': 2, '(la': 4, 'lam': 4, 'amb': 4, 'mbd': 4, 'bda': 4, 'da:': 3, 'a: ': 3, ': s': 1, 'al)': 1, 'l)\n': 1, ')\n\n': 12, '  T': 5, ' Th': 3, 'Thi': 2, 'his': 3, 'wil': 3, 'ill': 3, 'll ': 3, 'l e': 1, 'te ': 2, 'o t': 2, 'e `': 2, ' `s': 2, '`sv': 1, 'al`': 1, 'l` ': 1, '` v': 1, 'var': 1, 'ari': 1, 'ria': 1, 'iab': 1, 'le.': 1, '  l': 3, ' lu': 3, ""lu'"": 3, '> u': 1, ' un': 2, 'uni': 5, 'nic': 5, 'ico': 5, 'ode': 5, 'de(': 2, 'e(s': 2, '(st': 3, 'ng)': 5, 'g)\n': 3, ')\n ': 13, '  u': 3, 'ng.': 4, 'g.u': 2, '.up': 2, 'upp': 2, 'per': 4, 'er(': 3, 'r()': 2, '()\n': 5, ""'HE"": 1, 'HEL': 1, 'ELL': 1, 'LLO': 2, 'LO ': 2, 'O W': 2, ' WO': 1, 'WOR': 1, 'ORL': 1, 'RLD': 1, ""LD'"": 1, ""D'\n"": 1, ""'\n\n"": 2, '  I': 2, ' If': 1, 'If ': 1, 'f y': 2, 'ge ': 2, 'ue,': 2, 'e, ': 3, ', t': 2, 'e l': 3, 'l c': 1, ' as': 5, 'as ': 5, 's w': 1, ' we': 1, 'wel': 1, 'll:': 1, 'l:\n': 1, ""'Ha"": 1, 'Hal': 1, ' We': 1, 'Wel': 1, 'elt': 1, ""lt'"": 1, ""t'\n"": 1, ""'HA"": 1, 'HAL': 1, 'ALL': 1, ' WE': 1, 'WEL': 1, 'ELT': 1, ""LT'"": 1, ""T'\n"": 1, 's i': 2, ' es': 1, 'esp': 1, 'pec': 2, 'eci': 1, 'cia': 1, 'ial': 1, 'y h': 1, 'and': 3, 'ndy': 1, 'dy ': 1, 'y w': 2, ' wh': 2, 'whe': 1, 'hen': 1, 'en ': 2, 'n c': 2, 'com': 2, 'omb': 1, 'mbi': 1, 'bin': 1, 'ine': 1, 'ned': 2, 'd w': 2, 'h a': 2, 'a t': 1, 'thr': 2, 'hre': 2, 'rea': 6, 'ead': 2, 'ad ': 1, 'd l': 1, ' lo': 3, 'loc': 3, 'oca': 3, 'l a': 1, 'nd ': 1, 'd g': 1, 'xt\n': 4, 't\n ': 5, 'ns ': 3, 's o': 2, ' or': 1, 'r d': 1, ' di': 3, 'dic': 1, 'ict': 1, 'cts': 2, 'ts ': 4, 'ata': 1, 'tab': 1, 'e s': 1, 'gs:': 1, 's:\n': 1, 'm t': 1, 'adi': 1, 'g i': 2, 'al\n': 1, 'l\n ': 1, '> l': 5, ' l ': 1, '= l': 3, 'al(': 1, 'l()': 1, ' l.': 3, 'l.t': 3, '.tr': 3, 's =': 6, '= {': 2, ' {u': 2, ""{u'"": 2, ""u'Y"": 6, ""'Ye"": 6, 'Yes': 6, ""es'"": 7, ""s':"": 2, ""': "": 2, "": '"": 1, "" 'J"": 1, ""'Ja"": 3, ""Ja'"": 3, ""a'}"": 2, ""'}\n"": 2, '}\n ': 2, 'xt ': 3, 't =': 2, 'xt(': 6, 't(l': 3, ': l': 1, 's.g': 2, '.ge': 2, 'et)': 2, 't)\n': 2, '> y': 1, ' ye': 3, 'yes': 5, 't(u': 2, ""(u'"": 3, ""s')"": 4, ""')\n"": 4, '> p': 2, 'pri': 2, 'int': 2, 't y': 2, 'es\n': 2, '  J': 1, ' Ja': 1, 'Ja\n': 1, 'a\n ': 1, 'ns[': 2, 's[u': 2, ""[u'"": 2, ""s']"": 2, ""'] "": 2, '] =': 2, ""u'S"": 3, ""'Si"": 3, ""Si'"": 3, ""i'\n"": 3, '  S': 1, ' Si': 1, 'Si\n': 1, 'i\n\n': 1, '  L': 1, ' La': 1, 'Laz': 4, 's a': 5, ' ar': 6, 'are': 1, 're ': 2, 'e n': 1, ' no': 2, 'no ': 1, 'o r': 1, 'eal': 1, 'l s': 1, 's s': 3, ' so': 4, 'so ': 3, 'o i': 1, ' if': 5, 'if ': 6, ' pa': 2, 'pas': 2, 'ass': 5, 'ss ': 4, 'thi': 1, 'sor': 2, 't o': 1, 'f s': 1, 'g t': 2, 'to\n': 2, 'o\n ': 2, 'a f': 2, ' pe': 1, 'erf': 1, 'rfo': 1, 'orm': 1, 'rms': 1, 'ms ': 1, 'n i': 3, ' in': 4, 'ins': 3, 'nst': 2, 'sta': 4, 'tan': 2, 'anc': 2, 'nce': 2, 'ce ': 1, 'che': 4, 'hec': 3, 'eck': 3, 'ck,': 1, 'k, ': 1, ', i': 1, ' it': 3, 'it ': 2, 't w': 2, 'l f': 1, ' fa': 1, 'fai': 1, 'ail': 2, 'il.': 1, 'l. ': 1, ' In': 1, 'In ': 1, 'cas': 1, 'se\n': 2, 'e\n ': 2, '  y': 1, 'u h': 1, 'o e': 1, 'exp': 2, 'xpl': 1, 'pli': 1, 'lic': 2, 'ici': 1, 'cit': 1, 'itl': 1, 'tly': 2, 'y c': 1, 'con': 2, 'onv': 1, 'nve': 1, 'ert': 2, 't i': 3, 'h `': 2, ' `u': 1, '`un': 1, 'de`': 1, 'e` ': 1, '` a': 1, 'nd/': 1, 'd/o': 1, '/or': 1, 'r `': 1, '`st': 1, 'ng`': 3, 'g` ': 2, '` d': 1, ' de': 29, 'dep': 1, 'epe': 1, 'pen': 1, 'end': 1, 'ndi': 1, '  o': 1, 'n w': 1, 'wha': 1, ' ty': 1, 'typ': 1, 'ype': 1, 'pe ': 1, 'g e': 1, ' en': 1, 'enc': 1, 'nca': 1, 'cap': 1, 'aps': 1, 'psu': 1, 'sul': 1, 'ula': 1, 'tes': 6, 'es.': 1, 's.\n': 2, ' To': 1, 'To ': 1, 'o c': 1, 'ck ': 2, 'k i': 1, 'f a': 1, 'zy,': 1, 'y, ': 1, ', y': 1, 'n u': 2, ' us': 2, 'use': 2, 'se ': 1, ' `i': 1, '`is': 1, 'is_': 6, 's_l': 6, 'on:': 2, 'n:\n': 2, '> i': 2, 'g(u': 1, ""u'y"": 1, ""'ye"": 1, ' Fa': 1, 'Fal': 1, 'als': 2, 'lse': 1, 'g(y': 1, '(ye': 1, 'es)': 1, 's)\n': 2, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 5, 'e\n\n': 5, '  N': 1, ' Ne': 1, 'New': 1, 'ew ': 1, 'w i': 1, 'in ': 3, 'n v': 1, ' ve': 1, 'ers': 2, 'rsi': 1, 'sio': 1, 'n 1': 1, ' 1.': 1, '1.2': 1, '.2:': 1, '2: ': 1, ': I': 1, ' It': 1, ""It'"": 1, ""t's"": 1, ""'s "": 1, 's n': 1, 'now': 1, 'ow ': 1, 'w a': 1, ' al': 1, 'lso': 1, 'o p': 2, ' po': 2, 'pos': 2, 'oss': 2, 'ssi': 2, 'sib': 2, 'ibl': 2, 's k': 1, ' ke': 4, 'key': 5, 'eyw': 1, 'ywo': 1, 'wor': 2, 'ord': 1, 'rd ': 1, 'd a': 1, 'arg': 20, 'rgu': 1, 'gum': 1, 'ume': 1, 'men': 2, 'nts': 1, 'llb': 1, 'lba': 1, 'bac': 1, 'ack': 1, 'k u': 1, ' `m': 1, '`ma': 1, 'g`.': 1, '`.\n': 2, '  :': 2, ' :c': 1, ':co': 1, 'cop': 2, 'opy': 2, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 1, ': (': 1, ' (c': 1, '(c)': 1, 'c) ': 1, ') 2': 1, ' 20': 1, '201': 1, '010': 1, '10 ': 1, '0 b': 1, ' by': 4, 'by ': 4, 'y A': 1, ' Ar': 1, 'Arm': 1, 'rmi': 1, 'min': 1, 'n R': 1, ' Ro': 1, 'Ron': 1, 'ona': 1, 'nac': 1, 'ach': 1, 'her': 25, 'er.': 1, 'r.\n': 1, '.\n ': 2, ' :l': 1, ':li': 1, 'ice': 1, 'cen': 1, 'ens': 1, 'nse': 1, 'se:': 1, 'e: ': 1, ': B': 1, ' BS': 1, 'BSD': 1, 'SD,': 1, 'D, ': 1, ', s': 7, 'see': 1, 'ee ': 1, 'e L': 1, ' LI': 1, 'LIC': 1, 'ICE': 1, 'CEN': 1, 'ENS': 1, 'NSE': 1, 'SE ': 1, 'E f': 1, 'r m': 1, 'mor': 1, 'ore': 1, 'e d': 1, 'det': 1, 'eta': 3, 'tai': 2, 'ils': 1, 'ls.': 1, '.\n""': 1, '\n""""': 1, '""\n\n': 1, '\n\n\n': 5, '\n\nd': 3, '\nde': 3, 'def': 30, 'ef ': 30, 'f i': 2, 'g(o': 2, '(ob': 3, 'bj)': 1, 'j):': 1, '):\n': 32, ':\n ': 36, '  ""': 6, ' """"': 6, '""""C': 4, '""Ch': 1, 'Che': 1, 'cks': 1, 'ks ': 1, 'e g': 1, ' gi': 1, 'giv': 1, 'ive': 1, 'ven': 1, 'g.""': 1, '.""""': 2, '  r': 31, 'rn ': 31, 'isi': 1, 'sin': 1, 'ce(': 1, 'e(o': 1, 'bj,': 1, 'j, ': 1, ', _': 1, ' _L': 3, '_La': 3, 'zyS': 3, 'ySt': 3, 'Str': 3, 'f m': 2, 'g(_': 2, '(__': 2, '__f': 2, '_fu': 10, 'nc,': 5, 'c, ': 5, ', *': 3, ' *a': 1, '*ar': 1, 'rgs': 19, 'gs,': 6, 's, ': 6, ' **': 2, '**k': 1, '*kw': 1, 'kwa': 9, 'war': 9, 'gs)': 4, 's):': 2, '""Cr': 2, 'Cre': 2, 'eat': 3, 'y i': 3, 'inv': 1, 'nvo': 1, 'vok': 1, 'oki': 1, 'kin': 1, 'g f': 1, 'nc ': 2, 'c w': 1, 'gs.': 1, 's.""': 1, 'n _': 1, ', a': 2, ', k': 4, ' kw': 3, '(lo': 2, 'loo': 3, 'ook': 3, 'oku': 3, 'kup': 3, 'up_': 3, 'p_f': 3, 'nc)': 1, 'c):': 1, 'y g': 1, 't f': 1, 'n d': 2, 'dis': 1, 'isp': 1, 'spa': 1, 'pat': 1, 'atc': 1, 'tch': 1, 'hes': 1, 'o a': 1, '  f': 1, 's r': 1, 'rne': 1, 'y `': 1, '`lo': 1, 'nc`': 1, 'c`.': 1, '> t': 2, ""u'J"": 2, ': t': 1, '> x': 3, ' x ': 1, 'x =': 1, ' x\n': 2, 'x\n ': 2, ""a'\n"": 1, '  d': 28, 'f l': 1, 't(s': 1, 'g):': 2, '  i': 3, 'g(s': 1, 'n s': 16, 'n m': 1, 'nc(': 2, 'c()': 1, '(),': 1, '), ': 1, 'n l': 2, 't\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 2, 'las': 3, 's _': 1, 'ct)': 1, 't):': 1, '""Cl': 1, 'Cla': 1, 'r s': 2, 's c': 2, ' cr': 1, 'cre': 1, 'y a': 1, 'll.': 1, 'l.\n': 1, 'The': 1, 'e p': 1, 'rox': 1, 'oxy': 1, 'xy ': 1, 'lem': 1, 'eme': 1, 'nta': 2, 'tat': 5, ' at': 1, 'att': 3, 'tem': 2, 'emp': 1, 'mpt': 1, 'pts': 1, 'omp': 1, 'let': 1, 'ete': 1, 's p': 1, 'le,': 1, 'at\n': 1, 'y o': 1, ' sh': 1, 'sho': 1, 'hou': 1, 'oul': 1, 'uld': 1, 'ld ': 1, 'd m': 1, 'mos': 1, 'ost': 1, 'stl': 1, ' wo': 1, 'ork': 1, 'rk ': 1, 'k a': 1, 'xpe': 1, 'cte': 3, 'ed,': 1, 'd, ': 1, ', f': 2, 'e f': 1, 'rti': 1, 'tin': 1, 'g.\n': 1, '  _': 1, ' __': 28, '__s': 3, '_sl': 1, 'slo': 1, 'lot': 1, 'ots': 1, 'ts_': 1, 's__': 4, '__ ': 2, '_ =': 2, '= (': 1, "" ('"": 1, ""('_"": 1, ""'_f"": 1, ""nc'"": 1, ""c',"": 1, ""', "": 2, "", '"": 2, "" '_"": 4, ""'_a"": 1, '_ar': 5, ""gs'"": 2, ""s',"": 1, ""'_k"": 1, '_kw': 5, 'f _': 27, '__i': 2, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 3, '__(': 27, '_(s': 26, '(se': 33, 'sel': 59, 'elf': 59, 'lf,': 17, 'f, ': 17, 'lf.': 32, 'f._': 11, '._f': 4, 'c =': 1, '= f': 1, 'nc\n': 1, 'c\n ': 1, '._a': 4, '= a': 1, 'gs\n': 3, '._k': 4, '= k': 1, 's\n\n': 2, '  v': 1, 'e =': 3, '= p': 1, 'rop': 1, 'ope': 1, 'rty': 1, 'ty(': 1, 'y(l': 1, 'da ': 1, 'a x': 1, ' x:': 1, 'x: ': 1, ': x': 1, ' x.': 1, 'x._': 3, 'c(*': 1, '(*x': 1, '*x.': 2, '**x': 1, 's))': 1, '))\n': 1, '__c': 3, '_co': 2, 'ont': 1, 'ain': 2, 'ns_': 1, 'ey)': 2, 'y):': 2, 'n k': 1, 'ey ': 1, 'f.v': 21, '.va': 21, '__n': 4, '_no': 1, 'non': 1, 'onz': 1, 'nze': 1, 'zer': 1, 'ero': 1, 'ro_': 1, 'o__': 1, 'lf)': 9, 'f):': 9, 'n b': 1, ' bo': 1, 'boo': 1, 'ool': 1, 'ol(': 1, 'l(s': 1, 'ue)': 6, 'e)\n': 8, '__d': 2, '_di': 2, 'dir': 3, 'ir_': 2, 'r__': 6, 'ir(': 1, 'r(u': 1, '(un': 1, 'de)': 1, '_it': 1, 'ite': 3, 'er_': 1, 'r(s': 4, '__l': 3, '_le': 2, 'len': 2, 'en_': 1, 'n__': 2, ' le': 1, 'en(': 1, 'n(s': 1, 'tr_': 2, 'tr(': 2, '__u': 1, '_un': 1, 'de_': 1, 'e__': 8, '__a': 1, '_ad': 1, 'add': 2, 'dd_': 2, 'd__': 4, ', o': 12, ' ot': 24, 'oth': 24, 'er)': 12, 'r):': 12, 'e +': 1, ' + ': 3, '+ o': 1, 'r\n\n': 9, '__r': 4, '_ra': 1, 'rad': 1, 'r +': 1, '+ s': 1, '__m': 4, '_mo': 1, 'od_': 2, 'e %': 1, ' % ': 3, '% o': 1, '_rm': 2, 'rmo': 1, 'r %': 1, '% s': 2, '_mu': 1, 'mul': 2, 'ul_': 2, 'l__': 2, 'e *': 1, ' * ': 2, '* o': 1, 'rmu': 1, 'r *': 1, '* s': 1, '_lt': 1, 'lt_': 1, 'e <': 2, ' < ': 1, '< o': 1, 'le_': 1, ' <=': 1, '<= ': 1, '= o': 4, '__e': 1, '_eq': 1, 'eq_': 1, 'q__': 1, ' ==': 3, '== ': 3, '_ne': 1, 'ne_': 1, 'e !': 1, ' !=': 1, '!= ': 1, '__g': 5, '_gt': 1, 'gt_': 1, 'e >': 2, ' > ': 1, '> o': 1, 'ge_': 1, ' >=': 1, '>= ': 1, 'ttr': 2, ', n': 2, ' na': 3, 'nam': 5, 'ame': 5, 'me)': 2, 'e):': 1, 'f n': 1, ""= '"": 2, ""'__"": 2, '_me': 1, 'mem': 1, 'emb': 1, 'mbe': 1, 'ber': 1, 'rs_': 1, ""__'"": 2, ""_':"": 2, ""':\n"": 2, '.__': 3, '_()': 1, 'n g': 1, 'ets': 2, 'tst': 2, 'te_': 2, '_se': 1, ' tu': 2, 'tup': 2, 'up)': 1, 'p):': 1, '= t': 1, 'up\n': 1, 'p\n\n': 1, 'eti': 1, 'tit': 1, 'em_': 1, 'm__': 1, 'ue[': 1, 'e[k': 1, '[ke': 1, 'ey]': 1, 'y]\n': 1, ']\n\n': 1, 'py_': 1, 'y__': 1, 'lf\n': 1, 'f\n\n': 1, '_re': 1, 'rep': 2, 'epr': 2, 'pr_': 1, 'try': 1, 'ry:': 1, 'y:\n': 1, ""n '"": 2, "" 'l"": 1, ""'l'"": 1, ""l' "": 1, ""' +"": 1, '+ r': 1, 'pr(': 1, '  e': 1, 'exc': 1, 'xce': 2, 'cep': 2, 'ept': 2, 'pt ': 1, 't E': 1, 'Exc': 1, 'pti': 1, "" '<"": 1, ""'<%"": 1, '<%s': 1, '%s ': 1, 's b': 1, ' br': 1, 'bro': 1, 'rok': 1, 'oke': 1, 'ken': 1, 'en>': 1, ""n>'"": 1, "">' "": 1, ""' %"": 1, '_cl': 1, 'ss_': 1, '__.': 1, '_._': 1, '_na': 2, 'me_': 2, '__\n': 1, '_\n\n': 1, '\n\ni': 1, '\nif': 1, '_ma': 1, 'mai': 1, 'in_': 1, 't d': 1, ' do': 2, 'doc': 2, 'oct': 2, 'est': 3, 'st\n': 1, 'st.': 1, 't.t': 1, '.te': 1, 'stm': 1, 'tmo': 1, 'od(': 1, 'd()': 1}"
Armin Ronacher,tests.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, '-*-': 2, 'coding:': 1, 'utf-8': 1, 'import': 2, 'unittest': 1, 'phpserialize': 1, 'class': 2, 'phpserializetestcase(unittest.testcase):': 1, 'def': 20, 'test_dumps_int(self):': 1, 'self.assertequal(phpserialize.dumps(5),': 1, ""b'i:5;')"": 1, 'test_dumps_float(self):': 1, 'self.assertequal(phpserialize.dumps(5.6),': 1, ""b'd:5.6;')"": 1, 'test_dumps_str(self):': 1, ""self.assertequal(phpserialize.dumps('hello"": 1, ""world'),"": 1, 'b\'s:11:""hello': 1, 'world"";\')': 1, 'test_dumps_unicode(self):': 1, ""self.assertequal(phpserialize.dumps('bjã¶rk"": 1, ""guã°mundsdã³ttir'),"": 1, 'b\'s:23:""bj\\xc3\\xb6rk': 1, 'gu\\xc3\\xb0mundsd\\xc3\\xb3ttir"";\')': 1, 'test_dumps_binary(self):': 1, ""self.assertequal(phpserialize.dumps(b'\\001\\002\\003'),"": 1, 'b\'s:3:""\\x01\\x02\\x03"";\')': 1, 'test_dumps_list(self):': 1, 'self.assertequal(phpserialize.dumps([7,': 1, '8,': 2, '9]),': 1, ""b'a:3:{i:0;i:7;i:1;i:8;i:2;i:9;}')"": 2, 'test_dumps_tuple(self):': 1, 'self.assertequal(phpserialize.dumps((7,': 1, '9)),': 1, 'test_dumps_dict(self):': 1, ""self.assertequal(phpserialize.dumps({'a':"": 1, '1,': 5, ""'b':"": 4, '2,': 4, ""'c':"": 4, '3}),': 2, 'b\'a:3:{s:1:""a"";i:1;s:1:""c"";i:3;s:1:""b"";i:2;}\')': 1, 'test_loads_dict(self):': 1, 'self.assertequal(phpserialize.loads(b\'a:3:{s:1:""a"";i:1;s:1:""c"";i:3;s:1:""b"";i:2;}\',': 1, 'decode_strings=true),': 3, ""{'a':"": 2, '3})': 2, 'test_loads_unicode(self):': 1, 'self.assertequal(phpserialize.loads(b\'s:23:""bj\\xc3\\xb6rk': 1, 'gu\\xc3\\xb0mundsd\\xc3\\xb3ttir"";\',': 1, ""b'bj\\xc3\\xb6rk"": 1, ""gu\\xc3\\xb0mundsd\\xc3\\xb3ttir'.decode('utf-8'))"": 1, 'test_loads_binary(self):': 1, 'self.assertequal(phpserialize.loads(b\'s:3:""\\001\\002\\003"";\',': 1, 'decode_strings=false),': 1, ""b'\\001\\002\\003')"": 1, 'test_dumps_and_loads_dict(self):': 1, ""self.assertequal(phpserialize.loads(phpserialize.dumps({'a':"": 1, 'test_list_roundtrips(self):': 1, 'x': 3, '=': 12, 'phpserialize.loads(phpserialize.dumps(list(range(2))))': 2, 'self.assertequal(x,': 2, '{0:': 3, '0,': 2, '1:': 3, '1})': 2, 'y': 3, 'phpserialize.dict_to_list(x)': 1, 'self.assertequal(y,': 2, '[0,': 1, '1])': 1, 'test_tuple_roundtrips(self):': 1, 'phpserialize.dict_to_tuple(x)': 1, '(0,': 1, '1))': 1, 'test_fileio_support_with_chaining_and_all(self):': 1, 'f': 2, 'phpserialize.bytesio()': 1, 'phpserialize.dump([1,': 1, '2],': 1, 'f)': 2, 'phpserialize.dump(42,': 1, 'phpserialize.bytesio(f.getvalue())': 1, 'self.assertequal(phpserialize.load(f),': 2, '2})': 1, '42)': 1, 'test_object_hook(self):': 1, 'user(object):': 1, '__init__(self,': 1, 'username):': 1, 'self.username': 1, 'username': 1, 'load_object_hook(name,': 1, 'd):': 1, 'return': 2, ""{'wp_user':"": 1, 'user}[name](**d)': 1, 'dump_object_hook(obj):': 1, 'if': 2, 'isinstance(obj,': 1, 'user):': 1, ""phpserialize.phpobject('wp_user',"": 1, ""{'username':"": 1, 'obj.username})': 1, 'raise': 1, ""lookuperror('unknown"": 1, ""object')"": 1, 'user': 2, ""user('test')"": 1, 'phpserialize.dumps(user,': 1, 'object_hook=dump_object_hook)': 1, 'phpserialize.loads(x,': 1, 'object_hook=load_object_hook,': 1, 'decode_strings=true)': 2, ""self.assert_(b'wp_user'"": 1, 'in': 1, 'x)': 1, 'self.assertequal(type(y),': 1, 'type(user))': 1, 'self.assertequal(y.username,': 1, 'user.username)': 1, 'test_basic_object_hook(self):': 1, 'data': 1, 'b\'o:7:""wp_user"":1:{s:8:""username"";s:5:""admin"";}\'': 1, 'phpserialize.loads(data,': 1, 'object_hook=phpserialize.phpobject,': 1, 'self.assertequal(user.username,': 1, ""'admin')"": 1, 'self.assertequal(user.__name__,': 1, ""'wp_user')"": 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'unittest.main()': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 1, 'cod': 10, 'odi': 1, 'din': 1, 'ing': 8, 'ng:': 1, 'g: ': 1, ': u': 1, ' ut': 1, 'utf': 2, 'tf-': 2, 'f-8': 2, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\ni': 1, '\nim': 2, 'imp': 2, 'mpo': 2, 'por': 3, 'ort': 3, 'rt ': 2, 't u': 1, ' un': 2, 'uni': 5, 'nit': 4, 'itt': 3, 'tte': 3, 'tes': 23, 'est': 23, 'st\n': 1, 't\ni': 1, 't p': 1, ' ph': 13, 'php': 33, 'hps': 31, 'pse': 31, 'ser': 79, 'eri': 32, 'ria': 32, 'ial': 32, 'ali': 32, 'liz': 32, 'ize': 32, 'ze\n': 1, 'e\n\n': 2, '\n\n\n': 2, '\n\nc': 1, '\ncl': 1, 'cla': 2, 'las': 2, 'ass': 25, 'ss ': 2, 's P': 1, ' Ph': 1, 'Php': 1, 'hpS': 1, 'pSe': 1, 'Ser': 1, 'zeT': 1, 'eTe': 1, 'Tes': 2, 'stC': 2, 'tCa': 2, 'Cas': 2, 'ase': 2, 'se(': 1, 'e(u': 2, '(un': 1, 'st.': 2, 't.T': 1, '.Te': 1, 'se)': 2, 'e):': 2, '):\n': 23, ':\n\n': 1, '\n\n ': 20, '\n  ': 75, '   ': 629, '  d': 26, ' de': 26, 'def': 20, 'ef ': 20, 'f t': 17, ' te': 17, 'st_': 18, 't_d': 9, '_du': 9, 'dum': 25, 'ump': 25, 'mps': 21, 'ps_': 9, 's_i': 1, '_in': 2, 'int': 1, 'nt(': 1, 't(s': 6, '(se': 18, 'sel': 42, 'elf': 42, 'lf)': 17, 'f):': 17, ':\n ': 23, '  s': 24, ' se': 24, 'lf.': 24, 'f.a': 23, '.as': 23, 'sse': 23, 'ert': 23, 'rtE': 22, 'tEq': 22, 'Equ': 22, 'qua': 22, 'ual': 22, 'al(': 22, 'l(p': 14, '(ph': 17, 'ze.': 30, 'e.d': 16, '.du': 14, 'ps(': 14, 's(5': 2, '(5)': 1, '5),': 1, '), ': 8, ', b': 3, "" b'"": 11, ""b'i"": 1, ""'i:"": 1, 'i:5': 1, ':5;': 1, ""5;'"": 1, "";')"": 5, ""')\n"": 13, ')\n\n': 19, 's_f': 1, '_fl': 1, 'flo': 1, 'loa': 17, 'oat': 1, 'at(': 1, '(5.': 1, '5.6': 2, '.6)': 1, '6),': 1, ""b'd"": 1, ""'d:"": 1, 'd:5': 1, ':5.': 1, '.6;': 1, ""6;'"": 1, 's_s': 1, '_st': 7, 'str': 7, 'tr(': 1, 'r(s': 1, ""s('"": 2, ""('H"": 1, ""'He"": 1, 'Hel': 2, 'ell': 2, 'llo': 2, 'lo ': 2, 'o w': 2, ' wo': 2, 'wor': 2, 'orl': 2, 'rld': 2, ""ld'"": 1, ""d')"": 1, ""'),"": 3, '),\n': 8, ',\n ': 12, '  b': 7, ""b's"": 5, ""'s:"": 5, 's:1': 7, ':11': 1, '11:': 1, '1:""': 7, ':""H': 1, '""He': 1, 'ld""': 1, 'd"";': 1, '"";\'': 5, 's_u': 2, '_un': 2, 'nic': 2, 'ico': 2, 'ode': 9, 'de(': 3, 'e(s': 3, ""('B"": 1, ""'Bj"": 2, 'BjÃ': 1, 'jÃ¶': 1, 'Ã¶r': 1, '¶rk': 1, 'rk ': 4, 'k G': 4, ' Gu': 4, 'GuÃ': 1, 'uÃ°': 1, 'Ã°m': 1, '°mu': 1, 'mun': 4, 'und': 6, 'nds': 4, 'dsd': 4, 'sdÃ': 1, 'dÃ³': 1, 'Ã³t': 1, '³tt': 1, 'tti': 4, 'tir': 4, ""ir'"": 2, ""r')"": 2, 's:2': 2, ':23': 2, '23:': 2, '3:""': 4, ':""B': 2, '""Bj': 2, 'Bj\\': 3, 'j\\x': 3, '\\xc': 9, 'xc3': 9, 'c3\\': 9, '3\\x': 9, '\\xb': 9, 'xb6': 3, 'b6r': 3, '6rk': 3, 'Gu\\': 3, 'u\\x': 3, 'xb0': 3, 'b0m': 3, '0mu': 3, 'sd\\': 3, 'd\\x': 3, 'xb3': 3, 'b3t': 3, '3tt': 3, 'ir""': 2, 'r"";': 2, 's_b': 2, '_bi': 2, 'bin': 2, 'ina': 2, 'nar': 2, 'ary': 2, 'ry(': 2, 'y(s': 2, 's(b': 4, ""(b'"": 5, ""b'\\"": 2, ""'\\0"": 2, '\\00': 9, '001': 3, '01\\': 4, '1\\0': 3, '002': 3, '02\\': 4, '2\\0': 3, '003': 3, ""03'"": 2, ""3')"": 2, 's:3': 2, ':3:': 6, ':""\\': 2, '""\\x': 1, '\\x0': 3, 'x01': 1, '1\\x': 1, 'x02': 1, '2\\x': 1, 'x03': 1, '03""': 2, '3"";': 2, 's_l': 1, '_li': 3, 'lis': 5, 'ist': 5, 'st(': 4, 's([': 1, '([7': 1, '[7,': 1, '7, ': 2, ', 8': 2, ' 8,': 2, '8, ': 2, ', 9': 2, ' 9]': 1, '9])': 1, ']),': 1, ""b'a"": 4, ""'a:"": 4, 'a:3': 4, '3:{': 4, ':{i': 2, '{i:': 2, 'i:0': 2, ':0;': 2, '0;i': 2, ';i:': 16, 'i:7': 2, ':7;': 2, '7;i': 2, 'i:1': 4, ':1;': 4, '1;i': 2, 'i:8': 2, ':8;': 2, '8;i': 2, 'i:2': 4, ':2;': 4, '2;i': 2, 'i:9': 2, ':9;': 2, '9;}': 2, "";}'"": 5, ""}')"": 3, 's_t': 1, '_tu': 3, 'tup': 3, 'upl': 3, 'ple': 3, 'le(': 2, 's((': 1, '((7': 1, '(7,': 1, ' 9)': 1, '9))': 1, ')),': 1, 's_d': 3, '_di': 3, 'dic': 5, 'ict': 5, 'ct(': 4, 's({': 2, ""({'"": 2, ""{'a"": 4, ""'a'"": 4, ""a':"": 4, ""': "": 14, ': 1': 7, ' 1,': 5, '1, ': 6, "", '"": 10, "" 'b"": 4, ""'b'"": 4, ""b':"": 4, ': 2': 5, ' 2,': 4, '2, ': 5, "" 'c"": 4, ""'c'"": 4, ""c':"": 4, ': 3': 4, ' 3}': 4, '3})': 4, '}),': 2, ':{s': 3, '{s:': 3, ':1:': 7, ':""a': 3, '""a""': 2, 'a"";': 2, '"";i': 6, '1;s': 2, ';s:': 5, ':""c': 2, '""c""': 2, 'c"";': 2, 'i:3': 2, ':3;': 2, '3;s': 2, ':""b': 2, '""b""': 2, 'b"";': 2, '2;}': 2, 't_l': 4, '_lo': 4, 'oad': 16, 'ads': 12, 'ds_': 4, 'e.l': 10, '.lo': 10, 'ds(': 8, ""}',"": 1, ""',\n"": 2, 'dec': 7, 'eco': 7, 'de_': 6, 'e_s': 6, 'tri': 8, 'rin': 6, 'ngs': 6, 'gs=': 6, 's=T': 5, '=Tr': 5, 'Tru': 5, 'rue': 5, 'ue)': 5, 'e),': 4, ', {': 6, "" {'"": 4, '})\n': 6, "";',"": 2, ""b'B"": 1, ""r'."": 1, ""'.d"": 1, '.de': 1, ""e('"": 1, ""('u"": 2, ""'ut"": 1, ""-8'"": 1, ""8')"": 1, ""'))"": 1, '))\n': 6, '""\\0': 1, ""', "": 2, ', d': 2, 's=F': 1, '=Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 's_a': 1, '_an': 2, 'and': 2, 'nd_': 2, 'd_l': 1, 's(p': 3, 't_r': 1, '_ro': 2, 'rou': 2, 'oun': 2, 'ndt': 2, 'dtr': 2, 'rip': 2, 'ips': 2, 's(s': 2, '  x': 3, ' x ': 3, 'x =': 3, ' = ': 12, '= p': 9, 's(l': 2, '(li': 2, 't(r': 2, '(ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(2': 2, '(2)': 2, '2))': 2, ')))': 4, ')\n ': 19, 'l(x': 2, '(x,': 3, 'x, ': 3, ' {0': 3, '{0:': 3, '0: ': 3, ': 0': 2, ' 0,': 2, '0, ': 4, ', 1': 5, ' 1:': 3, '1: ': 3, ' 1}': 2, '1})': 2, '  y': 3, ' y ': 3, 'y =': 3, '.di': 2, 'ct_': 11, 't_t': 3, '_to': 2, 'to_': 2, 'o_l': 1, 't(x': 1, '(x)': 2, 'x)\n': 3, 'l(y': 3, '(y,': 2, 'y, ': 2, ', [': 1, ' [0': 1, '[0,': 1, ' 1]': 1, '1])': 1, '])\n': 1, 'le_': 1, 'e_r': 1, 'o_t': 1, 'e(x': 1, ', (': 1, ' (0': 1, '(0,': 1, ' 1)': 1, '1))': 1, 't_f': 1, '_fi': 1, 'fil': 1, 'ile': 1, 'lei': 1, 'eio': 1, 'io_': 1, 'o_s': 1, '_su': 1, 'sup': 1, 'upp': 1, 'ppo': 1, 'rt_': 2, 't_w': 1, '_wi': 1, 'wit': 1, 'ith': 1, 'th_': 1, 'h_c': 1, '_ch': 1, 'cha': 1, 'hai': 1, 'ain': 3, 'ini': 2, 'nin': 1, 'ng_': 1, 'g_a': 1, 'd_a': 1, '_al': 1, 'all': 1, 'll(': 1, 'l(s': 1, '  f': 2, ' f ': 2, 'f =': 2, 'e.B': 2, '.By': 2, 'Byt': 2, 'yte': 2, 'esI': 2, 'sIO': 2, 'IO(': 2, 'O()': 1, '()\n': 2, '  p': 2, 'mp(': 2, 'p([': 1, '([1': 1, '[1,': 1, ', 2': 1, ' 2]': 1, '2],': 1, '], ': 1, ', f': 2, ' f)': 2, 'f)\n': 2, 'p(4': 1, '(42': 1, '42,': 1, 'O(f': 1, '(f.': 1, 'f.g': 1, '.ge': 1, 'get': 1, 'etv': 1, 'tva': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ue(': 1, 'e()': 1, '())': 1, 'ad(': 2, 'd(f': 2, '(f)': 2, 'f),': 2, ' 2}': 1, '2})': 1, ', 4': 1, ' 42': 1, '42)': 1, '2)\n': 1, 't_o': 1, '_ob': 6, 'obj': 16, 'bje': 13, 'jec': 13, 'ect': 13, 't_h': 9, '_ho': 9, 'hoo': 9, 'ook': 10, 'ok(': 4, 'k(s': 2, '  c': 1, ' cl': 1, 's U': 1, ' Us': 4, 'Use': 9, 'er(': 2, 'r(o': 1, '(ob': 3, 'ct)': 1, 't):': 1, 'f _': 2, ' __': 2, '__i': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, 'lf,': 1, 'f, ': 1, ', u': 2, ' us': 5, 'use': 16, 'ern': 9, 'rna': 9, 'nam': 13, 'ame': 13, 'me)': 2, 'f.u': 1, '.us': 5, 'me ': 1, 'e =': 1, '= u': 1, 'me\n': 1, 'f l': 1, ' lo': 1, 'ad_': 2, 'd_o': 2, 'k(n': 1, '(na': 1, 'me,': 3, 'e, ': 3, ' d)': 1, 'd):': 1, '  r': 3, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n {': 1, ""{'W"": 1, ""'WP"": 4, 'WP_': 5, 'P_U': 5, '_Us': 5, ""er'"": 4, ""r':"": 1, ': U': 1, 'er}': 1, 'r}[': 1, '}[n': 1, '[na': 1, 'me]': 1, 'e](': 1, '](*': 1, '(**': 1, '**d': 1, '*d)': 1, 'd)\n': 1, 'f d': 1, ' du': 1, 'mp_': 2, 'p_o': 2, 'k(o': 1, 'bj)': 1, 'j):': 1, '  i': 1, ' if': 1, 'if ': 2, 'f i': 1, ' is': 1, 'isi': 1, 'sin': 1, 'ins': 1, 'nst': 1, 'sta': 1, 'tan': 1, 'anc': 1, 'nce': 1, 'ce(': 1, 'e(o': 1, 'bj,': 1, 'j, ': 1, ', U': 1, 'er)': 2, 'r):': 1, 'n p': 1, 'e.p': 2, '.ph': 2, 'hpo': 2, 'pob': 2, ""t('"": 1, ""('W"": 1, ""r',"": 1, ""{'u"": 1, ""'us"": 1, ""me'"": 1, ""e':"": 1, ': o': 1, ' ob': 5, 'bj.': 1, 'j.u': 1, 'me}': 1, 'e})': 1, ' ra': 1, 'rai': 1, 'ais': 1, 'ise': 1, 'se ': 1, 'e L': 1, ' Lo': 1, 'Loo': 1, 'oku': 1, 'kup': 1, 'upE': 1, 'pEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or(': 1, ""r('"": 2, ""'un"": 1, 'unk': 1, 'nkn': 1, 'kno': 1, 'now': 1, 'own': 1, 'wn ': 1, 'n o': 1, ""ct'"": 1, ""t')"": 2, '  u': 3, 'er ': 2, 'r =': 2, '= U': 1, ""('t"": 1, ""'te"": 1, ""st'"": 1, 's(u': 1, '(us': 4, 'er,': 1, 'r, ': 1, ', o': 3, 'ok=': 3, 'k=d': 1, '=du': 1, 'ok)': 1, 'k)\n': 1, 's(x': 1, 'k=l': 1, '=lo': 1, 'ok,': 1, 'k,\n': 1, 'e)\n': 3, 't_(': 1, '_(b': 1, ""b'W"": 1, ""r' "": 1, ""' i"": 1, ' in': 1, 'in ': 1, 'n x': 1, ' x)': 1, 'l(t': 1, '(ty': 1, 'typ': 2, 'ype': 2, 'pe(': 2, 'e(y': 1, '(y)': 1, 'y),': 1, ', t': 1, ' ty': 1, 'r))': 1, '(y.': 1, 'y.u': 1, 'er.': 3, 'r.u': 2, 't_b': 1, '_ba': 1, 'bas': 1, 'asi': 1, 'sic': 1, 'ic_': 1, 'c_o': 1, ' da': 1, 'dat': 2, 'ata': 2, 'ta ': 1, 'a =': 1, '= b': 1, ""b'O"": 1, ""'O:"": 1, 'O:7': 1, ':7:': 1, '7:""': 1, ':""W': 1, '""WP': 1, 'er""': 1, 'r"":': 1, '"":1': 1, '1:{': 1, 's:8': 1, ':8:': 1, '8:""': 1, ':""u': 1, '""us': 1, 'me""': 1, 'e"";': 1, '"";s': 1, 's:5': 1, ':5:': 1, '5:""': 1, '""ad': 1, 'adm': 2, 'dmi': 2, 'min': 2, 'in""': 1, 'n"";': 1, '"";}': 1, ""}'\n"": 1, ""'\n "": 1, 's(d': 1, '(da': 1, 'ta,': 1, 'a, ': 1, 'k=p': 1, '=ph': 1, 'ct,': 1, 't,\n': 1, 'l(u': 2, "" 'a"": 1, ""'ad"": 1, ""in'"": 1, ""n')"": 1, 'r._': 1, '.__': 1, '__n': 2, '_na': 2, 'me_': 2, 'e__': 2, '__,': 1, '_, ': 1, "" 'W"": 1, '\n\ni': 1, '\nif': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 2, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, 't.m': 1, '.ma': 1, 'in(': 1, 'n()': 1}"
Armin Ronacher,test_basic.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 4, 'pytest': 1, 'asyncio': 1, 'threading': 1, 'contextlib': 1, 'def': 8, 'test_basic_context():': 1, 'ctx': 6, '=': 12, 'contextlib.get_call_context()': 6, ""ctx.set_data('foo',"": 3, '42)': 1, 'assert': 5, ""ctx.get_data('foo')"": 3, '==': 5, '42': 1, ""ctx.del_data('foo')"": 1, 'with': 5, 'pytest.raises(lookuperror):': 2, 'test_context_nesting():': 1, 'ctx.nested():': 2, ""ctx.set_data('bar',"": 1, '23)': 1, ""ctx.get_data('bar')"": 1, 'test_local_context_behavior():': 1, '23,': 2, 'local=true)': 1, '23': 1, 'rv': 6, '[]': 3, 'test_thread():': 2, ""rv.append(contextlib.get_call_context().get_data('foo',"": 3, 'default=none))': 3, 't': 3, 'threading.thread(target=test_thread)': 3, 't.start()': 3, 't.join()': 3, 'contextlib.isolated_call_context():': 1, '[23,': 2, 'none]': 2, 'test_sync_data():': 1, 'sync=false)': 1, 'test_async():': 1, ""ctx.set_data('__locale__',"": 2, ""'en_us')"": 1, 'async': 1, 'x(val):': 1, ""rv.append(ctx.get_data('__locale__'))"": 3, 'val)': 1, ""asyncio.get_event_loop().run_until_complete(x('de_de'))"": 1, ""asyncio.get_event_loop().run_until_complete(x('fr_fr'))"": 1, ""['en_us',"": 1, ""'de_de',"": 1, ""'en_us',"": 1, ""'fr_fr',"": 1, ""'en_us']"": 1}","{'imp': 4, 'mpo': 4, 'por': 4, 'ort': 4, 'rt ': 9, 't p': 1, ' py': 3, 'pyt': 3, 'yte': 3, 'tes': 13, 'est': 16, 'st\n': 1, 't\ni': 1, '\nim': 3, 't a': 1, ' as': 9, 'asy': 5, 'syn': 7, 'ync': 7, 'nci': 3, 'cio': 3, 'io\n': 1, 'o\ni': 1, 't t': 1, ' th': 4, 'thr': 9, 'hre': 12, 'rea': 12, 'ead': 12, 'adi': 4, 'din': 4, 'ing': 5, 'ng\n': 1, 'g\ni': 1, 't c': 3, ' co': 8, 'con': 24, 'ont': 24, 'nte': 24, 'tex': 24, 'ext': 24, 'xtl': 11, 'tli': 11, 'lib': 11, 'ib\n': 1, 'b\n\n': 1, '\n\n\n': 5, '\n\nd': 5, '\nde': 5, 'def': 11, 'ef ': 8, 'f t': 7, ' te': 7, 'st_': 10, 't_b': 2, '_ba': 1, 'bas': 1, 'asi': 1, 'sic': 1, 'ic_': 1, 'c_c': 1, '_co': 15, 'xt(': 11, 't()': 14, '():': 10, '):\n': 13, ':\n ': 13, '\n  ': 48, '   ': 148, '  c': 15, ' ct': 19, 'ctx': 22, 'tx ': 6, 'x =': 6, ' = ': 12, '= c': 6, 'ib.': 10, 'b.g': 9, '.ge': 21, 'get': 24, 'et_': 27, 't_c': 10, '_ca': 10, 'cal': 17, 'all': 10, 'll_': 10, 'l_c': 13, '()\n': 12, ')\n ': 17, 'tx.': 16, 'x.s': 6, '.se': 6, 'set': 6, 't_d': 16, '_da': 18, 'dat': 18, 'ata': 18, 'ta(': 18, ""a('"": 17, ""('f"": 11, ""'fo"": 10, 'foo': 10, ""oo'"": 10, ""o',"": 6, ""', "": 13, ', 4': 1, ' 42': 2, '42)': 1, '2)\n': 1, '  a': 8, 'ass': 5, 'sse': 5, 'ser': 5, 'ert': 5, 'x.g': 7, ""o')"": 4, ""') "": 2, ') =': 2, ' ==': 5, '== ': 5, '= 4': 1, '42\n': 1, '2\n ': 1, 'x.d': 1, '.de': 1, 'del': 1, 'el_': 1, 'l_d': 1, ""')\n"": 4, ')\n\n': 15, '\n\n ': 15, '  w': 5, ' wi': 5, 'wit': 5, 'ith': 5, 'th ': 5, 'h p': 2, 'st.': 2, 't.r': 2, '.ra': 2, 'rai': 2, 'ais': 2, 'ise': 2, 'ses': 2, 'es(': 2, 's(L': 2, '(Lo': 2, 'Loo': 2, 'ook': 2, 'oku': 2, 'kup': 2, 'upE': 2, 'pEr': 2, 'Err': 2, 'rro': 2, 'ror': 2, 'or)': 2, 'r):': 2, 'xt_': 2, 't_n': 1, '_ne': 1, 'nes': 3, 'sti': 1, 'tin': 1, 'ng(': 1, 'g()': 1, 'h c': 3, 'x.n': 2, '.ne': 2, 'ste': 2, 'ted': 3, 'ed(': 2, 'd()': 4, ""('b"": 2, ""'ba"": 2, 'bar': 2, ""ar'"": 2, ""r',"": 1, ', 2': 3, ' 23': 4, '23)': 1, '3)\n': 1, ""r')"": 1, 't_l': 3, '_lo': 8, 'loc': 7, 'oca': 7, 'al_': 1, '_be': 1, 'beh': 1, 'eha': 1, 'hav': 1, 'avi': 1, 'vio': 1, 'ior': 1, 'or(': 1, 'r()': 1, '23,': 4, '3, ': 4, ', l': 1, ' lo': 1, 'al=': 1, 'l=T': 1, '=Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e)\n': 2, '= 2': 1, '23\n': 1, '3\n\n': 1, '  r': 9, ' rv': 12, 'rv ': 6, 'v =': 6, '= [': 6, ' []': 3, '[]\n': 3, ']\n ': 2, '  d': 2, ' de': 6, 't_t': 5, '_th': 5, 'ad(': 5, 'rv.': 6, 'v.a': 6, '.ap': 6, 'app': 6, 'ppe': 6, 'pen': 6, 'end': 6, 'nd(': 6, 'd(c': 6, '(co': 3, '().': 5, ').g': 3, ', d': 3, 'efa': 3, 'fau': 3, 'aul': 3, 'ult': 3, 'lt=': 3, 't=N': 3, '=No': 3, 'Non': 5, 'one': 5, 'ne)': 3, 'e))': 3, '))\n': 8, '  t': 9, ' t ': 3, 't =': 3, '= t': 3, 'ng.': 3, 'g.T': 3, '.Th': 3, 'Thr': 3, 'd(t': 3, '(ta': 3, 'tar': 6, 'arg': 3, 'rge': 3, 'et=': 3, 't=t': 3, '=te': 3, 'ad)': 3, 'd)\n': 3, ' t.': 6, 't.s': 3, '.st': 3, 'sta': 3, 'art': 3, 'rt(': 3, 't.j': 3, '.jo': 3, 'joi': 3, 'oin': 3, 'in(': 3, 'n()': 3, 'b.i': 1, '.is': 1, 'iso': 1, 'sol': 1, 'ola': 1, 'lat': 1, 'ate': 1, 'ed_': 1, 'd_c': 1, 't r': 3, ' [2': 2, '[23': 2, ', N': 2, ' No': 2, 'ne]': 2, 'e]\n': 2, ']\n\n': 3, 't_s': 1, '_sy': 1, 'nc_': 1, 'c_d': 1, 'a()': 1, ', s': 1, ' sy': 1, 'nc=': 1, 'c=F': 1, '=Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 'se)': 1, 't_a': 1, '_as': 1, 'nc(': 1, 'c()': 1, ""('_"": 5, ""'__"": 5, '__l': 5, 'ale': 5, 'le_': 5, 'e__': 5, ""__'"": 5, ""_',"": 2, "", '"": 5, "" 'e"": 3, ""'en"": 4, 'en_': 4, 'n_U': 4, '_US': 4, ""US'"": 4, ""S')"": 1, 'nc ': 1, 'c d': 1, 'f x': 1, ' x(': 1, 'x(v': 1, '(va': 1, 'val': 2, 'al)': 2, 'l):': 1, '(ct': 3, ""_')"": 3, ""'))"": 5, ', v': 1, ' va': 1, 'l)\n': 1, 'io.': 2, 'o.g': 2, 't_e': 2, '_ev': 2, 'eve': 2, 'ven': 2, 'ent': 2, 'nt_': 2, 'loo': 2, 'oop': 2, 'op(': 2, 'p()': 2, ').r': 2, '.ru': 2, 'run': 2, 'un_': 2, 'n_u': 2, '_un': 2, 'unt': 2, 'nti': 2, 'til': 2, 'il_': 2, 'com': 2, 'omp': 2, 'mpl': 2, 'ple': 2, 'let': 2, 'ete': 2, 'te(': 2, 'e(x': 2, '(x(': 2, ""x('"": 2, ""('d"": 1, ""'de"": 2, 'de_': 2, 'e_D': 2, '_DE': 2, ""DE'"": 2, ""E')"": 1, ""'fr"": 2, 'fr_': 2, 'r_F': 2, '_FR': 2, ""FR'"": 2, ""R')"": 1, "" ['"": 1, ""['e"": 1, ""S',"": 2, "" 'd"": 1, ""E',"": 1, "" 'f"": 1, ""R',"": 1, ""S']"": 1, ""']\n"": 1}"
Armin Ronacher,threads.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 2, 'threading': 1, 'contextlib': 1, '_local': 1, '=': 9, 'threading.local()': 1, 'def': 5, 'set_thread_call_context(ctx):': 1, '""""""binds': 1, 'the': 3, 'given': 1, 'call': 2, 'context': 1, 'to': 1, 'current': 2, 'thread.""""""': 1, '_local.context': 1, 'ctx': 2, 'return': 6, 'get_thread_call_context(create=false):': 1, '""""""returns': 1, ""thread's"": 1, 'context.""""""': 1, 'rv': 3, 'getattr(_local,': 1, ""'context',"": 1, 'none)': 1, 'if': 2, 'is': 1, 'not': 2, 'none:': 1, 'create:': 1, 'set_thread_call_context(contextlib.new_call_context())': 1, 'patch_threads():': 1, 'thread_init': 1, 'threading.thread.__init__': 2, 'thread_bootstrap': 1, 'threading.thread._bootstrap': 2, 'better_thread_init(self,': 1, '*args,': 2, '**kwargs):': 1, 'self.__outer_call_ctx': 1, 'contextlib.get_call_context()': 1, 'thread_init(self,': 1, '**kwargs)': 1, 'better_thread_bootstrap(self):': 1, 'set_thread_call_context(contextlib.new_call_context(': 1, 'name=self.name,': 1, 'parent=self.__outer_call_ctx))': 1, 'thread_bootstrap(self)': 1, 'better_thread_init': 1, 'better_thread_bootstrap': 1, 'threading.get_thread_call_context': 1, 'get_thread_call_context': 1}","{'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't t': 4, ' th': 16, 'thr': 24, 'hre': 28, 'rea': 30, 'ead': 28, 'adi': 7, 'din': 7, 'ing': 7, 'ng\n': 1, 'g\ni': 1, '\nim': 1, 't c': 2, ' co': 4, 'con': 17, 'ont': 17, 'nte': 17, 'tex': 17, 'ext': 17, 'xtl': 4, 'tli': 4, 'lib': 4, 'ib\n': 1, 'b\n\n': 1, '\n\n\n': 4, '\n\n_': 1, '\n_l': 1, '_lo': 3, 'loc': 4, 'oca': 4, 'cal': 17, 'al ': 1, 'l =': 1, ' = ': 9, '= t': 3, 'ng.': 6, 'g.l': 1, '.lo': 1, 'al(': 1, 'l()': 1, '()\n': 2, ')\n\n': 4, '\n\nd': 3, '\nde': 3, 'def': 5, 'ef ': 5, 'f s': 1, ' se': 4, 'set': 3, 'et_': 7, 't_t': 6, '_th': 11, 'ad_': 14, 'd_c': 6, '_ca': 11, 'all': 13, 'll_': 11, 'l_c': 11, '_co': 9, 'xt(': 7, 't(c': 4, '(ct': 1, 'ctx': 5, 'tx)': 2, 'x):': 1, '):\n': 5, ':\n ': 7, '\n  ': 22, '   ': 76, '  ""': 2, ' """"': 2, '""""""': 4, '""""B': 1, '""Bi': 1, 'Bin': 1, 'ind': 1, 'nds': 1, 'ds ': 1, 's t': 2, 'the': 3, 'he ': 3, 'e g': 1, ' gi': 1, 'giv': 1, 'ive': 1, 'ven': 1, 'en ': 1, 'n c': 2, ' ca': 2, 'll ': 2, 'l c': 2, 'xt ': 3, ' to': 1, 'to ': 1, 'o t': 1, 'e c': 2, ' cu': 2, 'cur': 2, 'urr': 2, 'rre': 2, 'ren': 3, 'ent': 3, 'nt ': 2, 'ad.': 5, 'd.""': 1, '.""""': 2, '""""\n': 2, '""\n ': 2, '  _': 1, ' _l': 1, 'al.': 1, 'l.c': 1, '.co': 1, 't =': 3, '= c': 2, ' ct': 2, 'tx\n': 2, 'x\n ': 1, '  r': 7, ' re': 6, 'ret': 6, 'etu': 7, 'tur': 7, 'urn': 7, 'rn ': 5, 'x\n\n': 1, 'f g': 1, ' ge': 3, 'get': 5, '(cr': 1, 'cre': 2, 'eat': 2, 'ate': 2, 'te=': 1, 'e=F': 1, '=Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 'se)': 1, 'e):': 1, '""""R': 1, '""Re': 1, 'Ret': 1, 'rns': 1, 'ns ': 1, ""ad'"": 1, ""d's"": 1, ""'s "": 1, 's c': 1, 'xt.': 1, 't.""': 1, ' rv': 3, 'rv ': 2, 'v =': 1, '= g': 2, 'eta': 1, 'tat': 1, 'att': 1, 'ttr': 1, 'tr(': 1, 'r(_': 1, '(_l': 1, 'al,': 1, 'l, ': 1, "", '"": 1, "" 'c"": 1, ""'co"": 1, ""xt'"": 1, ""t',"": 1, ""', "": 1, ', N': 1, ' No': 2, 'Non': 2, 'one': 2, 'ne)': 1, 'e)\n': 1, ')\n ': 3, '  i': 2, ' if': 2, 'if ': 2, 'f r': 1, 'v i': 1, ' is': 1, 'is ': 1, 's n': 1, ' no': 2, 'not': 2, 'ot ': 2, 't N': 1, 'ne:': 1, 'e:\n': 2, 'n r': 1, 'rv\n': 1, 'v\n ': 1, 'f n': 1, ' cr': 1, 'te:': 1, 'rn\n': 1, 'n\n ': 1, 'n s': 1, '(co': 2, 'ib.': 3, 'b.n': 2, '.ne': 2, 'new': 2, 'ew_': 2, 'w_c': 2, 't()': 2, '())': 1, '))\n': 2, 'f p': 1, ' pa': 2, 'pat': 1, 'atc': 1, 'tch': 1, 'ch_': 1, 'h_t': 1, 'ads': 1, 'ds(': 1, 's()': 1, '():': 1, '  t': 5, 'd_i': 4, '_in': 6, 'ini': 6, 'nit': 6, 'it ': 1, 'g.T': 4, '.Th': 4, 'Thr': 4, 'd._': 4, '.__': 4, '__i': 2, 'it_': 2, 't__': 2, '__\n': 1, '_\n ': 1, 'd_b': 4, '_bo': 6, 'boo': 6, 'oot': 6, 'ots': 6, 'tst': 6, 'str': 6, 'tra': 6, 'rap': 6, 'ap ': 2, 'p =': 2, '._b': 2, 'ap\n': 2, 'p\n\n': 1, '\n\n ': 3, '  d': 2, ' de': 2, 'f b': 2, ' be': 4, 'bet': 4, 'ett': 4, 'tte': 4, 'ter': 6, 'er_': 6, 'r_t': 4, 'it(': 2, 't(s': 2, '(se': 4, 'sel': 7, 'elf': 7, 'lf,': 2, 'f, ': 2, ', *': 4, ' *a': 2, '*ar': 2, 'arg': 4, 'rgs': 4, 'gs,': 2, 's, ': 2, ' **': 2, '**k': 2, '*kw': 2, 'kwa': 2, 'war': 2, 'gs)': 2, 's):': 1, '  s': 2, 'lf.': 3, 'f._': 2, '__o': 2, '_ou': 2, 'out': 2, 'ute': 2, 'r_c': 2, '_ct': 2, 'tx ': 1, 'x =': 1, 'b.g': 1, '.ge': 2, 't_c': 1, 'n t': 2, 's)\n': 1, 'ap(': 2, 'p(s': 2, 'lf)': 2, 'f):': 1, 't(\n': 1, '(\n ': 1, '  n': 1, ' na': 1, 'nam': 2, 'ame': 2, 'me=': 1, 'e=s': 1, '=se': 2, 'f.n': 1, '.na': 1, 'me,': 1, 'e, ': 1, ', p': 1, 'par': 1, 'are': 1, 'nt=': 1, 't=s': 1, 'x))': 1, 'f)\n': 1, '__ ': 1, '_ =': 1, '= b': 2, 'it\n': 1, 't\n ': 1, 'p\n ': 1, 'g.g': 1, 'xt\n': 1}"
Armin Ronacher,unified.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'from': 2, '.aio': 1, 'import': 2, 'get_task_call_context': 1, '.threads': 1, 'get_thread_call_context': 1, 'providers': 1, '=': 2, '[': 1, 'get_task_call_context,': 1, ']': 1, 'def': 2, 'register(func):': 1, '""""""registers': 1, 'an': 1, 'unified': 1, 'provider.""""""': 1, 'providers.append(func)': 1, 'return': 3, 'func': 1, 'get_call_context():': 1, '""""""returns': 1, 'the': 1, 'current': 1, 'call': 1, 'context.""""""': 1, 'for': 1, 'provider': 1, 'in': 1, 'providers:': 1, 'rv': 3, 'provider(create=true)': 1, 'if': 1, 'is': 1, 'not': 1, 'none:': 1, 'get_thread_call_context(create=true)': 1}","{'fro': 2, 'rom': 2, 'om ': 2, 'm .': 2, ' .a': 1, '.ai': 1, 'aio': 1, 'io ': 1, 'o i': 1, ' im': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't g': 2, ' ge': 5, 'get': 5, 'et_': 5, 't_t': 4, '_ta': 2, 'tas': 2, 'ask': 2, 'sk_': 2, 'k_c': 2, '_ca': 5, 'cal': 6, 'all': 6, 'll_': 5, 'l_c': 5, '_co': 5, 'con': 6, 'ont': 6, 'nte': 6, 'tex': 6, 'ext': 6, 'xt\n': 2, 't\nf': 1, '\nfr': 1, ' .t': 1, '.th': 1, 'thr': 3, 'hre': 3, 'rea': 5, 'ead': 3, 'ads': 1, 'ds ': 1, 's i': 1, '_th': 2, 'ad_': 2, 'd_c': 2, 't\n\n': 1, '\n\n\n': 3, '\n\np': 1, '\npr': 1, 'pro': 6, 'rov': 6, 'ovi': 6, 'vid': 6, 'ide': 6, 'der': 6, 'ers': 4, 'rs ': 2, 's =': 1, ' = ': 2, '= [': 1, ' [\n': 1, '[\n ': 1, '\n  ': 10, '   ': 36, '  g': 1, 'xt,': 1, 't,\n': 1, ',\n]': 1, '\n]\n': 1, ']\n\n': 1, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f r': 2, ' re': 4, 'reg': 1, 'egi': 2, 'gis': 2, 'ist': 2, 'ste': 2, 'ter': 2, 'er(': 2, 'r(f': 1, '(fu': 2, 'fun': 3, 'unc': 3, 'nc)': 2, 'c):': 1, '):\n': 2, ':\n ': 4, '  ""': 2, ' """"': 2, '""""""': 4, '""""R': 2, '""Re': 2, 'Reg': 1, 's a': 1, ' an': 1, 'an ': 1, 'n u': 1, ' un': 1, 'uni': 1, 'nif': 1, 'ifi': 1, 'fie': 1, 'ied': 1, 'ed ': 1, 'd p': 1, ' pr': 5, 'er.': 1, 'r.""': 1, '.""""': 2, '""""\n': 2, '""\n ': 2, '  p': 1, 'rs.': 1, 's.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(f': 1, 'c)\n': 1, ')\n ': 2, '  r': 4, 'ret': 3, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 3, 'n f': 1, ' fu': 1, 'nc\n': 1, 'c\n\n': 1, 'f g': 1, 't_c': 1, 'xt(': 2, 't()': 1, '():': 1, 'Ret': 1, 'rns': 1, 'ns ': 1, 's t': 1, ' th': 1, 'the': 1, 'he ': 1, 'e c': 1, ' cu': 1, 'cur': 1, 'urr': 1, 'rre': 1, 'ren': 1, 'ent': 1, 'nt ': 1, 't c': 1, ' ca': 1, 'll ': 1, 'l c': 1, ' co': 1, 'xt.': 1, 't.""': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r p': 1, 'er ': 1, 'r i': 1, ' in': 1, 'in ': 1, 'n p': 1, 'rs:': 1, 's:\n': 1, ' rv': 3, 'rv ': 2, 'v =': 1, '= p': 1, 'r(c': 1, '(cr': 2, 'cre': 2, 'eat': 2, 'ate': 2, 'te=': 2, 'e=T': 2, '=Tr': 2, 'Tru': 2, 'rue': 2, 'ue)': 2, 'e)\n': 2, '  i': 1, ' if': 1, 'if ': 1, 'v i': 1, ' is': 1, 'is ': 1, 's n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne:': 1, 'e:\n': 1, 'n r': 1, 'rv\n': 1, 'v\n ': 1, 'n g': 1, 't(c': 1}"
Armin Ronacher,utils.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 1, '-*-': 2, 'coding:': 1, 'utf-8': 1, '""""""': 3, 'rstblog.utils': 1, '~~~~~~~~~~~~~': 1, 'various': 1, 'utilities.': 1, ':copyright:': 1, '(c)': 1, '2010': 1, 'by': 1, 'armin': 1, 'ronacher.': 1, ':license:': 1, 'bsd,': 1, 'see': 1, 'license': 1, 'for': 3, 'more': 1, 'details.': 1, 'from': 5, '__future__': 1, 'import': 5, 'absolute_import': 1, 'math': 1, 'ceil': 1, 'jinja2': 1, 'markup': 1, 'six': 1, 'six.moves': 1, 'range': 1, 'class': 2, 'pagination(object):': 1, '""""""internal': 1, 'helper': 1, 'paginations""""""': 1, 'def': 13, '__init__(self,': 1, 'builder,': 1, 'entries,': 1, 'page,': 1, 'per_page,': 1, 'url_key):': 1, 'self.builder': 1, '=': 7, 'builder': 1, 'self.entries': 1, 'entries': 1, 'self.page': 10, 'page': 5, 'self.per_page': 1, 'per_page': 1, 'self.url_key': 1, 'url_key': 1, '@property': 6, 'total(self):': 1, 'return': 11, 'len(self.entries)': 1, 'pages(self):': 1, 'int(ceil(self.total': 1, '/': 1, 'float(self.per_page)))': 1, 'get_prev(self):': 1, 'pagination(self.builder,': 2, 'self.entries,': 2, '-': 6, '1,': 2, 'self.per_page,': 2, 'self.url_key)': 2, 'prev_num(self):': 1, '""""""number': 2, 'of': 2, 'the': 7, 'previous': 2, 'page.""""""': 1, '1': 5, 'has_prev(self):': 1, '""""""true': 2, 'if': 4, 'a': 2, 'exists""""""': 1, '>': 3, 'get_next(self):': 1, '+': 5, 'has_next(self):': 1, 'next': 2, 'exists.""""""': 1, '<': 2, 'self.pages': 3, 'next_num(self):': 1, 'page""""""': 1, 'get_slice(self):': 1, 'self.entries[(self.page': 1, '1)': 1, '*': 2, 'self.per_page:': 1, 'self.per_page]': 1, 'iter_pages(self,': 1, 'left_edge=2,': 1, 'left_current=2,': 1, 'right_current=5,': 1, 'right_edge=2):': 1, '""""""iterates': 1, 'over': 1, 'numbers': 3, 'in': 2, 'pagination.': 1, 'four': 1, 'parameters': 1, 'control': 1, 'thresholds': 1, 'how': 1, 'many': 1, 'should': 1, 'be': 1, 'produced': 1, 'sides.': 1, 'skipped': 1, 'are': 1, 'represented': 1, 'as': 1, '`none`.': 1, 'last': 3, '0': 1, 'num': 6, 'range(1,': 1, '1):': 1, '<=': 1, 'left_edge': 1, 'or': 2, '\\': 3, '(num': 1, 'left_current': 1, 'and': 1, 'right_current)': 1, 'right_edge:': 1, '!=': 1, 'num:': 1, 'yield': 2, 'none': 1, '__str__(self):': 1, ""self.builder.render_template('_pagination.html',"": 1, '{': 1, ""'pagination':"": 1, 'self': 1, '})': 1, '__html__(self):': 1, 'markup(six.text_type(self))': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 2, 'cod': 1, 'odi': 1, 'din': 1, 'ing': 1, 'ng:': 1, 'g: ': 1, ': u': 1, ' ut': 2, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\n""': 1, '\n""""': 2, '""""""': 14, '""""\n': 8, '""\n ': 6, '\n  ': 65, '   ': 424, '  r': 13, ' rs': 1, 'rst': 1, 'stb': 1, 'tbl': 1, 'blo': 1, 'log': 1, 'og.': 1, 'g.u': 1, '.ut': 1, 'uti': 2, 'til': 2, 'ils': 2, 'ls\n': 1, 's\n ': 2, '  ~': 1, ' ~~': 1, '~~~': 11, '~~\n': 1, '~\n\n': 1, '\n\n ': 15, '  V': 1, ' Va': 1, 'Var': 1, 'ari': 1, 'rio': 1, 'iou': 3, 'ous': 3, 'us ': 3, 's u': 1, 'ili': 1, 'lit': 1, 'iti': 1, 'tie': 1, 'ies': 8, 'es.': 2, 's.\n': 2, '.\n\n': 1, '  :': 2, ' :c': 1, ':co': 1, 'cop': 1, 'opy': 1, 'pyr': 1, 'yri': 1, 'rig': 5, 'igh': 5, 'ght': 5, 'ht:': 1, 't: ': 1, ': (': 1, ' (c': 1, '(c)': 1, 'c) ': 1, ') 2': 1, ' 20': 1, '201': 1, '010': 1, '10 ': 1, '0 b': 1, ' by': 1, 'by ': 1, 'y A': 1, ' Ar': 1, 'Arm': 1, 'rmi': 1, 'min': 1, 'in ': 3, 'n R': 1, ' Ro': 1, 'Ron': 1, 'ona': 1, 'nac': 1, 'ach': 1, 'che': 1, 'her': 1, 'er.': 2, 'r.\n': 1, '.\n ': 2, ' :l': 1, ':li': 1, 'lic': 2, 'ice': 2, 'cen': 1, 'ens': 1, 'nse': 1, 'se:': 1, 'e: ': 1, ': B': 1, ' BS': 1, 'BSD': 1, 'SD,': 1, 'D, ': 1, ', s': 8, ' se': 29, 'see': 1, 'ee ': 1, 'e L': 1, ' LI': 1, 'LIC': 1, 'ICE': 1, 'CEN': 1, 'ENS': 1, 'NSE': 1, 'SE ': 1, 'E f': 1, ' fo': 4, 'for': 3, 'or ': 5, 'r m': 1, ' mo': 1, 'mor': 1, 'ore': 1, 're ': 2, 'e d': 1, ' de': 14, 'det': 1, 'eta': 1, 'tai': 1, 'ail': 1, 'ls.': 1, '.\n""': 1, '""\nf': 1, '\nfr': 4, 'fro': 5, 'rom': 5, 'om ': 5, 'm _': 1, ' __': 4, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 12, 'ure': 1, 're_': 1, 'e__': 1, '__ ': 1, '_ i': 1, ' im': 4, 'imp': 6, 'mpo': 6, 'por': 6, 'ort': 6, 'rt ': 5, 't a': 1, ' ab': 1, 'abs': 1, 'bso': 1, 'sol': 1, 'olu': 1, 'lut': 1, 'ute': 1, 'te_': 1, 'e_i': 1, '_im': 1, 'rt\n': 1, 't\nf': 1, 'm m': 1, ' ma': 2, 'mat': 1, 'ath': 1, 'th ': 1, 'h i': 1, 't c': 1, ' ce': 1, 'cei': 2, 'eil': 2, 'il\n': 1, 'l\n\n': 1, '\n\nf': 1, 'm j': 1, ' ji': 1, 'jin': 1, 'inj': 1, 'nja': 1, 'ja2': 1, 'a2 ': 1, '2 i': 1, 't M': 1, ' Ma': 2, 'Mar': 2, 'ark': 2, 'rku': 2, 'kup': 2, 'up\n': 1, 'p\ni': 1, '\nim': 1, 't s': 1, ' si': 3, 'six': 3, 'ix\n': 1, 'x\nf': 1, 'm s': 1, 'ix.': 2, 'x.m': 1, '.mo': 1, 'mov': 1, 'ove': 2, 'ves': 1, 'es ': 5, 's i': 2, 't r': 1, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge\n': 3, 'e\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 2, 'las': 5, 'ass': 2, 'ss ': 2, 's P': 1, ' Pa': 3, 'Pag': 3, 'agi': 7, 'gin': 7, 'ina': 7, 'nat': 7, 'ati': 7, 'tio': 7, 'ion': 7, 'on(': 3, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 15, ':\n ': 18, '  ""': 7, ' """"': 7, '""""I': 2, '""In': 1, 'Int': 1, 'nte': 2, 'ter': 4, 'ern': 1, 'rna': 1, 'nal': 1, 'al ': 2, 'l h': 1, ' he': 1, 'hel': 1, 'elp': 1, 'lpe': 1, 'per': 15, 'er ': 5, 'r c': 1, ' cl': 1, 's f': 1, 'r p': 1, ' pa': 12, 'pag': 36, 'ons': 1, 'ns""': 1, 's""""': 2, '""\n\n': 1, '  d': 13, 'def': 13, 'ef ': 13, 'f _': 3, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 3, '_(s': 3, '(se': 20, 'sel': 48, 'elf': 48, 'lf,': 2, 'f, ': 2, ', b': 1, ' bu': 2, 'bui': 6, 'uil': 6, 'ild': 6, 'lde': 6, 'der': 7, 'er,': 3, 'r, ': 3, ', e': 1, ' en': 2, 'ent': 12, 'ntr': 8, 'tri': 7, 'rie': 7, 'es,': 3, 's, ': 3, ', p': 2, 'age': 32, 'ge,': 4, 'e, ': 4, ' pe': 2, 'er_': 10, 'r_p': 9, '_pa': 10, ', u': 1, ' ur': 2, 'url': 5, 'rl_': 5, 'l_k': 5, '_ke': 5, 'key': 5, 'ey)': 3, 'y):': 1, '  s': 9, 'lf.': 33, 'f.b': 4, '.bu': 4, 'r =': 1, ' = ': 7, '= b': 1, 'er\n': 1, 'r\n ': 2, 'f.e': 5, '.en': 5, 's =': 1, '= e': 1, 'es\n': 2, 'f.p': 20, '.pa': 14, 'ge ': 17, 'e =': 2, '= p': 2, 'e\n ': 3, '.pe': 6, 'f.u': 3, '.ur': 3, 'ey ': 1, 'y =': 1, '= u': 1, 'ey\n': 1, 'y\n\n': 1, '  @': 6, ' @p': 6, '@pr': 6, 'pro': 7, 'rop': 6, 'ope': 6, 'ert': 6, 'rty': 6, 'ty\n': 6, 'y\n ': 6, 'f t': 3, ' to': 1, 'tot': 2, 'ota': 2, 'tal': 2, 'al(': 1, 'l(s': 2, 'lf)': 12, 'f):': 11, ' re': 12, 'ret': 11, 'etu': 11, 'urn': 11, 'rn ': 11, 'n l': 1, ' le': 5, 'len': 1, 'en(': 1, 'n(s': 3, 'es)': 1, 's)\n': 1, ')\n\n': 5, 'f p': 2, 'ges': 5, 'es(': 2, 's(s': 2, 'n i': 1, ' in': 3, 'int': 1, 'nt(': 1, 't(c': 1, '(ce': 1, 'il(': 1, 'f.t': 1, '.to': 1, 'l /': 1, ' / ': 1, '/ f': 1, ' fl': 1, 'flo': 1, 'loa': 1, 'oat': 1, 'at(': 1, 't(s': 3, 'ge)': 1, 'e))': 1, ')))': 1, '))\n': 2, 'f g': 3, ' ge': 3, 'get': 3, 'et_': 3, 't_p': 1, '_pr': 2, 'pre': 6, 'rev': 5, 'ev(': 2, 'v(s': 2, 'n P': 2, 'e -': 4, ' - ': 6, '- 1': 4, ' 1,': 2, '1,\n': 2, ',\n ': 3, 'y)\n': 2, ' pr': 4, 'ev_': 1, 'v_n': 1, '_nu': 2, 'num': 13, 'um(': 2, 'm(s': 2, '""""N': 2, '""Nu': 2, 'Num': 2, 'umb': 5, 'mbe': 5, 'ber': 5, 'r o': 2, ' of': 2, 'of ': 2, ' th': 7, 'the': 6, 'he ': 7, 'e p': 4, 'evi': 2, 'vio': 2, 's p': 2, 'ge.': 1, 'e.""': 1, '.""""': 2, 'n s': 6, ' 1\n': 3, '1\n\n': 3, 'f h': 2, ' ha': 2, 'has': 2, 'as_': 2, 's_p': 1, '""""T': 2, '""Tr': 2, 'Tru': 2, 'rue': 2, 'ue ': 2, 'e i': 2, ' if': 4, 'if ': 4, 'f a': 2, ' a ': 2, 'a p': 1, 'e e': 2, ' ex': 2, 'exi': 2, 'xis': 2, 'ist': 2, 'sts': 2, 'ts""': 1, 'e >': 1, ' > ': 3, '> 1': 1, 't_n': 2, '_ne': 2, 'nex': 5, 'ext': 6, 'xt(': 2, 'e +': 3, ' + ': 5, '+ 1': 4, 's_n': 1, 'a n': 1, ' ne': 3, 'xt ': 2, 't p': 2, 'ts.': 1, 's.""': 1, 'e <': 1, ' < ': 2, '< s': 2, 's\n\n': 1, 'f n': 2, 'xt_': 2, 'e n': 3, 'ge""': 1, 'e""""': 1, 't_s': 1, '_sl': 1, 'sli': 1, 'ce(': 1, 'e(s': 2, 'es[': 1, 's[(': 1, '[(s': 1, ' 1)': 2, '1) ': 1, ') *': 1, ' * ': 2, '* s': 2, 'ge:': 2, 'e:\n': 2, 'e *': 1, 'ge]': 1, 'e]\n': 1, ']\n\n': 1, 'f i': 1, ' it': 1, 'ite': 1, ', l': 2, 'lef': 4, 'eft': 4, 'ft_': 4, 't_e': 4, '_ed': 4, 'edg': 4, 'dge': 4, 'ge=': 2, 'e=2': 2, '=2,': 2, '2, ': 1, 't_c': 4, '_cu': 4, 'cur': 4, 'urr': 4, 'rre': 4, 'ren': 5, 'nt=': 2, 't=2': 1, '2,\n': 1, ' ri': 4, 'ht_': 4, 't=5': 1, '=5,': 1, '5, ': 1, ', r': 1, '=2)': 1, '2):': 1, '""It': 1, 'Ite': 1, 'era': 1, 'rat': 1, 'ate': 2, 'tes': 1, 's o': 1, ' ov': 1, 'ver': 1, 'r t': 1, ' nu': 10, 'ers': 4, 'rs ': 4, 'n t': 1, 'on.': 2, 'n. ': 1, '.  ': 2, '  T': 1, ' Th': 1, 'The': 1, 'e f': 1, 'fou': 1, 'our': 1, 'ur\n': 1, '  p': 1, 'par': 1, 'ara': 1, 'ram': 1, 'ame': 1, 'met': 1, 'ete': 1, 's c': 1, 'con': 1, 'ont': 1, 'tro': 1, 'rol': 1, 'ol ': 1, 'l t': 1, 'e t': 1, 'thr': 1, 'hre': 1, 'res': 2, 'esh': 1, 'sho': 2, 'hol': 1, 'old': 1, 'lds': 1, 'ds ': 1, 's h': 1, ' ho': 1, 'how': 1, 'ow ': 1, 'w m': 1, 'man': 1, 'any': 1, 'ny ': 1, 'y n': 1, 's s': 1, ' sh': 1, 'hou': 1, 'oul': 1, 'uld': 1, 'ld ': 3, 'd b': 1, ' be': 1, 'be ': 1, 'rod': 1, 'odu': 1, 'duc': 1, 'uce': 1, 'ced': 1, 'ed\n': 1, 'd\n ': 1, '  f': 2, ' fr': 1, 'm t': 1, 'e s': 1, 'sid': 1, 'ide': 1, 'des': 1, 's. ': 1, '  S': 1, ' Sk': 1, 'Ski': 1, 'kip': 1, 'ipp': 1, 'ppe': 1, 'ped': 1, 'ed ': 2, 'd p': 1, 's a': 1, ' ar': 1, 'are': 1, 'e r': 1, 'rep': 1, 'epr': 1, 'ese': 1, 'sen': 1, 'ted': 1, 'd a': 1, ' as': 1, 'as ': 1, 's `': 1, ' `N': 1, '`No': 1, 'Non': 2, 'one': 2, 'ne`': 1, 'e`.': 1, '`.\n': 1, '  l': 2, ' la': 3, 'ast': 3, 'st ': 3, 't =': 2, '= 0': 1, ' 0\n': 1, '0\n ': 1, 'r n': 1, 'um ': 5, 'm i': 1, 'n r': 1, 'ge(': 1, 'e(1': 1, '(1,': 1, '1, ': 1, 's +': 1, '1):': 1, '  i': 2, 'm <': 2, ' <=': 1, '<= ': 1, '= l': 1, 'e o': 1, ' or': 2, 'r \\': 2, ' \\\n': 3, '\\\n ': 3, '  (': 1, ' (n': 1, '(nu': 1, 'm >': 2, '> s': 2, '- l': 1, 'nt ': 1, 't -': 1, ' 1 ': 2, '1 a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd \\': 1, '  n': 2, '+ r': 1, 'nt)': 1, 't) ': 1, ') o': 1, 's -': 1, '- r': 1, 'f l': 1, 't +': 1, '1 !': 1, ' !=': 1, '!= ': 1, '= n': 2, 'um:': 1, 'm:\n': 1, '  y': 2, ' yi': 2, 'yie': 2, 'iel': 2, 'eld': 2, 'd N': 1, ' No': 1, 'ne\n': 1, 'd n': 1, 'um\n': 2, 'm\n ': 1, 'm\n\n': 1, '__s': 1, '_st': 1, 'str': 1, 'tr_': 1, 'r__': 1, 'r.r': 1, '.re': 1, 'end': 1, 'nde': 1, 'r_t': 1, '_te': 1, 'tem': 1, 'emp': 1, 'mpl': 1, 'pla': 1, 'lat': 1, 'te(': 1, ""e('"": 1, ""('_"": 1, ""'_p"": 1, 'n.h': 1, '.ht': 1, 'htm': 2, 'tml': 2, ""ml'"": 1, ""l',"": 1, ""', "": 1, ', {': 1, ' {\n': 1, '{\n ': 1, ""  '"": 1, "" 'p"": 1, ""'pa"": 1, ""on'"": 1, ""n':"": 1, ""': "": 1, ':  ': 1, 'lf\n': 1, 'f\n ': 1, '  }': 1, ' })': 1, '})\n': 1, '__h': 1, '_ht': 1, 'ml_': 1, 'l__': 1, 'n M': 1, 'up(': 1, 'p(s': 1, '(si': 1, 'x.t': 1, '.te': 1, 'tex': 1, 't_t': 1, '_ty': 1, 'typ': 1, 'ype': 1, 'pe(': 1, 'f))': 1}"
David Beazley,apachelog.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 4, 'apachelog.py': 1, 'parse': 1, 'an': 1, 'apache': 1, 'log': 6, 'file': 1, 'into': 1, 'a': 1, 'sequence': 1, 'of': 1, 'dictionaries': 1, 'from': 2, 'fieldmap': 1, 'import': 3, 'field_map': 1, 're': 1, 'logpats': 1, '=': 10, ""r'(\\s+)"": 1, '(\\s+)': 4, '\\[(.*?)\\]': 1, ""'"": 1, '\\': 1, 'r\'""(\\s+)': 1, '(\\s+)""': 1, ""(\\s+)'"": 1, 'logpat': 1, 're.compile(logpats)': 1, 'def': 1, 'apache_log(lines):': 1, 'groups': 2, '(logpat.match(line)': 1, 'for': 4, 'line': 1, 'in': 4, 'lines)': 1, 'tuples': 1, '(g.groups()': 1, 'g': 1, 'if': 3, 'g)': 1, 'colnames': 1, ""('host','referrer','user','datetime',"": 1, ""'method',"": 1, ""'request','proto','status','bytes')"": 1, '(dict(zip(colnames,t))': 1, 't': 1, 'tuples)': 1, 'field_map(log,""status"",int)': 1, 'field_map(log,""bytes"",': 1, 'lambda': 1, 's:': 1, 'int(s)': 1, 's': 1, '!=': 1, ""'-'"": 1, 'else': 1, '0)': 1, 'return': 1, 'example': 1, 'use:': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'linesdir': 1, 'lines_from_dir': 1, 'lines': 1, 'lines_from_dir(""access-log*"",""www"")': 1, 'apache_log(lines)': 1, 'r': 1, 'log:': 1, 'print(r)': 1}","{'# a': 1, ' ap': 4, 'apa': 4, 'pac': 4, 'ach': 4, 'che': 4, 'hel': 1, 'elo': 1, 'log': 17, 'og.': 1, 'g.p': 1, '.py': 1, 'py\n': 1, 'y\n#': 1, '\n#\n': 1, '#\n#': 1, '\n# ': 2, '# P': 1, ' Pa': 1, 'Par': 1, 'ars': 1, 'rse': 1, 'se ': 2, 'e a': 1, ' an': 1, 'an ': 1, 'n a': 1, 'he ': 1, 'e l': 1, ' lo': 7, 'og ': 5, 'g f': 1, ' fi': 5, 'fil': 1, 'ile': 2, 'le ': 2, 'e i': 2, ' in': 6, 'int': 4, 'nto': 1, 'to ': 1, 'o a': 1, ' a ': 1, 'a s': 2, ' se': 1, 'seq': 1, 'equ': 2, 'que': 2, 'uen': 1, 'enc': 1, 'nce': 1, 'ce ': 1, 'e o': 1, ' of': 1, 'of ': 1, 'f d': 1, ' di': 1, 'dic': 2, 'ict': 2, 'cti': 1, 'tio': 1, 'ion': 1, 'ona': 1, 'nar': 1, 'ari': 1, 'rie': 1, 'ies': 1, 'es\n': 1, 's\n\n': 1, '\n\nf': 1, '\nfr': 1, 'fro': 4, 'rom': 4, 'om ': 2, 'm f': 1, 'fie': 4, 'iel': 4, 'eld': 4, 'ldm': 1, 'dma': 1, 'map': 4, 'ap ': 1, 'p i': 1, ' im': 2, 'imp': 3, 'mpo': 3, 'por': 3, 'ort': 3, 'rt ': 3, 't f': 1, 'ld_': 3, 'd_m': 3, '_ma': 4, 'ap\n': 1, 'p\n\n': 1, '\n\ni': 2, '\nim': 1, 't r': 1, ' re': 3, 're\n': 1, 'e\n\n': 1, '\n\nl': 2, '\nlo': 2, 'ogp': 4, 'gpa': 4, 'pat': 4, 'ats': 2, 'ts ': 1, 's  ': 1, '  =': 5, ' = ': 10, '= r': 2, "" r'"": 2, ""r'("": 1, ""'(\\"": 1, '(\\S': 8, '\\S+': 8, 'S+)': 8, '+) ': 6, ') (': 5, ' (\\': 6, ') \\': 1, ' \\[': 1, '\\[(': 1, '[(.': 1, '(.*': 1, '.*?': 1, '*?)': 1, '?)\\': 1, ')\\]': 1, '\\] ': 1, ""] '"": 1, "" ' "": 1, ""' \\"": 1, ' \\\n': 1, '\\\n ': 1, '\n  ': 16, '   ': 89, '  r': 2, 'r\'""': 1, '\'""(': 1, '""(\\': 1, '+)""': 1, ')"" ': 1, '"" (': 1, ""+)'"": 1, "")'\n"": 1, ""'\n\n"": 1, 'at ': 1, 't  ': 1, 're.': 1, 'e.c': 1, '.co': 1, 'com': 1, 'omp': 1, 'mpi': 1, 'pil': 1, 'le(': 1, 'e(l': 1, '(lo': 4, 'ts)': 1, 's)\n': 4, ')\n\n': 4, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f a': 1, 'he_': 2, 'e_l': 2, '_lo': 2, 'og(': 2, 'g(l': 2, '(li': 3, 'lin': 9, 'ine': 9, 'nes': 7, 'es)': 4, 's):': 1, '):\n': 1, ':\n ': 3, '  g': 1, ' gr': 2, 'gro': 3, 'rou': 3, 'oup': 3, 'ups': 3, 'ps ': 2, 's =': 4, '= (': 4, ' (l': 1, 'at.': 1, 't.m': 1, '.ma': 1, 'mat': 1, 'atc': 1, 'tch': 1, 'ch(': 1, 'h(l': 1, 'ne)': 1, 'e) ': 1, ') f': 3, ' fo': 4, 'for': 4, 'or ': 4, 'r l': 1, ' li': 6, 'ne ': 1, 'in ': 4, 'n l': 3, ')\n ': 6, '  t': 1, ' tu': 2, 'tup': 2, 'upl': 2, 'ple': 3, 'les': 2, 'es ': 3, ' (g': 1, '(g.': 1, 'g.g': 1, '.gr': 1, 'ps(': 1, 's()': 1, '() ': 1, 'r g': 1, ' g ': 1, 'g i': 1, 'n g': 1, 's i': 1, ' if': 2, 'if ': 3, 'f g': 1, ' g)': 1, 'g)\n': 1, '  \n': 1, ' \n ': 1, '  c': 1, ' co': 1, 'col': 2, 'oln': 2, 'lna': 2, 'nam': 3, 'ame': 3, 'mes': 2, "" ('"": 1, ""('h"": 1, ""'ho"": 1, 'hos': 1, 'ost': 1, ""st'"": 2, ""t',"": 2, ""','"": 6, "",'r"": 1, ""'re"": 2, 'ref': 1, 'efe': 1, 'fer': 1, 'err': 1, 'rre': 1, 'rer': 1, ""er'"": 2, ""r',"": 2, "",'u"": 1, ""'us"": 1, 'use': 2, 'ser': 1, "",'d"": 1, ""'da"": 1, 'dat': 1, 'ate': 1, 'tet': 1, 'eti': 1, 'tim': 1, 'ime': 1, ""me'"": 1, ""e',"": 1, ""',\n"": 1, ',\n ': 2, ""  '"": 1, "" 'm"": 1, ""'me"": 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, ""od'"": 1, ""d',"": 1, ""', "": 1, "", '"": 1, "" 'r"": 1, 'req': 1, 'ues': 1, 'est': 1, "",'p"": 1, ""'pr"": 1, 'pro': 1, 'rot': 1, 'oto': 1, ""to'"": 1, ""o',"": 1, "",'s"": 1, ""'st"": 1, 'sta': 2, 'tat': 2, 'atu': 2, 'tus': 2, ""us'"": 1, ""s',"": 1, "",'b"": 1, ""'by"": 1, 'byt': 2, 'yte': 2, 'tes': 2, ""es'"": 1, ""s')"": 1, ""')\n"": 1, '\n\n ': 2, '  l': 6, 'g  ': 3, ' (d': 1, '(di': 1, 'ct(': 1, 't(z': 1, '(zi': 1, 'zip': 1, 'ip(': 1, 'p(c': 1, '(co': 1, 'es,': 1, 's,t': 1, ',t)': 1, 't))': 1, ')) ': 1, 'r t': 1, ' t ': 1, 't i': 1, 'n t': 1, '= f': 2, 'ap(': 2, 'p(l': 2, 'og,': 2, 'g,""': 2, ',""s': 1, '""st': 1, 'us""': 1, 's"",': 2, '"",i': 1, ',in': 1, 'nt)': 1, 't)\n': 1, ',""b': 1, '""by': 1, 'es""': 1, '"",\n': 1, ' la': 1, 'lam': 1, 'amb': 1, 'mbd': 1, 'bda': 1, 'da ': 1, ' s:': 1, 's: ': 1, ': i': 1, 'nt(': 2, 't(s': 1, '(s)': 1, 's) ': 1, ') i': 1, 'f s': 1, ' s ': 1, 's !': 1, ' !=': 1, '!= ': 1, ""= '"": 2, "" '-"": 1, ""'-'"": 1, ""-' "": 1, ""' e"": 1, ' el': 1, 'els': 1, 'lse': 1, 'e 0': 1, ' 0)': 1, '0)\n': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'og\n': 1, 'g\n\n': 1, '\n\n#': 1, '# E': 1, ' Ex': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'e u': 1, ' us': 1, 'se:': 1, 'e:\n': 1, ':\n\n': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, "" '_"": 1, ""'__"": 1, '__m': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  f': 2, ' fr': 1, 'm l': 1, 'esd': 1, 'sdi': 1, 'dir': 3, 'ir ': 1, 'r i': 2, 't l': 1, 'es_': 2, 's_f': 2, '_fr': 2, 'om_': 2, 'm_d': 2, '_di': 2, 'ir\n': 1, 'r\n ': 1, '= l': 1, 'ir(': 1, 'r(""': 1, '(""a': 1, '""ac': 1, 'acc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss-': 1, 's-l': 1, '-lo': 1, 'og*': 1, 'g*""': 1, '*"",': 1, '"",""': 1, ',""w': 1, '""ww': 1, 'www': 1, 'ww""': 1, 'w"")': 1, '"")\n': 1, 'g =': 1, '= a': 1, 'r r': 1, ' r ': 1, 'og:': 1, 'g:\n': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 't(r': 1, '(r)': 1, 'r)\n': 1}"
David Beazley,broadcast.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 4, 'broadcast.py': 1, 'broadcast': 1, 'a': 2, 'generator': 1, 'source': 1, 'to': 1, 'collection': 1, 'of': 1, 'consumers': 1, 'def': 2, 'broadcast(source,': 1, 'consumers):': 1, 'for': 2, 'item': 1, 'in': 2, 'source:': 1, 'c': 1, 'consumers:': 1, 'c.send(item)': 1, 'example': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'class': 1, 'consumer(object):': 1, 'send(self,item):': 1, 'print(self,': 1, '""got"",': 1, 'item)': 1, 'c1': 1, '=': 4, 'consumer()': 3, 'c2': 1, 'c3': 1, 'from': 1, 'follow': 2, 'import': 1, 'lines': 1, 'follow(open(""run/foo/access-log""))': 1, 'broadcast(lines,[c1,c2,c3])': 1}","{'# b': 1, ' br': 3, 'bro': 3, 'roa': 4, 'oad': 4, 'adc': 4, 'dca': 4, 'cas': 4, 'ast': 4, 'st.': 1, 't.p': 1, '.py': 1, 'py\n': 1, 'y\n#': 1, '\n#\n': 1, '#\n#': 1, '\n# ': 2, '# B': 1, ' Br': 1, 'Bro': 1, 'st ': 1, 't a': 1, ' a ': 2, 'a g': 1, ' ge': 1, 'gen': 1, 'ene': 1, 'ner': 1, 'era': 1, 'rat': 1, 'ato': 1, 'tor': 1, 'or ': 3, 'r s': 1, ' so': 2, 'sou': 3, 'our': 3, 'urc': 3, 'rce': 3, 'ce ': 1, 'e t': 1, ' to': 1, 'to ': 1, 'o a': 1, 'a c': 1, ' co': 4, 'col': 1, 'oll': 4, 'lle': 1, 'lec': 1, 'ect': 2, 'cti': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n o': 1, ' of': 1, 'of ': 1, 'f c': 1, 'con': 3, 'ons': 7, 'nsu': 7, 'sum': 7, 'ume': 7, 'mer': 7, 'ers': 3, 'rs\n': 1, 's\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 2, 'ef ': 2, 'f b': 1, 'st(': 2, 't(s': 2, '(so': 1, 'ce,': 1, 'e, ': 1, ', c': 1, 'rs)': 1, 's):': 1, '):\n': 3, ':\n ': 5, '\n  ': 12, '   ': 48, '  f': 3, ' fo': 5, 'for': 2, 'r i': 1, ' it': 2, 'ite': 4, 'tem': 4, 'em ': 1, 'm i': 1, ' in': 2, 'in ': 2, 'n s': 1, 'ce:': 1, 'e:\n': 1, 'r c': 1, ' c ': 1, 'c i': 1, 'n c': 1, 'rs:': 1, 's:\n': 1, '  c': 5, ' c.': 1, 'c.s': 1, '.se': 1, 'sen': 2, 'end': 2, 'nd(': 2, 'd(i': 1, '(it': 1, 'em)': 3, 'm)\n': 2, ')\n\n': 3, '\n\n\n': 1, '\n\n#': 1, '# E': 1, ' Ex': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le\n': 1, 'e\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, ':\n\n': 1, '\n\n ': 3, ' cl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's C': 1, ' Co': 4, 'Con': 4, 'er(': 4, 'r(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ct)': 1, 't):': 1, '  d': 1, ' de': 1, 'f s': 1, ' se': 1, 'd(s': 1, '(se': 2, 'sel': 2, 'elf': 2, 'lf,': 2, 'f,i': 1, ',it': 1, 'm):': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 'f, ': 1, ', ""': 1, ' ""g': 1, '""go': 1, 'got': 1, 'ot""': 1, 't"",': 1, '"", ': 1, ', i': 1, ' c1': 1, 'c1 ': 1, '1 =': 1, ' = ': 4, '= C': 3, 'r()': 3, '()\n': 3, ')\n ': 3, ' c2': 1, 'c2 ': 1, '2 =': 1, ' c3': 1, 'c3 ': 1, '3 =': 1, ' fr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm f': 1, 'fol': 3, 'llo': 3, 'low': 3, 'ow ': 1, 'w i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't f': 1, 'ow\n': 1, 'w\n ': 1, '  l': 1, ' li': 1, 'lin': 2, 'ine': 2, 'nes': 2, 'es ': 1, 's =': 1, '= f': 1, 'ow(': 1, 'w(o': 1, '(op': 1, 'ope': 1, 'pen': 1, 'en(': 1, 'n(""': 1, '(""r': 1, '""ru': 1, 'run': 1, 'un/': 1, 'n/f': 1, '/fo': 1, 'foo': 1, 'oo/': 1, 'o/a': 1, '/ac': 1, 'acc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss-': 1, 's-l': 1, '-lo': 1, 'log': 1, 'og""': 1, 'g"")': 1, '""))': 1, '))\n': 1, '  b': 1, 't(l': 1, '(li': 1, 'es,': 1, 's,[': 1, ',[c': 1, '[c1': 1, 'c1,': 1, '1,c': 1, ',c2': 1, 'c2,': 1, '2,c': 1, ',c3': 1, 'c3]': 1, '3])': 1, '])\n': 1}"
David Beazley,bytesgen.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 4, 'bytesgen.py': 1, 'an': 1, 'example': 1, 'of': 1, 'chaining': 1, 'together': 1, 'different': 1, 'generators': 1, 'into': 1, 'a': 1, 'processing': 1, 'pipeline.': 1, 'from': 4, 'genfind': 1, 'import': 4, '*': 4, 'genopen': 1, 'gencat': 1, 'gengrep': 1, 'pat': 1, '=': 7, ""r'ply-.*\\.gz'"": 1, 'logdir': 1, ""'www'"": 1, 'filenames': 1, 'gen_find(""access-log*"",logdir)': 1, 'logfiles': 1, 'gen_open(filenames)': 1, 'loglines': 1, 'gen_cat(logfiles)': 1, 'patlines': 1, 'gen_grep(pat,loglines)': 1, 'bytecol': 2, '(line.rsplit(none,1)[1]': 1, 'for': 2, 'line': 1, 'in': 2, 'patlines)': 1, 'bytes_sent=': 1, '(int(x)': 1, 'x': 2, 'if': 1, '!=': 1, ""'-')"": 1, 'print(""total"",': 1, 'sum(bytes_sent))': 1}","{'# b': 1, ' by': 2, 'byt': 5, 'yte': 5, 'tes': 3, 'esg': 1, 'sge': 1, 'gen': 10, 'en.': 1, 'n.p': 1, '.py': 1, 'py\n': 1, 'y\n#': 1, '\n#\n': 1, '#\n#': 1, '\n# ': 2, '# A': 1, ' An': 1, 'An ': 1, 'n e': 1, ' ex': 1, 'exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le ': 1, 'e o': 1, ' of': 1, 'of ': 1, 'f c': 1, ' ch': 1, 'cha': 1, 'hai': 1, 'ain': 1, 'ini': 1, 'nin': 1, 'ing': 2, 'ng ': 1, 'g t': 1, ' to': 1, 'tog': 1, 'oge': 1, 'get': 1, 'eth': 1, 'the': 1, 'her': 1, 'er ': 1, 'r d': 1, ' di': 1, 'dif': 1, 'iff': 1, 'ffe': 1, 'fer': 1, 'ere': 1, 'ren': 1, 'ent': 3, 'nt ': 1, 't g': 1, ' ge': 9, 'ene': 1, 'ner': 1, 'era': 1, 'rat': 1, 'ato': 1, 'tor': 1, 'ors': 1, 'rs ': 1, 's i': 1, ' in': 3, 'int': 3, 'nto': 1, 'to ': 1, 'o a': 1, ' a ': 1, 'a p': 1, ' pr': 1, 'pro': 1, 'roc': 1, 'oce': 1, 'ces': 2, 'ess': 2, 'ssi': 1, 'sin': 1, 'ng\n': 1, 'g\n#': 1, '# p': 1, ' pi': 1, 'pip': 1, 'ipe': 1, 'pel': 1, 'eli': 1, 'lin': 7, 'ine': 7, 'ne.': 2, 'e. ': 1, '.  ': 1, '   ': 5, '  \n': 1, ' \n\n': 1, '\n\nf': 2, '\nfr': 4, 'fro': 4, 'rom': 4, 'om ': 4, 'm g': 4, 'enf': 1, 'nfi': 1, 'fin': 2, 'ind': 2, 'nd ': 1, 'd i': 1, ' im': 4, 'imp': 4, 'mpo': 4, 'por': 4, 'ort': 4, 'rt ': 4, 't *': 4, ' *\n': 4, '*\nf': 3, 'eno': 1, 'nop': 1, 'ope': 2, 'pen': 2, 'en ': 1, 'n i': 1, 'enc': 1, 'nca': 1, 'cat': 2, 'at ': 2, 't i': 1, 'eng': 1, 'ngr': 1, 'gre': 2, 'rep': 2, 'ep ': 1, 'p i': 1, '*\n\n': 1, '\n\np': 2, '\npa': 2, 'pat': 4, 't  ': 1, '  =': 5, ' = ': 7, '= r': 1, "" r'"": 1, ""r'p"": 1, ""'pl"": 1, 'ply': 1, 'ly-': 1, 'y-.': 1, '-.*': 1, '.*\\': 1, '*\\.': 1, '\\.g': 1, '.gz': 1, ""gz'"": 1, ""z'\n"": 1, ""'\nl"": 1, '\nlo': 3, 'log': 7, 'ogd': 2, 'gdi': 2, 'dir': 2, 'ir ': 1, 'r =': 1, ""= '"": 2, "" 'w"": 1, ""'ww"": 1, 'www': 1, ""ww'"": 1, ""w'\n"": 1, ""'\n\n"": 1, '\nfi': 1, 'fil': 4, 'ile': 4, 'len': 2, 'ena': 2, 'nam': 2, 'ame': 2, 'mes': 2, 'es ': 4, 's =': 1, '= g': 4, 'en_': 4, 'n_f': 1, '_fi': 1, 'nd(': 1, 'd(""': 1, '(""a': 1, '""ac': 1, 'acc': 1, 'cce': 1, 'ss-': 1, 's-l': 1, '-lo': 1, 'og*': 1, 'g*""': 1, '*"",': 1, '"",l': 1, ',lo': 2, 'ir)': 1, 'r)\n': 1, ')\nl': 2, 'ogf': 2, 'gfi': 2, 'les': 2, 's  ': 3, 'n_o': 1, '_op': 1, 'en(': 1, 'n(f': 1, '(fi': 1, 'es)': 4, 's)\n': 4, 'ogl': 2, 'gli': 2, 'nes': 4, 'n_c': 1, '_ca': 1, 'at(': 1, 't(l': 1, '(lo': 1, ')\np': 1, 'atl': 2, 'tli': 2, 'n_g': 1, '_gr': 1, 'ep(': 1, 'p(p': 1, '(pa': 1, 'at,': 1, 't,l': 1, ')\nb': 2, '\nby': 2, 'tec': 2, 'eco': 2, 'col': 2, 'ol ': 2, 'l  ': 1, '= (': 2, ' (l': 1, '(li': 1, 'e.r': 1, '.rs': 1, 'rsp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, 't(N': 1, '(No': 1, 'Non': 1, 'one': 1, 'ne,': 1, 'e,1': 1, ',1)': 1, '1)[': 1, ')[1': 1, '[1]': 1, '1] ': 1, '] f': 1, ' fo': 2, 'for': 2, 'or ': 2, 'r l': 1, ' li': 1, 'ne ': 1, 'e i': 1, 'in ': 2, 'n p': 1, ' pa': 1, 'es_': 2, 's_s': 2, '_se': 2, 'sen': 2, 'nt=': 1, 't= ': 1, ' (i': 1, '(in': 1, 'nt(': 2, 't(x': 1, '(x)': 1, 'x) ': 1, ') f': 1, 'r x': 1, ' x ': 2, 'x i': 1, 'n b': 1, 'l i': 1, ' if': 1, 'if ': 1, 'f x': 1, 'x !': 1, ' !=': 1, '!= ': 1, "" '-"": 1, ""'-'"": 1, ""-')"": 1, ""')\n"": 1, ')\n\n': 1, '\npr': 1, 'pri': 1, 'rin': 1, 't(""': 1, '(""T': 1, '""To': 1, 'Tot': 1, 'ota': 1, 'tal': 1, 'al""': 1, 'l"",': 1, '"", ': 1, ', s': 1, ' su': 1, 'sum': 1, 'um(': 1, 'm(b': 1, '(by': 1, 'nt)': 1, 't))': 1, '))\n': 1}"
David Beazley,consumer.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 4, 'consumer.py': 1, 'consumer': 1, 'decorator': 1, 'and': 1, 'co-routine': 1, 'example': 2, 'def': 3, 'consumer(func):': 1, 'start(*args,**kwargs):': 1, 'c': 2, '=': 3, 'func(*args,**kwargs)': 1, 'c.send(none)': 1, 'return': 2, 'start': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, '@consumer': 1, 'recv_count():': 1, 'try:': 1, 'while': 1, 'true:': 1, 'n': 1, 'yield': 1, 'print(""t-minus"",': 1, 'n)': 1, 'except': 1, 'generatorexit:': 1, 'print(""kaboom!"")': 1, 'r': 1, 'recv_count()': 1, 'for': 1, 'i': 1, 'in': 1, 'range(5,0,-1):': 1, 'r.send(i)': 1, 'r.close()': 1}","{'# c': 2, ' co': 4, 'con': 4, 'ons': 4, 'nsu': 4, 'sum': 4, 'ume': 4, 'mer': 4, 'er.': 1, 'r.p': 1, '.py': 1, 'py\n': 1, 'y\n#': 1, '\n#\n': 1, '#\n#': 1, '\n# ': 2, 'er ': 1, 'r d': 1, ' de': 3, 'dec': 1, 'eco': 1, 'cor': 1, 'ora': 1, 'rat': 2, 'ato': 2, 'tor': 2, 'or ': 2, 'r a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd c': 1, 'co-': 1, 'o-r': 1, '-ro': 1, 'rou': 1, 'out': 1, 'uti': 1, 'tin': 1, 'ine': 1, 'ne ': 1, 'e e': 1, ' ex': 2, 'exa': 1, 'xam': 2, 'amp': 2, 'mpl': 2, 'ple': 2, 'le\n': 2, 'e\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 3, 'ef ': 3, 'f c': 1, 'er(': 1, 'r(f': 1, '(fu': 1, 'fun': 2, 'unc': 2, 'nc)': 1, 'c):': 1, '):\n': 4, ':\n ': 7, '\n  ': 17, '   ': 98, '  d': 2, 'f s': 1, ' st': 2, 'sta': 2, 'tar': 2, 'art': 2, 'rt(': 1, 't(*': 1, '(*a': 2, '*ar': 2, 'arg': 4, 'rgs': 4, 'gs,': 2, 's,*': 2, ',**': 2, '**k': 2, '*kw': 2, 'kwa': 2, 'war': 2, 'gs)': 2, 's):': 1, '  c': 2, ' c ': 1, 'c =': 1, ' = ': 3, '= f': 1, ' fu': 1, 'nc(': 1, 'c(*': 1, 's)\n': 1, ')\n ': 4, ' c.': 1, 'c.s': 1, '.se': 2, 'sen': 2, 'end': 2, 'nd(': 2, 'd(N': 1, '(No': 1, 'Non': 1, 'one': 1, 'ne)': 1, 'e)\n': 1, '  r': 5, ' re': 4, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n c': 1, ' c\n': 1, 'c\n ': 1, 'n s': 1, 'rt\n': 1, 't\n\n': 1, '\n\n#': 1, '# E': 1, ' Ex': 1, 'Exa': 1, 'e\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, ':\n\n': 1, '\n\n ': 3, '  @': 1, ' @c': 1, '@co': 1, 'er\n': 1, 'r\n ': 1, 'f r': 1, 'rec': 2, 'ecv': 2, 'cv_': 2, 'v_c': 2, '_co': 2, 'cou': 2, 'oun': 2, 'unt': 2, 'nt(': 4, 't()': 2, '():': 1, '  t': 1, ' tr': 1, 'try': 1, 'ry:': 1, 'y:\n': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue:': 1, 'e:\n': 1, '  n': 1, ' n ': 1, 'n =': 1, '= y': 1, ' yi': 1, 'yie': 1, 'iel': 1, 'eld': 1, 'ld\n': 1, 'd\n ': 1, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 2, 'int': 2, 't(""': 2, '(""T': 1, '""T-': 1, 'T-m': 1, '-mi': 1, 'min': 1, 'inu': 1, 'nus': 1, 'us""': 1, 's"",': 1, '"", ': 1, ', n': 1, ' n)': 1, 'n)\n': 1, '  e': 1, 'exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pt ': 1, 't G': 1, ' Ge': 1, 'Gen': 1, 'ene': 1, 'ner': 1, 'era': 1, 'orE': 1, 'rEx': 1, 'Exi': 1, 'xit': 1, 'it:': 1, 't:\n': 1, '(""K': 1, '""Ka': 1, 'Kab': 1, 'abo': 1, 'boo': 1, 'oom': 1, 'om!': 1, 'm!""': 1, '!"")': 1, '"")\n': 1, ')\n\n': 2, ' r ': 1, 'r =': 1, '= r': 1, '()\n': 2, '  f': 1, ' fo': 1, 'for': 1, 'r i': 1, ' i ': 1, 'i i': 1, ' in': 1, 'in ': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(5': 1, '(5,': 1, '5,0': 1, ',0,': 1, '0,-': 1, ',-1': 1, '-1)': 1, '1):': 1, ' r.': 2, 'r.s': 1, 'd(i': 1, '(i)': 1, 'i)\n': 1, 'r.c': 1, '.cl': 1, 'clo': 1, 'los': 1, 'ose': 1, 'se(': 1, 'e()': 1}"
David Beazley,downloads.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 3, 'downloads.py': 1, 'find': 1, 'out': 1, 'how': 1, 'many': 1, 'downloads': 1, 'of': 1, 'a': 1, 'specific': 1, 'request': 2, 'from': 2, 'linesdir': 1, 'import': 2, 'lines_from_dir': 1, 'apachelog': 1, 'apache_log': 1, 'lines': 1, '=': 4, 'lines_from_dir(""access-log*"",""www"")': 1, 'log': 2, 'apache_log(lines)': 1, ""'ply/ply-2.3.tar.gz'"": 1, 'total': 1, 'sum(1': 1, 'for': 1, 'r': 1, 'in': 1, 'if': 1, ""r['request']"": 1, '==': 1, ""'/ply/ply-2.3.tar.gz')"": 1, 'print(""total"",': 1, 'total)': 1}","{'# d': 1, ' do': 2, 'dow': 2, 'own': 2, 'wnl': 2, 'nlo': 2, 'loa': 2, 'oad': 2, 'ads': 2, 'ds.': 1, 's.p': 1, '.py': 1, 'py\n': 1, 'y\n#': 1, '\n#\n': 1, '#\n#': 1, '\n# ': 1, '# F': 1, ' Fi': 1, 'Fin': 1, 'ind': 1, 'nd ': 1, 'd o': 1, ' ou': 1, 'out': 1, 'ut ': 1, 't h': 1, ' ho': 1, 'how': 1, 'ow ': 1, 'w m': 1, ' ma': 1, 'man': 1, 'any': 1, 'ny ': 1, 'y d': 1, 'ds ': 1, 's o': 1, ' of': 1, 'of ': 1, 'f a': 1, ' a ': 1, 'a s': 1, ' sp': 1, 'spe': 1, 'pec': 1, 'eci': 1, 'cif': 1, 'ifi': 1, 'fic': 1, 'ic ': 1, 'c r': 1, ' re': 1, 'req': 3, 'equ': 3, 'que': 3, 'ues': 3, 'est': 3, 'st\n': 1, 't\n\n': 1, '\n\nf': 1, '\nfr': 2, 'fro': 4, 'rom': 4, 'om ': 2, 'm l': 1, ' li': 3, 'lin': 5, 'ine': 5, 'nes': 5, 'esd': 1, 'sdi': 1, 'dir': 3, 'ir ': 1, 'r i': 2, ' im': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't l': 1, 'es_': 2, 's_f': 2, '_fr': 2, 'om_': 2, 'm_d': 2, '_di': 2, 'ir\n': 1, 'r\nf': 1, 'm a': 1, ' ap': 3, 'apa': 3, 'pac': 3, 'ach': 3, 'che': 3, 'hel': 1, 'elo': 1, 'log': 6, 'og ': 2, 'g i': 1, 't a': 1, 'he_': 2, 'e_l': 2, '_lo': 2, 'og\n': 2, 'g\n\n': 1, '\n\nl': 1, '\nli': 1, 'es ': 1, 's =': 1, ' = ': 4, '= l': 1, 'ir(': 1, 'r(""': 1, '(""a': 1, '""ac': 1, 'acc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss-': 1, 's-l': 1, '-lo': 1, 'og*': 1, 'g*""': 1, '*"",': 1, '"",""': 1, ',""w': 1, '""ww': 1, 'www': 1, 'ww""': 1, 'w"")': 1, '"")\n': 1, ')\nl': 1, '\nlo': 1, 'g =': 1, '= a': 1, 'og(': 1, 'g(l': 1, '(li': 1, 'es)': 1, 's)\n': 1, ')\n\n': 2, '\n\nr': 1, '\nre': 1, 'st ': 1, 't =': 1, ""= '"": 2, "" 'p"": 1, ""'pl"": 1, 'ply': 4, 'ly/': 2, 'y/p': 2, '/pl': 3, 'ly-': 2, 'y-2': 2, '-2.': 2, '2.3': 2, '.3.': 2, '3.t': 2, '.ta': 2, 'tar': 2, 'ar.': 2, 'r.g': 2, '.gz': 2, ""gz'"": 2, ""z'\n"": 1, ""'\n\n"": 1, '\n\nt': 1, '\nto': 1, 'tot': 2, 'ota': 3, 'tal': 3, 'al ': 1, 'l =': 1, '= s': 1, ' su': 1, 'sum': 1, 'um(': 1, 'm(1': 1, '(1 ': 1, '1 f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r r': 1, ' r ': 1, ' in': 1, 'in ': 1, 'n l': 1, ' lo': 1, 'g\n ': 1, '\n  ': 1, '   ': 12, '  i': 1, ' if': 1, 'if ': 1, 'f r': 1, ' r[': 1, ""r['"": 1, ""['r"": 1, ""'re"": 1, ""st'"": 1, ""t']"": 1, ""'] "": 1, '] =': 1, ' ==': 1, '== ': 1, "" '/"": 1, ""'/p"": 1, ""z')"": 1, ""')\n"": 1, '\n\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 't(""': 1, '(""T': 1, '""To': 1, 'Tot': 1, 'al""': 1, 'l"",': 1, '"", ': 1, ', t': 1, ' to': 1, 'al)': 1, 'l)\n': 1}"
David Beazley,fieldmap.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 4, 'fieldmap.py': 1, 'take': 1, 'a': 1, 'sequence': 1, 'of': 2, 'dictionaries': 1, 'and': 1, 'remap': 1, 'one': 1, 'the': 1, 'fields': 1, 'def': 1, 'field_map(dictseq,': 1, 'name,': 1, 'func):': 1, 'for': 5, 'd': 2, 'in': 5, 'dictseq:': 1, 'd[name]': 1, '=': 10, 'func(d[name])': 1, 'yield': 1, 'example': 1, 'if': 3, '__name__': 1, '==': 1, ""'__main__':"": 1, 'loglines': 1, 'open(""access-log"")': 1, 'import': 1, 're': 1, 'logpats': 1, ""r'(\\s+)"": 1, '(\\s+)': 4, '\\[(.*?)\\]': 1, ""'"": 1, '\\': 1, 'r\'""(\\s+)': 1, '(\\s+)""': 1, ""(\\s+)'"": 1, 'logpat': 1, 're.compile(logpats)': 1, 'groups': 2, '(logpat.match(line)': 1, 'line': 1, 'loglines)': 1, 'tuples': 1, '(g.groups()': 1, 'g': 1, 'g)': 1, 'colnames': 1, ""('host','referrer','user','datetime',"": 1, ""'method',"": 1, ""'request','proto','status','bytes')"": 1, 'log': 3, '(dict(zip(colnames,': 1, 't))': 1, 't': 1, 'tuples)': 1, 'field_map(log,""status"",int)': 1, 'field_map(log,""bytes"",': 1, 'lambda': 1, 's:': 1, 'int(s)': 1, 's': 1, '!=': 1, ""'-'"": 1, 'else': 1, '0)': 1, 'x': 1, 'log:': 1, 'print(x)': 1}","{'# f': 1, ' fi': 5, 'fie': 5, 'iel': 6, 'eld': 6, 'ldm': 1, 'dma': 1, 'map': 5, 'ap.': 1, 'p.p': 1, '.py': 1, 'py\n': 1, 'y\n#': 1, '\n#\n': 1, '#\n#': 1, '\n# ': 2, '# T': 1, ' Ta': 1, 'Tak': 1, 'ake': 1, 'ke ': 1, 'e a': 1, ' a ': 1, 'a s': 2, ' se': 1, 'seq': 3, 'equ': 2, 'que': 2, 'uen': 1, 'enc': 1, 'nce': 1, 'ce ': 1, 'e o': 2, ' of': 2, 'of ': 2, 'f d': 1, ' di': 2, 'dic': 4, 'ict': 4, 'cti': 1, 'tio': 1, 'ion': 1, 'ona': 1, 'nar': 1, 'ari': 1, 'rie': 1, 'ies': 1, 'es ': 4, 's a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd r': 1, ' re': 3, 'rem': 1, 'ema': 1, 'ap ': 1, 'p o': 1, ' on': 1, 'one': 1, 'ne ': 2, 'f t': 1, ' th': 1, 'the': 1, 'he ': 1, 'e f': 1, 'lds': 1, 'ds\n': 1, 's\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f f': 1, 'ld_': 3, 'd_m': 3, '_ma': 4, 'ap(': 3, 'p(d': 1, '(di': 2, 'cts': 2, 'tse': 2, 'eq,': 1, 'q, ': 1, ', n': 1, ' na': 1, 'nam': 6, 'ame': 6, 'me,': 1, 'e, ': 1, ', f': 1, ' fu': 2, 'fun': 2, 'unc': 2, 'nc)': 1, 'c):': 1, '):\n': 1, ':\n ': 3, '\n  ': 19, '   ': 109, '  f': 2, ' fo': 5, 'for': 5, 'or ': 5, 'r d': 1, ' d ': 1, 'd i': 1, ' in': 6, 'in ': 5, 'n d': 1, 'eq:': 1, 'q:\n': 1, '  d': 1, ' d[': 1, 'd[n': 2, '[na': 2, 'me]': 2, 'e] ': 1, '] =': 1, ' = ': 10, '= f': 3, 'nc(': 1, 'c(d': 1, '(d[': 1, 'e])': 1, '])\n': 1, ')\n ': 3, '  y': 1, ' yi': 1, 'yie': 1, 'ld ': 1, 'd d': 1, ' d\n': 1, 'd\n\n': 1, '\n\n#': 1, '# E': 1, ' Ex': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 3, 'le\n': 1, 'e\n\n': 2, '\n\ni': 1, '\nif': 1, 'if ': 3, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 2, "" '_"": 1, ""'__"": 1, '__m': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, ':\n\n': 1, '\n\n ': 9, '  l': 7, ' lo': 8, 'log': 13, 'ogl': 2, 'gli': 2, 'lin': 4, 'ine': 4, 'nes': 2, 's =': 2, '= o': 1, ' op': 1, 'ope': 1, 'pen': 1, 'en(': 1, 'n(""': 1, '(""a': 1, '""ac': 1, 'acc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss-': 1, 's-l': 1, '-lo': 1, 'og""': 1, 'g"")': 1, '"")\n': 1, ')\n\n': 6, '  i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't r': 1, 're\n': 1, 'ogp': 4, 'gpa': 4, 'pat': 4, 'ats': 2, 'ts ': 1, 's  ': 3, '  =': 7, '= r': 2, "" r'"": 2, ""r'("": 1, ""'(\\"": 1, '(\\S': 8, '\\S+': 8, 'S+)': 8, '+) ': 6, ') (': 5, ' (\\': 6, ') \\': 1, ' \\[': 1, '\\[(': 1, '[(.': 1, '(.*': 1, '.*?': 1, '*?)': 1, '?)\\': 1, ')\\]': 1, '\\] ': 1, ""] '"": 1, "" ' "": 1, ""' \\"": 1, ' \\\n': 1, '\\\n ': 1, '  r': 1, 'r\'""': 1, '\'""(': 1, '""(\\': 1, '+)""': 1, ')"" ': 1, '"" (': 1, ""+)'"": 1, "")'\n"": 1, ""'\n\n"": 1, 'at ': 1, 't  ': 1, 're.': 1, 'e.c': 1, '.co': 1, 'com': 1, 'omp': 1, 'mpi': 1, 'pil': 1, 'ile': 1, 'le(': 1, 'e(l': 1, '(lo': 4, 'ts)': 1, 's)\n': 3, '  g': 1, ' gr': 2, 'gro': 3, 'rou': 3, 'oup': 3, 'ups': 3, 'ps ': 2, '= (': 4, ' (l': 1, 'at.': 1, 't.m': 1, '.ma': 1, 'mat': 1, 'atc': 1, 'tch': 1, 'ch(': 1, 'h(l': 1, '(li': 1, 'ne)': 1, 'e) ': 1, ') f': 3, 'r l': 1, ' li': 1, 'e i': 1, 'n l': 2, 'es)': 2, '  t': 1, ' tu': 2, 'tup': 2, 'upl': 2, 'les': 2, ' (g': 1, '(g.': 1, 'g.g': 1, '.gr': 1, 'ps(': 1, 's()': 1, '() ': 1, 'r g': 1, ' g ': 1, 'g i': 1, 'n g': 1, 's i': 1, ' if': 2, 'f g': 1, ' g)': 1, 'g)\n': 1, '  c': 1, ' co': 1, 'col': 2, 'oln': 2, 'lna': 2, 'mes': 2, "" ('"": 1, ""('h"": 1, ""'ho"": 1, 'hos': 1, 'ost': 1, ""st'"": 2, ""t',"": 2, ""','"": 6, "",'r"": 1, ""'re"": 2, 'ref': 1, 'efe': 1, 'fer': 1, 'err': 1, 'rre': 1, 'rer': 1, ""er'"": 2, ""r',"": 2, "",'u"": 1, ""'us"": 1, 'use': 1, 'ser': 1, "",'d"": 1, ""'da"": 1, 'dat': 1, 'ate': 1, 'tet': 1, 'eti': 1, 'tim': 1, 'ime': 1, ""me'"": 1, ""e',"": 1, ""',\n"": 1, ',\n ': 2, ""  '"": 1, "" 'm"": 1, ""'me"": 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, ""od'"": 1, ""d',"": 1, ""', "": 1, "", '"": 1, "" 'r"": 1, 'req': 1, 'ues': 1, 'est': 1, "",'p"": 1, ""'pr"": 1, 'pro': 1, 'rot': 1, 'oto': 1, ""to'"": 1, ""o',"": 1, "",'s"": 1, ""'st"": 1, 'sta': 2, 'tat': 2, 'atu': 2, 'tus': 2, ""us'"": 1, ""s',"": 1, "",'b"": 1, ""'by"": 1, 'byt': 2, 'yte': 2, 'tes': 2, ""es'"": 1, ""s')"": 1, ""')\n"": 1, 'og ': 3, 'g  ': 3, ' (d': 1, 'ct(': 1, 't(z': 1, '(zi': 1, 'zip': 1, 'ip(': 1, 'p(c': 1, '(co': 1, 'es,': 1, 's, ': 1, ', t': 1, ' t)': 1, 't))': 1, ')) ': 1, 'r t': 1, ' t ': 1, 't i': 1, 'n t': 1, 'p(l': 2, 'og,': 2, 'g,""': 2, ',""s': 1, '""st': 1, 'us""': 1, 's"",': 2, '"",i': 1, ',in': 1, 'int': 3, 'nt)': 1, 't)\n': 1, ',""b': 1, '""by': 1, 'es""': 1, '"",\n': 1, ' la': 1, 'lam': 1, 'amb': 1, 'mbd': 1, 'bda': 1, 'da ': 1, ' s:': 1, 's: ': 1, ': i': 1, 'nt(': 2, 't(s': 1, '(s)': 1, 's) ': 1, ') i': 1, 'f s': 1, ' s ': 1, 's !': 1, ' !=': 1, '!= ': 1, "" '-"": 1, ""'-'"": 1, ""-' "": 1, ""' e"": 1, ' el': 1, 'els': 1, 'lse': 1, 'se ': 1, 'e 0': 1, ' 0)': 1, '0)\n': 1, '  \n': 1, ' \n ': 1, 'r x': 1, ' x ': 1, 'x i': 1, 'og:': 1, 'g:\n': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 't(x': 1, '(x)': 1, 'x)\n': 1}"
David Beazley,follow.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 11, 'follow.py': 1, 'follow': 1, 'a': 3, 'file': 2, 'like': 1, 'tail': 1, '-f.': 1, 'import': 2, 'time': 1, 'os': 1, 'def': 1, 'follow(thefile):': 1, 'thefile.seek(0,': 1, 'os.seek_end)': 1, 'while': 1, 'true:': 1, 'line': 3, '=': 3, 'thefile.readline()': 1, 'if': 2, 'not': 1, 'line:': 1, 'time.sleep(0.1)': 1, 'continue': 1, 'yield': 1, 'example': 2, 'use': 2, 'note': 1, ':': 1, 'this': 2, 'requires': 1, 'the': 4, 'of': 1, 'an': 1, 'apache': 1, 'log': 1, 'simulator.': 1, 'go': 1, 'to': 1, 'directory': 1, 'run/foo': 1, 'and': 2, 'run': 2, 'program': 3, ""'logsim.py'"": 1, 'from': 1, 'that': 2, 'directory.': 1, 'as': 1, 'background': 1, 'process': 1, 'leave': 1, 'it': 1, 'running': 1, 'in': 2, 'separate': 1, 'window.': 1, ""we'll"": 1, 'write': 1, 'read': 1, 'output': 1, 'being': 1, 'generated': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'logfile': 1, 'open(""run/foo/access-log"",""r"")': 1, 'loglines': 1, 'follow(logfile)': 1, 'for': 1, 'loglines:': 1, 'print(line,': 1, ""end='')"": 1}","{'# f': 1, ' fo': 4, 'fol': 3, 'oll': 4, 'llo': 4, 'low': 4, 'ow.': 2, 'w.p': 1, '.py': 2, 'py\n': 1, 'y\n#': 1, '\n#\n': 1, '#\n#': 1, '\n# ': 9, '# F': 1, ' Fo': 1, 'Fol': 1, 'ow ': 1, 'w a': 1, ' a ': 3, 'a f': 1, ' fi': 2, 'fil': 7, 'ile': 8, 'le ': 6, 'e l': 2, ' li': 5, 'lik': 1, 'ike': 1, 'ke ': 1, 'e t': 1, ' ta': 1, 'tai': 1, 'ail': 1, 'il ': 1, 'l -': 1, ' -f': 1, '-f.': 1, 'f.\n': 1, '.\n\n': 1, '\n\ni': 2, '\nim': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't t': 1, ' ti': 2, 'tim': 2, 'ime': 2, 'me\n': 1, 'e\ni': 1, 't o': 1, ' os': 2, 'os\n': 1, 's\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f f': 1, 'ow(': 2, 'w(t': 1, '(th': 1, 'the': 7, 'hef': 3, 'efi': 3, 'le)': 2, 'e):': 1, '):\n': 1, ':\n ': 5, '\n  ': 12, '   ': 57, '  t': 2, ' th': 9, 'le.': 2, 'e.s': 2, '.se': 1, 'see': 1, 'eek': 1, 'ek(': 1, 'k(0': 1, '(0,': 1, '0, ': 1, ', o': 1, 'os.': 1, 's.S': 1, '.SE': 1, 'SEE': 1, 'EEK': 1, 'EK_': 1, 'K_E': 1, '_EN': 1, 'END': 1, 'ND)': 1, 'D)\n': 1, ')\n ': 5, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'e T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue:': 1, 'e:\n': 2, '  l': 3, 'lin': 8, 'ine': 8, 'ne ': 2, 'e =': 2, ' = ': 3, '= t': 1, 'e.r': 1, '.re': 1, 'rea': 2, 'ead': 2, 'adl': 1, 'dli': 1, 'ne(': 1, 'e()': 1, '()\n': 1, '  i': 1, ' if': 1, 'if ': 2, 'f n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't l': 1, 'ne:': 1, 'me.': 1, '.sl': 1, 'sle': 1, 'lee': 1, 'eep': 1, 'ep(': 1, 'p(0': 1, '(0.': 1, '0.1': 1, '.1)': 1, '1)\n': 1, '  c': 1, ' co': 1, 'con': 1, 'ont': 1, 'nti': 1, 'tin': 1, 'inu': 1, 'nue': 1, 'ue\n': 1, 'e\n ': 1, '  y': 1, ' yi': 1, 'yie': 1, 'iel': 1, 'eld': 1, 'ld ': 1, 'd l': 1, 'ne\n': 1, 'e\n\n': 1, '\n\n#': 1, '# E': 1, ' Ex': 1, 'Exa': 1, 'xam': 2, 'amp': 2, 'mpl': 2, 'ple': 2, 'e u': 2, ' us': 2, 'use': 2, 'se\n': 1, 'e\n#': 1, '# N': 1, ' No': 1, 'Not': 1, 'ote': 1, 'te ': 3, 'e :': 1, ' : ': 1, ': T': 1, ' Th': 1, 'Thi': 1, 'his': 2, 'is ': 2, 's e': 1, ' ex': 1, 'exa': 1, 'e r': 1, ' re': 2, 'req': 1, 'equ': 1, 'qui': 1, 'uir': 1, 'ire': 3, 'res': 1, 'es ': 2, 's t': 1, 'he ': 5, 'se ': 1, 'e o': 2, ' of': 1, 'of ': 1, 'f a': 1, ' an': 3, 'an ': 1, 'n a': 2, ' ap': 1, 'apa': 1, 'pac': 1, 'ach': 1, 'che': 1, ' lo': 4, 'log': 7, 'og ': 1, 'g s': 1, ' si': 1, 'sim': 2, 'imu': 1, 'mul': 1, 'ula': 1, 'lat': 1, 'ato': 1, 'tor': 3, 'or.': 1, 'r.\n': 1, '.\n#': 1, '# \n': 2, ' \n#': 1, '# G': 1, ' Go': 1, 'Go ': 1, 'o t': 2, ' to': 1, 'to ': 1, 'e d': 1, ' di': 2, 'dir': 2, 'rec': 2, 'ect': 2, 'cto': 2, 'ory': 2, 'ry ': 1, 'y r': 1, ' ru': 3, 'run': 4, 'un/': 2, 'n/f': 2, '/fo': 2, 'foo': 2, 'oo ': 1, 'o a': 1, 'and': 2, 'nd ': 2, 'd r': 1, 'un ': 2, 'n t': 2, 'e p': 2, ' pr': 5, 'pro': 4, 'rog': 3, 'ogr': 3, 'gra': 3, 'ram': 3, 'am ': 2, ""m '"": 1, "" 'l"": 1, ""'lo"": 1, 'ogs': 1, 'gsi': 1, 'im.': 1, 'm.p': 1, ""py'"": 1, ""y' "": 1, ""' f"": 1, ' fr': 1, 'fro': 1, 'rom': 1, 'om\n': 1, 'm\n#': 2, '# t': 2, 'tha': 2, 'hat': 2, 'at ': 2, 't d': 1, 'ry.': 1, 'y. ': 1, '.  ': 2, '  R': 1, ' Ru': 1, 'Run': 1, 'thi': 1, 's p': 1, 'm a': 1, ' as': 1, 'as ': 1, 's a': 2, 'a b': 1, ' ba': 1, 'bac': 1, 'ack': 1, 'ckg': 1, 'kgr': 1, 'gro': 1, 'rou': 1, 'oun': 1, 'und': 1, 'd p': 1, 'roc': 1, 'oce': 1, 'ces': 2, 'ess': 2, 'ss ': 1, 'nd\n': 1, 'd\n#': 2, '# l': 1, ' le': 1, 'lea': 1, 'eav': 1, 'ave': 1, 've ': 1, 'e i': 2, ' it': 1, 'it ': 1, 't r': 2, 'unn': 1, 'nni': 1, 'nin': 1, 'ing': 2, 'ng ': 2, 'g i': 1, ' in': 2, 'in ': 2, 'a s': 1, ' se': 1, 'sep': 1, 'epa': 1, 'par': 1, 'ara': 1, 'rat': 2, 'ate': 2, 'e w': 1, ' wi': 1, 'win': 1, 'ind': 1, 'ndo': 1, 'dow': 1, 'w. ': 1, '  W': 1, ' We': 1, ""We'"": 1, ""e'l"": 1, ""'ll"": 1, 'll ': 1, 'l w': 1, ' wr': 1, 'wri': 1, 'rit': 1, 'ite': 1, 'am\n': 1, 'ad ': 1, 'd t': 1, ' ou': 1, 'out': 1, 'utp': 1, 'tpu': 1, 'put': 1, 'ut ': 1, 't f': 1, 'e b': 1, ' be': 1, 'bei': 1, 'ein': 1, 'g g': 1, ' ge': 1, 'gen': 1, 'ene': 1, 'ner': 1, 'era': 1, 'ted': 1, 'ed\n': 1, ' \n\n': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, 'ogf': 2, 'gfi': 2, '= o': 1, ' op': 1, 'ope': 1, 'pen': 1, 'en(': 1, 'n(""': 1, '(""r': 1, '""ru': 1, 'oo/': 1, 'o/a': 1, '/ac': 1, 'acc': 1, 'cce': 1, 'ss-': 1, 's-l': 1, '-lo': 1, 'og""': 1, 'g"",': 1, '"",""': 1, ',""r': 1, '""r""': 1, 'r"")': 1, '"")\n': 1, 'ogl': 2, 'gli': 2, 'nes': 2, 's =': 1, '= f': 1, 'w(l': 1, '(lo': 1, 'e)\n': 1, '  f': 1, 'for': 1, 'or ': 1, 'r l': 1, 'n l': 1, 'es:': 1, 's:\n': 1, '  p': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 't(l': 1, '(li': 1, 'ne,': 1, 'e, ': 1, ', e': 1, ' en': 1, 'end': 1, 'nd=': 1, ""d='"": 1, ""=''"": 1, ""'')"": 1, ""')\n"": 1, ')\n\n': 1, '\n\n ': 1, '  \n': 1}"
David Beazley,gencat.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 4, 'gencat.py': 1, 'concatenate': 1, 'multiple': 1, 'generators': 1, 'into': 1, 'a': 1, 'single': 1, 'sequence': 1, 'def': 1, 'gen_cat(sources):': 1, 'for': 2, 'src': 2, 'in': 2, 'sources:': 1, 'yield': 1, 'from': 3, 'example': 1, 'use': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'pathlib': 1, 'import': 2, 'path': 1, 'genopen': 1, 'gen_open': 1, 'lognames': 1, '=': 3, ""path('www').rglob('access-log*')"": 1, 'logfiles': 1, 'gen_open(lognames)': 1, 'loglines': 1, 'gen_cat(logfiles)': 1, 'line': 1, 'loglines:': 1, ""print(line,end='')"": 1}","{'# g': 1, ' ge': 7, 'gen': 7, 'enc': 2, 'nca': 2, 'cat': 4, 'at.': 1, 't.p': 1, '.py': 1, 'py\n': 1, 'y\n#': 1, '\n#\n': 1, '#\n#': 1, '\n# ': 2, '# C': 1, ' Co': 1, 'Con': 1, 'onc': 1, 'ate': 2, 'ten': 1, 'ena': 1, 'nat': 1, 'te ': 1, 'e m': 1, ' mu': 1, 'mul': 1, 'ult': 1, 'lti': 1, 'tip': 1, 'ipl': 1, 'ple': 2, 'le ': 3, 'e g': 1, 'ene': 1, 'ner': 1, 'era': 1, 'rat': 1, 'ato': 1, 'tor': 1, 'ors': 1, 'rs ': 1, 's i': 1, ' in': 3, 'int': 2, 'nto': 1, 'to ': 1, 'o a': 1, ' a ': 1, 'a s': 1, ' si': 1, 'sin': 1, 'ing': 1, 'ngl': 1, 'gle': 1, 'e s': 1, ' se': 1, 'seq': 1, 'equ': 1, 'que': 1, 'uen': 1, 'nce': 1, 'ce\n': 1, 'e\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f g': 1, 'en_': 4, 'n_c': 2, '_ca': 2, 'at(': 2, 't(s': 1, '(so': 1, 'sou': 2, 'our': 2, 'urc': 2, 'rce': 2, 'ces': 3, 'es)': 3, 's):': 1, '):\n': 1, ':\n ': 4, '\n  ': 9, '   ': 26, '  f': 4, ' fo': 2, 'for': 2, 'or ': 2, 'r s': 1, ' sr': 2, 'src': 2, 'rc ': 1, 'c i': 1, 'in ': 2, 'n s': 1, ' so': 1, 'es:': 2, 's:\n': 2, '  y': 1, ' yi': 1, 'yie': 1, 'iel': 1, 'eld': 1, 'ld ': 1, 'd f': 1, ' fr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm s': 1, 'rc\n': 1, 'c\n\n': 1, '\n\n#': 1, '# E': 1, ' Ex': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'e u': 1, ' us': 1, 'use': 1, 'se\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 3, 'ame': 3, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, 'm p': 1, ' pa': 1, 'pat': 1, 'ath': 3, 'thl': 1, 'hli': 1, 'lib': 1, 'ib ': 1, 'b i': 1, ' im': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't P': 1, ' Pa': 2, 'Pat': 2, 'th\n': 1, 'h\n ': 1, 'm g': 1, 'eno': 1, 'nop': 1, 'ope': 3, 'pen': 3, 'en ': 1, 'n i': 1, 't g': 1, 'n_o': 2, '_op': 2, 'en\n': 1, 'n\n\n': 1, '\n\n ': 1, '  l': 3, ' lo': 4, 'log': 7, 'ogn': 2, 'gna': 2, 'mes': 2, 'es ': 3, 's =': 3, ' = ': 3, '= P': 1, 'th(': 1, ""h('"": 1, ""('w"": 1, ""'ww"": 1, 'www': 1, ""ww'"": 1, ""w')"": 1, ""')."": 1, ').r': 1, '.rg': 1, 'rgl': 1, 'glo': 1, 'lob': 1, 'ob(': 1, ""b('"": 1, ""('a"": 1, ""'ac"": 1, 'acc': 1, 'cce': 1, 'ess': 1, 'ss-': 1, 's-l': 1, '-lo': 1, 'og*': 1, ""g*'"": 1, ""*')"": 1, ""')\n"": 2, ')\n ': 3, 'ogf': 2, 'gfi': 2, 'fil': 2, 'ile': 2, 'les': 2, '= g': 2, 'en(': 1, 'n(l': 1, '(lo': 2, 's)\n': 2, 'ogl': 2, 'gli': 2, 'lin': 4, 'ine': 4, 'nes': 2, 't(l': 2, 'r l': 1, ' li': 1, 'ne ': 1, 'e i': 1, 'n l': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 'nt(': 1, '(li': 1, 'ne,': 1, 'e,e': 1, ',en': 1, 'end': 1, 'nd=': 1, ""d='"": 1, ""=''"": 1, ""'')"": 1}"
David Beazley,genevents.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 5, 'genevents.py': 1, 'a': 2, 'very': 1, 'simplistic': 1, 'example': 2, 'of': 2, 'generating': 1, 'events': 1, 'on': 1, 'set': 1, 'sockets': 1, 'import': 4, 'select': 1, 'def': 2, 'gen_events(socks):': 1, 'while': 1, 'true:': 1, 'rdr,wrt,err': 1, '=': 7, 'select.select(socks,socks,socks,0.1)': 1, 'for': 5, 'r': 1, 'in': 5, 'rdr:': 1, 'yield': 3, '""read"",r': 1, 'w': 1, 'wrt:': 1, '""write"",w': 1, 'e': 1, 'err:': 1, '""error"",e': 1, 'use': 2, 'telnet': 1, 'to': 2, 'port': 1, '12000': 1, 'test': 1, 'this': 1, 'if': 3, '__name__': 1, '==': 2, ""'__main__':"": 1, 'socket': 1, 'from': 1, 'genreceive': 1, '*': 1, 'addr': 1, '("""",12000)': 1, 'clientset': 1, '[]': 1, 'acceptor(sockset,addr):': 1, 'c,a': 1, 'receive_connections(addr):': 1, 'clientset.append(c)': 1, 'threading': 1, 'acc_thr': 1, 'threading.thread(target=acceptor,': 1, 'args': 1, '(clientset,': 1, 'addr))': 1, 'acc_thr.daemon': 1, 'true': 1, 'acc_thr.start()': 1, 'evt,': 1, 's': 1, 'gen_events(clientset):': 1, 'evt': 1, ""'read':"": 1, 'data': 1, 's.recv(1024)': 1, 'not': 1, 'data:': 1, 'print(""closing"",': 1, 's)': 1, 's.close()': 1, 'clientset.remove(s)': 1, 'else:': 1, 'print(s,data)': 1}","{'# g': 1, ' ge': 5, 'gen': 5, 'ene': 2, 'nev': 1, 'eve': 4, 'ven': 4, 'ent': 9, 'nts': 9, 'ts.': 1, 's.p': 1, '.py': 1, 'py\n': 1, 'y\n#': 1, '\n#\n': 1, '#\n#': 1, '\n# ': 3, '# A': 1, ' A ': 1, 'A v': 1, ' ve': 1, 'ver': 1, 'ery': 1, 'ry ': 1, 'y s': 1, ' si': 1, 'sim': 1, 'imp': 5, 'mpl': 3, 'pli': 1, 'lis': 1, 'ist': 1, 'sti': 1, 'tic': 1, 'ic ': 1, 'c e': 1, ' ex': 1, 'exa': 1, 'xam': 2, 'amp': 2, 'ple': 2, 'le ': 3, 'e o': 1, ' of': 2, 'of ': 2, 'f g': 2, 'ner': 1, 'era': 1, 'rat': 1, 'ati': 1, 'tin': 1, 'ing': 4, 'ng ': 1, 'g e': 1, ' ev': 3, 'ts ': 1, 's o': 1, ' on': 1, 'on ': 2, 'n a': 1, ' a ': 1, 'a s': 1, ' se': 3, 'set': 7, 'et ': 3, 't o': 1, 'f s': 1, ' so': 2, 'soc': 7, 'ock': 7, 'cke': 2, 'ket': 2, 'ets': 1, 'ts\n': 1, 's\n\n': 2, '\n\ni': 2, '\nim': 1, 'mpo': 4, 'por': 5, 'ort': 5, 'rt ': 5, 't s': 2, 'sel': 3, 'ele': 3, 'lec': 3, 'ect': 4, 'ct\n': 1, 't\nd': 1, '\nde': 1, 'def': 2, 'ef ': 2, 'en_': 2, 'n_e': 2, '_ev': 2, 'ts(': 2, 's(s': 1, '(so': 3, 'cks': 5, 'ks)': 1, 's):': 1, '):\n': 4, ':\n ': 12, '\n  ': 30, '   ': 215, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'e T': 1, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue:': 1, 'e:\n': 2, '  r': 1, ' rd': 2, 'rdr': 2, 'dr,': 1, 'r,w': 1, ',wr': 1, 'wrt': 2, 'rt,': 1, 't,e': 1, ',er': 1, 'err': 3, 'rr ': 1, 'r =': 3, ' = ': 7, '= s': 2, 'ct.': 1, 't.s': 1, '.se': 1, 'ct(': 1, 't(s': 2, 'ks,': 3, 's,s': 2, ',so': 2, 's,0': 1, ',0.': 1, '0.1': 1, '.1)': 1, '1)\n': 1, ')\n ': 8, '  f': 6, ' fo': 5, 'for': 5, 'or ': 5, 'r r': 1, ' r ': 1, 'r i': 1, ' in': 5, 'in ': 5, 'n r': 2, 'dr:': 1, 'r:\n': 2, '  y': 3, ' yi': 3, 'yie': 3, 'iel': 3, 'eld': 3, 'ld ': 3, 'd ""': 3, ' ""r': 1, '""re': 1, 'rea': 5, 'ead': 5, 'ad""': 1, 'd"",': 1, '"",r': 1, ',r\n': 1, 'r\n ': 1, 'r w': 1, ' w ': 1, 'w i': 1, 'n w': 1, ' wr': 1, 'rt:': 1, 't:\n': 1, ' ""w': 1, '""wr': 1, 'wri': 1, 'rit': 1, 'ite': 1, 'te""': 1, 'e"",': 1, '"",w': 1, ',w\n': 1, 'w\n ': 1, 'r e': 2, ' e ': 1, 'e i': 2, 'n e': 1, ' er': 1, 'rr:': 1, ' ""e': 1, '""er': 1, 'rro': 1, 'ror': 1, 'or""': 1, 'r"",': 1, '"",e': 1, ',e\n': 1, 'e\n\n': 1, '\n\n#': 1, '# E': 1, ' Ex': 1, 'Exa': 1, 'e u': 1, ' us': 1, 'use': 1, 'se\n': 1, 'e\n#': 1, '# U': 1, ' Us': 1, 'Use': 1, 'se ': 1, 'e t': 1, ' te': 2, 'tel': 1, 'eln': 1, 'lne': 1, 'net': 1, 't t': 3, ' to': 2, 'to ': 2, 'o p': 1, ' po': 1, 't 1': 1, ' 12': 1, '120': 2, '200': 2, '000': 2, '00 ': 1, '0 t': 1, 'o t': 1, 'tes': 1, 'est': 1, 'st ': 1, ' th': 3, 'thi': 1, 'his': 1, 'is\n': 1, '\nif': 1, 'if ': 3, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 2, '== ': 2, ""= '"": 2, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 2, '  i': 4, ' im': 3, 'et\n': 1, 't\n ': 1, ' fr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm g': 1, 'enr': 1, 'nre': 1, 'rec': 3, 'ece': 2, 'cei': 2, 'eiv': 2, 'ive': 2, 've ': 1, 't *': 1, ' *\n': 1, '*\n\n': 1, '\n\n ': 2, '  a': 5, ' ad': 2, 'add': 4, 'ddr': 4, 'dr ': 1, '= (': 2, ' (""': 1, '(""""': 1, '"""",': 1, '"",1': 1, ',12': 1, '00)': 1, '0)\n': 1, '  c': 3, ' cl': 3, 'cli': 5, 'lie': 5, 'ien': 5, 'tse': 5, 't =': 2, '= [': 1, ' []': 1, '[]\n': 1, ']\n ': 1, '  d': 2, ' de': 1, 'f a': 1, ' ac': 4, 'acc': 5, 'cce': 2, 'cep': 2, 'ept': 2, 'pto': 2, 'tor': 2, 'or(': 1, 'r(s': 1, 'kse': 1, 'et,': 2, 't,a': 1, ',ad': 1, 'dr)': 3, 'r):': 2, 'r c': 1, ' c,': 1, 'c,a': 1, ',a ': 1, 'a i': 1, ' re': 1, 've_': 1, 'e_c': 1, '_co': 1, 'con': 1, 'onn': 1, 'nne': 1, 'nec': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'ons': 1, 'ns(': 1, 's(a': 1, '(ad': 1, 'et.': 2, 't.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(c': 1, '(c)': 1, 'c)\n': 1, ')\n\n': 2, 'thr': 5, 'hre': 3, 'adi': 2, 'din': 2, 'ng\n': 1, 'g\n ': 1, 'cc_': 3, 'c_t': 3, '_th': 3, 'hr ': 1, '= t': 1, 'ng.': 1, 'g.T': 1, '.Th': 1, 'Thr': 1, 'ad(': 1, 'd(t': 1, '(ta': 1, 'tar': 2, 'arg': 2, 'rge': 1, 'get': 1, 'et=': 1, 't=a': 1, '=ac': 1, 'or,': 1, 'r,\n': 1, ',\n ': 1, ' ar': 1, 'rgs': 1, 'gs ': 1, 's =': 1, ' (c': 1, '(cl': 2, 't, ': 2, ', a': 1, 'r))': 1, '))\n': 1, 'hr.': 2, 'r.d': 1, '.da': 1, 'dae': 1, 'aem': 1, 'emo': 2, 'mon': 1, 'n =': 1, '= T': 1, 'ue\n': 1, 'e\n ': 1, 'r.s': 1, '.st': 1, 'sta': 1, 'art': 1, 'rt(': 1, 't()': 1, '()\n': 2, '  \n': 1, ' \n ': 1, 'evt': 2, 'vt,': 1, ', s': 2, ' s ': 1, 's i': 1, 'n g': 1, 's(c': 1, 'et)': 1, 't):': 1, ' if': 2, 'f e': 1, 'vt ': 1, "" 'r"": 1, ""'re"": 1, ""ad'"": 1, ""d':"": 1, ' da': 2, 'dat': 3, 'ata': 3, 'ta ': 1, 'a =': 1, ' s.': 2, 's.r': 1, '.re': 2, 'ecv': 1, 'cv(': 1, 'v(1': 1, '(10': 1, '102': 1, '024': 1, '24)': 1, '4)\n': 1, 'f n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't d': 1, 'ta:': 1, 'a:\n': 1, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 2, 'int': 2, 'nt(': 2, 't(""': 1, '(""C': 1, '""Cl': 1, 'Clo': 1, 'los': 2, 'osi': 1, 'sin': 1, 'ng""': 1, 'g"",': 1, '"", ': 1, ' s)': 1, 's)\n': 2, '  s': 1, 's.c': 1, '.cl': 1, 'clo': 1, 'ose': 1, 'se(': 1, 'e()': 1, 't.r': 1, 'rem': 1, 'mov': 1, 'ove': 1, 've(': 1, 'e(s': 1, '(s)': 1, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, '(s,': 1, 's,d': 1, ',da': 1, 'ta)': 1, 'a)\n': 1, '\n\n\n': 2}"
David Beazley,gengrep.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 5, 'gengrep.py': 1, 'grep': 1, 'a': 2, 'sequence': 1, 'of': 1, 'lines': 2, 'that': 1, 'match': 1, 're': 2, 'pattern': 1, 'import': 4, 'def': 1, 'gen_grep(pat,': 1, 'lines):': 1, 'patc': 1, '=': 5, 're.compile(pat)': 1, 'return': 1, '(line': 1, 'for': 3, 'line': 2, 'in': 2, 'if': 2, 'patc.search(line))': 1, 'example': 1, 'use': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'from': 3, 'pathlib': 1, 'path': 1, 'genopen': 1, 'gen_open': 1, 'gencat': 1, 'gen_cat': 1, 'lognames': 1, ""path('www').rglob('access-log*')"": 1, 'logfiles': 1, 'gen_open(lognames)': 1, 'loglines': 1, 'gen_cat(logfiles)': 1, 'look': 1, 'ply': 1, 'downloads': 1, '(ply': 1, 'is': 1, 'my': 1, 'own': 1, 'python': 1, 'package)': 1, 'plylines': 1, ""gen_grep(r'ply-.*\\.gz',loglines)"": 1, 'plylines:': 1, 'print(line,': 1, ""end='')"": 1}","{'# g': 1, ' ge': 9, 'gen': 9, 'eng': 1, 'ngr': 1, 'gre': 3, 'rep': 4, 'ep.': 1, 'p.p': 1, '.py': 1, 'py\n': 1, 'y\n#': 1, '\n#\n': 1, '#\n#': 1, '\n# ': 2, '# G': 1, ' Gr': 1, 'Gre': 1, 'ep ': 1, 'p a': 1, ' a ': 2, 'a s': 1, ' se': 1, 'seq': 1, 'equ': 1, 'que': 1, 'uen': 1, 'enc': 2, 'nce': 1, 'ce ': 1, 'e o': 1, ' of': 1, 'of ': 1, 'f l': 1, ' li': 5, 'lin': 12, 'ine': 12, 'nes': 7, 'es ': 6, 's t': 1, ' th': 1, 'tha': 1, 'hat': 1, 'at ': 2, 't m': 1, ' ma': 1, 'mat': 1, 'atc': 3, 'tch': 1, 'ch ': 1, 'h a': 1, 'a r': 1, ' re': 4, 're ': 1, 'e p': 1, ' pa': 5, 'pat': 6, 'att': 1, 'tte': 1, 'ter': 1, 'ern': 1, 'rn\n': 1, 'n\n\n': 1, '\n\ni': 2, '\nim': 1, 'imp': 4, 'mpo': 4, 'por': 4, 'ort': 4, 'rt ': 4, 't r': 1, 're\n': 1, 'e\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f g': 1, 'en_': 6, 'n_g': 2, '_gr': 2, 'ep(': 2, 'p(p': 1, '(pa': 2, 'at,': 1, 't, ': 1, ', l': 1, 'es)': 4, 's):': 1, '):\n': 1, ':\n ': 3, '\n  ': 12, '   ': 28, '  p': 3, 'tc ': 1, 'c =': 1, ' = ': 5, '= r': 1, 're.': 1, 'e.c': 1, '.co': 1, 'com': 1, 'omp': 1, 'mpi': 1, 'pil': 1, 'ile': 3, 'le(': 1, 'e(p': 1, 'at)': 1, 't)\n': 1, ')\n ': 5, '  r': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n (': 1, ' (l': 1, '(li': 3, 'ne ': 3, 'e f': 1, ' fo': 3, 'for': 3, 'or ': 3, 'r l': 2, 'e i': 2, ' in': 2, 'in ': 2, 'n l': 1, 's i': 1, ' if': 1, 'if ': 2, 'f p': 1, 'tc.': 1, 'c.s': 1, '.se': 1, 'sea': 1, 'ear': 1, 'arc': 1, 'rch': 1, 'ch(': 1, 'h(l': 1, 'ne)': 1, 'e))': 1, '))\n': 1, ')\n\n': 2, '\n\n#': 1, '# E': 1, ' Ex': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le ': 1, 'e u': 1, ' us': 1, 'use': 1, 'se\n': 1, 'e\n\n': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 3, 'ame': 3, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  f': 4, ' fr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm p': 1, 'ath': 3, 'thl': 1, 'hli': 1, 'lib': 1, 'ib ': 1, 'b i': 1, ' im': 3, 't P': 1, ' Pa': 2, 'Pat': 2, 'th\n': 1, 'h\n ': 1, 'm g': 2, 'eno': 1, 'nop': 1, 'ope': 3, 'pen': 3, 'en ': 1, 'n i': 1, 't  ': 3, '  g': 2, 'n_o': 2, '_op': 2, 'en\n': 1, 'n\n ': 1, 'nca': 1, 'cat': 3, '  i': 1, 'n_c': 2, '_ca': 2, 'at\n': 1, 't\n\n': 1, '\n\n ': 2, '  l': 3, ' lo': 3, 'log': 7, 'ogn': 2, 'gna': 2, 'mes': 2, 's =': 4, '= P': 1, 'th(': 1, ""h('"": 1, ""('w"": 1, ""'ww"": 1, 'www': 1, ""ww'"": 1, ""w')"": 1, ""')."": 1, ').r': 1, '.rg': 1, 'rgl': 1, 'glo': 1, 'lob': 1, 'ob(': 1, ""b('"": 1, ""('a"": 1, ""'ac"": 1, 'acc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss-': 1, 's-l': 1, '-lo': 1, 'og*': 1, ""g*'"": 1, ""*')"": 1, ""')\n"": 2, 'ogf': 2, 'gfi': 2, 'fil': 2, 'les': 2, '= g': 3, 'en(': 1, 'n(l': 1, '(lo': 2, 's)\n': 3, 'ogl': 2, 'gli': 2, 'at(': 1, 't(l': 2, '  #': 1, ' # ': 1, '# L': 1, ' Lo': 1, 'Loo': 1, 'ook': 1, 'ok ': 1, 'k f': 1, 'r p': 1, ' pl': 3, 'ply': 4, 'ly ': 1, 'y d': 1, ' do': 1, 'dow': 1, 'own': 2, 'wnl': 1, 'nlo': 1, 'loa': 1, 'oad': 1, 'ads': 1, 'ds ': 1, 's (': 1, ' (P': 1, '(PL': 1, 'PLY': 1, 'LY ': 1, 'Y i': 1, ' is': 1, 'is ': 1, 's m': 1, ' my': 1, 'my ': 1, 'y o': 1, ' ow': 1, 'wn ': 1, 'n P': 1, ' Py': 1, 'Pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on ': 1, 'n p': 2, 'pac': 1, 'ack': 1, 'cka': 1, 'kag': 1, 'age': 1, 'ge)': 1, 'e)\n': 1, 'lyl': 2, 'yli': 2, 'p(r': 1, ""(r'"": 1, ""r'p"": 1, ""'pl"": 1, 'ly-': 1, 'y-.': 1, '-.*': 1, '.*\\': 1, '*\\.': 1, '\\.g': 1, '.gz': 1, ""gz'"": 1, ""z',"": 1, ""',l"": 1, ',lo': 1, 'es:': 1, 's:\n': 1, ' pr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 'ne,': 1, 'e, ': 1, ', e': 1, ' en': 1, 'end': 1, 'nd=': 1, ""d='"": 1, ""=''"": 1, ""'')"": 1}"
David Beazley,genmulti.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 13, 'genmulti.py': 1, 'generate': 1, 'items': 1, 'from': 5, 'multiple': 1, 'generators': 1, '(multiplex)': 1, 'import': 4, 'queue,': 1, 'threading': 1, 'genqueue': 1, 'genfrom_queue,': 1, 'sendto_queue': 1, 'gencat': 1, 'gen_cat': 1, 'def': 4, 'multiplex(sources):': 1, 'in_q': 1, '=': 10, 'queue.queue()': 2, 'consumers': 1, '[]': 2, 'for': 5, 'src': 1, 'in': 5, 'sources:': 1, 'thr': 1, 'threading.thread(target=sendto_queue,': 1, 'args=(src,': 1, 'in_q))': 1, 'thr.start()': 1, 'consumers.append(genfrom_queue(in_q))': 1, 'return': 2, 'gen_cat(consumers)': 1, 'gen_multiplex(genlist):': 1, 'item_q': 1, 'run_one(source):': 1, 'item': 4, 'source:': 1, 'item_q.put(item)': 1, 'run_all():': 1, 'thrlist': 1, 'source': 1, 'genlist:': 1, 't': 2, 'threading.thread(target=run_one,': 1, 'args=(source,))': 1, 't.start()': 1, 'thrlist.append(t)': 1, 'thrlist:': 1, 't.join()': 1, 'item_q.put(stopiteration)': 1, 'threading.thread(target=run_all).start()': 1, 'while': 1, 'true:': 1, 'item_q.get()': 1, 'if': 2, 'is': 1, 'stopiteration:': 1, 'yield': 1, 'example': 2, 'use': 1, 'this': 1, 'requires': 1, 'you': 1, 'to': 4, 'perform': 1, 'these': 2, 'setup': 1, 'steps:': 1, '1.': 1, 'go': 2, 'run/foo': 1, 'and': 2, 'run': 2, 'logsim.py': 2, '2.': 1, 'run/bar': 1, 'two': 2, 'steps': 1, 'will': 1, 'start': 1, 'writing': 1, 'different': 1, 'apache': 1, 'log': 2, 'files.': 1, 'now,': 1, ""we're"": 1, 'going': 1, 'read': 1, 'both': 1, 'at': 1, 'the': 1, 'same': 1, 'time.': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'follow': 2, 'log1': 1, 'follow(open(""run/foo/access-log""))': 1, 'log2': 1, 'follow(open(""run/bar/access-log""))': 1, 'multiplex([log1,log2])': 1, 'line': 1, 'log:': 1, 'print(line,': 1, ""end='')"": 1}","{'# g': 1, ' ge': 9, 'gen': 11, 'enm': 1, 'nmu': 1, 'mul': 6, 'ult': 6, 'lti': 6, 'ti.': 1, 'i.p': 1, '.py': 3, 'py\n': 3, 'y\n#': 3, '\n#\n': 5, '#\n#': 4, '\n# ': 7, '# G': 1, ' Ge': 1, 'Gen': 1, 'ene': 2, 'ner': 2, 'era': 4, 'rat': 4, 'ate': 1, 'te ': 1, 'e i': 4, ' it': 9, 'ite': 10, 'tem': 10, 'ems': 1, 'ms ': 1, 's f': 1, ' fr': 3, 'fro': 7, 'rom': 7, 'om ': 5, 'm m': 1, ' mu': 3, 'tip': 5, 'ipl': 5, 'ple': 7, 'le ': 4, 'e g': 2, 'ato': 1, 'tor': 1, 'ors': 1, 'rs ': 2, 's (': 1, ' (m': 1, '(mu': 1, 'lex': 4, 'ex)': 1, 'x)\n': 1, ')\n#': 1, '#\n\n': 1, '\n\ni': 2, '\nim': 1, 'imp': 4, 'mpo': 4, 'por': 4, 'ort': 4, 'rt ': 5, 't q': 1, ' qu': 3, 'que': 8, 'ueu': 10, 'eue': 10, 'ue,': 3, 'e, ': 4, ', t': 1, ' th': 11, 'thr': 9, 'hre': 7, 'rea': 8, 'ead': 8, 'adi': 4, 'din': 4, 'ing': 6, 'ng\n': 1, 'g\nf': 1, '\nfr': 2, 'm g': 2, 'enq': 1, 'nqu': 1, 'ue ': 1, ' im': 3, 't g': 2, 'enf': 2, 'nfr': 2, 'om_': 2, 'm_q': 6, '_qu': 4, ', s': 1, ' se': 2, 'sen': 2, 'end': 5, 'ndt': 2, 'dto': 2, 'to_': 2, 'o_q': 2, 'ue\n': 1, 'e\nf': 1, 'enc': 1, 'nca': 1, 'cat': 3, 'at ': 2, 't i': 2, 'en_': 3, 'n_c': 2, '_ca': 2, 'at\n': 1, 't\n\n': 1, '\n\nd': 2, '\nde': 2, 'def': 4, 'ef ': 4, 'f m': 1, 'ex(': 3, 'x(s': 1, '(so': 3, 'sou': 6, 'our': 6, 'urc': 6, 'rce': 6, 'ces': 4, 'es)': 1, 's):': 1, '):\n': 4, ':\n ': 9, '\n  ': 36, '   ': 195, '  i': 6, ' in': 7, 'in_': 4, 'n_q': 3, '_q ': 2, 'q =': 2, ' = ': 10, '= q': 2, 'ue.': 2, 'e.Q': 2, '.Qu': 2, 'Que': 2, 'ue(': 3, 'e()': 2, '()\n': 7, ')\n ': 14, '  c': 2, ' co': 2, 'con': 3, 'ons': 3, 'nsu': 3, 'sum': 3, 'ume': 3, 'mer': 3, 'ers': 3, 's =': 1, '= [': 2, ' []': 2, '[]\n': 2, ']\n ': 2, '  f': 6, ' fo': 9, 'for': 6, 'or ': 5, 'r s': 2, ' sr': 1, 'src': 2, 'rc ': 1, 'c i': 1, 'in ': 5, 'n s': 2, ' so': 3, 'es:': 1, 's:\n': 2, '  t': 8, 'hr ': 1, 'r =': 1, '= t': 2, 'ng.': 3, 'g.T': 3, '.Th': 3, 'Thr': 3, 'ad(': 3, 'd(t': 4, '(ta': 3, 'tar': 7, 'arg': 5, 'rge': 3, 'get': 4, 'et=': 3, 't=s': 1, '=se': 1, 'e,\n': 1, ',\n ': 1, '  a': 1, ' ar': 2, 'rgs': 2, 'gs=': 2, 's=(': 2, '=(s': 2, '(sr': 1, 'rc,': 1, 'c, ': 1, ', i': 1, '_q)': 2, 'q))': 2, '))\n': 5, 'hr.': 1, 'r.s': 1, '.st': 3, 'sta': 4, 'art': 4, 'rt(': 3, 't()': 4, 'rs.': 1, 's.a': 1, '.ap': 2, 'app': 2, 'ppe': 2, 'pen': 4, 'nd(': 2, 'd(g': 1, '(ge': 2, 'e(i': 1, '(in': 1, '  r': 2, ' re': 4, 'ret': 2, 'etu': 3, 'tur': 2, 'urn': 2, 'rn ': 1, 'n g': 2, 'at(': 1, 't(c': 1, '(co': 1, 'rs)': 1, 's)\n': 1, ')\n\n': 3, 'f g': 1, 'n_m': 1, '_mu': 1, 'x(g': 1, 'enl': 2, 'nli': 2, 'lis': 5, 'ist': 5, 'st)': 1, 't):': 1, 'em_': 4, '  d': 2, ' de': 2, 'f r': 2, ' ru': 6, 'run': 10, 'un_': 4, 'n_o': 2, '_on': 2, 'one': 2, 'ne(': 1, 'e(s': 1, 'ce)': 1, 'e):': 1, 'r i': 1, 'em ': 3, 'm i': 2, 'ce:': 1, 'e: ': 1, ': \n': 3, ' \n ': 6, '_q.': 3, 'q.p': 2, '.pu': 2, 'put': 2, 'ut(': 2, 't(i': 1, '(it': 1, 'em)': 1, 'm)\n': 1, '\n\n ': 2, 'n_a': 2, '_al': 2, 'all': 2, 'll(': 1, 'l()': 1, '():': 1, 'hrl': 3, 'rli': 3, 'st ': 1, 't =': 2, 'ce ': 1, 'st:': 2, 't:\n': 1, ' t ': 2, 't=r': 2, '=ru': 2, 'ne,': 2, ', a': 1, 'ce,': 1, 'e,)': 1, ',))': 1, ' t.': 2, 't.s': 1, 'st.': 1, 't.a': 1, '(t)': 1, 't)\n': 1, 'r t': 1, 'n t': 1, 't: ': 1, 't.j': 1, '.jo': 1, 'joi': 1, 'oin': 2, 'in(': 1, 'n()': 1, 't(S': 1, '(St': 1, 'Sto': 2, 'top': 2, 'opI': 2, 'pIt': 2, 'Ite': 2, 'ter': 2, 'ati': 2, 'tio': 2, 'ion': 2, 'on)': 1, 'n)\n': 1, 'll)': 1, 'l).': 1, ').s': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 2, 'e T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue:': 1, 'e:\n': 1, 'm =': 1, '= i': 1, 'q.g': 1, '.ge': 1, 'et(': 1, ' if': 1, 'if ': 2, 'f i': 1, ' is': 1, 'is ': 2, 's S': 1, ' St': 1, 'on:': 1, 'n: ': 1, 'rn\n': 1, 'n\n ': 1, '  y': 1, ' yi': 1, 'yie': 1, 'iel': 1, 'eld': 1, 'ld ': 1, 'd i': 1, 'em\n': 1, 'm\n\n': 1, '\n\n\n': 1, '\n\n#': 1, '# E': 1, ' Ex': 1, 'Exa': 1, 'xam': 2, 'amp': 2, 'mpl': 2, 'e u': 1, ' us': 1, 'use': 1, 'se\n': 1, 'e\n#': 1, '# T': 2, ' Th': 2, 'Thi': 1, 'his': 1, 's e': 1, ' ex': 1, 'exa': 1, 'e r': 1, 'req': 1, 'equ': 1, 'qui': 1, 'uir': 1, 'ire': 1, 'res': 1, 'es ': 1, 's y': 1, ' yo': 1, 'you': 1, 'ou ': 1, 'u t': 1, ' to': 4, 'to ': 4, 'o p': 1, ' pe': 1, 'per': 1, 'erf': 1, 'rfo': 1, 'orm': 1, 'rm ': 1, 'm t': 1, 'the': 2, 'hes': 2, 'ese': 2, 'se ': 2, 'e s': 2, 'set': 1, 'tup': 1, 'up ': 1, 'p s': 1, ' st': 3, 'ste': 2, 'tep': 2, 'eps': 2, 'ps:': 1, ':\n#': 1, '# 1': 1, ' 1.': 1, '1. ': 1, '.  ': 2, '  G': 2, ' Go': 2, 'Go ': 2, 'o t': 2, 'o r': 3, 'un/': 4, 'n/f': 2, '/fo': 2, 'foo': 2, 'oo ': 1, 'o a': 1, ' an': 2, 'and': 2, 'nd ': 2, 'd r': 2, 'un ': 2, 'n l': 3, ' lo': 7, 'log': 11, 'ogs': 2, 'gsi': 2, 'sim': 2, 'im.': 2, 'm.p': 2, '# 2': 1, ' 2.': 1, '2. ': 1, 'n/b': 2, '/ba': 2, 'bar': 2, 'ar ': 1, 'r a': 1, 'The': 1, 'e t': 2, ' tw': 2, 'two': 2, 'wo ': 2, 'o s': 1, 'ps ': 1, 's w': 1, ' wi': 1, 'wil': 1, 'ill': 1, 'll ': 1, 'l s': 1, 't w': 1, ' wr': 1, 'wri': 1, 'rit': 1, 'iti': 1, 'tin': 1, 'ng ': 2, 'g t': 2, 'o d': 1, ' di': 1, 'dif': 1, 'iff': 1, 'ffe': 1, 'fer': 1, 'ere': 1, 'ren': 1, 'ent': 1, 'nt ': 1, 't A': 1, ' Ap': 1, 'Apa': 1, 'pac': 1, 'ach': 1, 'che': 1, 'he ': 2, 'e l': 1, 'og ': 2, 'g f': 1, ' fi': 1, 'fil': 1, 'les': 1, 'es.': 1, 's.\n': 1, '.\n#': 1, '# N': 1, ' No': 1, 'Now': 1, 'ow,': 1, 'w, ': 1, ', w': 1, ' we': 1, ""we'"": 1, ""e'r"": 1, ""'re"": 1, 're ': 1, ' go': 1, 'goi': 1, 'ad ': 1, 'd f': 1, 'm b': 1, ' bo': 1, 'bot': 1, 'oth': 1, 'th ': 1, 'h a': 1, ' at': 1, 't t': 1, ' sa': 1, 'sam': 1, 'ame': 2, 'me ': 1, ' ti': 1, 'tim': 1, 'ime': 1, 'me.': 1, 'e.\n': 1, '.\n\n': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, 'm f': 1, 'fol': 4, 'oll': 4, 'llo': 4, 'low': 4, 'ow ': 1, 'w i': 1, 't f': 1, 'ow\n': 1, 'w\n ': 1, '  \n': 3, '  l': 3, 'og1': 2, 'g1 ': 1, '1 =': 1, '= f': 2, 'ow(': 2, 'w(o': 2, '(op': 2, 'ope': 2, 'en(': 2, 'n(""': 2, '(""r': 2, '""ru': 2, 'oo/': 1, 'o/a': 1, '/ac': 2, 'acc': 2, 'cce': 2, 'ess': 2, 'ss-': 2, 's-l': 2, '-lo': 2, 'og""': 2, 'g"")': 2, '""))': 2, 'og2': 2, 'g2 ': 1, '2 =': 1, 'ar/': 1, 'r/a': 1, 'g =': 1, '= m': 1, 'x([': 1, '([l': 1, '[lo': 1, 'g1,': 1, '1,l': 1, ',lo': 1, 'g2]': 1, '2])': 1, '])\n': 1, 'r l': 1, ' li': 1, 'lin': 2, 'ine': 2, 'ne ': 1, 'og:': 1, 'g:\n': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 't(l': 1, '(li': 1, ', e': 1, ' en': 1, 'nd=': 1, ""d='"": 1, ""=''"": 1, ""'')"": 1, ""')\n"": 1}"
David Beazley,genopen.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 5, 'genopen.py': 1, 'takes': 1, 'a': 2, 'sequence': 2, 'of': 2, 'filenames': 1, 'as': 1, 'input': 1, 'and': 1, 'yields': 1, 'file': 1, 'objects': 1, 'that': 1, 'have': 1, 'been': 1, 'suitably': 1, 'open': 1, 'import': 2, 'gzip,': 1, 'bz2': 1, 'def': 1, 'gen_open(paths):': 1, 'for': 2, 'path': 2, 'in': 2, 'paths:': 1, 'if': 2, 'path.suffix': 2, '==': 3, ""'.gz':"": 1, 'yield': 3, 'gzip.open(path,': 1, ""'rt')"": 3, 'elif': 1, ""'.bz2':"": 1, 'bz2.open(path,': 1, 'else:': 1, 'open(path,': 1, 'example': 1, 'use': 1, '__name__': 1, ""'__main__':"": 1, 'from': 1, 'pathlib': 1, 'lognames': 1, '=': 2, ""path('www').rglob('access-log*')"": 1, 'logfiles': 1, 'gen_open(lognames)': 1, 'f': 1, 'logfiles:': 1, 'print(f)': 1}","{'# g': 1, ' ge': 3, 'gen': 3, 'eno': 1, 'nop': 1, 'ope': 7, 'pen': 7, 'en.': 1, 'n.p': 1, '.py': 1, 'py\n': 1, 'y\n#': 1, '\n#\n': 1, '#\n#': 1, '\n# ': 3, '# T': 1, ' Ta': 1, 'Tak': 1, 'ake': 1, 'kes': 1, 'es ': 4, 's a': 3, ' a ': 2, 'a s': 2, ' se': 2, 'seq': 2, 'equ': 2, 'que': 2, 'uen': 2, 'enc': 2, 'nce': 2, 'ce ': 2, 'e o': 2, ' of': 2, 'of ': 2, 'f f': 2, ' fi': 2, 'fil': 4, 'ile': 4, 'len': 1, 'ena': 1, 'nam': 4, 'ame': 4, 'mes': 3, ' as': 1, 'as ': 1, 's i': 1, ' in': 3, 'inp': 1, 'npu': 1, 'put': 1, 'ut ': 1, 't a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd y': 1, ' yi': 4, 'yie': 4, 'iel': 4, 'eld': 4, 'lds': 1, 'ds ': 1, 'le\n': 1, 'e\n#': 1, '# o': 1, ' ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'cts': 1, 'ts ': 1, 's t': 1, ' th': 1, 'tha': 1, 'hat': 1, 'at ': 1, 't h': 1, ' ha': 1, 'hav': 1, 'ave': 1, 've ': 1, 'e b': 1, ' be': 1, 'bee': 1, 'een': 1, 'en ': 1, 'n s': 1, ' su': 1, 'sui': 1, 'uit': 1, 'ita': 1, 'tab': 1, 'abl': 1, 'bly': 1, 'ly ': 1, 'y o': 1, ' op': 2, 'en\n': 1, 'n\n\n': 1, '\n\ni': 2, '\nim': 1, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't g': 1, ' gz': 2, 'gzi': 2, 'zip': 2, 'ip,': 1, 'p, ': 1, ', b': 1, ' bz': 2, 'bz2': 3, 'z2\n': 1, '2\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f g': 1, 'en_': 2, 'n_o': 2, '_op': 2, 'en(': 5, 'n(p': 4, '(pa': 4, 'pat': 9, 'ath': 11, 'ths': 2, 'hs)': 1, 's):': 1, '):\n': 1, ':\n ': 7, '\n  ': 12, '   ': 64, '  f': 3, ' fo': 2, 'for': 2, 'or ': 2, 'r p': 1, ' pa': 5, 'th ': 1, 'h i': 1, 'in ': 2, 'n p': 1, 'hs:': 1, 's:\n': 2, '  i': 1, ' if': 1, 'if ': 3, 'f p': 2, 'th.': 2, 'h.s': 2, '.su': 2, 'suf': 2, 'uff': 2, 'ffi': 2, 'fix': 2, 'ix ': 2, 'x =': 2, ' ==': 3, '== ': 3, ""= '"": 3, "" '."": 2, ""'.g"": 1, '.gz': 1, ""gz'"": 1, ""z':"": 1, ""':\n"": 3, '  y': 3, 'ld ': 3, 'd g': 1, 'ip.': 1, 'p.o': 1, '.op': 2, 'th,': 3, 'h, ': 3, "", '"": 3, "" 'r"": 3, ""'rt"": 3, ""rt'"": 3, ""t')"": 3, ""')\n"": 4, ')\n ': 4, '  e': 2, ' el': 2, 'eli': 1, 'lif': 1, ""'.b"": 1, '.bz': 1, ""z2'"": 1, ""2':"": 1, 'd b': 1, 'z2.': 1, '2.o': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, 'd o': 1, ')\n\n': 1, '\n\n#': 1, '# E': 1, ' Ex': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le ': 1, 'e u': 1, ' us': 1, 'use': 1, 'se\n': 1, 'e\n\n': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ' fr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm p': 1, 'thl': 1, 'hli': 1, 'lib': 1, 'ib ': 1, 'b i': 1, ' im': 1, 't P': 1, ' Pa': 2, 'Pat': 2, 'th\n': 1, 'h\n ': 1, '  l': 2, ' lo': 3, 'log': 5, 'ogn': 2, 'gna': 2, 's =': 2, ' = ': 2, '= P': 1, 'th(': 1, ""h('"": 1, ""('w"": 1, ""'ww"": 1, 'www': 1, ""ww'"": 1, ""w')"": 1, ""')."": 1, ').r': 1, '.rg': 1, 'rgl': 1, 'glo': 1, 'lob': 1, 'ob(': 1, ""b('"": 1, ""('a"": 1, ""'ac"": 1, 'acc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss-': 1, 's-l': 1, '-lo': 1, 'og*': 1, ""g*'"": 1, ""*')"": 1, 'ogf': 2, 'gfi': 2, 'les': 2, '= g': 1, 'n(l': 1, '(lo': 1, 'es)': 1, 's)\n': 1, 'r f': 1, ' f ': 1, 'f i': 1, 'n l': 1, 'es:': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 't(f': 1, '(f)': 1, 'f)\n': 1}"
David Beazley,genqueue.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 5, 'genqueue.py': 1, 'generate': 1, 'a': 3, 'sequence': 1, 'of': 2, 'items': 1, 'that': 1, 'put': 1, 'onto': 1, 'queue': 2, 'def': 3, 'genfrom_queue(thequeue):': 1, 'while': 1, 'true:': 1, 'item': 5, '=': 3, 'thequeue.get()': 1, 'if': 2, 'is': 1, 'stopiteration:': 1, 'break': 1, 'yield': 1, 'sendto_queue(items,': 1, 'thequeue):': 1, 'for': 2, 'in': 2, 'items:': 1, 'thequeue.put(item)': 1, 'thequeue.put(stopiteration)': 1, 'example': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'import': 1, 'queue,': 1, 'threading': 1, 'consumer(q):': 1, 'genfrom_queue(q):': 1, 'print(""consumed"",': 1, 'item)': 1, 'print(""done"")': 1, 'in_q': 1, 'queue.queue()': 1, 'con_thr': 1, 'threading.thread(target=consumer,args=(in_q,))': 1, 'con_thr.start()': 1, 'now,': 1, 'pipe': 1, 'bunch': 1, 'data': 1, 'into': 1, 'the': 1, 'sendto_queue(range(100),': 1, 'in_q)': 1}","{'# g': 1, ' ge': 3, 'gen': 3, 'enq': 1, 'nqu': 1, 'que': 15, 'ueu': 15, 'eue': 15, 'ue.': 5, 'e.p': 3, '.py': 1, 'py\n': 1, 'y\n#': 1, '\n#\n': 1, '#\n#': 1, '\n# ': 2, '# G': 1, ' Ge': 1, 'Gen': 1, 'ene': 1, 'ner': 1, 'era': 3, 'rat': 3, 'ate': 1, 'te ': 1, 'e a': 2, ' a ': 3, 'a s': 1, ' se': 3, 'seq': 1, 'equ': 6, 'uen': 1, 'enc': 1, 'nce': 1, 'ce ': 1, 'e o': 1, ' of': 2, 'of ': 2, 'f i': 2, ' it': 8, 'ite': 10, 'tem': 10, 'ems': 3, 'ms ': 1, 's t': 1, ' th': 8, 'tha': 1, 'hat': 1, 'at ': 1, 't p': 1, ' pu': 1, 'put': 3, 'ut ': 1, 't o': 1, ' on': 1, 'ont': 1, 'nto': 2, 'to ': 2, 'o a': 1, 'a q': 1, ' qu': 4, 'ue\n': 2, 'e\n\n': 1, '\n\nd': 2, '\nde': 2, 'def': 3, 'ef ': 3, 'f g': 1, 'enf': 2, 'nfr': 2, 'fro': 2, 'rom': 2, 'om_': 2, 'm_q': 2, '_qu': 4, 'ue(': 5, 'e(t': 1, '(th': 1, 'the': 6, 'heq': 5, 'ue)': 2, 'e):': 2, '):\n': 4, ':\n ': 7, '\n  ': 18, '   ': 76, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue:': 1, 'e:\n': 1, '  i': 4, 'em ': 4, 'm =': 1, ' = ': 3, '= t': 2, 'e.g': 1, '.ge': 1, 'get': 2, 'et(': 1, 't()': 2, '()\n': 3, ')\n ': 5, ' if': 1, 'if ': 2, 'm i': 3, ' is': 1, 'is ': 1, 's S': 1, ' St': 1, 'Sto': 2, 'top': 2, 'opI': 2, 'pIt': 2, 'Ite': 2, 'ter': 2, 'ati': 2, 'tio': 2, 'ion': 2, 'on:': 1, 'n: ': 1, ': \n': 1, ' \n ': 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 4, 'eak': 1, 'ak\n': 1, 'k\n ': 1, '  y': 1, ' yi': 1, 'yie': 1, 'iel': 1, 'eld': 1, 'ld ': 1, 'd i': 1, 'em\n': 1, 'm\n\n': 1, 'f s': 1, 'sen': 2, 'end': 2, 'ndt': 2, 'dto': 2, 'to_': 2, 'o_q': 2, 'e(i': 1, '(it': 2, 'ms,': 1, 's, ': 1, ', t': 2, '  f': 2, ' fo': 2, 'for': 2, 'or ': 2, 'r i': 2, ' in': 5, 'in ': 2, 'n i': 1, 'ms:': 1, 's:\n': 1, '  t': 2, '.pu': 2, 'ut(': 2, 't(i': 1, 'em)': 2, 'm)\n': 2, 't(S': 1, '(St': 1, 'on)': 1, 'n)\n': 1, ')\n\n': 4, '\n\n#': 1, '# E': 1, ' Ex': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le\n': 1, 'e\ni': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 4, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't q': 1, 'ue,': 1, 'e, ': 1, 'thr': 4, 'hre': 3, 'ead': 3, 'adi': 2, 'din': 2, 'ing': 2, 'ng\n': 1, 'g\n ': 1, '  d': 1, ' de': 1, 'f c': 1, ' co': 3, 'con': 4, 'ons': 3, 'nsu': 3, 'sum': 3, 'ume': 3, 'mer': 2, 'er(': 1, 'r(q': 1, '(q)': 2, 'q):': 2, 'n g': 1, 'e(q': 1, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 2, 'int': 3, 'nt(': 2, 't(""': 2, '(""C': 1, '""Co': 1, 'Con': 1, 'med': 1, 'ed""': 1, 'd"",': 1, '"", ': 1, ', i': 2, '(""d': 1, '""do': 1, 'don': 1, 'one': 1, 'ne""': 1, 'e"")': 1, '"")\n': 1, '\n\n ': 2, 'n_q': 3, '_q ': 1, 'q =': 1, '= q': 1, 'e.Q': 1, '.Qu': 1, 'Que': 1, 'e()': 1, '  c': 2, 'on_': 2, 'n_t': 2, '_th': 2, 'hr ': 1, 'r =': 1, 'ng.': 1, 'g.T': 1, '.Th': 1, 'Thr': 1, 'ad(': 1, 'd(t': 1, '(ta': 1, 'tar': 2, 'arg': 2, 'rge': 1, 'et=': 1, 't=c': 1, '=co': 1, 'er,': 1, 'r,a': 1, ',ar': 1, 'rgs': 1, 'gs=': 1, 's=(': 1, '=(i': 1, '(in': 1, '_q,': 1, 'q,)': 1, ',))': 1, '))\n': 1, 'hr.': 1, 'r.s': 1, '.st': 1, 'sta': 1, 'art': 1, 'rt(': 1, '  #': 1, ' # ': 1, '# N': 1, ' No': 1, 'Now': 1, 'ow,': 1, 'w, ': 1, ', p': 1, ' pi': 1, 'pip': 1, 'ipe': 1, 'pe ': 1, 'a b': 1, ' bu': 1, 'bun': 1, 'unc': 1, 'nch': 1, 'ch ': 1, 'h o': 1, 'f d': 1, ' da': 1, 'dat': 1, 'ata': 1, 'ta ': 1, 'a i': 1, 'o t': 1, 'he ': 1, 'e q': 1, 'e\n ': 1, '  s': 1, 'e(r': 1, '(ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(1': 1, '(10': 1, '100': 1, '00)': 1, '0),': 1, '), ': 1, '_q)': 1, 'q)\n': 1}"
David Beazley,logcoroutine.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 3, 'logcoroutine.py': 1, 'an': 1, 'example': 1, 'of': 1, 'using': 1, 'co-routines': 1, 'to': 1, 'define': 1, 'consumers': 1, 'for': 1, 'the': 1, 'apache': 1, 'log': 2, 'data': 1, 'from': 4, 'consumer': 1, 'import': 4, '*': 4, 'apachelog': 1, 'follow': 1, 'broadcast': 1, '@consumer': 2, 'def': 2, 'find_404():': 1, 'while': 2, 'true:': 2, 'r': 2, '=': 5, '(yield)': 2, 'if': 1, ""r['status']"": 1, '==': 1, '404:': 1, ""print(r['status'],r['datetime'],r['request'])"": 1, 'bytes_transferred():': 1, 'total': 2, '0': 1, '+=': 1, ""r['bytes']"": 1, 'print(""total': 1, 'bytes"",': 1, 'total)': 1, 'lines': 1, 'follow(open(""run/foo/access-log""))': 1, 'apache_log(lines)': 1, 'broadcast(log,': 1, '[find_404(),bytes_transferred()])': 1}","{'# l': 1, ' lo': 2, 'log': 7, 'ogc': 1, 'gco': 1, 'cor': 1, 'oro': 1, 'rou': 2, 'out': 2, 'uti': 2, 'tin': 2, 'ine': 5, 'ne.': 1, 'e.p': 1, '.py': 1, 'py\n': 1, 'y\n#': 1, '\n#\n': 1, '#\n#': 1, '\n# ': 1, '# A': 1, ' An': 1, 'An ': 1, 'n e': 1, ' ex': 1, 'exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le ': 3, 'e o': 1, ' of': 1, 'of ': 1, 'f u': 1, ' us': 1, 'usi': 1, 'sin': 1, 'ing': 1, 'ng ': 1, 'g c': 1, ' co': 3, 'co-': 1, 'o-r': 1, '-ro': 1, 'nes': 3, 'es ': 2, 's t': 1, ' to': 4, 'to ': 1, 'o d': 1, ' de': 1, 'def': 3, 'efi': 1, 'fin': 3, 'ne ': 1, 'e c': 1, 'con': 4, 'ons': 4, 'nsu': 4, 'sum': 4, 'ume': 4, 'mer': 4, 'ers': 1, 'rs ': 1, 's f': 1, ' fo': 3, 'for': 1, 'or ': 1, 'r t': 1, ' th': 1, 'the': 1, 'he ': 2, 'e A': 1, ' Ap': 1, 'Apa': 1, 'pac': 3, 'ach': 3, 'che': 3, 'e l': 1, 'og ': 3, 'g d': 1, ' da': 1, 'dat': 2, 'ata': 1, 'ta\n': 1, 'a\n\n': 1, '\n\nf': 1, '\nfr': 4, 'fro': 4, 'rom': 4, 'om ': 4, 'm c': 1, 'er ': 1, 'r i': 1, ' im': 4, 'imp': 4, 'mpo': 4, 'por': 4, 'ort': 4, 'rt ': 4, 't *': 4, ' *\n': 4, '*\nf': 3, 'm a': 1, ' ap': 2, 'apa': 2, 'hel': 1, 'elo': 1, 'g i': 1, 'm f': 1, 'fol': 2, 'oll': 2, 'llo': 2, 'low': 2, 'ow ': 1, 'w i': 1, 'm b': 1, ' br': 1, 'bro': 2, 'roa': 2, 'oad': 2, 'adc': 2, 'dca': 2, 'cas': 2, 'ast': 2, 'st ': 1, 't i': 1, '*\n\n': 1, '\n\n@': 2, '\n@c': 2, '@co': 2, 'er\n': 2, 'r\nd': 2, '\nde': 2, 'ef ': 2, 'f f': 1, ' fi': 1, 'ind': 2, 'nd_': 2, 'd_4': 2, '_40': 2, '404': 3, '04(': 2, '4()': 2, '():': 2, '):\n': 2, ':\n ': 5, '\n  ': 9, '   ': 47, '  w': 2, ' wh': 2, 'whi': 2, 'hil': 2, 'ile': 2, 'e T': 2, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue:': 2, 'e:\n': 2, '  r': 2, ' r ': 2, 'r =': 2, ' = ': 5, '= (': 2, ' (y': 2, '(yi': 2, 'yie': 2, 'iel': 2, 'eld': 2, 'ld)': 2, 'd)\n': 2, ')\n ': 2, '  i': 1, ' if': 1, 'if ': 1, 'f r': 1, ' r[': 2, ""r['"": 5, ""['s"": 2, ""'st"": 2, 'sta': 2, 'tat': 2, 'atu': 2, 'tus': 2, ""us'"": 2, ""s']"": 3, ""'] "": 1, '] =': 1, ' ==': 1, '== ': 1, '= 4': 1, ' 40': 1, '04:': 1, '4:\n': 1, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 2, 'int': 2, 'nt(': 2, 't(r': 1, '(r[': 1, ""'],"": 2, '],r': 2, ',r[': 2, ""['d"": 1, ""'da"": 1, 'ate': 1, 'tet': 1, 'eti': 1, 'tim': 1, 'ime': 1, ""me'"": 1, ""e']"": 1, ""['r"": 1, ""'re"": 1, 'req': 1, 'equ': 1, 'que': 1, 'ues': 1, 'est': 1, ""st'"": 1, ""t']"": 1, ""'])"": 1, '])\n': 2, ')\n\n': 3, 'f b': 1, ' by': 2, 'byt': 4, 'yte': 4, 'tes': 4, 'es_': 2, 's_t': 2, '_tr': 2, 'tra': 2, 'ran': 2, 'ans': 2, 'nsf': 2, 'sfe': 2, 'fer': 2, 'err': 2, 'rre': 2, 'red': 2, 'ed(': 2, 'd()': 2, '  t': 2, 'tot': 3, 'ota': 4, 'tal': 4, 'al ': 3, 'l =': 1, '= 0': 1, ' 0\n': 1, '0\n ': 1, 'l +': 1, ' +=': 1, '+= ': 1, '= r': 1, ""['b"": 1, ""'by"": 1, ""es'"": 1, ""']\n"": 1, ']\n ': 1, 't(""': 1, '(""T': 1, '""To': 1, 'Tot': 1, 'l b': 1, 'es""': 1, 's"",': 1, '"", ': 1, ', t': 1, 'al)': 1, 'l)\n': 1, '\n\nl': 1, '\nli': 1, 'lin': 2, 's =': 1, '= f': 1, 'ow(': 1, 'w(o': 1, '(op': 1, 'ope': 1, 'pen': 1, 'en(': 1, 'n(""': 1, '(""r': 1, '""ru': 1, 'run': 1, 'un/': 1, 'n/f': 1, '/fo': 1, 'foo': 1, 'oo/': 1, 'o/a': 1, '/ac': 1, 'acc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss-': 1, 's-l': 1, '-lo': 1, 'og""': 1, 'g"")': 1, '""))': 1, '))\n': 1, ')\nl': 1, '\nlo': 1, 'g  ': 1, '  =': 1, '= a': 1, 'he_': 1, 'e_l': 1, '_lo': 1, 'og(': 1, 'g(l': 1, '(li': 1, 'es)': 1, 's)\n': 1, '\n\nb': 1, '\nbr': 1, 'st(': 1, 't(l': 1, '(lo': 1, 'og,': 1, 'g, ': 1, ', [': 1, ' [f': 1, '[fi': 1, '(),': 1, '),b': 1, ',by': 1, '()]': 1, ')])': 1}"
David Beazley,netsend.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 5, 'netsend.py': 1, 'consume': 1, 'items': 1, 'and': 1, 'send': 1, 'them': 1, 'to': 3, 'a': 2, 'remote': 1, 'machine': 1, 'import': 4, 'socket,': 1, 'pickle': 1, 'class': 3, 'netconsumer(object):': 1, 'def': 4, '__init__(self,addr):': 1, 'self.s': 1, '=': 5, 'socket.socket(socket.af_inet,': 1, 'socket.sock_stream)': 1, 'self.s.connect(addr)': 1, 'send(self,item):': 2, 'pitem': 1, 'pickle.dumps(item)': 1, 'self.s.sendall(pitem)': 1, 'close(self):': 1, 'self.s.close()': 1, 'example': 1, 'use.': 1, 'this': 1, 'requires': 1, 'you': 1, 'run': 1, 'receivefrom.py': 1, 'first.': 1, 'if': 2, '__name__': 1, '==': 2, ""'__main__':"": 1, 'from': 3, 'broadcast': 2, 'follow': 2, 'apachelog': 1, 'apache_log': 1, 'that': 1, 'sends': 1, '404': 1, 'requests': 1, 'another': 1, 'host': 1, 'stat404(netconsumer):': 1, ""item['status']"": 1, '404:': 1, 'netconsumer.send(self,item)': 1, 'stat404': 1, 'stat404(("""",15000))': 1, 'lines': 1, 'follow(open(""run/foo/access-log""))': 1, 'log': 1, 'apache_log(lines)': 1, 'broadcast(log,[stat404])': 1}","{'# n': 1, ' ne': 1, 'net': 1, 'ets': 1, 'tse': 1, 'sen': 7, 'end': 7, 'nd.': 1, 'd.p': 1, '.py': 2, 'py\n': 1, 'y\n#': 1, '\n#\n': 1, '#\n#': 1, '\n# ': 2, '# C': 1, ' Co': 1, 'Con': 4, 'ons': 4, 'nsu': 4, 'sum': 4, 'ume': 4, 'me ': 1, 'e i': 1, ' it': 2, 'ite': 8, 'tem': 8, 'ems': 1, 'ms ': 1, 's a': 1, ' an': 2, 'and': 1, 'nd ': 2, 'd s': 1, ' se': 8, 'd t': 1, ' th': 2, 'the': 2, 'hem': 1, 'em ': 2, 'm t': 1, ' to': 3, 'to ': 3, 'o a': 2, ' a ': 1, 'a r': 1, ' re': 4, 'rem': 1, 'emo': 1, 'mot': 1, 'ote': 1, 'te ': 1, 'e m': 1, ' ma': 1, 'mac': 1, 'ach': 4, 'chi': 1, 'hin': 1, 'ine': 3, 'ne\n': 1, 'e\n\n': 2, '\n\ni': 2, '\nim': 1, 'imp': 4, 'mpo': 4, 'por': 4, 'ort': 4, 'rt ': 4, 't s': 2, ' so': 3, 'soc': 5, 'ock': 5, 'cke': 5, 'ket': 5, 'et,': 1, 't, ': 1, ', p': 1, ' pi': 3, 'pic': 2, 'ick': 2, 'ckl': 2, 'kle': 2, 'le\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 3, 'las': 3, 'ass': 3, 'ss ': 3, 's N': 1, ' Ne': 2, 'Net': 3, 'etC': 3, 'tCo': 3, 'mer': 3, 'er(': 1, 'r(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 2, 'ct)': 1, 't):': 1, '):\n': 6, ':\n ': 8, '\n  ': 25, '   ': 95, '  d': 4, ' de': 4, 'def': 4, 'ef ': 4, 'f _': 2, ' __': 2, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 5, 'sel': 9, 'elf': 9, 'lf,': 4, 'f,a': 1, ',ad': 1, 'add': 2, 'ddr': 2, 'dr)': 2, 'r):': 2, '  s': 5, 'lf.': 4, 'f.s': 4, '.s ': 1, 's =': 2, ' = ': 5, '= s': 1, 'et.': 3, 't.s': 1, '.so': 1, 'et(': 1, 't(s': 1, '(so': 1, 't.A': 1, '.AF': 1, 'AF_': 1, 'F_I': 1, '_IN': 1, 'INE': 1, 'NET': 1, 'ET,': 1, 'T, ': 1, ', s': 1, 't.S': 1, '.SO': 1, 'SOC': 1, 'OCK': 1, 'CK_': 1, 'K_S': 1, '_ST': 1, 'STR': 1, 'TRE': 1, 'REA': 1, 'EAM': 1, 'AM)': 1, 'M)\n': 1, ')\n ': 8, '.s.': 3, 's.c': 2, '.co': 1, 'con': 1, 'onn': 1, 'nne': 1, 'nec': 1, 'ct(': 1, 't(a': 1, '(ad': 1, 'r)\n': 1, 'f s': 2, 'nd(': 3, 'd(s': 3, 'f,i': 3, ',it': 3, 'em)': 5, 'm):': 2, '  p': 1, 'pit': 2, 'm =': 1, '= p': 1, 'le.': 1, 'e.d': 1, '.du': 1, 'dum': 1, 'ump': 1, 'mps': 1, 'ps(': 1, 's(i': 1, '(it': 1, 'm)\n': 3, 's.s': 1, '.se': 2, 'nda': 1, 'dal': 1, 'all': 1, 'll(': 1, 'l(p': 1, '(pi': 1, 'f c': 1, ' cl': 3, 'clo': 2, 'los': 2, 'ose': 2, 'se(': 2, 'e(s': 1, 'lf)': 1, 'f):': 1, '.cl': 1, 'e()': 1, '()\n': 1, ')\n\n': 2, '\n\n#': 1, '# E': 1, ' Ex': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le ': 1, 'e u': 1, ' us': 1, 'use': 1, 'se.': 1, 'e. ': 1, '.  ': 1, '  T': 1, ' Th': 1, 'Thi': 1, 'his': 1, 'is ': 1, 's r': 1, 'req': 2, 'equ': 2, 'qui': 1, 'uir': 1, 'ire': 1, 'res': 1, 'es ': 2, 's y': 1, ' yo': 1, 'you': 1, 'ou ': 1, 'u t': 1, 'o r': 1, ' ru': 1, 'run': 2, 'un ': 1, 'n r': 1, 'rec': 1, 'ece': 1, 'cei': 1, 'eiv': 1, 'ive': 1, 'vef': 1, 'efr': 1, 'fro': 4, 'rom': 4, 'om.': 1, 'm.p': 1, 'py ': 1, 'y f': 1, ' fi': 1, 'fir': 1, 'irs': 1, 'rst': 1, 'st.': 1, 't.\n': 1, '.\n\n': 1, '\nif': 1, 'if ': 2, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 2, '== ': 2, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  f': 3, ' fr': 3, 'om ': 3, 'm b': 1, ' br': 3, 'bro': 3, 'roa': 3, 'oad': 3, 'adc': 3, 'dca': 3, 'cas': 3, 'ast': 3, 'st ': 1, 't i': 1, ' im': 3, 't b': 1, 'st\n': 2, 't\n ': 2, 'm f': 1, ' fo': 3, 'fol': 3, 'oll': 3, 'llo': 3, 'low': 3, 'ow ': 1, 'w i': 1, 't f': 1, 'ow\n': 1, 'w\n ': 1, 'm a': 1, ' ap': 3, 'apa': 3, 'pac': 3, 'che': 3, 'hel': 1, 'elo': 1, 'log': 6, 'og ': 2, 'g i': 1, 't a': 1, 'he_': 2, 'e_l': 2, '_lo': 2, 'og\n': 1, 'g\n\n': 1, '\n\n ': 2, '  #': 1, ' # ': 1, '# A': 1, ' A ': 1, 'A c': 1, 's t': 2, 'tha': 1, 'hat': 1, 'at ': 1, 'nds': 1, 'ds ': 1, 's 4': 1, ' 40': 2, '404': 6, '04 ': 2, '4 r': 1, 'que': 1, 'ues': 1, 'est': 1, 'sts': 1, 'ts ': 1, 'ano': 1, 'not': 1, 'oth': 1, 'her': 1, 'er ': 1, 'r h': 1, ' ho': 1, 'hos': 1, 'ost': 1, '  c': 1, 's S': 1, ' St': 2, 'Sta': 2, 'tat': 5, 'at4': 4, 't40': 4, '04(': 2, '4(N': 1, '(Ne': 1, 'er)': 1, '  i': 1, ' if': 1, 'f i': 1, 'em[': 1, ""m['"": 1, ""['s"": 1, ""'st"": 1, 'sta': 3, 'atu': 1, 'tus': 1, ""us'"": 1, ""s']"": 1, ""'] "": 1, '] =': 1, '= 4': 1, '04:': 1, '4:\n': 1, '  N': 1, 'er.': 1, 'r.s': 1, '  \n': 5, ' \n ': 4, ' st': 1, '4 =': 1, '= S': 1, '4((': 1, '((""': 1, '(""""': 1, '"""",': 1, '"",1': 1, ',15': 1, '150': 1, '500': 1, '000': 1, '00)': 1, '0))': 1, '))\n': 2, '  l': 2, ' li': 1, 'lin': 2, 'nes': 2, '= f': 1, 'ow(': 1, 'w(o': 1, '(op': 1, 'ope': 1, 'pen': 1, 'en(': 1, 'n(""': 1, '(""r': 1, '""ru': 1, 'un/': 1, 'n/f': 1, '/fo': 1, 'foo': 1, 'oo/': 1, 'o/a': 1, '/ac': 1, 'acc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss-': 1, 's-l': 1, '-lo': 1, 'og""': 1, 'g"")': 1, '""))': 1, ' lo': 1, 'g  ': 1, '  =': 1, '= a': 1, 'og(': 1, 'g(l': 1, '(li': 1, 'es)': 1, 's)\n': 1, '  b': 1, 'st(': 1, 't(l': 1, '(lo': 1, 'og,': 1, 'g,[': 1, ',[s': 1, '[st': 1, '04]': 1, '4])': 1, '])\n': 1, '\n\n\n': 1}"
David Beazley,runservers.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 2, 'subprocess': 1, 'time': 1, 'print(""running': 1, 'simulated': 2, 'web': 1, 'servers"")': 1, 'print': 2, 'print(""this': 1, 'runs': 1, 'a': 2, 'server': 1, 'that': 1, 'writes': 1, 'these': 1, 'log': 1, 'files"")': 1, 'print(""': 2, 'run/foo/access-log"")': 1, 'run/bar/access-log"")': 1, 'print()': 1, 'print(""please': 1, 'leave': 1, 'this': 1, 'running': 1, 'as': 1, 'background': 1, 'process': 1, 'while"")': 1, 'print(""working': 1, 'on': 1, 'examples': 1, 'related': 1, 'to': 1, 'infinite': 1, 'input': 1, 'streams"")': 1, 'p1': 1, '=': 2, ""subprocess.popen(['python','logsim.py'],"": 2, ""cwd='run/foo')"": 1, 'time.sleep(600)': 1, 'p2': 1, ""cwd='run/bar')"": 1, 'p1.wait()': 1, 'p2.wait()': 1}","{'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't s': 2, ' su': 3, 'sub': 3, 'ubp': 3, 'bpr': 3, 'pro': 4, 'roc': 4, 'oce': 4, 'ces': 6, 'ess': 6, 'ss\n': 1, 's\ni': 1, '\nim': 1, 't t': 1, ' ti': 1, 'tim': 2, 'ime': 2, 'me\n': 1, 'e\n\n': 1, '\n\np': 3, '\npr': 9, 'pri': 9, 'rin': 9, 'int': 9, 'nt(': 7, 't(""': 6, '(""R': 1, '""Ru': 1, 'Run': 1, 'unn': 2, 'nni': 2, 'nin': 2, 'ing': 3, 'ng ': 3, 'g s': 1, ' si': 2, 'sim': 4, 'imu': 2, 'mul': 2, 'ula': 2, 'lat': 3, 'ate': 3, 'ted': 3, 'ed ': 3, 'd w': 1, ' we': 1, 'web': 1, 'eb ': 1, 'b s': 1, ' se': 2, 'ser': 2, 'erv': 2, 'rve': 2, 'ver': 2, 'ers': 1, 'rs""': 1, 's"")': 3, '"")\n': 6, ')\np': 8, 'nt ': 1, 't \n': 1, ' \np': 1, '(""T': 1, '""Th': 1, 'Thi': 1, 'his': 2, 'is ': 2, 's r': 3, ' ru': 4, 'run': 6, 'uns': 1, 'ns ': 1, 's a': 2, ' a ': 2, 'a s': 1, 'd s': 1, 'er ': 1, 'r t': 1, ' th': 3, 'tha': 1, 'hat': 1, 'at ': 1, 't w': 1, ' wr': 1, 'wri': 1, 'rit': 1, 'ite': 2, 'tes': 1, 'es ': 2, 's t': 1, 'the': 1, 'hes': 1, 'ese': 1, 'se ': 2, 'e l': 2, ' lo': 1, 'log': 5, 'og ': 1, 'g f': 1, ' fi': 1, 'fil': 1, 'ile': 2, 'les': 2, 'es""': 1, 'nt\n': 1, 't\np': 1, '("" ': 2, '""  ': 2, '   ': 44, '  r': 2, 'un/': 4, 'n/f': 2, '/fo': 2, 'foo': 2, 'oo/': 1, 'o/a': 1, '/ac': 2, 'acc': 2, 'cce': 2, 'ss-': 2, 's-l': 2, '-lo': 2, 'og""': 2, 'g"")': 2, 'n/b': 2, '/ba': 2, 'bar': 2, 'ar/': 1, 'r/a': 1, 't()': 3, '()\n': 3, '(""P': 1, '""Pl': 1, 'Ple': 1, 'lea': 2, 'eas': 1, 'ase': 1, ' le': 1, 'eav': 1, 'ave': 1, 've ': 1, 'e t': 1, 'thi': 1, 'g a': 1, ' as': 1, 'as ': 1, 'a b': 1, ' ba': 1, 'bac': 1, 'ack': 1, 'ckg': 1, 'kgr': 1, 'gro': 1, 'rou': 1, 'oun': 1, 'und': 1, 'nd ': 1, 'd p': 1, ' pr': 1, 'ss ': 1, 's w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'le""': 1, 'e"")': 1, '(""w': 1, '""wo': 1, 'wor': 1, 'ork': 1, 'rki': 1, 'kin': 1, 'g o': 1, ' on': 1, 'on ': 1, 'n e': 1, ' ex': 1, 'exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, ' re': 1, 'rel': 1, 'ela': 1, 'd t': 1, ' to': 1, 'to ': 1, 'o i': 1, ' in': 2, 'inf': 1, 'nfi': 1, 'fin': 1, 'ini': 1, 'nit': 1, 'te ': 1, 'e i': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut ': 1, ' st': 1, 'str': 1, 'tre': 1, 'rea': 1, 'eam': 1, 'ams': 1, 'ms""': 1, ')\n\n': 3, '\np1': 2, 'p1 ': 1, '1 =': 1, ' = ': 2, '= s': 2, 'ss.': 2, 's.P': 2, '.Po': 2, 'Pop': 2, 'ope': 2, 'pen': 2, 'en(': 2, 'n([': 2, ""(['"": 2, ""['p"": 2, ""'py"": 2, 'pyt': 2, 'yth': 2, 'tho': 2, 'hon': 2, ""on'"": 2, ""n',"": 2, ""','"": 2, "",'l"": 2, ""'lo"": 2, 'ogs': 2, 'gsi': 2, 'im.': 2, 'm.p': 2, '.py': 2, ""py'"": 2, ""y']"": 2, ""'],"": 2, '],\n': 2, ',\n ': 2, '\n  ': 2, '  c': 2, ' cw': 2, 'cwd': 2, 'wd=': 2, ""d='"": 2, ""='r"": 2, ""'ru"": 2, ""oo'"": 1, ""o')"": 1, ""')\n"": 2, '\n\nt': 1, '\nti': 1, 'me.': 1, 'e.s': 1, '.sl': 1, 'sle': 1, 'lee': 1, 'eep': 1, 'ep(': 1, 'p(6': 1, '(60': 1, '600': 1, '00)': 1, '0)\n': 1, '\np2': 2, 'p2 ': 1, '2 =': 1, ""ar'"": 1, ""r')"": 1, 'p1.': 1, '1.w': 1, '.wa': 2, 'wai': 2, 'ait': 2, 'it(': 2, 'p2.': 1, '2.w': 1}"
David Beazley,sendto.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 5, 'sendto.py': 1, 'send': 1, 'items': 1, 'to': 2, 'a': 2, 'remote': 1, 'machine': 1, 'import': 4, 'socket': 1, 'from': 3, 'genpickle': 1, 'gen_pickle': 1, 'def': 1, 'sendto(source,addr):': 1, 's': 1, '=': 3, 'socket.socket(socket.af_inet,socket.sock_stream)': 1, 's.connect(addr)': 1, 'for': 1, 'pitem': 1, 'in': 2, 'gen_pickle(source):': 1, 's.sendall(pitem)': 1, 's.close()': 1, 'example': 1, 'use.': 1, 'this': 1, 'requires': 1, 'you': 1, 'run': 1, 'receivefrom.py': 1, 'different': 1, 'process/window': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'apachelog': 1, 'apache_log': 1, 'follow': 2, 'lines': 1, 'follow(open(""run/foo/access-log""))': 1, 'log': 1, 'apache_log(lines)': 1, 'sendto(log,("""",15000))': 1}","{'# s': 1, ' se': 3, 'sen': 4, 'end': 5, 'ndt': 3, 'dto': 3, 'to.': 1, 'o.p': 1, '.py': 2, 'py\n': 2, 'y\n#': 2, '\n#\n': 1, '#\n#': 1, '\n# ': 3, '# S': 1, ' Se': 1, 'Sen': 1, 'nd ': 1, 'd i': 1, ' it': 1, 'ite': 3, 'tem': 3, 'ems': 1, 'ms ': 1, 's t': 1, ' to': 2, 'to ': 2, 'o a': 1, ' a ': 2, 'a r': 1, ' re': 3, 'rem': 1, 'emo': 1, 'mot': 1, 'ote': 1, 'te ': 1, 'e m': 1, ' ma': 1, 'mac': 1, 'ach': 4, 'chi': 1, 'hin': 1, 'ine': 3, 'ne\n': 1, 'e\n\n': 2, '\n\ni': 2, '\nim': 1, 'imp': 4, 'mpo': 4, 'por': 4, 'ort': 4, 'rt ': 4, 't s': 1, ' so': 2, 'soc': 5, 'ock': 5, 'cke': 5, 'ket': 5, 'et\n': 1, 't\nf': 1, '\nfr': 1, 'fro': 4, 'rom': 4, 'om ': 3, 'm g': 1, ' ge': 3, 'gen': 3, 'enp': 1, 'npi': 1, 'pic': 3, 'ick': 3, 'ckl': 3, 'kle': 3, 'le ': 2, 'e i': 1, ' im': 3, 't g': 1, 'en_': 2, 'n_p': 2, '_pi': 2, 'le\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f s': 1, 'to(': 2, 'o(s': 1, '(so': 3, 'sou': 2, 'our': 2, 'urc': 2, 'rce': 2, 'ce,': 1, 'e,a': 1, ',ad': 1, 'add': 2, 'ddr': 2, 'dr)': 2, 'r):': 1, '):\n': 2, ':\n ': 3, '\n  ': 10, '   ': 25, '  s': 5, ' s ': 1, 's =': 2, ' = ': 3, '= s': 1, 'et.': 3, 't.s': 1, '.so': 1, 'et(': 1, 't(s': 1, 't.A': 1, '.AF': 1, 'AF_': 1, 'F_I': 1, '_IN': 1, 'INE': 1, 'NET': 1, 'ET,': 1, 'T,s': 1, ',so': 1, 't.S': 1, '.SO': 1, 'SOC': 1, 'OCK': 1, 'CK_': 1, 'K_S': 1, '_ST': 1, 'STR': 1, 'TRE': 1, 'REA': 1, 'EAM': 1, 'AM)': 1, 'M)\n': 1, ')\n ': 5, ' s.': 3, 's.c': 2, '.co': 1, 'con': 1, 'onn': 1, 'nne': 1, 'nec': 1, 'ect': 1, 'ct(': 1, 't(a': 1, '(ad': 1, 'r)\n': 1, '  f': 3, ' fo': 4, 'for': 1, 'or ': 1, 'r p': 1, ' pi': 1, 'pit': 2, 'em ': 1, 'm i': 1, ' in': 2, 'in ': 2, 'n g': 1, 'le(': 1, 'e(s': 1, 'ce)': 1, 'e):': 1, 's.s': 1, '.se': 1, 'nda': 1, 'dal': 1, 'all': 1, 'll(': 1, 'l(p': 1, '(pi': 1, 'em)': 1, 'm)\n': 1, '.cl': 1, 'clo': 1, 'los': 1, 'ose': 1, 'se(': 1, 'e()': 1, '()\n': 1, ')\n\n': 1, '\n\n#': 1, '# E': 1, ' Ex': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'e u': 1, ' us': 1, 'use': 1, 'se.': 1, 'e. ': 1, '.  ': 1, '  T': 1, ' Th': 1, 'Thi': 1, 'his': 1, 'is ': 1, 's r': 1, 'req': 1, 'equ': 1, 'qui': 1, 'uir': 1, 'ire': 1, 'res': 1, 'es ': 2, 's y': 1, ' yo': 1, 'you': 1, 'ou ': 1, 'u t': 1, 'o r': 1, ' ru': 1, 'run': 2, 'un ': 1, 'n r': 1, 'rec': 1, 'ece': 1, 'cei': 1, 'eiv': 1, 'ive': 1, 'vef': 1, 'efr': 1, 'om.': 1, 'm.p': 1, '# i': 1, 'n a': 1, 'a d': 1, ' di': 1, 'dif': 1, 'iff': 1, 'ffe': 1, 'fer': 1, 'ere': 1, 'ren': 1, 'ent': 1, 'nt ': 1, 't p': 1, ' pr': 1, 'pro': 1, 'roc': 1, 'oce': 1, 'ces': 2, 'ess': 2, 'ss/': 1, 's/w': 1, '/wi': 1, 'win': 1, 'ind': 1, 'ndo': 1, 'dow': 1, 'ow\n': 2, 'w\n\n': 2, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, ' fr': 2, 'm a': 1, ' ap': 3, 'apa': 3, 'pac': 3, 'che': 3, 'hel': 1, 'elo': 1, 'log': 6, 'og ': 2, 'g i': 1, 't a': 1, 'he_': 2, 'e_l': 2, '_lo': 2, 'og\n': 1, 'g\n ': 1, 'm f': 1, 'fol': 3, 'oll': 3, 'llo': 3, 'low': 3, 'ow ': 1, 'w i': 1, 't f': 1, '\n\n ': 1, '  l': 2, ' li': 1, 'lin': 2, 'nes': 2, '= f': 1, 'ow(': 1, 'w(o': 1, '(op': 1, 'ope': 1, 'pen': 1, 'en(': 1, 'n(""': 1, '(""r': 1, '""ru': 1, 'un/': 1, 'n/f': 1, '/fo': 1, 'foo': 1, 'oo/': 1, 'o/a': 1, '/ac': 1, 'acc': 1, 'cce': 1, 'ss-': 1, 's-l': 1, '-lo': 1, 'og""': 1, 'g"")': 1, '""))': 1, '))\n': 2, ' lo': 1, 'g =': 1, '= a': 1, 'og(': 1, 'g(l': 1, '(li': 1, 'es)': 1, 's)\n': 1, 'o(l': 1, '(lo': 1, 'og,': 1, 'g,(': 1, ',(""': 1, '(""""': 1, '"""",': 1, '"",1': 1, ',15': 1, '150': 1, '500': 1, '000': 1, '00)': 1, '0))': 1}"
David Beazley,shutdownevt.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 5, 'shutdownevt.py': 1, 'example': 1, 'of': 1, 'a': 3, 'generator': 1, 'that': 1, 'uses': 1, 'an': 1, 'event': 1, 'to': 1, 'shut': 2, 'down': 2, 'import': 2, 'time': 1, 'def': 2, 'follow(thefile,shutdown=none):': 1, 'thefile.seek(0,2)': 1, 'while': 2, 'true:': 1, 'if': 2, 'shutdown': 1, 'and': 1, 'shutdown.isset():': 1, 'break': 1, 'line': 3, '=': 4, 'thefile.readline()': 1, 'not': 1, 'line:': 1, 'time.sleep(0.1)': 1, 'continue': 1, 'yield': 1, 'threading': 1, 'shutdown_event': 1, 'threading.event()': 1, 'run():': 1, 'lines': 1, 'follow(open(""run/foo/access-log""),shutdown_event)': 1, 'for': 1, 'in': 2, 'lines:': 1, 'print(line)': 1, 'print(""done"")': 1, 'run': 1, 'the': 1, 'above': 1, 'separate': 1, 'thread': 1, 't': 1, 'threading.thread(target=run)': 1, 't.start()': 1, 'wait': 1, 'then': 1, 'time.sleep(60)': 1, 'print(""shutting': 1, 'down"")': 1, 'shutdown_event.set()': 1}","{'# s': 1, ' sh': 5, 'shu': 9, 'hut': 10, 'utd': 7, 'tdo': 7, 'dow': 10, 'own': 10, 'wne': 1, 'nev': 1, 'evt': 1, 'vt.': 1, 't.p': 1, '.py': 1, 'py\n': 1, 'y\n#': 1, '\n#\n': 1, '#\n#': 1, '\n# ': 3, '# E': 1, ' Ex': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le ': 3, 'e o': 1, ' of': 1, 'of ': 1, 'f a': 1, ' a ': 3, 'a g': 1, ' ge': 1, 'gen': 1, 'ene': 1, 'ner': 1, 'era': 1, 'rat': 2, 'ato': 1, 'tor': 1, 'or ': 2, 'r t': 1, ' th': 9, 'tha': 1, 'hat': 1, 'at ': 1, 't u': 1, ' us': 1, 'use': 1, 'ses': 1, 'es ': 2, 's a': 1, ' an': 2, 'an ': 1, 'n e': 1, ' ev': 1, 'eve': 4, 'ven': 5, 'ent': 5, 'nt ': 2, 't t': 3, ' to': 1, 'to ': 1, 'o s': 1, 'ut ': 2, 't d': 2, ' do': 3, 'wn\n': 2, 'n\n\n': 2, '\n\ni': 2, '\nim': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, ' ti': 2, 'tim': 3, 'ime': 3, 'me\n': 1, 'e\n\n': 2, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f f': 1, ' fo': 3, 'fol': 2, 'oll': 2, 'llo': 2, 'low': 2, 'ow(': 2, 'w(t': 1, '(th': 1, 'the': 5, 'hef': 3, 'efi': 3, 'fil': 3, 'ile': 5, 'le,': 1, 'e,s': 1, ',sh': 2, 'wn=': 1, 'n=N': 1, '=No': 1, 'Non': 1, 'one': 2, 'ne)': 2, 'e):': 1, '):\n': 2, ':\n ': 5, '\n  ': 12, '   ': 58, '  t': 2, 'le.': 2, 'e.s': 3, '.se': 2, 'see': 1, 'eek': 1, 'ek(': 1, 'k(0': 1, '(0,': 1, '0,2': 1, ',2)': 1, '2)\n': 1, ')\n ': 4, '  w': 1, ' wh': 2, 'whi': 2, 'hil': 2, 'e T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue:': 1, 'e:\n': 2, '  i': 2, ' if': 2, 'if ': 2, 'f s': 1, 'wn ': 1, 'n a': 2, 'and': 1, 'nd ': 1, 'd s': 1, 'wn.': 1, 'n.i': 1, '.is': 1, 'isS': 1, 'sSe': 1, 'Set': 1, 'et(': 2, 't()': 4, '():': 2, '): ': 1, ': b': 1, ' br': 1, 'bre': 1, 'rea': 7, 'eak': 1, 'ak\n': 1, 'k\n ': 1, '  l': 2, ' li': 6, 'lin': 8, 'ine': 8, 'ne ': 2, 'e =': 1, ' = ': 4, '= t': 3, 'e.r': 1, '.re': 1, 'ead': 6, 'adl': 1, 'dli': 1, 'ne(': 1, 'e()': 1, '()\n': 4, 'f n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't l': 1, 'ne:': 1, 'me.': 2, '.sl': 2, 'sle': 2, 'lee': 2, 'eep': 2, 'ep(': 2, 'p(0': 1, '(0.': 1, '0.1': 1, '.1)': 1, '1)\n': 1, '  c': 1, ' co': 1, 'con': 1, 'ont': 1, 'nti': 1, 'tin': 2, 'inu': 1, 'nue': 1, 'ue\n': 1, 'e\n ': 1, '  y': 1, ' yi': 1, 'yie': 1, 'iel': 1, 'eld': 1, 'ld ': 1, 'd l': 1, 'ne\n': 1, 'thr': 4, 'hre': 5, 'adi': 3, 'din': 3, 'ing': 4, 'ng\n': 1, 'g\n\n': 1, '\n\ns': 2, '\nsh': 2, 'wn_': 3, 'n_e': 3, '_ev': 3, 't =': 2, 'ng.': 2, 'g.E': 1, '.Ev': 1, 'Eve': 1, 'nt(': 4, ')\n\n': 5, 'f r': 1, ' ru': 1, 'run': 3, 'un(': 1, 'n()': 1, 'nes': 2, 's =': 1, '= f': 1, 'w(o': 1, '(op': 1, 'ope': 1, 'pen': 1, 'en(': 1, 'n(""': 1, '(""r': 1, '""ru': 1, 'un/': 1, 'n/f': 1, '/fo': 1, 'foo': 1, 'oo/': 1, 'o/a': 1, '/ac': 1, 'acc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss-': 1, 's-l': 1, '-lo': 1, 'log': 1, 'og""': 1, 'g"")': 1, '""),': 1, '),s': 1, 'nt)': 1, 't)\n': 1, '  f': 1, 'for': 1, 'r l': 1, 'e i': 2, ' in': 2, 'in ': 2, 'n l': 1, 'es:': 1, 's:\n': 1, '  p': 2, ' pr': 2, 'pri': 3, 'rin': 3, 'int': 3, 't(l': 1, '(li': 1, 'e)\n': 1, '\n\n ': 1, 't(""': 2, '(""D': 1, '""Do': 1, 'Don': 1, 'ne""': 1, 'e"")': 1, '"")\n': 2, '\n\n\n': 2, '\n\n#': 2, '# R': 1, ' Ru': 1, 'Run': 1, 'un ': 1, 'n t': 1, 'he ': 1, 'e a': 1, ' ab': 1, 'abo': 1, 'bov': 1, 'ove': 1, 've ': 1, 'a s': 1, ' se': 1, 'sep': 1, 'epa': 1, 'par': 1, 'ara': 1, 'ate': 1, 'te ': 1, 'e t': 2, 'ad\n': 1, 'd\nt': 1, '\nt ': 1, 'g.T': 1, '.Th': 1, 'Thr': 1, 'ad(': 1, 'd(t': 1, '(ta': 1, 'tar': 2, 'arg': 1, 'rge': 1, 'get': 1, 'et=': 1, 't=r': 1, '=ru': 1, 'un)': 1, 'n)\n': 1, ')\nt': 1, '\nt.': 1, 't.s': 2, '.st': 1, 'sta': 1, 'art': 1, 'rt(': 1, '# W': 1, ' Wa': 1, 'Wai': 1, 'ait': 1, 'it ': 1, 't a': 1, 'a w': 1, 'hen': 1, 'en ': 1, 'n s': 1, '\n\nt': 1, '\nti': 1, 'p(6': 1, '(60': 1, '60)': 1, '0)\n': 1, ')\np': 1, '\npr': 1, '(""S': 1, '""Sh': 1, 'Shu': 1, 'utt': 1, 'tti': 1, 'ng ': 1, 'g d': 1, 'wn""': 1, 'n"")': 1, 'nt.': 1, 'set': 1}"
David Beazley,storelast.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 4, 'storelast.py': 1, 'an': 1, 'iterator': 1, 'that': 1, 'stores': 1, 'the': 1, 'last': 1, 'value': 1, 'returned.': 1, 'class': 1, 'storelast(object):': 1, 'def': 3, '__init__(self,source):': 1, 'self.source': 1, '=': 5, 'source': 1, '__next__(self):': 1, 'item': 3, 'self.source.__next__()': 1, 'self.last': 1, 'return': 2, '__iter__(self):': 1, 'self': 1, 'example': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'from': 2, 'follow': 2, 'import': 2, 'apachelog': 1, 'apache_log': 1, 'lines': 1, 'storelast(follow(open(""run/foo/access-log"")))': 1, 'log': 1, 'apache_log(lines)': 1, 'for': 1, 'r': 1, 'in': 1, 'log:': 1, 'print(r)': 1, 'print(lines.last)': 1}","{'# s': 1, ' st': 4, 'sto': 4, 'tor': 5, 'ore': 4, 'rel': 3, 'ela': 3, 'las': 7, 'ast': 6, 'st.': 1, 't.p': 1, '.py': 1, 'py\n': 1, 'y\n#': 1, '\n#\n': 1, '#\n#': 1, '\n# ': 2, '# A': 1, ' An': 1, 'An ': 1, 'n i': 2, ' it': 4, 'ite': 5, 'ter': 2, 'era': 1, 'rat': 1, 'ato': 1, 'or ': 2, 'r t': 1, ' th': 2, 'tha': 1, 'hat': 1, 'at ': 1, 't s': 1, 'res': 1, 'es ': 2, 's t': 1, 'the': 1, 'he ': 1, 'e l': 1, ' la': 1, 'st ': 2, 't v': 1, ' va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ue ': 1, 'e r': 1, ' re': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rne': 1, 'ned': 1, 'ed.': 1, 'd. ': 1, '.  ': 1, '  \n': 1, ' \n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'ass': 1, 'ss ': 1, 's s': 1, 'st(': 2, 't(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 4, ':\n ': 6, '\n  ': 15, '   ': 59, '  d': 3, ' de': 3, 'def': 3, 'ef ': 3, 'f _': 4, ' __': 4, '__i': 2, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 3, '__(': 4, '_(s': 3, '(se': 3, 'sel': 7, 'elf': 7, 'lf,': 1, 'f,s': 1, ',so': 1, 'sou': 4, 'our': 4, 'urc': 4, 'rce': 4, 'ce)': 1, 'e):': 1, '  s': 2, ' se': 4, 'lf.': 3, 'f.s': 2, '.so': 2, 'ce ': 1, 'e =': 1, ' = ': 5, '= s': 3, ' so': 1, 'ce\n': 1, 'e\n ': 1, '__n': 3, '_ne': 2, 'nex': 2, 'ext': 2, 'xt_': 2, 'lf)': 2, 'f):': 2, '  i': 1, 'tem': 3, 'em ': 1, 'm =': 1, 'ce.': 1, 'e._': 1, '.__': 1, '_()': 1, '()\n': 1, ')\n ': 3, 'f.l': 1, '.la': 2, 't =': 1, '= i': 1, 'em\n': 2, 'm\n ': 2, '  r': 2, 'rn ': 2, '_it': 1, 'er_': 1, 'r__': 1, 'n s': 1, 'lf\n': 1, 'f\n\n': 1, '\n\n#': 1, '# E': 1, ' Ex': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le\n': 1, 'e\ni': 1, '\nif': 1, 'if ': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  f': 3, ' fr': 2, 'fro': 2, 'rom': 2, 'om ': 2, 'm f': 1, ' fo': 3, 'fol': 3, 'oll': 3, 'llo': 3, 'low': 3, 'ow ': 1, 'w i': 1, ' im': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't f': 1, 'ow\n': 1, 'w\n ': 1, 'm a': 1, ' ap': 3, 'apa': 3, 'pac': 3, 'ach': 3, 'che': 3, 'hel': 1, 'elo': 1, 'log': 6, 'og ': 2, 'g i': 1, 't a': 1, 'he_': 2, 'e_l': 2, '_lo': 2, 'og\n': 1, 'g\n\n': 1, '\n\n ': 2, '  l': 2, ' li': 1, 'lin': 3, 'ine': 3, 'nes': 3, 's =': 1, 't(f': 1, '(fo': 1, 'ow(': 1, 'w(o': 1, '(op': 1, 'ope': 1, 'pen': 1, 'en(': 1, 'n(""': 1, '(""r': 1, '""ru': 1, 'run': 1, 'un/': 1, 'n/f': 1, '/fo': 1, 'foo': 1, 'oo/': 1, 'o/a': 1, '/ac': 1, 'acc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss-': 1, 's-l': 1, '-lo': 1, 'og""': 1, 'g"")': 1, '""))': 1, ')))': 1, '))\n': 1, ' lo': 2, 'g  ': 1, '  =': 1, '= a': 1, 'og(': 1, 'g(l': 1, '(li': 2, 'es)': 1, 's)\n': 1, ')\n\n': 1, 'for': 1, 'r r': 1, ' r ': 1, 'r i': 1, ' in': 1, 'in ': 1, 'n l': 1, 'og:': 1, 'g:\n': 1, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 2, 'int': 2, 'nt(': 2, 't(r': 1, '(r)': 1, 'r)\n': 1, 't(l': 1, 'es.': 1, 's.l': 1, 'st)': 1, 't)\n': 1}"
David Beazley,thrsend.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 4, 'thrsend.py': 1, 'send': 1, 'items': 1, 'to': 1, 'consumer': 1, 'threads': 1, 'import': 4, 'queue,': 1, 'threading': 1, 'class': 1, 'consumerthread(threading.thread):': 1, 'def': 6, '__init__(self,': 1, 'target):': 1, 'threading.thread.__init__(self)': 1, 'self.setdaemon(true)': 1, 'self.in_queue': 1, '=': 9, 'queue.queue()': 1, 'self.target': 1, 'target': 1, 'send(self,item):': 1, 'self.in_queue.put(item)': 1, 'generate(self):': 1, 'while': 1, 'true:': 1, 'item': 2, 'self.in_queue.get()': 1, 'yield': 1, 'run(self):': 1, 'self.target(self.generate())': 1, 'example': 1, 'use': 1, 'if': 2, '__name__': 1, '==': 2, ""'__main__':"": 1, 'from': 3, 'follow': 2, 'apachelog': 1, 'apache_log': 1, 'broadcast': 2, 'find_404(log):': 1, 'r404': 1, '(r': 1, 'for': 3, 'r': 3, 'in': 3, 'log': 2, ""r['status']"": 1, '404)': 1, 'r404:': 1, ""print(r['status'],r['datetime'],r['request'])"": 1, 'bytes_transferred(log):': 1, 'total': 2, '0': 1, 'log:': 1, '+=': 1, ""r['bytes']"": 1, 'print(""total': 1, 'bytes"",': 1, 'total)': 1, 'c1': 1, 'consumerthread(find_404)': 1, 'c1.start()': 1, 'c2': 1, 'consumerthread(bytes_transferred)': 1, 'c2.start()': 1, 'lines': 1, 'follow(open(""run/foo/access-log""))': 1, 'apache_log(lines)': 1, 'broadcast(log,[c1,c2])': 1}","{'# t': 1, ' th': 4, 'thr': 5, 'hrs': 1, 'rse': 1, 'sen': 2, 'end': 3, 'nd.': 1, 'd.p': 1, '.py': 1, 'py\n': 1, 'y\n#': 1, '\n#\n': 1, '#\n#': 1, '\n# ': 2, '# S': 1, ' Se': 1, 'Sen': 1, 'nd ': 1, 'd i': 2, ' it': 3, 'ite': 5, 'tem': 5, 'ems': 1, 'ms ': 1, 's t': 1, ' to': 4, 'to ': 1, 'o c': 1, ' co': 1, 'con': 1, 'ons': 4, 'nsu': 4, 'sum': 4, 'ume': 4, 'mer': 4, 'er ': 1, 'r t': 1, 'hre': 9, 'rea': 9, 'ead': 9, 'ads': 1, 'ds\n': 1, 's\n\n': 1, '\n\ni': 2, '\nim': 1, 'imp': 4, 'mpo': 4, 'por': 4, 'ort': 4, 'rt ': 4, 't q': 1, ' qu': 2, 'que': 6, 'ueu': 6, 'eue': 6, 'ue,': 1, 'e, ': 1, ', t': 3, 'adi': 3, 'din': 3, 'ing': 3, 'ng\n': 1, 'g\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's C': 1, ' Co': 3, 'Con': 3, 'erT': 3, 'rTh': 3, 'Thr': 5, 'ad(': 3, 'd(t': 1, '(th': 1, 'ng.': 2, 'g.T': 2, '.Th': 2, 'ad)': 1, 'd):': 1, '):\n': 7, ':\n ': 11, '\n  ': 35, '   ': 163, '  d': 6, ' de': 6, 'def': 6, 'ef ': 6, 'f _': 2, ' __': 2, '__i': 2, '_in': 2, 'ini': 2, 'nit': 2, 'it_': 2, 't__': 2, '__(': 2, '_(s': 2, '(se': 6, 'sel': 12, 'elf': 12, 'lf,': 2, 'f, ': 1, ' ta': 2, 'tar': 6, 'arg': 4, 'rge': 4, 'get': 5, 'et)': 1, 't):': 1, '  t': 3, 'ad.': 1, 'd._': 1, '.__': 1, 'lf)': 3, 'f)\n': 1, ')\n ': 12, '  s': 5, ' se': 7, 'lf.': 7, 'f.s': 1, '.se': 1, 'set': 1, 'etD': 1, 'tDa': 1, 'Dae': 1, 'aem': 1, 'emo': 1, 'mon': 1, 'on(': 1, 'n(T': 1, '(Tr': 1, 'Tru': 2, 'rue': 2, 'ue)': 1, 'e)\n': 1, 'f.i': 3, '.in': 3, 'in_': 4, 'n_q': 3, '_qu': 3, 'ue ': 1, 'e =': 1, ' = ': 9, '= q': 1, 'ue.': 3, 'e.Q': 1, '.Qu': 1, 'Que': 1, 'ue(': 1, 'e()': 2, '()\n': 4, 'f.t': 2, '.ta': 2, 'et ': 1, 't =': 1, '= t': 1, 'et\n': 1, 't\n\n': 1, '\n\n ': 4, 'f s': 1, 'nd(': 1, 'd(s': 1, 'f,i': 1, ',it': 1, 'em)': 2, 'm):': 1, 'e.p': 1, '.pu': 1, 'put': 1, 'ut(': 1, 't(i': 1, '(it': 1, 'm)\n': 1, ')\n\n': 4, 'f g': 1, ' ge': 1, 'gen': 2, 'ene': 2, 'ner': 2, 'era': 2, 'rat': 2, 'ate': 3, 'te(': 2, 'e(s': 1, 'f):': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 2, 'e T': 1, ' Tr': 1, 'ue:': 1, 'e:\n': 1, '  i': 1, 'em ': 1, 'm =': 1, '= s': 1, 'e.g': 1, '.ge': 2, 'et(': 2, 't()': 3, '  y': 1, ' yi': 1, 'yie': 1, 'iel': 1, 'eld': 1, 'ld ': 1, 'em\n': 1, 'm\n\n': 1, 'f r': 2, ' ru': 1, 'run': 2, 'un(': 1, 'n(s': 1, 't(s': 1, 'f.g': 1, '())': 1, '))\n': 2, '\n\n#': 1, '# E': 1, ' Ex': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'e U': 1, ' Us': 1, 'Use': 1, 'se\n': 1, 'e\n\n': 1, '\nif': 1, 'if ': 2, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 2, '== ': 2, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  f': 5, ' fr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm f': 1, ' fo': 6, 'fol': 3, 'oll': 3, 'llo': 3, 'low': 3, 'ow ': 1, 'w i': 1, ' im': 3, 't f': 1, 'ow\n': 1, 'w\n ': 1, 'm a': 1, ' ap': 3, 'apa': 3, 'pac': 3, 'ach': 3, 'che': 3, 'hel': 1, 'elo': 1, 'log': 10, 'og ': 3, 'g i': 2, 't a': 1, 'he_': 2, 'e_l': 2, '_lo': 2, 'og\n': 1, 'g\n ': 1, 'm b': 1, ' br': 3, 'bro': 3, 'roa': 3, 'oad': 3, 'adc': 3, 'dca': 3, 'cas': 3, 'ast': 3, 'st ': 1, 't i': 1, 't b': 1, 'st\n': 1, 't\n ': 1, '  \n': 3, ' \n ': 3, 'f f': 1, ' fi': 1, 'fin': 2, 'ind': 2, 'nd_': 2, 'd_4': 2, '_40': 2, '404': 5, '04(': 1, '4(l': 1, '(lo': 3, 'og)': 2, 'g):': 2, '  r': 1, ' r4': 2, 'r40': 2, '04 ': 1, '4 =': 1, '= (': 1, ' (r': 1, '(r ': 1, 'r f': 1, 'for': 3, 'or ': 3, 'r r': 3, ' r ': 3, 'r i': 3, ' in': 3, 'in ': 3, 'n l': 2, ' lo': 3, ' if': 1, ' r[': 2, ""r['"": 5, ""['s"": 2, ""'st"": 2, 'sta': 4, 'tat': 2, 'atu': 2, 'tus': 2, ""us'"": 2, ""s']"": 3, ""'] "": 1, '] =': 1, '= 4': 1, ' 40': 1, '04)': 2, '4)\n': 2, 'n r': 1, '04:': 1, '4:\n': 1, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 2, 'int': 2, 'nt(': 2, 't(r': 1, '(r[': 1, ""'],"": 2, '],r': 2, ',r[': 2, ""['d"": 1, ""'da"": 1, 'dat': 1, 'tet': 1, 'eti': 1, 'tim': 1, 'ime': 1, ""me'"": 1, ""e']"": 1, ""['r"": 1, ""'re"": 1, 'req': 1, 'equ': 1, 'ues': 1, 'est': 1, ""st'"": 1, ""t']"": 1, ""'])"": 1, '])\n': 2, 'f b': 1, ' by': 2, 'byt': 4, 'yte': 4, 'tes': 4, 'es_': 2, 's_t': 2, '_tr': 2, 'tra': 2, 'ran': 2, 'ans': 2, 'nsf': 2, 'sfe': 2, 'fer': 2, 'err': 2, 'rre': 2, 'red': 2, 'ed(': 1, 'd(l': 1, 'tot': 3, 'ota': 4, 'tal': 4, 'al ': 3, 'l =': 1, '= 0': 1, ' 0\n': 1, '0\n ': 1, 'og:': 1, 'g:\n': 1, 'l +': 1, ' +=': 1, '+= ': 1, '= r': 1, ""['b"": 1, ""'by"": 1, ""es'"": 1, ""']\n"": 1, ']\n ': 1, 't(""': 1, '(""T': 1, '""To': 1, 'Tot': 1, 'l b': 1, 'es""': 1, 's"",': 1, '"", ': 1, 'al)': 1, 'l)\n': 1, '  c': 4, ' c1': 2, 'c1 ': 1, '1 =': 1, '= C': 2, 'd(f': 1, '(fi': 1, 'c1.': 1, '1.s': 1, '.st': 2, 'art': 2, 'rt(': 2, ' c2': 2, 'c2 ': 1, '2 =': 1, 'd(b': 1, '(by': 1, 'ed)': 1, 'd)\n': 1, 'c2.': 1, '2.s': 1, '  l': 2, ' li': 1, 'lin': 2, 'ine': 2, 'nes': 2, 'es ': 1, 's =': 1, '= f': 1, 'ow(': 1, 'w(o': 1, '(op': 1, 'ope': 1, 'pen': 1, 'en(': 1, 'n(""': 1, '(""r': 1, '""ru': 1, 'un/': 1, 'n/f': 1, '/fo': 1, 'foo': 1, 'oo/': 1, 'o/a': 1, '/ac': 1, 'acc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss-': 1, 's-l': 1, '-lo': 1, 'og""': 1, 'g"")': 1, '""))': 1, 'g  ': 1, '  =': 1, '= a': 1, 'og(': 1, 'g(l': 1, '(li': 1, 'es)': 1, 's)\n': 1, '  b': 1, 'st(': 1, 't(l': 1, 'og,': 1, 'g,[': 1, ',[c': 1, '[c1': 1, 'c1,': 1, '1,c': 1, ',c2': 1, 'c2]': 1, '2])': 1}"
Donne Martin,bst.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'class': 2, 'node(object):': 1, 'def': 5, '__init__(self,': 2, 'data):': 3, 'self.data': 1, '=': 10, 'data': 3, 'self.left': 1, 'none': 3, 'self.right': 1, 'self.parent': 1, '__repr__(self):': 1, 'return': 8, 'str(self.data)': 1, 'bst(object):': 1, 'root=none):': 1, 'self.root': 4, 'root': 1, 'insert(self,': 1, 'if': 6, 'is': 5, 'none:': 5, 'raise': 1, ""typeerror('data"": 1, 'cannot': 1, 'be': 1, ""none')"": 1, 'node(data)': 2, 'else:': 4, 'self._insert(self.root,': 1, 'data)': 5, '_insert(self,': 1, 'node,': 1, 'node': 3, '<=': 1, 'node.data:': 1, 'node.left': 3, 'self._insert(node.left,': 2, 'node.left.parent': 1, 'node.right': 3, 'self._insert(node.right,': 2, 'node.right.parent': 1}","{'cla': 2, 'las': 2, 'ass': 2, 'ss ': 2, 's N': 6, ' No': 12, 'Nod': 3, 'ode': 20, 'de(': 3, 'e(o': 1, '(ob': 2, 'obj': 2, 'bje': 2, 'jec': 2, 'ect': 2, 'ct)': 2, 't):': 2, '):\n': 7, ':\n\n': 2, '\n\n ': 5, '\n  ': 34, '   ': 284, '  d': 5, ' de': 5, 'def': 5, 'ef ': 5, 'f _': 4, ' __': 3, '__i': 2, '_in': 8, 'ini': 2, 'nit': 2, 'it_': 2, 't__': 2, '__(': 3, '_(s': 3, '(se': 7, 'sel': 20, 'elf': 20, 'lf,': 4, 'f, ': 4, ', d': 8, ' da': 11, 'dat': 17, 'ata': 17, 'ta)': 11, 'a):': 3, ':\n ': 15, '  s': 6, ' se': 13, 'lf.': 15, 'f.d': 2, '.da': 3, 'ta ': 4, 'a =': 1, ' = ': 10, '= d': 1, 'ta\n': 1, 'a\n ': 1, 'f.l': 1, '.le': 7, 'lef': 7, 'eft': 7, 'ft ': 3, 't =': 9, '= N': 4, 'Non': 10, 'one': 10, 'ne\n': 3, 'e\n ': 4, 'f.r': 6, '.ri': 7, 'rig': 7, 'igh': 7, 'ght': 7, 'ht ': 3, 'f.p': 1, '.pa': 3, 'par': 3, 'are': 3, 'ren': 3, 'ent': 3, 'nt ': 3, 'e\n\n': 1, '__r': 1, '_re': 1, 'rep': 1, 'epr': 1, 'pr_': 1, 'r__': 1, 'lf)': 1, 'f):': 1, '  r': 9, ' re': 8, 'ret': 8, 'etu': 8, 'tur': 8, 'urn': 8, 'rn ': 8, 'n s': 5, ' st': 1, 'str': 1, 'tr(': 1, 'r(s': 1, 'a)\n': 8, ')\n\n': 2, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 's B': 1, ' Bs': 1, 'Bst': 1, 'st(': 1, 't(o': 1, ', r': 1, ' ro': 2, 'roo': 7, 'oot': 7, 'ot=': 1, 't=N': 1, '=No': 1, 'ne)': 1, 'e):': 1, '.ro': 5, 'ot ': 4, '= r': 1, 'ot\n': 2, 't\n\n': 1, 'f i': 1, ' in': 1, 'ins': 7, 'nse': 7, 'ser': 7, 'ert': 7, 'rt(': 7, 't(s': 3, '  i': 6, ' if': 6, 'if ': 6, 'f d': 2, 'a i': 1, ' is': 5, 'is ': 5, 'ne:': 5, 'e:\n': 9, ' ra': 1, 'rai': 1, 'ais': 1, 'ise': 1, 'se ': 1, 'e T': 1, ' Ty': 1, 'Typ': 1, 'ype': 1, 'peE': 1, 'eEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or(': 1, ""r('"": 1, ""('d"": 1, ""'da"": 1, 'a c': 1, ' ca': 1, 'can': 1, 'ann': 1, 'nno': 1, 'not': 1, 't b': 1, ' be': 1, 'be ': 1, 'e N': 1, ""ne'"": 1, ""e')"": 1, ""')\n"": 1, ')\n ': 6, 'f s': 1, 't i': 3, 'e(d': 2, '(da': 2, 't\n ': 3, '  e': 4, ' el': 4, 'els': 4, 'lse': 4, 'se:': 4, 'f._': 5, '._i': 5, 'ot,': 1, 't, ': 5, ' _i': 1, ', n': 1, ' no': 13, 'nod': 17, 'de,': 1, 'e, ': 1, 'f n': 3, 'de ': 1, 'e i': 1, 'n N': 1, 'a <': 1, ' <=': 1, '<= ': 1, '= n': 3, 'de.': 13, 'e.d': 1, 'ta:': 1, 'a:\n': 1, 'e.l': 6, '  n': 4, '= s': 2, 't(n': 4, '(no': 4, 'ft,': 2, 'ft.': 1, 't.p': 2, 'de\n': 2, 'n n': 2, 'ft\n': 1, 'e.r': 6, 'ht,': 2, 'ht.': 1, 'ht\n': 1}"
Donne Martin,dfs.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'def': 3, 'in_order_traversal(node,': 1, 'visit_func):': 3, 'if': 3, 'node': 3, 'is': 3, 'not': 3, 'none:': 3, 'in_order_traversal(node.left,': 1, 'visit_func)': 6, 'visit_func(node.data)': 3, 'in_order_traversal(node.right,': 1, 'pre_order_traversal(node,': 1, 'pre_order_traversal(node.left,': 1, 'pre_order_traversal(node.right,': 1, 'post_order_traversal(node,': 1, 'post_order_traversal(node.left,': 1, 'post_order_traversal(node.right,': 1}","{'def': 3, 'ef ': 3, 'f i': 1, ' in': 3, 'in_': 3, 'n_o': 3, '_or': 9, 'ord': 9, 'rde': 9, 'der': 9, 'er_': 9, 'r_t': 9, '_tr': 9, 'tra': 9, 'rav': 9, 'ave': 9, 'ver': 9, 'ers': 9, 'rsa': 9, 'sal': 9, 'al(': 9, 'l(n': 9, '(no': 12, 'nod': 15, 'ode': 15, 'de,': 3, 'e, ': 3, ', v': 9, ' vi': 12, 'vis': 12, 'isi': 12, 'sit': 12, 'it_': 12, 't_f': 12, '_fu': 12, 'fun': 12, 'unc': 12, 'nc)': 9, 'c):': 3, '):\n': 3, ':\n ': 6, '\n  ': 12, '   ': 60, '  i': 5, ' if': 3, 'if ': 3, 'f n': 3, ' no': 6, 'de ': 3, 'e i': 3, ' is': 3, 'is ': 3, 's n': 3, 'not': 3, 'ot ': 3, 't N': 3, ' No': 3, 'Non': 3, 'one': 3, 'ne:': 3, 'e:\n': 3, 'de.': 9, 'e.l': 3, '.le': 3, 'lef': 3, 'eft': 3, 'ft,': 3, 't, ': 6, 'c)\n': 6, ')\n ': 6, '  v': 3, 'nc(': 3, 'c(n': 3, 'e.d': 3, '.da': 3, 'dat': 3, 'ata': 3, 'ta)': 3, 'a)\n': 3, 'e.r': 3, '.ri': 3, 'rig': 3, 'igh': 3, 'ght': 3, 'ht,': 3, ')\n\n': 2, '\n\nd': 2, '\nde': 2, 'f p': 2, ' pr': 3, 'pre': 3, 're_': 3, 'e_o': 3, '  p': 4, ' po': 3, 'pos': 3, 'ost': 3, 'st_': 3, 't_o': 3}"
Donne Martin,test_bit.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testbit(unittest.testcase):': 1, 'def': 2, 'test_bit(self):': 1, 'number': 1, '=': 15, ""int('10001110',"": 1, 'base=2)': 7, 'bit': 7, 'bit(number)': 7, 'self.assertequal(bit.get_bit(index=3),': 1, 'true)': 1, 'expected': 6, ""int('10011110',"": 1, 'self.assertequal(bit.set_bit(index=4),': 1, 'expected)': 6, ""int('10000110',"": 2, 'self.assertequal(bit.clear_bit(index=3),': 1, ""int('00000110',"": 1, 'self.assertequal(bit.clear_bits_msb_to_index(index=3),': 1, ""int('10000000',"": 1, 'self.assertequal(bit.clear_bits_index_to_lsb(index=3),': 1, 'self.assertequal(bit.update_bit(index=3,': 2, 'value=1),': 2, 'number)': 1, 'value=0),': 1, ""int('10001111',"": 1, 'self.assertequal(bit.update_bit(index=0,': 1, ""print('success:"": 1, ""test_bit')"": 1, 'main():': 1, 'test': 1, 'testbit()': 1, 'test.test_bit()': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 1, 'uni': 2, 'nit': 2, 'itt': 2, 'tte': 2, 'tes': 7, 'est': 10, 'st\n': 1, 't\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 9, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 3, 'stB': 2, 'tBi': 2, 'Bit': 9, 'it(': 17, 't(u': 1, '(un': 1, 'st.': 2, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 8, 'se)': 1, 'e):': 1, '):\n': 3, ':\n\n': 1, '\n\n ': 1, '\n  ': 27, '   ': 146, '  d': 1, ' de': 1, 'def': 2, 'ef ': 2, 'f t': 1, ' te': 4, 'st_': 3, 't_b': 5, '_bi': 11, 'bit': 26, 't(s': 1, '(se': 1, 'sel': 9, 'elf': 9, 'lf)': 1, 'f):': 1, ':\n ': 3, '  n': 1, ' nu': 2, 'num': 9, 'umb': 9, 'mbe': 9, 'ber': 9, 'er ': 1, 'r =': 1, ' = ': 15, '= i': 7, ' in': 7, 'int': 8, 'nt(': 8, ""t('"": 8, ""('1"": 6, ""'10"": 6, '100': 6, '000': 14, '001': 6, '011': 6, '111': 5, '110': 5, ""10'"": 5, ""0',"": 6, ""', "": 7, ', b': 7, ' ba': 7, 'bas': 7, 'se=': 7, 'e=2': 7, '=2)': 7, '2)\n': 7, ')\n ': 23, '  b': 7, ' bi': 7, 'it ': 7, 't =': 8, '= B': 7, ' Bi': 7, 't(n': 7, '(nu': 7, 'er)': 8, 'r)\n': 8, '  s': 8, ' se': 8, 'lf.': 8, 'f.a': 8, '.as': 8, 'sse': 8, 'ser': 8, 'ert': 8, 'rtE': 8, 'tEq': 8, 'Equ': 8, 'qua': 8, 'ual': 8, 'al(': 8, 'l(b': 8, '(bi': 8, 'it.': 8, 't.g': 1, '.ge': 1, 'get': 1, 'et_': 2, 't(i': 6, '(in': 8, 'ind': 10, 'nde': 10, 'dex': 10, 'ex=': 8, 'x=3': 6, '=3)': 4, '3),': 4, '), ': 8, ', T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e)\n': 1, '  e': 6, ' ex': 12, 'exp': 12, 'xpe': 12, 'pec': 12, 'ect': 12, 'cte': 12, 'ted': 12, 'ed ': 6, 'd =': 6, 't.s': 1, '.se': 1, 'set': 1, 'x=4': 1, '=4)': 1, '4),': 1, ', e': 6, 'ed)': 6, 'd)\n': 6, 't.c': 3, '.cl': 3, 'cle': 3, 'lea': 3, 'ear': 3, 'ar_': 3, 'r_b': 3, ""('0"": 1, ""'00"": 1, 'its': 2, 'ts_': 2, 's_m': 1, '_ms': 1, 'msb': 1, 'sb_': 1, 'b_t': 1, '_to': 2, 'to_': 2, 'o_i': 1, '_in': 2, 'ex(': 1, 'x(i': 1, ""00'"": 1, 's_i': 1, 'ex_': 1, 'x_t': 1, 'o_l': 1, '_ls': 1, 'lsb': 1, 'sb(': 1, 'b(i': 1, 't.u': 3, '.up': 3, 'upd': 3, 'pda': 3, 'dat': 3, 'ate': 3, 'te_': 3, 'e_b': 3, '=3,': 2, '3, ': 2, ', v': 3, ' va': 3, 'val': 3, 'alu': 3, 'lue': 3, 'ue=': 3, 'e=1': 2, '=1)': 2, '1),': 2, ', n': 1, 'e=0': 1, '=0)': 1, '0),': 1, ""11'"": 1, ""1',"": 1, 'x=0': 1, '=0,': 1, '0, ': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, ""('S"": 1, ""'Su"": 1, 'Suc': 1, 'ucc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss:': 1, 's: ': 1, ': t': 1, ""it'"": 1, ""t')"": 1, ""')\n"": 1, ')\n\n': 2, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, 'n()': 2, '():': 1, '  t': 2, 'st ': 1, '= T': 1, 't()': 2, '()\n': 3, 't.t': 1, '.te': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  m': 1}"
Donne Martin,test_bits_to_flip.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testbits(unittest.testcase):': 1, 'def': 2, 'test_bits_to_flip(self):': 1, 'bits': 1, '=': 5, 'bits()': 1, 'a': 1, ""int('11101',"": 1, 'base=2)': 2, 'b': 1, ""int('01111',"": 1, 'expected': 1, '2': 1, 'self.assertequal(bits.bits_to_flip(a,': 1, 'b),': 1, 'expected)': 1, ""print('success:"": 1, ""test_bits_to_flip')"": 1, 'main():': 1, 'test': 1, 'testbits()': 1, 'test.test_bits_to_flip()': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 1, 'uni': 2, 'nit': 2, 'itt': 2, 'tte': 2, 'tes': 7, 'est': 10, 'st\n': 1, 't\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 2, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 3, 'stB': 2, 'tBi': 2, 'Bit': 3, 'its': 9, 'ts(': 3, 's(u': 1, '(un': 1, 'st.': 2, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 3, 'se)': 1, 'e):': 1, '):\n': 3, ':\n\n': 1, '\n\n ': 1, '\n  ': 10, '   ': 44, '  d': 1, ' de': 1, 'def': 2, 'ef ': 2, 'f t': 1, ' te': 4, 'st_': 3, 't_b': 3, '_bi': 3, 'bit': 6, 'ts_': 4, 's_t': 4, '_to': 4, 'to_': 4, 'o_f': 4, '_fl': 4, 'fli': 4, 'lip': 4, 'ip(': 3, 'p(s': 1, '(se': 1, 'sel': 2, 'elf': 2, 'lf)': 1, 'f):': 1, ':\n ': 3, '  b': 2, ' bi': 1, 'ts ': 1, 's =': 1, ' = ': 5, '= B': 1, ' Bi': 1, 's()': 2, '()\n': 4, ')\n ': 5, '  a': 1, ' a ': 1, 'a =': 1, '= i': 2, ' in': 2, 'int': 3, 'nt(': 3, ""t('"": 3, ""('1"": 1, ""'11"": 1, '111': 3, '110': 1, '101': 1, ""01'"": 1, ""1',"": 2, ""', "": 2, ', b': 3, ' ba': 2, 'bas': 2, 'se=': 2, 'e=2': 2, '=2)': 2, '2)\n': 2, ' b ': 1, 'b =': 1, ""('0"": 1, ""'01"": 1, '011': 1, ""11'"": 1, '  e': 1, ' ex': 2, 'exp': 2, 'xpe': 2, 'pec': 2, 'ect': 2, 'cte': 2, 'ted': 2, 'ed ': 1, 'd =': 1, '= 2': 1, ' 2\n': 1, '2\n ': 1, '  s': 1, ' se': 1, 'lf.': 1, 'f.a': 1, '.as': 1, 'sse': 1, 'ser': 1, 'ert': 1, 'rtE': 1, 'tEq': 1, 'Equ': 1, 'qua': 1, 'ual': 1, 'al(': 1, 'l(b': 1, '(bi': 1, 'ts.': 1, 's.b': 1, '.bi': 1, 'p(a': 1, '(a,': 1, 'a, ': 1, ' b)': 1, 'b),': 1, '), ': 1, ', e': 1, 'ed)': 1, 'd)\n': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, ""('S"": 1, ""'Su"": 1, 'Suc': 1, 'ucc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss:': 1, 's: ': 1, ': t': 1, ""ip'"": 1, ""p')"": 1, ""')\n"": 1, ')\n\n': 2, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, 'n()': 2, '():': 1, '  t': 2, 'st ': 1, 't =': 1, '= T': 1, 't.t': 1, '.te': 1, 'p()': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  m': 1}"
Donne Martin,test_compress.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testcompress(unittest.testcase):': 1, 'def': 2, 'test_compress(self,': 1, 'func):': 1, 'self.assertequal(func(none),': 1, 'none)': 1, ""self.assertequal(func(''),"": 1, ""'')"": 1, ""self.assertequal(func('aabbcc'),"": 1, ""'aabbcc')"": 1, ""self.assertequal(func('aaabccdddde'),"": 1, ""'a3bc2d4e')"": 1, ""self.assertequal(func('baaaccdddd'),"": 1, ""'ba3c2d4')"": 1, ""self.assertequal(func('aaabaaccdddd'),"": 1, ""'a3ba2c2d4')"": 1, ""print('success:"": 1, ""test_compress')"": 1, 'main():': 1, 'test': 1, '=': 2, 'testcompress()': 1, 'compress_string': 1, 'compressstring()': 1, 'test.test_compress(compress_string.compress)': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 1, 'uni': 2, 'nit': 2, 'itt': 2, 'tte': 2, 'tes': 7, 'est': 10, 'st\n': 1, 't\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 7, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 3, 'stC': 3, 'tCo': 2, 'Com': 3, 'omp': 9, 'mpr': 9, 'pre': 9, 'res': 9, 'ess': 10, 'ss(': 4, 's(u': 1, '(un': 1, 'st.': 2, 't.T': 1, '.Te': 1, 'tCa': 1, 'Cas': 1, 'ase': 1, 'se)': 1, 'e):': 1, '):\n': 3, ':\n\n': 1, '\n\n ': 1, '\n  ': 12, '   ': 52, '  d': 1, ' de': 1, 'def': 2, 'ef ': 2, 'f t': 1, ' te': 4, 'st_': 3, 't_c': 3, '_co': 3, 'com': 6, 's(s': 1, '(se': 1, 'sel': 7, 'elf': 7, 'lf,': 1, 'f, ': 1, ', f': 1, ' fu': 1, 'fun': 7, 'unc': 7, 'nc)': 1, 'c):': 1, ':\n ': 3, '  s': 6, ' se': 6, 'lf.': 6, 'f.a': 6, '.as': 6, 'sse': 6, 'ser': 6, 'ert': 6, 'rtE': 6, 'tEq': 6, 'Equ': 6, 'qua': 6, 'ual': 6, 'al(': 6, 'l(f': 6, '(fu': 6, 'nc(': 6, 'c(N': 1, '(No': 1, 'Non': 2, 'one': 2, 'ne)': 2, 'e),': 1, '), ': 6, ', N': 1, ' No': 1, 'e)\n': 1, ')\n ': 8, ""c('"": 5, ""(''"": 1, ""'')"": 2, ""'),"": 5, "", '"": 5, "" ''"": 1, ""')\n"": 6, ""('A"": 3, ""'AA"": 4, 'AAB': 4, 'ABB': 2, 'BBC': 2, 'BCC': 3, ""CC'"": 2, ""C')"": 2, "" 'A"": 3, 'AAA': 3, 'ABC': 1, 'CCD': 3, 'CDD': 3, 'DDD': 6, 'DDE': 1, ""DE'"": 1, ""E')"": 2, ""'A3"": 2, 'A3B': 2, '3BC': 1, 'BC2': 1, 'C2D': 3, '2D4': 3, 'D4E': 1, ""4E'"": 1, ""('B"": 1, ""'BA"": 2, 'BAA': 2, 'AAC': 2, 'ACC': 2, ""DD'"": 2, ""D')"": 2, "" 'B"": 1, 'BA3': 1, 'A3C': 1, '3C2': 1, ""D4'"": 2, ""4')"": 2, 'ABA': 1, '3BA': 1, 'BA2': 1, 'A2C': 1, '2C2': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 4, 'int': 1, 'nt(': 1, ""t('"": 1, ""('S"": 1, ""'Su"": 1, 'Suc': 1, 'ucc': 1, 'cce': 1, 'ces': 1, 'ss:': 1, 's: ': 1, ': t': 1, ""ss'"": 1, ""s')"": 1, ')\n\n': 2, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, 'n()': 2, '():': 1, '  t': 2, 'st ': 1, 't =': 1, ' = ': 2, '= T': 1, 's()': 1, '()\n': 3, '  c': 1, ' co': 1, 'ss_': 2, 's_s': 2, '_st': 2, 'str': 2, 'tri': 3, 'ing': 3, 'ng ': 1, 'g =': 1, '= C': 1, ' Co': 1, 'ssS': 1, 'sSt': 1, 'Str': 1, 'ng(': 1, 'g()': 1, 't.t': 1, '.te': 1, 's(c': 1, '(co': 1, 'ng.': 1, 'g.c': 1, '.co': 1, 'ss)': 1, 's)\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  m': 1}"
Donne Martin,test_draw_lines.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testbitsscreen(unittest.testcase):': 1, 'def': 2, 'test_draw_line(self):': 1, 'bits_screen': 1, '=': 3, 'bitsscreen()': 1, 'screen': 1, '[]': 1, 'for': 1, '_': 1, 'in': 1, 'range(20):': 1, ""screen.append(int('00000000',"": 1, 'base=2))': 6, 'bits_screen.draw_line(screen,': 3, 'width=32,': 3, 'x1=68,': 1, 'x2=80)': 1, 'self.assertequal(screen[8],': 1, ""int('00001111',"": 1, 'self.assertequal(screen[9],': 1, ""int('11111111',"": 1, 'self.assertequal(screen[10],': 1, ""int('10000000',"": 1, 'x1=2,': 1, 'x2=6)': 1, 'self.assertequal(screen[0],': 1, ""int('00111110',"": 1, 'x1=10,': 1, 'x2=13)': 1, 'self.assertequal(screen[1],': 1, ""int('00111100',"": 1, ""print('success:"": 1, ""test_draw_line')"": 1, 'main():': 1, 'test': 1, 'testbitsscreen()': 1, 'test.test_draw_line()': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 1, 'uni': 2, 'nit': 2, 'itt': 2, 'tte': 2, 'tes': 7, 'est': 10, 'st\n': 1, 't\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 6, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 3, 'stB': 2, 'tBi': 2, 'Bit': 3, 'its': 7, 'tsS': 3, 'sSc': 3, 'Scr': 3, 'cre': 17, 'ree': 17, 'een': 17, 'en(': 3, 'n(u': 1, '(un': 1, 'st.': 2, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 7, 'se)': 1, 'e):': 1, '):\n': 4, ':\n\n': 1, '\n\n ': 1, '\n  ': 17, '   ': 90, '  d': 1, ' de': 1, 'def': 2, 'ef ': 2, 'f t': 1, ' te': 4, 'st_': 3, 't_d': 3, '_dr': 3, 'dra': 6, 'raw': 6, 'aw_': 6, 'w_l': 6, '_li': 6, 'lin': 6, 'ine': 6, 'ne(': 5, 'e(s': 4, '(se': 1, 'sel': 6, 'elf': 6, 'lf)': 1, 'f):': 1, ':\n ': 4, '  b': 4, ' bi': 4, 'bit': 4, 'ts_': 4, 's_s': 4, '_sc': 4, 'scr': 14, 'en ': 2, 'n =': 2, ' = ': 3, '= B': 1, ' Bi': 1, 'n()': 4, '()\n': 4, ')\n ': 11, '  s': 7, ' sc': 2, '= [': 1, ' []': 1, '[]\n': 1, ']\n ': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r _': 1, ' _ ': 1, '_ i': 1, ' in': 6, 'in ': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(2': 1, '(20': 1, '20)': 1, '0):': 1, 'en.': 4, 'n.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(i': 1, '(in': 1, 'int': 7, 'nt(': 7, ""t('"": 7, ""('0"": 4, ""'00"": 4, '000': 13, ""00'"": 3, ""0',"": 4, ""', "": 6, ', b': 6, ' ba': 6, 'bas': 6, 'se=': 6, 'e=2': 6, '=2)': 6, '2))': 6, '))\n': 6, 'n.d': 3, '.dr': 3, '(sc': 8, 'en,': 3, 'n, ': 3, ', w': 3, ' wi': 3, 'wid': 3, 'idt': 3, 'dth': 3, 'th=': 3, 'h=3': 3, '=32': 3, '32,': 3, '2, ': 4, ', x': 6, ' x1': 3, 'x1=': 3, '1=6': 1, '=68': 1, '68,': 1, '8, ': 1, ' x2': 3, 'x2=': 3, '2=8': 1, '=80': 1, '80)': 1, '0)\n': 1, ' se': 5, 'lf.': 5, 'f.a': 5, '.as': 5, 'sse': 5, 'ser': 5, 'ert': 5, 'rtE': 5, 'tEq': 5, 'Equ': 5, 'qua': 5, 'ual': 5, 'al(': 5, 'l(s': 5, 'en[': 5, 'n[8': 1, '[8]': 1, '8],': 1, '], ': 5, ', i': 5, '001': 3, '011': 3, '111': 13, ""11'"": 2, ""1',"": 2, 'n[9': 1, '[9]': 1, '9],': 1, ""('1"": 2, ""'11"": 1, 'n[1': 2, '[10': 1, '10]': 1, '0],': 2, ""'10"": 1, '100': 2, '1=2': 1, '=2,': 1, '2=6': 1, '=6)': 1, '6)\n': 1, 'n[0': 1, '[0]': 1, '110': 2, ""10'"": 1, '1=1': 1, '=10': 1, '10,': 1, '0, ': 1, '2=1': 1, '=13': 1, '13)': 1, '3)\n': 1, '[1]': 1, '1],': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, ""('S"": 1, ""'Su"": 1, 'Suc': 1, 'ucc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss:': 1, 's: ': 1, ': t': 1, ""ne'"": 1, ""e')"": 1, ""')\n"": 1, ')\n\n': 2, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, '():': 1, '  t': 2, 'st ': 1, 't =': 1, '= T': 1, 't.t': 1, '.te': 1, 'e()': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  m': 1}"
Donne Martin,test_fizz_buzz.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testfizzbuzz(unittest.testcase):': 1, 'def': 2, 'test_fizz_buzz(self):': 1, 'solution': 1, '=': 3, 'solution()': 1, 'self.assertraises(typeerror,': 1, 'solution.fizz_buzz,': 2, 'none)': 1, 'self.assertraises(valueerror,': 1, '0)': 1, 'expected': 1, '[': 1, ""'1',"": 1, ""'2',"": 1, ""'fizz',"": 4, ""'4',"": 1, ""'buzz',"": 2, ""'7',"": 1, ""'8',"": 1, ""'11',"": 1, ""'13',"": 1, ""'14',"": 1, ""'fizzbuzz'"": 1, ']': 1, 'self.assertequal(solution.fizz_buzz(15),': 1, 'expected)': 1, ""print('success:"": 1, ""test_fizz_buzz')"": 1, 'main():': 1, 'test': 1, 'testfizzbuzz()': 1, 'test.test_fizz_buzz()': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 1, 'uni': 2, 'nit': 2, 'itt': 2, 'tte': 2, 'tes': 7, 'est': 10, 'st\n': 1, 't\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 4, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 3, 'stF': 2, 'tFi': 2, 'Fiz': 7, 'izz': 13, 'zzB': 3, 'zBu': 3, 'Buz': 5, 'uzz': 11, 'zz(': 5, 'z(u': 1, '(un': 1, 'st.': 2, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 1, 'se)': 1, 'e):': 1, '):\n': 3, ':\n\n': 1, '\n\n ': 1, '\n  ': 26, '   ': 200, '  d': 1, ' de': 1, 'def': 2, 'ef ': 2, 'f t': 1, ' te': 4, 'st_': 3, 't_f': 3, '_fi': 3, 'fiz': 6, 'zz_': 6, 'z_b': 6, '_bu': 6, 'buz': 6, 'z(s': 1, '(se': 1, 'sel': 4, 'elf': 4, 'lf)': 1, 'f):': 1, ':\n ': 3, '  s': 4, ' so': 3, 'sol': 4, 'olu': 5, 'lut': 5, 'uti': 5, 'tio': 5, 'ion': 5, 'on ': 1, 'n =': 1, ' = ': 3, '= S': 1, ' So': 1, 'Sol': 1, 'on(': 1, 'n()': 3, '()\n': 4, ')\n ': 5, ' se': 3, 'lf.': 3, 'f.a': 3, '.as': 3, 'sse': 3, 'ser': 3, 'ert': 3, 'rtR': 2, 'tRa': 2, 'Rai': 2, 'ais': 2, 'ise': 2, 'ses': 2, 'es(': 2, 's(T': 1, '(Ty': 1, 'Typ': 1, 'ype': 1, 'peE': 1, 'eEr': 2, 'Err': 2, 'rro': 2, 'ror': 2, 'or,': 2, 'r, ': 2, ', s': 2, 'on.': 3, 'n.f': 3, '.fi': 3, 'zz,': 2, 'z, ': 2, ', N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne)': 1, 'e)\n': 1, 's(V': 1, '(Va': 1, 'Val': 1, 'alu': 1, 'lue': 1, 'ueE': 1, ', 0': 1, ' 0)': 1, '0)\n': 1, '  e': 1, ' ex': 2, 'exp': 2, 'xpe': 2, 'pec': 2, 'ect': 2, 'cte': 2, 'ted': 2, 'ed ': 1, 'd =': 1, '= [': 1, ' [\n': 1, '[\n ': 1, ""  '"": 15, "" '1"": 4, ""'1'"": 1, ""1',"": 2, ""',\n"": 14, ',\n ': 14, "" '2"": 1, ""'2'"": 1, ""2',"": 1, "" 'F"": 5, ""'Fi"": 5, ""zz'"": 8, ""z',"": 6, "" '4"": 1, ""'4'"": 1, ""4',"": 2, "" 'B"": 2, ""'Bu"": 2, "" '7"": 1, ""'7'"": 1, ""7',"": 1, "" '8"": 1, ""'8'"": 1, ""8',"": 1, ""'11"": 1, ""11'"": 1, ""'13"": 1, ""13'"": 1, ""3',"": 1, ""'14"": 1, ""14'"": 1, ""z'\n"": 1, ""'\n "": 1, '  ]': 1, ' ]\n': 1, ']\n ': 1, 'rtE': 1, 'tEq': 1, 'Equ': 1, 'qua': 1, 'ual': 1, 'al(': 1, 'l(s': 1, '(so': 1, 'z(1': 1, '(15': 1, '15)': 1, '5),': 1, '), ': 1, ', e': 1, 'ed)': 1, 'd)\n': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, ""t('"": 1, ""('S"": 1, ""'Su"": 1, 'Suc': 1, 'ucc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss:': 1, 's: ': 1, ': t': 1, ""z')"": 1, ""')\n"": 1, ')\n\n': 2, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, '():': 1, '  t': 2, 'st ': 1, 't =': 1, '= T': 1, 'z()': 2, 't.t': 1, '.te': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  m': 1}"
Donne Martin,test_flip_bits.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testbits(unittest.testcase):': 1, 'def': 2, 'test_flip_bit(self):': 1, 'bits': 1, '=': 8, 'bits()': 1, 'self.assertraises(typeerror,': 1, 'bits.flip_bit,': 1, 'none)': 1, 'self.assertequal(bits.flip_bit(0),': 1, '1)': 1, 'self.assertequal(bits.flip_bit(-1),': 1, 'bits.max_bits)': 1, 'num': 3, ""int('00001111110111011110001111110000',"": 1, 'base=2)': 3, 'expected': 3, '10': 2, 'self.assertequal(bits.flip_bit(num),': 3, 'expected)': 3, ""int('00000100111011101111100011111011',"": 1, '9': 1, ""int('00010011101110111110001111101111',"": 1, ""print('success:"": 1, ""test_print_binary')"": 1, 'main():': 1, 'test': 1, 'testbits()': 1, 'test.test_flip_bit()': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 1, 'uni': 2, 'nit': 2, 'itt': 2, 'tte': 2, 'tes': 7, 'est': 10, 'st\n': 1, 't\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 7, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 3, 'stB': 2, 'tBi': 2, 'Bit': 3, 'its': 11, 'ts(': 3, 's(u': 1, '(un': 1, 'st.': 2, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 4, 'se)': 1, 'e):': 1, '):\n': 3, ':\n\n': 1, '\n\n ': 1, '\n  ': 18, '   ': 92, '  d': 1, ' de': 1, 'def': 2, 'ef ': 2, 'f t': 1, ' te': 4, 'st_': 3, 't_f': 2, '_fl': 2, 'fli': 8, 'lip': 8, 'ip_': 8, 'p_b': 8, '_bi': 9, 'bit': 16, 'it(': 7, 't(s': 1, '(se': 1, 'sel': 7, 'elf': 7, 'lf)': 1, 'f):': 1, ':\n ': 3, '  b': 1, ' bi': 3, 'ts ': 1, 's =': 1, ' = ': 8, '= B': 1, ' Bi': 1, 's()': 2, '()\n': 4, ')\n ': 11, '  s': 6, ' se': 6, 'lf.': 6, 'f.a': 6, '.as': 6, 'sse': 6, 'ser': 6, 'ert': 6, 'rtR': 1, 'tRa': 1, 'Rai': 1, 'ais': 1, 'ise': 1, 'ses': 1, 'es(': 1, 's(T': 1, '(Ty': 1, 'Typ': 1, 'ype': 1, 'peE': 1, 'eEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or,': 1, 'r, ': 1, ', b': 5, 'ts.': 7, 's.f': 6, '.fl': 6, 'it,': 1, 't, ': 1, ', N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne)': 1, 'e)\n': 1, 'rtE': 5, 'tEq': 5, 'Equ': 5, 'qua': 5, 'ual': 5, 'al(': 5, 'l(b': 5, '(bi': 5, 't(0': 1, '(0)': 1, '0),': 1, '), ': 5, ', 1': 1, ' 1)': 1, '1)\n': 1, 't(-': 1, '(-1': 1, '-1)': 1, '1),': 1, 's.M': 1, '.MA': 1, 'MAX': 1, 'AX_': 1, 'X_B': 1, '_BI': 1, 'BIT': 1, 'ITS': 1, 'TS)': 1, 'S)\n': 1, '  n': 3, ' nu': 3, 'num': 6, 'um ': 3, 'm =': 3, '= i': 3, ' in': 3, 'int': 5, 'nt(': 4, ""t('"": 4, ""('0"": 3, ""'00"": 3, '000': 11, '001': 8, '011': 14, '111': 29, '110': 12, '101': 8, '100': 6, ""00'"": 1, ""0',"": 1, ""', "": 3, ' ba': 3, 'bas': 3, 'se=': 3, 'e=2': 3, '=2)': 3, '2)\n': 3, '  e': 3, ' ex': 6, 'exp': 6, 'xpe': 6, 'pec': 6, 'ect': 6, 'cte': 6, 'ted': 6, 'ed ': 3, 'd =': 3, '= 1': 2, ' 10': 2, '10\n': 2, '0\n ': 2, 't(n': 3, '(nu': 3, 'um)': 3, 'm),': 3, ', e': 3, 'ed)': 3, 'd)\n': 3, '010': 2, ""11'"": 2, ""1',"": 2, '= 9': 1, ' 9\n': 1, '9\n ': 1, '  p': 1, ' pr': 1, 'pri': 2, 'rin': 2, ""('S"": 1, ""'Su"": 1, 'Suc': 1, 'ucc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss:': 1, 's: ': 1, ': t': 1, 't_p': 1, '_pr': 1, 'nt_': 1, 't_b': 1, 'bin': 1, 'ina': 1, 'nar': 1, 'ary': 1, ""ry'"": 1, ""y')"": 1, ""')\n"": 1, ')\n\n': 2, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, 'n()': 2, '():': 1, '  t': 2, 'st ': 1, 't =': 1, '= T': 1, 't.t': 1, '.te': 1, 't()': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  m': 1}"
Donne Martin,test_get_next_largest.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testbits(unittest.testcase):': 1, 'def': 3, 'test_get_next_largest(self):': 1, 'bits': 2, '=': 7, 'bits()': 2, 'self.assertraises(exception,': 6, 'bits.get_next_largest,': 3, 'none)': 2, '0)': 2, '-1)': 2, 'num': 2, ""int('011010111',"": 2, 'base=2)': 4, 'expected': 2, ""int('011011011',"": 1, 'self.assertequal(bits.get_next_largest(num),': 1, 'expected)': 2, ""print('success:"": 2, ""test_get_next_largest')"": 1, 'test_get_next_smallest(self):': 1, 'bits.get_next_smallest,': 3, ""int('011001111',"": 1, 'self.assertequal(bits.get_next_smallest(num),': 1, ""test_get_next_smallest')"": 1, 'main():': 1, 'test': 1, 'testbits()': 1, 'test.test_get_next_largest()': 1, 'test.test_get_next_smallest()': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 1, 'uni': 2, 'nit': 2, 'itt': 2, 'tte': 2, 'tes': 11, 'est': 28, 'st\n': 1, 't\n\n': 1, '\n\n\n': 2, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 9, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 3, 'stB': 2, 'tBi': 2, 'Bit': 4, 'its': 14, 'ts(': 4, 's(u': 1, '(un': 1, 'st.': 3, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 5, 'se)': 1, 'e):': 1, '):\n': 4, ':\n\n': 1, '\n\n ': 2, '\n  ': 22, '   ': 108, '  d': 2, ' de': 2, 'def': 3, 'ef ': 3, 'f t': 2, ' te': 7, 'st_': 6, 't_g': 6, '_ge': 6, 'get': 14, 'et_': 14, 't_n': 14, '_ne': 14, 'nex': 14, 'ext': 14, 'xt_': 14, 't_l': 7, '_la': 7, 'lar': 7, 'arg': 7, 'rge': 7, 'ges': 7, 'st(': 6, 't(s': 2, '(se': 2, 'sel': 10, 'elf': 10, 'lf)': 2, 'f):': 2, ':\n ': 4, '  b': 2, ' bi': 8, 'bit': 10, 'ts ': 2, 's =': 2, ' = ': 7, '= B': 2, ' Bi': 2, 's()': 3, '()\n': 6, ')\n ': 16, '  s': 8, ' se': 8, 'lf.': 8, 'f.a': 8, '.as': 8, 'sse': 8, 'ser': 8, 'ert': 8, 'rtR': 6, 'tRa': 6, 'Rai': 6, 'ais': 6, 'ise': 6, 'ses': 6, 'es(': 6, 's(E': 6, '(Ex': 6, 'Exc': 6, 'xce': 6, 'cep': 6, 'ept': 6, 'pti': 6, 'tio': 6, 'ion': 6, 'on,': 6, 'n, ': 6, ', b': 10, 'ts.': 8, 's.g': 8, '.ge': 8, 'st,': 6, 't, ': 6, ', N': 2, ' No': 2, 'Non': 2, 'one': 2, 'ne)': 2, 'e)\n': 2, ', 0': 2, ' 0)': 2, '0)\n': 2, ', -': 2, ' -1': 2, '-1)': 2, '1)\n': 2, '  n': 2, ' nu': 2, 'num': 4, 'um ': 2, 'm =': 2, '= i': 4, ' in': 4, 'int': 6, 'nt(': 6, ""t('"": 6, ""('0"": 4, ""'01"": 4, '011': 9, '110': 5, '101': 6, '010': 2, '111': 4, ""11'"": 4, ""1',"": 4, ""', "": 4, ' ba': 4, 'bas': 4, 'se=': 4, 'e=2': 4, '=2)': 4, '2)\n': 4, '  e': 2, ' ex': 4, 'exp': 4, 'xpe': 4, 'pec': 4, 'ect': 4, 'cte': 4, 'ted': 4, 'ed ': 2, 'd =': 2, 'rtE': 2, 'tEq': 2, 'Equ': 2, 'qua': 2, 'ual': 2, 'al(': 2, 'l(b': 2, '(bi': 2, 't(n': 2, '(nu': 2, 'um)': 2, 'm),': 2, '), ': 2, ', e': 2, 'ed)': 2, 'd)\n': 2, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 2, ""('S"": 2, ""'Su"": 2, 'Suc': 2, 'ucc': 2, 'cce': 2, 'ces': 2, 'ess': 2, 'ss:': 2, 's: ': 2, ': t': 2, ""st'"": 2, ""t')"": 2, ""')\n"": 2, ')\n\n': 3, 't_s': 7, '_sm': 7, 'sma': 7, 'mal': 7, 'all': 7, 'lle': 7, 'les': 7, '100': 1, '001': 1, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, 'n()': 2, '():': 1, '  t': 3, 'st ': 1, 't =': 1, '= T': 1, 't.t': 2, '.te': 2, 't()': 2, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  m': 1}"
Donne Martin,test_hash_map.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testhashmap(unittest.testcase):': 1, '#': 2, 'todo:': 1, 'it': 1, 'would': 1, 'be': 1, 'better': 1, 'if': 2, 'we': 1, 'had': 1, 'unit': 1, 'tests': 1, 'for': 1, 'each': 1, 'method': 1, 'in': 1, 'addition': 1, 'to': 1, 'the': 1, 'following': 1, 'end-to-end': 1, 'test': 2, 'def': 2, 'test_end_to_end(self):': 1, 'hash_table': 1, '=': 2, 'hashtable(10)': 1, 'print(""test:': 6, 'get': 1, 'on': 6, 'an': 2, 'empty': 3, 'hash': 3, 'table': 3, 'index"")': 3, 'self.assertraises(keyerror,': 3, 'hash_table.get,': 2, '0)': 1, 'set': 3, 'hash_table.set(0,': 1, ""'foo')"": 5, 'self.assertequal(hash_table.get(0),': 4, 'hash_table.set(1,': 1, ""'bar')"": 2, 'self.assertequal(hash_table.get(1),': 1, 'a': 4, 'non': 1, 'hash_table.set(10,': 2, ""'foo2')"": 2, 'self.assertequal(hash_table.get(10),': 2, 'key': 3, 'that': 3, 'already': 2, 'exists"")': 2, ""'foo3')"": 2, 'remove': 2, 'hash_table.remove(10)': 1, '10)': 1, ""doesn't"": 1, 'exist"")': 1, 'hash_table.remove,': 1, '-1)': 1, ""print('success:"": 1, ""test_end_to_end')"": 1, 'main():': 1, 'testhashmap()': 1, 'test.test_end_to_end()': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 2, 'uni': 3, 'nit': 3, 'itt': 2, 'tte': 3, 'tes': 9, 'est': 18, 'st\n': 2, 't\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 11, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 9, 'stH': 2, 'tHa': 2, 'Has': 3, 'ash': 22, 'shM': 2, 'hMa': 2, 'Map': 2, 'ap(': 2, 'p(u': 1, '(un': 1, 'st.': 2, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 1, 'se)': 1, 'e):': 1, '):\n': 3, ':\n\n': 1, '\n\n ': 8, '\n  ': 29, '   ': 150, '  #': 2, ' # ': 2, '# T': 1, ' TO': 1, 'TOD': 1, 'ODO': 1, 'DO:': 1, 'O: ': 1, ': I': 1, ' It': 1, 'It ': 1, 't w': 1, ' wo': 1, 'wou': 1, 'oul': 1, 'uld': 1, 'ld ': 1, 'd b': 1, ' be': 2, 'be ': 1, 'e b': 1, 'bet': 1, 'ett': 1, 'ter': 1, 'er ': 1, 'r i': 1, ' if': 1, 'if ': 2, 'f w': 1, ' we': 1, 'we ': 1, 'e h': 1, ' ha': 13, 'had': 1, 'ad ': 1, 'd u': 1, 'it ': 1, 't t': 1, ' te': 6, 'sts': 3, 'ts ': 1, 's f': 1, ' fo': 2, 'for': 1, 'or ': 1, 'r e': 1, ' ea': 1, 'eac': 1, 'ach': 1, 'ch\n': 1, 'h\n ': 1, '# m': 1, ' me': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od ': 1, 'd i': 1, ' in': 4, 'in ': 1, 'n a': 7, ' ad': 1, 'add': 1, 'ddi': 1, 'dit': 1, 'iti': 1, 'tio': 1, 'ion': 1, 'on ': 8, 'n t': 1, ' to': 1, 'to ': 1, 'o t': 1, ' th': 4, 'the': 1, 'he ': 1, 'e f': 1, 'fol': 1, 'oll': 1, 'llo': 1, 'low': 1, 'owi': 1, 'win': 1, 'ing': 1, 'ng ': 1, 'g e': 1, ' en': 1, 'end': 8, 'nd-': 1, 'd-t': 1, '-to': 1, 'to-': 1, 'o-e': 1, '-en': 1, 'nd ': 1, 'd t': 1, 't\n ': 1, '  d': 1, ' de': 1, 'def': 2, 'ef ': 2, 'f t': 1, 'st_': 3, 't_e': 3, '_en': 6, 'nd_': 3, 'd_t': 3, '_to': 3, 'to_': 3, 'o_e': 3, 'nd(': 2, 'd(s': 1, '(se': 1, 'sel': 11, 'elf': 11, 'lf)': 1, 'f):': 1, ':\n ': 3, '  h': 6, 'has': 19, 'sh_': 16, 'h_t': 16, '_ta': 16, 'tab': 19, 'abl': 20, 'ble': 20, 'le ': 4, 'e =': 1, ' = ': 2, '= H': 1, ' Ha': 1, 'shT': 1, 'hTa': 1, 'Tab': 1, 'le(': 1, 'e(1': 2, '(10': 6, '10)': 5, '0)\n': 4, ')\n\n': 9, '  p': 7, ' pr': 7, 'pri': 7, 'rin': 7, 'int': 7, 'nt(': 7, 't(""': 6, '(""T': 6, '""Te': 6, 'st:': 6, 't: ': 6, ': g': 1, ' ge': 1, 'get': 10, 'et ': 4, 't o': 4, ' on': 6, ' an': 2, 'an ': 2, 'n e': 3, ' em': 3, 'emp': 3, 'mpt': 3, 'pty': 3, 'ty ': 3, 'y h': 3, 'sh ': 3, 'h t': 3, ' ta': 3, 'e i': 3, 'ind': 3, 'nde': 3, 'dex': 3, 'ex""': 3, 'x"")': 3, '"")\n': 6, ')\n ': 16, '  s': 10, ' se': 13, 'lf.': 10, 'f.a': 10, '.as': 10, 'sse': 10, 'ser': 10, 'ert': 10, 'rtR': 3, 'tRa': 3, 'Rai': 3, 'ais': 3, 'ise': 3, 'ses': 3, 'es(': 3, 's(K': 3, '(Ke': 3, 'Key': 3, 'eyE': 3, 'yEr': 3, 'Err': 3, 'rro': 3, 'ror': 3, 'or,': 3, 'r, ': 3, ', h': 3, 'le.': 15, 'e.g': 9, '.ge': 9, 'et,': 2, 't, ': 2, ', 0': 1, ' 0)': 1, ': s': 3, 'set': 7, 'e.s': 4, '.se': 4, 'et(': 11, 't(0': 5, '(0,': 1, '0, ': 3, "", '"": 11, "" 'f"": 9, ""'fo"": 9, 'foo': 9, ""oo'"": 5, ""o')"": 5, ""')\n"": 12, 'rtE': 7, 'tEq': 7, 'Equ': 7, 'qua': 7, 'ual': 7, 'al(': 7, 'l(h': 7, '(ha': 7, '(0)': 4, '0),': 6, '), ': 7, 't(1': 6, '(1,': 1, '1, ': 1, "" 'b"": 2, ""'ba"": 2, 'bar': 2, ""ar'"": 2, ""r')"": 2, '(1)': 1, '1),': 1, ' a ': 4, 'a n': 1, ' no': 1, 'non': 1, '10,': 2, 'oo2': 2, ""o2'"": 2, ""2')"": 2, 'a k': 3, ' ke': 3, 'key': 3, 'ey ': 3, 'y t': 3, 'tha': 3, 'hat': 3, 'at ': 3, 't a': 2, ' al': 2, 'alr': 2, 'lre': 2, 'rea': 2, 'ead': 2, 'ady': 2, 'dy ': 2, 'y e': 2, ' ex': 3, 'exi': 3, 'xis': 3, 'ist': 3, 'ts""': 2, 's"")': 2, 'oo3': 2, ""o3'"": 2, ""3')"": 2, ': r': 2, ' re': 2, 'rem': 4, 'emo': 4, 'mov': 4, 'ove': 4, 've ': 2, 'e o': 2, 'e.r': 2, '.re': 2, 've(': 1, ', 1': 1, ' 10': 1, 't d': 1, ' do': 1, 'doe': 1, 'oes': 1, 'esn': 1, ""sn'"": 1, ""n't"": 1, ""'t "": 1, 't e': 1, 'st""': 1, 't"")': 1, 've,': 1, 'e, ': 1, ', -': 1, ' -1': 1, '-1)': 1, '1)\n': 1, ""t('"": 1, ""('S"": 1, ""'Su"": 1, 'Suc': 1, 'ucc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss:': 1, 's: ': 1, ': t': 1, ""nd'"": 1, ""d')"": 1, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, 'n()': 2, '():': 1, '  t': 2, 'st ': 1, 't =': 1, '= T': 1, 'p()': 1, '()\n': 3, 't.t': 1, '.te': 1, 'd()': 1, '\n\ni': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  m': 1}"
Donne Martin,test_insert_m_into_n.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testbit(unittest.testcase):': 1, 'def': 2, 'test_insert_m_into_n(self):': 1, 'n': 1, '=': 5, ""int('0000010000111101',"": 1, 'base=2)': 3, 'm': 1, ""int('0000000000010011',"": 1, 'expected': 1, ""int('0000010001001101',"": 1, 'bits': 1, 'bits()': 1, 'self.assertequal(bits.insert_m_into_n(m,': 1, 'n,': 1, 'i=2,': 1, 'j=6),': 1, 'expected)': 1, ""print('success:"": 1, ""test_insert_m_into_n')"": 1, 'main():': 1, 'test': 1, 'testbit()': 1, 'test.test_insert_m_into_n()': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 1, 'uni': 2, 'nit': 2, 'itt': 2, 'tte': 2, 'tes': 7, 'est': 10, 'st\n': 1, 't\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 2, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 3, 'stB': 2, 'tBi': 2, 'Bit': 3, 'it(': 2, 't(u': 1, '(un': 1, 'st.': 2, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 4, 'se)': 1, 'e):': 1, '):\n': 3, ':\n\n': 1, '\n\n ': 1, '\n  ': 10, '   ': 44, '  d': 1, ' de': 1, 'def': 2, 'ef ': 2, 'f t': 1, ' te': 4, 'st_': 3, 't_i': 3, '_in': 7, 'ins': 4, 'nse': 4, 'ser': 5, 'ert': 5, 'rt_': 4, 't_m': 4, '_m_': 4, 'm_i': 4, 'int': 8, 'nto': 4, 'to_': 4, 'o_n': 4, '_n(': 3, 'n(s': 1, '(se': 1, 'sel': 2, 'elf': 2, 'lf)': 1, 'f):': 1, ':\n ': 3, '  n': 1, ' n ': 1, 'n =': 1, ' = ': 5, '= i': 3, ' in': 3, 'nt(': 4, ""t('"": 4, ""('0"": 3, ""'00"": 3, '000': 18, '001': 7, '010': 4, '100': 4, '011': 3, '111': 2, '110': 2, '101': 2, ""01'"": 2, ""1',"": 3, ""', "": 3, ', b': 3, ' ba': 3, 'bas': 3, 'se=': 3, 'e=2': 3, '=2)': 3, '2)\n': 3, ')\n ': 6, '  m': 2, ' m ': 1, 'm =': 1, ""11'"": 1, '  e': 1, ' ex': 2, 'exp': 2, 'xpe': 2, 'pec': 2, 'ect': 2, 'cte': 2, 'ted': 2, 'ed ': 1, 'd =': 1, '  b': 1, ' bi': 1, 'bit': 2, 'its': 3, 'ts ': 1, 's =': 1, '= B': 1, ' Bi': 1, 'ts(': 1, 's()': 1, '()\n': 4, '  s': 1, ' se': 1, 'lf.': 1, 'f.a': 1, '.as': 1, 'sse': 1, 'rtE': 1, 'tEq': 1, 'Equ': 1, 'qua': 1, 'ual': 1, 'al(': 1, 'l(b': 1, '(bi': 1, 'ts.': 1, 's.i': 1, '.in': 1, 'n(m': 1, '(m,': 1, 'm, ': 1, ', n': 1, ' n,': 1, 'n, ': 1, ', i': 1, ' i=': 1, 'i=2': 1, '=2,': 1, '2, ': 1, ', j': 1, ' j=': 1, 'j=6': 1, '=6)': 1, '6),': 1, '), ': 1, ', e': 1, 'ed)': 1, 'd)\n': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, ""('S"": 1, ""'Su"": 1, 'Suc': 1, 'ucc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss:': 1, 's: ': 1, ': t': 1, ""_n'"": 1, ""n')"": 1, ""')\n"": 1, ')\n\n': 2, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, 'n()': 3, '():': 1, '  t': 2, 'st ': 1, 't =': 1, '= T': 1, 't()': 1, 't.t': 1, '.te': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1}"
Donne Martin,test_pairwise_swap.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testbits(unittest.testcase):': 1, 'def': 2, 'test_pairwise_swap(self):': 1, 'bits': 1, '=': 4, 'bits()': 1, 'self.assertequal(bits.pairwise_swap(0),': 1, '0)': 1, 'self.assertequal(bits.pairwise_swap(1),': 1, '1)': 1, 'num': 1, ""int('0000100111110110',"": 1, 'base=2)': 2, 'expected': 1, ""int('0000011011111001',"": 1, 'self.assertequal(bits.pairwise_swap(num),': 1, 'expected)': 1, 'self.assertraises(typeerror,': 1, 'bits.pairwise_swap,': 1, 'none)': 1, ""print('success:"": 1, ""test_pairwise_swap')"": 1, 'main():': 1, 'test': 1, 'testbits()': 1, 'test.test_pairwise_swap()': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 1, 'uni': 2, 'nit': 2, 'itt': 2, 'tte': 2, 'tes': 7, 'est': 10, 'st\n': 1, 't\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 5, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 3, 'stB': 2, 'tBi': 2, 'Bit': 3, 'its': 8, 'ts(': 3, 's(u': 1, '(un': 1, 'st.': 2, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 3, 'se)': 1, 'e):': 1, '):\n': 3, ':\n\n': 1, '\n\n ': 1, '\n  ': 13, '   ': 62, '  d': 1, ' de': 1, 'def': 2, 'ef ': 2, 'f t': 1, ' te': 4, 'st_': 3, 't_p': 3, '_pa': 3, 'pai': 7, 'air': 7, 'irw': 7, 'rwi': 7, 'wis': 7, 'ise': 8, 'se_': 7, 'e_s': 7, '_sw': 7, 'swa': 7, 'wap': 7, 'ap(': 5, 'p(s': 1, '(se': 1, 'sel': 5, 'elf': 5, 'lf)': 1, 'f):': 1, ':\n ': 3, '  b': 1, ' bi': 2, 'bit': 5, 'ts ': 1, 's =': 1, ' = ': 4, '= B': 1, ' Bi': 1, 's()': 2, '()\n': 4, ')\n ': 8, '  s': 4, ' se': 4, 'lf.': 4, 'f.a': 4, '.as': 4, 'sse': 4, 'ser': 4, 'ert': 4, 'rtE': 3, 'tEq': 3, 'Equ': 3, 'qua': 3, 'ual': 3, 'al(': 3, 'l(b': 3, '(bi': 3, 'ts.': 4, 's.p': 4, '.pa': 4, 'p(0': 1, '(0)': 1, '0),': 1, '), ': 3, ', 0': 1, ' 0)': 1, '0)\n': 1, 'p(1': 1, '(1)': 1, '1),': 1, ', 1': 1, ' 1)': 1, '1)\n': 1, '  n': 1, ' nu': 1, 'num': 2, 'um ': 1, 'm =': 1, '= i': 2, ' in': 2, 'int': 3, 'nt(': 3, ""t('"": 3, ""('0"": 2, ""'00"": 2, '000': 5, '001': 4, '010': 1, '100': 2, '011': 4, '111': 6, '110': 4, '101': 2, ""10'"": 1, ""0',"": 1, ""', "": 2, ', b': 3, ' ba': 2, 'bas': 2, 'se=': 2, 'e=2': 2, '=2)': 2, '2)\n': 2, '  e': 1, ' ex': 2, 'exp': 2, 'xpe': 2, 'pec': 2, 'ect': 2, 'cte': 2, 'ted': 2, 'ed ': 1, 'd =': 1, ""01'"": 1, ""1',"": 1, 'p(n': 1, '(nu': 1, 'um)': 1, 'm),': 1, ', e': 1, 'ed)': 1, 'd)\n': 1, 'rtR': 1, 'tRa': 1, 'Rai': 1, 'ais': 1, 'ses': 1, 'es(': 1, 's(T': 1, '(Ty': 1, 'Typ': 1, 'ype': 1, 'peE': 1, 'eEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or,': 1, 'r, ': 1, 'ap,': 1, 'p, ': 1, ', N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne)': 1, 'e)\n': 1, '  \n': 1, ' \n ': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, ""('S"": 1, ""'Su"": 1, 'Suc': 1, 'ucc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss:': 1, 's: ': 1, ': t': 1, ""ap'"": 1, ""p')"": 1, ""')\n"": 1, ')\n\n': 2, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, 'n()': 2, '():': 1, '  t': 2, 'st ': 1, 't =': 1, '= T': 1, 't.t': 1, '.te': 1, 'p()': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  m': 1}"
Donne Martin,test_permutation_solution.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testpermutation(unittest.testcase):': 1, 'def': 2, 'test_permutation(self,': 1, 'func):': 1, 'self.assertequal(func(none,': 1, ""'foo'),"": 2, 'false)': 4, ""self.assertequal(func('',"": 1, ""self.assertequal(func('nib',"": 1, ""'bin'),"": 1, ""self.assertequal(func('act',"": 1, ""'cat'),"": 1, 'true)': 2, ""self.assertequal(func('a"": 1, ""ct',"": 1, ""'ca"": 1, ""t'),"": 1, ""self.assertequal(func('dog',"": 1, ""'doggo'),"": 1, ""print('success:"": 1, ""test_permutation')"": 1, 'main():': 1, 'test': 1, '=': 3, 'testpermutation()': 1, 'permutations': 1, 'permutations()': 1, 'test.test_permutation(permutations.is_permutation)': 1, 'try:': 1, 'permutations_alt': 1, 'permutationsalt()': 1, 'test.test_permutation(permutations_alt.is_permutation)': 1, 'except': 1, 'nameerror:': 1, '#': 2, 'alternate': 1, 'solutions': 2, 'are': 1, 'only': 1, 'defined': 1, 'in': 1, 'the': 1, 'file': 1, 'pass': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 1, 'uni': 2, 'nit': 2, 'itt': 2, 'tte': 2, 'tes': 9, 'est': 12, 'st\n': 1, 't\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 8, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 3, 'stP': 2, 'tPe': 2, 'Per': 4, 'erm': 14, 'rmu': 14, 'mut': 14, 'uta': 14, 'tat': 14, 'ati': 14, 'tio': 16, 'ion': 16, 'on(': 5, 'n(u': 1, '(un': 1, 'st.': 3, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 1, 'se)': 5, 'e):': 1, '):\n': 3, ':\n\n': 1, '\n\n ': 1, '\n  ': 19, '   ': 86, '  d': 1, ' de': 2, 'def': 3, 'ef ': 2, 'f t': 1, ' te': 5, 'st_': 4, 't_p': 4, '_pe': 6, 'per': 10, 'n(s': 1, '(se': 1, 'sel': 7, 'elf': 7, 'lf,': 1, 'f, ': 1, ', f': 1, ' fu': 1, 'fun': 7, 'unc': 7, 'nc)': 1, 'c):': 1, ':\n ': 5, '  s': 6, ' se': 6, 'lf.': 6, 'f.a': 6, '.as': 6, 'sse': 6, 'ser': 6, 'ert': 6, 'rtE': 6, 'tEq': 6, 'Equ': 6, 'qua': 6, 'ual': 6, 'al(': 6, 'l(f': 6, '(fu': 6, 'nc(': 6, 'c(N': 1, '(No': 1, 'Non': 1, 'one': 1, 'ne,': 1, 'e, ': 1, "", '"": 6, "" 'f"": 2, ""'fo"": 2, 'foo': 2, ""oo'"": 2, ""o')"": 3, ""'),"": 6, '), ': 6, ', F': 4, ' Fa': 4, 'Fal': 4, 'als': 4, 'lse': 4, 'e)\n': 6, ')\n ': 11, ""c('"": 5, ""(''"": 1, ""'',"": 1, ""', "": 5, ""('N"": 1, ""'Ni"": 1, 'Nib': 1, ""ib'"": 1, ""b',"": 1, "" 'b"": 1, ""'bi"": 1, 'bin': 1, ""in'"": 1, ""n')"": 2, ""('a"": 2, ""'ac"": 1, 'act': 1, ""ct'"": 2, ""t',"": 2, "" 'c"": 2, ""'ca"": 2, 'cat': 1, ""at'"": 1, ""t')"": 2, ', T': 2, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue)': 2, ""'a "": 1, 'a c': 1, ' ct': 1, 'ca ': 1, 'a t': 1, "" t'"": 1, ""('d"": 1, ""'do"": 2, 'dog': 2, ""og'"": 1, ""g',"": 1, "" 'd"": 1, 'ogg': 1, 'ggo': 1, ""go'"": 1, '  p': 4, ' pr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, ""t('"": 1, ""('S"": 1, ""'Su"": 1, 'Suc': 1, 'ucc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss:': 1, 's: ': 1, ': t': 1, ""on'"": 1, ""')\n"": 1, ')\n\n': 1, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, 'n()': 3, '():': 1, '  t': 4, 'st ': 1, 't =': 2, ' = ': 3, '= T': 1, '()\n': 4, ' pe': 2, 'ons': 8, 'ns ': 3, 's =': 1, '= P': 2, ' Pe': 2, 'ns(': 1, 's()': 1, 't.t': 2, '.te': 2, 'n(p': 2, '(pe': 2, 'ns.': 1, 's.i': 1, '.is': 2, 'is_': 2, 's_p': 2, 'on)': 2, 'n)\n': 2, ' tr': 1, 'try': 1, 'ry:': 1, 'y:\n': 1, 'ns_': 2, 's_a': 2, '_al': 2, 'alt': 2, 'lt ': 1, 'nsA': 1, 'sAl': 1, 'Alt': 2, 'lt(': 1, 't()': 1, 'lt.': 1, 't.i': 1, '  e': 1, ' ex': 1, 'exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pt ': 1, 't N': 1, ' Na': 1, 'Nam': 1, 'ame': 2, 'meE': 1, 'eEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or:': 1, 'r:\n': 1, '  #': 2, ' # ': 2, '# A': 1, ' Al': 1, 'lte': 1, 'ter': 1, 'ern': 1, 'rna': 1, 'nat': 1, 'ate': 1, 'te ': 1, 'e s': 2, ' so': 2, 'sol': 2, 'olu': 2, 'lut': 2, 'uti': 2, 's a': 1, ' ar': 1, 'are': 1, 're ': 1, 'e o': 1, ' on': 1, 'onl': 1, 'nly': 1, 'ly ': 1, 'y d': 1, 'efi': 1, 'fin': 1, 'ine': 1, 'ned': 1, 'ed\n': 1, 'd\n ': 1, '# i': 1, ' in': 1, 'in ': 1, 'n t': 1, ' th': 1, 'the': 1, 'he ': 1, 's f': 1, ' fi': 1, 'fil': 1, 'ile': 1, 'le\n': 1, 'e\n ': 1, ' pa': 1, 'pas': 1, 'ss\n': 1, 's\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  m': 1}"
Donne Martin,test_print_binary.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testbits(unittest.testcase):': 1, 'def': 2, 'test_print_binary(self):': 1, 'bit': 1, '=': 5, 'bits()': 1, 'self.assertequal(bit.print_binary(none),': 1, ""'error')"": 4, 'self.assertequal(bit.print_binary(0),': 1, 'self.assertequal(bit.print_binary(1),': 1, 'num': 2, '0.625': 1, 'expected': 1, ""'0.101'"": 1, 'self.assertequal(bit.print_binary(num),': 2, 'expected)': 1, '0.987654321': 1, ""print('success:"": 1, ""test_print_binary')"": 1, 'main():': 1, 'test': 1, 'testbits()': 1, 'test.test_print_binary()': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 1, 'uni': 2, 'nit': 2, 'itt': 2, 'tte': 2, 'tes': 7, 'est': 10, 'st\n': 1, 't\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 6, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 3, 'stB': 2, 'tBi': 2, 'Bit': 3, 'its': 3, 'ts(': 3, 's(u': 1, '(un': 1, 'st.': 2, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 1, 'se)': 1, 'e):': 1, '):\n': 3, ':\n\n': 1, '\n\n ': 1, '\n  ': 14, '   ': 68, '  d': 1, ' de': 1, 'def': 2, 'ef ': 2, 'f t': 1, ' te': 4, 'st_': 3, 't_p': 3, '_pr': 3, 'pri': 9, 'rin': 9, 'int': 9, 'nt_': 8, 't_b': 8, '_bi': 8, 'bin': 8, 'ina': 8, 'nar': 8, 'ary': 8, 'ry(': 7, 'y(s': 1, '(se': 1, 'sel': 6, 'elf': 6, 'lf)': 1, 'f):': 1, ':\n ': 3, '  b': 1, ' bi': 1, 'bit': 6, 'it ': 1, 't =': 2, ' = ': 5, '= B': 1, ' Bi': 1, 's()': 2, '()\n': 4, ')\n ': 7, '  s': 5, ' se': 5, 'lf.': 5, 'f.a': 5, '.as': 5, 'sse': 5, 'ser': 5, 'ert': 5, 'rtE': 5, 'tEq': 5, 'Equ': 5, 'qua': 5, 'ual': 5, 'al(': 5, 'l(b': 5, '(bi': 5, 'it.': 5, 't.p': 5, '.pr': 5, 'y(N': 1, '(No': 1, 'Non': 1, 'one': 1, 'ne)': 1, 'e),': 1, '), ': 5, "", '"": 4, "" 'E"": 4, ""'ER"": 4, 'ERR': 4, 'RRO': 4, 'ROR': 4, ""OR'"": 4, ""R')"": 4, ""')\n"": 5, 'y(0': 1, '(0)': 1, '0),': 1, 'y(1': 1, '(1)': 1, '1),': 1, '  n': 2, ' nu': 2, 'num': 4, 'um ': 2, 'm =': 2, '= 0': 2, ' 0.': 2, '0.6': 1, '.62': 1, '625': 1, '25\n': 1, '5\n ': 1, '  e': 1, ' ex': 2, 'exp': 2, 'xpe': 2, 'pec': 2, 'ect': 2, 'cte': 2, 'ted': 2, 'ed ': 1, 'd =': 1, ""= '"": 2, "" '0"": 1, ""'0."": 1, '0.1': 1, '.10': 1, '101': 1, ""01'"": 1, ""1'\n"": 1, ""'\n "": 1, 'y(n': 2, '(nu': 2, 'um)': 2, 'm),': 2, ', e': 1, 'ed)': 1, 'd)\n': 1, '0.9': 1, '.98': 1, '987': 1, '876': 1, '765': 1, '654': 1, '543': 1, '432': 1, '321': 1, '21\n': 1, '1\n ': 1, '  p': 1, ' pr': 1, 'nt(': 1, ""t('"": 1, ""('S"": 1, ""'Su"": 1, 'Suc': 1, 'ucc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss:': 1, 's: ': 1, ': t': 1, ""ry'"": 1, ""y')"": 1, ')\n\n': 2, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, 'n()': 2, '():': 1, '  t': 2, 'st ': 1, '= T': 1, 't.t': 1, '.te': 1, 'y()': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  m': 1}"
Donne Martin,test_priority_queue.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testpriorityqueue(unittest.testcase):': 1, 'def': 2, 'test_priority_queue(self):': 1, 'priority_queue': 1, '=': 3, 'priorityqueue()': 1, 'self.assertequal(priority_queue.extract_min(),': 1, 'none)': 1, ""priority_queue.insert(priorityqueuenode('a',"": 1, '20))': 1, ""priority_queue.insert(priorityqueuenode('b',"": 1, '5))': 1, ""priority_queue.insert(priorityqueuenode('c',"": 1, '15))': 1, ""priority_queue.insert(priorityqueuenode('d',"": 1, '22))': 1, ""priority_queue.insert(priorityqueuenode('e',"": 1, '40))': 1, ""priority_queue.insert(priorityqueuenode('f',"": 1, '3))': 1, ""priority_queue.decrease_key('f',"": 1, '2)': 1, ""priority_queue.decrease_key('a',"": 1, '19)': 1, 'mins': 1, '[]': 1, 'while': 1, 'priority_queue.array:': 1, 'mins.append(priority_queue.extract_min().key)': 1, 'self.assertequal(mins,': 1, '[2,': 1, '5,': 1, '15,': 1, '19,': 1, '22,': 1, '40])': 1, ""print('success:"": 1, ""test_min_heap')"": 1, 'main():': 1, 'test': 1, 'testpriorityqueue()': 1, 'test.test_priority_queue()': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 1, 'uni': 2, 'nit': 2, 'itt': 2, 'tte': 2, 'tes': 7, 'est': 10, 'st\n': 1, 't\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 3, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 3, 'stP': 2, 'tPr': 2, 'Pri': 9, 'rio': 23, 'ior': 23, 'ori': 23, 'rit': 23, 'ity': 23, 'tyQ': 9, 'yQu': 9, 'Que': 9, 'ueu': 23, 'eue': 23, 'ue(': 5, 'e(u': 1, '(un': 1, 'st.': 2, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 3, 'se)': 1, 'e):': 1, '):\n': 3, ':\n\n': 1, '\n\n ': 1, '\n  ': 19, '   ': 102, '  d': 1, ' de': 1, 'def': 2, 'ef ': 2, 'f t': 1, ' te': 4, 'st_': 3, 't_p': 2, '_pr': 2, 'pri': 15, 'ty_': 14, 'y_q': 14, '_qu': 14, 'que': 14, 'e(s': 1, '(se': 1, 'sel': 3, 'elf': 3, 'lf)': 1, 'f):': 1, ':\n ': 4, '  p': 10, ' pr': 11, 'ue ': 1, 'e =': 1, ' = ': 3, '= P': 1, ' Pr': 1, 'e()': 3, '()\n': 4, ')\n ': 13, '  s': 2, ' se': 2, 'lf.': 2, 'f.a': 2, '.as': 2, 'sse': 2, 'ser': 8, 'ert': 8, 'rtE': 2, 'tEq': 2, 'Equ': 2, 'qua': 2, 'ual': 2, 'al(': 2, 'l(p': 1, '(pr': 2, 'ue.': 11, 'e.e': 2, '.ex': 2, 'ext': 2, 'xtr': 2, 'tra': 2, 'rac': 2, 'act': 2, 'ct_': 2, 't_m': 3, '_mi': 3, 'min': 6, 'in(': 4, 'n()': 4, '(),': 1, '), ': 1, ', N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne)': 1, 'e)\n': 1, 'e.i': 6, '.in': 6, 'ins': 9, 'nse': 6, 'rt(': 6, 't(P': 6, '(Pr': 6, 'ueN': 6, 'eNo': 6, 'Nod': 6, 'ode': 6, 'de(': 6, ""e('"": 6, ""('a"": 2, ""'a'"": 2, ""a',"": 2, ""', "": 8, ', 2': 4, ' 20': 1, '20)': 1, '0))': 2, '))\n': 6, ""('b"": 1, ""'b'"": 1, ""b',"": 1, ', 5': 2, ' 5)': 1, '5))': 2, ""('c"": 1, ""'c'"": 1, ""c',"": 1, ', 1': 4, ' 15': 2, '15)': 1, ""('d"": 1, ""'d'"": 1, ""d',"": 1, ' 22': 2, '22)': 1, '2))': 1, ""('e"": 1, ""'e'"": 1, ""e',"": 1, ', 4': 2, ' 40': 2, '40)': 1, ""('f"": 2, ""'f'"": 2, ""f',"": 2, ', 3': 1, ' 3)': 1, '3))': 1, 'e.d': 2, '.de': 2, 'dec': 2, 'ecr': 2, 'cre': 2, 'rea': 2, 'eas': 2, 'se_': 2, 'e_k': 2, '_ke': 2, 'key': 3, 'ey(': 2, ""y('"": 2, ' 2)': 1, '2)\n': 1, ' 19': 2, '19)': 1, '9)\n': 1, '  m': 3, ' mi': 2, 'ns ': 1, 's =': 1, '= [': 1, ' []': 1, '[]\n': 1, ']\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e p': 1, 'e.a': 1, '.ar': 1, 'arr': 1, 'rra': 1, 'ray': 1, 'ay:': 1, 'y:\n': 1, 'ns.': 1, 's.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(p': 1, '().': 1, ').k': 1, '.ke': 1, 'ey)': 1, 'y)\n': 1, 'l(m': 1, '(mi': 1, 'ns,': 1, 's, ': 1, ', [': 1, ' [2': 1, '[2,': 1, '2, ': 2, ' 5,': 1, '5, ': 2, '15,': 1, '19,': 1, '9, ': 1, '22,': 1, '40]': 1, '0])': 1, '])\n': 1, 'rin': 1, 'int': 1, 'nt(': 1, ""t('"": 1, ""('S"": 1, ""'Su"": 1, 'Suc': 1, 'ucc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss:': 1, 's: ': 1, ': t': 1, 'in_': 2, 'n_h': 1, '_he': 1, 'hea': 1, 'eap': 1, ""ap'"": 1, ""p')"": 1, ""')\n"": 1, ')\n\n': 2, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, '():': 1, '  t': 2, 'st ': 1, 't =': 1, '= T': 1, 't.t': 1, '.te': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1}"
Donne Martin,test_reverse_string.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testreverse(unittest.testcase):': 1, 'def': 3, 'test_reverse(self,': 1, 'func):': 2, 'self.assertequal(func(none),': 1, 'none)': 1, ""self.assertequal(func(['']),"": 1, ""[''])"": 1, 'self.assertequal(func(': 1, ""['f',"": 2, ""'o',"": 8, ""'"": 4, ""',"": 4, ""'b',"": 4, ""'a',"": 4, ""'r']),"": 1, ""['r',"": 2, ""'f'])"": 2, ""print('success:"": 2, ""test_reverse')"": 1, 'test_reverse_inplace(self,': 1, 'target_list': 1, '=': 3, ""'r']"": 1, 'func(target_list)': 1, 'self.assertequal(target_list,': 1, ""test_reverse_inplace')"": 1, 'main():': 1, 'test': 1, 'testreverse()': 1, 'reverse_string': 1, 'reversestring()': 1, 'test.test_reverse(reverse_string.reverse)': 1, 'test.test_reverse_inplace(reverse_string.reverse)': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 1, 'uni': 2, 'nit': 2, 'itt': 2, 'tte': 2, 'tes': 11, 'est': 14, 'st\n': 1, 't\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 5, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 3, 'stR': 2, 'tRe': 2, 'Rev': 3, 'eve': 14, 'ver': 14, 'ers': 14, 'rse': 14, 'se(': 4, 'e(u': 1, '(un': 1, 'st.': 3, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 1, 'se)': 3, 'e):': 1, '):\n': 4, ':\n\n': 1, '\n\n ': 2, '\n  ': 17, '   ': 82, '  d': 2, ' de': 2, 'def': 3, 'ef ': 3, 'f t': 2, ' te': 7, 'st_': 6, 't_r': 6, '_re': 6, 'rev': 11, 'e(s': 2, '(se': 2, 'sel': 6, 'elf': 6, 'lf,': 2, 'f, ': 2, ', f': 2, ' fu': 3, 'fun': 6, 'unc': 6, 'nc)': 2, 'c):': 2, ':\n ': 4, '  s': 4, ' se': 4, 'lf.': 4, 'f.a': 4, '.as': 4, 'sse': 4, 'ser': 4, 'ert': 4, 'rtE': 4, 'tEq': 4, 'Equ': 4, 'qua': 4, 'ual': 4, 'al(': 4, 'l(f': 3, '(fu': 3, 'nc(': 4, 'c(N': 1, '(No': 1, 'Non': 2, 'one': 2, 'ne)': 2, 'e),': 1, '), ': 2, ', N': 1, ' No': 1, 'e)\n': 3, ')\n ': 8, 'c([': 1, ""(['"": 1, ""[''"": 2, ""'']"": 2, ""'])"": 5, ']),': 2, ', [': 2, "" ['"": 5, '])\n': 3, 'c(\n': 1, '(\n ': 1, '  [': 2, ""['f"": 2, ""'f'"": 4, ""f',"": 2, ""', "": 24, "", '"": 24, "" 'o"": 8, ""'o'"": 8, ""o',"": 8, "" ' "": 4, ""' '"": 4, "" ',"": 4, "" 'b"": 4, ""'b'"": 4, ""b',"": 4, "" 'a"": 4, ""'a'"": 4, ""a',"": 4, "" 'r"": 2, ""'r'"": 4, ""r']"": 2, '),\n': 1, ',\n ': 1, ""['r"": 2, ""r',"": 2, "" 'f"": 2, ""f']"": 2, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 6, 'int': 2, 'nt(': 2, ""t('"": 2, ""('S"": 2, ""'Su"": 2, 'Suc': 2, 'ucc': 2, 'cce': 2, 'ces': 2, 'ess': 2, 'ss:': 2, 's: ': 2, ': t': 2, ""se'"": 1, ""e')"": 2, ""')\n"": 2, ')\n\n': 3, 'se_': 6, 'e_i': 3, '_in': 3, 'inp': 3, 'npl': 3, 'pla': 3, 'lac': 3, 'ace': 3, 'ce(': 2, '  t': 4, ' ta': 1, 'tar': 3, 'arg': 3, 'rge': 3, 'get': 3, 'et_': 3, 't_l': 3, '_li': 3, 'lis': 3, 'ist': 3, 'st ': 2, 't =': 2, ' = ': 3, '= [': 1, ""']\n"": 1, ']\n ': 1, '  f': 1, 'c(t': 1, '(ta': 2, 'st)': 1, 't)\n': 1, 'l(t': 1, 'st,': 1, 't, ': 1, ""ce'"": 1, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, 'n()': 2, '():': 1, '= T': 1, 'e()': 1, '()\n': 3, '  r': 1, ' re': 1, 'e_s': 3, '_st': 3, 'str': 3, 'tri': 4, 'ing': 4, 'ng ': 1, 'g =': 1, '= R': 1, ' Re': 1, 'seS': 1, 'eSt': 1, 'Str': 1, 'ng(': 1, 'g()': 1, 't.t': 2, '.te': 2, 'e(r': 2, '(re': 2, 'ng.': 2, 'g.r': 2, '.re': 2, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  m': 1}"
Donne Martin,test_rotation.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testrotation(unittest.testcase):': 1, 'def': 2, 'test_rotation(self):': 1, 'rotation': 1, '=': 2, 'rotation()': 1, ""self.assertequal(rotation.is_rotation('o',"": 1, ""'oo'),"": 1, 'false)': 3, 'self.assertequal(rotation.is_rotation(none,': 1, ""'foo'),"": 2, ""self.assertequal(rotation.is_rotation('',"": 2, ""''),"": 1, 'true)': 2, ""self.assertequal(rotation.is_rotation('foobarbaz',"": 1, ""'barbazfoo'),"": 1, ""print('success:"": 1, ""test_rotation')"": 1, 'main():': 1, 'test': 1, 'testrotation()': 1, 'test.test_rotation()': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 1, 'uni': 2, 'nit': 2, 'itt': 2, 'tte': 2, 'tes': 7, 'est': 10, 'st\n': 1, 't\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 6, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 3, 'stR': 2, 'tRo': 2, 'Rot': 3, 'ota': 17, 'tat': 17, 'ati': 17, 'tio': 17, 'ion': 17, 'on(': 10, 'n(u': 1, '(un': 1, 'st.': 2, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 1, 'se)': 4, 'e):': 1, '):\n': 3, ':\n\n': 1, '\n\n ': 1, '\n  ': 11, '   ': 50, '  d': 1, ' de': 1, 'def': 2, 'ef ': 2, 'f t': 1, ' te': 4, 'st_': 3, 't_r': 3, '_ro': 8, 'rot': 14, 'n(s': 1, '(se': 1, 'sel': 6, 'elf': 6, 'lf)': 1, 'f):': 1, ':\n ': 3, '  r': 1, ' ro': 1, 'on ': 1, 'n =': 1, ' = ': 2, '= R': 1, ' Ro': 1, 'n()': 5, '()\n': 4, ')\n ': 7, '  s': 5, ' se': 5, 'lf.': 5, 'f.a': 5, '.as': 5, 'sse': 5, 'ser': 5, 'ert': 5, 'rtE': 5, 'tEq': 5, 'Equ': 5, 'qua': 5, 'ual': 5, 'al(': 5, 'l(r': 5, '(ro': 5, 'on.': 5, 'n.i': 5, '.is': 5, 'is_': 5, 's_r': 5, ""n('"": 4, ""('o"": 1, ""'o'"": 1, ""o',"": 1, ""', "": 4, "", '"": 5, "" 'o"": 1, ""'oo"": 1, ""oo'"": 4, ""o')"": 4, ""'),"": 5, '), ': 5, ', F': 3, ' Fa': 3, 'Fal': 3, 'als': 3, 'lse': 3, 'e)\n': 5, 'n(N': 1, '(No': 1, 'Non': 1, 'one': 1, 'ne,': 1, 'e, ': 1, "" 'f"": 2, ""'fo"": 3, 'foo': 4, ""(''"": 2, ""'',"": 2, "" ''"": 1, ""'')"": 1, ', T': 2, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue)': 2, ""('f"": 1, 'oob': 1, 'oba': 1, 'bar': 2, 'arb': 2, 'rba': 2, 'baz': 2, ""az'"": 1, ""z',"": 1, "" 'b"": 1, ""'ba"": 1, 'azf': 1, 'zfo': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, ""t('"": 1, ""('S"": 1, ""'Su"": 1, 'Suc': 1, 'ucc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss:': 1, 's: ': 1, ': t': 1, ""on'"": 1, ""n')"": 1, ""')\n"": 1, ')\n\n': 2, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, '():': 1, '  t': 2, 'st ': 1, 't =': 1, '= T': 1, 't.t': 1, '.te': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  m': 1}"
Donne Martin,test_str_diff.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testfinddiff(unittest.testcase):': 1, 'def': 2, 'test_find_diff(self):': 1, 'solution': 1, '=': 2, 'solution()': 1, 'self.assertraises(typeerror,': 1, 'solution.find_diff,': 1, 'none)': 1, ""self.assertequal(solution.find_diff('ab',"": 1, ""'aab'),"": 2, ""'a')"": 4, ""self.assertequal(solution.find_diff('aab',"": 1, ""'ab'),"": 2, ""self.assertequal(solution.find_diff('abcd',"": 1, ""'abcde'),"": 2, ""'e')"": 4, ""self.assertequal(solution.find_diff('aaabbcdd',"": 1, ""'abdbacade'),"": 2, ""self.assertequal(solution.find_diff_xor('ab',"": 1, ""self.assertequal(solution.find_diff_xor('aab',"": 1, ""self.assertequal(solution.find_diff_xor('abcd',"": 1, ""self.assertequal(solution.find_diff_xor('aaabbcdd',"": 1, ""print('success:"": 1, ""test_find_diff')"": 1, 'main():': 1, 'test': 1, 'testfinddiff()': 1, 'test.test_find_diff()': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 1, 'uni': 2, 'nit': 2, 'itt': 2, 'tte': 2, 'tes': 7, 'est': 10, 'st\n': 1, 't\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 10, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 3, 'stF': 2, 'tFi': 2, 'Fin': 2, 'ind': 14, 'ndD': 2, 'dDi': 2, 'Dif': 2, 'iff': 14, 'ff(': 8, 'f(u': 1, '(un': 1, 'st.': 2, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 1, 'se)': 1, 'e):': 1, '):\n': 3, ':\n\n': 1, '\n\n ': 1, '\n  ': 15, '   ': 74, '  d': 1, ' de': 1, 'def': 2, 'ef ': 2, 'f t': 1, ' te': 4, 'st_': 3, 't_f': 3, '_fi': 3, 'fin': 12, 'nd_': 12, 'd_d': 12, '_di': 12, 'dif': 12, 'f(s': 1, '(se': 1, 'sel': 10, 'elf': 10, 'lf)': 1, 'f):': 1, ':\n ': 3, '  s': 10, ' so': 2, 'sol': 10, 'olu': 11, 'lut': 11, 'uti': 11, 'tio': 11, 'ion': 11, 'on ': 1, 'n =': 1, ' = ': 2, '= S': 1, ' So': 1, 'Sol': 1, 'on(': 1, 'n()': 3, '()\n': 4, ')\n ': 11, ' se': 9, 'lf.': 9, 'f.a': 9, '.as': 9, 'sse': 9, 'ser': 9, 'ert': 9, 'rtR': 1, 'tRa': 1, 'Rai': 1, 'ais': 1, 'ise': 1, 'ses': 1, 'es(': 1, 's(T': 1, '(Ty': 1, 'Typ': 1, 'ype': 1, 'peE': 1, 'eEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or,': 1, 'r, ': 1, ', s': 1, 'on.': 9, 'n.f': 9, '.fi': 9, 'ff,': 1, 'f, ': 1, ', N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne)': 1, 'e)\n': 1, 'rtE': 8, 'tEq': 8, 'Equ': 8, 'qua': 8, 'ual': 8, 'al(': 8, 'l(s': 8, '(so': 8, ""f('"": 4, ""('a"": 8, ""'ab"": 10, ""ab'"": 8, ""b',"": 4, ""', "": 8, "", '"": 16, "" 'a"": 12, ""'aa"": 6, 'aab': 6, ""b')"": 4, ""'),"": 8, '), ': 8, ""'a'"": 4, ""a')"": 4, ""')\n"": 9, 'abc': 4, 'bcd': 6, ""cd'"": 2, ""d',"": 4, 'cde': 2, ""de'"": 4, ""e')"": 8, "" 'e"": 4, ""'e'"": 4, 'aaa': 2, 'abb': 2, 'bbc': 2, 'cdd': 2, ""dd'"": 2, 'abd': 2, 'bdb': 2, 'dba': 2, 'bac': 2, 'aca': 2, 'cad': 2, 'ade': 2, 'ff_': 4, 'f_x': 4, '_xo': 4, 'xor': 4, 'or(': 4, ""r('"": 4, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, ""t('"": 1, ""('S"": 1, ""'Su"": 1, 'Suc': 1, 'ucc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss:': 1, 's: ': 1, ': t': 1, ""ff'"": 1, ""f')"": 1, ')\n\n': 2, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, '():': 1, '  t': 2, 'st ': 1, 't =': 1, '= T': 1, 'f()': 2, 't.t': 1, '.te': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  m': 1}"
Donne Martin,test_two_sum.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testtwosum(unittest.testcase):': 1, 'def': 2, 'test_two_sum(self):': 1, 'solution': 1, '=': 5, 'solution()': 1, 'self.assertraises(typeerror,': 1, 'solution.two_sum,': 2, 'none,': 1, 'none)': 1, 'self.assertraises(valueerror,': 1, '[],': 1, '0)': 1, 'target': 1, '7': 1, 'nums': 1, '[1,': 1, '3,': 1, '2,': 1, '-7,': 1, '5]': 1, 'expected': 1, '[2,': 1, '4]': 1, 'self.assertequal(solution.two_sum(nums,': 1, 'target),': 1, 'expected)': 1, ""print('success:"": 1, ""test_two_sum')"": 1, 'main():': 1, 'test': 1, 'testtwosum()': 1, 'test.test_two_sum()': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 1, 'uni': 2, 'nit': 2, 'itt': 2, 'tte': 2, 'tes': 7, 'est': 10, 'st\n': 1, 't\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 4, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 3, 'stT': 2, 'tTw': 2, 'Two': 2, 'woS': 2, 'oSu': 2, 'Sum': 2, 'um(': 5, 'm(u': 1, '(un': 1, 'st.': 2, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 1, 'se)': 1, 'e):': 1, '):\n': 3, ':\n\n': 1, '\n\n ': 1, '\n  ': 12, '   ': 56, '  d': 1, ' de': 1, 'def': 2, 'ef ': 2, 'f t': 1, ' te': 4, 'st_': 3, 't_t': 3, '_tw': 3, 'two': 6, 'wo_': 6, 'o_s': 6, '_su': 6, 'sum': 6, 'm(s': 1, '(se': 1, 'sel': 4, 'elf': 4, 'lf)': 1, 'f):': 1, ':\n ': 3, '  s': 4, ' so': 3, 'sol': 4, 'olu': 5, 'lut': 5, 'uti': 5, 'tio': 5, 'ion': 5, 'on ': 1, 'n =': 1, ' = ': 5, '= S': 1, ' So': 1, 'Sol': 1, 'on(': 1, 'n()': 3, '()\n': 4, ')\n ': 5, ' se': 3, 'lf.': 3, 'f.a': 3, '.as': 3, 'sse': 3, 'ser': 3, 'ert': 3, 'rtR': 2, 'tRa': 2, 'Rai': 2, 'ais': 2, 'ise': 2, 'ses': 2, 'es(': 2, 's(T': 1, '(Ty': 1, 'Typ': 1, 'ype': 1, 'peE': 1, 'eEr': 2, 'Err': 2, 'rro': 2, 'ror': 2, 'or,': 2, 'r, ': 2, ', s': 2, 'on.': 3, 'n.t': 3, '.tw': 3, 'um,': 2, 'm, ': 2, ', N': 2, ' No': 2, 'Non': 2, 'one': 2, 'ne,': 1, 'e, ': 1, 'ne)': 1, 'e)\n': 1, 's(V': 1, '(Va': 1, 'Val': 1, 'alu': 1, 'lue': 1, 'ueE': 1, ', [': 1, ' []': 1, '[],': 1, '], ': 1, ', 0': 1, ' 0)': 1, '0)\n': 1, '  t': 3, ' ta': 2, 'tar': 2, 'arg': 2, 'rge': 2, 'get': 2, 'et ': 1, 't =': 2, '= 7': 1, ' 7\n': 1, '7\n ': 1, '  n': 1, ' nu': 1, 'num': 2, 'ums': 2, 'ms ': 1, 's =': 1, '= [': 2, ' [1': 1, '[1,': 1, '1, ': 1, ', 3': 1, ' 3,': 1, '3, ': 1, ', 2': 1, ' 2,': 1, '2, ': 2, ', -': 1, ' -7': 1, '-7,': 1, '7, ': 1, ', 5': 1, ' 5]': 1, '5]\n': 1, ']\n ': 2, '  e': 1, ' ex': 2, 'exp': 2, 'xpe': 2, 'pec': 2, 'ect': 2, 'cte': 2, 'ted': 2, 'ed ': 1, 'd =': 1, ' [2': 1, '[2,': 1, ', 4': 1, ' 4]': 1, '4]\n': 1, 'rtE': 1, 'tEq': 1, 'Equ': 1, 'qua': 1, 'ual': 1, 'al(': 1, 'l(s': 1, '(so': 1, 'm(n': 1, '(nu': 1, 'ms,': 1, 's, ': 1, ', t': 1, 'et)': 1, 't),': 1, '), ': 1, ', e': 1, 'ed)': 1, 'd)\n': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, ""t('"": 1, ""('S"": 1, ""'Su"": 1, 'Suc': 1, 'ucc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss:': 1, 's: ': 1, ': t': 1, ""um'"": 1, ""m')"": 1, ""')\n"": 1, ')\n\n': 2, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, '():': 1, 'st ': 1, '= T': 1, 'm()': 2, 't.t': 1, '.te': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  m': 1}"
Donne Martin,test_unique_chars.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'unittest': 1, 'class': 1, 'testuniquechars(unittest.testcase):': 1, 'def': 2, 'test_unique_chars(self,': 1, 'func):': 1, 'self.assertequal(func(none),': 1, 'false)': 2, ""self.assertequal(func(''),"": 1, 'true)': 2, ""self.assertequal(func('foo'),"": 1, ""self.assertequal(func('bar'),"": 1, ""print('success:"": 1, ""test_unique_chars')"": 1, 'main():': 1, 'test': 1, '=': 4, 'testuniquechars()': 1, 'unique_chars': 1, 'uniquechars()': 1, 'test.test_unique_chars(unique_chars.has_unique_chars)': 1, 'try:': 1, 'unique_chars_set': 1, 'uniquecharsset()': 1, 'test.test_unique_chars(unique_chars_set.has_unique_chars)': 1, 'unique_chars_in_place': 1, 'uniquecharsinplace()': 1, 'test.test_unique_chars(unique_chars_in_place.has_unique_chars)': 1, 'except': 1, 'nameerror:': 1, '#': 2, 'alternate': 1, 'solutions': 2, 'are': 1, 'only': 1, 'defined': 1, 'in': 1, 'the': 1, 'file': 1, 'pass': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'main()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't u': 1, ' un': 4, 'uni': 16, 'nit': 2, 'itt': 2, 'tte': 2, 'tes': 11, 'est': 14, 'st\n': 1, 't\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 6, 'ss ': 1, 's T': 1, ' Te': 2, 'Tes': 3, 'stU': 2, 'tUn': 2, 'Uni': 5, 'niq': 19, 'iqu': 19, 'que': 19, 'ueC': 5, 'eCh': 5, 'Cha': 5, 'har': 19, 'ars': 19, 'rs(': 7, 's(u': 4, '(un': 4, 'st.': 4, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 1, 'se)': 3, 'e):': 1, '):\n': 3, ':\n\n': 1, '\n\n ': 1, '\n  ': 19, '   ': 86, '  d': 1, ' de': 2, 'def': 3, 'ef ': 2, 'f t': 1, ' te': 6, 'st_': 5, 't_u': 5, '_un': 8, 'ue_': 14, 'e_c': 14, '_ch': 14, 'cha': 14, 's(s': 1, '(se': 1, 'sel': 5, 'elf': 5, 'lf,': 1, 'f, ': 1, ', f': 1, ' fu': 1, 'fun': 5, 'unc': 5, 'nc)': 1, 'c):': 1, ':\n ': 5, '  s': 4, ' se': 4, 'lf.': 4, 'f.a': 4, '.as': 4, 'sse': 4, 'ser': 4, 'ert': 4, 'rtE': 4, 'tEq': 4, 'Equ': 4, 'qua': 4, 'ual': 4, 'al(': 4, 'l(f': 4, '(fu': 4, 'nc(': 4, 'c(N': 1, '(No': 1, 'Non': 1, 'one': 1, 'ne)': 1, 'e),': 1, '), ': 4, ', F': 2, ' Fa': 2, 'Fal': 2, 'als': 2, 'lse': 2, 'e)\n': 4, ')\n ': 11, ""c('"": 3, ""(''"": 1, ""'')"": 1, ""'),"": 3, ', T': 2, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue)': 2, ""('f"": 1, ""'fo"": 1, 'foo': 1, ""oo'"": 1, ""o')"": 1, ""('b"": 1, ""'ba"": 1, 'bar': 1, ""ar'"": 1, ""r')"": 1, '  p': 2, ' pr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, ""t('"": 1, ""('S"": 1, ""'Su"": 1, 'Suc': 1, 'ucc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss:': 1, 's: ': 1, ': t': 1, ""rs'"": 1, ""s')"": 1, ""')\n"": 1, ')\n\n': 1, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 2, 'mai': 3, 'ain': 3, 'in(': 2, 'n()': 2, '():': 1, '  t': 5, 'st ': 1, 't =': 2, ' = ': 4, '= T': 1, 's()': 2, '()\n': 5, '  u': 3, 'rs ': 1, 's =': 1, '= U': 3, ' Un': 3, 't.t': 3, '.te': 3, 'rs.': 1, 's.h': 1, '.ha': 3, 'has': 3, 'as_': 3, 's_u': 3, 'rs)': 3, 's)\n': 3, ' tr': 1, 'try': 1, 'ry:': 1, 'y:\n': 1, 'rs_': 4, 's_s': 2, '_se': 2, 'set': 2, 'et ': 1, 'rsS': 1, 'sSe': 1, 'Set': 1, 'et(': 1, 't()': 1, 'et.': 1, 't.h': 1, 's_i': 2, '_in': 2, 'in_': 3, 'n_p': 2, '_pl': 2, 'pla': 2, 'lac': 3, 'ace': 3, 'ce ': 1, 'e =': 1, 'rsI': 1, 'sIn': 1, 'InP': 1, 'nPl': 1, 'Pla': 1, 'ce(': 1, 'e()': 1, 'ce.': 1, 'e.h': 1, '  e': 1, ' ex': 1, 'exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pt ': 1, 't N': 1, ' Na': 1, 'Nam': 1, 'ame': 2, 'meE': 1, 'eEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or:': 1, 'r:\n': 1, '  #': 2, ' # ': 2, '# A': 1, ' Al': 1, 'Alt': 1, 'lte': 1, 'ter': 1, 'ern': 1, 'rna': 1, 'nat': 1, 'ate': 1, 'te ': 1, 'e s': 2, ' so': 2, 'sol': 2, 'olu': 2, 'lut': 2, 'uti': 2, 'tio': 2, 'ion': 2, 'ons': 2, 'ns ': 2, 's a': 1, ' ar': 1, 'are': 1, 're ': 1, 'e o': 1, ' on': 1, 'onl': 1, 'nly': 1, 'ly ': 1, 'y d': 1, 'efi': 1, 'fin': 1, 'ine': 1, 'ned': 1, 'ed\n': 1, 'd\n ': 1, '# i': 1, ' in': 1, 'in ': 1, 'n t': 1, ' th': 1, 'the': 1, 'he ': 1, 's f': 1, ' fi': 1, 'fil': 1, 'ile': 1, 'le\n': 1, 'e\n ': 1, ' pa': 1, 'pas': 1, 'ss\n': 1, 's\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  m': 1}"
Garvit Bansal,03.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 2, 'given': 4, 'a': 4, 'string,': 1, 'find': 1, 'the': 9, 'length': 4, 'of': 3, 'longest': 1, 'substring': 1, 'without': 1, 'repeating': 1, 'characters.': 1, 'examples:': 1, '""abcabcbb"",': 1, 'answer': 4, 'is': 5, '""abc"",': 1, 'which': 1, '3.': 2, '""bbbbb"",': 1, '""b"",': 1, 'with': 2, '1.': 1, '""pwwkew"",': 1, '""wke"",': 1, 'note': 1, 'that': 1, 'must': 1, 'be': 1, 'substring,': 1, '""pwke""': 1, 'subsequence': 1, 'and': 1, 'not': 1, 'substring.': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'lengthoflongestsubstring(self,': 1, 's):': 1, '""""""': 2, ':type': 1, 's:': 1, 'str': 1, ':rtype:': 1, 'int': 1, 'mapset': 1, '=': 5, '{}': 1, 'start,': 1, 'result': 3, '0,': 1, '0': 1, 'for': 1, 'end': 1, 'in': 2, 'range(len(s)):': 1, 'if': 1, 's[end]': 1, 'mapset:': 1, 'start': 1, 'max(mapset[s[end]],': 1, 'start)': 1, 'max(result,': 1, 'end-start+1)': 1, 'mapset[s[end]]': 1, 'end+1': 1, 'return': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\t"": 1, '\n\tG': 4, '\tGi': 4, 'Giv': 4, 'ive': 4, 'ven': 4, 'en ': 4, 'n a': 1, ' a ': 4, 'a s': 4, ' st': 4, 'str': 6, 'tri': 5, 'rin': 5, 'ing': 6, 'ng,': 2, 'g, ': 2, ', f': 1, ' fi': 1, 'fin': 1, 'ind': 1, 'nd ': 3, 'd t': 1, ' th': 10, 'the': 9, 'he ': 9, 'e l': 5, ' le': 5, 'len': 6, 'eng': 5, 'ngt': 5, 'gth': 5, 'th ': 6, 'h o': 3, ' of': 3, 'of ': 3, 'f t': 1, ' lo': 1, 'lon': 1, 'ong': 2, 'nge': 3, 'ges': 2, 'est': 2, 'st ': 2, 't s': 1, ' su': 4, 'sub': 4, 'ubs': 5, 'bst': 4, 'ng ': 2, 'g w': 1, ' wi': 3, 'wit': 3, 'ith': 3, 'tho': 1, 'hou': 1, 'out': 1, 'ut ': 1, 't r': 1, ' re': 4, 'rep': 1, 'epe': 1, 'pea': 1, 'eat': 1, 'ati': 1, 'tin': 1, 'g c': 1, ' ch': 1, 'cha': 1, 'har': 1, 'ara': 1, 'rac': 1, 'act': 1, 'cte': 1, 'ter': 1, 'ers': 1, 'rs.': 1, 's.\n': 1, '.\n\n': 3, '\n\n\t': 4, '\n\tE': 1, '\tEx': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'les': 1, 'es:': 1, 's:\n': 1, ':\n\n': 1, 'n ""': 3, ' ""a': 2, '""ab': 2, 'abc': 3, 'bca': 1, 'cab': 1, 'bcb': 1, 'cbb': 1, 'bb""': 2, 'b"",': 3, '"", ': 6, ', t': 3, 'e a': 6, ' an': 5, 'ans': 4, 'nsw': 4, 'swe': 4, 'wer': 4, 'er ': 4, 'r i': 3, ' is': 5, 'is ': 5, 's ""': 3, 'bc""': 1, 'c"",': 1, ', w': 3, ' wh': 1, 'whi': 1, 'hic': 1, 'ich': 1, 'ch ': 1, 'h t': 3, 'h i': 1, 's 3': 1, ' 3.': 2, '3.\n': 1, ' ""b': 2, '""bb': 1, 'bbb': 3, '""b""': 1, 'f 1': 1, ' 1.': 1, '1.\n': 1, ' ""p': 2, '""pw': 2, 'pww': 1, 'wwk': 1, 'wke': 3, 'kew': 1, 'ew""': 1, 'w"",': 1, ' ""w': 1, '""wk': 1, 'ke""': 2, 'e"",': 1, 'f 3': 1, '3. ': 1, '. N': 1, ' No': 1, 'Not': 1, 'ote': 1, 'te ': 1, 'e t': 1, 'tha': 1, 'hat': 1, 'at ': 1, 't t': 1, 'r m': 1, ' mu': 1, 'mus': 1, 'ust': 1, 't b': 1, ' be': 1, 'be ': 1, ', ""': 1, 'pwk': 1, 'e"" ': 1, '"" i': 1, 's a': 1, 'bse': 1, 'seq': 1, 'equ': 1, 'que': 1, 'uen': 1, 'enc': 1, 'nce': 1, 'ce ': 1, 'and': 1, 'd n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't a': 1, 'ng.': 1, 'g.\n': 1, "".\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 3, ':\n ': 4, '\n  ': 13, '   ': 74, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'f l': 1, 'thO': 1, 'hOf': 1, 'OfL': 1, 'fLo': 1, 'Lon': 1, 'stS': 1, 'tSu': 1, 'Sub': 1, 'ng(': 1, 'g(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', s': 2, ' s)': 1, 's):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e s': 1, ' s:': 1, 's: ': 1, ': s': 1, 'tr\n': 1, 'r\n ': 1, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, 'e: ': 1, ': i': 1, ' in': 3, 'int': 1, 'nt\n': 1, 't\n ': 1, '  m': 1, ' ma': 4, 'map': 4, 'apS': 4, 'pSe': 4, 'Set': 4, 'et ': 1, 't =': 4, ' = ': 5, '= {': 1, ' {}': 1, '{}\n': 1, '}\n ': 1, '  s': 1, 'sta': 4, 'tar': 4, 'art': 4, 'rt,': 1, 't, ': 2, ', r': 1, 'res': 4, 'esu': 4, 'sul': 4, 'ult': 4, 'lt ': 3, '= 0': 1, ' 0,': 1, '0, ': 1, ', 0': 1, ' 0\n': 1, '0\n\n': 1, '\n\n ': 2, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r e': 1, ' en': 3, 'end': 6, 'd i': 1, 'in ': 2, 'n r': 2, ' ra': 1, 'ran': 1, 'ang': 1, 'ge(': 1, 'e(l': 1, '(le': 1, 'en(': 1, 'n(s': 1, '(s)': 1, 's))': 1, ')):': 1, '  \t': 4, ' \ti': 1, '\tif': 1, 'if ': 1, 'f s': 1, ' s[': 1, 's[e': 3, '[en': 3, 'nd]': 3, 'd] ': 1, '] i': 1, 'n m': 1, 'et:': 1, 't:\n': 1, ' \t\t': 1, '\t\ts': 1, '\tst': 1, 'rt ': 1, '= m': 2, 'max': 2, 'ax(': 2, 'x(m': 1, '(ma': 1, 'et[': 2, 't[s': 2, '[s[': 2, 'd]]': 2, ']],': 1, '], ': 1, 'rt)': 1, 't)\n': 1, ')\n ': 2, ' \tr': 1, '\tre': 1, 'x(r': 1, '(re': 1, 'lt,': 1, ', e': 1, 'nd-': 1, 'd-s': 1, '-st': 1, 'rt+': 1, 't+1': 1, '+1)': 1, '1)\n': 1, ' \tm': 1, '\tma': 1, ']] ': 1, '] =': 1, '= e': 1, 'nd+': 1, 'd+1': 1, '+1\n': 1, '1\n\n': 1, '  r': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 't \n': 1}"
Garvit Bansal,05.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{""'''"": 2, 'given': 1, 'a': 2, 'string': 1, 's,': 1, 'find': 1, 'the': 2, 'longest': 1, 'palindromic': 1, 'substring': 1, 'in': 5, 's.': 1, 'you': 1, 'may': 1, 'assume': 1, 'that': 1, 'maximum': 1, 'length': 11, 'of': 1, 's': 1, 'is': 2, '1000.': 1, 'example': 2, '1:': 2, 'input:': 2, '""babad""': 1, 'output:': 2, '""bab""': 1, 'note:': 1, '""aba""': 1, 'also': 1, 'valid': 1, 'answer.': 1, '2:': 1, '""cbbd""': 1, '""bb""': 1, 'class': 2, 'solution(object):': 2, 'def': 3, 'longestpalindrome(self,': 2, 's):': 2, '""""""': 4, ':type': 2, 's:': 2, 'str': 4, ':rtype:': 2, 'dp': 1, '=': 19, '[[0': 1, 'for': 4, '_': 2, 'range(len(s))]': 2, 'maxlength,': 1, 'result': 5, '1,': 1, '""""': 1, 'index': 4, 'range(len(s)):': 2, 'dp[index][index]': 1, '1': 7, 's[index]': 1, '2': 2, 'while': 3, '<=': 1, 'len(s):': 1, 'index_i': 4, '0': 3, '<': 2, 'len(s)': 2, '-': 2, '+': 2, 'index_j': 1, '-1': 1, 'if': 3, '==': 4, 'and': 4, 's[index_i]': 2, 's[index_j]:': 1, 'dp[index_i][index_j]': 2, 'maxlength': 2, 'max(maxlength,': 1, '2)': 1, 's[index_i:index_j+1]': 2, 'elif': 1, 's[index_j]': 1, 'dp[index_i+1][index_j-1]:': 1, '>': 2, 'maxlength:': 1, '+=': 3, 'return': 3, '#': 2, 'space:': 1, 'o(n^2)': 2, 'time:': 1, 'expand(s,': 3, 'left,': 1, 'right):': 1, 'left': 2, '>=': 1, 'right': 2, 's[left]': 1, 's[right]:': 1, '-=': 1, 'right-left-1': 1, 'start,': 1, 'end': 2, '0,': 1, 'even_len': 1, 'index,': 2, 'index+1)': 1, 'odd_len': 1, 'index)': 1, 'max(even_len,': 1, 'odd_len)': 1, '(end-start):': 1, 'start': 1, '(length-1)/2': 1, '+length/2': 1, 's[start:end+1]': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\t"": 1, '\n\tG': 1, '\tGi': 1, 'Giv': 1, 'ive': 1, 'ven': 3, 'en ': 3, 'n a': 1, ' a ': 2, 'a s': 1, ' st': 6, 'str': 6, 'tri': 2, 'rin': 2, 'ing': 2, 'ng ': 2, 'g s': 1, ' s,': 1, 's, ': 4, ', f': 1, ' fi': 1, 'fin': 1, 'ind': 34, 'nd ': 7, 'd t': 1, ' th': 3, 'the': 2, 'he ': 2, 'e l': 3, ' lo': 3, 'lon': 3, 'ong': 3, 'nge': 7, 'ges': 3, 'est': 3, 'st ': 1, 't p': 1, ' pa': 1, 'pal': 1, 'ali': 4, 'lin': 3, 'ndr': 3, 'dro': 3, 'rom': 3, 'omi': 1, 'mic': 1, 'ic ': 1, 'c s': 1, ' su': 1, 'sub': 1, 'ubs': 1, 'bst': 1, 'g i': 1, ' in': 15, 'in ': 5, 'n s': 2, ' s.': 1, 's. ': 1, '. Y': 1, ' Yo': 1, 'You': 1, 'ou ': 1, 'u m': 1, ' ma': 6, 'may': 1, 'ay ': 1, 'y a': 1, ' as': 1, 'ass': 3, 'ssu': 1, 'sum': 1, 'ume': 1, 'me ': 1, 'e t': 1, 'tha': 1, 'hat': 1, 'at ': 1, 't t': 1, 'e m': 1, 'max': 8, 'axi': 1, 'xim': 1, 'imu': 1, 'mum': 1, 'um ': 1, 'm l': 1, ' le': 14, 'len': 24, 'eng': 18, 'ngt': 18, 'gth': 18, 'th ': 12, 'h o': 1, ' of': 1, 'of ': 1, 'f s': 2, ' s ': 1, 's i': 1, ' is': 2, 'is ': 2, 's 1': 1, ' 10': 1, '100': 1, '000': 1, '00.': 1, '0.\n': 1, '.\n\n': 1, '\n\n\t': 3, '\n\tE': 2, '\tEx': 2, 'Exa': 2, 'xam': 2, 'amp': 2, 'mpl': 2, 'ple': 2, 'le ': 5, 'e 1': 1, ' 1:': 2, '1:\n': 2, ':\n\n': 2, '\n\tI': 2, '\tIn': 2, 'Inp': 2, 'npu': 2, 'put': 4, 'ut:': 4, 't: ': 4, ': ""': 5, ' ""b': 3, '""ba': 2, 'bab': 2, 'aba': 2, 'bad': 1, 'ad""': 1, 'd""\n': 2, '""\n\t': 3, '\n\tO': 2, '\tOu': 2, 'Out': 2, 'utp': 2, 'tpu': 2, 'ab""': 1, 'b""\n': 2, '\n\tN': 1, '\tNo': 1, 'Not': 1, 'ote': 1, 'te:': 1, 'e: ': 5, ' ""a': 1, '""ab': 1, 'ba""': 1, 'a"" ': 1, '"" i': 1, 's a': 1, ' al': 1, 'als': 1, 'lso': 1, 'so ': 1, 'o a': 1, 'a v': 1, ' va': 1, 'val': 1, 'lid': 1, 'id ': 1, 'd a': 1, ' an': 5, 'ans': 1, 'nsw': 1, 'swe': 1, 'wer': 1, 'er.': 1, 'r.\n': 1, '.\n\t': 1, 'e 2': 1, ' 2:': 1, '2:\n': 1, ' ""c': 1, '""cb': 1, 'cbb': 1, 'bbd': 1, 'bd""': 1, '""bb': 1, 'bb""': 1, '""\n\'': 1, ""\n''"": 1, ""'\n\n"": 1, '\n\nc': 2, '\ncl': 2, 'cla': 2, 'las': 2, 'ss ': 2, 's S': 2, ' So': 2, 'Sol': 2, 'olu': 2, 'lut': 2, 'uti': 2, 'tio': 2, 'ion': 2, 'on(': 2, 'n(o': 2, '(ob': 2, 'obj': 2, 'bje': 2, 'jec': 2, 'ect': 2, 'ct)': 2, 't):': 4, '):\n': 9, ':\n ': 14, '\n  ': 47, '   ': 274, '  d': 4, ' de': 3, 'def': 3, 'ef ': 3, 'f l': 5, 'stP': 2, 'tPa': 2, 'Pal': 2, 'ome': 2, 'me(': 2, 'e(s': 2, '(se': 2, 'sel': 2, 'elf': 2, 'lf,': 2, 'f, ': 2, ', s': 2, ' s)': 2, 's):': 3, '  ""': 4, ' """"': 5, '""""""': 4, '""""\n': 5, '""\n ': 4, '  :': 4, ' :t': 2, ':ty': 2, 'typ': 4, 'ype': 4, 'pe ': 2, 'e s': 2, ' s:': 2, 's: ': 2, ': s': 4, 'tr\n': 4, 'r\n ': 4, ' :r': 2, ':rt': 2, 'rty': 2, 'pe:': 2, ' dp': 2, 'dp ': 1, 'p =': 1, ' = ': 19, '= [': 1, ' [[': 1, '[[0': 1, '[0 ': 1, '0 f': 1, ' fo': 4, 'for': 4, 'or ': 4, 'r _': 2, ' _ ': 2, '_ i': 2, 'n r': 6, ' ra': 4, 'ran': 4, 'ang': 4, 'ge(': 4, 'e(l': 4, '(le': 5, 'en(': 7, 'n(s': 7, '(s)': 7, 's))': 4, '))]': 2, ')] ': 1, '] f': 1, ')]\n': 1, ']\n ': 2, '  m': 1, 'axL': 5, 'xLe': 5, 'Len': 5, 'th,': 2, 'h, ': 2, ', r': 2, ' re': 4, 'res': 5, 'esu': 5, 'sul': 5, 'ult': 5, 'lt ': 4, 't =': 5, '= 1': 8, ' 1,': 1, '1, ': 1, ', ""': 1, '  f': 2, 'r i': 2, 'nde': 30, 'dex': 30, 'ex ': 4, 'x i': 2, ')):': 2, '  \t': 26, ' \td': 1, '\tdp': 3, 'dp[': 4, 'p[i': 4, '[in': 15, 'ex]': 3, 'x][': 1, '][i': 4, 'x] ': 1, '] =': 6, ' 1\n': 7, '1\n ': 6, ' \tr': 2, '\tre': 4, '= s': 6, ' s[': 10, 's[i': 7, 'x]\n': 1, ']\n\n': 2, '\n\n ': 7, '  l': 1, 'h =': 5, '= 2': 2, ' 2\n': 1, '2\n ': 2, '  \n': 1, ' \n ': 1, '  w': 1, ' wh': 1, 'whi': 3, 'hil': 3, 'ile': 3, 'h <': 1, ' <=': 1, '<= ': 1, '= l': 2, ' \ti': 2, '\tin': 3, 'ex_': 19, 'x_i': 11, '_i ': 4, 'i =': 1, '= 0': 3, ' 0\n': 2, '0\n ': 2, ' \tw': 2, '\twh': 2, 'e i': 1, 'i <': 1, ' < ': 2, '< l': 2, 's) ': 2, ') -': 1, ' - ': 2, '- l': 1, 'h +': 2, ' + ': 2, '+ 1': 1, ' \t\t': 15, '\t\ti': 4, 'x_j': 8, '_j ': 1, 'j =': 1, '= i': 3, 'i +': 2, '+ l': 1, 'h -': 1, ' -1': 1, '-1\n': 2, '1\n\n': 3, '\tif': 3, 'if ': 4, ' ==': 4, '== ': 4, ' 2 ': 1, '2 a': 1, 'and': 7, 'd s': 2, '_i]': 4, 'i] ': 2, '_j]': 4, 'j]:': 1, ']:\n': 3, '\t\t\t': 9, '\t\td': 2, 'i][': 2, 'j] ': 3, '\t\tm': 2, '\tma': 2, '= m': 2, 'ax(': 2, 'x(m': 1, '(ma': 1, ', 2': 1, ' 2)': 1, '2)\n': 3, ')\n ': 4, '\t\tr': 3, '_i:': 2, 'i:i': 2, ':in': 2, '_j+': 2, 'j+1': 2, '+1]': 4, '1]\n': 3, '\t\te': 2, '\tel': 1, 'eli': 1, 'lif': 1, '] a': 1, 'd d': 1, '_i+': 1, 'i+1': 1, '1][': 1, '_j-': 1, 'j-1': 1, '-1]': 1, '1]:': 1, 'h >': 2, ' > ': 2, '> m': 1, 'th:': 1, 'h:\n': 1, 'th\n': 1, 'h\n ': 1, ' +=': 3, '+= ': 3, ' \tl': 2, '\tle': 3, '  r': 2, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'lt\n': 1, 't\n\n': 1, '\n\n#': 1, '\n# ': 2, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 2, ' O(': 2, 'O(N': 2, '(N^': 2, 'N^2': 2, '^2)': 2, ')\n#': 1, '# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, ')\n\n': 1, '""\n\n': 1, 'f e': 1, ' ex': 3, 'exp': 3, 'xpa': 3, 'pan': 3, 'nd(': 3, 'd(s': 3, '(s,': 3, ', l': 1, 'lef': 5, 'eft': 5, 'ft,': 1, 't, ': 2, ' ri': 3, 'rig': 5, 'igh': 5, 'ght': 5, 'ht)': 1, 'ft ': 2, 't >': 1, ' >=': 1, '>= ': 1, ' 0 ': 1, '0 a': 1, 'd r': 1, 'ht ': 2, 't <': 1, ') a': 1, 's[l': 1, '[le': 1, 'ft]': 1, 't] ': 1, 's[r': 1, '[ri': 1, 'ht]': 1, 't]:': 1, '\t\tl': 1, 't -': 1, ' -=': 1, '-= ': 1, '\tri': 1, 't +': 1, 'ht-': 1, 't-l': 1, '-le': 1, 'ft-': 1, 't-1': 1, '  s': 1, 'sta': 4, 'tar': 4, 'art': 4, 'rt,': 1, ', e': 1, ' en': 1, 'end': 4, 'd =': 2, ' 0,': 1, '0, ': 1, ', 0': 1, ' \te': 1, '\tev': 1, 'eve': 2, 'en_': 2, 'n_l': 2, '_le': 4, 'n =': 2, '= e': 2, ', i': 4, 'ex,': 2, 'x, ': 2, 'ex+': 1, 'x+1': 1, '+1)': 1, '1)\n': 1, ' \to': 1, '\tod': 1, 'odd': 2, 'dd_': 2, 'd_l': 2, 'ex)': 1, 'x)\n': 1, 'x(e': 1, '(ev': 1, 'en,': 1, 'n, ': 1, ', o': 1, ' od': 1, 'en)': 1, 'n)\n': 1, '> (': 1, ' (e': 1, '(en': 1, 'nd-': 1, 'd-s': 1, '-st': 1, 'rt)': 1, '\t\ts': 1, '\tst': 1, 'rt ': 1, 'x -': 1, '- (': 1, ' (l': 1, 'th-': 1, 'h-1': 1, '-1)': 1, '1)/': 1, ')/2': 1, '/2\n': 2, '\ten': 1, 'x +': 1, ' +l': 1, '+le': 1, 'th/': 1, 'h/2': 1, '2\n\n': 1, 's[s': 1, '[st': 1, 'rt:': 1, 't:e': 1, ':en': 1, 'nd+': 1, 'd+1': 1}"
Garvit Bansal,06.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 2, 'the': 1, 'string': 1, '""paypalishiring""': 1, 'is': 1, 'written': 1, 'in': 5, 'a': 5, 'zigzag': 1, 'pattern': 2, 'on': 1, 'given': 1, 'number': 1, 'of': 1, 'rows': 1, 'like': 1, 'this:': 1, '(you': 1, 'may': 1, 'want': 1, 'to': 1, 'display': 1, 'this': 1, 'fixed': 1, 'font': 1, 'for': 4, 'better': 1, 'legibility)': 1, 'p': 2, 'h': 1, 'n': 1, 'l': 1, 's': 2, 'i': 3, 'g': 1, 'y': 1, 'r': 1, 'and': 1, 'then': 1, 'read': 1, 'line': 1, 'by': 1, 'line:': 1, '""pahnaplsiigyir""': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'convert(self,': 1, 's,': 1, 'numrows):': 1, '""""""': 2, ':type': 2, 's:': 2, 'str': 2, 'numrows:': 1, 'int': 1, ':rtype:': 1, 'if': 4, 'numrows': 2, '==': 3, '1:': 2, 'return': 2, 'result': 1, '=': 5, '[""""': 1, '_': 1, 'range(numrows)]': 1, 'row,': 1, 'down': 3, '0,': 1, '1': 4, 'char': 2, 'result[row]': 1, '+=': 3, 'row': 4, '-': 1, '0': 1, '0:': 1, 'down:': 1, 'else:': 1, '-=': 1, 'final_string': 3, '""""': 1, 'value': 2, 'result:': 1, 'print(solution().convert(""paypalishiring"",': 1, '3))': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\t"": 1, '\n\tT': 1, '\tTh': 1, 'The': 1, 'he ': 1, 'e s': 2, ' st': 3, 'str': 6, 'tri': 4, 'rin': 5, 'ing': 4, 'ng ': 3, 'g ""': 1, ' ""P': 2, '""PA': 3, 'PAY': 2, 'AYP': 2, 'YPA': 2, 'PAL': 2, 'ALI': 2, 'LIS': 2, 'ISH': 2, 'SHI': 2, 'HIR': 2, 'IRI': 2, 'RIN': 2, 'ING': 2, 'NG""': 2, 'G"" ': 1, '"" i': 1, ' is': 1, 'is ': 2, 's w': 1, ' wr': 1, 'wri': 1, 'rit': 1, 'itt': 1, 'tte': 4, 'ten': 1, 'en ': 3, 'n i': 2, ' in': 6, 'in ': 5, 'n a': 3, ' a ': 3, 'a z': 1, ' zi': 1, 'zig': 1, 'igz': 1, 'gza': 1, 'zag': 1, 'ag ': 1, 'g p': 1, ' pa': 2, 'pat': 2, 'att': 2, 'ter': 3, 'ern': 2, 'rn ': 4, 'n o': 1, ' on': 1, 'on ': 1, 'a g': 1, ' gi': 1, 'giv': 1, 'ive': 1, 'ven': 1, 'n n': 1, ' nu': 5, 'num': 6, 'umb': 1, 'mbe': 1, 'ber': 1, 'er ': 2, 'r o': 1, ' of': 1, 'of ': 1, 'f r': 3, ' ro': 6, 'row': 7, 'ows': 6, 'ws ': 3, 's l': 1, ' li': 3, 'lik': 1, 'ike': 1, 'ke ': 1, 'e t': 1, ' th': 3, 'thi': 2, 'his': 2, 'is:': 1, 's: ': 3, ': (': 1, ' (y': 1, '(yo': 1, 'you': 1, 'ou ': 1, 'u m': 1, ' ma': 1, 'may': 1, 'ay ': 2, 'y w': 1, ' wa': 1, 'wan': 1, 'ant': 1, 'nt ': 2, 't t': 1, ' to': 1, 'to ': 1, 'o d': 1, ' di': 1, 'dis': 1, 'isp': 1, 'spl': 1, 'pla': 1, 'lay': 1, 'y t': 1, 's p': 1, 'a f': 1, ' fi': 4, 'fix': 1, 'ixe': 1, 'xed': 1, 'ed ': 1, 'd f': 1, ' fo': 5, 'fon': 1, 'ont': 1, 't f': 1, 'for': 4, 'or ': 4, 'r b': 1, ' be': 1, 'bet': 1, 'ett': 1, 'r l': 1, ' le': 1, 'leg': 1, 'egi': 1, 'gib': 1, 'ibi': 1, 'bil': 1, 'ili': 1, 'lit': 1, 'ity': 1, 'ty)': 1, 'y)\n': 1, ')\n\n': 1, '\n\n\t': 2, '\n\tP': 1, '\tP ': 1, 'P  ': 1, '   ': 205, '  A': 1, ' A ': 1, 'A  ': 1, '  H': 1, ' H ': 1, 'H  ': 1, '  N': 1, ' N\n': 1, 'N\n\t': 1, '\n\tA': 2, '\tA ': 1, 'A P': 1, ' P ': 1, 'P L': 1, ' L ': 1, 'L S': 1, ' S ': 1, 'S I': 1, ' I ': 3, 'I I': 1, 'I G': 1, ' G\n': 1, 'G\n\t': 1, '\n\tY': 1, '\tY ': 1, 'Y  ': 1, '  I': 1, 'I  ': 1, '  R': 1, ' R\n': 1, 'R\n\n': 1, '\tAn': 1, 'And': 1, 'nd ': 1, 'd t': 1, 'the': 1, 'hen': 1, 'n r': 3, ' re': 6, 'rea': 1, 'ead': 1, 'ad ': 1, 'd l': 1, 'lin': 2, 'ine': 2, 'ne ': 1, 'e b': 1, ' by': 1, 'by ': 1, 'y l': 1, 'ne:': 1, 'e: ': 2, ': ""': 1, 'PAH': 1, 'AHN': 1, 'HNA': 1, 'NAP': 1, 'APL': 1, 'PLS': 1, 'LSI': 1, 'SII': 1, 'IIG': 1, 'IGY': 1, 'GYI': 1, 'YIR': 1, 'IR""': 1, 'R""\n': 1, '""\n\'': 1, ""\n''"": 1, ""'\n\n"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 2, 'olu': 2, 'lut': 2, 'uti': 2, 'tio': 2, 'ion': 2, 'on(': 2, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 2, ':\n ': 9, '\n  ': 24, '  d': 3, ' de': 1, 'def': 1, 'ef ': 1, 'f c': 1, ' co': 1, 'con': 2, 'onv': 2, 'nve': 2, 'ver': 2, 'ert': 2, 'rt(': 2, 't(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', s': 1, ' s,': 1, 's, ': 1, ', n': 1, 'umR': 5, 'mRo': 5, 'Row': 5, 'ws)': 2, 's):': 1, '  ""': 2, ' """"': 3, '""""""': 2, '""""\n': 3, '""\n ': 3, '  :': 3, ' :t': 2, ':ty': 2, 'typ': 3, 'ype': 3, 'pe ': 2, ' s:': 2, ': s': 2, 'tr\n': 2, 'r\n ': 2, 'e n': 1, 'ws:': 1, ': i': 1, 'int': 2, 'nt\n': 1, 't\n ': 1, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, '  i': 4, ' if': 4, 'if ': 4, 'f n': 1, 's =': 1, ' ==': 3, '== ': 3, '= 1': 4, ' 1:': 2, '1:\n': 2, '  r': 7, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'n s': 2, ' s\n': 1, 's\n\n': 1, '\n\n ': 4, 'res': 3, 'esu': 3, 'sul': 3, 'ult': 3, 'lt ': 1, 't =': 1, ' = ': 5, '= [': 1, ' [""': 1, '[""""': 1, '"""" ': 1, '"" f': 1, 'r _': 1, ' _ ': 1, '_ i': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(n': 1, '(nu': 1, 's)]': 1, ')]\n': 1, ']\n ': 1, 'ow,': 1, 'w, ': 1, ', d': 1, ' do': 4, 'dow': 4, 'own': 4, 'wn ': 3, 'n =': 3, '= 0': 3, ' 0,': 1, '0, ': 1, ', 1': 1, ' 1\n': 4, '1\n ': 2, '  f': 4, 'r c': 1, ' ch': 2, 'cha': 2, 'har': 2, 'ar ': 1, 'r i': 1, 's:\n': 1, 'lt[': 1, 't[r': 1, '[ro': 1, 'ow]': 1, 'w] ': 1, '] +': 1, ' +=': 3, '+= ': 3, '= c': 1, 'ar\n': 1, 'r\n\n': 1, 'ow ': 4, 'w =': 2, '= n': 1, 's -': 1, ' - ': 1, '- 1': 1, ' 0\n': 1, '0\n ': 1, ' 0:': 1, '0:\n': 1, '1\n\n': 2, 'f d': 1, 'wn:': 1, 'n:\n': 1, 'w +': 1, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, 'w -': 1, ' -=': 1, '-= ': 1, 'fin': 3, 'ina': 3, 'nal': 3, 'al_': 3, 'l_s': 3, '_st': 3, 'g =': 1, '= ""': 1, 'r v': 1, ' va': 2, 'val': 2, 'alu': 2, 'lue': 2, 'ue ': 1, 'e i': 1, 'lt:': 1, 't:\n': 1, 'g +': 1, '= v': 1, 'ue\n': 1, 'e\n ': 1, 'n f': 1, 'ng\n': 1, 'g\n\n': 1, '\n\np': 1, '\npr': 1, 'pri': 1, 'nt(': 1, 't(S': 1, '(So': 1, 'n()': 1, '().': 1, ').c': 1, '.co': 1, 't(""': 1, '(""P': 1, 'G"",': 1, '"", ': 1, ', 3': 1, ' 3)': 1, '3))': 1, '))\n': 1}"
Garvit Bansal,10.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 2, 'given': 1, 'an': 1, 'input': 2, 'string': 2, '(s)': 1, 'and': 5, 'a': 1, 'pattern': 1, '(p),': 1, 'implement': 1, 'regular': 1, 'expression': 1, 'matching': 2, 'with': 1, 'support': 1, 'for': 6, ""'.'"": 2, ""'*'."": 1, 'matches': 2, 'any': 1, 'single': 1, 'character.': 1, ""'*'"": 1, 'zero': 1, 'or': 5, 'more': 1, 'of': 1, 'the': 3, 'preceding': 1, 'element.': 1, 'should': 1, 'cover': 1, 'entire': 1, '(not': 1, 'partial).': 1, 'note:': 1, 's': 1, 'could': 2, 'be': 2, 'empty': 2, 'contains': 2, 'only': 2, 'lowercase': 2, 'letters': 2, 'a-z.': 1, 'p': 1, 'a-z,': 1, 'characters': 1, 'like': 1, '.': 1, '*.': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'ismatch(self,': 1, 's,': 1, 'p):': 1, '""""""': 2, ':type': 2, 's:': 1, 'str': 2, 'p:': 1, ':rtype:': 1, 'bool': 1, 'dp': 1, '=': 7, '[[false': 1, '_': 2, 'in': 5, 'range(len(p)': 1, '+': 2, '1)]': 2, 'range(len(s)': 1, 'dp[0][0]': 1, 'true': 1, 'index': 1, 'range(1,': 3, 'len(dp[0])):': 2, 'if': 3, 'p[index-1]': 1, '==': 6, ""'*':"": 2, 'dp[0][index]': 1, 'dp[0][index': 1, '-': 4, '2]': 1, 'index_i': 1, 'len(dp)):': 1, 'index_j': 1, 's[index_i': 1, '1]': 3, 'p[index_j': 2, ""'.':"": 2, 'dp[index_i][index_j]': 5, 'dp[index_i-1][index_j-1]': 1, 'elif': 1, 'p[index_j-1]': 1, 'dp[index_i][index_j-2]': 1, 's[index_i-1]': 1, 'p[index_j-2]': 2, 'dp[index_i-1][index_j]': 1, 'else:': 1, 'false': 1, 'return': 1, 'dp[len(s)][len(p)]': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\t"": 1, '\n\tG': 1, '\tGi': 1, 'Giv': 1, 'ive': 1, 'ven': 1, 'en ': 1, 'n a': 1, ' an': 7, 'an ': 1, 'n i': 1, ' in': 10, 'inp': 2, 'npu': 2, 'put': 2, 'ut ': 2, 't s': 2, ' st': 4, 'str': 4, 'tri': 2, 'rin': 2, 'ing': 6, 'ng ': 5, 'g (': 2, ' (s': 1, '(s)': 3, 's) ': 2, ') a': 1, 'and': 5, 'nd ': 5, 'd a': 1, ' a ': 1, 'a p': 1, ' pa': 2, 'pat': 1, 'att': 1, 'tte': 3, 'ter': 5, 'ern': 1, 'rn ': 2, 'n (': 1, ' (p': 1, '(p)': 3, 'p),': 1, '), ': 1, ', i': 1, ' im': 1, 'imp': 1, 'mpl': 1, 'ple': 1, 'lem': 2, 'eme': 2, 'men': 2, 'ent': 3, 'nt ': 1, 't r': 1, ' re': 2, 'reg': 1, 'egu': 1, 'gul': 1, 'ula': 1, 'lar': 1, 'ar ': 1, 'r e': 1, ' ex': 1, 'exp': 1, 'xpr': 1, 'pre': 2, 'res': 1, 'ess': 1, 'ssi': 1, 'sio': 1, 'ion': 2, 'on ': 1, 'n m': 1, ' ma': 2, 'mat': 2, 'atc': 5, 'tch': 5, 'chi': 2, 'hin': 2, 'g w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'th ': 1, 'h s': 1, ' su': 1, 'sup': 1, 'upp': 1, 'ppo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't f': 1, ' fo': 6, 'for': 6, 'or ': 11, ""r '"": 1, "" '."": 3, ""'.'"": 4, "".' "": 2, ""' a"": 1, ""d '"": 1, "" '*"": 3, ""'*'"": 4, ""*'."": 1, ""'.\n"": 1, '.\n\n': 2, '\n\n\t': 3, ""\n\t'"": 2, ""\t'."": 1, ""' M"": 2, ' Ma': 2, 'Mat': 3, 'che': 2, 'hes': 2, 'es ': 2, 's a': 3, 'any': 1, 'ny ': 1, 'y s': 1, ' si': 1, 'sin': 1, 'ngl': 1, 'gle': 1, 'le ': 1, 'e c': 1, ' ch': 2, 'cha': 2, 'har': 2, 'ara': 2, 'rac': 2, 'act': 2, 'cte': 2, 'er.': 1, 'r.\n': 1, '.\n\t': 3, ""\t'*"": 1, ""*' "": 1, 's z': 1, ' ze': 1, 'zer': 1, 'ero': 1, 'ro ': 1, 'o o': 1, ' or': 5, 'r m': 1, ' mo': 1, 'mor': 1, 'ore': 1, 're ': 2, 'e o': 1, ' of': 1, 'of ': 1, 'f t': 1, ' th': 2, 'the': 2, 'he ': 3, 'e p': 2, ' pr': 1, 'rec': 1, 'ece': 1, 'ced': 1, 'edi': 1, 'din': 1, 'g e': 1, ' el': 3, 'ele': 1, 'nt.': 1, 't.\n': 1, '\n\tT': 1, '\tTh': 1, 'The': 1, 'e m': 1, 'g s': 1, ' sh': 1, 'sho': 1, 'hou': 1, 'oul': 3, 'uld': 3, 'ld ': 3, 'd c': 4, ' co': 5, 'cov': 1, 'ove': 1, 'ver': 1, 'er ': 1, 'r t': 1, 'e e': 3, ' en': 1, 'nti': 1, 'tir': 1, 'ire': 1, 'e i': 1, ' (n': 1, '(no': 1, 'not': 1, 'ot ': 1, 't p': 1, 'par': 1, 'art': 1, 'rti': 1, 'tia': 1, 'ial': 1, 'al)': 1, 'l).': 1, ').\n': 1, '\n\tN': 1, '\tNo': 1, 'Not': 1, 'ote': 1, 'te:': 1, 'e:\n': 2, ':\n\n': 1, '\n\ts': 1, '\ts ': 1, 's c': 1, 'cou': 2, 'd b': 2, ' be': 2, 'be ': 2, ' em': 2, 'emp': 2, 'mpt': 2, 'pty': 2, 'ty ': 2, 'y a': 2, 'con': 2, 'ont': 2, 'nta': 2, 'tai': 2, 'ain': 2, 'ins': 2, 'ns ': 2, 's o': 2, ' on': 2, 'onl': 2, 'nly': 2, 'ly ': 2, 'y l': 2, ' lo': 2, 'low': 2, 'owe': 2, 'wer': 2, 'erc': 2, 'rca': 2, 'cas': 2, 'ase': 2, 'se ': 3, 'e l': 2, ' le': 5, 'let': 2, 'ett': 2, 'ers': 3, 'rs ': 3, ' a-': 2, 'a-z': 2, '-z.': 1, 'z.\n': 1, '\n\tp': 1, '\tp ': 1, 'p c': 1, '-z,': 1, 'z, ': 1, ', a': 1, 's l': 1, ' li': 1, 'lik': 1, 'ike': 1, 'ke ': 1, 'e .': 1, ' . ': 1, '. o': 1, 'r *': 1, ' *.': 1, '*.\n': 1, "".\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 5, ':\n ': 10, '\n  ': 23, '   ': 246, '  d': 8, ' de': 1, 'def': 1, 'ef ': 1, 'f i': 1, ' is': 1, 'isM': 1, 'sMa': 1, 'ch(': 1, 'h(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', s': 1, ' s,': 1, 's, ': 1, ', p': 1, ' p)': 1, 'p):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 3, ' :t': 2, ':ty': 2, 'typ': 3, 'ype': 3, 'pe ': 2, 'e s': 1, ' s:': 1, 's: ': 1, ': s': 2, 'tr\n': 2, 'r\n ': 2, ' p:': 1, 'p: ': 1, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, 'e: ': 1, ': b': 1, ' bo': 1, 'boo': 1, 'ool': 1, 'ol\n': 1, 'l\n ': 1, ' dp': 13, 'dp ': 1, 'p =': 1, ' = ': 7, '= [': 1, ' [[': 1, '[[F': 1, '[Fa': 1, 'Fal': 2, 'als': 2, 'lse': 3, 'e f': 1, 'r _': 2, ' _ ': 2, '_ i': 2, 'in ': 5, 'n r': 5, ' ra': 5, 'ran': 5, 'ang': 5, 'nge': 5, 'ge(': 5, 'e(l': 2, '(le': 2, 'len': 7, 'en(': 7, 'n(p': 2, 'p) ': 1, ') +': 2, ' + ': 2, '+ 1': 2, ' 1)': 2, '1)]': 2, ')] ': 1, '] f': 1, 'n(s': 2, ')]\n': 2, ']\n ': 3, 'dp[': 14, 'p[0': 5, '[0]': 6, '0][': 3, '][0': 1, '0] ': 1, '] =': 12, '= T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1, 'e\n\n': 1, '\n\n ': 3, '  f': 3, 'r i': 3, 'ind': 29, 'nde': 29, 'dex': 29, 'ex ': 2, 'x i': 1, 'e(1': 3, '(1,': 3, '1, ': 3, ', l': 3, 'n(d': 3, '(dp': 3, '0])': 2, ']))': 2, ')):': 3, '  i': 3, ' if': 3, 'if ': 4, 'f p': 2, ' p[': 6, 'p[i': 14, '[in': 26, 'ex-': 1, 'x-1': 1, '-1]': 6, '1] ': 6, ' ==': 6, '== ': 6, ""= '"": 4, ""*':"": 2, ""':\n"": 4, '][i': 10, 'ex]': 1, 'x] ': 1, '= d': 4, 'x -': 1, ' - ': 4, '- 2': 1, ' 2]': 1, '2]\n': 2, '  \n': 1, ' \n ': 1, 'ex_': 25, 'x_i': 11, '_i ': 2, 'i i': 1, 'dp)': 1, 'p))': 1, 'x_j': 14, '_j ': 3, 'j i': 1, 'f s': 2, ' s[': 2, 's[i': 2, 'i -': 1, '- 1': 3, ' 1]': 3, '= p': 2, 'j -': 2, '] o': 3, 'r p': 2, "".':"": 2, '_i]': 6, 'i][': 6, '_j]': 6, 'j] ': 5, '_i-': 3, 'i-1': 3, '1][': 2, '_j-': 5, 'j-1': 2, '1]\n': 1, '  e': 2, 'eli': 1, 'lif': 1, 'j-2': 3, '-2]': 3, ']\n\n': 2, '2] ': 2, 'r d': 1, 'j]\n': 1, 'els': 1, 'se:': 1, '= F': 1, ' Fa': 1, 'se\n': 1, 'e\n ': 1, '  r': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'n d': 1, 'p[l': 1, '[le': 2, 's)]': 1, ')][': 1, '][l': 1, 'p)]': 1}"
Garvit Bansal,11.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 2, 'given': 1, 'n': 3, 'non-negative': 1, 'integers': 1, 'a1,': 1, 'a2,': 1, '...,': 1, 'an,': 1, 'where': 1, 'each': 1, 'represents': 1, 'a': 2, 'point': 1, 'at': 3, 'coordinate': 1, '(i,': 3, 'ai).': 1, 'vertical': 1, 'lines': 1, 'are': 1, 'drawn': 1, 'such': 2, 'that': 2, 'the': 4, 'two': 2, 'endpoints': 1, 'of': 1, 'line': 1, 'i': 1, 'is': 2, 'ai)': 1, 'and': 2, '0).': 1, 'find': 1, 'lines,': 1, 'which': 1, 'together': 1, 'with': 1, 'x-axis': 1, 'forms': 1, 'container,': 1, 'container': 2, 'contains': 1, 'most': 1, 'water.': 1, 'note:': 1, 'you': 1, 'may': 1, 'not': 1, 'slant': 1, 'least': 1, '2.': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'maxarea(self,': 1, 'height):': 1, '""""""': 2, ':type': 1, 'height:': 1, 'list[int]': 1, ':rtype:': 1, 'int': 1, 'left,': 1, 'right,': 1, 'maxarea': 3, '=': 2, '0,': 1, 'len(height)': 1, '-': 1, '1,': 1, '0': 1, 'while': 1, 'left': 2, '<': 2, 'right:': 1, 'max(maxarea,': 1, 'min(height[left],': 1, 'height[right])*(right-left))': 1, 'if': 1, 'height[left]': 1, 'height[right]:': 1, '+=': 1, '1': 2, 'else:': 1, 'right': 1, '-=': 1, 'return': 1, '#': 2, 'space': 1, ':': 1, 'o(1)': 1, 'time:': 1, 'o(n)': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\t"": 1, '\n\tG': 1, '\tGi': 1, 'Giv': 1, 'ive': 2, 'ven': 1, 'en ': 1, 'n n': 2, ' n ': 3, ' no': 2, 'non': 1, 'on-': 1, 'n-n': 1, '-ne': 1, 'neg': 1, 'ega': 1, 'gat': 1, 'ati': 1, 'tiv': 1, 've ': 1, 'e i': 2, ' in': 2, 'int': 5, 'nte': 1, 'teg': 1, 'ege': 1, 'ger': 1, 'ers': 1, 'rs ': 1, 's a': 6, ' a1': 1, 'a1,': 1, '1, ': 2, ', a': 4, ' a2': 1, 'a2,': 1, '2, ': 1, ', .': 1, ' ..': 1, '...': 1, '..,': 1, '., ': 1, ' an': 3, 'an,': 1, 'n, ': 1, ', w': 2, ' wh': 3, 'whe': 1, 'her': 2, 'ere': 1, 're ': 2, 'e e': 1, ' ea': 1, 'eac': 1, 'ach': 1, 'ch ': 4, 'h r': 1, ' re': 2, 'rep': 1, 'epr': 1, 'pre': 1, 'res': 1, 'ese': 1, 'sen': 1, 'ent': 1, 'nts': 2, 'ts ': 2, ' a ': 2, 'a p': 1, ' po': 1, 'poi': 2, 'oin': 2, 'nt ': 2, 't a': 1, ' at': 3, 'at ': 5, 't c': 1, ' co': 5, 'coo': 1, 'oor': 1, 'ord': 1, 'rdi': 1, 'din': 1, 'ina': 1, 'nat': 1, 'ate': 2, 'te ': 1, 'e (': 1, ' (i': 3, '(i,': 3, 'i, ': 3, ' ai': 2, 'ai)': 2, 'i).': 1, '). ': 2, '. n': 1, 'n v': 1, ' ve': 1, 'ver': 1, 'ert': 1, 'rti': 1, 'tic': 1, 'ica': 1, 'cal': 1, 'al ': 1, 'l l': 1, ' li': 3, 'lin': 3, 'ine': 6, 'nes': 2, 'es ': 1, ' ar': 1, 'are': 1, 'e d': 1, ' dr': 1, 'dra': 1, 'raw': 1, 'awn': 1, 'wn ': 1, 'n s': 1, ' su': 2, 'suc': 2, 'uch': 2, 'h t': 3, ' th': 6, 'tha': 2, 'hat': 2, 't t': 3, 'the': 5, 'he ': 4, 'e t': 1, ' tw': 2, 'two': 2, 'wo ': 2, 'o e': 1, ' en': 1, 'end': 1, 'ndp': 1, 'dpo': 1, 's o': 1, ' of': 1, 'of ': 1, 'f l': 1, 'ne ': 1, ' i ': 1, 'i i': 1, ' is': 2, 'is ': 3, 't (': 1, 'i) ': 1, ') a': 1, 'and': 2, 'nd ': 3, 'd (': 1, ', 0': 2, ' 0)': 1, '0).': 1, '. F': 1, ' Fi': 1, 'Fin': 1, 'ind': 1, 'd t': 1, 'o l': 1, 'es,': 1, 's, ': 1, 'whi': 2, 'hic': 1, 'ich': 1, ' to': 1, 'tog': 1, 'oge': 1, 'get': 1, 'eth': 1, 'er ': 3, 'r w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'th ': 1, 'h x': 1, ' x-': 1, 'x-a': 1, '-ax': 1, 'axi': 1, 'xis': 1, 's f': 1, ' fo': 1, 'for': 1, 'orm': 1, 'rms': 1, 'ms ': 1, 'a c': 1, 'con': 4, 'ont': 4, 'nta': 4, 'tai': 4, 'ain': 4, 'ner': 3, 'er,': 1, 'r, ': 1, ', s': 1, 'e c': 2, 'r c': 1, 'ins': 1, 'ns ': 1, 's t': 1, 'e m': 1, ' mo': 1, 'mos': 1, 'ost': 1, 'st ': 2, 't w': 1, ' wa': 1, 'wat': 1, 'ter': 1, 'er.': 1, 'r.\n': 1, '.\n\n': 2, '\n\n\t': 1, '\n\tN': 1, '\tNo': 1, 'Not': 1, 'ote': 1, 'te:': 1, 'e: ': 3, ': Y': 1, ' Yo': 1, 'You': 1, 'ou ': 1, 'u m': 1, ' ma': 5, 'may': 1, 'ay ': 1, 'y n': 1, 'not': 1, 'ot ': 1, 't s': 1, ' sl': 1, 'sla': 1, 'lan': 1, 'ant': 1, 'r a': 1, 'd n': 1, 'n i': 1, 't l': 1, ' le': 4, 'lea': 1, 'eas': 1, 'ast': 1, 't 2': 1, ' 2.': 1, '2.\n': 1, ""\n\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 2, '):\n': 2, ':\n ': 5, '\n  ': 13, '   ': 74, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'f m': 1, 'max': 6, 'axA': 5, 'xAr': 5, 'Are': 5, 'rea': 5, 'ea(': 1, 'a(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', h': 2, ' he': 5, 'hei': 7, 'eig': 7, 'igh': 13, 'ght': 13, 'ht)': 2, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e h': 1, 'ht:': 2, 't: ': 1, ': L': 1, ' Li': 1, 'Lis': 1, 'ist': 1, 'st[': 1, 't[i': 1, '[in': 1, 'nt]': 1, 't]\n': 1, ']\n ': 1, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, ': i': 1, 'nt\n': 1, 't\n ': 1, '  l': 1, 'lef': 6, 'eft': 6, 'ft,': 1, 't, ': 2, ', r': 1, ' ri': 2, 'rig': 6, 'ht,': 1, ', m': 2, 'ea ': 3, 'a =': 2, ' = ': 2, '= 0': 1, ' 0,': 1, '0, ': 1, ', l': 1, 'len': 1, 'en(': 1, 'n(h': 2, '(he': 2, 't) ': 1, ') -': 1, ' - ': 1, '- 1': 1, ' 1,': 1, ' 0 ': 1, '0 \n': 1, ' \n\n': 2, '\n\n ': 2, '  w': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 1, 'ft ': 2, 't <': 1, ' < ': 2, '< r': 1, 't:\n': 1, '  \t': 5, ' \tm': 1, '\tma': 1, '= m': 1, 'ax(': 1, 'x(m': 1, '(ma': 1, 'ea,': 1, 'a, ': 1, ' mi': 1, 'min': 1, 'in(': 1, 'ht[': 4, 't[l': 2, '[le': 2, 'ft]': 2, 't],': 1, '], ': 1, 't[r': 2, '[ri': 2, 'ht]': 2, 't])': 1, '])*': 1, ')*(': 1, '*(r': 1, '(ri': 1, 'ht-': 1, 't-l': 1, '-le': 1, 'ft)': 1, 't))': 1, '))\n': 1, ')\n ': 1, ' \ti': 1, '\tif': 1, 'if ': 1, 'f h': 1, 't] ': 1, '] <': 1, '< h': 1, 't]:': 1, ']:\n': 1, ' \t\t': 2, '\t\tl': 1, '\tle': 1, 't +': 1, ' +=': 1, '+= ': 1, '= 1': 2, ' 1\n': 2, '1\n ': 1, ' \te': 1, '\tel': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, '\t\tr': 1, '\tri': 1, 'ht ': 1, 't -': 1, ' -=': 1, '-= ': 1, '1\n\n': 1, '  r': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n m': 1, 'a \n': 1, '\n\n#': 1, '\n# ': 2, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce ': 1, 'e :': 1, ' : ': 1, ': O': 2, ' O(': 2, 'O(1': 1, '(1)': 1, '1)\n': 1, ')\n#': 1, '# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'O(N': 1, '(N)': 1, 'N)\n': 1}"
Garvit Bansal,14.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{""'''"": 2, 'write': 1, 'a': 1, 'function': 1, 'to': 1, 'find': 1, 'the': 2, 'longest': 1, 'common': 3, 'prefix': 2, 'string': 3, 'amongst': 1, 'an': 2, 'array': 1, 'of': 1, 'strings.': 2, 'if': 4, 'there': 2, 'is': 2, 'no': 2, 'prefix,': 1, 'return': 5, 'empty': 1, '"""".': 1, 'example': 2, '1:': 1, 'input:': 2, '[""flower"",""flow"",""flight""]': 1, 'output:': 2, '""fl""': 1, '2:': 1, '[""dog"",""racecar"",""car""]': 1, '""""': 2, 'explanation:': 1, 'among': 1, 'input': 1, 'note:': 1, 'all': 1, 'given': 1, 'inputs': 1, 'are': 1, 'in': 3, 'lowercase': 1, 'letters': 1, 'a-z.': 1, 'class': 1, 'solution(object):': 1, 'def': 2, 'longestcommonprefix(self,': 1, 'strs):': 1, '""""""': 2, ':type': 1, 'strs:': 3, 'list[str]': 1, ':rtype:': 1, 'str': 1, 'prefix(strs,': 1, 'index):': 1, 'check_prefix': 1, '=': 7, 'strs[0][:index]': 1, 'for': 2, 'index': 1, 'range(1,': 1, 'len(strs)):': 1, 'not': 2, 'strs[index].startswith(check_prefix):': 1, 'false': 1, 'true': 1, 'minlength': 3, ""float('inf')"": 1, 'min(minlength,': 1, 'len(string))': 1, 'low,': 1, 'high': 2, '0,': 1, 'while': 1, 'low': 2, '<=': 1, 'high:': 1, 'mid': 3, '(low+high)/2': 1, '(prefix(strs,': 1, 'mid)):': 1, '+': 1, '1': 2, 'else:': 1, '-': 1, 'strs[0][:(low+high)/2]': 1}","{""'''"": 2, ""''\n"": 2, ""'\nW"": 1, '\nWr': 1, 'Wri': 1, 'rit': 1, 'ite': 1, 'te ': 1, 'e a': 1, ' a ': 1, 'a f': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 3, 'ion': 3, 'on ': 4, 'n t': 1, ' to': 1, 'to ': 1, 'o f': 1, ' fi': 1, 'fin': 1, 'ind': 5, 'nd ': 1, 'd t': 1, ' th': 3, 'the': 3, 'he ': 2, 'e l': 3, ' lo': 6, 'lon': 2, 'ong': 4, 'nge': 3, 'ges': 2, 'est': 2, 'st ': 2, 't c': 1, ' co': 3, 'com': 3, 'omm': 4, 'mmo': 4, 'mon': 6, 'n p': 3, ' pr': 4, 'pre': 7, 'ref': 8, 'efi': 8, 'fix': 8, 'ix ': 3, 'x s': 1, ' st': 13, 'str': 18, 'tri': 6, 'rin': 6, 'ing': 6, 'ng ': 4, 'g a': 1, ' am': 2, 'amo': 2, 'ngs': 3, 'gst': 1, 't a': 1, ' an': 2, 'an ': 2, 'n a': 2, ' ar': 2, 'arr': 1, 'rra': 1, 'ray': 1, 'ay ': 1, 'y o': 1, ' of': 1, 'of ': 1, 'f s': 1, 'gs.': 2, 's.\n': 2, '.\n\n': 2, '\n\nI': 3, '\nIf': 1, 'If ': 1, 'f t': 1, 'her': 2, 'ere': 2, 're ': 3, 'e i': 4, ' is': 2, 'is ': 2, 's n': 2, ' no': 4, 'no ': 2, 'o c': 2, 'ix,': 1, 'x, ': 1, ', r': 1, ' re': 5, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 5, 'n e': 1, ' em': 1, 'emp': 1, 'mpt': 1, 'pty': 1, 'ty ': 1, 'y s': 1, 'g ""': 1, ' """"': 5, '"""".': 1, '"".\n': 1, '\n\nE': 1, '\nEx': 3, 'Exa': 2, 'xam': 2, 'amp': 2, 'mpl': 2, 'ple': 2, 'le ': 3, 'e 1': 1, ' 1:': 1, '1:\n': 1, ':\n\n': 3, '\nIn': 2, 'Inp': 2, 'npu': 4, 'put': 6, 'ut:': 4, 't: ': 4, ': [': 2, ' [""': 2, '[""f': 1, '""fl': 4, 'flo': 3, 'low': 8, 'owe': 2, 'wer': 2, 'er""': 1, 'r"",': 2, '"",""': 4, ',""f': 2, 'ow""': 1, 'w"",': 1, 'fli': 1, 'lig': 1, 'igh': 6, 'ght': 1, 'ht""': 1, 't""]': 1, '""]\n': 2, ']\nO': 2, '\nOu': 2, 'Out': 2, 'utp': 2, 'tpu': 2, ': ""': 2, ' ""f': 1, 'fl""': 1, 'l""\n': 1, '""\nE': 2, 'e 2': 1, ' 2:': 1, '2:\n': 1, '[""d': 1, '""do': 1, 'dog': 1, 'og""': 1, 'g"",': 1, ',""r': 1, '""ra': 1, 'rac': 1, 'ace': 1, 'cec': 1, 'eca': 1, 'car': 2, 'ar""': 2, ',""c': 1, '""ca': 1, 'r""]': 1, '""""\n': 4, 'Exp': 1, 'xpl': 1, 'pla': 1, 'lan': 1, 'ana': 1, 'nat': 1, 'ati': 1, 'on:': 1, 'n: ': 1, ': T': 1, ' Th': 1, 'The': 1, 'x a': 1, 'g t': 1, ' in': 7, 'inp': 2, 'ut ': 1, 't s': 3, '.\nN': 1, '\nNo': 1, 'Not': 1, 'ote': 1, 'te:': 1, 'e:\n': 2, '\n\nA': 1, '\nAl': 1, 'All': 1, 'll ': 1, 'l g': 1, ' gi': 1, 'giv': 1, 'ive': 1, 'ven': 1, 'en ': 1, 'n i': 1, 'uts': 1, 'ts ': 1, 's a': 2, 'are': 1, 'in ': 3, 'n l': 1, 'erc': 1, 'rca': 1, 'cas': 1, 'ase': 1, 'se ': 1, ' le': 3, 'let': 1, 'ett': 1, 'tte': 1, 'ter': 1, 'ers': 1, 'rs ': 1, ' a-': 1, 'a-z': 1, '-z.': 1, 'z.\n': 1, "".\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 6, ':\n ': 10, '\n  ': 30, '   ': 268, '  d': 2, ' de': 2, 'def': 2, 'ef ': 2, 'f l': 1, 'stC': 1, 'tCo': 1, 'Com': 1, 'onP': 1, 'nPr': 1, 'Pre': 1, 'ix(': 3, 'x(s': 3, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', s': 1, 'trs': 10, 'rs)': 2, 's):': 1, '  ""': 2, '""""""': 2, '""\n ': 3, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e s': 1, 'rs:': 3, 's: ': 1, ': L': 1, ' Li': 1, 'Lis': 1, 'ist': 1, 'st[': 1, 't[s': 1, '[st': 1, 'tr]': 1, 'r]\n': 1, ']\n ': 2, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, 'e: ': 1, ': s': 1, 'tr\n': 1, 'r\n ': 1, 'f p': 1, '(st': 4, 'rs,': 2, 's, ': 2, ', i': 1, 'nde': 4, 'dex': 4, 'ex)': 1, 'x):': 2, '  c': 1, ' ch': 1, 'che': 2, 'hec': 2, 'eck': 2, 'ck_': 2, 'k_p': 2, '_pr': 2, 'x =': 1, ' = ': 7, '= s': 1, 'rs[': 3, 's[0': 2, '[0]': 2, '0][': 2, '][:': 2, '[:i': 1, ':in': 1, 'ex]': 2, 'x]\n': 1, '  f': 2, ' fo': 2, 'for': 2, 'or ': 2, 'r i': 1, 'ex ': 1, 'x i': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'ge(': 1, 'e(1': 1, '(1,': 1, '1, ': 1, ', l': 2, 'len': 2, 'en(': 2, 'n(s': 2, 's))': 1, ')):': 2, '  i': 3, ' if': 3, 'if ': 3, 'f n': 2, 'not': 2, 'ot ': 2, 's[i': 1, '[in': 1, 'x].': 1, '].s': 1, '.st': 1, 'sta': 1, 'tar': 1, 'art': 1, 'rts': 1, 'tsw': 1, 'swi': 1, 'wit': 1, 'ith': 1, 'th(': 1, 'h(c': 1, '(ch': 1, 'ix)': 1, '  r': 4, 'n F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'lse': 2, 'se\n': 1, 'e\n ': 2, 'n T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1, '  \n': 6, ' \n ': 6, 's:\n': 2, 'n ""': 1, '  m': 3, ' mi': 8, 'min': 5, 'inL': 4, 'nLe': 4, 'Len': 4, 'eng': 4, 'ngt': 4, 'gth': 4, 'th ': 2, 'h =': 4, '= f': 1, ' fl': 1, 'loa': 1, 'oat': 1, 'at(': 1, ""t('"": 1, ""('i"": 1, ""'in"": 1, 'inf': 1, ""nf'"": 1, ""f')"": 1, ""')\n"": 1, ')\n ': 2, 'r s': 1, 'g i': 1, 'n s': 2, '= m': 3, 'in(': 1, 'n(m': 1, '(mi': 1, 'th,': 1, 'h, ': 1, 'ng)': 1, 'g))': 1, '))\n': 1, '  l': 2, 'ow,': 1, 'w, ': 1, ', h': 1, ' hi': 3, 'hig': 5, 'gh ': 2, '= 0': 1, ' 0,': 1, '0, ': 1, ', m': 2, 'th\n': 1, 'h\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'ow ': 2, 'w <': 1, ' <=': 1, '<= ': 1, '= h': 1, 'gh:': 1, 'h:\n': 1, 'mid': 4, 'id ': 3, 'd =': 1, '= (': 1, ' (l': 1, '(lo': 2, 'ow+': 2, 'w+h': 2, '+hi': 2, 'gh)': 2, 'h)/': 2, ')/2': 2, '/2\n': 1, '2\n ': 1, 'f (': 1, ' (p': 1, '(pr': 1, 'id)': 1, 'd))': 1, 'w =': 1, 'd +': 1, ' + ': 1, '+ 1': 1, ' 1\n': 2, '1\n ': 2, '  e': 1, ' el': 1, 'els': 1, 'se:': 1, '  h': 1, 'd -': 1, ' - ': 1, '- 1': 1, '[:(': 1, ':(l': 1, '/2]': 1, '2]\n': 1}"
Garvit Bansal,15.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 2, 'given': 2, 'an': 1, 'array': 3, 'nums': 3, 'of': 2, 'n': 1, 'integers,': 1, 'are': 1, 'there': 1, 'elements': 1, 'a,': 1, 'b,': 1, 'c': 2, 'in': 5, 'such': 1, 'that': 1, 'a': 2, '+': 4, 'b': 1, '=': 6, '0?': 1, 'find': 1, 'all': 1, 'unique': 1, 'triplets': 1, 'the': 3, 'which': 1, 'gives': 1, 'sum': 1, 'zero.': 1, 'note:': 1, 'solution': 2, 'set': 2, 'must': 1, 'not': 1, 'contain': 1, 'duplicate': 1, 'triplets.': 1, 'example:': 1, '[-1,': 3, '0,': 3, '1,': 1, '2,': 1, '-1,': 2, '-4],': 1, 'is:': 1, '[': 1, '1],': 1, '2]': 1, ']': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'threesum(self,': 1, 'nums):': 1, '""""""': 2, ':type': 1, 'nums:': 1, 'list[int]': 1, ':rtype:': 1, 'list[list[int]]': 1, 'nums.sort()': 1, 'if': 2, '(len(nums)': 1, '>=': 1, '3)': 1, 'and': 2, '(nums[0]': 2, '==': 3, 'nums[len(nums)': 1, '-1])': 1, '0):': 1, 'return': 2, '[[0,': 1, '0]]': 1, 'result': 1, '[]': 1, 'for': 3, 'index': 1, 'range(len(nums)': 1, '-': 2, '1):': 1, 'left': 4, 'index+1': 1, 'right': 3, 'len(nums)': 1, '1': 5, 'while': 1, '<': 2, 'right:': 1, 'currsum': 3, 'nums[index]': 1, 'nums[left]': 1, 'nums[right]': 1, '0:': 2, 'result.append([nums[index],': 1, 'nums[left],': 1, 'nums[right]])': 1, '+=': 2, '-=': 2, 'elif': 1, 'else:': 1, '[list(t)': 1, 't': 1, 'set(tuple(element)': 1, 'element': 1, 'result)]': 1, '#': 2, 'space:': 1, 'o(1)': 1, 'time:': 1, 'o(n^2)': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\t"": 1, '\n\tG': 2, '\tGi': 2, 'Giv': 2, 'ive': 3, 'ven': 2, 'en ': 2, 'n a': 3, ' an': 3, 'an ': 1, ' ar': 4, 'arr': 3, 'rra': 3, 'ray': 3, 'ay ': 3, 'y n': 2, ' nu': 12, 'num': 19, 'ums': 19, 'ms ': 3, 's o': 1, ' of': 2, 'of ': 2, 'f n': 1, ' n ': 1, 'n i': 1, ' in': 8, 'int': 3, 'nte': 1, 'teg': 1, 'ege': 1, 'ger': 1, 'ers': 1, 'rs,': 1, 's, ': 1, ', a': 1, 'are': 1, 're ': 2, 'e t': 3, ' th': 5, 'the': 3, 'her': 1, 'ere': 1, 'e e': 1, ' el': 2, 'ele': 3, 'lem': 3, 'eme': 3, 'men': 3, 'ent': 3, 'nts': 1, 'ts ': 2, 's a': 1, ' a,': 1, 'a, ': 1, ', b': 1, ' b,': 1, 'b, ': 1, ', c': 1, ' c ': 2, 'c i': 1, 'in ': 6, 'n n': 1, 's s': 1, ' su': 2, 'suc': 1, 'uch': 1, 'ch ': 2, 'h t': 1, 'tha': 1, 'hat': 1, 'at ': 1, 't a': 1, ' a ': 1, 'a +': 1, ' + ': 4, '+ b': 1, ' b ': 1, 'b +': 1, '+ c': 1, 'c =': 1, ' = ': 6, '= 0': 3, ' 0?': 1, '0? ': 1, '? F': 1, ' Fi': 1, 'Fin': 1, 'ind': 5, 'nd ': 3, 'd a': 1, ' al': 1, 'all': 1, 'll ': 1, 'l u': 1, ' un': 1, 'uni': 1, 'niq': 1, 'iqu': 1, 'que': 1, 'ue ': 1, ' tr': 2, 'tri': 2, 'rip': 2, 'ipl': 2, 'ple': 4, 'let': 2, 'ets': 2, 's i': 1, 'n t': 1, 'he ': 3, 'e a': 1, 'y w': 1, ' wh': 1, 'whi': 2, 'hic': 1, 'ich': 1, 'h g': 1, ' gi': 1, 'giv': 1, 'ves': 1, 'es ': 1, 's t': 1, 'e s': 2, 'sum': 1, 'um ': 4, 'm o': 1, 'f z': 1, ' ze': 1, 'zer': 1, 'ero': 1, 'ro.': 1, 'o.\n': 1, '.\n\n': 2, '\n\n\t': 5, '\n\tN': 1, '\tNo': 1, 'Not': 1, 'ote': 1, 'te:': 1, 'e:\n': 3, ':\n\n': 2, '\n\tT': 1, '\tTh': 1, 'The': 1, ' so': 2, 'sol': 2, 'olu': 3, 'lut': 3, 'uti': 3, 'tio': 3, 'ion': 3, 'on ': 2, 'n s': 3, ' se': 3, 'set': 3, 'et ': 2, 't m': 1, ' mu': 1, 'mus': 1, 'ust': 1, 'st ': 1, 't n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't c': 1, ' co': 1, 'con': 1, 'ont': 1, 'nta': 1, 'tai': 1, 'ain': 1, 'n d': 1, ' du': 1, 'dup': 1, 'upl': 2, 'pli': 1, 'lic': 1, 'ica': 1, 'cat': 1, 'ate': 1, 'te ': 1, 'ts.': 1, 's.\n': 1, '\n\tE': 1, '\tEx': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'le:': 1, 's =': 1, '= [': 2, ' [-': 3, '[-1': 3, '-1,': 5, '1, ': 6, ', 0': 4, ' 0,': 3, '0, ': 4, ', 1': 2, ' 1,': 1, ', 2': 2, ' 2,': 1, '2, ': 1, ', -': 3, ' -1': 3, ' -4': 1, '-4]': 1, '4],': 1, '],\n': 2, ',\n\n': 1, '\n\tA': 1, '\tA ': 1, 'A s': 1, 't i': 3, ' is': 1, 'is:': 1, 's:\n': 1, ':\n\t': 1, '\n\t[': 1, '\t[\n': 1, '[\n\t': 1, '\n\t ': 2, '\t  ': 2, '  [': 3, ' 1]': 1, '1],': 1, ',\n\t': 1, ' 2]': 1, '2]\n': 1, ']\n\t': 1, '\n\t]': 1, '\t]\n': 1, ""]\n'"": 1, ""\n''"": 1, ""'\nc"": 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 4, ':\n ': 8, '\n  ': 23, '   ': 138, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'f t': 1, 'thr': 1, 'hre': 1, 'ree': 1, 'eeS': 1, 'eSu': 1, 'Sum': 4, 'um(': 1, 'm(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', n': 3, 'ms)': 5, 's):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e n': 1, 'ms:': 1, 's: ': 1, ': L': 2, ' Li': 2, 'Lis': 3, 'ist': 4, 'st[': 3, 't[i': 2, '[in': 4, 'nt]': 2, 't]\n': 2, ']\n ': 4, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, 'e: ': 3, 't[L': 1, '[Li': 1, 't]]': 2, ']]\n': 2, '  n': 1, 'ms.': 1, 's.s': 1, '.so': 1, 'sor': 1, 'ort': 1, 'rt(': 1, 't()': 1, '()\n': 1, ')\n\n': 1, '\n\n ': 3, '  i': 1, ' if': 1, 'if ': 3, 'f (': 1, ' (l': 1, '(le': 2, 'len': 4, 'en(': 4, 'n(n': 4, '(nu': 6, 's) ': 4, ') >': 1, ' >=': 1, '>= ': 1, '= 3': 1, ' 3)': 1, '3) ': 1, ') a': 2, 'and': 2, 'd (': 2, ' (n': 2, 'ms[': 9, 's[0': 2, '[0]': 2, '0] ': 2, '] =': 2, ' ==': 3, '== ': 3, '= n': 2, 's[l': 3, '[le': 3, ') -': 3, '-1]': 1, '1])': 1, ']) ': 1, ' 0)': 1, '0):': 1, '  r': 3, ' re': 4, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n [': 1, ' [[': 1, '[[0': 1, '[0,': 1, ' 0]': 1, '0]]': 1, ']\n\n': 2, 'res': 3, 'esu': 3, 'sul': 3, 'ult': 3, 'lt ': 1, 't =': 3, ' []': 1, '[]\n': 1, '  f': 1, ' fo': 3, 'for': 3, 'or ': 3, 'r i': 1, 'nde': 4, 'dex': 4, 'ex ': 1, 'x i': 1, 'n r': 2, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(l': 1, ' - ': 2, '- 1': 2, ' 1)': 1, '1):': 1, '  \t': 12, ' \tl': 1, '\tle': 3, 'lef': 6, 'eft': 6, 'ft ': 4, '= i': 1, 'ex+': 1, 'x+1': 1, '+1\n': 1, '1\n ': 5, ' \tr': 1, '\tri': 3, 'rig': 6, 'igh': 6, 'ght': 6, 'ht ': 3, '= l': 1, ' le': 2, ' 1\n': 5, '1\n\n': 1, ' \tw': 1, '\twh': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 1, 't <': 1, ' < ': 2, '< r': 1, ' ri': 1, 'ht:': 1, 't:\n': 1, ' \t\t': 9, '\t\tc': 1, '\tcu': 1, 'cur': 3, 'urr': 3, 'rrS': 3, 'rSu': 3, 'm =': 2, 's[i': 2, 'ex]': 2, 'x] ': 1, '] +': 2, '+ n': 2, 'ft]': 2, 't] ': 1, 's[r': 2, '[ri': 2, 'ht]': 2, '\t\ti': 1, '\tif': 1, 'f c': 2, ' cu': 2, ' 0:': 2, '0:\n': 2, '\t\t\t': 5, '\t\tr': 3, '\tre': 1, 'lt.': 1, 't.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd([': 1, '([n': 1, '[nu': 1, 'x],': 1, '], ': 2, 't],': 1, ']])': 1, '])\n': 1, ')\n ': 1, '\t\tl': 2, 't +': 2, ' +=': 2, '+= ': 2, '= 1': 4, 't -': 2, ' -=': 2, '-= ': 2, '\t\te': 2, '\tel': 2, 'eli': 1, 'lif': 1, 'm <': 1, '< 0': 1, 'els': 1, 'lse': 1, 'se:': 1, 'n  ': 1, ' [l': 1, '[li': 1, 'lis': 1, 'st(': 1, 't(t': 2, '(t)': 1, 't) ': 2, ') f': 2, 'r t': 1, ' t ': 1, 'et(': 1, '(tu': 1, 'tup': 1, 'le(': 1, 'e(e': 1, '(el': 1, 'nt)': 1, 'r e': 1, 'nt ': 1, 'lt)': 1, 't)]': 1, ')]\n': 1, '\n\n#': 1, '\n# ': 2, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 2, ' O(': 2, 'O(1': 1, '(1)': 1, '1)\n': 1, ')\n#': 1, '# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'O(N': 1, '(N^': 1, 'N^2': 1, '^2)': 1, '2)\n': 1}"
Garvit Bansal,16.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 2, 'given': 2, 'an': 2, 'array': 2, 'nums': 3, 'of': 2, 'n': 1, 'integers': 2, 'and': 2, 'integer': 1, 'target,': 1, 'find': 1, 'three': 2, 'in': 2, 'such': 1, 'that': 3, 'the': 5, 'sum': 3, 'is': 3, 'closest': 2, 'to': 2, 'target.': 1, 'return': 3, 'integers.': 1, 'you': 1, 'may': 1, 'assume': 1, 'each': 1, 'input': 1, 'would': 1, 'have': 1, 'exactly': 1, 'one': 1, 'solution.': 1, 'example:': 1, '=': 10, '[-1,': 1, '2,': 1, '1,': 1, '-4],': 1, 'target': 3, '1.': 1, '2.': 1, '(-1': 1, '+': 5, '2': 1, '1': 5, '2).': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'threesumclosest(self,': 1, 'nums,': 1, 'target):': 1, '""""""': 2, ':type': 2, 'nums:': 1, 'list[int]': 1, 'target:': 2, 'int': 2, ':rtype:': 1, 'nums.sort()': 1, 'result,': 1, 'min_diff': 2, '0,': 1, ""float('inf')"": 1, 'for': 1, 'index': 2, 'range(len(nums)-1):': 1, 'left': 3, 'right': 2, 'len(nums)': 1, '-': 2, 'while': 1, '<': 3, 'right:': 1, 'currsum': 3, 'nums[index]': 1, 'nums[left]': 1, 'nums[right]': 1, 'diff': 4, 'abs(target': 1, 'currsum)': 1, 'if': 3, '==': 1, '0:': 1, 'min_diff:': 1, 'result': 2, '+=': 1, 'else:': 1, '-=': 1, '#': 2, 'space:': 1, 'o(1)': 1, 'time:': 1, 'o(n^2)': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\t"": 1, '\n\tG': 2, '\tGi': 2, 'Giv': 2, 'ive': 2, 'ven': 2, 'en ': 2, 'n a': 3, ' an': 4, 'an ': 2, ' ar': 2, 'arr': 2, 'rra': 2, 'ray': 2, 'ay ': 3, 'y n': 2, ' nu': 9, 'num': 11, 'ums': 11, 'ms ': 3, 's o': 1, ' of': 2, 'of ': 2, 'f n': 1, ' n ': 1, 'n i': 2, ' in': 11, 'int': 7, 'nte': 4, 'teg': 4, 'ege': 4, 'ger': 4, 'ers': 3, 'rs ': 2, 's a': 1, 'and': 2, 'nd ': 3, 'd a': 1, 'er ': 1, 'r t': 1, ' ta': 8, 'tar': 9, 'arg': 9, 'rge': 9, 'get': 9, 'et,': 1, 't, ': 2, ', f': 2, ' fi': 1, 'fin': 1, 'ind': 4, 'd t': 2, ' th': 10, 'thr': 3, 'hre': 3, 'ree': 3, 'ee ': 2, 'e i': 2, 's i': 1, 'in ': 2, 'n n': 1, 's s': 1, ' su': 4, 'suc': 1, 'uch': 1, 'ch ': 2, 'h t': 1, 'tha': 3, 'hat': 3, 'at ': 3, 't t': 3, 'the': 4, 'he ': 5, 'e s': 4, 'sum': 4, 'um ': 5, 'm i': 1, ' is': 3, 'is ': 3, 's c': 2, ' cl': 2, 'clo': 2, 'los': 3, 'ose': 3, 'ses': 3, 'est': 3, 'st ': 2, ' to': 2, 'to ': 2, 'o t': 2, 'et.': 1, 't. ': 1, '. R': 1, ' Re': 1, 'Ret': 1, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n t': 2, 'm o': 1, 'f t': 2, 'e t': 4, 'rs.': 1, 's. ': 1, '. Y': 1, ' Yo': 1, 'You': 1, 'ou ': 1, 'u m': 1, ' ma': 1, 'may': 1, 'y a': 1, ' as': 1, 'ass': 2, 'ssu': 1, 'ume': 1, 'me ': 1, 't e': 1, ' ea': 1, 'eac': 1, 'ach': 1, 'h i': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut ': 1, 't w': 1, ' wo': 1, 'wou': 1, 'oul': 1, 'uld': 1, 'ld ': 1, 'd h': 1, ' ha': 1, 'hav': 1, 'ave': 1, 've ': 1, 'e e': 1, ' ex': 1, 'exa': 1, 'xac': 1, 'act': 1, 'ctl': 1, 'tly': 1, 'ly ': 1, 'y o': 1, ' on': 1, 'one': 1, 'ne ': 1, ' so': 1, 'sol': 1, 'olu': 2, 'lut': 2, 'uti': 2, 'tio': 2, 'ion': 2, 'on.': 1, 'n.\n': 1, '.\n\n': 2, '\n\n\t': 3, '\n\tE': 1, '\tEx': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le:': 1, 'e:\n': 2, ':\n\n': 1, 's =': 1, ' = ': 10, '= [': 1, ' [-': 1, '[-1': 1, '-1,': 1, '1, ': 2, ', 2': 1, ' 2,': 1, '2, ': 1, ', 1': 1, ' 1,': 1, ', -': 1, ' -4': 1, '-4]': 1, '4],': 1, '], ': 1, ', a': 1, 'et ': 3, 't =': 4, '= 1': 3, ' 1.': 1, '1.\n': 1, '\n\tT': 1, '\tTh': 1, 'The': 1, 'm t': 1, 't i': 2, 's 2': 1, ' 2.': 1, '2. ': 1, '. (': 1, ' (-': 1, '(-1': 1, '-1 ': 1, '1 +': 1, ' + ': 5, '+ 2': 1, ' 2 ': 1, '2 +': 1, '+ 1': 2, ' 1 ': 1, '1 =': 1, '= 2': 1, ' 2)': 1, '2).': 1, ').\n': 1, "".\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 2, '):\n': 3, ':\n ': 8, '\n  ': 25, '   ': 146, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'eeS': 1, 'eSu': 1, 'Sum': 5, 'umC': 1, 'mCl': 1, 'Clo': 1, 'st(': 1, 't(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', n': 1, 'ms,': 1, 's, ': 1, ', t': 1, 'et)': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 3, ' :t': 2, ':ty': 2, 'typ': 3, 'ype': 3, 'pe ': 2, 'e n': 1, 'ms:': 1, 's: ': 1, ': L': 1, ' Li': 1, 'Lis': 1, 'ist': 1, 'st[': 1, 't[i': 1, '[in': 2, 'nt]': 1, 't]\n': 2, ']\n ': 2, 'et:': 2, 't: ': 1, ': i': 2, 'nt\n': 2, 't\n ': 3, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, 'e: ': 3, '  \n': 1, ' \n ': 1, '  n': 1, 'ms.': 1, 's.s': 1, '.so': 1, 'sor': 1, 'ort': 1, 'rt(': 1, 't()': 1, '()\n': 1, ')\n ': 1, '  r': 2, ' re': 3, 'res': 3, 'esu': 3, 'sul': 3, 'ult': 3, 'lt,': 1, ', m': 1, ' mi': 2, 'min': 3, 'in_': 3, 'n_d': 3, '_di': 3, 'dif': 7, 'iff': 7, 'ff ': 5, 'f =': 4, '= 0': 2, ' 0,': 1, '0, ': 1, ' fl': 1, 'flo': 1, 'loa': 1, 'oat': 1, 'at(': 1, ""t('"": 1, ""('i"": 1, ""'in"": 1, 'inf': 1, ""nf'"": 1, ""f')"": 1, ""')\n"": 1, ')\n\n': 2, '\n\n ': 4, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, 'nde': 3, 'dex': 3, 'ex ': 2, 'x i': 1, 'n r': 2, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(l': 1, '(le': 1, 'len': 2, 'en(': 2, 'n(n': 2, '(nu': 2, 'ms)': 2, 's)-': 1, ')-1': 1, '-1)': 1, '1):': 1, '  \t': 14, ' \tl': 1, '\tle': 2, 'lef': 4, 'eft': 4, 'ft ': 3, '= i': 1, 'x +': 1, ' 1\n': 4, '1\n ': 3, ' \tr': 1, '\tri': 2, 'rig': 4, 'igh': 4, 'ght': 4, 'ht ': 2, '= l': 1, ' le': 2, 's) ': 1, ') -': 1, ' - ': 2, '- 1': 1, '1\n\n': 1, ' \tw': 1, '\twh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 1, 't <': 1, ' < ': 3, '< r': 1, ' ri': 1, 'ht:': 1, 't:\n': 2, ' \t\t': 11, '\t\tc': 1, '\tcu': 1, 'cur': 4, 'urr': 4, 'rrS': 4, 'rSu': 4, 'm =': 1, '= n': 1, 'ms[': 3, 's[i': 1, 'ex]': 1, 'x] ': 1, '] +': 2, '+ n': 2, 's[l': 1, '[le': 1, 'ft]': 1, 't] ': 1, 's[r': 1, '[ri': 1, 'ht]': 1, '\t\td': 1, '\tdi': 1, '= a': 1, ' ab': 1, 'abs': 1, 'bs(': 1, 's(t': 1, '(ta': 1, 't -': 2, '- c': 1, ' cu': 3, 'um)': 1, 'm)\n': 1, '\t\ti': 3, '\tif': 3, 'if ': 3, 'f d': 2, ' di': 3, ' ==': 1, '== ': 1, ' 0:': 1, '0:\n': 1, '\t\t\t': 5, '\t\tr': 3, '\tre': 2, 'ret': 2, 'et\n': 1, 'f <': 1, '< m': 1, 'ff:': 1, 'f:\n': 1, '\t\tm': 1, '\tmi': 1, '= d': 1, 'ff\n': 1, 'f\n ': 1, 'lt ': 1, '= c': 1, 'um\n': 1, 'm\n\n': 1, 'f c': 1, 'm <': 1, '< t': 1, '\t\tl': 1, 't +': 1, ' +=': 1, '+= ': 1, '\t\te': 1, '\tel': 1, 'els': 1, 'lse': 1, 'se:': 1, ' -=': 1, '-= ': 1, 'lt\n': 1, 't\n\n': 1, '\n\n\n': 1, '\n\n#': 1, '\n# ': 2, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 2, ' O(': 2, 'O(1': 1, '(1)': 1, '1)\n': 1, ')\n#': 1, '# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'O(N': 1, '(N^': 1, 'N^2': 1, '^2)': 1, '2)\n': 1}"
Garvit Bansal,17.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 2, 'given': 2, 'a': 2, 'string': 1, 'containing': 1, 'digits': 1, 'from': 1, '2-9': 1, 'inclusive,': 1, 'return': 3, 'all': 1, 'possible': 1, 'letter': 1, 'combinations': 1, 'that': 2, 'the': 2, 'number': 3, 'could': 1, 'represent.': 1, 'mapping': 1, 'of': 1, 'digit': 1, 'to': 2, 'letters': 1, '(just': 1, 'like': 1, 'on': 1, 'telephone': 1, 'buttons)': 1, 'is': 1, 'below.': 1, 'note': 1, '1': 1, 'does': 1, 'not': 1, 'map': 1, 'any': 1, 'letters.': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'lettercombinations(self,': 1, 'digits):': 1, '""""""': 2, ':type': 1, 'digits:': 1, 'str': 1, ':rtype:': 1, 'list[str]': 1, 'phonemap': 1, '=': 8, '{': 1, ""'2':"": 1, ""'abc',"": 1, ""'3':"": 1, ""'def',"": 1, ""'4':"": 1, ""'ghi',"": 1, ""'5':"": 1, ""'jkl',"": 1, ""'6':"": 1, ""'mno',"": 1, ""'7'"": 1, ':': 1, ""'pqrs',"": 1, ""'8':"": 1, ""'tuv',"": 1, ""'9':'wxyz'}"": 1, 'str(digits)': 1, 'if': 1, '==': 1, '"""":': 1, '[]': 2, 'result': 5, ""['']"": 1, 'for': 5, 'char': 1, 'in': 5, 'number:': 1, 'values': 1, 'phonemap[char]': 1, 'new_result': 2, 'prefix': 3, 'result:': 1, 'currelement': 1, 'value': 2, 'values:': 1, 'new_result.append(currelement+value)': 1, '#': 1, '[prefix+value': 1, 'values]': 1, 'print(solution().lettercombinations(""23""))': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\t"": 1, '\n\tG': 1, '\tGi': 1, 'Giv': 1, 'ive': 3, 'ven': 2, 'en ': 2, 'n a': 2, ' a ': 1, 'a s': 1, ' st': 3, 'str': 4, 'tri': 1, 'rin': 2, 'ing': 3, 'ng ': 3, 'g c': 1, ' co': 3, 'con': 1, 'ont': 1, 'nta': 1, 'tai': 1, 'ain': 1, 'ini': 1, 'nin': 1, 'g d': 1, ' di': 4, 'dig': 5, 'igi': 5, 'git': 5, 'its': 4, 'ts ': 1, 's f': 1, ' fr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm 2': 1, ' 2-': 1, '2-9': 1, '-9 ': 1, '9 i': 1, ' in': 6, 'inc': 1, 'ncl': 1, 'clu': 1, 'lus': 1, 'usi': 1, 'siv': 1, 've,': 1, 'e, ': 1, ', r': 1, ' re': 8, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, ' al': 1, 'all': 1, 'll ': 1, 'l p': 1, ' po': 1, 'pos': 1, 'oss': 1, 'ssi': 1, 'sib': 1, 'ibl': 1, 'ble': 1, 'le ': 1, 'e l': 1, ' le': 4, 'let': 5, 'ett': 5, 'tte': 5, 'ter': 5, 'er ': 4, 'r c': 3, 'com': 1, 'omb': 3, 'mbi': 3, 'bin': 3, 'ina': 3, 'nat': 3, 'ati': 3, 'tio': 5, 'ion': 5, 'ons': 4, 'ns ': 1, 's t': 1, ' th': 4, 'tha': 2, 'hat': 2, 'at ': 2, 't t': 2, 'the': 2, 'he ': 2, 'e n': 1, ' nu': 4, 'num': 4, 'umb': 4, 'mbe': 4, 'ber': 4, 'cou': 1, 'oul': 1, 'uld': 1, 'ld ': 1, 'd r': 1, 'rep': 1, 'epr': 1, 'pre': 5, 'res': 10, 'ese': 1, 'sen': 1, 'ent': 3, 'nt.': 1, 't.\n': 1, '.\n\n': 1, '\n\n\t': 1, '\n\tA': 1, '\tA ': 1, 'A m': 1, ' ma': 2, 'map': 2, 'app': 2, 'ppi': 1, 'pin': 1, 'g o': 1, ' of': 1, 'of ': 1, 'f d': 1, 'it ': 1, ' to': 2, 'to ': 2, 'o l': 1, 'ers': 2, 'rs ': 1, 's (': 1, ' (j': 1, '(ju': 1, 'jus': 1, 'ust': 1, 'st ': 1, 't l': 1, ' li': 1, 'lik': 1, 'ike': 1, 'ke ': 1, 'e o': 1, ' on': 1, 'on ': 1, 'n t': 1, 'e t': 2, ' te': 1, 'tel': 1, 'ele': 1, 'lep': 1, 'eph': 1, 'pho': 3, 'hon': 3, 'one': 3, 'ne ': 1, 'e b': 1, ' bu': 1, 'but': 1, 'utt': 1, 'tto': 1, 'ton': 1, 'ns)': 1, 's) ': 1, ') i': 1, ' is': 1, 'is ': 1, 's g': 1, ' gi': 1, 'giv': 1, 'n b': 1, ' be': 1, 'bel': 1, 'elo': 1, 'low': 1, 'ow.': 1, 'w. ': 1, '. N': 1, ' No': 1, 'Not': 1, 'ote': 1, 'te ': 1, 't 1': 1, ' 1 ': 1, '1 d': 1, ' do': 1, 'doe': 1, 'oes': 1, 'es ': 2, 's n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't m': 1, 'ap ': 2, 'p t': 1, 'o a': 1, ' an': 1, 'any': 1, 'ny ': 1, 'y l': 1, 'rs.': 1, 's.\n': 1, "".\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 2, 'olu': 2, 'lut': 2, 'uti': 2, 'on(': 2, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 2, ':\n ': 6, '\n  ': 21, '   ': 122, '  d': 1, ' de': 1, 'def': 2, 'ef ': 1, 'f l': 1, 'erC': 2, 'rCo': 2, 'Com': 2, 'ns(': 2, 's(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', d': 1, 'ts)': 2, 's):': 1, '  ""': 2, ' """"': 3, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e d': 1, 'ts:': 1, 's: ': 1, ': s': 1, 'tr\n': 1, 'r\n ': 1, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, 'e: ': 1, ': L': 1, ' Li': 1, 'Lis': 1, 'ist': 1, 'st[': 1, 't[s': 1, '[st': 1, 'tr]': 1, 'r]\n': 2, ']\n ': 5, '  \n': 1, ' \n ': 1, '  p': 1, ' ph': 2, 'neM': 2, 'eMa': 2, 'Map': 2, 'p =': 1, ' = ': 8, '= {': 1, ' { ': 1, ""{ '"": 1, "" '2"": 1, ""'2'"": 1, ""2':"": 1, ""': "": 6, "": '"": 7, "" 'a"": 1, ""'ab"": 1, 'abc': 1, ""bc'"": 1, ""c',"": 1, ""', "": 7, "", '"": 7, "" '3"": 1, ""'3'"": 1, ""3':"": 1, "" 'd"": 1, ""'de"": 1, ""ef'"": 1, ""f',"": 1, "" '4"": 1, ""'4'"": 1, ""4':"": 1, "" 'g"": 1, ""'gh"": 1, 'ghi': 1, ""hi'"": 1, ""i',"": 1, "" '5"": 1, ""'5'"": 1, ""5':"": 1, "" 'j"": 1, ""'jk"": 1, 'jkl': 1, ""kl'"": 1, ""l',"": 1, "" '6"": 1, ""'6'"": 1, ""6':"": 1, "" 'm"": 1, ""'mn"": 1, 'mno': 1, ""no'"": 1, ""o',"": 1, "" '7"": 1, ""'7'"": 1, ""7' "": 1, ""' :"": 1, ' : ': 1, "" 'p"": 1, ""'pq"": 1, 'pqr': 1, 'qrs': 1, ""rs'"": 1, ""s',"": 1, "" '8"": 1, ""'8'"": 1, ""8':"": 1, "" 't"": 1, ""'tu"": 1, 'tuv': 1, ""uv'"": 1, ""v',"": 1, "" '9"": 1, ""'9'"": 1, ""9':"": 1, ""':'"": 1, "":'w"": 1, ""'wx"": 1, 'wxy': 1, 'xyz': 1, ""yz'"": 1, ""z'}"": 1, ""'}\n"": 1, '}\n ': 1, '  n': 1, 'r =': 2, '= s': 1, 'tr(': 1, 'r(d': 1, '(di': 1, 's)\n': 1, ')\n\n': 2, '\n\n ': 3, '  i': 1, ' if': 1, 'if ': 1, 'f n': 1, ' ==': 1, '== ': 1, '= ""': 1, '"""":': 1, '"":\n': 1, '  \t': 9, ' \tr': 2, '\tre': 2, 'n [': 1, ' []': 2, '[]\n': 2, ']\n\n': 1, '  r': 2, 'esu': 9, 'sul': 9, 'ult': 9, 'lt ': 5, 't =': 5, '= [': 3, "" ['"": 1, ""[''"": 1, ""'']"": 1, ""']\n"": 1, '  f': 1, ' fo': 3, 'for': 5, 'or ': 5, ' ch': 1, 'cha': 2, 'har': 2, 'ar ': 1, 'r i': 1, 'in ': 5, 'n n': 1, 'er:': 1, 'r:\n': 1, ' \tv': 1, '\tva': 1, 'val': 7, 'alu': 7, 'lue': 7, 'ues': 3, 's =': 1, '= p': 2, 'ap[': 1, 'p[c': 1, '[ch': 1, 'ar]': 1, ' \tn': 1, '\tne': 2, 'new': 3, 'ew_': 3, 'w_r': 3, '_re': 3, ' \tf': 1, '\tfo': 2, 'r p': 2, ' pr': 3, 'ref': 4, 'efi': 4, 'fix': 4, 'ix ': 2, 'x i': 2, 'n r': 3, 'lt:': 1, 't:\n': 1, ' \t\t': 3, '\t\tc': 1, '\tcu': 1, 'cur': 2, 'urr': 2, 'rrE': 2, 'rEl': 2, 'Ele': 2, 'lem': 2, 'eme': 2, 'men': 2, 'nt ': 1, 'ix\n': 1, 'x\n ': 1, '\t\tf': 1, 'r v': 2, ' va': 4, 'ue ': 3, 'e i': 2, 'n v': 2, 'es:': 1, 's:\n': 1, '\t\t\t': 1, '\t\tn': 1, 'lt.': 1, 't.a': 1, '.ap': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(c': 1, '(cu': 1, 'nt+': 1, 't+v': 1, '+va': 2, 'ue)': 1, 'e)\n': 1, '= n': 1, ' ne': 1, 'lt\n': 2, 't\n ': 1, ' \t#': 1, '\t# ': 1, '# r': 1, ' [p': 1, '[pr': 1, 'ix+': 1, 'x+v': 1, 'e f': 1, 't f': 1, 'es]': 1, 's]\n': 1, 't\n\n': 1, '\n\np': 1, '\npr': 1, 'pri': 1, 'int': 1, 'nt(': 1, 't(S': 1, '(So': 1, 'n()': 1, '().': 1, ').l': 1, '.le': 1, 's(""': 1, '(""2': 1, '""23': 1, '23""': 1, '3"")': 1, '""))': 1, '))\n': 1}"
Garvit Bansal,18.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 2, 'given': 2, 'an': 2, 'array': 3, 'nums': 3, 'of': 2, 'n': 1, 'integers': 1, 'and': 3, 'integer': 1, 'target,': 1, 'are': 1, 'there': 1, 'elements': 1, 'a,': 1, 'b,': 1, 'c,': 1, 'd': 2, 'in': 9, 'such': 1, 'that': 1, 'a': 2, '+': 4, 'b': 1, 'c': 1, '=': 12, 'target?': 1, 'find': 1, 'all': 1, 'unique': 1, 'quadruplets': 1, 'the': 3, 'which': 1, 'gives': 1, 'sum': 1, 'target.': 1, 'note:': 1, 'solution': 2, 'set': 2, 'must': 1, 'not': 1, 'contain': 1, 'duplicate': 1, 'quadruplets.': 1, 'example:': 1, '[1,': 1, '0,': 6, '-1,': 2, '-2,': 1, '2],': 2, 'target': 2, '0.': 1, 'is:': 1, '[': 1, '[-1,': 1, '1],': 1, '[-2,': 2, '1,': 1, '2]': 1, ']': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'foursum(self,': 1, 'nums,': 1, 'target):': 1, '""""""': 2, ':type': 2, 'nums:': 1, 'list[int]': 1, 'target:': 1, 'int': 1, ':rtype:': 1, 'list[list[int]]': 1, 'summapping': 1, '{}': 1, 'for': 5, 'index_i': 1, 'range(len(nums)-1):': 1, 'index_j': 1, 'range(index_i+1,': 1, 'len(nums)):': 1, 'currsum': 2, 'nums[index_i]': 1, 'nums[index_j]': 1, 'if': 3, 'summapping:': 2, 'summapping[currsum].append((index_i,': 1, 'index_j))': 1, 'else:': 1, 'summapping[currsum]': 1, '[(index_i,': 1, 'index_j)]': 1, 'result': 1, 'set()': 1, 'key,': 1, 'value': 2, 'summapping.iteritems():': 1, 'diff': 2, '-': 1, 'key': 1, 'firstset': 1, 'secondset': 1, 'summapping[diff]': 1, '(i,': 1, 'j)': 1, 'firstset:': 1, '(k,': 1, 'l)': 1, 'secondset:': 1, 'fourlet': 1, '[i,': 1, 'j,': 1, 'k,': 1, 'l]': 1, 'len(set(fourlet))': 1, '!=': 1, 'len(fourlet):': 1, 'continue': 1, 'fourlist': 1, '[nums[i],': 1, 'nums[j],': 1, 'nums[k],': 1, 'nums[l]]': 1, 'fourlist.sort()': 1, 'result.add(tuple(fourlist))': 1, 'return': 1, 'list(result)': 1, '#': 2, 'space': 1, ':': 1, 'o(n)': 1, 'time:': 1, 'o(n^3)': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\t"": 1, '\n\tG': 2, '\tGi': 2, 'Giv': 2, 'ive': 3, 'ven': 2, 'en ': 2, 'n a': 3, ' an': 5, 'an ': 2, ' ar': 4, 'arr': 3, 'rra': 3, 'ray': 3, 'ay ': 3, 'y n': 2, ' nu': 10, 'num': 13, 'ums': 13, 'ms ': 3, 's o': 1, ' of': 2, 'of ': 2, 'f n': 1, ' n ': 1, 'n i': 2, ' in': 16, 'int': 5, 'nte': 2, 'teg': 2, 'ege': 2, 'ger': 2, 'ers': 1, 'rs ': 1, 's a': 2, 'and': 3, 'nd ': 4, 'd a': 2, 'er ': 1, 'r t': 1, ' ta': 7, 'tar': 7, 'arg': 7, 'rge': 7, 'get': 7, 'et,': 1, 't, ': 1, ', a': 3, 'are': 1, 're ': 2, 'e t': 2, ' th': 4, 'the': 3, 'her': 1, 'ere': 1, 'e e': 1, ' el': 1, 'ele': 1, 'lem': 1, 'eme': 1, 'men': 1, 'ent': 1, 'nts': 1, 'ts ': 2, ' a,': 1, 'a, ': 1, ', b': 1, ' b,': 1, 'b, ': 1, ', c': 1, ' c,': 1, 'c, ': 1, 'd d': 1, ' d ': 2, 'd i': 1, 'in ': 10, 'n n': 1, 's s': 1, ' su': 7, 'suc': 1, 'uch': 1, 'ch ': 2, 'h t': 1, 'tha': 1, 'hat': 1, 'at ': 1, 't a': 1, ' a ': 1, 'a +': 1, ' + ': 4, '+ b': 1, ' b ': 1, 'b +': 1, '+ c': 1, ' c ': 1, 'c +': 1, '+ d': 1, 'd =': 1, ' = ': 12, '= t': 2, 'et?': 1, 't? ': 1, '? F': 1, ' Fi': 1, 'Fin': 1, 'ind': 10, ' al': 1, 'all': 1, 'll ': 1, 'l u': 1, ' un': 1, 'uni': 1, 'niq': 1, 'iqu': 1, 'que': 1, 'ue ': 2, 'e q': 2, ' qu': 2, 'qua': 2, 'uad': 2, 'adr': 2, 'dru': 2, 'rup': 2, 'upl': 4, 'ple': 4, 'let': 5, 'ets': 2, 's i': 1, 'n t': 1, 'he ': 3, 'e a': 1, 'y w': 1, ' wh': 1, 'whi': 1, 'hic': 1, 'ich': 1, 'h g': 1, ' gi': 1, 'giv': 1, 'ves': 1, 'es ': 1, 's t': 1, 'e s': 2, 'sum': 8, 'um ': 3, 'm o': 1, 'f t': 1, 'et.': 1, 't.\n': 1, '.\n\n': 3, '\n\n\t': 5, '\n\tN': 1, '\tNo': 1, 'Not': 1, 'ote': 1, 'te:': 1, 'e:\n': 3, ':\n\n': 2, '\n\tT': 1, '\tTh': 1, 'The': 1, ' so': 2, 'sol': 2, 'olu': 3, 'lut': 3, 'uti': 3, 'tio': 3, 'ion': 3, 'on ': 2, 'n s': 6, ' se': 4, 'set': 4, 'et ': 7, 't m': 1, ' mu': 1, 'mus': 1, 'ust': 1, 'st ': 2, 't n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't c': 1, ' co': 1, 'con': 4, 'ont': 2, 'nta': 1, 'tai': 1, 'ain': 1, 'n d': 1, ' du': 1, 'dup': 1, 'pli': 1, 'lic': 1, 'ica': 1, 'cat': 1, 'ate': 1, 'te ': 1, 'ts.': 1, 's.\n': 1, '\n\tE': 1, '\tEx': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'le:': 1, 's =': 1, '= [': 4, ' [1': 1, '[1,': 1, '1, ': 6, ', 0': 4, ' 0,': 6, '0, ': 6, ', -': 3, ' -1': 2, '-1,': 3, ' -2': 1, '-2,': 3, '2, ': 3, ', 2': 3, ' 2]': 3, '2],': 2, '], ': 4, 'd t': 1, 't =': 6, '= 0': 1, ' 0.': 1, '0.\n': 1, '\n\tA': 1, '\tA ': 1, 'A s': 1, 't i': 1, ' is': 1, 'is:': 1, 's:\n': 1, ':\n\t': 1, '\n\t[': 1, '\t[\n': 1, '[\n\t': 1, '\n\t ': 3, '\t  ': 3, '  [': 3, ' [-': 3, '[-1': 1, ',  ': 2, '  0': 2, ', 1': 2, ' 1]': 1, '1],': 1, '],\n': 2, ',\n\t': 2, '[-2': 2, ' 1,': 1, '2]\n': 1, ']\n\t': 1, '\n\t]': 1, '\t]\n': 1, ""]\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 3, '):\n': 6, ':\n ': 11, '\n  ': 30, '   ': 176, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'f f': 1, ' fo': 3, 'fou': 7, 'our': 7, 'urS': 1, 'rSu': 5, 'Sum': 5, 'um(': 1, 'm(s': 1, '(se': 2, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', n': 4, 'ms,': 1, 's, ': 1, ', t': 1, 'et)': 3, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 3, ' :t': 2, ':ty': 2, 'typ': 3, 'ype': 3, 'pe ': 2, 'e n': 1, 'ms:': 1, 's: ': 1, ': L': 2, ' Li': 2, 'Lis': 3, 'ist': 7, 'st[': 3, 't[i': 2, '[in': 4, 'nt]': 2, 't]\n': 1, ']\n ': 5, 'et:': 3, 't: ': 1, ': i': 1, 'nt\n': 1, 't\n ': 1, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, 'e: ': 2, 't[L': 1, '[Li': 1, 't]]': 1, ']]\n': 2, '  \n': 1, ' \n ': 1, '  s': 1, 'umM': 7, 'mMa': 7, 'Map': 7, 'app': 8, 'ppi': 7, 'pin': 7, 'ing': 7, 'ng ': 1, 'g =': 1, '= {': 1, ' {}': 1, '{}\n': 1, '}\n ': 1, '  f': 2, 'for': 5, 'or ': 5, 'r i': 2, 'nde': 9, 'dex': 9, 'ex_': 9, 'x_i': 5, '_i ': 1, 'i i': 1, 'n r': 2, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(l': 1, '(le': 1, 'len': 4, 'en(': 4, 'n(n': 2, '(nu': 2, 'ms)': 2, 's)-': 1, ')-1': 1, '-1)': 1, '1):': 1, '  \t': 18, ' \tf': 1, '\tfo': 6, 'x_j': 4, '_j ': 1, 'j i': 1, 'e(i': 1, '(in': 3, '_i+': 1, 'i+1': 1, '+1,': 1, ', l': 3, ' le': 3, 's))': 1, ')):': 1, ' \t\t': 15, '\t\tc': 2, '\tcu': 1, 'cur': 4, 'urr': 4, 'rrS': 4, 'm =': 1, '= n': 1, 'ms[': 6, 's[i': 3, '_i]': 1, 'i] ': 1, '] +': 1, '+ n': 1, '_j]': 1, 'j]\n': 1, '\t\ti': 2, '\tif': 3, 'if ': 3, 'f c': 1, ' cu': 1, 'm i': 1, 'ng:': 2, 'g:\n': 2, '\t\t\t': 16, '\t\ts': 3, '\tsu': 2, 'ng[': 3, 'g[c': 2, '[cu': 2, 'um]': 2, 'm].': 1, '].a': 1, '.ap': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd((': 1, '((i': 1, '_i,': 2, 'i, ': 4, ', i': 2, '_j)': 2, 'j))': 1, '))\n': 2, ')\n ': 3, '\t\te': 1, '\tel': 1, 'els': 1, 'lse': 1, 'se:': 1, 'm] ': 1, '] =': 1, ' [(': 1, '[(i': 1, 'j)]': 1, ')]\n': 1, ']\n\n': 2, '\n\n ': 3, '  r': 2, ' re': 2, 'res': 3, 'esu': 3, 'sul': 3, 'ult': 3, 'lt ': 1, '= s': 2, 'et(': 2, 't()': 2, '()\n': 2, 'r k': 1, ' ke': 2, 'key': 2, 'ey,': 1, 'y, ': 1, ', v': 1, ' va': 2, 'val': 2, 'alu': 2, 'lue': 2, 'e i': 1, 'ng.': 1, 'g.i': 1, '.it': 1, 'ite': 2, 'ter': 1, 'eri': 1, 'rit': 1, 'tem': 1, 'ems': 1, 'ms(': 1, 's()': 1, '():': 1, ' \td': 1, '\tdi': 1, 'dif': 3, 'iff': 3, 'ff ': 2, 'f =': 1, 't -': 1, ' - ': 1, '- k': 1, 'ey\n': 1, 'y\n ': 1, ' \ti': 1, 'f d': 1, ' di': 1, 'f i': 1, '\t\tf': 6, '\tfi': 1, 'fir': 2, 'irs': 2, 'rst': 2, 'stS': 2, 'tSe': 2, 'Set': 4, '= v': 1, 'ue\n': 2, 'e\n ': 2, '\tse': 1, 'sec': 2, 'eco': 2, 'ond': 2, 'ndS': 2, 'dSe': 2, 'g[d': 1, '[di': 1, 'ff]': 1, 'f]\n': 1, 'r (': 2, ' (i': 1, '(i,': 1, ', j': 2, ' j)': 1, 'j) ': 1, ') i': 2, 'n f': 1, ' fi': 1, 't:\n': 2, ' (k': 1, '(k,': 1, 'k, ': 2, ' l)': 1, 'l) ': 1, 'url': 6, 'rle': 3, ' [i': 1, '[i,': 1, ' j,': 1, 'j, ': 1, ', k': 1, ' k,': 1, ' l]': 1, 'l]\n': 1, 'f l': 1, 'n(s': 1, 't(f': 1, '(fo': 3, 't))': 2, ')) ': 1, ') !': 1, ' !=': 1, '!= ': 1, '= l': 1, 'n(f': 1, '\tco': 1, 'nti': 1, 'tin': 1, 'inu': 1, 'nue': 1, 'rli': 3, 'lis': 4, ' [n': 1, '[nu': 1, '[i]': 1, 'i],': 1, 's[j': 1, '[j]': 1, 'j],': 1, 's[k': 1, '[k]': 1, 'k],': 1, 's[l': 1, '[l]': 1, 'l]]': 1, 'st.': 1, 't.s': 1, '.so': 1, 'sor': 1, 'ort': 1, 'rt(': 1, '\t\tr': 1, '\tre': 1, 'lt.': 1, 't.a': 1, '.ad': 1, 'add': 1, 'dd(': 1, 'd(t': 1, '(tu': 1, 'tup': 1, 'le(': 1, 'e(f': 1, 'st)': 1, ')\n\n': 2, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n l': 1, ' li': 1, 'st(': 1, 't(r': 1, '(re': 1, 'lt)': 1, 't)\n': 1, '\n\n\n': 1, '\n\n#': 1, '\n# ': 2, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce ': 1, 'e :': 1, ' : ': 1, ': O': 2, ' O(': 2, 'O(N': 2, '(N)': 1, 'N)\n': 1, ')\n#': 1, '# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, '(N^': 1, 'N^3': 1, '^3)': 1, '3)\n': 1}"
Garvit Bansal,19.py,"[0.1304, 0.2033, 0.1306, 0.0757, 0.0095, 0.0968, 0.3493, 0.1598, 0.0399, 0.0669, 0.0504, 0.2585, 0.3612, 0.0552, 0.1984, 0.0932, 0.1159, 0.0605, 0.2925, 0.3197, 0.1163, 0.1891, 0.0208, 0.198, 0.1916, 0.0725]","[0.0425, 0.4343, 0.1629, 0.1523, 0.1582, 0.117, 0.2369, 0.0583, 0.1195, 0.1047, 0.0582, 0.285, 0.0547, 0.0969, 0.1697, 0.2841, 0.0087, 0.4232, 0.1347, 0.1646, 0.171, 0.1163, 0.0044, 0.0355, 0.0605, 0.1564, 0.1021, 0.1206, 0.0753, 0.1711, 0.0158, 0.0566, 0.0249, 0.0175, 0.1694, 0.2008, 0.1216, 0.2297, 0.1314, 0.1782, 0.0731, 0.2395, 0.0399, 0.0532, 0.1231, 0.2063]","[0.0718, 0.0256, 0.0647, 0.1901, 0.1869, 0.1697, 0.282, 0.3454, 0.1076, 0.0284, 0.2822, 0.1171, 0.2219, 0.0931, 0.0028, 0.0863, 0.0282, 0.0876, 0.1666, 0.0705, 0.1549, 0.136, 0.127, 0.1445, 0.1966, 0.0979, 0.0092, 0.0505, 0.0003, 0.0293, 0.0933, 0.1966]","[0.1636, 0.0683, 0.1786, 0.2766, 0.0812, 0.2095, 0.0903, 0.2449, 0.2352, 0.1178, 0.1229, 0.1556, 0.104, 0.1075, 0.0267, 0.1381, 0.0565, 0.0101, 0.1144, 0.2519, 0.2842, 0.0084, 0.0591, 0.0614, 0.2053, 0.1904, 0.0052, 0.0078, 0.2985, 0.1136, 0.0558]","{""'''"": 2, 'given': 2, 'a': 1, 'linked': 3, 'list,': 1, 'remove': 1, 'the': 5, 'n-th': 1, 'node': 2, 'from': 2, 'end': 1, 'of': 1, 'list': 2, 'and': 2, 'return': 4, 'its': 1, 'head.': 1, 'example:': 1, 'list:': 1, '1->2->3->4->5,': 1, 'n': 3, '=': 9, '2.': 1, 'after': 1, 'removing': 1, 'second': 1, 'end,': 1, 'becomes': 1, '1->2->3->5.': 1, '#': 5, 'definition': 1, 'for': 1, 'singly-linked': 1, 'list.': 1, 'class': 2, 'listnode(object):': 1, 'def': 2, '__init__(self,': 1, 'x):': 1, 'self.val': 1, 'x': 1, 'self.next': 1, 'none': 2, 'solution(object):': 1, 'removenthfromend(self,': 1, 'head,': 1, 'n):': 1, '""""""': 2, ':type': 2, 'head:': 2, 'listnode': 2, 'n:': 1, 'int': 1, ':rtype:': 1, 'if': 2, 'not': 1, 'ref': 4, 'head': 3, 'while': 2, '>': 1, '0:': 1, 'ref.next': 2, '-=': 1, '1': 1, 'is': 1, 'none:': 1, 'head.next': 1, 'else:': 1, 'main': 2, 'ref.next:': 1, 'main.next': 2, 'main.next.next': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\t"": 1, '\n\tG': 2, '\tGi': 2, 'Giv': 2, 'ive': 2, 'ven': 2, 'en ': 2, 'n a': 1, ' a ': 1, 'a l': 1, ' li': 8, 'lin': 4, 'ink': 4, 'nke': 4, 'ked': 4, 'ed ': 4, 'd l': 4, 'lis': 5, 'ist': 8, 'st,': 1, 't, ': 1, ', r': 1, ' re': 9, 'rem': 3, 'emo': 3, 'mov': 3, 'ove': 2, 've ': 1, 'e t': 1, ' th': 5, 'the': 5, 'he ': 5, 'e n': 3, ' n-': 1, 'n-t': 1, '-th': 1, 'th ': 1, 'h n': 1, ' no': 3, 'nod': 2, 'ode': 5, 'de ': 2, 'e f': 2, ' fr': 2, 'fro': 2, 'rom': 3, 'om ': 2, 'm t': 2, 'e e': 2, ' en': 2, 'end': 2, 'nd ': 4, 'd o': 1, ' of': 1, 'of ': 1, 'f l': 1, 'st ': 2, 't a': 1, ' an': 2, 'and': 2, 'd r': 1, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 4, 'n i': 1, ' it': 1, 'its': 1, 'ts ': 1, 's h': 1, ' he': 8, 'hea': 8, 'ead': 8, 'ad.': 2, 'd.\n': 1, '.\n\n': 3, '\n\n\t': 3, '\n\tE': 1, '\tEx': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le:': 1, 'e:\n': 3, ':\n\n': 1, 'n l': 1, 'st:': 1, 't: ': 1, ': 1': 1, ' 1-': 2, '1->': 2, '->2': 2, '>2-': 2, '2->': 2, '->3': 2, '>3-': 2, '3->': 2, '->4': 1, '>4-': 1, '4->': 1, '->5': 2, '>5,': 1, '5, ': 1, ', a': 1, 'd n': 2, ' n ': 2, 'n =': 3, ' = ': 9, '= 2': 1, ' 2.': 1, '2.\n': 1, '\n\tA': 1, '\tAf': 1, 'Aft': 1, 'fte': 1, 'ter': 1, 'er ': 1, 'r r': 1, 'ovi': 1, 'vin': 1, 'ing': 2, 'ng ': 1, 'g t': 1, 'e s': 1, ' se': 3, 'sec': 1, 'eco': 2, 'con': 1, 'ond': 1, 'nd,': 1, 'd, ': 2, ', t': 1, 'e l': 1, 't b': 1, ' be': 1, 'bec': 1, 'com': 1, 'ome': 1, 'mes': 1, 'es ': 1, 's 1': 1, '>5.': 1, '5.\n': 1, ""\n\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\n#': 1, '\n# ': 5, '# D': 1, ' De': 1, 'Def': 1, 'efi': 1, 'fin': 1, 'ini': 2, 'nit': 2, 'iti': 1, 'tio': 2, 'ion': 2, 'on ': 1, 'n f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r s': 1, ' si': 1, 'sin': 1, 'ngl': 1, 'gly': 1, 'ly-': 1, 'y-l': 1, '-li': 1, 'st.': 1, 't.\n': 1, '.\n#': 1, '# c': 1, ' cl': 1, 'cla': 2, 'las': 2, 'ass': 2, 'ss ': 2, 's L': 1, ' Li': 3, 'Lis': 3, 'stN': 3, 'tNo': 3, 'Nod': 3, 'de(': 1, 'e(o': 1, '(ob': 2, 'obj': 2, 'bje': 2, 'jec': 2, 'ect': 2, 'ct)': 2, 't):': 2, '):\n': 4, ':\n#': 2, '#  ': 3, '   ': 139, '  d': 2, ' de': 2, 'def': 2, 'ef ': 6, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 2, 'sel': 4, 'elf': 4, 'lf,': 2, 'f, ': 2, ', x': 1, ' x)': 1, 'x):': 1, '  s': 2, 'lf.': 2, 'f.v': 1, '.va': 1, 'val': 1, 'al ': 1, 'l =': 1, '= x': 1, ' x\n': 1, 'x\n#': 1, 'f.n': 4, '.ne': 9, 'nex': 9, 'ext': 9, 'xt ': 2, 't =': 2, '= N': 1, ' No': 3, 'Non': 3, 'one': 3, 'ne\n': 2, 'e\n\n': 2, '\n\nc': 1, '\ncl': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'on(': 1, 'n(o': 1, ':\n ': 7, '\n  ': 21, 'f r': 2, 'veN': 1, 'eNt': 1, 'Nth': 1, 'thF': 1, 'hFr': 1, 'Fro': 1, 'omE': 1, 'mEn': 1, 'End': 1, 'nd(': 1, 'd(s': 1, ', h': 1, 'ad,': 1, ', n': 1, ' n)': 1, 'n):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 3, ' :t': 2, ':ty': 2, 'typ': 3, 'ype': 3, 'pe ': 2, 'e h': 1, 'ad:': 2, 'd: ': 1, ': L': 2, 'de\n': 2, 'e\n ': 2, ' n:': 1, 'n: ': 1, ': i': 1, ' in': 1, 'int': 1, 'nt\n': 1, 't\n ': 5, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, 'e: ': 1, '  i': 2, ' if': 2, 'if ': 2, 'f n': 1, 'not': 1, 'ot ': 1, 't h': 1, 'd:\n': 1, '  \t': 10, ' \tr': 4, '\tre': 5, 'n N': 1, '\n\n ': 3, '  r': 1, 'ref': 7, 'f =': 3, '= h': 2, 'ad\n': 3, 'd\n ': 2, '  w': 1, ' wh': 1, 'whi': 2, 'hil': 2, 'ile': 2, 'le ': 2, 'n >': 1, ' > ': 1, '> 0': 1, ' 0:': 1, '0:\n': 1, '= r': 2, 'ef.': 3, 'xt\n': 5, ' \tn': 1, '\tn ': 1, 'n -': 1, ' -=': 1, '-= ': 1, '= 1': 1, ' 1\n': 1, '1\n\n': 1, 'f i': 1, ' is': 1, 'is ': 1, 's N': 1, 'ne:': 1, 'n h': 2, 'd.n': 1, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, ' \tm': 2, '\tma': 3, 'mai': 5, 'ain': 5, 'in ': 2, ' \tw': 1, '\twh': 1, 'e r': 1, 'xt:': 1, 't:\n': 1, ' \t\t': 2, '\t\tm': 1, '= m': 2, ' ma': 2, 'in.': 3, 'n.n': 3, '\t\tr': 1, 't\n\n': 1, 'xt.': 1, 't.n': 1}"
Garvit Bansal,22.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 2, 'given': 2, 'n': 2, 'pairs': 1, 'of': 2, 'parentheses,': 1, 'write': 1, 'a': 2, 'function': 1, 'to': 1, 'generate': 1, 'all': 1, 'combinations': 1, 'well-formed': 1, 'parentheses.': 1, 'for': 1, 'example,': 1, '=': 2, '3,': 1, 'solution': 1, 'set': 1, 'is:': 1, '[': 1, '""((()))"",': 1, '""(()())"",': 1, '""(())()"",': 1, '""()(())"",': 1, '""()()()""': 1, ']': 1, 'class': 1, 'solution(object):': 1, 'def': 2, 'generateparenthesis(self,': 1, 'n):': 1, '""""""': 2, ':type': 1, 'n:': 2, 'int': 1, ':rtype:': 1, 'list[str]': 1, 'result': 2, '[]': 1, 'backtracking(s,': 1, 'left,': 2, 'right):': 1, 'if': 3, 'len(s)': 1, '==': 1, '2*n:': 1, 'result.append(s)': 1, 'return': 2, 'left': 1, '<': 2, ""backtracking(s+'(',"": 1, 'left+1,': 1, 'right)': 1, 'right': 1, 'left:': 1, ""backtracking(s+')',"": 1, 'right+1)': 1, ""backtracking('',"": 1, '0,': 1, '0)': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\t"": 1, '\n\t ': 6, '\t G': 1, ' Gi': 1, 'Giv': 1, 'ive': 2, 'ven': 2, 'en ': 2, 'n n': 2, ' n ': 2, 'n p': 1, ' pa': 3, 'pai': 1, 'air': 1, 'irs': 1, 'rs ': 1, 's o': 2, ' of': 2, 'of ': 2, 'f p': 1, 'par': 2, 'are': 3, 'ren': 3, 'ent': 3, 'nth': 3, 'the': 3, 'hes': 3, 'ese': 2, 'ses': 2, 'es,': 1, 's, ': 1, ', w': 1, ' wr': 1, 'wri': 1, 'rit': 1, 'ite': 1, 'te ': 2, 'e a': 2, ' a ': 2, 'a f': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 4, 'ion': 4, 'on ': 2, 'n t': 1, ' to': 1, 'to ': 1, 'o g': 1, ' ge': 2, 'gen': 2, 'ene': 2, 'ner': 2, 'era': 2, 'rat': 2, 'ate': 2, ' al': 1, 'all': 1, 'll ': 1, 'l c': 1, ' co': 1, 'com': 1, 'omb': 1, 'mbi': 1, 'bin': 1, 'ina': 1, 'nat': 1, 'ati': 1, 'ons': 1, 'ns ': 1, 'f w': 1, ' we': 1, 'wel': 1, 'ell': 1, 'll-': 1, 'l-f': 1, '-fo': 1, 'for': 1, 'orm': 1, 'rme': 1, 'med': 1, 'ed ': 1, 'd p': 1, 'es.': 1, 's.\n': 1, '.\n\n': 1, '\n\n\t': 2, '\n\tF': 1, '\tFo': 1, 'For': 1, 'or ': 1, 'r e': 1, ' ex': 1, 'exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le,': 1, 'e, ': 1, ', g': 1, ' gi': 1, 'giv': 1, 'n =': 1, ' = ': 2, '= 3': 1, ' 3,': 1, '3, ': 1, ', a': 1, 'a s': 1, ' so': 1, 'sol': 1, 'olu': 2, 'lut': 2, 'uti': 2, 'n s': 1, ' se': 1, 'set': 1, 'et ': 1, 't i': 1, ' is': 1, 'is:': 1, 's:\n': 1, ':\n\n': 1, '\n\t[': 1, '\t[\n': 1, '[\n\t': 1, '\t  ': 5, '  ""': 7, ' ""(': 5, '""((': 3, '(((': 1, '(()': 4, '())': 4, ')))': 1, '))""': 3, ')"",': 4, '"",\n': 4, ',\n\t': 4, '()(': 4, ')()': 4, '))(': 1, '()""': 2, '""()': 2, ')((': 1, ')""\n': 1, '""\n\t': 1, '\n\t]': 1, '\t]\n': 1, ""]\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 2, '):\n': 3, ':\n ': 6, '\n  ': 16, '   ': 92, '  d': 2, ' de': 2, 'def': 2, 'ef ': 2, 'f g': 1, 'teP': 1, 'ePa': 1, 'Par': 1, 'esi': 1, 'sis': 1, 'is(': 1, 's(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', n': 1, ' n)': 1, 'n):': 1, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 1, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e n': 1, ' n:': 2, 'n: ': 1, ': i': 1, ' in': 1, 'int': 1, 'nt\n': 1, 't\n ': 1, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, 'e: ': 1, ': L': 1, ' Li': 1, 'Lis': 1, 'ist': 1, 'st[': 1, 't[s': 1, '[st': 1, 'str': 1, 'tr]': 1, 'r]\n': 1, ']\n ': 1, '""\n\n': 1, '\n\n ': 5, '  r': 2, ' re': 3, 'res': 3, 'esu': 3, 'sul': 3, 'ult': 3, 'lt ': 1, 't =': 1, '= [': 1, ' []': 1, '[]\n': 1, ']\n\n': 1, 'f b': 1, ' ba': 2, 'bac': 4, 'ack': 8, 'ckt': 4, 'ktr': 4, 'tra': 4, 'rac': 4, 'cki': 4, 'kin': 4, 'ing': 4, 'ng(': 4, 'g(S': 3, '(S,': 1, 'S, ': 1, ', l': 3, ' le': 6, 'lef': 5, 'eft': 5, 'ft,': 2, 't, ': 2, ', r': 3, ' ri': 4, 'rig': 4, 'igh': 4, 'ght': 4, 'ht)': 2, '  \t': 7, ' \ti': 3, '\tif': 3, 'if ': 3, 'f l': 2, 'len': 1, 'en(': 1, 'n(S': 1, '(S)': 2, 'S) ': 1, ') =': 1, ' ==': 1, '== ': 1, '= 2': 1, ' 2*': 1, '2*n': 1, '*n:': 1, 'n:\n': 2, ' \t\t': 4, '\t\tr': 2, '\tre': 2, 'lt.': 1, 't.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(S': 1, 'S)\n': 1, ')\n ': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n \n': 1, ' \n\n': 1, 'ft ': 1, 't <': 2, ' < ': 2, '< n': 1, '\t\tb': 2, '\tba': 2, '(S+': 2, ""S+'"": 2, ""+'("": 1, ""'('"": 1, ""(',"": 1, ""', "": 3, 'ft+': 1, 't+1': 2, '+1,': 1, '1, ': 1, 't)\n': 1, ')\n\n': 2, 'f r': 1, 'ht ': 1, '< l': 1, 'ft:': 1, 't:\n': 1, ""+')"": 1, ""')'"": 1, "")',"": 1, 'ht+': 1, '+1)': 1, '1)\n': 1, '  b': 1, ""g('"": 1, ""(''"": 1, ""'',"": 1, ', 0': 2, ' 0,': 1, '0, ': 1, ' 0)': 1, '0)\n': 1, 'n r': 1, 'lt\n': 1}"
Garvit Bansal,23.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{""'''"": 2, 'merge': 1, 'k': 1, 'sorted': 2, 'linked': 1, 'lists': 2, 'and': 3, 'return': 5, 'it': 1, 'as': 1, 'one': 1, 'list.': 1, 'analyze': 1, 'describe': 1, 'its': 1, 'complexity.': 1, 'example:': 1, 'input:': 1, '[': 1, '1->4->5,': 1, '1->3->4,': 1, '2->6': 1, ']': 1, 'output:': 1, '1->1->2->3->4->4->5->6': 1, 'class': 2, 'solution(object):': 2, 'def': 3, 'mergeklists(self,': 2, 'lists):': 2, '""""""': 4, ':type': 2, 'lists:': 4, 'list[listnode]': 2, ':rtype:': 2, 'listnode': 2, 'from': 1, 'heapq': 1, 'import': 1, 'heappush,': 1, 'heappop': 1, 'heap': 1, '=': 18, '[]': 1, 'head': 3, 'point': 3, 'listnode(0)': 2, 'for': 2, 'element': 1, 'in': 2, 'if': 5, 'element:': 1, 'heapq.heappush(heap,': 2, '(element.val,': 1, 'element))': 1, 'while': 3, 'heap:': 1, 'value,': 1, 'node': 2, 'heapq.heappop(heap)': 1, 'head.next': 3, 'listnode(value)': 1, 'node.next': 1, 'node:': 1, '(node.val,': 1, 'node))': 1, 'point.next': 6, '#': 4, 'space:': 2, 'o(k)': 1, 'time:': 2, 'o(n*log(k))': 2, 'merge2lists(l1,': 1, 'l2):': 1, 'l1': 3, 'l2:': 1, 'l1.val': 1, '<=': 1, 'l2.val:': 1, 'listnode(l1.val)': 1, 'l1.next': 1, 'else:': 2, 'listnode(l2.val)': 1, 'l2': 2, 'l2.next': 1, 'l1:': 1, 'not': 1, 'interval': 4, '1': 1, '<': 1, 'len(lists):': 1, 'index': 1, 'range(0,': 1, 'len(lists)': 1, '-': 1, ',interval*2):': 1, 'lists[index]': 1, 'merge2lists(lists[index],': 1, 'lists[index+interval])': 1, '*=': 1, '2': 1, 'lists[0]': 1, 'o(1)': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\t"": 1, '\n\tM': 1, '\tMe': 1, 'Mer': 1, 'erg': 5, 'rge': 5, 'ge ': 1, 'e k': 1, ' k ': 1, 'k s': 1, ' so': 2, 'sor': 2, 'ort': 3, 'rte': 2, 'ted': 2, 'ed ': 3, 'd l': 4, ' li': 12, 'lin': 1, 'ink': 1, 'nke': 1, 'ked': 1, 'lis': 15, 'ist': 30, 'sts': 18, 'ts ': 2, 's a': 1, ' an': 3, 'and': 3, 'nd ': 3, 'd r': 1, ' re': 3, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 5, 'n i': 1, ' it': 2, 'it ': 1, 't a': 1, ' as': 1, 'as ': 1, 's o': 1, ' on': 1, 'one': 1, 'ne ': 1, 'e s': 1, 'st.': 1, 't. ': 1, '. A': 1, ' An': 1, 'Ana': 1, 'nal': 1, 'aly': 1, 'lyz': 1, 'yze': 1, 'ze ': 1, 'e a': 1, 'd d': 1, ' de': 4, 'des': 1, 'esc': 1, 'scr': 1, 'cri': 1, 'rib': 1, 'ibe': 1, 'be ': 1, 'e i': 2, 'its': 1, 's c': 1, ' co': 1, 'com': 1, 'omp': 1, 'mpl': 2, 'ple': 2, 'lex': 1, 'exi': 1, 'xit': 1, 'ity': 1, 'ty.': 1, 'y.\n': 1, '.\n\n': 1, '\n\n\t': 2, '\n\tE': 1, '\tEx': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'le:': 1, 'e:\n': 4, ':\n\n': 1, '\n\tI': 1, '\tIn': 1, 'Inp': 1, 'npu': 1, 'put': 2, 'ut:': 2, 't:\n': 2, ':\n\t': 1, '\n\t[': 1, '\t[\n': 1, '[\n\t': 1, '\n\t ': 3, '\t  ': 3, '  1': 2, ' 1-': 3, '1->': 4, '->4': 4, '>4-': 3, '4->': 3, '->5': 2, '>5,': 1, '5,\n': 1, ',\n\t': 2, '->3': 2, '>3-': 2, '3->': 2, '>4,': 1, '4,\n': 1, '  2': 1, ' 2-': 1, '2->': 2, '->6': 2, '>6\n': 2, '6\n\t': 1, '\n\t]': 1, '\t]\n': 1, ']\n\t': 1, '\n\tO': 1, '\tOu': 1, 'Out': 1, 'utp': 1, 'tpu': 1, 't: ': 1, ': 1': 1, '->1': 1, '>1-': 1, '->2': 1, '>2-': 1, '>5-': 1, '5->': 1, '6\n\n': 1, ""\n\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\nc': 2, '\ncl': 2, 'cla': 2, 'las': 2, 'ass': 2, 'ss ': 2, 's S': 2, ' So': 2, 'Sol': 2, 'olu': 2, 'lut': 2, 'uti': 2, 'tio': 2, 'ion': 2, 'on(': 2, 'n(o': 2, '(ob': 2, 'obj': 2, 'bje': 2, 'jec': 2, 'ect': 2, 'ct)': 2, 't):': 2, '):\n': 7, ':\n ': 17, '\n  ': 47, '   ': 274, '  d': 3, 'def': 3, 'ef ': 3, 'f m': 3, ' me': 4, 'mer': 4, 'geK': 2, 'eKL': 2, 'KLi': 2, 'Lis': 15, 'ts(': 4, 's(s': 2, '(se': 2, 'sel': 2, 'elf': 2, 'lf,': 2, 'f, ': 2, ', l': 5, 'ts)': 4, 's):': 3, '  ""': 4, ' """"': 4, '""""""': 4, '""""\n': 4, '""\n ': 2, '  :': 4, ' :t': 2, ':ty': 2, 'typ': 4, 'ype': 4, 'pe ': 2, 'e l': 3, 'ts:': 4, 's: ': 2, ': L': 4, ' Li': 9, 'st[': 2, 't[L': 2, '[Li': 2, 'stN': 9, 'tNo': 9, 'Nod': 9, 'ode': 15, 'de]': 2, 'e]\n': 2, ']\n ': 3, ' :r': 2, ':rt': 2, 'rty': 2, 'pe:': 2, 'e: ': 6, 'de\n': 2, 'e\n ': 2, '""\n\n': 2, '\n\n ': 10, '  f': 2, ' fr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm h': 1, ' he': 9, 'hea': 20, 'eap': 14, 'apq': 4, 'pq ': 1, 'q i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'rt ': 1, 't h': 1, 'app': 5, 'ppu': 3, 'pus': 3, 'ush': 3, 'sh,': 1, 'h, ': 1, ', h': 1, 'ppo': 2, 'pop': 2, 'op\n': 1, 'p\n\n': 1, '  h': 2, 'ap ': 1, 'p =': 1, ' = ': 18, '= [': 1, ' []': 1, '[]\n': 1, 'ead': 6, 'ad ': 3, 'd =': 3, '= p': 3, ' po': 4, 'poi': 9, 'oin': 9, 'int': 15, 'nt ': 4, 't =': 8, '= L': 5, 'de(': 5, 'e(0': 3, '(0)': 2, '0)\n': 2, ')\n ': 6, ' fo': 1, 'for': 2, 'or ': 2, 'r e': 1, ' el': 3, 'ele': 4, 'lem': 4, 'eme': 4, 'men': 4, 'ent': 4, 't i': 1, ' in': 6, 'in ': 2, 'n l': 3, 's:\n': 2, '  \t': 26, ' \ti': 4, '\tif': 4, 'if ': 5, 'f e': 1, 'nt:': 1, ' \t\t': 12, '\t\th': 2, '\the': 5, 'pq.': 3, 'q.h': 3, '.he': 3, 'sh(': 2, 'h(h': 2, '(he': 3, 'ap,': 2, 'p, ': 2, ', (': 2, ' (e': 1, '(el': 1, 'nt.': 7, 't.v': 1, '.va': 6, 'val': 14, 'al,': 2, 'l, ': 2, ', e': 1, 'nt)': 1, 't))': 1, '))\n': 4, ')\n\n': 4, '  w': 2, ' wh': 2, 'whi': 3, 'hil': 3, 'ile': 3, 'le ': 3, 'e h': 1, 'ap:': 1, 'p:\n': 1, ' \tv': 1, '\tva': 1, 'alu': 2, 'lue': 2, 'ue,': 1, 'e, ': 1, ', n': 2, ' no': 5, 'nod': 6, 'de ': 2, 'e =': 2, '= h': 2, 'op(': 1, 'p(h': 1, 'ap)': 1, 'p)\n': 1, ' \th': 3, 'ad.': 3, 'd.n': 3, '.ne': 12, 'nex': 12, 'ext': 12, 'xt ': 5, 'e(v': 1, '(va': 1, 'ue)': 1, 'e)\n': 1, 'xt\n': 7, 't\n ': 4, ' \tn': 1, '\tno': 1, '= n': 1, 'de.': 2, 'e.n': 1, 'f n': 2, 'de:': 1, ' (n': 1, '(no': 1, 'e.v': 1, 'de)': 1, 'e))': 1, '  r': 2, 'n p': 1, 't.n': 6, 't\n\n': 3, '\n\n#': 2, '\n# ': 4, '# S': 2, ' Sp': 2, 'Spa': 2, 'pac': 2, 'ace': 2, 'ce:': 2, ': O': 4, ' O(': 4, 'O(K': 1, '(K)': 2, 'K)\n': 1, ')\n#': 2, '# T': 2, ' Ti': 2, 'Tim': 2, 'ime': 2, 'me:': 2, 'O(N': 2, '(N*': 2, 'N*l': 2, '*lo': 2, 'log': 2, 'og(': 2, 'g(K': 1, 'K))': 1, 'ge2': 2, 'e2L': 2, '2Li': 2, 's(l': 2, '(l1': 2, 'l1,': 1, '1, ': 1, ' l2': 5, 'l2)': 1, '2):': 2, ' \tw': 1, '\twh': 1, ' l1': 5, 'l1 ': 2, '1 a': 1, 'l2:': 1, '2:\n': 1, '\t\ti': 1, 'f l': 2, 'l1.': 3, '1.v': 2, 'al ': 5, 'l <': 2, ' <=': 1, '<= ': 1, '= l': 5, 'l2.': 3, '2.v': 2, 'al:': 1, 'l:\n': 1, '\t\t\t': 4, '\t\tp': 5, '\tpo': 5, 'e(l': 2, 'al)': 2, 'l)\n': 2, '\t\tl': 3, '\tl1': 1, '1 =': 1, '1.n': 1, '\t\te': 1, '\tel': 2, 'els': 2, 'lse': 2, 'se:': 2, '(l2': 1, '\tl2': 1, 'l2 ': 1, '2 =': 1, '2.n': 1, 'l1:': 1, '1:\n': 1, 'l1\n': 1, '1\n ': 2, ' \te': 1, 'l2\n': 1, '2\n ': 1, ' \tr': 2, '\tre': 2, 'n h': 1, '  i': 2, ' if': 1, 'not': 1, 'ot ': 1, 't l': 1, 'ts\n': 1, 's\n\n': 1, 'nte': 6, 'ter': 6, 'erv': 6, 'rva': 6, 'l =': 1, '= 1': 1, ' 1\n': 1, ' < ': 1, '< l': 1, ' le': 2, 'len': 2, 'en(': 2, 'n(l': 2, '(li': 3, ' \tf': 1, '\tfo': 1, 'r i': 1, 'ind': 4, 'nde': 4, 'dex': 4, 'ex ': 1, 'x i': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, '(0,': 1, '0, ': 1, 's) ': 1, ') -': 1, ' - ': 1, '- i': 1, 'l ,': 1, ' ,i': 1, ',in': 1, 'al*': 1, 'l*2': 1, '*2)': 1, '\tli': 1, 'ts[': 4, 's[i': 3, '[in': 3, 'ex]': 2, 'x] ': 1, '] =': 1, '= m': 1, 'x],': 1, '], ': 1, 'ex+': 1, 'x+i': 1, '+in': 1, 'al]': 1, 'l])': 1, '])\n': 1, '\tin': 1, 'l *': 1, ' *=': 1, '*= ': 1, '= 2': 1, ' 2\n': 1, '2\n\n': 1, 's[0': 1, '[0]': 1, '0]\n': 1, ']\n\n': 1, '\n\n\n': 2, 'g(k': 1, '(k)': 1, 'k))': 1, 'O(1': 1, '(1)': 1, '1)\n': 1}"
Garvit Bansal,24.py,"[0.1304, 0.2033, 0.1306, 0.0757, 0.0095, 0.0968, 0.3493, 0.1598, 0.0399, 0.0669, 0.0504, 0.2585, 0.3612, 0.0552, 0.1984, 0.0932, 0.1159, 0.0605, 0.2925, 0.3197, 0.1163, 0.1891, 0.0208, 0.198, 0.1916, 0.0725]","[0.0425, 0.4343, 0.1629, 0.1523, 0.1582, 0.117, 0.2369, 0.0583, 0.1195, 0.1047, 0.0582, 0.285, 0.0547, 0.0969, 0.1697, 0.2841, 0.0087, 0.4232, 0.1347, 0.1646, 0.171, 0.1163, 0.0044, 0.0355, 0.0605, 0.1564, 0.1021, 0.1206, 0.0753, 0.1711, 0.0158, 0.0566, 0.0249, 0.0175, 0.1694, 0.2008, 0.1216, 0.2297, 0.1314, 0.1782, 0.0731, 0.2395, 0.0399, 0.0532, 0.1231, 0.2063]","[0.0718, 0.0256, 0.0647, 0.1901, 0.1869, 0.1697, 0.282, 0.3454, 0.1076, 0.0284, 0.2822, 0.1171, 0.2219, 0.0931, 0.0028, 0.0863, 0.0282, 0.0876, 0.1666, 0.0705, 0.1549, 0.136, 0.127, 0.1445, 0.1966, 0.0979, 0.0092, 0.0505, 0.0003, 0.0293, 0.0933, 0.1966]","[0.1636, 0.0683, 0.1786, 0.2766, 0.0812, 0.2095, 0.0903, 0.2449, 0.2352, 0.1178, 0.1229, 0.1556, 0.104, 0.1075, 0.0267, 0.1381, 0.0565, 0.0101, 0.1144, 0.2519, 0.2842, 0.0084, 0.0591, 0.0614, 0.2053, 0.1904, 0.0052, 0.0078, 0.2985, 0.1136, 0.0558]","{""'''"": 2, 'given': 2, 'a': 1, 'linked': 1, 'list,': 1, 'swap': 1, 'every': 1, 'two': 1, 'adjacent': 1, 'nodes': 1, 'and': 2, 'return': 4, 'its': 1, 'head.': 1, 'example:': 1, '1->2->3->4,': 1, 'you': 1, 'should': 1, 'the': 1, 'list': 1, 'as': 1, '2->1->4->3.': 1, '#': 5, 'definition': 1, 'for': 1, 'singly-linked': 1, 'list.': 1, 'class': 2, 'listnode(object):': 1, 'def': 2, '__init__(self,': 1, 'x):': 1, 'self.val': 1, '=': 5, 'x': 1, 'self.next': 1, 'none': 2, 'solution(object):': 1, 'swappairs(self,': 1, 'head):': 1, '""""""': 2, ':type': 1, 'head:': 1, 'listnode': 2, ':rtype:': 1, 'if': 1, 'head': 4, 'is': 3, 'none:': 2, 'ref': 3, 'while': 1, 'not': 2, 'ref.next': 1, 'ref.val,': 1, 'ref.next.val': 1, 'ref.next.val,': 1, 'ref.val': 1, 'ref.next.next': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\t"": 1, '\n\tG': 2, '\tGi': 2, 'Giv': 2, 'ive': 2, 'ven': 2, 'en ': 2, 'n a': 1, ' a ': 1, 'a l': 1, ' li': 4, 'lin': 2, 'ink': 2, 'nke': 2, 'ked': 2, 'ed ': 2, 'd l': 2, 'lis': 3, 'ist': 6, 'st,': 1, 't, ': 1, ', s': 1, ' sw': 2, 'swa': 2, 'wap': 2, 'ap ': 1, 'p e': 1, ' ev': 1, 'eve': 1, 'ver': 1, 'ery': 1, 'ry ': 1, 'y t': 1, ' tw': 1, 'two': 1, 'wo ': 1, 'o a': 1, ' ad': 1, 'adj': 1, 'dja': 1, 'jac': 1, 'ace': 1, 'cen': 1, 'ent': 1, 'nt ': 1, 't n': 1, ' no': 3, 'nod': 1, 'ode': 4, 'des': 1, 'es ': 1, 's a': 1, ' an': 2, 'and': 2, 'nd ': 2, 'd r': 3, ' re': 13, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 4, 'n i': 1, ' it': 1, 'its': 1, 'ts ': 1, 's h': 1, ' he': 7, 'hea': 7, 'ead': 7, 'ad.': 1, 'd.\n': 1, '.\n\n': 1, '\n\n\t': 2, '\n\tE': 1, '\tEx': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le:': 1, 'e:\n': 3, ':\n\n': 1, 'n 1': 1, ' 1-': 1, '1->': 2, '->2': 1, '>2-': 1, '2->': 2, '->3': 2, '>3-': 1, '3->': 1, '->4': 2, '>4,': 1, '4, ': 1, ', y': 1, ' yo': 1, 'you': 1, 'ou ': 1, 'u s': 1, ' sh': 1, 'sho': 1, 'hou': 1, 'oul': 1, 'uld': 1, 'ld ': 1, 'n t': 1, ' th': 1, 'the': 1, 'he ': 1, 'e l': 1, 'st ': 1, 't a': 1, ' as': 1, 'as ': 1, 's 2': 1, ' 2-': 1, '->1': 1, '>1-': 1, '>4-': 1, '4->': 1, '>3.': 1, '3.\n': 1, "".\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\n#': 1, '\n# ': 5, '# D': 1, ' De': 1, 'Def': 1, 'efi': 1, 'fin': 1, 'ini': 2, 'nit': 2, 'iti': 1, 'tio': 2, 'ion': 2, 'on ': 1, 'n f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r s': 1, ' si': 1, 'sin': 1, 'ing': 1, 'ngl': 1, 'gly': 1, 'ly-': 1, 'y-l': 1, '-li': 1, 'st.': 1, 't.\n': 1, '.\n#': 1, '# c': 1, ' cl': 1, 'cla': 2, 'las': 2, 'ass': 2, 'ss ': 2, 's L': 1, ' Li': 3, 'Lis': 3, 'stN': 3, 'tNo': 3, 'Nod': 3, 'de(': 1, 'e(o': 1, '(ob': 2, 'obj': 2, 'bje': 2, 'jec': 2, 'ect': 2, 'ct)': 2, 't):': 2, '):\n': 4, ':\n#': 2, '#  ': 3, '   ': 125, '  d': 2, ' de': 2, 'def': 2, 'ef ': 5, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 2, 'sel': 4, 'elf': 4, 'lf,': 2, 'f, ': 2, ', x': 1, ' x)': 1, 'x):': 1, '  s': 2, ' se': 2, 'lf.': 2, 'f.v': 3, '.va': 5, 'val': 5, 'al ': 2, 'l =': 2, ' = ': 5, '= x': 1, ' x\n': 1, 'x\n#': 1, 'f.n': 5, '.ne': 6, 'nex': 6, 'ext': 6, 'xt ': 2, 't =': 1, '= N': 1, ' No': 4, 'Non': 4, 'one': 4, 'ne\n': 1, 'e\n\n': 1, '\n\nc': 1, '\ncl': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'on(': 1, 'n(o': 1, ':\n ': 4, '\n  ': 16, 'f s': 1, 'apP': 1, 'pPa': 1, 'Pai': 1, 'air': 1, 'irs': 1, 'rs(': 1, 's(s': 1, ', h': 1, 'ad)': 1, 'd):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e h': 1, 'ad:': 1, 'd: ': 1, ': L': 2, 'de\n': 2, 'e\n ': 2, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, 'e: ': 1, '  \n': 4, ' \n ': 4, '  i': 1, ' if': 1, 'if ': 1, 'f h': 1, 'ad ': 1, 'd i': 1, ' is': 3, 'is ': 3, 's N': 1, 'ne:': 2, '  r': 5, 'n h': 2, 'ad\n': 3, 'd\n ': 2, 'ref': 9, 'f =': 2, '= h': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e r': 1, 'f i': 1, 's n': 2, 'not': 2, 'ot ': 2, 't N': 2, 'ne ': 1, 'e a': 1, 'ef.': 6, 't i': 1, 'al,': 2, 'l, ': 2, ', r': 2, 'xt.': 3, 't.v': 2, '= r': 2, 'al\n': 1, 'l\n ': 1, 't.n': 1, 'xt\n': 1, 't\n ': 1}"
Garvit Bansal,25.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 2, 'given': 2, 'a': 5, 'linked': 4, 'list,': 1, 'reverse': 1, 'the': 6, 'nodes': 3, 'of': 4, 'list': 1, 'k': 5, 'at': 1, 'time': 1, 'and': 4, 'return': 3, 'its': 1, 'modified': 1, 'list.': 3, 'is': 3, 'positive': 1, 'integer': 1, 'less': 1, 'than': 1, 'or': 1, 'equal': 1, 'to': 1, 'length': 1, 'if': 3, 'number': 1, 'not': 2, 'multiple': 1, 'then': 1, 'left-out': 1, 'in': 2, 'end': 1, 'should': 3, 'remain': 1, 'as': 1, 'it': 1, 'is.': 1, 'example:': 1, 'this': 1, 'list:': 1, '1->2->3->4->5': 1, 'for': 4, '=': 8, '2,': 1, 'you': 2, 'return:': 2, '2->1->4->3->5': 1, '3,': 1, '3->2->1->4->5': 1, '#': 8, 'definition': 1, 'singly-linked': 1, 'class': 2, 'listnode(object):': 1, 'def': 2, '__init__(self,': 1, 'x):': 1, 'self.val': 1, 'x': 1, 'self.next': 1, 'none': 1, 'solution(object):': 1, 'reversekgroup(self,': 1, 'head,': 1, 'k):': 1, 'head:': 1, 'slow': 4, 'head': 3, 'mover': 1, 'while': 2, 'slow:': 1, 'group': 1, '[]': 1, 'len(group)': 2, '<': 2, 'k:': 2, 'group.append(slow)': 1, 'slow.next': 1, 'i': 1, 'range(k/2):': 1, 'print(i,k-i-1)': 1, 'group[i].val,group[k-i-1].val': 1, 'group[k-i-1].val,group[i].val': 1, 'space:': 1, 'o(k)': 1, 'time:': 1, 'o(n)': 1}","{""'''"": 2, ""''\n"": 2, ""'\n "": 1, '\n  ': 20, '   ': 217, '  G': 2, ' Gi': 2, 'Giv': 2, 'ive': 3, 'ven': 2, 'en ': 3, 'n a': 2, ' a ': 5, 'a l': 2, ' li': 10, 'lin': 5, 'ink': 5, 'nke': 5, 'ked': 5, 'ed ': 6, 'd l': 8, 'lis': 6, 'ist': 7, 'st,': 1, 't, ': 1, ', r': 1, ' re': 8, 'rev': 2, 'eve': 2, 'ver': 3, 'ers': 2, 'rse': 2, 'se ': 1, 'e t': 1, ' th': 9, 'the': 7, 'he ': 6, 'e n': 2, ' no': 5, 'nod': 3, 'ode': 4, 'des': 3, 'es ': 3, 's o': 1, ' of': 4, 'of ': 4, 'f a': 1, 'st ': 1, 't k': 1, ' k ': 5, 'k a': 1, ' at': 1, 'at ': 1, 't a': 2, 'a t': 1, ' ti': 1, 'tim': 1, 'ime': 2, 'me ': 1, 'e a': 1, ' an': 4, 'and': 4, 'nd ': 5, 'd r': 4, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 3, 'n i': 1, ' it': 2, 'its': 1, 'ts ': 1, 's m': 1, ' mo': 2, 'mod': 1, 'odi': 1, 'dif': 1, 'ifi': 1, 'fie': 1, 'ied': 1, 'st.': 3, 't.\n': 2, '.\n\n': 2, '\n\n ': 5, '  k': 1, 'k i': 1, ' is': 4, 'is ': 4, 's a': 1, 'a p': 1, ' po': 1, 'pos': 1, 'osi': 1, 'sit': 1, 'iti': 2, 'tiv': 1, 've ': 1, 'e i': 1, ' in': 3, 'int': 2, 'nte': 1, 'teg': 1, 'ege': 1, 'ger': 1, 'er ': 2, 'r a': 1, 'd i': 1, 's l': 2, ' le': 5, 'les': 1, 'ess': 1, 'ss ': 3, 's t': 1, 'tha': 1, 'han': 1, 'an ': 1, 'n o': 1, ' or': 1, 'or ': 5, 'r e': 1, ' eq': 1, 'equ': 1, 'qua': 1, 'ual': 1, 'al ': 3, 'l t': 1, ' to': 1, 'to ': 1, 'o t': 1, 'e l': 2, 'len': 3, 'eng': 1, 'ngt': 1, 'gth': 1, 'th ': 1, 'h o': 1, 'f t': 2, 't. ': 1, '. I': 1, ' If': 1, 'If ': 1, ' nu': 1, 'num': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'r o': 1, 'f n': 2, 's i': 3, 's n': 1, 'not': 2, 'ot ': 2, 'a m': 1, ' mu': 1, 'mul': 1, 'ult': 1, 'lti': 1, 'tip': 1, 'ipl': 1, 'ple': 2, 'le ': 3, 'e o': 1, 'f k': 1, 'k t': 1, 'hen': 1, 'n l': 1, 'lef': 1, 'eft': 1, 'ft-': 1, 't-o': 1, '-ou': 1, 'out': 1, 'ut ': 1, 't n': 1, 'in ': 3, 'n t': 2, 'e e': 1, ' en': 1, 'end': 2, 'd s': 1, ' sh': 3, 'sho': 3, 'hou': 3, 'oul': 3, 'uld': 3, 'ld ': 3, 'rem': 1, 'ema': 1, 'mai': 1, 'ain': 1, ' as': 1, 'as ': 1, 'it ': 1, 't i': 1, 'is.': 1, 's.\n': 1, '  E': 1, ' Ex': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'le:': 1, 'e:\n': 1, ':\n\n': 1, 'thi': 1, 'his': 1, 'st:': 1, 't: ': 1, ': 1': 1, ' 1-': 1, '1->': 3, '->2': 2, '>2-': 2, '2->': 3, '->3': 2, '>3-': 2, '3->': 3, '->4': 3, '>4-': 3, '4->': 3, '->5': 3, '>5\n': 3, '5\n\n': 2, '  F': 2, ' Fo': 2, 'For': 2, 'r k': 2, 'k =': 2, ' = ': 8, '= 2': 1, ' 2,': 1, '2, ': 1, ', y': 2, ' yo': 2, 'you': 2, 'ou ': 2, 'u s': 2, 'rn:': 2, 'n: ': 2, ': 2': 1, ' 2-': 1, '->1': 2, '>1-': 2, '= 3': 1, ' 3,': 1, '3, ': 1, ': 3': 1, ' 3-': 1, ""5\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\n#': 2, '\n# ': 7, '# D': 1, ' De': 1, 'Def': 1, 'efi': 1, 'fin': 1, 'ini': 2, 'nit': 2, 'tio': 2, 'ion': 2, 'on ': 1, 'n f': 1, ' fo': 2, 'for': 2, 'r s': 1, ' si': 1, 'sin': 1, 'ing': 1, 'ngl': 1, 'gly': 1, 'ly-': 1, 'y-l': 1, '-li': 1, '.\n#': 1, '# c': 1, ' cl': 1, 'cla': 2, 'las': 2, 'ass': 2, 's L': 1, ' Li': 1, 'Lis': 1, 'stN': 1, 'tNo': 1, 'Nod': 1, 'de(': 1, 'e(o': 1, '(ob': 2, 'obj': 2, 'bje': 2, 'jec': 2, 'ect': 2, 'ct)': 2, 't):': 2, '):\n': 5, ':\n#': 2, '#  ': 3, '  d': 2, ' de': 2, 'def': 2, 'ef ': 2, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 2, 'sel': 4, 'elf': 4, 'lf,': 2, 'f, ': 2, ', x': 1, ' x)': 1, 'x):': 1, '  s': 4, ' se': 2, 'lf.': 2, 'f.v': 1, '.va': 5, 'val': 5, 'l =': 2, '= x': 1, ' x\n': 1, 'x\n#': 1, 'f.n': 1, '.ne': 2, 'nex': 2, 'ext': 2, 'xt ': 1, 't =': 1, '= N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne\n': 1, 'e\n\n': 1, '\n\nc': 1, '\ncl': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'on(': 1, 'n(o': 1, ':\n ': 7, 'f r': 1, 'seK': 1, 'eKG': 1, 'KGr': 1, 'Gro': 1, 'rou': 9, 'oup': 9, 'up(': 1, 'p(s': 1, ', h': 1, ' he': 5, 'hea': 5, 'ead': 5, 'ad,': 1, 'd, ': 1, ', k': 1, ' k)': 1, 'k):': 1, '  i': 2, ' if': 2, 'if ': 2, 'f h': 1, 'ad:': 1, 'd:\n': 1, ' sl': 6, 'slo': 7, 'low': 7, 'ow ': 4, 'w =': 2, '= h': 1, 'ad ': 1, 'd #': 1, ' # ': 1, '# t': 1, 'e m': 1, 'mov': 1, 'ove': 1, 'er\n': 1, 'r\n ': 1, '  w': 2, ' wh': 2, 'whi': 2, 'hil': 2, 'ile': 2, 'e s': 2, 'ow:': 1, 'w:\n': 1, '  g': 3, ' gr': 4, 'gro': 8, 'up ': 1, 'p =': 1, '= [': 1, ' []': 1, '[]\n': 1, ']\n ': 1, 'w a': 2, 'en(': 2, 'n(g': 2, '(gr': 2, 'up)': 2, 'p) ': 2, ') <': 2, ' < ': 2, '< k': 2, ' k:': 2, 'k:\n': 2, 'up.': 1, 'p.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'nd(': 1, 'd(s': 1, '(sl': 1, 'ow)': 1, 'w)\n': 1, ')\n ': 2, '= s': 1, 'ow.': 1, 'w.n': 1, 'xt\n': 1, 't\n ': 1, 't s': 1, '  r': 2, 'n h': 2, 'ad\n': 2, 'd\n ': 1, '  f': 1, 'r i': 1, ' i ': 1, 'i i': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(k': 1, '(k/': 1, 'k/2': 1, '/2)': 1, '2):': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 'nt(': 1, 't(i': 1, '(i,': 1, 'i,k': 1, ',k-': 1, 'k-i': 3, '-i-': 3, 'i-1': 3, '-1)': 1, '1)\n': 1, 'up[': 4, 'p[i': 2, '[i]': 2, 'i].': 2, '].v': 4, 'al,': 2, 'l,g': 2, ',gr': 2, 'p[k': 2, '[k-': 2, '-1]': 2, '1].': 2, '= g': 1, 'al\n': 1, 'l\n ': 1, 'd\n\n': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, 'e: ': 2, ': O': 2, ' O(': 2, 'O(k': 1, '(k)': 1, 'k)\n': 1, ')\n#': 1, '# T': 1, ' Ti': 1, 'Tim': 1, 'me:': 1, 'O(N': 1, '(N)': 1, 'N)\n': 1}"
Garvit Bansal,26.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 2, 'given': 2, 'a': 1, 'sorted': 1, 'array': 2, 'nums,': 1, 'remove': 1, 'the': 5, 'duplicates': 1, 'in-place': 2, 'such': 1, 'that': 1, 'each': 1, 'element': 1, 'appear': 1, 'only': 1, 'once': 1, 'and': 2, 'return': 4, 'new': 1, 'length.': 2, 'do': 2, 'not': 2, 'allocate': 1, 'extra': 2, 'space': 1, 'for': 2, 'another': 1, 'array,': 1, 'you': 2, 'must': 1, 'this': 1, 'by': 1, 'modifying': 1, 'input': 1, 'with': 2, 'o(1)': 1, 'memory.': 1, 'example': 1, '1:': 1, 'nums': 2, '=': 4, '[1,1,2],': 1, 'your': 1, 'function': 1, 'should': 1, 'length': 1, '2,': 1, 'first': 1, 'two': 1, 'elements': 1, 'of': 1, 'being': 1, '1': 3, '2': 1, 'respectively.': 1, 'it': 1, ""doesn't"": 1, 'matter': 1, 'what': 1, 'leave': 1, 'beyond': 1, 'returned': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'removeduplicates(self,': 1, 'nums):': 1, '""""""': 2, ':type': 1, 'nums:': 2, 'list[int]': 1, ':rtype:': 1, 'int': 1, 'if': 2, '0': 2, 'index_i': 3, 'index_j': 1, 'in': 1, 'range(1,': 1, 'len(nums)):': 1, 'nums[index_i]': 2, '!=': 1, 'nums[index_j]:': 1, '+=': 1, 'nums[index_j]': 1, '+': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\n"": 2, '\n\n\t': 6, '\n\tG': 2, '\tGi': 2, 'Giv': 2, 'ive': 3, 'ven': 2, 'en ': 2, 'n a': 1, ' a ': 1, 'a s': 2, ' so': 1, 'sor': 1, 'ort': 1, 'rte': 1, 'ted': 1, 'ed ': 2, 'd a': 1, ' ar': 3, 'arr': 3, 'rra': 3, 'ray': 3, 'ay ': 2, 'y n': 1, ' nu': 9, 'num': 11, 'ums': 11, 'ms,': 1, 's, ': 1, ', r': 1, ' re': 7, 'rem': 2, 'emo': 3, 'mov': 2, 'ove': 2, 've ': 2, 'e t': 1, ' th': 7, 'the': 6, 'he ': 5, 'e d': 1, ' du': 1, 'dup': 1, 'upl': 2, 'pli': 2, 'lic': 2, 'ica': 2, 'cat': 3, 'ate': 3, 'tes': 2, 'es ': 1, 's i': 1, ' in': 8, 'in-': 2, 'n-p': 2, '-pl': 2, 'pla': 2, 'lac': 2, 'ace': 3, 'ce ': 4, 'e s': 1, ' su': 1, 'suc': 1, 'uch': 1, 'ch ': 2, 'h t': 2, 'tha': 1, 'hat': 2, 'at ': 2, 't e': 1, ' ea': 1, 'eac': 1, 'ach': 1, 'h e': 1, ' el': 2, 'ele': 2, 'lem': 2, 'eme': 2, 'men': 2, 'ent': 2, 'nt ': 1, 't a': 3, ' ap': 1, 'app': 1, 'ppe': 1, 'pea': 1, 'ear': 1, 'ar ': 1, 'r o': 1, ' on': 2, 'onl': 1, 'nly': 1, 'ly ': 1, 'y o': 1, 'onc': 1, 'nce': 1, 'e a': 1, ' an': 3, 'and': 2, 'nd ': 3, 'd r': 2, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 4, 'n t': 1, 'e n': 2, ' ne': 1, 'new': 1, 'ew ': 1, 'w l': 1, ' le': 5, 'len': 4, 'eng': 3, 'ngt': 3, 'gth': 3, 'th.': 2, 'h.\n': 2, '.\n\n': 4, '\n\tD': 1, '\tDo': 1, 'Do ': 1, 'o n': 1, ' no': 2, 'not': 3, 'ot ': 2, ' al': 1, 'all': 1, 'llo': 1, 'loc': 1, 'oca': 1, 'te ': 1, 'e e': 1, ' ex': 2, 'ext': 2, 'xtr': 2, 'tra': 2, 'ra ': 2, ' sp': 1, 'spa': 1, 'pac': 1, 'e f': 2, ' fo': 2, 'for': 2, 'or ': 2, 'r a': 2, 'ano': 1, 'oth': 1, 'her': 1, 'er ': 2, 'ay,': 1, 'y, ': 1, ', y': 1, ' yo': 2, 'you': 2, 'ou ': 2, 'u m': 1, ' mu': 1, 'mus': 1, 'ust': 1, 'st ': 2, 't d': 2, ' do': 2, 'do ': 1, 'o t': 1, 'thi': 1, 'his': 1, 'is ': 1, 's b': 2, ' by': 1, 'by ': 1, 'y m': 1, ' mo': 1, 'mod': 1, 'odi': 1, 'dif': 1, 'ify': 1, 'fyi': 1, 'yin': 1, 'ing': 2, 'ng ': 2, 'g t': 1, 'e i': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut ': 1, 'y i': 1, 'e w': 1, ' wi': 2, 'wit': 2, 'ith': 2, 'th ': 3, 'h O': 1, ' O(': 1, 'O(1': 1, '(1)': 1, '1) ': 1, ') e': 1, 'a m': 1, ' me': 1, 'mem': 1, 'mor': 1, 'ory': 1, 'ry.': 1, 'y.\n': 2, '\n\tE': 1, '\tEx': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le ': 1, 'e 1': 1, ' 1:': 1, '1:\n': 1, ':\n\n': 1, 'n n': 1, 'ms ': 2, 's =': 1, ' = ': 4, '= [': 1, ' [1': 1, '[1,': 1, '1,1': 1, ',1,': 1, '1,2': 1, ',2]': 1, '2],': 1, '],\n': 1, ',\n\n': 1, '\n\tY': 1, '\tYo': 1, 'You': 1, 'our': 1, 'ur ': 1, 'r f': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 2, 'tio': 2, 'ion': 2, 'on ': 1, 'n s': 1, ' sh': 1, 'sho': 1, 'hou': 1, 'oul': 1, 'uld': 1, 'ld ': 1, 'n l': 1, 'h =': 1, '= 2': 1, ' 2,': 1, '2, ': 1, ', w': 1, ' fi': 1, 'fir': 1, 'irs': 1, 'rst': 1, 't t': 1, ' tw': 1, 'two': 1, 'wo ': 1, 'o e': 1, 'nts': 1, 'ts ': 1, 's o': 1, ' of': 1, 'of ': 1, 'f n': 3, ' be': 2, 'bei': 1, 'ein': 1, 'g 1': 1, ' 1 ': 1, '1 a': 1, 'd 2': 1, ' 2 ': 1, '2 r': 1, 'res': 1, 'esp': 1, 'spe': 1, 'pec': 1, 'ect': 2, 'tiv': 1, 'vel': 1, 'ely': 1, 'ly.': 1, '\n\tI': 1, '\tIt': 1, 'It ': 1, 'doe': 1, 'oes': 1, 'esn': 1, ""sn'"": 1, ""n't"": 1, ""'t "": 1, 't m': 1, ' ma': 1, 'mat': 1, 'att': 1, 'tte': 1, 'ter': 1, 'r w': 1, ' wh': 1, 'wha': 1, 't y': 1, 'u l': 1, 'lea': 1, 'eav': 1, 'ave': 1, 'e b': 1, 'bey': 1, 'eyo': 1, 'yon': 1, 'ond': 1, 'd t': 1, 'e r': 1, 'rne': 1, 'ned': 1, 'd l': 1, ""\n\n'"": 1, ""\n''"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ct)': 1, 't):': 1, '):\n': 3, ':\n ': 5, '\n  ': 14, '   ': 80, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'f r': 1, 'veD': 1, 'eDu': 1, 'Dup': 1, 'es(': 1, 's(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', n': 1, 'ms)': 2, 's):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'ms:': 2, 's: ': 1, ': L': 1, ' Li': 1, 'Lis': 1, 'ist': 1, 'st[': 1, 't[i': 1, '[in': 5, 'int': 2, 'nt]': 1, 't]\n': 1, ']\n ': 1, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, 'e: ': 1, ': i': 1, 'nt\n': 1, 't\n ': 1, '  i': 2, ' if': 1, 'if ': 2, 't n': 1, 's:\n': 1, '  \t': 5, ' \tr': 1, '\tre': 1, 'n 0': 1, ' 0\n': 2, '0\n ': 1, ' \t\n': 1, '\t\n ': 1, 'ind': 8, 'nde': 8, 'dex': 8, 'ex_': 8, 'x_i': 5, '_i ': 3, 'i =': 1, '= 0': 1, '0\n\n': 1, '\n\n ': 2, '  f': 1, 'r i': 1, 'x_j': 3, '_j ': 1, 'j i': 1, 'in ': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(1': 1, '(1,': 1, '1, ': 1, ', l': 1, 'en(': 1, 'n(n': 1, '(nu': 1, 's))': 1, ')):': 1, ' \ti': 1, '\tif': 1, 'ms[': 4, 's[i': 4, '_i]': 2, 'i] ': 2, '] !': 1, ' !=': 1, '!= ': 1, '= n': 2, '_j]': 2, 'j]:': 1, ']:\n': 1, ' \t\t': 2, '\t\ti': 1, '\tin': 1, 'i +': 2, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 2, '1\n ': 1, '\t\tn': 1, '\tnu': 1, '] =': 1, 'j]\n': 1, ']\n\n': 1, '  r': 1, 'n i': 1, ' + ': 1, '+ 1': 1}"
Garvit Bansal,30.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 2, 'you': 1, 'are': 3, 'given': 1, 'a': 3, 'string,': 1, 's,': 2, 'and': 4, 'list': 1, 'of': 4, 'words,': 2, 'that': 2, 'all': 2, 'the': 2, 'same': 1, 'length.': 1, 'find': 1, 'starting': 2, 'indices': 1, 'substring(s)': 1, 'in': 7, 's': 4, 'is': 2, 'concatenation': 1, 'each': 1, 'word': 6, 'words': 3, 'exactly': 1, 'once': 1, 'without': 1, 'any': 1, 'intervening': 1, 'characters.': 1, 'example': 2, '1:': 1, 'input:': 2, '=': 12, '""barfoothefoobarman"",': 1, '[""foo"",""bar""]': 1, 'output:': 2, '[0,9]': 1, 'explanation:': 1, 'substrings': 1, 'at': 1, 'index': 3, '0': 2, '9': 1, '""barfoor""': 1, '""foobar""': 1, 'respectively.': 1, 'output': 1, 'order': 1, 'does': 1, 'not': 3, 'matter,': 1, 'returning': 1, '[9,0]': 1, 'fine': 1, 'too.': 1, '2:': 1, '""wordgoodstudentgoodword"",': 1, '[""word"",""student""]': 1, '[]': 3, 'class': 1, 'solution(object):': 1, 'def': 1, 'findsubstring(self,': 1, 'words):': 1, '""""""': 2, ':type': 2, 's:': 1, 'str': 1, 'words:': 3, 'list[str]': 1, ':rtype:': 1, 'list[int]': 1, 'if': 6, 'or': 1, 'return': 2, 'counts': 1, '{}': 2, 'for': 2, 'counts:': 2, 'counts[word]': 2, '+=': 3, '1': 5, 'else:': 3, 'result': 2, 'n,': 1, 'numofwords,': 1, 'fixlen': 2, 'len(s),': 1, 'len(words),': 1, 'len(words[0])': 1, 'range(0,': 1, 'n': 1, '-': 1, 'numofwords': 1, '*': 3, '+': 4, '1):': 1, 'seen': 1, 'index_j': 5, 'while': 1, '<': 1, 'numofwords:': 2, 's[index': 1, 'fixlen:': 1, '(index_j': 1, '1)': 1, 'fixlen]': 1, 'seen:': 1, 'seen[word]': 3, '>': 1, 'counts[word]:': 1, 'break': 2, '==': 1, 'result.append(index)': 1, '#': 2, 'time:': 1, 'o(n^2)': 1, 'space:': 1, 'o(n)': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\t"": 1, '\n\tY': 1, '\tYo': 1, 'You': 1, 'ou ': 1, 'u a': 1, ' ar': 3, 'are': 3, 're ': 3, 'e g': 1, ' gi': 1, 'giv': 1, 'ive': 2, 'ven': 2, 'en ': 4, 'n a': 1, ' a ': 3, 'a s': 1, ' st': 4, 'str': 6, 'tri': 4, 'rin': 4, 'ing': 8, 'ng,': 1, 'g, ': 1, ', s': 2, ' s,': 2, 's, ': 5, ', a': 1, ' an': 5, 'and': 4, 'nd ': 5, 'd a': 2, 'a l': 1, ' li': 1, 'lis': 1, 'ist': 3, 'st ': 1, 't o': 2, ' of': 4, 'of ': 4, 'f w': 4, ' wo': 15, 'wor': 26, 'ord': 31, 'rds': 15, 'ds,': 3, ', w': 2, ', t': 1, ' th': 3, 'tha': 2, 'hat': 2, 'at ': 3, 't a': 2, 'e a': 2, ' al': 2, 'all': 2, 'll ': 2, 'l o': 1, 'f t': 1, 'the': 2, 'he ': 2, 'e s': 2, ' sa': 1, 'sam': 1, 'ame': 1, 'me ': 1, 'e l': 1, ' le': 4, 'len': 4, 'eng': 1, 'ngt': 1, 'gth': 1, 'th.': 1, 'h. ': 1, '. F': 1, ' Fi': 1, 'Fin': 1, 'ind': 14, 'l s': 1, 'sta': 2, 'tar': 2, 'art': 2, 'rti': 2, 'tin': 2, 'ng ': 4, 'g i': 1, ' in': 17, 'ndi': 1, 'dic': 1, 'ice': 1, 'ces': 1, 'es ': 2, 's o': 2, 'f s': 2, ' su': 1, 'sub': 1, 'ubs': 3, 'bst': 3, 'ng(': 2, 'g(s': 2, '(s)': 2, 's) ': 1, ') i': 1, 'in ': 7, 'n s': 2, ' s ': 4, 's t': 1, 't i': 2, ' is': 2, 'is ': 2, 's a': 1, 'a c': 1, ' co': 7, 'con': 1, 'onc': 2, 'nca': 1, 'cat': 1, 'ate': 1, 'ten': 1, 'ena': 1, 'nat': 2, 'ati': 2, 'tio': 3, 'ion': 3, 'on ': 1, 'n o': 1, 'f e': 1, ' ea': 1, 'eac': 1, 'ach': 1, 'ch ': 1, 'h w': 1, 'rd ': 6, 'd i': 5, 'n w': 2, 'ds ': 4, 's e': 1, ' ex': 1, 'exa': 1, 'xac': 1, 'act': 2, 'ctl': 1, 'tly': 1, 'ly ': 1, 'y o': 1, ' on': 1, 'nce': 1, 'ce ': 1, 'd w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'tho': 1, 'hou': 1, 'out': 2, 'ut ': 2, 'any': 1, 'ny ': 1, 'y i': 1, 'int': 2, 'nte': 1, 'ter': 3, 'erv': 1, 'rve': 1, 'eni': 1, 'nin': 2, 'g c': 1, ' ch': 1, 'cha': 1, 'har': 1, 'ara': 1, 'rac': 1, 'cte': 1, 'ers': 1, 'rs.': 1, 's.\n': 1, '.\n\n': 1, '\n\n\t': 3, '\n\tE': 3, '\tEx': 3, 'Exa': 2, 'xam': 2, 'amp': 2, 'mpl': 2, 'ple': 2, 'le ': 3, 'e 1': 1, ' 1:': 1, '1:\n': 1, ':\n\n': 2, '\n\tI': 2, '\tIn': 2, 'Inp': 2, 'npu': 2, 'put': 5, 'ut:': 4, 't:\n': 2, ':\n\t': 2, '\n\t ': 4, '\t  ': 4, '  s': 5, 's =': 5, ' = ': 12, '= ""': 2, ' ""b': 2, '""ba': 3, 'bar': 5, 'arf': 2, 'rfo': 2, 'foo': 5, 'oot': 1, 'oth': 1, 'hef': 1, 'efo': 1, 'oob': 2, 'oba': 2, 'arm': 1, 'rma': 1, 'man': 1, 'an""': 1, 'n"",': 1, '"",\n': 2, ',\n\t': 2, '  w': 4, '= [': 3, ' [""': 2, '[""f': 1, '""fo': 2, 'oo""': 1, 'o"",': 1, '"",""': 2, ',""b': 1, 'ar""': 2, 'r""]': 1, '""]\n': 2, ']\n\t': 3, '\n\tO': 2, '\tOu': 2, 'Out': 2, 'utp': 3, 'tpu': 3, 't: ': 2, ': [': 2, ' [0': 1, '[0,': 1, '0,9': 1, ',9]': 1, '9]\n': 1, 'Exp': 1, 'xpl': 1, 'pla': 1, 'lan': 1, 'ana': 1, 'on:': 1, 'n: ': 2, ': S': 1, ' Su': 1, 'Sub': 2, 'ngs': 1, 'gs ': 1, 's s': 1, 'g a': 1, ' at': 1, 'nde': 11, 'dex': 11, 'ex ': 4, 'x 0': 1, ' 0 ': 1, '0 a': 1, 'd 9': 1, ' 9 ': 1, '9 a': 1, 'e ""': 1, 'oor': 1, 'or""': 1, 'r"" ': 2, '"" a': 1, 'd ""': 1, ' ""f': 1, '"" r': 1, ' re': 7, 'res': 4, 'esp': 1, 'spe': 1, 'pec': 1, 'ect': 2, 'cti': 1, 'tiv': 1, 'vel': 1, 'ely': 1, 'ly.': 1, 'y.\n': 1, '.\n\t': 2, '\n\tT': 1, '\tTh': 1, 'The': 1, 'e o': 1, ' ou': 1, ' or': 2, 'rde': 1, 'der': 1, 'er ': 1, 'r d': 1, ' do': 1, 'doe': 1, 'oes': 1, 's n': 1, ' no': 3, 'not': 3, 'ot ': 3, 't m': 1, ' ma': 1, 'mat': 1, 'att': 1, 'tte': 1, 'er,': 1, 'r, ': 1, ', r': 1, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rni': 1, 'g [': 1, ' [9': 1, '[9,': 1, '9,0': 1, ',0]': 1, '0] ': 1, '] i': 1, 's f': 1, ' fi': 6, 'fin': 2, 'ine': 1, 'ne ': 1, 'e t': 1, ' to': 1, 'too': 1, 'oo.': 1, 'o.\n': 1, 'e 2': 1, ' 2:': 1, '2:\n': 1, ' ""w': 1, '""wo': 2, 'rdg': 1, 'dgo': 1, 'goo': 2, 'ood': 2, 'ods': 1, 'dst': 1, 'stu': 2, 'tud': 2, 'ude': 2, 'den': 2, 'ent': 2, 'ntg': 1, 'tgo': 1, 'odw': 1, 'dwo': 1, 'rd""': 2, 'd"",': 2, '[""w': 1, ',""s': 1, '""st': 1, 'nt""': 1, 't""]': 1, ' []': 3, '[]\n': 3, ""]\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ct)': 1, 't):': 1, '):\n': 3, ':\n ': 14, '\n  ': 34, '   ': 380, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'f f': 1, 'ndS': 1, 'dSu': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, 'ds)': 2, 's):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 3, ' :t': 2, ':ty': 2, 'typ': 3, 'ype': 3, 'pe ': 2, ' s:': 1, 's: ': 2, ': s': 1, 'tr\n': 1, 'r\n ': 1, 'e w': 1, 'ds:': 5, ': L': 2, ' Li': 2, 'Lis': 2, 'st[': 2, 't[s': 1, '[st': 1, 'tr]': 1, 'r]\n': 1, ']\n ': 4, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, 'e: ': 3, 't[i': 1, '[in': 2, 'nt]': 1, 't]\n': 1, '  i': 8, ' if': 6, 'if ': 6, 'f n': 1, 't s': 1, 'or ': 3, 'r n': 1, 't w': 1, 's:\n': 6, '  r': 4, 'rn ': 2, 'n [': 1, ']\n\n': 1, '\n\n ': 7, '  c': 3, 'cou': 6, 'oun': 6, 'unt': 6, 'nts': 6, 'ts ': 1, '= {': 2, ' {}': 2, '{}\n': 2, '}\n ': 1, '  f': 2, ' fo': 2, 'for': 2, 'r w': 1, 'n c': 2, 'ts:': 2, 'ts[': 3, 's[w': 3, '[wo': 6, 'rd]': 6, 'd] ': 5, '] +': 2, ' +=': 3, '+= ': 3, '= 1': 5, ' 1\n': 5, '1\n ': 2, '  e': 3, ' el': 3, 'els': 3, 'lse': 3, 'se:': 3, 'e:\n': 3, '] =': 2, '1\n\n': 3, 'esu': 3, 'sul': 3, 'ult': 3, 'lt ': 1, 't =': 1, '  n': 1, ' n,': 1, 'n, ': 1, ', n': 2, ' nu': 4, 'num': 4, 'umO': 4, 'mOf': 4, 'OfW': 4, 'fWo': 4, 'Wor': 4, ', f': 1, 'fix': 4, 'ixL': 4, 'xLe': 4, 'Len': 4, 'n =': 2, '= l': 1, 'en(': 3, 'n(s': 1, 's),': 2, '), ': 2, ', l': 2, 'n(w': 2, '(wo': 2, 'ds[': 1, 's[0': 1, '[0]': 1, '0])': 1, '])\n': 1, ')\n\n': 2, 'r i': 1, 'x i': 1, 'n r': 2, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(0': 1, '(0,': 1, '0, ': 1, ' n ': 1, 'n -': 1, ' - ': 1, '- n': 1, 's *': 1, ' * ': 3, '* f': 3, 'n +': 1, ' + ': 4, '+ 1': 2, ' 1)': 2, '1):': 1, ' se': 5, 'see': 5, 'een': 5, '}\n\n': 1, 'ex_': 6, 'x_j': 6, '_j ': 6, 'j =': 2, '= 0': 1, ' 0\n': 1, '0\n ': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'e i': 1, 'j <': 1, ' < ': 1, '< n': 1, 'd =': 1, '= s': 1, ' s[': 1, 's[i': 1, 'x +': 2, '+ i': 1, 'j *': 1, 'en:': 2, ': i': 1, '+ (': 1, ' (i': 1, '(in': 2, 'j +': 2, '1) ': 1, ') *': 1, 'en]': 1, 'n]\n': 1, 'n:\n': 1, 'en[': 3, 'n[w': 3, '] >': 1, ' > ': 1, '> c': 1, 'd]:': 1, ']:\n': 1, '  b': 2, ' br': 2, 'bre': 2, 'rea': 2, 'eak': 2, 'ak\n': 2, 'k\n ': 2, 'f i': 1, ' ==': 1, '== ': 1, '= n': 1, 'lt.': 1, 't.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(i': 1, 'ex)': 1, 'x)\n': 1, 'lt\n': 1, 't\n\n': 1, '\n\n#': 1, '\n# ': 2, '# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, ': O': 2, ' O(': 2, 'O(N': 2, '(N^': 1, 'N^2': 1, '^2)': 1, '2)\n': 1, ')\n#': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, '(N)': 1, 'N)\n': 1}"
Garvit Bansal,31.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{""'''"": 2, 'implement': 1, 'next': 2, 'permutation,': 1, 'which': 1, 'rearranges': 1, 'numbers': 1, 'into': 1, 'the': 5, 'lexicographically': 1, 'greater': 1, 'permutation': 1, 'of': 1, 'numbers.': 1, 'if': 2, 'such': 1, 'arrangement': 1, 'is': 1, 'not': 2, 'possible,': 1, 'it': 2, 'must': 2, 'rearrange': 1, 'as': 1, 'lowest': 1, 'possible': 1, 'order': 1, '(ie,': 1, 'sorted': 1, 'in': 3, 'ascending': 1, 'order).': 1, 'replacement': 1, 'be': 1, 'in-place': 2, 'and': 4, 'use': 1, 'only': 1, 'constant': 1, 'extra': 1, 'memory.': 1, 'here': 1, 'are': 3, 'some': 1, 'examples.': 1, 'inputs': 1, 'left-hand': 1, 'column': 1, 'its': 1, 'corresponding': 1, 'outputs': 1, 'right-hand': 1, 'column.': 1, '1,2,3': 2, 'â\x86\x92': 3, '1,3,2': 1, '3,2,1': 1, '1,1,5': 1, '1,5,1': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'nextpermutation(self,': 1, 'nums):': 1, '""""""': 2, ':type': 1, 'nums:': 1, 'list[int]': 1, ':rtype:': 1, 'void': 1, 'do': 1, 'return': 1, 'anything,': 1, 'modify': 1, 'nums': 1, 'instead.': 1, 'index_i': 6, '=': 6, 'len(nums)': 3, '-': 3, '2': 1, 'while': 3, '>=': 4, '0': 1, 'nums[index_i]': 2, 'nums[index_i+1]:': 1, '-=': 3, '1': 7, '0:': 1, 'index_j': 3, 'nums[index_j]': 2, '<=': 1, 'nums[index_i]:': 1, 'nums[index_i],': 1, 'nums[index_j],': 1, 'start': 3, '+': 1, 'end': 2, '<': 1, 'end:': 1, 'nums[start],': 1, 'nums[end]': 1, 'nums[end],': 1, 'nums[start]': 1, '+=': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\t"": 1, '\n\tI': 2, '\tIm': 1, 'Imp': 1, 'mpl': 2, 'ple': 2, 'lem': 1, 'eme': 3, 'men': 3, 'ent': 3, 'nt ': 4, 't n': 1, ' ne': 3, 'nex': 3, 'ext': 4, 'xt ': 2, 't p': 3, ' pe': 2, 'per': 2, 'erm': 3, 'rmu': 3, 'mut': 3, 'uta': 3, 'tat': 3, 'ati': 3, 'tio': 4, 'ion': 4, 'on,': 1, 'n, ': 1, ', w': 1, ' wh': 3, 'whi': 4, 'hic': 2, 'ich': 1, 'ch ': 2, 'h r': 1, ' re': 4, 'rea': 3, 'ear': 2, 'arr': 3, 'rra': 3, 'ran': 3, 'ang': 3, 'nge': 3, 'ges': 1, 'es ': 1, 's n': 2, ' nu': 16, 'num': 20, 'umb': 2, 'mbe': 2, 'ber': 2, 'ers': 2, 'rs ': 1, 's i': 2, ' in': 13, 'int': 2, 'nto': 1, 'to ': 1, 'o t': 1, ' th': 4, 'the': 4, 'he ': 5, 'e l': 3, ' le': 5, 'lex': 1, 'exi': 1, 'xic': 1, 'ico': 1, 'cog': 1, 'ogr': 1, 'gra': 1, 'rap': 1, 'aph': 1, 'phi': 1, 'ica': 1, 'cal': 1, 'all': 1, 'lly': 1, 'ly ': 2, 'y n': 2, 't g': 1, ' gr': 1, 'gre': 1, 'eat': 1, 'ate': 1, 'ter': 1, 'er ': 2, 'r p': 1, 'on ': 1, 'n o': 1, ' of': 1, 'of ': 1, 'f n': 2, 'rs.': 1, 's.\n': 1, '.\n\n': 4, '\n\n\t': 4, '\tIf': 1, 'If ': 1, 'f s': 1, ' su': 1, 'suc': 1, 'uch': 1, 'h a': 1, ' ar': 4, 'gem': 1, 't i': 1, ' is': 1, 'is ': 1, ' no': 2, 'not': 2, 'ot ': 2, ' po': 2, 'pos': 2, 'oss': 2, 'ssi': 2, 'sib': 2, 'ibl': 2, 'ble': 2, 'le,': 1, 'e, ': 2, ', i': 1, ' it': 3, 'it ': 2, 't m': 2, ' mu': 2, 'mus': 2, 'ust': 2, 'st ': 3, 't r': 2, 'ge ': 1, 'e i': 7, 't a': 1, ' as': 2, 'as ': 1, 's t': 1, ' lo': 1, 'low': 1, 'owe': 1, 'wes': 1, 'est': 1, 'le ': 4, 'e o': 2, ' or': 2, 'ord': 2, 'rde': 2, 'der': 2, 'r (': 1, ' (i': 1, '(ie': 1, 'ie,': 1, ', s': 1, ' so': 2, 'sor': 1, 'ort': 1, 'rte': 1, 'ted': 1, 'ed ': 1, 'd i': 2, 'in ': 3, 'n a': 3, 'asc': 1, 'sce': 1, 'cen': 1, 'end': 6, 'ndi': 2, 'din': 2, 'ing': 3, 'ng ': 2, 'g o': 2, 'er)': 1, 'r).': 1, ').\n': 1, '\n\tT': 1, '\tTh': 1, 'The': 1, 'e r': 2, 'rep': 1, 'epl': 1, 'pla': 3, 'lac': 3, 'ace': 3, 'cem': 1, 't b': 1, ' be': 1, 'be ': 1, 'in-': 2, 'n-p': 2, '-pl': 2, 'ce ': 2, 'e a': 2, ' an': 5, 'and': 6, 'nd ': 8, 'd u': 1, ' us': 1, 'use': 1, 'se ': 1, ' on': 1, 'onl': 1, 'nly': 1, 'y c': 1, ' co': 4, 'con': 1, 'ons': 1, 'nst': 2, 'sta': 6, 'tan': 1, 'ant': 1, 't e': 1, ' ex': 2, 'xtr': 1, 'tra': 1, 'ra ': 1, 'a m': 1, ' me': 1, 'mem': 1, 'emo': 1, 'mor': 1, 'ory': 1, 'ry.': 1, 'y.\n': 1, '\n\tH': 1, '\tHe': 1, 'Her': 1, 'ere': 1, 're ': 4, 'are': 3, 'e s': 2, 'som': 1, 'ome': 1, 'me ': 1, 'e e': 1, 'exa': 1, 'xam': 1, 'amp': 1, 'les': 1, 'es.': 1, 's. ': 1, '. I': 1, ' In': 1, 'Inp': 1, 'npu': 1, 'put': 2, 'uts': 2, 'ts ': 3, 's a': 2, 'n t': 2, 'lef': 1, 'eft': 1, 'ft-': 1, 't-h': 2, '-ha': 2, 'han': 2, 'd c': 2, 'col': 2, 'olu': 3, 'lum': 2, 'umn': 2, 'mn ': 1, 'its': 1, 's c': 1, 'cor': 1, 'orr': 1, 'rre': 1, 'res': 1, 'esp': 1, 'spo': 1, 'pon': 1, 'ond': 1, ' ou': 1, 'out': 1, 'utp': 1, 'tpu': 1, ' ri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht-': 1, 'mn.': 1, 'n.\n': 1, '\n\t1': 2, '\t1,': 2, '1,2': 2, ',2,': 3, '2,3': 2, ',3 ': 1, '3 â': 1, ' â\x86': 3, 'â\x86\x92': 3, '\x86\x92 ': 3, '\x92 1': 3, ' 1,': 3, '1,3': 1, ',3,': 1, '3,2': 2, ',2\n': 1, '2\n\t': 1, '\n\t3': 1, '\t3,': 1, '2,1': 1, ',1 ': 1, '1 â': 1, ',3\n': 1, '3\n\t': 1, '1,1': 1, ',1,': 1, '1,5': 2, ',5 ': 1, '5 â': 1, ',5,': 1, '5,1': 1, ',1\n': 1, ""1\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'lut': 1, 'uti': 1, 'on(': 2, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 2, ':\n ': 6, '\n  ': 24, '   ': 172, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'xtP': 1, 'tPe': 1, 'Per': 1, 'n(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', n': 5, 'ums': 18, 'ms)': 4, 's):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 1, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e n': 1, 'ms:': 1, 's: ': 1, ': L': 1, ' Li': 1, 'Lis': 1, 'ist': 1, 'st[': 1, 't[i': 1, '[in': 9, 'nt]': 1, 't]\n': 2, ']\n ': 3, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, 'e: ': 1, ': v': 1, ' vo': 1, 'voi': 1, 'oid': 1, 'id ': 1, 'd D': 1, ' Do': 1, 'Do ': 1, 'o n': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'any': 1, 'nyt': 1, 'yth': 1, 'thi': 1, 'hin': 1, 'ng,': 1, 'g, ': 1, ', m': 1, ' mo': 1, 'mod': 1, 'odi': 1, 'dif': 1, 'ify': 1, 'fy ': 1, 'ms ': 1, 'ins': 1, 'ste': 1, 'tea': 1, 'ead': 1, 'ad.': 1, 'd.\n': 1, '.\n ': 1, '""\n\n': 1, '\n\n ': 3, '  i': 2, 'ind': 17, 'nde': 17, 'dex': 17, 'ex_': 17, 'x_i': 11, '_i ': 6, 'i =': 1, ' = ': 6, '= l': 3, 'len': 3, 'en(': 3, 'n(n': 3, '(nu': 3, 's) ': 3, ') -': 3, ' - ': 3, '- 2': 1, ' 2\n': 1, '2\n ': 1, '  w': 2, 'hil': 3, 'ile': 3, 'i >': 2, ' >=': 4, '>= ': 4, '= 0': 2, ' 0 ': 1, '0 a': 1, 'd n': 2, 'ms[': 12, 's[i': 8, '_i]': 4, 'i] ': 1, '] >': 1, '= n': 4, '_i+': 1, 'i+1': 1, '+1]': 1, '1]:': 1, ']:\n': 2, '  \t': 5, ' \ti': 2, '\tin': 3, 'i -': 1, ' -=': 3, '-= ': 3, '= 1': 4, ' 1\n': 7, '1\n\n': 2, ' if': 1, 'if ': 1, 'f i': 1, ' 0:': 1, '0:\n': 1, 'x_j': 6, '_j ': 3, 'j =': 1, '- 1': 2, '1\n ': 5, ' \tw': 1, '\twh': 1, 'j >': 1, '= i': 2, 'i a': 1, '_j]': 3, 'j] ': 2, '] <': 1, ' <=': 1, '<= ': 1, 'i]:': 1, ' \t\t': 1, '\t\ti': 1, 'j -': 1, ' \tn': 1, '\tnu': 1, 'i],': 1, '], ': 4, '] =': 2, 'j],': 1, 'i]\n': 1, '  \n': 5, ' \n ': 4, '  s': 2, ' st': 3, 'tar': 5, 'art': 5, 'rt ': 3, 't =': 1, 'i +': 1, ' + ': 1, '+ 1': 1, '  e': 2, ' en': 3, 'd =': 1, 't <': 1, ' < ': 1, '< e': 1, 'nd:': 1, 'd:\n': 1, '  n': 1, 's[s': 2, '[st': 2, 'rt]': 2, 't],': 1, 's[e': 2, '[en': 2, 'nd]': 2, 'd] ': 1, 'd],': 1, 't +': 1, ' +=': 1, '+= ': 1, 'd -': 1}"
Garvit Bansal,32.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'class': 1, 'solution(object):': 1, 'def': 1, 'longestvalidparentheses(self,': 1, 's):': 1, '""""""': 2, ':type': 1, 's:': 1, 'str': 1, ':rtype:': 1, 'int': 1, 'stack,': 1, 'result': 3, '=': 3, '[-1],': 1, '0': 1, 'for': 1, 'index': 1, 'in': 1, 'range(len(s)):': 1, 'if': 2, 's[index]': 1, '==': 2, ""'(':"": 1, 'stack.append(index)': 2, 'else:': 2, 'currindex': 2, 'stack.pop()': 1, '-1:': 1, 'max(result,': 1, 'index-currindex+1)': 1, 'return': 1}","{'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 3, ':\n ': 7, '\n  ': 16, '   ': 92, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'f l': 1, ' lo': 1, 'lon': 1, 'ong': 1, 'nge': 2, 'ges': 1, 'est': 1, 'stV': 1, 'tVa': 1, 'Val': 1, 'ali': 1, 'lid': 1, 'idP': 1, 'dPa': 1, 'Par': 1, 'are': 1, 'ren': 1, 'ent': 1, 'nth': 1, 'the': 1, 'hes': 1, 'ese': 1, 'ses': 1, 'es(': 1, 's(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', s': 1, ' s)': 1, 's):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e s': 1, ' s:': 1, 's: ': 1, ': s': 1, ' st': 3, 'str': 1, 'tr\n': 1, 'r\n ': 1, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, 'e: ': 1, ': i': 1, ' in': 4, 'int': 1, 'nt\n': 1, 't\n ': 1, '  s': 1, 'sta': 4, 'tac': 4, 'ack': 4, 'ck,': 1, 'k, ': 1, ', r': 1, ' re': 3, 'res': 4, 'esu': 4, 'sul': 4, 'ult': 4, 'lt ': 2, 't =': 2, ' = ': 3, '= [': 1, ' [-': 1, '[-1': 1, '-1]': 1, '1],': 1, '], ': 1, ', 0': 1, ' 0\n': 1, '0\n\n': 1, '\n\n ': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, 'ind': 5, 'nde': 8, 'dex': 8, 'ex ': 3, 'x i': 1, 'in ': 1, 'n r': 2, ' ra': 1, 'ran': 1, 'ang': 1, 'ge(': 1, 'e(l': 1, '(le': 1, 'len': 1, 'en(': 1, 'n(s': 1, '(s)': 1, 's))': 1, ')):': 1, '  \t': 8, ' \ti': 1, '\tif': 2, 'if ': 2, 'f s': 1, ' s[': 1, 's[i': 1, '[in': 1, 'ex]': 1, 'x] ': 1, '] =': 1, ' ==': 2, '== ': 2, ""= '"": 1, "" '("": 1, ""'('"": 1, ""(':"": 1, ""':\n"": 1, ' \t\t': 6, '\t\ts': 2, '\tst': 2, 'ck.': 3, 'k.a': 2, '.ap': 2, 'app': 2, 'ppe': 2, 'pen': 2, 'end': 2, 'nd(': 2, 'd(i': 2, '(in': 2, 'ex)': 2, 'x)\n': 2, ')\n ': 4, ' \te': 1, '\tel': 2, 'els': 2, 'lse': 2, 'se:': 2, 'e:\n': 2, '\t\tc': 1, '\tcu': 1, 'cur': 3, 'urr': 3, 'rrI': 3, 'rIn': 3, 'Ind': 3, 'x =': 2, '= s': 1, 'k.p': 1, '.po': 1, 'pop': 1, 'op(': 1, 'p()': 1, '()\n': 1, '\t\ti': 1, 'f c': 1, ' cu': 1, '= -': 1, ' -1': 1, '-1:': 1, '1:\n': 1, '\t\t\t': 2, '\t\te': 1, '\t\tr': 1, '\tre': 1, '= m': 1, ' ma': 1, 'max': 1, 'ax(': 1, 'x(r': 1, '(re': 1, 'lt,': 1, 't, ': 1, ', i': 1, 'ex-': 1, 'x-c': 1, '-cu': 1, 'ex+': 1, 'x+1': 1, '+1)': 1, '1)\n': 1, '  r': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'lt\n': 1}"
Garvit Bansal,33.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{""'''"": 2, 'suppose': 1, 'an': 1, 'array': 2, 'sorted': 1, 'in': 4, 'ascending': 1, 'order': 2, 'is': 1, 'rotated': 1, 'at': 1, 'some': 1, 'pivot': 1, 'unknown': 1, 'to': 2, 'you': 3, 'beforehand.': 1, '(i.e.,': 1, '[0,1,2,4,5,6,7]': 1, 'might': 1, 'become': 1, '[4,5,6,7,0,1,2]).': 1, 'are': 1, 'given': 1, 'a': 1, 'target': 7, 'value': 1, 'search.': 1, 'if': 11, 'found': 1, 'the': 3, 'return': 12, 'its': 1, 'index,': 1, 'otherwise': 1, '-1.': 1, 'may': 1, 'assume': 1, 'no': 1, 'duplicate': 1, 'exists': 1, 'array.': 1, 'your': 1, ""algorithm's"": 1, 'runtime': 1, 'complexity': 1, 'must': 1, 'be': 1, 'of': 1, 'o(log': 1, 'n).': 1, 'class': 2, 'solution(object):': 2, 'def': 3, 'search(self,': 2, 'nums,': 2, 'target):': 3, '""""""': 4, ':type': 4, 'nums:': 3, 'list[int]': 2, 'target:': 4, 'int': 4, ':rtype:': 2, 'not': 1, '-1': 3, 'left,': 4, 'right': 3, '=': 7, '0,': 2, 'len(nums)': 1, '-': 3, '1': 5, 'while': 1, 'left': 4, '<=': 7, 'right:': 2, 'mid': 8, '(left': 2, '+': 4, 'right)': 2, '/': 2, '2': 2, 'nums[mid]': 4, '==': 2, 'nums[left]': 4, 'nums[mid]:': 4, '>=': 2, 'and': 2, 'else:': 6, 'nums[right]:': 2, 'searchrecursive(nums,': 6, 'right,': 3, '>': 1, '<': 2, 'mid-1,': 2, 'target)': 5, 'mid+1,': 2, 'len(nums)-1,': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\t"": 1, '\n\tS': 1, '\tSu': 1, 'Sup': 1, 'upp': 1, 'ppo': 1, 'pos': 1, 'ose': 1, 'se ': 2, 'e a': 3, ' an': 3, 'an ': 1, 'n a': 3, ' ar': 4, 'arr': 3, 'rra': 3, 'ray': 3, 'ay ': 3, 'y s': 1, ' so': 2, 'sor': 1, 'ort': 1, 'rte': 1, 'ted': 2, 'ed ': 2, 'd i': 2, ' in': 9, 'in ': 4, ' as': 2, 'asc': 1, 'sce': 1, 'cen': 1, 'end': 1, 'ndi': 1, 'din': 1, 'ing': 1, 'ng ': 1, 'g o': 1, ' or': 2, 'ord': 2, 'rde': 2, 'der': 2, 'er ': 2, 'r i': 1, ' is': 1, 'is ': 1, 's r': 2, ' ro': 1, 'rot': 1, 'ota': 1, 'tat': 1, 'ate': 2, 'd a': 1, ' at': 1, 'at ': 1, 't s': 1, 'som': 1, 'ome': 2, 'me ': 4, 'e p': 1, ' pi': 1, 'piv': 1, 'ivo': 1, 'vot': 1, 'ot ': 2, 't u': 1, ' un': 1, 'unk': 1, 'nkn': 1, 'kno': 1, 'now': 1, 'own': 1, 'wn ': 1, 'n t': 4, ' to': 2, 'to ': 2, 'o y': 1, ' yo': 1, 'you': 1, 'ou ': 3, 'u b': 1, ' be': 3, 'bef': 1, 'efo': 1, 'for': 1, 'ore': 1, 'reh': 1, 'eha': 1, 'han': 1, 'and': 3, 'nd.': 1, 'd.\n': 1, '.\n\n': 4, '\n\n\t': 4, '\n\t(': 1, '\t(i': 1, '(i.': 1, 'i.e': 1, '.e.': 1, 'e.,': 1, '., ': 1, ', [': 1, ' [0': 1, '[0,': 1, '0,1': 2, ',1,': 2, '1,2': 2, ',2,': 1, '2,4': 1, ',4,': 1, '4,5': 2, ',5,': 2, '5,6': 2, ',6,': 2, '6,7': 2, ',7]': 1, '7] ': 1, '] m': 1, ' mi': 11, 'mig': 1, 'igh': 13, 'ght': 13, 'ht ': 4, 't b': 2, 'bec': 1, 'eco': 1, 'com': 2, 'e [': 1, ' [4': 1, '[4,': 1, ',7,': 1, '7,0': 1, ',0,': 1, ',2]': 1, '2])': 1, ']).': 1, ').\n': 2, '\n\tY': 3, '\tYo': 3, 'You': 3, 'u a': 1, 'are': 1, 're ': 1, 'e g': 1, ' gi': 1, 'giv': 1, 'ive': 7, 'ven': 1, 'en ': 1, ' a ': 1, 'a t': 1, ' ta': 19, 'tar': 19, 'arg': 19, 'rge': 19, 'get': 19, 'et ': 7, 't v': 1, ' va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ue ': 1, 'e t': 3, 'o s': 1, ' se': 9, 'sea': 9, 'ear': 9, 'arc': 9, 'rch': 9, 'ch.': 1, 'h. ': 1, '. I': 1, ' If': 1, 'If ': 1, 'f f': 1, ' fo': 1, 'fou': 1, 'oun': 1, 'und': 1, 'nd ': 3, ' th': 3, 'the': 4, 'he ': 3, 'y r': 1, ' re': 4, 'ret': 12, 'etu': 12, 'tur': 12, 'urn': 12, 'rn ': 12, 'n i': 1, ' it': 1, 'its': 1, 'ts ': 2, 's i': 2, 'ind': 1, 'nde': 1, 'dex': 1, 'ex,': 1, 'x, ': 1, ', o': 1, ' ot': 1, 'oth': 1, 'her': 1, 'erw': 1, 'rwi': 1, 'wis': 1, 'ise': 1, 'e r': 1, 'n -': 4, ' -1': 4, '-1.': 1, '1.\n': 1, 'u m': 1, ' ma': 1, 'may': 1, 'y a': 1, 'ass': 3, 'ssu': 1, 'sum': 1, 'ume': 1, 'e n': 3, ' no': 2, 'no ': 1, 'o d': 1, ' du': 1, 'dup': 1, 'upl': 1, 'pli': 1, 'lic': 1, 'ica': 1, 'cat': 1, 'te ': 1, 'e e': 1, ' ex': 1, 'exi': 2, 'xis': 1, 'ist': 3, 'sts': 1, 'ay.': 1, 'y.\n': 1, 'our': 1, 'ur ': 1, 'r a': 1, ' al': 1, 'alg': 1, 'lgo': 1, 'gor': 1, 'ori': 1, 'rit': 1, 'ith': 1, 'thm': 1, ""hm'"": 1, ""m's"": 1, ""'s "": 1, ' ru': 1, 'run': 1, 'unt': 1, 'nti': 1, 'tim': 1, 'ime': 1, 'e c': 1, ' co': 1, 'omp': 1, 'mpl': 1, 'ple': 1, 'lex': 1, 'xit': 1, 'ity': 1, 'ty ': 1, 'y m': 1, ' mu': 1, 'mus': 1, 'ust': 1, 'st ': 1, 'be ': 1, 'e i': 1, 'e o': 1, 'r o': 1, ' of': 1, 'of ': 1, 'f O': 1, ' O(': 1, 'O(l': 1, '(lo': 1, 'log': 1, 'og ': 1, 'g n': 1, ' n)': 1, 'n).': 1, "".\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\nc': 2, '\ncl': 2, 'cla': 2, 'las': 2, 'ss ': 2, 's S': 2, ' So': 2, 'Sol': 2, 'olu': 2, 'lut': 2, 'uti': 2, 'tio': 2, 'ion': 2, 'on(': 2, 'n(o': 2, '(ob': 2, 'obj': 2, 'bje': 2, 'jec': 2, 'ect': 2, 'ct)': 2, 't):': 5, '):\n': 5, ':\n ': 22, '\n  ': 47, '   ': 274, '  d': 3, ' de': 3, 'def': 3, 'ef ': 3, 'f s': 3, 'ch(': 2, 'h(s': 2, '(se': 2, 'sel': 2, 'elf': 2, 'lf,': 2, 'f, ': 2, ', n': 2, ' nu': 19, 'num': 27, 'ums': 27, 'ms,': 8, 's, ': 8, ', t': 8, 'et)': 8, '  ""': 4, ' """"': 4, '""""""': 4, '""""\n': 4, '""\n ': 3, '  :': 6, ' :t': 4, ':ty': 4, 'typ': 6, 'ype': 6, 'pe ': 4, 'ms:': 3, 's: ': 2, ': L': 2, ' Li': 2, 'Lis': 2, 'st[': 2, 't[i': 2, '[in': 2, 'int': 6, 'nt]': 2, 't]\n': 2, ']\n ': 2, 'et:': 4, 't: ': 2, ': i': 4, 'nt\n': 4, 't\n ': 4, ' :r': 2, ':rt': 2, 'rty': 2, 'pe:': 2, 'e: ': 2, '  i': 1, ' if': 1, 'if ': 10, 'f n': 7, 'not': 1, 't n': 1, 's:\n': 1, '  \t': 29, ' \tr': 1, '\tre': 8, '-1\n': 3, '1\n\n': 5, '\n\n ': 8, '  l': 1, ' le': 8, 'lef': 14, 'eft': 14, 'ft,': 4, 't, ': 7, ', r': 4, ' ri': 8, 'rig': 12, 't =': 5, ' = ': 7, '= 0': 1, ' 0,': 2, '0, ': 2, ', l': 5, 'len': 2, 'en(': 2, 'n(n': 2, '(nu': 8, 'ms)': 2, 's) ': 1, ') -': 1, ' - ': 3, '- 1': 3, ' 1\n': 5, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 1, 'ft ': 6, 't <': 5, ' <=': 7, '<= ': 7, '= r': 1, 'ht:': 2, 't:\n': 4, ' \tm': 2, '\tmi': 2, 'mid': 20, 'id ': 6, 'd =': 2, '= (': 2, ' (l': 2, '(le': 2, 't +': 2, ' + ': 4, '+ r': 2, 'ht)': 2, 't) ': 2, ') /': 2, ' / ': 2, '/ 2': 2, ' 2\n': 2, '2\n ': 2, ' \ti': 5, '\tif': 9, 'ms[': 14, 's[m': 8, '[mi': 8, 'id]': 8, 'd] ': 4, '] =': 2, ' ==': 2, '== ': 2, '= t': 3, ' \t\t': 19, '\t\tr': 9, 'n m': 2, 'id\n': 2, 'd\n\n': 2, 's[l': 4, '[le': 4, 'ft]': 4, 't] ': 4, '] <': 4, '= n': 7, 'd]:': 4, ']:\n': 6, '\t\ti': 4, 'f t': 2, 't >': 3, ' >=': 2, '>= ': 2, '] a': 2, 'd t': 2, '\t\t\t': 8, '\tri': 2, '= m': 4, 'd -': 2, '1\n ': 3, '\t\te': 4, '\tel': 6, 'els': 6, 'lse': 6, 'se:': 6, 'e:\n': 6, '\t\tl': 2, '\tle': 2, 'd +': 2, '+ 1': 2, ' \te': 2, 's[r': 2, '[ri': 2, 'ht]': 2, 't]:': 2, '  r': 2, '\n\n\n': 1, '""\n\n': 1, 'chR': 6, 'hRe': 6, 'Rec': 6, 'ecu': 6, 'cur': 6, 'urs': 6, 'rsi': 6, 'siv': 6, 've(': 6, 'e(n': 6, 'ht,': 3, 'f l': 1, ' > ': 1, '> r': 1, ' < ': 2, '< n': 1, 'n s': 5, ', m': 4, 'id-': 2, 'd-1': 2, '-1,': 3, '1, ': 5, 't)\n': 5, ')\n ': 3, 'id+': 2, 'd+1': 2, '+1,': 2, '< t': 1, ')\n\n': 1, ', 0': 1, 's)-': 1, ')-1': 1}"
Imad,2nd_max.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'sys': 1, 'def': 1, 'secondmax(lst):': 1, 'first_max': 2, '=': 4, 'max(lst[0],': 1, 'lst[1])': 2, 'sec_max': 3, 'min(lst[0],': 1, 'print(first_max)': 1, 'print(sec_max)': 1, 'for': 1, 'index': 1, 'in': 1, 'range(len(lst)):': 1, 'if': 1, 'first_max<lst[index]': 1, 'and': 2, 'first_max>sec_max:': 1, 'lst[index]': 2, 'elif(sec_max<lst[index]': 1, 'sec_max<first_max):': 1, 'return': 1, 'list_1': 1, '=[9,2,3,6]': 1, 'print(secondmax(list_1))': 1, '#': 1, 'o(n)': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't s': 1, ' sy': 1, 'sys': 1, 'ys\n': 1, 's\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f s': 1, ' se': 5, 'sec': 9, 'eco': 2, 'con': 2, 'ond': 2, 'ndm': 2, 'dma': 2, 'max': 16, 'ax(': 3, 'x(l': 3, '(ls': 4, 'lst': 10, 'st)': 2, 't):': 1, '):\n': 3, ':\n ': 4, '\n  ': 10, '   ': 44, '  f': 3, ' fi': 4, 'fir': 6, 'irs': 6, 'rst': 6, 'st_': 8, 't_m': 6, '_ma': 13, 'ax ': 4, 'x =': 3, ' = ': 4, '= m': 1, ' ma': 1, 'st[': 8, 't[0': 2, '[0]': 2, '0],': 2, '], ': 2, ', l': 2, ' ls': 4, 't[1': 2, '[1]': 2, '1])': 2, '])\n': 2, ')\n ': 4, '  s': 2, 'ec_': 7, 'c_m': 7, 'x  ': 1, '  =': 1, '=  ': 1, '  m': 1, ' mi': 1, 'min': 1, 'in(': 1, 'n(l': 2, '  p': 2, ' pr': 2, 'pri': 3, 'rin': 3, 'int': 3, 'nt(': 3, 't(f': 1, '(fi': 1, 'ax)': 3, 'x)\n': 2, 't(s': 2, '(se': 3, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' in': 2, 'ind': 5, 'nde': 5, 'dex': 5, 'ex ': 1, 'x i': 1, 'in ': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(l': 1, '(le': 1, 'len': 1, 'en(': 1, 't))': 1, ')):': 1, '  i': 1, ' if': 1, 'if ': 1, 'f f': 1, 'ax<': 3, 'x<l': 2, '<ls': 2, 't[i': 4, '[in': 4, 'ex]': 4, 'x] ': 2, '] a': 2, ' an': 2, 'and': 2, 'nd ': 2, 'd f': 1, 'ax>': 1, 'x>s': 1, '>se': 1, 'ax:': 1, 'x:\n': 1, '= l': 2, 'x]\n': 2, ']\n ': 2, '  e': 1, ' el': 1, 'eli': 1, 'lif': 1, 'if(': 1, 'f(s': 1, 'd s': 1, 'x<f': 1, '<fi': 1, 'x):': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n s': 1, 'ax\n': 1, 'x\n\n': 1, '\n\nl': 1, '\nli': 1, 'lis': 2, 'ist': 2, 't_1': 2, '_1 ': 1, '1 =': 1, ' =[': 1, '=[9': 1, '[9,': 1, '9,2': 1, ',2,': 1, '2,3': 1, ',3,': 1, '3,6': 1, ',6]': 1, '6]\n': 1, ']\np': 1, '\npr': 1, '(li': 1, '_1)': 1, '1))': 1, '))\n': 1, ')\n\n': 1, '\n\n#': 1, '\n# ': 1, '# O': 1, ' O(': 1, 'O(n': 1, '(n)': 1, 'n)\n': 1}"
Imad,Arrays.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 6, 'in': 4, 'python,': 1, 'array': 12, 'is': 6, 'just': 2, 'a': 3, 'ordered': 1, 'homogenous': 1, 'elements.': 1, 'python': 2, 'arrays': 5, 'are': 3, 'wrappers': 1, 'for': 2, 'c': 2, 'arrays.': 1, 'the': 4, 'type': 5, 'of': 6, 'constrained': 1, 'and': 1, 'specified': 1, 'at': 2, 'time': 1, 'creation.': 1, '#': 22, 'intializing': 1, 'import': 1, 'new_array': 1, '=': 10, ""array.array('f',"": 1, '[1,2,4])': 1, 'f': 1, 'means': 1, 'data': 1, 'float': 4, 'print(new_array[0])': 1, 'there': 1, 'several': 1, 'types': 1, 'python;': 1, 'refer': 1, 'to': 11, 'table': 1, 'below': 1, 'complete': 1, 'list.': 1, 'code': 1, 'minimum': 1, 'size': 1, 'bytes': 1, ""'c'"": 1, 'character': 2, 'char': 3, '1': 3, ""'b'"": 2, 'signed': 4, 'int': 8, 'unsigned': 4, ""'u'"": 1, 'py_unicode': 1, 'unicode': 2, '2': 4, 'or': 3, '4': 5, 'depending': 1, 'on': 1, 'build': 1, ""'h'"": 2, 'short': 2, ""'i'"": 2, 'long': 4, ""'l'"": 2, ""'f'"": 1, ""'d'"": 1, 'double': 1, '8': 1, 'slicing:': 1, 'slicing': 2, 'done': 1, 'as': 1, 'same': 1, 'way': 1, 'list': 1, 'done.': 1, 'initializer_list': 1, '[2,': 1, '5,': 4, '43,': 1, '10,': 1, '52,': 1, '29,': 1, '5]': 1, 'number_array': 1, ""array.array('i',"": 4, 'initializer_list)': 1, 'print(number_array[1:5])': 1, '2nd': 1, '5th': 2, 'print(number_array[:-5])': 1, 'beginning': 2, '3rd': 2, 'print(number_array[5:])': 1, '6th': 1, 'end': 2, 'print(number_array[:])': 1, 'changing': 3, 'adding': 1, 'elements': 4, 'integers': 1, '[1,': 1, '2,': 3, '3,': 2, '7,': 2, '10])': 3, 'first': 2, 'element': 4, 'integers[0]': 1, '0': 1, 'print(integers)': 4, ""array('i',"": 2, '[0,': 2, 'integers[2:5]': 1, '[4,': 1, '6,': 2, '8])': 1, 'output:': 1, '4,': 1, '8,': 1, 'add': 2, 'one': 1, 'into': 2, 'we': 5, 'use': 5, 'append()': 1, 'integers.append(15)': 1, 'multiple': 2, 'can': 1, 'extend()': 1, 'method': 3, 'integers.extend([17,19,35])': 1, 'concatenation': 1, 'using': 4, ""'+'"": 1, 'odd': 2, ""array.array('i',[1,3,5,7])"": 1, 'even': 2, '[0,2,4,8])': 1, 'integ': 2, ""array.array('i')"": 1, 'creating': 1, 'empty': 1, '+': 1, 'print(integ)': 4, 'removing/': 1, 'del': 4, 'elemnts:': 1, 'remove(value)': 1, 'remove': 3, 'value(it': 1, 'removes': 1, 'value': 1, 'that': 2, 'comes': 1, '==value)': 1, 'statement': 2, 'all': 1, 'pop(index)': 1, 'an': 1, 'elemnt': 1, 'index': 3, 'array(if': 1, 'not': 2, 'found': 2, 'gives': 1, 'error)': 1, 'print(integ.remove(7))': 1, 'removing': 3, 'from': 3, 'remove()': 1, 'print(integ.pop(2))': 1, 'elemnts': 1, 'with': 1, 'given': 1, 'index()': 1, 'muliple': 1, 'integ[2:5]': 1}","{""'''"": 6, ""''\n"": 6, ""'\nI"": 1, '\nIn': 1, 'In ': 1, 'n P': 2, ' Py': 5, 'Pyt': 4, 'yth': 4, 'tho': 7, 'hon': 4, 'on,': 1, 'n, ': 1, ', A': 1, ' Ar': 6, 'Arr': 7, 'rra': 42, 'ray': 42, 'ay ': 13, 'y i': 1, ' is': 6, 'is ': 6, 's j': 1, ' ju': 2, 'jus': 2, 'ust': 2, 'st ': 6, 't a': 3, ' a ': 3, 'a o': 1, ' or': 4, 'ord': 1, 'rde': 1, 'der': 1, 'ere': 2, 'red': 1, 'ed ': 11, 'd h': 1, ' ho': 1, 'hom': 1, 'omo': 1, 'mog': 1, 'oge': 1, 'gen': 1, 'eno': 1, 'nou': 1, 'ous': 1, 'us ': 1, 's e': 2, ' el': 11, 'ele': 11, 'lem': 12, 'eme': 11, 'men': 11, 'ent': 11, 'nts': 7, 'ts.': 1, 's. ': 1, '. P': 1, 'on ': 4, 'n a': 2, ' ar': 24, 'arr': 35, 'ays': 6, 'ys ': 5, 's a': 2, 'are': 3, 're ': 4, 'e j': 1, 't w': 1, ' wr': 1, 'wra': 1, 'rap': 1, 'app': 3, 'ppe': 3, 'per': 1, 'ers': 10, 'rs ': 2, 's f': 4, ' fo': 4, 'for': 2, 'or ': 5, 'r C': 1, ' C ': 2, 'C A': 1, 'ys.': 1, 's.\n': 1, '.\nT': 1, '\nTh': 2, 'The': 2, 'he ': 4, 'e T': 1, ' Ty': 3, 'Typ': 4, 'ype': 6, 'pe ': 5, 'e o': 3, ' of': 6, 'of ': 6, 'f A': 1, 'e c': 4, ' co': 4, 'con': 1, 'ons': 1, 'nst': 1, 'str': 1, 'tra': 1, 'rai': 1, 'ain': 1, 'ine': 1, 'ned': 9, 'd a': 2, ' an': 2, 'and': 1, 'nd ': 4, 'd s': 3, ' sp': 1, 'spe': 1, 'pec': 1, 'eci': 1, 'cif': 1, 'ifi': 1, 'fie': 1, 'ied': 1, ' at': 2, 'at ': 7, 't t': 3, ' th': 5, 'the': 3, 'e t': 3, ' ti': 1, 'tim': 1, 'ime': 1, 'me ': 2, 'f c': 1, ' cr': 2, 'cre': 2, 'rea': 2, 'eat': 2, 'ati': 3, 'tio': 2, 'ion': 2, 'on.': 1, 'n.\n': 1, "".\n'"": 2, ""\n''"": 5, ""'\n#"": 2, '\n# ': 12, '# I': 1, ' In': 1, 'Int': 1, 'nti': 1, 'tia': 3, 'ial': 3, 'ali': 3, 'liz': 3, 'izi': 1, 'zin': 1, 'ing': 20, 'ng ': 22, 'g A': 2, 's \n': 1, ' \ni': 1, '\nim': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 3, 'rt ': 3, 'ay\n': 2, 'y\nn': 1, '\nne': 1, 'new': 2, 'ew_': 2, 'w_a': 2, '_ar': 7, 'y =': 2, ' = ': 10, '= a': 7, 'ay.': 7, 'y.a': 7, '.ar': 7, 'ay(': 10, ""y('"": 9, ""('f"": 1, ""'f'"": 2, ""f',"": 1, ""', "": 7, ', [': 6, ' [1': 2, '[1,': 3, '1,2': 1, ',2,': 2, '2,4': 2, ',4]': 1, '4])': 1, ']) ': 5, ')  ': 8, '  #': 8, ' # ': 10, '# f': 1, ' f ': 1, 'f m': 1, ' me': 4, 'mea': 1, 'ean': 1, 'ans': 1, 'ns ': 1, 's d': 3, ' da': 1, 'dat': 1, 'ata': 1, 'ta ': 1, 'a t': 1, ' ty': 2, 'typ': 2, 'e i': 2, 's F': 1, ' Fl': 1, 'Flo': 1, 'loa': 4, 'oat': 4, 'at\n': 1, 't\np': 1, '\npr': 15, 'pri': 15, 'rin': 15, 'int': 43, 'nt(': 15, 't(n': 5, '(ne': 1, 'ay[': 5, 'y[0': 1, '[0]': 2, '0])': 4, '])\n': 8, "")\n'"": 1, ""'\nT"": 1, 'her': 1, 'e a': 5, 'e s': 1, ' se': 1, 'sev': 1, 'eve': 3, 'ver': 1, 'era': 1, 'ral': 1, 'al ': 1, 'l t': 1, 'pes': 1, 'es ': 4, 's o': 1, 'f a': 4, 's i': 2, ' in': 19, 'in ': 3, 'on;': 1, 'n; ': 1, '; r': 1, ' re': 9, 'ref': 1, 'efe': 1, 'fer': 1, 'er ': 3, 'r t': 1, ' to': 9, 'to ': 11, 'o t': 1, ' ta': 1, 'tab': 1, 'abl': 1, 'ble': 2, 'le ': 5, 'e b': 2, ' be': 3, 'bel': 1, 'elo': 1, 'low': 1, 'ow ': 1, 'w f': 1, 'r a': 1, 'a c': 1, 'com': 2, 'omp': 1, 'mpl': 1, 'ple': 4, 'let': 1, 'ete': 1, 'te ': 1, 'e l': 1, ' li': 2, 'lis': 4, 'ist': 4, 'st.': 1, 't.\n': 1, '.\n\n': 1, '\n\nT': 1, '\nTy': 1, 'cod': 3, 'ode': 3, 'de ': 3, 'e  ': 4, '   ': 437, '  C': 1, 'C T': 1, '  P': 2, 'n T': 1, '  M': 1, ' Mi': 1, 'Min': 1, 'ini': 3, 'nim': 1, 'imu': 1, 'mum': 1, 'um ': 1, 'm S': 1, ' Si': 1, 'Siz': 1, 'ize': 3, 'ze ': 1, 'n B': 1, ' By': 1, 'Byt': 1, 'yte': 1, 'tes': 1, 'es\n': 1, ""s\n'"": 1, ""\n'c"": 1, ""'c'"": 1, ""c' "": 1, ""'  "": 12, '  c': 2, ' ch': 7, 'cha': 7, 'har': 5, 'ara': 2, 'rac': 2, 'act': 2, 'cte': 2, 'ter': 2, 'r  ': 5, 'ar ': 3, '  1': 3, ' 1\n': 3, ""1\n'"": 3, ""\n'b"": 1, ""'b'"": 1, ""b' "": 1, '  s': 4, ' si': 4, 'sig': 8, 'ign': 8, 'gne': 8, 'd c': 2, '  i': 6, 'nt ': 12, 't  ': 13, ""\n'B"": 1, ""'B'"": 1, ""B' "": 1, '  u': 4, ' un': 4, 'uns': 4, 'nsi': 4, ""\n'u"": 1, ""'u'"": 1, ""u' "": 1, 'Py_': 1, 'y_U': 1, '_UN': 1, 'UNI': 1, 'NIC': 1, 'ICO': 1, 'COD': 1, 'ODE': 1, 'DE ': 1, 'E  ': 1, '  U': 1, ' Un': 2, 'Uni': 2, 'nic': 2, 'ico': 2, '  2': 4, ' 2 ': 1, '2 o': 1, 'r 4': 1, ' 4 ': 1, '4 d': 1, ' de': 4, 'dep': 1, 'epe': 1, 'pen': 3, 'end': 7, 'ndi': 1, 'din': 2, 'g o': 2, ' on': 2, 'n U': 1, ' bu': 1, 'bui': 1, 'uil': 1, 'ild': 1, 'ld\n': 1, ""d\n'"": 1, ""\n'h"": 1, ""'h'"": 1, ""h' "": 1, ' sh': 2, 'sho': 2, 'hor': 2, ' 2\n': 3, ""2\n'"": 3, ""\n'H"": 1, ""'H'"": 1, ""H' "": 1, ""\n'i"": 1, ""'i'"": 9, ""i' "": 1, 'd i': 2, ""\n'I"": 1, ""'I'"": 1, ""I' "": 1, '  l': 2, ' lo': 4, 'lon': 4, 'ong': 4, 'g  ': 4, '  4': 4, ' 4\n': 4, ""4\n'"": 4, ""\n'l"": 1, ""'l'"": 1, ""l' "": 1, 'd l': 2, ""\n'L"": 1, ""'L'"": 1, ""L' "": 1, ""\n'f"": 1, ""f' "": 1, '  f': 3, ' fl': 3, 'flo': 3, ""\n'd"": 1, ""'d'"": 1, ""d' "": 1, '  d': 1, ' do': 3, 'dou': 1, 'oub': 1, 'ubl': 1, '  8': 1, ' 8\n': 1, ""8\n'"": 1, '# A': 1, 'y S': 2, ' Sl': 2, 'Sli': 2, 'lic': 3, 'ici': 3, 'cin': 3, 'ng:': 1, 'g:\n': 1, "":\n'"": 1, ""'\nA"": 1, '\nAr': 1, 'g i': 3, 'don': 2, 'one': 3, 'ne ': 2, ' as': 1, 'as ': 1, 's s': 1, ' sa': 1, 'sam': 1, 'ame': 1, 'e w': 1, ' wa': 1, 'way': 1, 'y l': 1, 't s': 1, ' sl': 1, 'sli': 1, 'ne.': 1, 'e.\n': 1, ""'\n\n"": 1, '\n\n\n': 1, '\n\ni': 1, '\nin': 8, 'nit': 2, 'iti': 2, 'zer': 2, 'er_': 7, 'r_l': 2, '_li': 2, 't =': 1, '= [': 1, ' [2': 1, '[2,': 1, '2, ': 5, ', 5': 6, ' 5,': 4, '5, ': 4, ', 4': 2, ' 43': 1, '43,': 1, '3, ': 3, ', 1': 4, ' 10': 4, '10,': 1, '0, ': 3, ' 52': 1, '52,': 1, ', 2': 4, ' 29': 1, '29,': 1, '9, ': 1, ' 5]': 1, '5]\n': 2, ']\nn': 1, '\nnu': 1, 'num': 5, 'umb': 5, 'mbe': 5, 'ber': 5, 'r_a': 5, ""('i"": 8, ""i',"": 7, ', i': 1, 'st)': 1, 't)\n': 1, ')\n\n': 8, '\n\np': 2, '(nu': 4, 'y[1': 1, '[1:': 1, '1:5': 1, ':5]': 3, '5])': 3, '# 2': 1, ' 2n': 1, '2nd': 1, 'd t': 4, 'o 5': 2, ' 5t': 2, '5th': 2, 'th\n': 1, 'h\np': 1, 'y[:': 2, '[:-': 1, ':-5': 1, '-5]': 1, '# b': 2, 'beg': 2, 'egi': 2, 'gin': 5, 'inn': 2, 'nni': 2, 'nin': 2, 'g t': 2, 'o 3': 1, ' 3r': 2, '3rd': 2, 'rd\n': 1, 'd\np': 2, 'y[5': 1, '[5:': 1, '5:]': 1, ':])': 2, '# 6': 1, ' 6t': 1, '6th': 1, 'th ': 3, 'h t': 1, 'o e': 2, ' en': 2, 'nd\n': 2, '[:]': 1, 'd\n\n': 1, '\n\n#': 6, '# C': 2, ' Ch': 1, 'Cha': 1, 'han': 3, 'ang': 3, 'ngi': 3, 'r A': 1, ' Ad': 1, 'Add': 1, 'ddi': 1, 'y E': 1, ' El': 1, 'Ele': 1, 'ts\n': 1, 's\ni': 1, 'nte': 18, 'teg': 18, 'ege': 9, 'ger': 9, 's =': 2, '1, ': 1, ' 2,': 3, ', 3': 2, ' 3,': 2, ', 7': 2, ' 7,': 2, '7, ': 2, '10]': 3, '# c': 3, 'g f': 1, ' fi': 2, 'fir': 2, 'irs': 2, 'rst': 2, 't e': 1, 'nt\n': 3, 't\ni': 2, 'rs[': 2, 's[0': 1, '0] ': 1, '] =': 2, '= 0': 1, ' 0\n': 1, '0\np': 1, 't(i': 10, '(in': 11, 'rs)': 4, 's) ': 2, '# a': 1, ' [0': 3, '[0,': 3, 'g 3': 1, 'rd ': 1, 'h e': 1, 's[2': 1, '[2:': 2, '2:5': 2, '5] ': 1, ' [4': 1, '[4,': 1, '4, ': 2, ', 6': 2, ' 6,': 2, '6, ': 2, ', 8': 2, ' 8]': 1, '8])': 2, ')\np': 5, '# O': 1, ' Ou': 1, 'Out': 1, 'utp': 1, 'tpu': 1, 'put': 1, 'ut:': 1, 't: ': 1, ': a': 1, ' 4,': 1, ' 8,': 1, '8, ': 1, '# T': 2, ' To': 2, 'To ': 2, 'o a': 4, ' ad': 2, 'add': 2, 'dd ': 4, 'd o': 2, 'e e': 4, 't i': 3, 'nto': 2, 'y w': 3, ' we': 2, 'we ': 2, 'e u': 4, ' us': 9, 'use': 5, 'se ': 5, ' ap': 1, 'nd(': 4, 'd()': 2, '()\n': 2, ')\ni': 2, 'rs.': 2, 's.a': 1, '.ap': 1, 'd(1': 1, '(15': 1, '15)': 1, '5)\n': 1, 's)\n': 2, ')\n#': 3, 'd m': 1, ' mu': 3, 'mul': 3, 'ult': 2, 'lti': 2, 'tip': 2, 'ipl': 3, 'ts ': 4, ' ca': 1, 'can': 1, 'an ': 2, 'n u': 1, ' ex': 1, 'ext': 2, 'xte': 2, 'ten': 3, '() ': 2, ') m': 3, 'met': 3, 'eth': 3, 'hod': 3, 'od\n': 1, 'd\ni': 1, 's.e': 1, '.ex': 1, 'd([': 1, '([1': 1, '[17': 1, '17,': 1, '7,1': 1, ',19': 1, '19,': 1, '9,3': 1, ',35': 1, '35]': 1, ' Co': 1, 'Con': 1, 'onc': 1, 'nca': 1, 'cat': 1, 'ate': 3, 'ena': 1, 'nat': 1, 'n o': 1, 's u': 1, 'usi': 4, 'sin': 4, ""g '"": 1, "" '+"": 1, ""'+'"": 1, ""+'\n"": 1, ""'\no"": 1, '\nod': 1, 'odd': 2, 'd =': 1, ""',["": 1, ',[1': 1, '1,3': 1, ',3,': 1, '3,5': 1, ',5,': 1, '5,7': 1, ',7]': 1, '7])': 1, ')\ne': 1, '\nev': 1, 'ven': 3, 'en ': 2, 'n =': 1, '0,2': 1, ',4,': 1, '4,8': 1, ',8]': 1, 'eg ': 2, 'g =': 2, ""i')"": 1, ""') "": 1, ') #': 2, 'tin': 1, 'g e': 3, ' em': 1, 'emp': 1, 'mpt': 1, 'pty': 1, 'ty ': 1, 'y a': 1, 'y\ni': 1, '= o': 1, ' od': 1, 'd +': 1, ' + ': 1, '+ e': 1, ' ev': 1, 'en\n': 1, 'n\np': 1, 'eg)': 4, 'g)\n': 4, '# R': 2, ' Re': 2, 'Rem': 2, 'emo': 11, 'mov': 11, 'ovi': 4, 'vin': 4, 'ng/': 1, 'g/ ': 1, '/ d': 1, 'del': 4, 'el ': 4, 'l e': 1, 'emn': 3, 'mnt': 3, 'ts:': 1, 's: ': 1, ': W': 1, ' We': 3, 'We ': 3, 'e r': 1, 'rem': 9, 'ove': 7, 've(': 3, 'e(v': 1, '(va': 1, 'val': 4, 'alu': 4, 'lue': 4, 'ue)': 2, 'e) ': 1, 'od ': 2, 'o r': 3, 've ': 3, 'a v': 1, ' va': 2, 'ue(': 1, 'e(I': 1, '(It': 1, 'It ': 1, 't r': 1, 'ves': 2, 's t': 1, 'e f': 1, 't v': 1, 'ue ': 1, 'tha': 2, 'hat': 2, 't c': 1, 'ome': 1, 'mes': 1, ' ==': 1, '==v': 1, '=va': 1, 'e)\n': 1, '# W': 2, 'e d': 1, 'l s': 2, ' st': 2, 'sta': 2, 'tat': 2, 'tem': 2, 'e m': 1, ' al': 1, 'all': 1, 'll ': 1, 'l o': 1, 'y \n': 1, ' \n#': 1, 'e p': 1, ' po': 1, 'pop': 2, 'op(': 2, 'p(i': 1, 'ind': 5, 'nde': 5, 'dex': 5, 'ex)': 1, 'x) ': 1, 'n e': 1, 'ex ': 3, 'x i': 2, 'y(I': 1, '(If': 1, 'If ': 1, 'f i': 1, 's n': 2, ' no': 2, 'not': 2, 'ot ': 2, 't f': 2, 'fou': 2, 'oun': 2, 'und': 2, 'r e': 1, 'd g': 1, ' gi': 2, 'giv': 2, 'ive': 2, ' er': 1, 'err': 1, 'rro': 1, 'ror': 1, 'or)': 1, 'r)\n': 1, 'eg.': 2, 'g.r': 1, '.re': 1, 'e(7': 1, '(7)': 1, '7))': 1, ')) ': 2, '# r': 2, ' fr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm a': 3, 'y u': 2, 'g r': 1, 'e()': 1, ') \n': 1, ' \np': 1, 'g.p': 1, '.po': 1, 'p(2': 1, '(2)': 1, '2))': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'h g': 1, 'n i': 1, 'x u': 1, 'ex(': 1, 'x()': 1, 'g m': 1, 'uli': 1, 'lip': 1, 'g d': 1, 't\nd': 1, '\nde': 1, 'l i': 1, 'eg[': 1, 'g[2': 1, ']\np': 1}"
Imad,Deeletion_by_value.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'class': 2, 'node:': 1, 'def': 5, '__init__(self,': 1, 'data):': 1, 'self.data': 1, '=': 9, 'data': 1, 'self.next_element': 1, 'none': 4, 'linkedlist:': 1, '__init__(self):': 1, 'self.head_node': 4, 'get_head(self):': 1, 'return': 5, 'is_empty(self):': 1, 'if': 2, 'is': 4, 'none:': 2, 'print(""list': 1, 'empty"")': 1, 'true': 2, 'else:': 1, 'false': 2, 'del_by_value(self,': 1, 'value):': 1, 'temp': 4, 'tempd': 2, 'while': 1, 'temp.data': 2, 'not': 1, 'value:': 1, 'tempd.next_element': 1, 'temp.next_element': 2}","{'cla': 2, 'las': 2, 'ass': 2, 'ss ': 2, 's N': 2, ' No': 7, 'Nod': 1, 'ode': 5, 'de:': 1, 'e:\n': 5, ':\n ': 11, '\n  ': 26, '   ': 176, '  d': 5, ' de': 6, 'def': 5, 'ef ': 5, 'f _': 2, ' __': 2, '__i': 2, '_in': 2, 'ini': 2, 'nit': 2, 'it_': 2, 't__': 2, '__(': 2, '_(s': 2, '(se': 5, 'sel': 11, 'elf': 11, 'lf,': 2, 'f, ': 2, ', d': 1, ' da': 2, 'dat': 5, 'ata': 5, 'ta)': 1, 'a):': 1, '):\n': 5, '  s': 3, ' se': 6, 'lf.': 6, 'f.d': 1, '.da': 3, 'ta ': 3, 'a =': 1, ' = ': 9, '= d': 1, 'ta\n': 1, 'a\n ': 1, 'f.n': 1, '.ne': 4, 'nex': 4, 'ext': 4, 'xt_': 4, 't_e': 4, '_el': 4, 'ele': 4, 'lem': 4, 'eme': 4, 'men': 4, 'ent': 4, 'nt ': 2, 't =': 2, '= N': 4, 'Non': 6, 'one': 6, 'ne\n': 4, 'e\n\n': 2, '\n\nc': 1, '\ncl': 1, 's l': 1, ' li': 1, 'lin': 1, 'ink': 1, 'nke': 1, 'ked': 1, 'edl': 1, 'dli': 1, 'lis': 1, 'ist': 2, 'st:': 1, 't:\n': 1, 'lf)': 3, 'f):': 3, 'f.h': 4, '.he': 4, 'hea': 5, 'ead': 5, 'ad_': 4, 'd_n': 4, '_no': 4, 'nod': 4, 'de ': 2, 'e =': 1, 'e\n ': 8, 'f g': 1, ' ge': 1, 'get': 1, 'et_': 1, 't_h': 1, '_he': 1, 'ad(': 1, 'd(s': 1, '  r': 5, ' re': 5, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 5, 'n s': 1, 'de\n': 2, 'f i': 1, ' is': 5, 'is_': 1, 's_e': 1, '_em': 1, 'emp': 12, 'mpt': 2, 'pty': 2, 'ty(': 1, 'y(s': 1, '  i': 2, ' if': 2, 'if ': 2, 'f s': 1, 'e i': 1, 'is ': 4, 'ne:': 2, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 't(""': 1, '(""L': 1, '""Li': 1, 'Lis': 1, 'st ': 1, 't i': 1, 's E': 1, ' Em': 1, 'Emp': 1, 'ty""': 1, 'y"")': 1, '"")\n': 1, ')\n ': 1, 'n T': 2, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue\n': 2, '  e': 1, ' el': 1, 'els': 1, 'lse': 3, 'se:': 1, 'n F': 2, ' Fa': 2, 'Fal': 2, 'als': 2, 'se\n': 2, '  \n': 2, ' \n ': 1, 'f d': 1, 'del': 1, 'el_': 1, 'l_b': 1, '_by': 1, 'by_': 1, 'y_v': 1, '_va': 1, 'val': 3, 'alu': 3, 'lue': 3, 'ue(': 1, 'e(s': 1, ', v': 1, ' va': 2, 'ue)': 1, 'e):': 1, '  t': 6, ' te': 11, 'tem': 11, 'mp ': 3, 'p =': 3, '= s': 1, 'mpd': 3, 'pd ': 2, 'd =': 2, '\n\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e t': 1, 'mp.': 4, 'p.d': 2, 'a i': 2, 's n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't N': 1, 'f t': 1, 's v': 1, 'ue:': 1, 'pd.': 1, 'd.n': 1, '= t': 3, 'p.n': 2, 'nt\n': 2, 't\n ': 2, 'mp\n': 1, 'p\n ': 1}"
Imad,Duplicate_in_linklist.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 2, 'there': 2, 'are': 1, 'different': 1, 'method': 3, 'to': 4, 'solve': 1, 'this': 4, 'problem': 2, '1.': 1, 'brute': 1, 'force:': 1, 'in': 8, 'method,': 2, 'we': 5, 'pick': 2, 'one': 1, 'value': 3, 'traverse': 1, 'the': 7, 'whole': 1, 'list': 3, 'find': 1, ""it's"": 1, 'equal': 1, 'vaules': 1, 'and': 2, 'remove': 2, 'them': 1, 'then': 1, 'next': 2, 'element': 2, 'list.': 1, 'it': 3, 'takes': 2, 'o(n(n-1)(n-2)....)': 1, 'time': 2, 'which': 1, 'is': 3, 'equivalent': 1, 'o(n^2)': 1, '2.': 1, 'using': 1, 'dictionary:': 1, 'use': 1, 'dictionary': 3, 'keep': 1, 'track': 1, 'of': 4, 'values': 1, 'that': 2, 'have': 1, 'included': 1, 'before': 1, 'if': 3, 'comes': 1, 'front': 1, 'us': 1, 'as': 1, 'well': 1, 'then.': 1, 'some': 1, 'exta': 1, 'space': 1, 'but': 1, 'solves': 1, 'o(n)time.which': 1, 'quite': 1, 'efficient': 1, '#': 9, 'second': 1, 'from': 2, 'linkedlist': 2, 'import': 2, 'node': 4, 'access': 1, 'head_node': 1, '=>': 6, 'list.get_head()': 1, 'check': 1, 'empty': 1, 'list.is_empty()': 1, 'delete': 2, 'at': 1, 'head': 1, 'list.delete_at_head()': 1, 'by': 1, 'list.delete(value)': 1, 'search': 1, 'for': 1, 'list.search()': 1, 'length': 1, 'list.length()': 1, 'class': 1, '{': 1, 'int': 1, 'data': 1, ';': 1, 'next_element;}': 1, 'def': 1, 'remove_duplicates(lst):': 1, 'write': 1, '-': 2, 'your': 1, 'code': 1, 'temp': 3, '=': 8, 'lst.get_head()': 1, 'index': 2, '1': 1, 'my_dict': 1, '{}': 1, 'while': 1, 'temp:': 1, 'temp.data': 2, 'not': 1, 'my_dict:': 2, 'my_dict[temp.data]': 1, 'elif': 1, 'temp_d': 2, 'temp_p.next_element': 1, 'temp_d.next_element': 1, 'none': 1, 'temp_p': 1, 'temp=': 1, 'temp.next_element': 1, 'index+=1': 1, 'return': 1, 'lst': 1}","{""'''"": 2, ""''\n"": 2, ""'\nT"": 1, '\nTh': 1, 'The': 1, 'her': 2, 'ere': 3, 're ': 4, 'e a': 4, ' ar': 1, 'are': 1, 'e d': 2, ' di': 5, 'dif': 1, 'iff': 1, 'ffe': 1, 'fer': 1, 'ren': 1, 'ent': 9, 'nt ': 7, 't m': 1, ' me': 3, 'met': 3, 'eth': 5, 'tho': 5, 'hod': 5, 'od ': 3, 'd t': 3, ' to': 4, 'to ': 4, 'o s': 1, ' so': 3, 'sol': 2, 'olv': 2, 'lve': 2, 've ': 4, 'e t': 6, ' th': 16, 'thi': 3, 'his': 4, 'is ': 7, 's p': 1, ' pr': 2, 'pro': 2, 'rob': 2, 'obl': 2, 'ble': 2, 'lem': 8, 'em ': 3, 'm \n': 2, ' \n1': 1, '\n1.': 1, '1. ': 1, '. B': 1, ' Br': 1, 'Bru': 1, 'rut': 1, 'ute': 1, 'te ': 5, 'e F': 1, ' Fo': 1, 'For': 1, 'orc': 1, 'rce': 1, 'ce:': 1, 'e: ': 1, ': I': 2, ' In': 2, 'In ': 2, 'n t': 3, 's m': 2, 'od,': 2, 'd, ': 2, ', w': 2, ' we': 6, 'we ': 5, 'e p': 3, ' pi': 2, 'pic': 2, 'ick': 2, 'ck ': 4, 'k o': 2, ' on': 1, 'one': 2, 'ne ': 1, 'e v': 2, ' va': 5, 'val': 6, 'alu': 5, 'lue': 5, 'ue ': 3, ' tr': 2, 'tra': 2, 'rav': 1, 'ave': 2, 'ver': 1, 'ers': 1, 'rse': 1, 'se ': 2, 'the': 11, 'he ': 7, 'e w': 2, ' wh': 3, 'who': 1, 'hol': 1, 'ole': 1, 'le ': 2, 'e l': 3, ' li': 10, 'lis': 10, 'ist': 12, 'st ': 4, 't t': 5, 'o f': 1, ' fi': 1, 'fin': 1, 'ind': 4, 'nd ': 4, 'd i': 1, ' it': 4, ""it'"": 1, ""t's"": 1, ""'s "": 1, 's e': 3, ' eq': 2, 'equ': 2, 'qua': 1, 'ual': 1, 'al ': 1, 'l v': 1, 'vau': 1, 'aul': 1, 'ule': 1, 'les': 1, 'es ': 6, 's a': 1, ' an': 2, 'and': 2, 'd r': 1, ' re': 4, 'rem': 3, 'emo': 3, 'mov': 3, 'ove': 3, 'hem': 1, ' \n ': 3, '\n  ': 18, '   ': 134, '  t': 7, 'hen': 2, 'en ': 1, 'n w': 1, 'k t': 1, 'e n': 2, ' ne': 3, 'nex': 6, 'ext': 7, 'xt ': 2, 't e': 1, ' el': 3, 'ele': 10, 'eme': 6, 'men': 6, 't i': 5, ' in': 11, 'in ': 6, 'st.': 8, 't. ': 1, '. i': 1, 'it ': 3, ' ta': 2, 'tak': 2, 'ake': 2, 'kes': 2, 's O': 1, ' O(': 3, 'O(n': 3, '(n(': 1, 'n(n': 1, '(n-': 2, 'n-1': 1, '-1)': 1, '1)(': 1, ')(n': 1, 'n-2': 1, '-2)': 1, '2).': 1, ')..': 1, '...': 2, '..)': 1, '.) ': 1, ') t': 1, ' ti': 2, 'tim': 2, 'ime': 3, 'me ': 3, 'whi': 2, 'hic': 2, 'ich': 2, 'ch ': 3, 'h i': 2, ' is': 3, 'qui': 2, 'uiv': 1, 'iva': 1, 'ale': 1, 'len': 2, 'o O': 1, '(n^': 1, 'n^2': 1, '^2)': 1, '2)\n': 1, ')\n\n': 1, '\n\n2': 1, '\n2.': 1, '2. ': 1, '. u': 1, ' us': 3, 'usi': 1, 'sin': 1, 'ing': 1, 'ng ': 1, 'g d': 1, 'dic': 8, 'ict': 8, 'cti': 4, 'tio': 4, 'ion': 4, 'ona': 4, 'nar': 4, 'ary': 4, 'ry:': 1, 'y: ': 1, 'e u': 1, 'use': 1, 'ry ': 3, 'y t': 1, 'o k': 1, ' ke': 1, 'kee': 1, 'eep': 1, 'ep ': 1, 'p t': 1, 'rac': 1, 'ack': 1, ' of': 4, 'of ': 4, 'f t': 5, 'ues': 1, 's t': 2, 'tha': 2, 'hat': 2, 'at ': 3, 't w': 1, 'e h': 1, ' ha': 1, 'hav': 1, 'e i': 4, 'inc': 1, 'ncl': 1, 'clu': 1, 'lud': 1, 'ude': 1, 'ded': 1, 'ed ': 1, 'd b': 1, ' be': 1, 'bef': 1, 'efo': 1, 'for': 2, 'ore': 1, 'n d': 1, 'y \n': 1, '  i': 5, ' if': 3, 'if ': 4, 't v': 1, 'e c': 2, ' co': 1, 'com': 1, 'ome': 2, 'mes': 1, 's i': 1, 'n f': 1, ' fr': 1, 'fro': 3, 'ron': 1, 'ont': 1, 't o': 1, 'f u': 1, 'us ': 1, 's n': 1, ' as': 1, 'as ': 1, 's w': 1, 'wel': 1, 'ell': 1, 'll ': 1, 'l w': 1, 'e r': 1, 'en.': 1, 'n. ': 1, '. \n': 1, '  T': 1, ' Th': 1, 'Thi': 1, 's M': 1, ' Me': 2, 'Met': 2, 's s': 1, 'som': 1, 'e e': 2, ' ex': 1, 'xta': 1, 'ta ': 4, 'a s': 1, ' sp': 1, 'spa': 1, 'pac': 1, 'ace': 1, 'ce ': 1, 'e o': 1, 'f d': 1, 'y b': 1, ' bu': 1, 'but': 1, 'ut ': 1, 't s': 1, 'ves': 1, 'm i': 1, 'n O': 1, '(n)': 1, 'n)T': 1, ')Ti': 1, 'Tim': 1, 'me.': 1, 'e.W': 1, '.Wh': 1, 'Whi': 1, 's q': 1, ' qu': 1, 'uit': 1, 'ite': 2, ' ef': 1, 'eff': 1, 'ffi': 1, 'fic': 1, 'ici': 1, 'cie': 1, 'ien': 1, 'nt\n': 3, 't\n\n': 1, '\n\n\n': 2, ""\n\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\n#': 1, '\n# ': 8, '# S': 2, ' Se': 2, 'Sec': 1, 'eco': 1, 'con': 1, 'ond': 1, 'd M': 1, 'd \n': 1, ' \nf': 1, '\nfr': 2, 'rom': 2, 'om ': 2, 'm L': 1, ' Li': 2, 'Lin': 2, 'ink': 2, 'nke': 2, 'ked': 2, 'edL': 2, 'dLi': 2, 'Lis': 2, ' im': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't L': 1, 'st\n': 2, 't\nf': 1, 'm N': 1, ' No': 5, 'Nod': 4, 'ode': 6, 'de ': 4, 't N': 1, 'de\n': 2, 'e\n#': 1, '# A': 1, ' Ac': 1, 'Acc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss ': 2, 's h': 1, ' he': 2, 'hea': 5, 'ead': 5, 'ad_': 1, 'd_n': 1, '_no': 1, 'nod': 1, 'e =': 2, ' =>': 6, '=> ': 6, '> l': 6, 't.g': 2, '.ge': 2, 'get': 2, 'et_': 2, 't_h': 3, '_he': 3, 'ad(': 3, 'd()': 3, '()\n': 6, ')\n#': 6, '# C': 1, ' Ch': 1, 'Che': 1, 'hec': 1, 'eck': 1, 'k i': 1, 'f l': 1, ' em': 1, 'emp': 16, 'mpt': 2, 'pty': 2, 'ty ': 1, 'y =': 1, 't.i': 1, '.is': 1, 'is_': 1, 's_e': 1, '_em': 1, 'ty(': 1, 'y()': 1, '# D': 2, ' De': 2, 'Del': 2, 'let': 4, 'ete': 4, ' at': 1, 't h': 1, 'ad ': 1, 'd =': 3, 't.d': 2, '.de': 2, 'del': 2, 'te_': 1, 'e_a': 1, '_at': 1, 'at_': 1, 'e b': 1, ' by': 1, 'by ': 1, 'y v': 1, 'te(': 1, 'e(v': 1, '(va': 1, 'ue)': 1, 'e)\n': 1, 'Sea': 1, 'ear': 2, 'arc': 2, 'rch': 2, 'h f': 1, ' fo': 1, 'or ': 1, 'r e': 1, 't =': 4, 't.s': 1, '.se': 1, 'sea': 1, 'ch(': 1, 'h()': 2, '# L': 1, ' Le': 1, 'Len': 1, 'eng': 2, 'ngt': 2, 'gth': 2, 'th ': 1, 'h o': 1, 't.l': 1, '.le': 1, 'th(': 1, '# N': 1, ' cl': 1, 'cla': 1, 'las': 1, 'ass': 1, 's  ': 1, '  {': 1, ' { ': 1, '{ i': 1, 'int': 1, 't d': 1, ' da': 1, 'dat': 4, 'ata': 4, 'a ;': 1, ' ; ': 1, '; N': 1, 'xt_': 4, 't_e': 4, '_el': 4, 'nt;': 1, 't;}': 1, ';}\n': 1, '}\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f r': 1, 've_': 1, 'e_d': 1, '_du': 1, 'dup': 1, 'upl': 1, 'pli': 1, 'lic': 1, 'ica': 1, 'cat': 1, 'ate': 1, 'tes': 1, 'es(': 1, 's(l': 1, '(ls': 1, 'lst': 3, 'st)': 1, 't):': 1, '):\n': 1, ':\n ': 4, '  #': 1, ' # ': 1, '# W': 1, ' Wr': 1, 'Wri': 1, 'rit': 1, 'e -': 1, ' - ': 2, '- Y': 1, ' Yo': 1, 'You': 1, 'our': 1, 'ur ': 1, 'r -': 1, '- C': 1, ' Co': 1, 'Cod': 1, 'e\n ': 2, ' te': 13, 'tem': 14, 'mp ': 1, 'p =': 2, ' = ': 8, '= l': 1, ' ls': 2, ')\n ': 1, 'nde': 3, 'dex': 3, 'ex ': 1, 'x =': 1, '= 1': 1, ' 1\n': 1, '1\n ': 2, '  m': 2, ' my': 4, 'my_': 4, 'y_d': 4, '_di': 4, 'ct ': 1, '= {': 1, ' {}': 1, '{}\n': 1, '}\n ': 1, '  w': 1, 'hil': 1, 'ile': 1, 'mp:': 1, 'p:\n': 1, 'mp.': 4, 'p.d': 3, '.da': 3, 'a n': 1, ' no': 1, 'not': 1, 'ot ': 1, 'n m': 2, 'ct:': 2, 't:\n': 2, 'ct[': 1, 't[t': 1, '[te': 1, 'ta]': 1, 'a] ': 1, '] =': 1, '= i': 1, 'ex\n': 1, 'x\n ': 1, '  e': 1, 'eli': 1, 'lif': 1, 'a  ': 1, 'mp_': 5, 'p_d': 3, '_d ': 2, '= t': 4, 'mp\n': 2, 'p\n ': 2, 'p_p': 2, '_p.': 1, 'p.n': 2, '.ne': 3, '_d.': 1, 'd.n': 1, 't\n ': 2, '= N': 1, 'Non': 1, 'ne\n': 1, '_p ': 1, 'mp=': 1, 'p= ': 1, 'ex+': 1, 'x+=': 1, '+=1': 1, '=1\n': 1, '  r': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n l': 1}"
Imad,First_Non_rep_integer.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'def': 2, 'non_rep_integer(lst):': 1, 'check_list': 1, '=': 2, '[0': 1, 'for': 5, 'i': 5, 'in': 4, 'range(1000)]': 1, 'range(len(lst)):': 1, 'check_list.insert(lst[i],': 1, 'check_list[i]+1': 1, ')': 1, 'range(len(check_list)):': 1, 'if': 2, 'check_list[i]': 1, '==': 2, '1:': 1, 'return': 4, 'list_1': 1, '[2,3,2,6,6]': 1, '#': 3, 'this': 2, 'is': 2, 'not': 1, 'a': 2, 'corrct': 1, 'implementation': 1, 'as': 1, 'something': 1, 'missing': 1, 'because,': 1, 'it': 1, 'gives': 1, 'min': 1, 'non': 2, 'repeating': 2, 'integer': 1, 'but': 1, 'we': 3, 'need': 1, 'first': 1, 'integer.': 1, '#print(non_rep_integer(list_1))': 1, 'brute': 1, 'force:': 1, 'would': 2, 'iterate': 1, 'over': 1, 'the': 1, 'list': 1, 'n(n-1)(n-2)...': 1, 'untill': 1, 'find': 1, 'value': 1, 'otherwise': 1, 'none': 2, 'be': 1, 'applied': 1, 'using': 1, 'nested': 1, 'loops': 1, 'first_non(lst_1):': 1, 'range(len(lst_1)):': 1, 'j=0': 1, 'while': 1, '(j<len(lst_1)):': 1, '(i!=j': 1, 'and': 1, 'lst_1[i]': 2, 'lst_1[j]):': 1, 'break': 1, 'j+=1': 1, 'if(j': 1, '==len(lst_1)):': 1, 'print(first_non(list_1))': 1}","{'\nde': 2, 'def': 2, 'ef ': 2, 'f N': 1, ' No': 2, 'Non': 5, 'on_': 2, 'n_R': 2, '_Re': 2, 'Rep': 2, 'ep_': 2, 'p_i': 2, '_in': 2, 'int': 6, 'nte': 4, 'teg': 4, 'ege': 4, 'ger': 4, 'er(': 2, 'r(l': 2, '(ls': 7, 'lst': 10, 'st)': 3, 't):': 1, '):\n': 7, ':\n ': 8, '\n  ': 16, '   ': 96, '  c': 2, ' ch': 4, 'che': 5, 'hec': 5, 'eck': 5, 'ck_': 5, 'k_l': 5, '_li': 5, 'lis': 9, 'ist': 9, 'st ': 3, 't =': 1, ' = ': 2, '= [': 2, ' [0': 1, '[0 ': 1, '0 f': 1, ' fo': 5, 'for': 5, 'or ': 5, 'r i': 4, ' i ': 4, 'i i': 4, ' in': 6, 'in ': 5, 'n r': 6, ' ra': 4, 'ran': 4, 'ang': 4, 'nge': 4, 'ge(': 4, 'e(1': 1, '(10': 1, '100': 1, '000': 1, '00)': 1, '0)]': 1, ')]\n': 1, ']\n ': 2, '  f': 3, 'e(l': 3, '(le': 3, 'len': 5, 'en(': 5, 'n(l': 6, 't))': 2, ')):': 5, '): ': 1, ': \n': 1, ' \n ': 1, 'st.': 1, 't.i': 1, '.in': 1, 'ins': 1, 'nse': 1, 'ser': 1, 'ert': 1, 'rt(': 1, 't(l': 1, 'st[': 3, 't[i': 3, '[i]': 5, 'i],': 1, '], ': 1, ', c': 1, 'i]+': 1, ']+1': 1, '+1 ': 1, '1 )': 1, ' )\n': 1, ')\n ': 1, 'n(c': 1, '(ch': 1, '  i': 3, ' if': 3, 'if ': 2, 'f c': 1, 'i] ': 2, '] =': 2, ' ==': 3, '== ': 2, '= 1': 1, ' 1:': 1, '1:\n': 1, '  r': 3, ' re': 6, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 4, 'n i': 1, ' i\n': 1, 'i\n\n': 1, '\n\nl': 1, '\nli': 1, 'st_': 12, 't_1': 10, '_1 ': 1, '1 =': 1, ' [2': 1, '[2,': 1, '2,3': 1, ',3,': 1, '3,2': 1, ',2,': 1, '2,6': 1, ',6,': 1, '6,6': 1, ',6]': 1, '6] ': 1, '] \n': 1, ' \n\n': 2, '\n\n ': 1, '  \n': 1, ' \n#': 1, '\n# ': 3, '# T': 1, ' Th': 1, 'Thi': 1, 'his': 2, 'is ': 4, 's i': 1, ' is': 2, 's n': 1, ' no': 4, 'not': 1, 'ot ': 1, 't a': 1, ' a ': 2, 'a c': 1, ' co': 1, 'cor': 1, 'orr': 1, 'rrc': 1, 'rct': 1, 'ct ': 1, 't i': 1, ' im': 1, 'imp': 1, 'mpl': 1, 'ple': 1, 'lem': 1, 'eme': 1, 'men': 1, 'ent': 1, 'nta': 1, 'tat': 1, 'ati': 3, 'tio': 1, 'ion': 1, 'on ': 3, 'n a': 1, ' as': 1, 'as ': 1, 's s': 1, ' so': 1, 'som': 1, 'ome': 1, 'met': 1, 'eth': 1, 'thi': 2, 'hin': 1, 'ing': 5, 'ng ': 5, 'g i': 3, 's m': 2, ' mi': 2, 'mis': 1, 'iss': 1, 'ssi': 1, 'sin': 2, 'g b': 1, ' be': 2, 'bec': 1, 'eca': 1, 'cau': 1, 'aus': 1, 'use': 1, 'se,': 1, 'e, ': 1, ', i': 1, ' it': 2, 'it ': 1, 't g': 1, ' gi': 1, 'giv': 1, 'ive': 1, 'ves': 1, 'es ': 1, 'min': 1, 'n n': 2, 'non': 3, 'rep': 2, 'epe': 2, 'pea': 2, 'eat': 2, 'tin': 2, 'er ': 2, 'r b': 1, ' bu': 1, 'but': 1, 'ut ': 1, 't w': 1, ' we': 3, 'we ': 3, 'e n': 1, ' ne': 2, 'nee': 1, 'eed': 1, 'ed ': 3, 'd f': 1, ' fi': 2, 'fir': 1, 'irs': 3, 'rst': 3, 't n': 1, 'er.': 1, 'r.\n': 1, '.\n\n': 1, '\n\n#': 2, '\n#p': 1, '#pr': 1, 'pri': 2, 'rin': 2, 'nt(': 2, 't(N': 1, '(No': 1, '(li': 2, '_1)': 6, '1))': 5, '))\n': 2, ')\n\n': 1, '# B': 1, ' Br': 1, 'Bru': 1, 'rut': 1, 'ute': 1, 'te ': 2, 'e F': 1, ' Fo': 1, 'For': 1, 'orc': 1, 'rce': 1, 'ce:': 1, 'e: ': 1, ': w': 1, 'e w': 1, ' wo': 2, 'wou': 2, 'oul': 2, 'uld': 2, 'ld ': 2, 'd i': 1, 'ite': 1, 'ter': 1, 'era': 1, 'rat': 1, 'ate': 1, 'e o': 2, ' ov': 1, 'ove': 1, 'ver': 1, 'r t': 1, ' th': 2, 'the': 2, 'he ': 1, 'e l': 1, ' li': 1, 't f': 1, 'r n': 1, ' n(': 1, 'n(n': 1, '(n-': 2, 'n-1': 1, '-1)': 1, '1)(': 1, ')(n': 1, 'n-2': 1, '-2)': 1, '2).': 1, ')..': 1, '...': 1, '.. ': 1, '. u': 1, ' un': 1, 'unt': 1, 'nti': 1, 'til': 1, 'ill': 1, 'll ': 1, 'l w': 1, 'e f': 1, 'fin': 1, 'ind': 1, 'nd ': 2, 'd a': 1, 'a v': 1, ' va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ue ': 1, ' ot': 1, 'oth': 1, 'her': 1, 'erw': 1, 'rwi': 1, 'wis': 1, 'ise': 1, 'se ': 1, 'e r': 1, 'one': 2, 'ne\n': 2, 'e\n#': 1, '# t': 1, 's w': 1, 'd b': 1, 'be ': 1, 'e a': 1, ' ap': 1, 'app': 1, 'ppl': 1, 'pli': 1, 'lie': 1, 'ied': 1, 'd u': 1, ' us': 1, 'usi': 1, 'g n': 1, 'nes': 1, 'est': 1, 'ste': 1, 'ted': 1, 'd l': 2, ' lo': 1, 'loo': 1, 'oop': 1, 'ops': 1, 'ps ': 1, 's \n': 1, '\n\nd': 1, 'f F': 1, ' Fi': 1, 'Fir': 2, 't_N': 2, '_No': 2, 'on(': 2, '1):': 1, '  j': 2, ' j=': 1, 'j=0': 1, '=0\n': 1, '0\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e (': 1, ' (j': 1, '(j<': 1, 'j<l': 1, '<le': 1, 'f (': 1, ' (i': 1, '(i!': 1, 'i!=': 1, '!=j': 1, '=j ': 1, 'j a': 1, ' an': 1, 'and': 1, ' ls': 3, '_1[': 3, '1[i': 2, '= l': 1, '1[j': 1, '[j]': 1, 'j])': 1, ']):': 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n ': 1, ' j+': 1, 'j+=': 1, '+=1': 1, '=1\n': 1, '1\n ': 1, 'if(': 1, 'f(j': 1, '(j ': 1, 'j =': 1, '==l': 1, '=le': 1, 'n l': 1, 'i]\n': 1, 'n N': 1, 'e\n\n': 1, '\n\np': 1, '\npr': 1, 't(F': 1, '(Fi': 1}"
Imad,hashfunction.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 6, 'we': 7, 'learned': 2, 'that': 5, 'a': 15, 'list': 9, 'can': 5, 'be': 4, 'used': 3, 'to': 8, 'implement': 1, 'hash': 6, 'table': 3, 'in': 8, 'python.': 1, 'key': 16, 'is': 8, 'map': 1, 'value': 1, 'on': 4, 'the': 25, 'and': 3, 'efficiency': 1, 'of': 13, 'depends': 1, 'how': 1, 'computed.': 1, 'at': 5, 'first': 1, 'glance,': 1, 'you': 1, 'may': 1, 'observe': 1, 'directly': 2, 'use': 2, 'indices': 1, 'as': 3, 'keys': 2, 'because': 1, 'each': 1, 'index': 11, 'unique.': 1, 'only': 1, 'problem': 1, 'would': 2, 'eventually': 1, 'exceed': 1, 'size': 3, 'and,': 1, 'every': 1, 'insertion,': 1, 'need': 3, 'resized.': 1, 'syntactically,': 1, 'easily': 1, 'increase': 1, 'python,': 1, 'but': 1, 'before,': 1, 'process': 1, 'still': 1, 'takes': 2, 'o(n)': 1, 'time': 1, 'back': 1, 'end.': 1, 'order': 1, 'limit': 1, 'range': 1, 'boundaries': 1, 'list,': 1, 'function': 4, 'converts': 1, 'large': 1, 'into': 1, 'smaller': 2, 'key.': 2, 'this': 4, 'job': 1, 'function.': 1, 'simply': 1, 'an': 3, 'itemâ\x80\x99s': 1, 'returns': 1, 'corresponding': 1, 'for': 5, 'item.': 1, 'depending': 1, 'your': 1, 'program,': 1, 'calculation': 1, 'simple': 1, 'arithmetic': 3, 'or': 1, 'very': 2, 'complicated': 1, 'encryption': 1, 'method.': 1, 'however,': 1, 'it': 3, 'important': 1, 'choose': 1, 'efficient': 1, 'hashing': 1, 'affects': 1, 'performance': 1, 'mechanism.': 1, 'letâ\x80\x99s': 1, 'have': 1, 'look': 1, 'some': 1, 'most': 1, 'common': 1, 'functions': 1, 'modern': 1, 'programming.': 1, '1.': 2, 'modular:': 1, 'approach,': 1, 'take': 1, 'modular': 1, 'with': 1, 'size:': 2, '=': 14, 'mod': 2, 'table_size': 1, 'hence,': 1, 'will': 2, 'always': 2, 'stay': 1, 'between': 1, '0': 2, 'tablesize': 1, '-': 1, 'def': 3, 'hash_modular(key,': 2, 'size):': 1, 'return': 3, '(key': 2, '%': 2, 'size)': 1, 'lst': 1, '[none]': 1, '*': 1, '10': 2, '#': 2, '35': 1, 'len(lst))': 1, 'print(""the': 2, 'key:': 1, '""': 7, '+': 9, 'str(key)': 3, 'str(index))': 2, '2.': 1, 'truncation:': 1, 'select': 1, 'part': 1, 'instead': 1, 'whole': 1, 'once': 1, 'again,': 1, 'operation,': 1, 'although': 1, 'does': 1, 'not': 1, 'based': 1, '123456': 2, '->': 2, '456': 1, 'hash_trunc(key):': 1, '1000)': 1, 'give': 1, 'us': 1, 'upto': 1, '3': 1, 'digits': 1, 'hash_trunc(key)': 1, 'folding:': 1, 'divide': 1, 'small': 1, 'chunks': 2, 'then': 1, 'perform': 1, 'operation': 1, 'those': 1, 'chunks.': 1, '-i-e-': 1, 'add': 1, 'together.': 1, '456789,': 1, 'chunk_size=2': 1, '45+67+89': 1, 'hash_fold(key,': 1, 'chunk_size):': 2, 'str_key': 1, 'print(""key:': 1, 'str(key))': 1, 'hash_value': 4, 'print(""chunks:': 1, '"")': 1, 'i': 3, 'range(0,': 1, 'len(str_key),': 1, 'if': 1, '(i+chunk_size': 1, '<': 1, 'len(str_key)):': 1, 'print(str_key[i:': 2, 'chunk_size])': 2, '+=': 2, 'int(str_key[i:': 2, 'else:': 1, 'len(str_key)])': 2, '4567899': 1, 'chunk_sixe': 1, '2': 1, 'print(hash_fold(key,': 1, 'chunk_sixe))': 1}","{""'''"": 6, ""''\n"": 6, ""'\nw"": 1, '\nwe': 2, 'we ': 7, 'e l': 9, ' le': 7, 'lea': 2, 'ear': 2, 'arn': 2, 'rne': 2, 'ned': 2, 'ed ': 11, 'd t': 8, ' th': 32, 'tha': 5, 'hat': 5, 'at ': 9, 't a': 6, ' a ': 13, 'a l': 3, ' li': 10, 'lis': 9, 'ist': 10, 'st ': 12, 't c': 3, ' ca': 6, 'can': 5, 'an ': 8, 'n b': 2, ' be': 7, 'be ': 4, 'e u': 2, ' us': 6, 'use': 6, 'sed': 4, ' to': 9, 'to ': 10, 'o i': 1, ' im': 2, 'imp': 4, 'mpl': 4, 'ple': 2, 'lem': 2, 'eme': 1, 'men': 1, 'ent': 3, 'nt ': 3, 'a h': 2, ' ha': 17, 'has': 17, 'ash': 17, 'sh ': 6, 'h t': 4, ' ta': 8, 'tab': 5, 'abl': 5, 'ble': 6, 'le ': 5, 'e i': 6, ' in': 22, 'in ': 6, 'n P': 2, ' Py': 2, 'Pyt': 2, 'yth': 2, 'tho': 5, 'hon': 2, 'on.': 2, 'n. ': 1, '. A': 3, ' A ': 1, 'A k': 1, ' ke': 18, 'key': 42, 'ey ': 19, 'y i': 7, ' is': 7, 'is ': 12, 's u': 3, 'o m': 1, ' ma': 2, 'map': 1, 'ap ': 1, 'p a': 1, 'a v': 2, ' va': 1, 'val': 5, 'alu': 5, 'lue': 5, 'ue ': 4, 'e o': 6, ' on': 5, 'on ': 12, 'n t': 4, 'the': 27, 'he ': 27, ' an': 7, 'and': 4, 'nd ': 3, 'e e': 2, ' ef': 2, 'eff': 2, 'ffi': 2, 'fic': 2, 'ici': 2, 'cie': 2, 'ien': 2, 'enc': 3, 'ncy': 1, 'cy ': 1, 'y o': 3, ' of': 13, 'of ': 13, 'f a': 1, 'e d': 1, ' de': 1, 'dep': 1, 'epe': 2, 'pen': 2, 'end': 3, 'nds': 1, 'ds ': 1, 's o': 3, 'n h': 3, ' ho': 1, 'how': 1, 'ow ': 1, 'w a': 1, 'a k': 2, 'y \n': 1, ' \ni': 1, '\nis': 1, 's c': 1, ' co': 5, 'com': 3, 'omp': 2, 'mpu': 1, 'put': 1, 'ute': 1, 'ted': 2, 'ed.': 2, 'd. ': 2, ' At': 1, 'At ': 1, 't f': 2, ' fi': 1, 'fir': 1, 'irs': 1, 'rst': 1, 't g': 1, ' gl': 1, 'gla': 1, 'lan': 1, 'anc': 2, 'nce': 4, 'ce,': 2, 'e, ': 3, ', y': 1, ' yo': 2, 'you': 2, 'ou ': 1, 'u m': 1, 'may': 1, 'ay ': 2, ' ob': 1, 'obs': 1, 'bse': 1, 'ser': 2, 'erv': 1, 'rve': 1, 've ': 3, 'e t': 4, 't w': 2, ' we': 5, 'e c': 6, 'n d': 1, ' di': 3, 'dir': 2, 'ire': 2, 'rec': 2, 'ect': 4, 'ctl': 2, 'tly': 2, 'ly ': 6, 'y u': 1, 'se ': 6, 'ind': 14, 'ndi': 3, 'dic': 1, 'ice': 1, 'ces': 2, 'es ': 5, 's a': 4, ' as': 3, 'as ': 3, 's k': 2, 'eys': 2, 'ys ': 4, 's b': 1, 'bec': 1, 'eca': 1, 'cau': 1, 'aus': 1, ' ea': 2, 'eac': 1, 'ach': 2, 'ch ': 1, 'h i': 2, 'nde': 13, 'dex': 13, 'ex ': 11, 'x i': 2, ' un': 1, 'uni': 1, 'niq': 1, 'iqu': 1, 'que': 1, 'ue.': 1, 'e.\n': 1, '.\n\n': 6, '\n\nT': 1, '\nTh': 2, 'The': 2, 'onl': 1, 'nly': 1, 'y p': 1, ' pr': 8, 'pro': 5, 'rob': 1, 'obl': 1, 'em ': 1, 'm i': 1, 's t': 7, 't t': 5, 'e k': 5, 'y w': 2, ' wo': 2, 'wou': 2, 'oul': 2, 'uld': 2, 'ld ': 2, 'd e': 2, ' ev': 2, 'eve': 3, 'ven': 1, 'ntu': 1, 'tua': 1, 'ual': 1, 'all': 5, 'lly': 2, 'y e': 1, ' ex': 1, 'exc': 1, 'xce': 1, 'cee': 1, 'eed': 4, 'e s': 1, ' si': 9, 'siz': 15, 'ize': 16, 'ze ': 6, 'f t': 7, 'nd,': 1, 'd, ': 1, ', a': 2, ' at': 4, 't e': 1, 'ver': 5, 'ery': 3, 'ry ': 3, 'ins': 2, 'nse': 1, 'ert': 2, 'rti': 1, 'tio': 12, 'ion': 12, 'on,': 3, 'n, ': 4, ', t': 3, 'd n': 1, ' ne': 3, 'nee': 3, 'o b': 2, 'e r': 2, ' re': 5, 'res': 2, 'esi': 1, 'zed': 1, '. S': 1, ' Sy': 1, 'Syn': 1, 'ynt': 1, 'nta': 1, 'tac': 1, 'act': 1, 'cti': 7, 'tic': 4, 'ica': 2, 'cal': 2, 'ly,': 1, 'y,\n': 1, ',\nw': 1, 'n e': 2, 'eas': 2, 'asi': 1, 'sil': 1, 'ily': 1, 'inc': 1, 'ncr': 2, 'cre': 1, 'rea': 1, 'ase': 2, 't s': 4, ', b': 1, ' bu': 1, 'but': 1, 'ut ': 1, 's w': 1, 'd b': 1, 'bef': 1, 'efo': 1, 'for': 8, 'ore': 1, 're,': 1, 'e p': 2, 'roc': 1, 'oce': 1, 'ess': 1, 'ss ': 1, 's s': 2, ' st': 9, 'sti': 1, 'til': 1, 'ill': 3, 'll ': 4, 'l t': 1, 'tak': 3, 'ake': 3, 'kes': 2, 's O': 1, ' O(': 1, 'O(n': 1, '(n)': 1, 'n) ': 1, ') t': 1, ' ti': 1, 'tim': 1, 'ime': 1, 'me ': 2, 'e a': 6, 'e b': 3, ' ba': 2, 'bac': 1, 'ack': 1, 'ck ': 1, 'k e': 1, ' en': 2, 'nd.': 1, 'd.\n': 2, '\n\nI': 1, '\nIn': 2, 'In ': 2, 'n o': 2, ' or': 2, 'ord': 1, 'rde': 1, 'der': 2, 'er ': 3, 'r t': 3, 'o l': 1, 'lim': 1, 'imi': 1, 'mit': 1, 'it ': 4, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge ': 2, 'o t': 1, ' bo': 1, 'bou': 1, 'oun': 1, 'und': 1, 'nda': 1, 'dar': 1, 'ari': 3, 'rie': 1, 'ies': 1, 'st,': 1, 't, ': 1, ', w': 3, 'e n': 1, 'd a': 1, 'a f': 1, ' fu': 6, 'fun': 6, 'unc': 9, 'nct': 6, 'con': 1, 'onv': 1, 'nve': 1, 'rts': 1, 'ts ': 2, ' la': 1, 'lar': 5, 'arg': 1, 'rge': 1, 'int': 10, 'nto': 1, 'o a': 1, 'a s': 2, ' sm': 3, 'sma': 3, 'mal': 3, 'lle': 2, 'ler': 2, 'r k': 3, 'ey.': 2, 'y. ': 2, '. \n': 1, ' \nT': 1, 'Thi': 2, 'his': 4, 's i': 3, 'e j': 1, ' jo': 1, 'job': 1, 'ob ': 1, 'b o': 1, 'e h': 2, 'h f': 3, 'n.\n': 1, '\n\nA': 1, '\nA ': 1, 'A h': 1, 'n s': 1, 'sim': 2, 'ply': 1, 'y t': 1, 'n i': 1, ' it': 5, 'ite': 2, 'tem': 2, 'emâ': 1, 'mâ\x80': 1, 'â\x80\x99': 2, '\x80\x99s': 2, '\x99s ': 2, 'y a': 2, 'd r': 1, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rns': 1, 'ns ': 2, 'cor': 1, 'orr': 1, 'rre': 1, 'esp': 1, 'spo': 1, 'pon': 1, 'ond': 1, 'din': 3, 'ing': 5, 'ng ': 3, 'g i': 1, ' fo': 5, 'or ': 6, 't i': 2, 'em.': 1, 'm. ': 1, '. D': 1, ' De': 1, 'Dep': 1, 'g o': 1, 'n y': 1, 'our': 1, 'ur ': 1, 'r p': 1, 'rog': 2, 'ogr': 2, 'gra': 2, 'ram': 2, 'am,': 1, 'm, ': 1, ', \n': 1, ' \nt': 1, '\nth': 1, 'alc': 1, 'lcu': 1, 'cul': 1, 'ula': 5, 'lat': 1, 'ati': 4, 'thi': 2, 'x c': 1, ' ar': 2, 'rit': 3, 'ith': 4, 'thm': 3, 'hme': 3, 'met': 4, 'eti': 3, 'ic ': 3, 'c o': 2, 'r a': 1, ' ve': 2, 'y c': 1, 'pli': 1, 'lic': 1, 'cat': 2, 'ate': 1, 'cry': 1, 'ryp': 1, 'ypt': 1, 'pti': 1, 'n m': 2, ' me': 2, 'eth': 2, 'hod': 1, 'od.': 1, '.\nH': 1, '\nHo': 1, 'How': 1, 'owe': 1, 'wev': 1, 'er,': 1, 'r, ': 1, ', i': 1, 's v': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rta': 1, 'tan': 1, 'ant': 1, 'o c': 1, ' ch': 10, 'cho': 1, 'hoo': 1, 'oos': 1, 'ose': 2, 't h': 1, 'shi': 1, 'hin': 1, 'g f': 1, 'n a': 3, 't d': 2, ' af': 1, 'aff': 1, 'ffe': 1, 'fec': 1, 'cts': 1, ' pe': 2, 'per': 4, 'erf': 2, 'rfo': 2, 'orm': 2, 'rma': 1, 'man': 1, 'ce ': 2, 'e m': 4, 'mec': 1, 'ech': 1, 'cha': 1, 'han': 1, 'ani': 1, 'nis': 1, 'ism': 1, 'sm.': 1, 'm.\n': 1, '\n\nL': 1, '\nLe': 1, 'Let': 1, 'etâ': 1, 'tâ\x80': 1, 's h': 1, 'hav': 1, 'ave': 1, ' lo': 1, 'loo': 1, 'ook': 1, 'ok ': 1, 'k a': 1, ' so': 1, 'som': 1, 'ome': 1, ' mo': 4, 'mos': 1, 'ost': 1, 'omm': 1, 'mmo': 1, 'mon': 1, 'ons': 1, 'd i': 1, 'mod': 5, 'ode': 1, 'ern': 1, 'rn ': 4, 'n p': 2, 'amm': 1, 'mmi': 1, 'min': 1, 'ng.': 1, 'g.\n': 1, '\n\n1': 1, '\n1.': 1, '1. ': 1, ' Ar': 1, 'Ari': 1, 'c M': 1, ' Mo': 1, 'Mod': 1, 'odu': 4, 'dul': 4, 'ar:': 1, 'r: ': 1, ': \n': 1, ' \nI': 1, 'n T': 1, ' Th': 1, 's A': 1, ' Ap': 1, 'App': 1, 'ppr': 1, 'roa': 1, 'oac': 1, 'ch,': 1, 'h, ': 1, 'ke ': 1, 'ar ': 1, 'r o': 1, 'f k': 2, ' wi': 2, 'wit': 1, 'th ': 1, 'ze:': 2, 'e:\n': 3, ':\n ': 10, '\n  ': 19, '   ': 71, '  i': 2, 'x =': 5, ' = ': 14, '= k': 1, 'y M': 1, ' MO': 1, 'MOD': 1, 'OD ': 1, 'D t': 1, 'le_': 1, 'e_s': 1, '_si': 9, 'e \n': 1, ' \nH': 1, '\nHe': 1, 'Hen': 1, 'x w': 1, 'wil': 1, 'l a': 2, ' al': 3, 'alw': 2, 'lwa': 2, 'way': 2, 'ays': 2, 'sta': 1, 'tay': 1, 'y b': 1, 'bet': 1, 'etw': 1, 'twe': 1, 'wee': 1, 'een': 1, 'en ': 2, 'n 0': 1, ' 0 ': 1, '0 a': 1, 'leS': 1, 'eSi': 1, 'Siz': 1, 'e -': 1, ' - ': 1, '- 1': 1, ' 1.': 1, '1.\n': 1, ""\n\n'"": 3, ""\n''"": 5, ""'\nd"": 2, '\nde': 3, 'def': 3, 'ef ': 3, 'f h': 3, 'sh_': 10, 'h_m': 2, '_mo': 2, 'ar(': 2, 'r(k': 6, '(ke': 12, 'ey,': 4, 'y, ': 4, ', s': 1, 'ze)': 4, 'e):': 3, '):\n': 5, '  r': 3, 'n (': 2, ' (k': 2, 'y %': 2, ' % ': 2, '% s': 1, 'e)\n': 1, ')\n\n': 3, '\n\nl': 1, '\nls': 1, 'lst': 2, 't =': 1, '= [': 1, ' [N': 1, '[No': 1, 'Non': 1, 'one': 1, 'ne]': 1, 'e] ': 1, '] *': 1, ' * ': 1, '* 1': 1, ' 10': 3, '10 ': 1, '0 #': 1, ' # ': 2, '# L': 1, ' Li': 1, 'Lis': 1, 't o': 2, 'f s': 1, 'e 1': 1, '10\n': 1, '0\nk': 1, '\nke': 3, 'y =': 6, '= 3': 1, ' 35': 1, '35\n': 1, '5\ni': 1, '\nin': 2, '= h': 2, ', l': 2, 'len': 5, 'en(': 5, 'n(l': 1, '(ls': 1, 'st)': 1, 't))': 1, '))\n': 5, ')\np': 2, '\npr': 3, 'pri': 7, 'rin': 7, 'nt(': 9, 't(""': 4, '(""t': 1, '""th': 1, 'x f': 2, 'ey:': 2, 'y: ': 2, ': ""': 3, ' "" ': 7, '"" +': 5, ' + ': 9, '+ s': 5, 'str': 15, 'tr(': 6, 'ey)': 10, 'y) ': 2, ') +': 2, '+ ""': 2, '"" i': 2, 's ""': 2, 'r(i': 2, '(in': 2, 'ex)': 2, 'x))': 2, '\n\n\n': 1, ""'\n2"": 1, '\n2.': 1, '2. ': 1, '. t': 1, ' tr': 1, 'tru': 3, 'run': 3, 'nca': 1, 'on:': 1, 'n:\n': 1, '  s': 2, ' se': 1, 'sel': 1, 'ele': 1, 'lec': 1, 'ct ': 1, 'a p': 1, ' pa': 1, 'par': 1, 'art': 1, 'rt ': 1, 'nst': 1, 'ste': 1, 'tea': 1, 'ead': 1, 'ad ': 1, 'd o': 2, 'f w': 1, ' wh': 1, 'who': 1, 'hol': 1, 'ole': 1, '. O': 1, ' On': 1, 'Onc': 1, ' ag': 1, 'aga': 1, 'gai': 1, 'ain': 1, 'in,': 1, 'n u': 1, 'od ': 1, 'd f': 1, 'n f': 1, ' op': 2, 'ope': 2, 'era': 2, 'rat': 2, 'alt': 1, 'lth': 1, 'hou': 1, 'oug': 1, 'ugh': 1, 'gh ': 1, ' do': 1, 'doe': 1, 'oes': 1, 's n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't n': 1, 'bas': 1, 'n l': 1, '  k': 2, '= 1': 2, ' 12': 2, '123': 2, '234': 2, '345': 2, '456': 5, '56 ': 1, '6 -': 1, ' ->': 2, '-> ': 2, '> i': 2, '= 4': 4, ' 45': 4, '56\n': 2, ""6\n'"": 1, ""'\n\n"": 1, '\n\nd': 1, 'h_t': 2, '_tr': 2, 'nc(': 2, 'c(k': 2, 'y):': 1, '% 1': 1, '100': 1, '000': 1, '00)': 1, '0) ': 1, ')  ': 1, '  #': 1, '# W': 1, ' Wi': 1, 'Wil': 1, 's g': 1, ' gi': 1, 'giv': 1, 'ive': 1, 'us ': 1, 'f u': 1, ' up': 1, 'upt': 1, 'pto': 1, 'o 3': 1, ' 3 ': 1, '3 d': 1, 'dig': 1, 'igi': 1, 'git': 1, 'its': 1, 'ts\n': 1, 's\nk': 1, '6\n\n': 1, '\n\ni': 1, 'y)\n': 2, '(""T': 1, '""Th': 1, 'y ""': 1, ""'\nF"": 1, '\nFo': 1, 'Fol': 1, 'old': 3, 'ldi': 1, 'ng:': 1, 'g:\n': 1, '  D': 1, ' Di': 1, 'Div': 1, 'ivi': 1, 'vid': 1, 'ide': 1, 'de ': 1, 'o s': 1, 'l c': 1, 'chu': 11, 'hun': 12, 'unk': 12, 'nks': 4, 'ks ': 2, 'hen': 1, 'rm ': 1, 'm a': 1, 'hos': 1, 'ks.': 1, 's. ': 1, '. -': 1, ' -i': 1, '-i-': 1, 'i-e': 1, '-e-': 1, 'e- ': 1, '- A': 1, ' Ad': 1, 'Add': 1, 'dd ': 1, 'd s': 1, 'r c': 1, 'tog': 1, 'oge': 1, 'get': 1, 'her': 1, 'er.': 1, 'r.\n': 1, '.\n ': 1, '567': 2, '678': 2, '789': 2, '89,': 1, '9, ': 1, ', c': 4, 'nk_': 8, 'k_s': 8, 'ze=': 1, 'e=2': 1, '=2 ': 1, '2 -': 1, '45+': 1, '5+6': 1, '+67': 1, '67+': 1, '7+8': 1, '+89': 1, '89\n': 1, ""9\n'"": 1, 'h_f': 2, '_fo': 2, 'fol': 2, 'ld(': 2, 'd(k': 2, 'tr_': 9, 'r_k': 9, '_ke': 9, '= s': 1, ')\n ': 7, '  p': 4, '(""K': 1, '""Ke': 1, 'Key': 1, 'y))': 2, '  h': 3, 'h_v': 4, '_va': 4, 'e =': 2, '= 0': 1, ' 0\n': 1, '0\n ': 1, '(""C': 1, '""Ch': 1, 'Chu': 1, 'ks:': 1, 's: ': 1, ' "")': 1, '"")\n': 1, '  f': 1, 'r i': 1, ' i ': 3, 'i i': 1, 'n r': 1, 'ge(': 1, 'e(0': 1, '(0,': 1, '0, ': 1, 'n(s': 4, '(st': 8, 'y),': 1, '), ': 1, ' if': 1, 'if ': 1, 'f (': 1, ' (i': 1, '(i+': 1, 'i+c': 1, '+ch': 1, 'e <': 1, ' < ': 1, '< l': 1, ')):': 1, 't(s': 4, 'ey[': 4, 'y[i': 4, '[i:': 4, 'i: ': 4, ': i': 2, 'i +': 2, '+ c': 2, 'ze]': 2, 'e])': 2, '])\n': 4, 'e +': 2, ' +=': 2, '+= ': 2, '= i': 2, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, ': l': 2, 'y)]': 2, ')])': 2, 'ue\n': 1, 'e\n\n': 1, '\n\nk': 1, '899': 1, '99\n': 1, '9\nc': 1, '\nch': 1, 'six': 2, 'ixe': 2, 'xe ': 1, '= 2': 1, ' 2\n': 1, '2\np': 1, 't(h': 1, '(ha': 1, 'xe)': 1, 'e))': 1}"
Imad,Insertion_at_Head.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'class': 2, 'node:': 1, 'def': 5, '__init__(self,': 1, 'data):': 2, 'self.data': 1, '=': 9, 'data': 2, 'self.next_ele': 1, 'none': 2, 'linkedlist:': 1, '__init__(self):': 1, 'self.head_node': 6, 'insertion_at_head(self,': 1, '#': 2, 'creating': 1, 'a': 1, 'new': 2, 'object': 1, 'node': 3, 'having': 1, 'the': 1, 'temp_node': 2, 'node(data)': 1, 'pointing': 1, 'to': 1, 'same': 1, 'as': 1, 'head': 1, 'temp_node.next_ele': 1, 'return': 5, 'is_empty(self):': 1, 'if': 1, 'is': 3, 'none:': 2, 'true': 2, 'else:': 1, 'false': 2, 'print_list(self):': 1, 'if(self.is_empty()):': 1, 'print(""list': 1, 'empty:': 1, '"")': 1, 'temp': 2, 'while': 1, 'temp.next_ele': 2, 'not': 1, 'print(temp.data,': 2, 'end=': 1, '""->"")': 1, '""->': 1, 'none"")': 1, 'lst': 1, 'linkedlist()': 1, 'lst.print_list()': 2, 'print(""inserting': 1, 'values': 1, 'in': 2, 'linked': 1, 'list"")': 1, 'for': 1, 'i': 1, 'range(10):': 1, 'lst.insertion_at_head(i)': 1}","{'cla': 2, 'las': 2, 'ass': 2, 'ss ': 2, 's N': 2, ' No': 7, 'Nod': 2, 'ode': 14, 'de:': 1, 'e:\n': 4, ':\n ': 12, '\n  ': 30, '   ': 172, '  d': 5, ' de': 5, 'def': 5, 'ef ': 5, 'f _': 2, ' __': 2, '__i': 2, '_in': 2, 'ini': 2, 'nit': 2, 'it_': 2, 't__': 2, '__(': 2, '_(s': 2, '(se': 6, 'sel': 14, 'elf': 14, 'lf,': 2, 'f, ': 2, ', d': 2, ' da': 4, 'dat': 8, 'ata': 8, 'ta)': 3, 'a):': 2, '):\n': 7, '  s': 4, ' se': 8, 'lf.': 9, 'f.d': 1, '.da': 3, 'ta ': 1, 'a =': 1, ' = ': 9, '= d': 1, 'ta\n': 2, 'a\n ': 2, 'f.n': 1, '.ne': 4, 'nex': 4, 'ext': 4, 'xt_': 4, 't_e': 4, '_el': 4, 'ele': 4, 'le ': 4, 'e =': 5, '= N': 3, 'Non': 5, 'one': 5, 'ne\n': 2, 'e\n\n': 2, '\n\nc': 1, '\ncl': 1, 's L': 1, ' Li': 3, 'Lin': 3, 'ink': 3, 'nke': 3, 'ked': 3, 'edL': 2, 'dLi': 2, 'Lis': 3, 'ist': 6, 'st:': 1, 't:\n': 1, 'lf)': 3, 'f):': 3, 'f.h': 6, '.he': 6, 'hea': 8, 'ead': 9, 'ad_': 6, 'd_n': 6, '_no': 9, 'nod': 12, 'de ': 7, 'e\n ': 9, '  \n': 2, ' \n ': 2, 'f i': 2, ' in': 3, 'ins': 2, 'nse': 3, 'ser': 3, 'ert': 3, 'rti': 3, 'tio': 2, 'ion': 2, 'on_': 2, 'n_a': 2, '_at': 2, 'at_': 2, 't_h': 2, '_he': 2, 'ad(': 2, 'd(s': 1, '  #': 2, ' # ': 2, '# c': 1, ' cr': 1, 'cre': 1, 'rea': 1, 'eat': 1, 'ati': 1, 'tin': 3, 'ing': 4, 'ng ': 4, 'g a': 1, ' a ': 1, 'a n': 1, ' ne': 1, 'new': 1, 'ew ': 2, 'w  ': 1, '  o': 1, ' ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct ': 1, 't n': 1, ' no': 4, 'e h': 1, ' ha': 1, 'hav': 1, 'avi': 1, 'vin': 1, 'g t': 2, ' th': 1, 'the': 1, 'he ': 1, 'e d': 1, '  t': 4, ' te': 7, 'tem': 9, 'emp': 11, 'mp_': 3, 'p_n': 3, 'de(': 1, 'e(d': 1, '(da': 1, 'a)\n': 1, ')\n ': 4, '# N': 1, ' Ne': 1, 'New': 1, 'w n': 1, 'e p': 1, ' po': 1, 'poi': 1, 'oin': 1, 'int': 8, 'nti': 1, ' to': 1, 'to ': 1, 'o s': 1, ' sa': 1, 'sam': 1, 'ame': 1, 'me ': 1, 'e n': 1, 'e a': 1, ' as': 1, 'as ': 1, 's H': 1, ' He': 1, 'Hea': 1, 'ad\n': 1, 'd\n ': 1, 'de.': 1, 'e.n': 1, '= s': 2, 'de\n': 4, '= t': 2, '  r': 5, ' re': 5, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 5, 'n s': 1, ' is': 4, 'is_': 2, 's_e': 2, '_em': 2, 'mpt': 3, 'pty': 3, 'ty(': 2, 'y(s': 1, '  i': 2, ' if': 2, 'if ': 1, 'f s': 1, 'e i': 2, 'is ': 3, 'ne:': 2, 'n T': 2, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue\n': 2, '  e': 1, ' el': 1, 'els': 1, 'lse': 3, 'se:': 1, 'n F': 2, ' Fa': 2, 'Fal': 2, 'als': 2, 'se\n': 2, 'f p': 1, ' pr': 4, 'pri': 7, 'rin': 7, 'nt_': 3, 't_l': 3, '_li': 3, 'lis': 3, 'st(': 4, 't(s': 1, 'if(': 1, 'f(s': 1, 'f.i': 1, '.is': 1, 'y()': 1, '())': 1, ')):': 1, '  p': 3, 'nt(': 4, 't(""': 2, '(""L': 1, '""Li': 1, 'st ': 2, 't i': 1, 's E': 1, ' Em': 1, 'Emp': 1, 'ty:': 1, 'y: ': 1, ': ""': 1, ' "")': 1, '"")\n': 4, 'mp ': 2, 'p =': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'e t': 1, 'mp.': 4, 'p.n': 2, 's n': 1, 'not': 1, 'ot ': 1, 't N': 1, 't(t': 2, '(te': 2, 'p.d': 2, 'ta,': 2, 'a, ': 2, ', e': 1, ' en': 1, 'end': 1, 'nd=': 1, 'd= ': 1, '= ""': 1, ' ""-': 2, '""->': 2, '->""': 1, '>"")': 1, 'le\n': 1, ', ""': 1, '-> ': 1, '> N': 1, 'ne""': 1, 'e"")': 1, '\n\n\n': 1, '\n\nl': 1, '\nls': 3, 'lst': 4, 't =': 1, '= L': 1, 't()': 3, '()\n': 3, ')\nl': 2, 'st.': 3, 't.p': 2, '.pr': 2, ')\n\n': 1, '\n\np': 1, '\npr': 1, '(""I': 1, '""In': 1, 'Ins': 1, 'g v': 1, ' va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ues': 1, 'es ': 1, 's i': 1, 'in ': 2, 'n L': 1, 'ed ': 1, 'd L': 1, ' LI': 1, 'LIs': 1, 'Ist': 1, 'st""': 1, 't"")': 1, ')\nf': 1, '\nfo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(1': 1, '(10': 1, '10)': 1, '0):': 1, '  l': 1, ' ls': 1, 't.i': 1, '.in': 1, 'd(i': 1, '(i)': 1, 'i)\n': 1}"
Imad,insertion_at_kth.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'from': 1, 'node': 3, 'import': 1, 'class': 1, 'linkedlist:': 1, 'def': 5, '__init__(self):': 1, 'self.head_node': 6, '=': 11, 'none': 1, 'get_head(self):': 1, 'return': 6, 'is_empty(self):': 1, 'if': 3, 'is': 7, 'none:': 4, 'print(""list': 3, 'empty': 1, '"")': 1, 'true': 1, 'else:': 1, 'false': 1, 'insert_at_k(self,': 1, 'data,': 1, 'k,': 1, 'lst):': 1, 'count': 1, '0': 1, 'new_node': 3, 'node(data)': 1, 'lst.get_head()': 2, 'empty,': 1, 'we': 1, 'cannot': 1, 'add': 1, 'at': 1, 'the': 1, 'given': 1, 'value.': 1, 'so,': 1, 'added': 1, 'to': 1, 'first': 1, 'index"")': 1, 'temp': 2, 'while': 2, 'count<k-1:': 1, 'temp.next_element': 3, 'count+=1': 1, 'new_node.next_element': 1, 'print_list(self):': 1, 'temp_node': 3, 'empty"")': 1, 'temp_node.next_element': 2, 'not': 1, 'print(temp_node.data,': 2, 'end=""->"")': 1, '""->none"")': 1, 'lst': 1, 'linkedlist()': 1, 'print(lst.insert_at_k(5,1,lst))': 1}","{'fro': 1, 'rom': 1, 'om ': 1, 'm N': 1, ' No': 8, 'Nod': 3, 'ode': 21, 'de ': 9, 'e i': 3, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't N': 2, 'de\n': 6, 'e\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's L': 1, ' Li': 2, 'Lin': 2, 'ink': 2, 'nke': 2, 'ked': 2, 'edL': 2, 'dLi': 2, 'Lis': 5, 'ist': 6, 'st:': 1, 't:\n': 1, ':\n ': 12, '\n  ': 35, '   ': 230, '  d': 5, ' de': 5, 'def': 5, 'ef ': 5, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 5, 'sel': 11, 'elf': 11, 'lf)': 4, 'f):': 4, '):\n': 5, '  s': 2, ' se': 6, 'lf.': 6, 'f.h': 6, '.he': 6, 'hea': 9, 'ead': 9, 'ad_': 6, 'd_n': 6, '_no': 17, 'nod': 18, 'e =': 5, ' = ': 11, '= N': 2, 'Non': 6, 'one': 6, 'ne\n': 1, 'e\n ': 8, 'f g': 1, ' ge': 1, 'get': 3, 'et_': 3, 't_h': 3, '_he': 3, 'ad(': 3, 'd(s': 1, '  r': 6, ' re': 6, 'ret': 6, 'etu': 6, 'tur': 6, 'urn': 6, 'rn ': 4, 'n s': 2, 'f i': 2, ' is': 8, 'is_': 1, 's_e': 1, '_em': 1, 'emp': 14, 'mpt': 4, 'pty': 4, 'ty(': 1, 'y(s': 1, '  i': 3, ' if': 3, 'if ': 3, 'f s': 1, 'is ': 7, 's N': 3, 'ne:': 4, 'e:\n': 5, '  p': 5, ' pr': 6, 'pri': 7, 'rin': 7, 'int': 7, 'nt(': 6, 't(""': 3, '(""L': 3, '""Li': 3, 'st ': 5, 't i': 5, 's E': 2, ' Em': 2, 'Emp': 2, 'ty ': 1, 'y ""': 1, ' "")': 1, '"")\n': 5, ')\n ': 7, 'n T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1, '  e': 1, ' el': 1, 'els': 1, 'lse': 2, 'se:': 1, 'n F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'se\n': 1, ' in': 2, 'ins': 2, 'nse': 2, 'ser': 2, 'ert': 2, 'rt_': 2, 't_a': 2, '_at': 2, 'at_': 2, 't_k': 2, '_k(': 2, 'k(s': 1, 'lf,': 1, 'f, ': 1, ', d': 1, ' da': 1, 'dat': 4, 'ata': 4, 'ta,': 3, 'a, ': 3, ', k': 1, ' k,': 1, 'k, ': 1, ', l': 1, ' ls': 3, 'lst': 6, 'st)': 2, 't):': 1, '  c': 2, ' co': 3, 'cou': 3, 'oun': 3, 'unt': 3, 'nt ': 4, 't =': 4, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  n': 2, ' ne': 4, 'new': 4, 'ew_': 4, 'w_n': 4, 'de(': 1, 'e(d': 1, '(da': 1, 'ta)': 1, 'a)\n': 1, 'f l': 1, 'st.': 3, 't.g': 2, '.ge': 2, 'd()': 2, '() ': 1, ') i': 1, 's e': 1, ' em': 1, 'ty,': 1, 'y, ': 1, ', w': 1, ' we': 1, 'we ': 1, 'e c': 2, ' ca': 1, 'can': 1, 'ann': 1, 'nno': 1, 'not': 2, 'ot ': 2, 't a': 1, ' ad': 1, 'add': 1, 'dd ': 1, 'd n': 1, ' no': 2, 'e a': 1, ' at': 1, 'at ': 1, 't t': 1, ' th': 1, 'the': 1, 'he ': 1, 'e g': 1, ' gi': 1, 'giv': 1, 'ive': 1, 'ven': 1, 'en ': 1, 'n v': 1, ' va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ue.': 1, 'e. ': 1, '. S': 1, ' So': 1, 'So,': 1, 'o, ': 1, ', A': 1, ' Ad': 1, 'Add': 1, 'dde': 1, 'ded': 1, 'ed ': 1, 'd t': 1, ' to': 1, 'to ': 1, 'o f': 1, ' fi': 1, 'fir': 1, 'irs': 1, 'rst': 1, 'ind': 1, 'nde': 1, 'dex': 1, 'ex""': 1, 'x"")': 1, '= n': 2, '  t': 5, ' te': 10, 'tem': 12, 'mp ': 2, 'p =': 2, '= l': 1, '()\n': 2, '  w': 2, ' wh': 2, 'whi': 2, 'hil': 2, 'ile': 2, 'le ': 2, 'nt<': 1, 't<k': 1, '<k-': 1, 'k-1': 1, '-1:': 1, '1:\n': 1, '= t': 3, 'mp.': 3, 'p.n': 3, '.ne': 6, 'nex': 6, 'ext': 6, 'xt_': 6, 't_e': 6, '_el': 6, 'ele': 6, 'lem': 6, 'eme': 6, 'men': 6, 'ent': 6, 'nt\n': 3, 't\n ': 3, 'nt+': 1, 't+=': 1, '+=1': 1, '=1\n': 1, '1\n ': 1, 'de.': 5, 'e.n': 3, 'rn\n': 2, 'n\n ': 2, 'f p': 1, 'nt_': 1, 't_l': 1, '_li': 1, 'lis': 1, 'st(': 2, 't(s': 1, 'mp_': 7, 'p_n': 7, '= s': 1, 'f t': 1, 'ty""': 1, 'y"")': 1, 'e t': 1, 's n': 1, 't(t': 2, '(te': 2, 'e.d': 2, '.da': 2, ', e': 1, ' en': 1, 'end': 1, 'nd=': 1, 'd=""': 1, '=""-': 1, '""->': 2, '->""': 1, '>"")': 1, ', ""': 1, ' ""-': 1, '->N': 1, '>No': 1, 'ne""': 1, 'e"")': 1, '  \n': 2, ' \nl': 1, '\nls': 1, '= L': 1, 't()': 1, ')\np': 1, '\npr': 1, 't(l': 1, '(ls': 1, 't.i': 1, '.in': 1, 'k(5': 1, '(5,': 1, '5,1': 1, ',1,': 1, '1,l': 1, ',ls': 1, 't))': 1, '))\n': 1, ')\n\n': 1, '\n\n ': 1}"
Imad,Insertion_at_tail.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'from': 2, 'linkedlist': 2, 'import': 2, 'node': 2, 'def': 1, 'insert_at_tail(lst,value):': 1, 'new_node': 3, '=': 7, 'node(value)': 1, 'if': 1, 'lst.get_head()': 2, 'is': 2, 'none:': 2, 'lst.head_node': 1, 'return': 2, 'temp': 2, 'while': 1, 'temp.next_element': 3, 'not': 1, 'new_node.next_element': 1, 'none': 1, 'lst': 1, 'linkedlist()': 1, 'lst.print_list()': 1}","{'fro': 2, 'rom': 2, 'om ': 2, 'm L': 1, ' Li': 3, 'Lin': 3, 'ink': 3, 'nke': 3, 'ked': 3, 'edL': 3, 'dLi': 3, 'Lis': 3, 'ist': 4, 'st ': 2, 't i': 2, ' im': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't L': 1, 'st\n': 1, 't\nf': 1, '\nfr': 1, 'm N': 1, ' No': 6, 'Nod': 3, 'ode': 8, 'de ': 3, 'e i': 1, 't N': 2, 'de\n': 3, 'e\n\n': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f i': 1, ' in': 1, 'ins': 1, 'nse': 1, 'ser': 1, 'ert': 1, 'rt_': 1, 't_a': 1, '_at': 1, 'at_': 1, 't_t': 1, '_ta': 1, 'tai': 1, 'ail': 1, 'il(': 1, 'l(l': 1, '(ls': 1, 'lst': 6, 'st,': 1, 't,v': 1, ',va': 1, 'val': 2, 'alu': 2, 'lue': 2, 'ue)': 2, 'e):': 1, '):\n': 1, ':\n ': 3, '\n  ': 10, '   ': 32, '  n': 3, ' ne': 4, 'new': 4, 'ew_': 4, 'w_n': 4, '_no': 5, 'nod': 5, 'e =': 2, ' = ': 7, '= N': 2, 'de(': 1, 'e(v': 1, '(va': 1, 'e)\n': 1, ')\n\n': 1, '\n\n ': 1, '  i': 1, ' if': 1, 'if ': 1, 'f l': 1, ' ls': 3, 'st.': 4, 't.g': 2, '.ge': 2, 'get': 2, 'et_': 2, 't_h': 2, '_he': 2, 'hea': 3, 'ead': 3, 'ad(': 2, 'd()': 2, '() ': 1, ') i': 1, ' is': 2, 'is ': 2, 's N': 1, 'Non': 3, 'one': 3, 'ne:': 2, 'e:\n': 2, '  l': 1, 't.h': 1, '.he': 1, 'ad_': 1, 'd_n': 1, '=  ': 1, 'e\n ': 3, '  r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn\n': 2, 'n\n ': 1, '  t': 3, ' te': 5, 'tem': 5, 'emp': 5, 'mp ': 2, 'p =': 2, '= l': 1, '()\n': 3, ')\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e t': 1, 'mp.': 3, 'p.n': 3, '.ne': 4, 'nex': 4, 'ext': 4, 'xt_': 4, 't_e': 4, '_el': 4, 'ele': 4, 'lem': 4, 'eme': 4, 'men': 4, 'ent': 4, 'nt ': 3, 's n': 1, ' no': 1, 'not': 1, 'ot ': 1, '= t': 1, 'nt\n': 1, 't\n ': 1, 't =': 3, '= n': 1, 'de.': 1, 'e.n': 1, 'ne\n': 1, 'n\n\n': 1, '\n\nl': 1, '\nls': 2, '= L': 1, 'st(': 2, 't()': 2, ')\nl': 1, 't.p': 1, '.pr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt_': 1, 't_l': 1, '_li': 1, 'lis': 1}"
Imad,LinkedList.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'from': 1, 'node': 2, 'import': 1, 'class': 1, 'linkedlist:': 1, 'def': 4, '__init__(self):': 1, 'self.head_node': 4, '=': 3, 'none': 1, 'get_head(self):': 1, 'return': 5, 'is_empty(self):': 1, 'if': 2, 'is': 4, 'none:': 2, 'print(""list': 2, 'empty"")': 2, 'true': 2, 'else:': 1, 'false': 2, 'print_list(self):': 1, '(self.is_empty):': 1, 'temp': 2, 'while': 1, 'temp.next_element': 2, 'not': 1, 'print': 1, '(temp.data': 1, ',': 1, 'end=""->"")': 1, 'print(temp.data,': 1, '""->none"")': 1}","{'fro': 1, 'rom': 1, 'om ': 1, 'm N': 1, ' No': 5, 'Nod': 2, 'ode': 6, 'de ': 3, 'e i': 2, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't N': 2, 'de\n': 3, 'e\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's L': 1, ' Li': 1, 'Lin': 1, 'ink': 1, 'nke': 1, 'ked': 1, 'edL': 1, 'dLi': 1, 'Lis': 3, 'ist': 4, 'st:': 1, 't:\n': 1, ':\n ': 9, '\n  ': 21, '   ': 134, '  d': 4, ' de': 4, 'def': 4, 'ef ': 4, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 5, 'sel': 9, 'elf': 9, 'lf)': 4, 'f):': 4, '):\n': 5, '  s': 1, ' se': 4, 'lf.': 5, 'f.h': 4, '.he': 4, 'hea': 5, 'ead': 5, 'ad_': 4, 'd_n': 4, '_no': 4, 'nod': 4, 'e =': 1, ' = ': 3, '= N': 1, 'Non': 4, 'one': 4, 'ne\n': 1, 'e\n ': 7, 'f g': 1, ' ge': 1, 'get': 1, 'et_': 1, 't_h': 1, '_he': 1, 'ad(': 1, 'd(s': 1, '  r': 5, ' re': 5, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 5, 'n s': 1, 'f i': 1, ' is': 5, 'is_': 2, 's_e': 2, '_em': 2, 'emp': 8, 'mpt': 4, 'pty': 4, 'ty(': 1, 'y(s': 1, '  i': 2, ' if': 2, 'if ': 2, 'f s': 1, 'is ': 4, 's N': 1, 'ne:': 2, 'e:\n': 3, '  p': 4, ' pr': 5, 'pri': 5, 'rin': 5, 'int': 5, 'nt(': 3, 't(""': 2, '(""L': 2, '""Li': 2, 'st ': 2, 't i': 3, 's E': 2, ' Em': 2, 'Emp': 2, 'ty""': 2, 'y"")': 2, '"")\n': 4, ')\n ': 4, 'n T': 2, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue\n': 2, '  e': 1, ' el': 1, 'els': 1, 'lse': 3, 'se:': 1, 'n F': 2, ' Fa': 2, 'Fal': 2, 'als': 2, 'se\n': 2, 'f p': 1, 'nt_': 1, 't_l': 1, '_li': 1, 'lis': 1, 'st(': 1, 't(s': 1, 'f (': 1, ' (s': 1, 'f.i': 1, '.is': 1, 'ty)': 1, 'y):': 1, '  t': 2, ' te': 4, 'tem': 6, 'mp ': 2, 'p =': 2, '= s': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e t': 1, 'mp.': 4, 'p.n': 2, '.ne': 2, 'nex': 2, 'ext': 2, 'xt_': 2, 't_e': 2, '_el': 2, 'ele': 2, 'lem': 2, 'eme': 2, 'men': 2, 'ent': 2, 'nt ': 2, 's n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't (': 1, ' (t': 1, '(te': 2, 'p.d': 2, '.da': 2, 'dat': 2, 'ata': 2, 'ta ': 1, 'a ,': 1, ' , ': 1, ', e': 1, ' en': 1, 'end': 1, 'nd=': 1, 'd=""': 1, '=""-': 1, '""->': 2, '->""': 1, '>"")': 1, '= t': 1, 'nt\n': 1, 't\n ': 1, 't(t': 1, 'ta,': 1, 'a, ': 1, ', ""': 1, ' ""-': 1, '->N': 1, '>No': 1, 'ne""': 1, 'e"")': 1, '  \n': 1}"
Imad,Listof_Element_Product.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'arr': 1, '=': 4, '[1,2,3,4]': 1, 'def': 1, 'find_product(lst):': 1, 'result': 1, '[]': 1, 'a=0': 1, 'while': 1, 'len(result)': 1, '!=': 1, 'len(lst):': 1, 'product': 2, '1': 1, 'count': 1, '0': 1, 'while(count<len(lst)):': 1, 'if': 1, 'count==a:': 1, 'count+=1': 2, 'continue': 1, 'else:': 1, '*=lst[count]': 1, 'a+=1': 1, 'result.append(product)': 1, 'return(result)': 1, 'print(find_product(arr))': 1}","{'# \n': 1, ' \na': 1, '\nar': 1, 'arr': 2, 'rr ': 1, 'r =': 1, ' = ': 4, '= [': 2, ' [1': 1, '[1,': 1, '1,2': 1, ',2,': 1, '2,3': 1, ',3,': 1, '3,4': 1, ',4]': 1, '4]\n': 1, ']\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f f': 1, ' fi': 1, 'fin': 2, 'ind': 2, 'nd_': 2, 'd_p': 2, '_pr': 2, 'pro': 5, 'rod': 5, 'odu': 5, 'duc': 5, 'uct': 5, 'ct(': 2, 't(l': 1, '(ls': 3, 'lst': 4, 'st)': 3, 't):': 2, '):\n': 3, ':\n ': 5, '\n  ': 15, '   ': 123, '  r': 3, ' re': 3, 'res': 4, 'esu': 4, 'sul': 4, 'ult': 4, 'lt ': 1, 't =': 3, ' []': 1, '[]\n': 1, ']\n ': 2, '  a': 2, ' a=': 1, 'a=0': 1, '=0\n': 1, '0\n ': 2, '  w': 2, ' wh': 2, 'whi': 2, 'hil': 2, 'ile': 2, 'le ': 1, 'e l': 1, ' le': 2, 'len': 3, 'en(': 3, 'n(r': 2, '(re': 2, 'lt)': 2, 't) ': 1, ') !': 1, ' !=': 1, '!= ': 1, '= l': 1, 'n(l': 2, '  p': 2, ' pr': 2, 'ct ': 2, '= 1': 1, ' 1\n': 1, '1\n ': 4, '  c': 4, ' co': 5, 'cou': 6, 'oun': 6, 'unt': 6, 'nt ': 1, '= 0': 1, ' 0\n': 1, 'le(': 1, 'e(c': 1, '(co': 1, 'nt<': 1, 't<l': 1, '<le': 1, 't))': 1, ')):': 1, '  i': 1, ' if': 1, 'if ': 1, 'f c': 1, 'nt=': 1, 't==': 1, '==a': 1, '=a:': 1, 'a:\n': 1, 'nt+': 2, 't+=': 2, '+=1': 3, '=1\n': 3, 'con': 1, 'ont': 1, 'nti': 1, 'tin': 1, 'inu': 1, 'nue': 1, 'ue\n': 1, 'e\n ': 1, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, 't *': 1, ' *=': 1, '*=l': 1, '=ls': 1, 'st[': 1, 't[c': 1, '[co': 1, 'nt]': 1, 't]\n': 1, ' a+': 1, 'a+=': 1, 'lt.': 1, 't.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(p': 1, '(pr': 1, 'ct)': 1, 't)\n': 2, ')\n ': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn(': 1, ')\n\n': 1, '\n\n\n': 1, '\n\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 't(f': 1, '(fi': 1, 't(a': 1, '(ar': 1, 'rr)': 1, 'r))': 1, '))\n': 1}"
Imad,MaxHeapImplementaion.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'class': 1, 'maxheap:': 1, 'def': 7, '__init__(self):': 1, 'self.heap': 2, '=': 18, '[]': 1, 'insert(self,': 1, 'value):': 1, 'self.heap.append(value)': 1, 'self.__percolateup(len(self.heap)-1)': 1, 'getmax(self):': 1, 'if': 6, 'self.heap:': 1, 'return': 5, 'self.heap[0]': 5, 'none': 1, 'removemax(self):': 1, 'len(self.heap)': 2, '>': 2, '1:': 1, 'max': 4, 'self.heap[-1]': 2, 'del': 2, 'self.__maxheapify(0)': 1, 'elif(len(self.heap)': 1, '==': 1, '1):': 1, '__percolateup(self,': 1, 'index):': 2, 'parent': 1, '(index-1)//2': 1, 'index<=0:': 1, 'elif': 1, 'self.heap[parent]': 3, '<': 3, 'self.heap[index]:': 1, 'temp': 4, 'self.heap[index]': 4, 'self.__percolateup(': 1, 'parent)': 1, '__maxheapify(self,': 1, 'left': 3, 'index': 2, '*2': 1, '+1': 1, 'right': 3, 'index*2': 1, '+2': 1, 'largest': 3, 'and': 2, 'self.heap[largest]': 4, 'self.heap[left]:': 1, 'len(self.heap)>': 1, 'self.heap[right]:': 1, 'largest!=index:': 1, 'self.__maxheapify(largest)': 1, 'buildheap(self,': 1, 'arr):': 1, 'arr': 1, 'for': 2, 'i': 2, 'in': 2, 'range(len(self.heap)-1,': 1, '-1,': 1, '-1):': 1, 'self.__maxheapify(i)': 1, 'heap': 1, 'maxheap()': 1, 'range(0,101,': 1, '10': 1, '):': 1, 'heap.insert(i)': 1, 'print(heap.getmax())': 2, 'print(heap.removemax())': 1, 'print(heap.insert(1000))': 1}","{'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's M': 1, ' Ma': 2, 'Max': 2, 'axH': 2, 'xHe': 2, 'Hea': 2, 'eap': 44, 'ap:': 2, 'p:\n': 2, ':\n ': 18, '\n  ': 49, '   ': 342, '  d': 9, ' de': 9, 'def': 7, 'ef ': 7, 'f _': 3, ' __': 3, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 13, 'sel': 43, 'elf': 43, 'lf)': 3, 'f):': 3, '):\n': 10, '  s': 13, ' se': 30, 'lf.': 36, 'f.h': 31, '.he': 31, 'hea': 42, 'ap ': 3, 'p =': 5, ' = ': 18, '= [': 1, ' []': 1, '[]\n': 1, ']\n ': 11, 'f i': 2, ' in': 9, 'ins': 3, 'nse': 3, 'ser': 3, 'ert': 3, 'rt(': 3, 't(s': 1, 'lf,': 4, 'f, ': 4, ', v': 1, ' va': 1, 'val': 2, 'alu': 2, 'lue': 2, 'ue)': 2, 'e):': 1, 'ap.': 6, 'p.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(v': 1, '(va': 1, 'e)\n': 1, ')\n ': 3, 'f._': 5, '.__': 5, '__p': 3, '_pe': 3, 'per': 3, 'erc': 3, 'rco': 3, 'col': 3, 'ola': 3, 'lat': 3, 'ate': 3, 'teu': 3, 'eup': 3, 'up(': 3, 'p(l': 1, '(le': 3, 'len': 6, 'en(': 6, 'n(s': 6, 'ap)': 6, 'p)-': 2, ')-1': 2, '-1)': 3, '1)\n': 1, ')\n\n': 4, '\n\n ': 2, 'f g': 1, ' ge': 1, 'get': 3, 'etm': 3, 'tma': 3, 'max': 13, 'ax(': 5, 'x(s': 2, '  i': 6, ' if': 6, 'if ': 7, 'f s': 2, '  r': 6, ' re': 6, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 4, 'n s': 1, 'ap[': 21, 'p[0': 5, '[0]': 5, '0]\n': 4, 'n N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne\n': 1, 'e\n ': 1, '  \n': 2, ' \n ': 2, 'f r': 1, 'rem': 2, 'emo': 2, 'mov': 2, 'ove': 2, 'vem': 2, 'ema': 2, 'f l': 4, ' le': 6, 'p) ': 3, ') >': 2, ' > ': 2, '> 1': 1, ' 1:': 1, '1:\n': 1, '  m': 2, ' ma': 4, 'ax ': 2, 'x =': 2, '= s': 7, '0] ': 1, '] =': 5, 'p[-': 2, '[-1': 2, '-1]': 2, '1]\n': 2, 'del': 2, 'el ': 2, 'l s': 2, '__m': 4, '_ma': 4, 'axh': 4, 'xhe': 4, 'api': 4, 'pif': 4, 'ify': 4, 'fy(': 4, 'y(0': 1, '(0)': 1, '0)\n': 1, 'n m': 2, 'ax\n': 2, 'x\n ': 3, '  e': 2, ' el': 2, 'eli': 2, 'lif': 2, 'if(': 1, 'f(l': 1, ') =': 1, ' ==': 1, '== ': 1, '= 1': 1, ' 1)': 1, '1):': 2, 'p(s': 2, ', i': 2, 'ind': 13, 'nde': 13, 'dex': 13, 'ex)': 2, 'x):': 2, '  p': 1, ' pa': 2, 'par': 5, 'are': 5, 'ren': 5, 'ent': 5, 'nt ': 1, 't =': 6, '= (': 1, ' (i': 1, '(in': 1, 'ex-': 1, 'x-1': 1, '1)/': 1, ')//': 1, '//2': 1, '/2\n': 1, '2\n ': 2, 'ex<': 1, 'x<=': 1, '<=0': 1, '=0:': 1, '0:\n': 1, 'rn\n': 1, 'n\n ': 1, 'p[p': 3, '[pa': 3, 'nt]': 3, 't] ': 5, '] <': 3, ' < ': 3, '< s': 3, 'p[i': 5, '[in': 5, 'ex]': 5, 'x]:': 1, ']:\n': 3, '  t': 2, ' te': 4, 'tem': 4, 'emp': 4, 'mp ': 2, 't]\n': 2, 'x]\n': 2, 'x] ': 2, '= t': 2, 'mp\n': 2, 'p\n ': 2, 'p( ': 1, '( p': 1, 'nt)': 1, 't)\n': 2, 'y(s': 1, '  l': 4, 'lef': 4, 'eft': 4, 'ft ': 2, '= i': 3, 'ex ': 1, 'x *': 1, ' *2': 1, '*2 ': 2, '2 +': 2, ' +1': 1, '+1\n': 1, '1\n ': 1, ' ri': 3, 'rig': 4, 'igh': 4, 'ght': 4, 'ht ': 2, 'ex*': 1, 'x*2': 1, ' +2': 1, '+2\n': 1, ' la': 4, 'lar': 9, 'arg': 9, 'rge': 9, 'ges': 9, 'est': 9, 'st ': 3, 'ex\n': 1, '> l': 1, 't a': 2, ' an': 2, 'and': 2, 'nd ': 2, 'd s': 2, 'p[l': 5, '[la': 4, 'st]': 4, '[le': 1, 'ft]': 1, 't]:': 2, '= l': 1, 'ft\n': 1, 't\n ': 2, 'p)>': 1, ')> ': 1, '> r': 1, 'p[r': 1, '[ri': 1, 'ht]': 1, '= r': 1, 'ht\n': 1, 'st!': 1, 't!=': 1, '!=i': 1, '=in': 1, 'ex:': 1, 'x:\n': 1, 'y(l': 1, '(la': 1, 'st)': 1, 'f b': 1, ' bu': 1, 'bui': 1, 'uil': 1, 'ild': 1, 'ldh': 1, 'dhe': 1, 'ap(': 2, ', a': 1, ' ar': 2, 'arr': 2, 'rr)': 1, 'r):': 1, '= a': 1, 'rr\n': 1, 'r\n ': 1, '  f': 1, ' fo': 1, 'for': 2, 'or ': 2, 'r i': 2, ' i ': 2, 'i i': 2, 'in ': 2, 'n r': 2, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(l': 1, '-1,': 2, '1, ': 3, ', -': 2, ' -1': 2, 'y(i': 1, '(i)': 2, 'i)\n': 2, '\n\n\n': 1, '\n\nh': 1, '\nhe': 1, '= M': 1, 'p()': 1, '()\n': 1, ')\nf': 1, '\nfo': 1, 'e(0': 1, '(0,': 1, '0,1': 1, ',10': 1, '101': 1, '01,': 1, ', 1': 1, ' 10': 1, '10 ': 1, '0 )': 1, ' ):': 1, '  h': 1, ' he': 1, 'p.i': 2, '.in': 2, 't(i': 1, '\n\np': 1, '\npr': 4, 'pri': 4, 'rin': 4, 'int': 4, 'nt(': 4, 't(h': 4, '(he': 4, 'p.g': 2, '.ge': 2, 'x()': 3, '())': 3, '))\n': 4, ')\np': 3, 'p.r': 1, '.re': 1, 't(1': 1, '(10': 1, '100': 1, '000': 1, '00)': 1, '0))': 1}"
Imad,maxtominHeap.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{""'''def"": 1, 'convertmax(maxheap):': 1, 'for': 2, 'i': 2, 'in': 2, 'range(len(maxheap)//2,': 1, '-1,-1):': 1, 'maxheap': 3, '=': 15, 'minheap(maxheap,': 1, 'i)': 1, 'return': 4, 'def': 4, 'minheap(heap,': 1, 'ind):': 1, 'left': 3, '2*ind': 2, '+1': 1, 'right': 3, '+2': 1, 'smallest': 4, 'ind': 1, 'if': 4, 'len(heap)': 2, '>': 5, 'and': 2, 'heap[smallest]': 4, 'heap[left]:': 1, 'heap[right]:': 1, '!=ind:': 1, 'temp': 4, 'heap[ind]': 2, 'minheap(heap,smallest)': 1, ""heap'''"": 1, 'heaped': 2, '[]': 1, 'cmaxmin(maxheap):': 1, 'range(len(maxheap)):': 1, 'insert(maxheap[i])': 1, 'insert(value):': 1, 'heaped.append(value)': 1, 'percolateup(len(heaped)-1)': 1, 'percolateup(inde):': 1, 'parent': 1, '(inde-1)//2': 1, 'inde<=0:': 1, 'elif': 1, 'heaped[parent]': 3, 'heaped[inde]:': 1, 'heaped[inde]': 2, 'percolateup(parent)': 1, '[9,4,7,1,-2,6,5]': 1, 'print(cmaxmin(maxheap))': 1}","{""'''"": 2, ""''d"": 1, ""'de"": 1, 'def': 5, 'ef ': 5, 'f c': 2, ' co': 1, 'con': 1, 'onv': 1, 'nve': 1, 'ver': 1, 'ert': 3, 'rtm': 1, 'tma': 1, 'max': 13, 'ax(': 1, 'x(m': 1, '(ma': 7, 'axh': 8, 'xhe': 8, 'hea': 34, 'eap': 36, 'ap)': 7, 'p):': 2, '):\n': 7, ':\n ': 12, '\n  ': 29, '   ': 110, '  f': 2, ' fo': 2, 'for': 2, 'or ': 2, 'r i': 2, ' i ': 2, 'i i': 2, ' in': 7, 'in ': 2, 'n r': 2, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(l': 2, '(le': 3, 'len': 5, 'en(': 5, 'n(m': 4, 'p)/': 1, ')//': 2, '//2': 2, '/2,': 1, '2, ': 1, ', -': 1, ' -1': 1, '-1,': 1, '1,-': 2, ',-1': 1, '-1)': 3, '1):': 1, '  m': 2, ' ma': 2, 'ap ': 2, 'p =': 4, ' = ': 15, '= m': 1, ' mi': 3, 'min': 5, 'inh': 3, 'nhe': 3, 'ap(': 3, 'p(m': 1, 'ap,': 3, 'p, ': 2, ', i': 2, ' i)': 1, 'i)\n': 1, ')\n ': 4, '  r': 5, ' re': 4, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 3, 'n m': 1, 'ap\n': 1, 'p\n\n': 1, '\n\nd': 3, '\nde': 4, 'f m': 1, 'p(h': 2, '(he': 5, 'ind': 13, 'nd)': 1, 'd):': 1, '  l': 1, ' le': 5, 'lef': 4, 'eft': 4, 'ft ': 2, 't =': 6, '= 2': 2, ' 2*': 2, '2*i': 2, '*in': 2, 'nd ': 4, 'd +': 2, ' +1': 1, '+1\n': 1, '1\n ': 1, ' ri': 3, 'rig': 4, 'igh': 4, 'ght': 4, 'ht ': 2, ' +2': 1, '+2\n': 1, '2\n ': 2, '  s': 3, ' sm': 4, 'sma': 9, 'mal': 9, 'all': 9, 'lle': 9, 'les': 9, 'est': 9, 'st ': 4, '= i': 1, 'nd\n': 1, 'd\n ': 1, '  i': 5, ' if': 4, 'if ': 5, 'f l': 2, 'n(h': 3, 'p) ': 2, ') >': 2, ' > ': 5, '> l': 1, 't a': 2, ' an': 2, 'and': 2, 'd h': 2, ' he': 17, 'ap[': 9, 'p[s': 4, '[sm': 4, 'st]': 4, 't] ': 5, '] >': 3, '> h': 3, 'p[l': 1, '[le': 1, 'ft]': 1, 't]:': 2, ']:\n': 3, '= l': 1, 'ft\n': 1, 't\n ': 2, '> r': 1, 'p[r': 1, '[ri': 1, 'ht]': 1, '= r': 1, 'ht\n': 1, 'f s': 1, 't !': 1, ' !=': 1, '!=i': 1, '=in': 1, 'nd:': 1, 'd:\n': 1, '  t': 2, ' te': 4, 'tem': 4, 'emp': 4, 'mp ': 2, '= h': 4, 't]\n': 2, ']\n ': 4, '  h': 5, '] =': 4, 'p[i': 3, '[in': 5, 'nd]': 2, 'd]\n': 1, 'd] ': 1, '= t': 2, 'mp\n': 2, 'p\n ': 2, 'p,s': 1, ',sm': 1, 'st)': 1, 't)\n': 2, 'n h': 2, ""ap'"": 1, ""p''"": 1, ""''\n"": 1, ""'\n\n"": 1, '\n\n\n': 1, '\n\nh': 1, '\nhe': 1, 'ape': 10, 'ped': 10, 'ed ': 1, 'd =': 1, '= [': 2, ' []': 1, '[]\n': 1, ']\nd': 1, ' cm': 1, 'cma': 2, 'axm': 2, 'xmi': 2, 'in(': 2, 'p))': 2, ')):': 1, 'ins': 2, 'nse': 2, 'ser': 2, 'rt(': 2, 't(m': 1, '[i]': 1, 'i])': 1, '])\n': 1, 'ed\n': 1, 'd\n\n': 1, 'f i': 2, 't(v': 1, '(va': 2, 'val': 2, 'alu': 2, 'lue': 2, 'ue)': 2, 'e):': 2, 'ed.': 1, 'd.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(v': 1, 'e)\n': 1, '  p': 3, ' pe': 3, 'per': 3, 'erc': 3, 'rco': 3, 'col': 3, 'ola': 3, 'lat': 3, 'ate': 3, 'teu': 3, 'eup': 3, 'up(': 3, 'p(l': 1, 'ed)': 1, 'd)-': 1, ')-1': 1, '1)\n': 1, ')\n\n': 2, 'f p': 1, 'p(i': 1, '(in': 2, 'nde': 6, 'de)': 1, ' pa': 1, 'par': 5, 'are': 5, 'ren': 5, 'ent': 5, 'nt ': 1, '= (': 1, ' (i': 1, 'de-': 1, 'e-1': 1, '1)/': 1, '/2\n': 1, 'de<': 1, 'e<=': 1, '<=0': 1, '=0:': 1, '0:\n': 1, 'rn\n': 1, 'n\n ': 1, '  e': 1, ' el': 1, 'eli': 1, 'lif': 1, 'f h': 1, 'ed[': 6, 'd[p': 3, '[pa': 3, 'nt]': 3, 'd[i': 3, 'de]': 3, 'e]:': 1, 'e]\n': 1, 'e] ': 1, 'p(p': 1, '(pa': 1, 'nt)': 1, '\n\nm': 1, '\nma': 1, 'axH': 2, 'xHe': 2, 'Hea': 2, ' [9': 1, '[9,': 1, '9,4': 1, ',4,': 1, '4,7': 1, ',7,': 1, '7,1': 1, ',1,': 1, ',-2': 1, '-2,': 1, '2,6': 1, ',6,': 1, '6,5': 1, ',5]': 1, '5]\n': 1, ']\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 't(c': 1, '(cm': 1, '))\n': 1}"
Imad,Max_Sum_Sublist.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'challenge': 1, '11:': 1, 'maximum': 1, 'sum': 3, 'sublist': 1, ""'''import"": 1, 'sys': 1, 'def': 3, 'max_sum_sub(lst):': 1, 'full_max': 1, '=': 18, '-(sys.maxsize)': 3, 'for': 4, 'i': 5, 'in': 4, 'range(len(lst)):': 3, 'max_sum': 4, 'max_sum_sum': 3, 'previous_sum_sum': 1, 'j': 1, 'previous_sum': 1, 'if': 1, '==': 1, 'j:': 1, 'max_sum=max(max_sum,': 1, 'lst[i])': 2, 'else:': 1, '+': 3, 'lst[j]': 1, 'max(previous_sum,': 1, 'max_sum,': 1, 'max_sum_sum)': 1, 'full_max=': 1, 'max(previous_sum_sum,': 1, 'max_sum_sum,': 1, 'full_max)': 1, ""return(full_max)'''"": 1, 'list_1': 1, '[-4,2,-5,1,2,3,6,-5]': 1, '#print(max_sum_sub(list_1))': 1, 'kadane(arr):': 1, 'max_sum_so_far': 3, '0': 4, 'max_sum_ending_here': 3, 'range(len(arr)):': 1, 'max(arr[i],': 1, 'arr[i])': 1, 'max(max_sum_so_far,': 1, 'max_sum_ending_here)': 2, 'print(""for': 1, '"",': 2, 'i)': 1, 'print(""max': 2, 'ending': 1, 'here:': 1, 'so': 1, 'far:"",max_sum_so_far)': 1, 'return': 2, 'print(kadane(list_1))': 1, '#print(max(-4,-4))': 1, 'maximum_sum_sublist(lst):': 1, 'max_sum_for_now': 3, 'maax_sum_total': 3, 'max(lst[i],': 1, 'max(maax_sum_total,max_sum_for_now)': 1, 'lis': 1, '[-4,': 1, '2,': 2, '-5,': 2, '1,': 1, '3,': 1, '6,': 1, '1]': 1, 'print(maximum_sum_sublist(lis))': 1}","{'# C': 1, ' Ch': 1, 'Cha': 1, 'hal': 1, 'all': 1, 'lle': 1, 'len': 5, 'eng': 1, 'nge': 5, 'ge ': 1, 'e 1': 1, ' 11': 1, '11:': 1, '1: ': 1, ': M': 1, ' Ma': 3, 'Max': 7, 'axi': 3, 'xim': 3, 'imu': 3, 'mum': 3, 'um ': 11, 'm S': 3, ' Su': 4, 'Sum': 7, 'Sub': 5, 'ubl': 3, 'bli': 3, 'lis': 8, 'ist': 6, 'st\n': 1, ""t\n'"": 1, ""\n''"": 1, ""'''"": 2, ""''i"": 1, ""'im"": 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't s': 1, ' sy': 1, 'sys': 4, 'ys\n': 1, 's\nd': 1, '\nde': 3, 'def': 3, 'ef ': 3, 'f M': 2, 'ax_': 32, 'x_S': 2, '_Su': 8, 'um_': 31, 'm_S': 6, 'ub(': 2, 'b(l': 2, '(ls': 6, 'lst': 9, 'st)': 5, 't):': 2, '):\n': 7, ':\n ': 9, '\n  ': 33, '   ': 186, '  f': 6, ' fu': 3, 'ful': 4, 'ull': 4, 'll_': 4, 'l_m': 4, '_ma': 4, 'max': 41, 'ax ': 3, 'x =': 1, ' = ': 18, '= -': 3, ' -(': 3, '-(s': 3, '(sy': 3, 'ys.': 3, 's.m': 3, '.ma': 3, 'axs': 3, 'xsi': 3, 'siz': 3, 'ize': 3, 'ze)': 3, 'e)\n': 5, ')\n ': 13, ' fo': 4, 'for': 8, 'or ': 5, 'r i': 4, ' i ': 5, 'i i': 3, ' in': 4, 'in ': 4, 'n r': 4, ' ra': 4, 'ran': 4, 'ang': 4, 'ge(': 4, 'e(l': 5, '(le': 4, 'en(': 4, 'n(l': 3, 't))': 3, ')):': 4, '  m': 13, ' ma': 31, 'x_s': 30, '_su': 41, 'sum': 41, 'm =': 6, 'm_s': 12, '  p': 5, ' pr': 5, 'pre': 4, 'rev': 4, 'evi': 4, 'vio': 4, 'iou': 4, 'ous': 4, 'us_': 4, 's_s': 4, '= m': 9, 'um\n': 2, 'm\n ': 2, 'r j': 1, ' j ': 1, 'j i': 1, '  i': 1, ' if': 1, 'if ': 1, 'f i': 1, 'i =': 2, ' ==': 1, '== ': 1, '= j': 1, ' j:': 1, 'j:\n': 1, 'um=': 1, 'm=m': 1, '=ma': 1, 'ax(': 8, 'x(m': 3, '(ma': 4, 'um,': 5, 'm, ': 5, ', l': 1, ' ls': 3, 'st[': 4, 't[i': 3, '[i]': 5, 'i])': 3, '])\n': 3, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, 'm +': 1, ' + ': 3, '+ l': 2, 't[j': 1, '[j]': 1, 'j]\n': 1, ']\n ': 1, '  \n': 4, ' \n ': 3, 'x(p': 2, '(pr': 2, ', m': 7, 'um)': 1, 'm)\n': 1, 'ax=': 1, 'x= ': 1, ', f': 1, 'ax)': 2, 'x)\n': 1, '  r': 3, ' re': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn(': 1, 'n(f': 1, '(fu': 1, ""x)'"": 1, "")''"": 1, ""''\n"": 1, ""'\n\n"": 1, '\n\n\n': 3, '\n\nl': 2, '\nli': 2, 'st_': 3, 't_1': 3, '_1 ': 1, '1 =': 1, '= [': 2, ' [-': 2, '[-4': 2, '-4,': 3, '4,2': 1, ',2,': 2, '2,-': 1, ',-5': 2, '-5,': 3, '5,1': 1, ',1,': 1, '1,2': 1, '2,3': 1, ',3,': 1, '3,6': 1, ',6,': 1, '6,-': 1, '-5]': 1, '5]\n': 1, ']\n#': 1, '\n#p': 2, '#pr': 2, 'pri': 7, 'rin': 7, 'int': 7, 'nt(': 7, 't(M': 2, '(Ma': 2, '(li': 3, '_1)': 2, '1))': 2, '))\n': 4, ')\n\n': 2, '\n\nd': 2, 'f k': 1, ' ka': 1, 'kad': 2, 'ada': 2, 'dan': 2, 'ane': 2, 'ne(': 2, 'e(a': 1, '(ar': 3, 'arr': 4, 'rr)': 2, 'r):': 1, '_so': 5, 'so_': 5, 'o_f': 5, '_fa': 5, 'far': 5, 'ar ': 2, 'r =': 2, '= 0': 4, ' 0\n': 4, '0\n ': 3, 'm_e': 5, '_en': 5, 'end': 5, 'ndi': 6, 'din': 6, 'ing': 6, 'ng_': 5, 'g_h': 5, '_he': 5, 'her': 5, 'ere': 6, 're ': 3, 'e =': 2, '0\n\n': 1, '\n\n ': 2, 'n(a': 1, 'r))': 1, 'x(a': 1, 'rr[': 2, 'r[i': 2, 'i],': 2, '], ': 2, 'e +': 1, '+ a': 1, ' ar': 1, 'ar,': 1, 'r, ': 1, 're)': 2, 't(""': 3, '(""F': 1, '""Fo': 1, 'For': 1, '= ""': 1, ' "",': 2, '"", ': 2, ', i': 1, ' i)': 1, 'i)\n': 1, '(""M': 2, '""Ma': 2, 'x S': 2, 'm E': 1, ' En': 1, 'End': 1, 'ng ': 1, 'g H': 1, ' He': 1, 'Her': 1, 're:': 1, 'e: ': 1, ': ""': 1, ' So': 1, 'So ': 1, 'o F': 1, ' Fa': 1, 'Far': 1, 'ar:': 1, 'r:""': 1, ':"",': 1, '"",m': 1, ',ma': 2, 'ar)': 1, 'r)\n': 1, ' \n\n': 1, 'rn ': 2, 'n m': 2, 'ar\n': 1, 'r\n\n': 1, '\n\np': 1, '\npr': 2, 't(k': 1, '(ka': 1, ')\n#': 1, 't(m': 1, 'x(-': 1, '(-4': 1, '4,-': 1, ',-4': 1, '-4)': 1, '4))': 1, 'st(': 2, 't(l': 2, 'm_f': 4, '_fo': 4, 'or_': 4, 'r_n': 4, '_no': 4, 'now': 4, 'ow ': 3, 'w =': 2, 'maa': 4, 'aax': 4, 'm_t': 4, '_to': 4, 'tot': 4, 'ota': 4, 'tal': 4, 'al ': 2, 'l =': 2, 'x(l': 1, 'w +': 1, 'al,': 1, 'l,m': 1, 'ow)': 1, 'w)\n': 1, 'al\n': 1, 'l\n\n': 1, 'is ': 1, 's =': 1, '4, ': 1, ', 2': 2, ' 2,': 2, '2, ': 2, ', -': 2, ' -5': 2, '5, ': 2, ', 1': 2, ' 1,': 1, '1, ': 1, ', 3': 1, ' 3,': 1, '3, ': 1, ', 6': 1, ' 6,': 1, '6, ': 1, ' 1]': 1, '1]\n': 1, ']\np': 1, 'is)': 1, 's))': 1}"
Imad,Middle_node.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'class': 2, 'node:': 1, 'def': 10, '__init__(self,': 1, 'data):': 1, 'self.data': 1, '=': 22, 'data': 1, 'self.next_element': 1, 'none': 8, 'self.previous_element': 1, 'linkedlist(node):': 1, '__init__(self):': 1, 'self.head_node': 7, 'self.tail_node': 5, 'get_head(self):': 1, 'if': 7, 'is': 6, 'not': 2, 'none:': 3, 'return': 14, 'get_tail(self):': 1, 'is_empty(self):': 1, '(self.head_node': 1, 'or': 1, 'self.tail_node):': 1, 'print(""list': 2, 'empty"")': 2, 'true': 2, 'false': 2, 'insert_at_head(self,data):': 1, 'temp_node': 4, 'node(data)': 1, 'temp_node.next_element': 2, 'insert_at_tail(self,': 1, 'value):': 1, 'node(value)': 1, 't_node': 1, 'temp_node.previous_element': 1, 't_node.next_element': 1, 'print_list(self):': 1, 'if(self.is_empty()):': 1, 'p_node': 2, 'while': 3, 'p_node:': 1, 'print(p_node.data,': 1, 'end=""->"")': 1, 'p_node.next_element': 1, 'print(end=""->none"")': 1, 'length(self):': 1, 'temp': 2, 'self.get_head()': 2, 'length': 2, '0': 1, 'temp:': 1, 'length+=1': 1, 'temp.next_element': 1, '#': 1, 'this': 1, 'two': 1, 'pointer': 1, 'technique': 1, 'for': 1, 'finding': 1, 'the': 1, 'middle': 1, 'of': 1, 'linked': 1, 'list': 1, 'mid_node(self):': 1, 'temp_h=': 1, '(self.is_empty()):': 1, 'temp_h.next_element': 3, 'temp_h.data': 1, 'mid_node': 2, 'temp_h': 3, 'temp_h.next_element:': 1, 'mid_node.next_element': 1, 'temp_h:': 1, 'mid_node:': 1, 'mid_node.data': 1, '-1': 1}","{'cla': 2, 'las': 2, 'ass': 2, 'ss ': 2, 's N': 2, ' No': 14, 'Nod': 4, 'ode': 38, 'de:': 3, 'e:\n': 6, ':\n ': 23, '\n  ': 68, '   ': 432, '  d': 10, ' de': 10, 'def': 10, 'ef ': 10, 'f _': 2, ' __': 2, '__i': 2, '_in': 2, 'ini': 2, 'nit': 2, 'it_': 2, 't__': 2, '__(': 2, '_(s': 2, '(se': 13, 'sel': 31, 'elf': 31, 'lf,': 3, 'f, ': 2, ', d': 1, ' da': 2, 'dat': 8, 'ata': 8, 'ta)': 3, 'a):': 2, '):\n': 14, '  s': 6, ' se': 18, 'lf.': 21, 'f.d': 1, '.da': 4, 'ta ': 1, 'a =': 1, ' = ': 22, '= d': 1, 'ta\n': 3, 'a\n ': 3, 'f.n': 1, '.ne': 11, 'nex': 11, 'ext': 11, 'xt_': 11, 't_e': 11, '_el': 13, 'ele': 13, 'lem': 13, 'eme': 13, 'men': 13, 'ent': 13, 'nt ': 7, 't =': 6, '= N': 7, 'Non': 12, 'one': 12, 'ne\n': 7, 'e\n ': 19, 'f.p': 1, '.pr': 2, 'pre': 2, 'rev': 2, 'evi': 2, 'vio': 2, 'iou': 2, 'ous': 2, 'us_': 2, 's_e': 5, 'e\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 's L': 1, ' Li': 1, 'Lin': 1, 'ink': 2, 'nke': 2, 'ked': 2, 'edL': 1, 'dLi': 1, 'Lis': 2, 'ist': 5, 'st(': 2, 't(N': 1, '(No': 1, 'de)': 2, 'e):': 3, 'lf)': 7, 'f):': 7, 'f.h': 8, '.he': 8, 'hea': 12, 'ead': 12, 'ad_': 8, 'd_n': 14, '_no': 34, 'nod': 34, 'de ': 13, 'e =': 10, 'f.t': 6, '.ta': 6, 'tai': 8, 'ail': 8, 'il_': 6, 'l_n': 6, 'f g': 2, ' ge': 2, 'get': 4, 'et_': 4, 't_h': 4, '_he': 4, 'ad(': 4, 'd(s': 2, '  i': 8, ' if': 8, 'if ': 7, 'f s': 2, 'e i': 2, ' is': 7, 'is ': 7, 's n': 2, ' no': 2, 'not': 2, 'ot ': 2, 't N': 2, 'ne:': 3, '  r': 14, ' re': 14, 'ret': 14, 'etu': 14, 'tur': 14, 'urn': 14, 'rn ': 14, 'n s': 3, 'de\n': 9, 'n N': 3, 't_t': 2, '_ta': 2, 'il(': 2, 'l(s': 2, 'ne ': 1, 'e \n': 1, ' \n ': 4, 'f i': 3, 'is_': 3, '_em': 3, 'emp': 25, 'mpt': 5, 'pty': 5, 'ty(': 3, 'y(s': 1, 'f (': 2, ' (s': 2, 'e o': 2, ' or': 1, 'or ': 2, 'r s': 1, '  p': 6, ' pr': 5, 'pri': 5, 'rin': 5, 'int': 6, 'nt(': 4, 't(""': 2, '(""L': 1, '""Li': 1, 'st ': 2, 't i': 3, 's E': 1, ' Em': 1, 'Emp': 1, 'ty""': 2, 'y"")': 2, '"")\n': 4, ')\n ': 8, 'n T': 2, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue\n': 2, 'n F': 2, ' Fa': 2, 'Fal': 2, 'als': 2, 'lse': 2, 'se\n': 2, ' in': 2, 'ins': 2, 'nse': 2, 'ser': 2, 'ert': 2, 'rt_': 2, 't_a': 2, '_at': 2, 'at_': 2, 'f,d': 1, ',da': 1, '  t': 12, ' te': 22, 'tem': 21, 'mp_': 17, 'p_n': 12, 'de(': 3, 'e(d': 1, '(da': 1, 'a)\n': 1, 'de.': 8, 'e.n': 5, '= s': 6, '= t': 6, ', v': 1, ' va': 1, 'val': 2, 'alu': 2, 'lue': 2, 'ue)': 2, 'e(v': 1, '(va': 1, 'e)\n': 1, ' t_': 2, 't_n': 2, 'e.p': 1, 'f p': 1, 'nt_': 1, 't_l': 1, '_li': 1, 'lis': 3, 't(s': 1, 'if(': 1, 'f(s': 1, 'f.i': 2, '.is': 2, 'y()': 2, '())': 2, ')):': 2, '(""l': 1, '""li': 1, 's e': 1, ' em': 1, ' p_': 4, '  \n': 4, '  w': 3, ' wh': 3, 'whi': 3, 'hil': 3, 'ile': 3, 'le ': 4, 'e p': 1, 't(p': 1, '(p_': 1, 'e.d': 2, 'ta,': 1, 'a, ': 1, ', e': 1, ' en': 1, 'end': 2, 'nd=': 2, 'd=""': 2, '=""-': 2, '""->': 2, '->""': 1, '>"")': 1, '= p': 1, 'nt\n': 5, 't\n ': 6, 't(e': 1, '(en': 1, '->N': 1, '>No': 1, 'ne""': 1, 'e"")': 1, 'f l': 2, ' le': 4, 'len': 4, 'eng': 4, 'ngt': 4, 'gth': 4, 'th(': 1, 'h(s': 1, 'mp ': 2, 'p =': 2, 'f.g': 2, '.ge': 2, 'd()': 2, '()\n': 2, '  l': 2, 'th ': 1, 'h =': 3, '= 0': 1, ' 0\n': 1, '0\n ': 1, 'e t': 2, 'mp:': 1, 'p:\n': 1, 'th+': 1, 'h+=': 1, '+=1': 1, '=1\n': 1, '1\n ': 2, 'mp.': 1, 'p.n': 1, 'n l': 1, 'th\n': 1, 'h\n ': 2, '  #': 1, ' # ': 1, '# T': 1, ' Th': 1, 'Thi': 1, 'his': 1, 's i': 1, 's t': 1, ' tw': 1, 'two': 1, 'wo ': 1, 'o p': 1, ' po': 1, 'poi': 1, 'oin': 1, 'nte': 1, 'ter': 1, 'er ': 1, 'r t': 1, 'tec': 1, 'ech': 1, 'chn': 1, 'hni': 1, 'niq': 1, 'iqu': 1, 'que': 1, 'ue ': 1, 'e f': 1, ' fo': 1, 'for': 1, 'r f': 1, ' fi': 1, 'fin': 1, 'ind': 1, 'ndi': 1, 'din': 1, 'ing': 1, 'ng ': 1, 'g t': 1, ' th': 1, 'the': 1, 'he ': 1, 'e m': 1, ' mi': 7, 'mid': 7, 'idd': 1, 'ddl': 1, 'dle': 1, ' of': 1, 'of ': 1, ' li': 2, 'lin': 1, 'ed ': 1, 'd l': 1, 'st\n': 1, 'f m': 2, 'id_': 6, 'e(s': 1, 'p_h': 10, '_h=': 1, 'h= ': 1, 'f t': 2, '_h.': 5, 'h.n': 4, 'n t': 1, 'h.d': 1, '  m': 2, '_h\n': 1, 'nt:': 1, 't:\n': 1, '= m': 1, '_h ': 2, '_h:': 1, 'h:\n': 1, 'n m': 1, 'n -': 1, ' -1': 1, '-1\n': 1}"
Imad,Minheap.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{""'''"": 2, 'min': 4, 'heap': 3, 'follows': 1, 'the': 9, 'property': 2, 'which': 1, 'means': 1, 'that': 1, 'key': 3, 'at': 2, 'parent': 2, 'node': 6, 'is': 4, 'always': 1, 'smaller': 1, 'than': 3, 'child': 2, 'nodes.': 1, 'insertion': 1, 'in': 4, 'min-heap:': 2, 'create': 1, 'a': 1, 'new': 1, 'last': 3, 'of': 1, 'heap.': 1, 'insert': 1, 'value': 2, 'it.': 1, 'apply': 2, 'percolate': 2, 'up': 1, 'method': 1, 'until': 1, 'you': 2, 'reach': 2, 'root': 3, 'and': 3, 'satisfied.': 1, 'removing': 1, 'from': 1, 'delete': 1, 'node.': 2, 'move': 1, 'to': 1, 'value.': 1, 'down': 1, 'method(if': 1, 'larger': 1, ""it's"": 1, 'nodes': 1, 'swap': 1, 'values).': 1, 'repeat': 1, 'untill': 1, 'class': 1, 'minheap:': 1, 'def': 7, '__init__(self):': 1, 'self.heap': 3, '=': 17, '[]': 1, 'getmin(self):': 1, 'if': 6, 'self.heap:': 2, 'return': 6, 'self.heap[0]': 4, 'none': 2, 'insert(self,': 1, 'value):': 1, 'self.heap.append(value)': 1, 'self.__perlocateup(len(self.heap)-1)': 1, 'removemin(self):': 1, 'none:': 1, 'elif': 3, 'len(self.heap)==1:': 1, 'self.heap[-1]': 2, 'del': 1, 'self.__minheapify(0)': 1, '__perlocateup(self,': 1, 'index):': 2, '(index-1)//2': 1, 'index': 2, '<=0:': 1, 'self.heap[parent]': 3, '>': 4, 'self.heap[index]:': 1, 'temp': 4, 'self.heap[index]': 4, 'self.__perlocateup(parent)': 1, '__minheapify(self,': 1, 'left': 3, '2*index': 2, '+1': 1, 'right': 3, '+2': 1, 'smallest': 3, 'len(self.heap)': 2, 'self.heap[smallest]>self.heap[left]:': 1, 'self.heap[smallest]': 3, 'self.heap[right]:': 1, 'smallest!=index:': 1, 'self.__minheapify(smallest)': 1, 'buildheap(self,': 1, 'arr):': 1, 'arr': 1, 'for': 2, 'i': 2, 'range(len(arr),': 1, '-1,': 1, '-1):': 1, 'self.__minheapify(i)': 1, 'minheap': 1, 'minheap()': 1, 'range(100,': 1, '-101,': 1, '-10):': 1, 'minheap.insert(i)': 1, 'print(minheap.getmin())': 1}","{""'''"": 2, ""''\n"": 2, ""'\nM"": 1, '\nMi': 1, 'Min': 5, 'in ': 7, 'n H': 1, ' He': 1, 'Hea': 5, 'eap': 46, 'ap ': 8, 'p f': 1, ' fo': 2, 'fol': 1, 'oll': 1, 'llo': 1, 'low': 1, 'ows': 1, 'ws ': 1, 's t': 3, ' th': 13, 'the': 9, 'he ': 9, 'e m': 1, ' mi': 4, 'min': 13, 'n h': 1, ' he': 3, 'hea': 41, 'p p': 2, ' pr': 2, 'pro': 2, 'rop': 2, 'ope': 2, 'per': 7, 'ert': 6, 'rty': 2, 'ty ': 2, 'y w': 1, ' wh': 1, 'whi': 1, 'hic': 1, 'ich': 1, 'ch ': 3, 'h m': 1, ' me': 3, 'mea': 1, 'ean': 1, 'ans': 1, 'ns ': 1, 'tha': 4, 'hat': 1, 'at ': 4, 't k': 2, ' ke': 3, 'key': 3, 'ey ': 3, 'y a': 1, ' at': 2, 't p': 1, ' pa': 2, 'par': 6, 'are': 6, 'ren': 6, 'ent': 6, 'nt ': 2, 't n': 5, ' no': 10, 'nod': 10, 'ode': 10, 'de ': 6, 'e i': 2, ' is': 4, 'is ': 4, 's a': 1, ' al': 1, 'alw': 1, 'lwa': 1, 'way': 1, 'ays': 1, 'ys ': 1, 's s': 2, ' sm': 5, 'sma': 10, 'mal': 10, 'all': 10, 'lle': 10, 'ler': 1, 'er ': 2, 'r t': 2, 'han': 3, 'an ': 3, 'n t': 1, 'e c': 1, ' ch': 2, 'chi': 2, 'hil': 2, 'ild': 3, 'ld ': 2, 'd n': 2, 'des': 2, 'es.': 1, 's.\n': 1, '.\n\n': 3, '\n\nI': 1, '\nIn': 2, 'Ins': 2, 'nse': 4, 'ser': 4, 'rti': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n i': 3, ' in': 9, 'n M': 1, ' Mi': 4, 'in-': 2, 'n-H': 2, '-He': 2, 'ap:': 5, 'p:\n': 5, ':\nC': 1, '\nCr': 1, 'Cre': 1, 'rea': 3, 'eat': 2, 'ate': 6, 'te ': 4, 'e a': 3, ' a ': 1, 'a n': 1, ' ne': 1, 'new': 1, 'ew ': 1, 'w n': 1, 't t': 2, 'e l': 3, ' la': 4, 'las': 4, 'ast': 3, 'st ': 6, 't o': 1, ' of': 1, 'of ': 1, 'f h': 1, 'ap.': 4, 'p.\n': 1, '.\nI': 1, 'rt ': 1, 'e v': 3, ' va': 5, 'val': 6, 'alu': 6, 'lue': 6, 'ue ': 2, ' it': 2, 'it.': 1, 't.\n': 1, '.\nA': 2, '\nAp': 2, 'App': 2, 'ppl': 2, 'ply': 2, 'ly ': 2, 'y p': 2, ' pe': 2, 'erc': 2, 'rco': 2, 'col': 2, 'ola': 2, 'lat': 2, 'e u': 1, ' up': 1, 'up ': 1, 'p m': 1, 'met': 2, 'eth': 2, 'tho': 2, 'hod': 2, 'od ': 1, 'd u': 1, ' un': 2, 'unt': 2, 'nti': 2, 'til': 2, 'il ': 1, 'l y': 2, ' yo': 2, 'you': 2, 'ou ': 2, 'u r': 2, ' re': 9, 'eac': 2, 'ach': 2, 'h t': 2, 'e r': 3, ' ro': 3, 'roo': 3, 'oot': 3, 'ot ': 3, ' an': 3, 'and': 3, 'nd ': 3, 'd h': 1, 'y i': 2, ' sa': 1, 'sat': 1, 'ati': 1, 'tis': 1, 'isf': 1, 'sfi': 1, 'fie': 1, 'ied': 1, 'ed.': 1, 'd.\n': 1, '\n\n\n': 3, '\n\nR': 1, '\nRe': 2, 'Rem': 1, 'emo': 2, 'mov': 2, 'ovi': 1, 'vin': 1, 'ing': 1, 'ng ': 1, 'g f': 1, ' fr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm M': 1, ':\nD': 1, '\nDe': 1, 'Del': 1, 'ele': 1, 'let': 1, 'ete': 1, 'e t': 3, 'de.': 2, 'e.\n': 3, '.\nM': 1, '\nMo': 1, 'Mov': 1, 'ove': 2, 've ': 1, 'y n': 1, ' to': 1, 'to ': 1, 'o t': 1, 'e n': 1, 'ue.': 1, 'e d': 1, ' do': 1, 'dow': 1, 'own': 1, 'wn ': 1, 'n m': 2, 'od(': 1, 'd(i': 1, '(if': 1, 'if ': 10, 'f k': 1, 's l': 1, 'lar': 1, 'arg': 1, 'rge': 1, 'ger': 1, ""it'"": 1, ""t's"": 1, ""'s "": 1, 's c': 1, 'es ': 1, 'n s': 3, ' sw': 1, 'swa': 1, 'wap': 1, 'p v': 1, 'ues': 1, 'es)': 1, 's).': 1, ').\n': 1, '.\nR': 1, 'Rep': 1, 'epe': 1, 'pea': 1, 't u': 1, 'ill': 1, 'll ': 1, ""\n\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'ass': 1, 'ss ': 1, 's M': 1, 'inH': 2, 'nHe': 2, ':\n ': 19, '\n  ': 48, '   ': 336, '  d': 8, ' de': 8, 'def': 7, 'ef ': 7, 'f _': 3, ' __': 3, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 11, 'sel': 42, 'elf': 42, 'lf)': 3, 'f):': 3, '):\n': 9, '  s': 16, ' se': 30, 'lf.': 35, 'f.h': 30, '.he': 30, 'p =': 5, ' = ': 17, '= [': 1, ' []': 1, '[]\n': 1, ']\n ': 10, 'f g': 1, ' ge': 1, 'get': 2, 'etm': 2, 'tmi': 2, 'in(': 3, 'n(s': 6, '  i': 6, ' if': 6, 'f s': 5, '  r': 7, 'ret': 6, 'etu': 6, 'tur': 6, 'urn': 6, 'rn ': 5, 'ap[': 20, 'p[0': 4, '[0]': 4, '0]\n': 3, 'n N': 2, ' No': 3, 'Non': 3, 'one': 3, 'ne\n': 2, 'e\n ': 2, 'f i': 2, 'ins': 2, 'rt(': 2, 't(s': 1, 'lf,': 4, 'f, ': 4, ', v': 1, 'ue)': 2, 'e):': 1, 'p.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(v': 1, '(va': 1, 'e)\n': 1, ')\n ': 5, 'f._': 5, '.__': 5, '__p': 3, '_pe': 3, 'erl': 3, 'rlo': 3, 'loc': 3, 'oca': 3, 'cat': 3, 'teu': 3, 'eup': 3, 'up(': 3, 'p(l': 1, '(le': 2, 'len': 5, 'en(': 5, 'ap)': 4, 'p)-': 1, ')-1': 1, '-1)': 3, '1)\n': 1, 'f r': 1, 'rem': 1, 'vem': 1, 'emi': 1, 'p i': 1, 's N': 1, 'ne:': 1, 'e:\n': 1, '  e': 3, ' el': 3, 'eli': 3, 'lif': 3, 'f l': 3, ' le': 6, 'p)=': 1, ')==': 1, '==1': 1, '=1:': 1, '1:\n': 1, '  m': 2, 'n =': 1, '= s': 6, '0] ': 1, '] =': 5, 'p[-': 2, '[-1': 2, '-1]': 2, '1]\n': 2, 'del': 1, 'el ': 1, 'l s': 1, '__m': 4, '_mi': 4, 'inh': 7, 'nhe': 7, 'api': 4, 'pif': 4, 'ify': 4, 'fy(': 4, 'y(0': 1, '(0)': 1, '0)\n': 1, 'in\n': 1, 'n\n ': 2, '  \n': 1, ' \n ': 1, 'p(s': 2, ', i': 2, 'ind': 13, 'nde': 13, 'dex': 13, 'ex)': 2, 'x):': 2, '  p': 1, 't =': 6, '= (': 1, ' (i': 1, '(in': 1, 'ex-': 1, 'x-1': 1, '1)/': 1, ')//': 1, '//2': 1, '/2\n': 1, '2\n ': 2, 'ex ': 3, 'x <': 1, ' <=': 1, '<=0': 1, '=0:': 1, '0:\n': 1, 'rn\n': 1, 'p[p': 3, '[pa': 3, 'nt]': 3, 't] ': 4, '] >': 2, ' > ': 4, '> s': 2, 'p[i': 5, '[in': 5, 'ex]': 5, 'x]:': 1, ']:\n': 3, '  t': 2, ' te': 4, 'tem': 4, 'emp': 4, 'mp ': 2, 't]\n': 2, 'x]\n': 2, 'x] ': 2, '= t': 2, 'mp\n': 2, 'p\n ': 2, 'p(p': 1, '(pa': 1, 'nt)': 1, 't)\n': 2, 'y(s': 2, '  l': 1, 'lef': 4, 'eft': 4, 'ft ': 2, '= 2': 2, ' 2*': 2, '2*i': 2, '*in': 2, 'x +': 2, ' +1': 1, '+1\n': 1, '1\n ': 1, ' ri': 3, 'rig': 4, 'igh': 4, 'ght': 4, 'ht ': 2, ' +2': 1, '+2\n': 1, 'les': 9, 'est': 9, '= i': 1, 'ex\n': 1, 'x\n ': 1, 'p) ': 2, ') >': 2, '> l': 1, 't a': 2, 'd s': 2, 'p[s': 4, '[sm': 4, 'st]': 4, 't]>': 1, ']>s': 1, '>se': 1, 'p[l': 1, '[le': 1, 'ft]': 1, 't]:': 2, '= l': 1, 'ft\n': 1, 't\n ': 2, '> r': 1, 'p[r': 1, '[ri': 1, 'ht]': 1, '= r': 1, 'ht\n': 1, 'st!': 1, 't!=': 1, '!=i': 1, '=in': 1, 'ex:': 1, 'x:\n': 1, '(sm': 1, 'st)': 1, 'f b': 1, ' bu': 1, 'bui': 1, 'uil': 1, 'ldh': 1, 'dhe': 1, 'ap(': 2, ', a': 1, ' ar': 2, 'arr': 3, 'rr)': 2, 'r):': 1, '= a': 1, 'rr\n': 1, 'r\n ': 1, '  f': 1, 'for': 2, 'or ': 2, 'r i': 2, ' i ': 2, 'i i': 2, 'n r': 2, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(l': 1, 'n(a': 1, '(ar': 1, 'r),': 1, '), ': 1, ', -': 4, ' -1': 4, '-1,': 1, '1, ': 2, '1):': 1, 'y(i': 1, '(i)': 2, 'i)\n': 2, ')\n\n': 3, '\n\nm': 1, '\nmi': 1, '= M': 1, 'p()': 1, '()\n': 1, ')\nf': 1, '\nfo': 1, 'e(1': 1, '(10': 1, '100': 1, '00,': 1, '0, ': 1, '-10': 2, '101': 1, '01,': 1, '10)': 1, '0):': 1, 'p.i': 1, '.in': 1, 't(i': 1, '\n\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 't(m': 1, '(mi': 1, 'p.g': 1, '.ge': 1, 'n()': 1, '())': 1, '))\n': 1}"
Imad,Rearrange_Sortedlist.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#challenge': 1, '10:': 1, 'rearrange': 1, 'sorted': 1, 'list': 1, 'in': 1, 'max/min': 1, 'form': 1, 'def': 1, 'max_min(lst):': 1, 'max_min_list': 1, '=': 5, '[]': 1, 'start': 1, '0': 1, 'length': 1, 'len(lst)': 1, 'end': 1, 'length-1': 1, 'while': 1, '(start': 1, '!=': 1, 'length//2):': 1, 'max_min_list.append(lst[end])': 1, 'end-=1': 1, 'max_min_list.append(lst[start])': 2, 'start+=1': 1, 'if': 1, '(length': 1, '%': 1, '2!=0):': 1, 'return(max_min_list)': 2, 'else:': 1, 'list_1': 1, '[-11,1,3,4,5,6,7,8]': 1, 'print(max_min(list_1))': 1, '#': 1, 'o': 1, '(n)': 1}","{'#Ch': 1, 'Cha': 1, 'hal': 1, 'all': 1, 'lle': 1, 'len': 6, 'eng': 5, 'nge': 2, 'ge ': 2, 'e 1': 1, ' 10': 1, '10:': 1, '0: ': 1, ': R': 1, ' Re': 1, 'Rea': 1, 'ear': 1, 'arr': 1, 'rra': 1, 'ran': 1, 'ang': 1, 'e S': 1, ' So': 1, 'Sor': 1, 'ort': 1, 'rte': 1, 'ted': 1, 'ed ': 1, 'd L': 1, ' Li': 1, 'Lis': 1, 'ist': 9, 'st ': 2, 't i': 1, ' in': 1, 'in ': 2, 'n M': 1, ' Ma': 1, 'Max': 1, 'ax/': 1, 'x/M': 1, '/Mi': 1, 'Min': 1, 'n F': 1, ' Fo': 1, 'For': 1, 'orm': 1, 'rm\n': 1, 'm\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f m': 1, ' ma': 5, 'max': 8, 'ax_': 8, 'x_m': 8, '_mi': 8, 'min': 8, 'in(': 2, 'n(l': 3, '(ls': 5, 'lst': 5, 'st)': 4, 't):': 1, '):\n': 3, ':\n ': 4, '\n  ': 14, '   ': 58, '  m': 4, 'in_': 6, 'n_l': 6, '_li': 6, 'lis': 8, 't =': 2, ' = ': 5, '= [': 2, ' []': 1, '[]\n': 1, ']\n ': 1, '  s': 2, ' st': 2, 'sta': 5, 'tar': 5, 'art': 5, 'rt ': 2, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  l': 1, ' le': 4, 'ngt': 4, 'gth': 4, 'th ': 2, 'h =': 1, '= l': 3, 'en(': 1, 't)\n': 3, ')\n ': 5, '  E': 2, ' En': 2, 'End': 3, 'nd ': 1, 'd =': 1, 'th-': 1, 'h-1': 1, '-1\n': 1, '1\n ': 3, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e (': 1, ' (s': 1, '(st': 1, 't !': 1, ' !=': 1, '!= ': 1, 'th/': 1, 'h//': 1, '//2': 1, '/2)': 1, '2):': 1, 'st.': 3, 't.a': 3, '.ap': 3, 'app': 3, 'ppe': 3, 'pen': 3, 'end': 3, 'nd(': 3, 'd(l': 3, 'st[': 3, 't[E': 1, '[En': 1, 'nd]': 1, 'd])': 1, '])\n': 3, 'nd-': 1, 'd-=': 1, '-=1': 1, '=1\n': 2, 't[s': 2, '[st': 2, 'rt]': 2, 't])': 2, 'rt+': 1, 't+=': 1, '+=1': 1, '  i': 1, ' if': 1, 'if ': 1, 'f (': 1, ' (l': 1, '(le': 1, 'h %': 1, ' % ': 1, '% 2': 1, ' 2!': 1, '2!=': 1, '!=0': 1, '=0)': 1, '0):': 1, '  r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn(': 2, 'n(m': 2, '(ma': 3, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, ')\n\n': 1, '\n\nl': 1, '\nli': 1, 'st_': 2, 't_1': 2, '_1 ': 1, '1 =': 1, ' [-': 1, '[-1': 1, '-11': 1, '11,': 1, '1,1': 1, ',1,': 1, '1,3': 1, ',3,': 1, '3,4': 1, ',4,': 1, '4,5': 1, ',5,': 1, '5,6': 1, ',6,': 1, '6,7': 1, ',7,': 1, '7,8': 1, ',8]': 1, '8]\n': 1, ']\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 't(m': 1, '(li': 1, '_1)': 1, '1))': 1, '))\n': 1, ')\n#': 1, '\n# ': 1, '# O': 1, ' O ': 1, 'O (': 1, ' (n': 1, '(n)': 1, 'n)\n': 1}"
Imad,right_rotate.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'list_1': 1, '=': 5, '[1,2,3,4,5,6,7,8,9,10]': 1, 'def': 1, 'right_rotate(lst,k):': 1, 'if': 2, 'k>': 1, 'len(lst):': 1, 'k': 3, '%': 1, 'len(list_1)': 1, '#': 1, 'exceeds': 2, 'the': 2, 'length': 2, 'of': 2, 'list': 2, 'print(""k': 1, 'but': 1, 'now': 1, 'rounded': 1, 'off': 1, 'to:': 1, '"",': 1, 'k)': 1, 'a': 1, '=k': 1, 'k1=0': 1, 'while(k1': 1, '<k):': 1, 'temp': 2, 'lst[k1]': 2, 'lst[-a]': 2, 'k1+=1': 1, 'a-=1': 1, 'return(lst)': 1, 'print(right_rotate(list_1,41))': 1}","{'\n\nl': 1, '\nli': 1, 'lis': 5, 'ist': 5, 'st_': 3, 't_1': 3, '_1 ': 1, '1 =': 1, ' = ': 5, '= [': 1, ' [1': 1, '[1,': 1, '1,2': 1, ',2,': 1, '2,3': 1, ',3,': 1, '3,4': 1, ',4,': 1, '4,5': 1, ',5,': 1, '5,6': 1, ',6,': 1, '6,7': 1, ',7,': 1, '7,8': 1, ',8,': 1, '8,9': 1, ',9,': 1, '9,1': 1, ',10': 1, '10]': 1, '0]\n': 1, ']\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f r': 1, ' ri': 1, 'rig': 2, 'igh': 2, 'ght': 2, 'ht_': 2, 't_r': 2, '_ro': 2, 'rot': 2, 'ota': 2, 'tat': 2, 'ate': 2, 'te(': 2, 'e(l': 2, '(ls': 3, 'lst': 7, 'st,': 1, 't,k': 1, ',k)': 1, 'k):': 2, '):\n': 3, ':\n ': 3, '\n  ': 12, '   ': 54, '  i': 1, ' if': 1, 'if ': 1, 'f k': 2, ' k>': 1, 'k> ': 1, '> l': 1, ' le': 4, 'len': 4, 'en(': 2, 'n(l': 3, 'st)': 2, 't):': 1, '  k': 3, ' k ': 3, 'k =': 1, '= k': 1, 'k %': 1, ' % ': 1, '% l': 1, '(li': 2, '_1)': 1, '1) ': 1, ') #': 1, ' # ': 1, '# I': 1, ' If': 1, 'If ': 1, 'k e': 1, ' ex': 2, 'exc': 2, 'xce': 2, 'cee': 2, 'eed': 2, 'eds': 2, 'ds ': 2, 's t': 2, ' th': 2, 'the': 2, 'he ': 2, 'e l': 2, 'eng': 2, 'ngt': 2, 'gth': 2, 'th ': 2, 'h o': 2, ' of': 3, 'of ': 2, 'f l': 2, ' li': 2, 'st\n': 1, 't\n ': 1, '  p': 1, ' pr': 1, 'pri': 2, 'rin': 2, 'int': 2, 'nt(': 2, 't(""': 1, '(""K': 1, '""K ': 1, 'K e': 1, 'st ': 1, 't b': 1, ' bu': 1, 'but': 1, 'ut ': 1, 't n': 1, ' no': 1, 'now': 1, 'ow ': 1, 'w r': 1, ' ro': 1, 'rou': 1, 'oun': 1, 'und': 1, 'nde': 1, 'ded': 1, 'ed ': 1, 'd o': 1, 'off': 1, 'ff ': 1, 'f t': 1, ' to': 1, 'to:': 1, 'o: ': 1, ': ""': 1, ' "",': 1, '"", ': 1, ', k': 1, ' k)': 1, 'k)\n': 1, ')\n ': 1, '  a': 2, ' a ': 1, 'a =': 1, ' =k': 1, '=k\n': 1, 'k\n ': 1, ' k1': 2, 'k1=': 1, '1=0': 1, '=0\n': 1, '0\n\n': 1, '\n\n ': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le(': 1, 'e(k': 1, '(k1': 1, 'k1 ': 1, '1 <': 1, ' <k': 1, '<k)': 1, '  t': 1, ' te': 2, 'tem': 2, 'emp': 2, 'mp ': 1, 'p =': 1, '= l': 2, ' ls': 4, 'st[': 4, 't[k': 2, '[k1': 2, 'k1]': 2, '1]\n': 1, ']\n ': 2, '  l': 2, '1] ': 1, '] =': 2, 't[-': 2, '[-a': 2, '-a]': 2, 'a]\n': 1, 'a] ': 1, '= t': 1, 'mp\n': 1, 'p\n ': 1, 'k1+': 1, '1+=': 1, '+=1': 1, '=1\n': 2, '1\n ': 2, ' a-': 1, 'a-=': 1, '-=1': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn(': 1, 't)\n': 1, ')\n\n': 2, '\n\n\n': 2, '\n\np': 1, '\npr': 1, 't(r': 1, '(ri': 1, '_1,': 1, '1,4': 1, ',41': 1, '41)': 1, '1))': 1, '))\n': 1, '\n \n': 1}"
Imad,sum_upto_k.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 7, 'find': 1, 'two': 2, 'numbers': 2, 'in': 4, 'list': 2, 'that': 1, 'add': 1, 'upto': 1, 'given': 1, 'number': 1, 'of': 1, 'k': 2, 'and': 2, 'return': 5, 'both': 1, 'a': 2, 'list.': 1, 'brute': 1, 'force:': 1, 'o(n^2)': 1, 'list1=': 1, '[1,21,3,14,5,60,7,6]': 1, 'def': 2, 'find_sum(lst,': 2, 'k):': 2, 'for': 2, 'lst:': 2, 'b': 1, 'if': 2, 'a+b==k:': 1, '[a,b]': 1, 'false': 3, 'print(find_sum(list1,1000))': 1, 'moving': 1, 'indices:': 1, 'o(nlog(n))': 1, 'sort': 1, 'the': 3, 'lst.sort()': 1, 'index1': 2, '=': 5, '0': 2, 'index2': 2, 'len(lst)': 1, '-': 1, '1': 3, 'result': 2, '[]': 1, 'sum': 5, 'iterate': 1, 'from': 1, 'front': 1, 'back': 1, 'move': 1, 'accordingly': 1, 'to': 3, 'reach': 1, 'be': 1, 'equal': 1, 'returns': 1, 'when': 1, 'indices': 1, 'meet': 1, 'while': 1, '(index1': 1, '!=': 1, 'index2):': 1, 'lst[index1]': 1, '+': 1, 'lst[index2]': 1, '<': 1, 'k:': 2, '+=': 1, 'elif': 1, '>': 1, '-=': 1, 'else:': 1, 'result.append(lst[index1])': 1, 'result.append(lst[index2])': 1, 'print(find_sum([1,': 2, '2,': 2, '3,': 2, '4],': 2, '5))': 1, '2))': 1}","{'# F': 1, ' Fi': 1, 'Fin': 1, 'ind': 17, 'nd ': 3, 'd t': 1, ' tw': 2, 'two': 2, 'wo ': 2, 'o n': 1, ' nu': 3, 'num': 3, 'umb': 3, 'mbe': 3, 'ber': 3, 'ers': 2, 'rs ': 2, 's i': 2, ' in': 10, 'in ': 4, 'n l': 3, ' li': 3, 'lis': 5, 'ist': 5, 'st ': 1, 't t': 2, ' th': 4, 'tha': 1, 'hat': 1, 'at ': 1, 't a': 2, ' ad': 1, 'add': 1, 'dd ': 1, 'd u': 1, ' up': 1, 'upt': 1, 'pto': 1, 'to ': 4, 'o g': 1, ' gi': 1, 'giv': 1, 'ive': 1, 'ven': 1, 'en ': 2, 'n n': 1, 'er ': 1, 'r o': 1, ' of': 1, 'of ': 1, 'f k': 1, ' k ': 1, 'k a': 1, ' an': 2, 'and': 2, 'd r': 1, ' re': 11, 'ret': 6, 'etu': 6, 'tur': 6, 'urn': 6, 'rn ': 5, 'n b': 1, ' bo': 1, 'bot': 1, 'oth': 1, 'th ': 1, 'h n': 1, 'n a': 1, ' a ': 2, 'a l': 1, 'st.': 2, 't.\n': 1, '.\n#': 1, '\n# ': 2, '# B': 1, ' Br': 1, 'Bru': 1, 'rut': 1, 'ute': 1, 'te ': 2, 'e F': 1, ' Fo': 1, 'For': 1, 'orc': 1, 'rce': 1, 'ce:': 1, 'e: ': 1, ': O': 2, ' O(': 2, 'O(n': 2, '(n^': 1, 'n^2': 1, '^2)': 1, '2)\n': 1, ')\nl': 1, '\nli': 1, 'st1': 2, 't1=': 1, '1= ': 1, '= [': 2, ' [1': 1, '[1,': 3, '1,2': 1, ',21': 1, '21,': 1, '1,3': 1, ',3,': 1, '3,1': 1, ',14': 1, '14,': 1, '4,5': 1, ',5,': 1, '5,6': 1, ',60': 1, '60,': 1, '0,7': 1, ',7,': 1, '7,6': 1, ',6]': 1, '6]\n': 1, ']\nd': 1, '\nde': 2, 'def': 2, 'ef ': 2, 'f f': 2, ' fi': 2, 'fin': 5, 'nd_': 5, 'd_s': 5, '_su': 5, 'sum': 10, 'um(': 5, 'm(l': 3, '(ls': 5, 'lst': 10, 'st,': 2, 't, ': 2, ', k': 2, ' k)': 2, 'k):': 2, '):\n': 3, ':\n ': 9, '\n  ': 26, '   ': 136, '  f': 2, ' fo': 2, 'for': 2, 'or ': 2, 'r a': 1, 'a i': 1, ' ls': 5, 'st:': 2, 't:\n': 2, 'r b': 1, ' b ': 1, 'b i': 1, '  i': 6, ' if': 2, 'if ': 3, 'f a': 1, ' a+': 1, 'a+b': 1, '+b=': 1, 'b==': 1, '==k': 1, '=k:': 1, 'k:\n': 3, '  r': 7, 'n [': 1, ' [a': 1, '[a,': 1, 'a,b': 1, ',b]': 1, 'b]\n': 1, ']\n ': 3, 'n F': 2, ' Fa': 2, 'Fal': 2, 'als': 3, 'lse': 4, 'se\n': 2, 'e\n ': 1, '  \n': 1, ' \n\n': 1, '\n\np': 2, '\npr': 3, 'pri': 3, 'rin': 3, 'int': 3, 'nt(': 3, 't(f': 3, '(fi': 3, '(li': 1, 't1,': 1, '1,1': 1, ',10': 1, '100': 1, '000': 1, '00)': 1, '0))': 1, '))\n': 4, ')\n\n': 1, '\n\n\n': 2, '\n\n#': 1, '# M': 1, ' Mo': 1, 'Mov': 1, 'ovi': 1, 'vin': 1, 'ing': 2, 'ng ': 1, 'g I': 1, ' In': 1, 'Ind': 1, 'ndi': 2, 'dic': 2, 'ice': 2, 'ces': 2, 'es:': 1, 's: ': 1, '(nl': 1, 'nlo': 1, 'log': 1, 'og(': 1, 'g(n': 1, '(n)': 1, 'n))': 1, ')\nd': 1, '  #': 4, ' # ': 4, '# s': 1, ' so': 1, 'sor': 2, 'ort': 2, 'rt ': 1, 'the': 3, 'he ': 3, 'e l': 1, 'st\n': 1, 't\n ': 3, '  l': 1, 't.s': 1, '.so': 1, 'rt(': 1, 't()': 1, '()\n': 1, ')\n ': 3, 'nde': 10, 'dex': 10, 'ex1': 5, 'x1 ': 3, '1 =': 1, ' = ': 5, '= 0': 2, ' 0\n': 2, '0\n ': 2, 'ex2': 5, 'x2 ': 2, '2 =': 1, '= l': 2, ' le': 1, 'len': 1, 'en(': 1, 'n(l': 1, 'st)': 1, 't) ': 1, ') -': 1, ' - ': 1, '- 1': 1, ' 1\n': 3, '1\n ': 3, 'res': 4, 'esu': 4, 'sul': 4, 'ult': 4, 'lt ': 1, 't =': 1, ' []': 1, '[]\n': 1, '  s': 2, ' su': 5, 'um ': 5, 'm =': 2, '# i': 1, ' it': 1, 'ite': 1, 'ter': 1, 'era': 1, 'rat': 1, 'ate': 1, 'e f': 1, ' fr': 2, 'fro': 2, 'rom': 1, 'om ': 1, 'm f': 1, 'ron': 1, 'ont': 1, 'nt ': 1, 'd b': 1, ' ba': 1, 'bac': 1, 'ack': 1, 'ck\n': 1, 'k\n ': 2, '# m': 1, ' mo': 1, 'mov': 1, 'ove': 1, 've ': 1, 'e a': 1, ' ac': 1, 'acc': 1, 'cco': 1, 'cor': 1, 'ord': 1, 'rdi': 1, 'din': 1, 'ngl': 1, 'gly': 1, 'ly ': 1, 'y t': 1, ' to': 3, 'o r': 1, 'rea': 1, 'eac': 1, 'ach': 1, 'ch ': 1, 'h t': 1, 'e s': 1, 'm t': 1, 'o b': 1, ' be': 1, 'be ': 1, 'e e': 1, ' eq': 1, 'equ': 1, 'qua': 1, 'ual': 1, 'al ': 1, 'l t': 1, 'o k': 1, ' k\n': 1, '# r': 1, 'rns': 1, 'ns ': 1, 's f': 1, ' fa': 1, 'fal': 1, 'se ': 1, 'e w': 1, ' wh': 2, 'whe': 1, 'hen': 1, 'n t': 1, 'e t': 1, 'o i': 1, 'es ': 1, 's m': 1, ' me': 1, 'mee': 1, 'eet': 1, 'et\n': 1, '  w': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e (': 1, ' (i': 1, '(in': 1, '1 !': 1, ' !=': 1, '!= ': 1, '= i': 1, 'x2)': 1, '2):': 1, 'st[': 4, 't[i': 4, '[in': 4, 'x1]': 2, '1] ': 1, '] +': 1, ' + ': 1, '+ l': 1, 'x2]': 2, '2]\n': 1, 'f s': 2, 'm <': 1, ' < ': 1, '< k': 1, ' k:': 2, '1 +': 1, ' +=': 1, '+= ': 1, '= 1': 2, '  e': 2, ' el': 2, 'eli': 1, 'lif': 1, 'm >': 1, ' > ': 1, '> k': 1, '2 -': 1, ' -=': 1, '-= ': 1, 'els': 1, 'se:': 1, 'e:\n': 1, 'lt.': 2, 't.a': 2, '.ap': 2, 'app': 2, 'ppe': 2, 'pen': 2, 'end': 2, 'nd(': 2, 'd(l': 2, '1])': 1, '])\n': 2, '2])': 1, 'n r': 1, 'lt\n': 1, 'e\n\n': 1, 'm([': 2, '([1': 2, '1, ': 2, ', 2': 3, ' 2,': 2, '2, ': 2, ', 3': 2, ' 3,': 2, '3, ': 2, ', 4': 2, ' 4]': 2, '4],': 2, '], ': 2, ', 5': 1, ' 5)': 1, '5))': 1, ')\np': 1, ' 2)': 1, '2))': 1}"
Imad,Union_Intersection_LL.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 2, '1.': 1, 'brute': 1, 'force:': 1, 'nested': 2, 'loops:we': 1, 'can': 1, 'solve': 1, 'this': 1, 'problem': 1, 'by': 3, 'using': 2, 'loops': 1, 'since': 1, 'we': 6, 'also': 3, 'have': 2, 'to': 6, 'check': 3, 'the': 8, 'duplicate': 2, 'item': 2, 'within': 1, 'list': 10, 'as': 2, 'well': 1, 'and': 5, 'if': 6, 'there': 1, 'is': 3, 'in': 9, 'second': 2, 'with': 1, 'respect': 1, 'first': 4, 'list.': 1, 'l': 1, '=': 33, 'm+n': 1, 'time:': 1, 'o(l^2)': 1, '2.': 1, 'dictionary': 1, 'keep': 1, 'track': 1, 'of': 4, 'duplicates:': 1, 'will': 4, 'traverse': 2, 'through': 2, 'removing': 1, 'duplicates': 3, 'then': 1, 'skipping': 1, 'adding': 1, 'them': 1, 'it': 1, 'already': 1, 'unique.': 1, 'follow': 1, 'same': 1, 'procedure': 1, 'for': 2, 'intersection': 4, 'except': 1, 'only': 1, 'add': 1, 'those': 1, 'elements': 1, 'into': 1, 'new': 1, 'which': 1, 'are': 1, 'present': 1, 'both': 1, 'lists.': 1, 'from': 2, 'linkedlist': 2, 'import': 2, 'node': 4, '#': 12, 'access': 1, 'head_node': 1, '=>': 7, 'list.get_head()': 1, 'empty': 1, 'list.is_empty()': 1, 'delete': 2, 'at': 1, 'head': 1, 'list.delete_at_head()': 1, 'value': 1, 'list.delete(value)': 1, 'search': 1, 'element': 1, 'list.search()': 1, 'length': 1, 'list.length()': 1, 'remove': 1, 'list.remove_duplicates()': 1, 'class': 1, '{int': 1, 'data': 1, ';': 1, 'next_element;}': 1, 'returns': 2, 'a': 2, 'containing': 2, 'union': 1, 'list1': 2, 'list2': 2, 'def': 2, 'union(list1,': 1, 'list2):': 2, 'write': 2, 'your': 2, 'code': 2, 'here': 2, 'my_dict': 2, '{}': 2, 'index': 5, '1': 2, 'list1_p': 8, 'list1.get_head()': 3, 'list2_p': 7, 'list2.get_head()': 2, 'while': 4, '(list1_p):': 2, 'list1_p.data': 4, 'not': 3, 'my_dict:': 7, 'my_dict[list1_p.data]': 2, 'elif': 3, 'temp_d': 6, 'temp_p.next_element': 3, 'temp_d.next_element': 3, 'none': 3, 'temp_p': 3, 'list1_p.next_element': 2, 'index+=1': 3, 'start': 3, 'start:': 1, 'start.next_element': 2, '(list2_p):': 1, 'list2_p.data': 2, 'my_dict[list2_p.data]': 1, 'new_node': 2, 'node(list2_p.data)': 1, 'list2_p.next_element': 2, 'return': 2, 'intersection(list1,': 1, 'linkedlist()': 1, 'while(list2_p):': 1, 'intersection.insert_at_head(list2_p)': 1}","{""'''"": 2, ""''\n"": 2, ""'\n1"": 1, '\n1.': 1, '1. ': 1, '. B': 1, ' Br': 1, 'Bru': 1, 'rut': 1, 'ute': 1, 'te ': 7, 'e F': 1, ' Fo': 1, 'For': 1, 'orc': 1, 'rce': 1, 'ce:': 1, 'e: ': 2, ': N': 1, ' Ne': 1, 'Nes': 1, 'est': 2, 'ste': 2, 'ted': 2, 'ed ': 2, 'd l': 6, ' lo': 2, 'loo': 2, 'oop': 2, 'ops': 2, 'ps:': 1, 's:W': 1, ':We': 1, 'We ': 2, 'e c': 2, ' ca': 1, 'can': 1, 'an ': 1, 'n s': 2, ' so': 1, 'sol': 1, 'olv': 1, 'lve': 1, 've ': 4, 'e t': 5, ' th': 15, 'thi': 2, 'his': 1, 'is ': 4, 's p': 1, ' pr': 3, 'pro': 2, 'rob': 1, 'obl': 1, 'ble': 1, 'lem': 16, 'em ': 4, 'm b': 1, ' by': 3, 'by ': 3, 'y u': 2, ' us': 2, 'usi': 2, 'sin': 3, 'ing': 7, 'ng ': 7, 'g n': 1, ' ne': 5, 'nes': 1, 'ps ': 1, 's s': 1, ' si': 1, 'inc': 1, 'nce': 1, 'ce ': 1, 'e w': 5, ' we': 6, 'we ': 5, 'e a': 2, ' al': 3, 'als': 3, 'lso': 3, 'so ': 3, 'o h': 1, ' ha': 2, 'hav': 2, 'ave': 4, ' to': 6, 'to ': 7, 'o c': 2, ' ch': 2, 'che': 2, 'hec': 3, 'eck': 3, 'ck ': 4, 'k t': 1, 'the': 11, 'he ': 8, 'e d': 3, ' du': 6, 'dup': 7, 'upl': 7, 'pli': 7, 'lic': 7, 'ica': 7, 'cat': 7, 'ate': 7, 'e i': 5, ' it': 3, 'ite': 4, 'tem': 17, 'm w': 1, ' wi': 6, 'wit': 2, 'ith': 2, 'hin': 1, 'in ': 10, 'n t': 3, 'e l': 2, ' li': 55, 'lis': 66, 'ist': 69, 'st ': 15, 't a': 3, ' as': 2, 'as ': 2, 's w': 1, 'wel': 1, 'ell': 1, 'll ': 5, 'l a': 1, ' an': 5, 'and': 5, 'nd\n': 1, 'd\na': 1, '\nal': 1, 'o w': 1, 'e h': 3, 'k i': 2, ' if': 6, 'if ': 9, 'f t': 2, 'her': 3, 'ere': 3, 're ': 3, ' is': 3, 's d': 1, 'm i': 1, ' in': 24, 'e s': 2, ' se': 2, 'sec': 8, 'eco': 2, 'con': 4, 'ond': 2, 'nd ': 6, 't w': 3, 'th ': 3, 'h r': 1, ' re': 4, 'res': 2, 'esp': 1, 'spe': 1, 'pec': 1, 'ect': 7, 'ct ': 3, 't t': 3, 'o f': 1, ' fi': 4, 'fir': 4, 'irs': 4, 'rst': 4, 'o l': 1, 'st.': 8, 't. ': 1, '. l': 1, ' l ': 1, 'l =': 1, ' = ': 33, '= m': 1, ' m+': 1, 'm+n': 1, '+n ': 1, ' ti': 1, 'tim': 1, 'ime': 1, 'me:': 1, ': O': 1, ' O(': 1, 'O(l': 1, '(l^': 1, 'l^2': 1, '^2)': 1, '2) ': 1, ') \n': 1, ' \n2': 1, '\n2.': 1, '2. ': 1, '. u': 1, 'g D': 1, ' Di': 1, 'Dic': 1, 'ict': 13, 'cti': 7, 'tio': 7, 'ion': 9, 'ona': 1, 'nar': 1, 'ary': 1, 'ry ': 1, 'y t': 1, 'o k': 1, ' ke': 1, 'kee': 1, 'eep': 1, 'ep ': 1, 'p t': 1, ' tr': 3, 'tra': 3, 'rac': 1, 'ack': 1, 'k o': 1, ' of': 4, 'of ': 4, 'f d': 1, 'tes': 5, 'es:': 1, 's: ': 1, ': w': 1, 'wil': 4, 'ill': 4, 'l f': 2, 'rav': 2, 'ver': 2, 'ers': 8, 'rse': 8, 'se ': 3, 'thr': 2, 'hro': 2, 'rou': 2, 'oug': 2, 'ugh': 2, 'gh ': 2, 'h f': 2, 't l': 2, 'o r': 1, 'rem': 2, 'emo': 3, 'mov': 3, 'ovi': 1, 'vin': 1, 'g d': 1, 'es ': 3, 's a': 5, 'd t': 2, 'hen': 1, 'en ': 1, 'n \n': 2, ' \n ': 5, '\n  ': 58, '   ': 433, '  w': 6, 'l t': 1, 'h s': 1, 't b': 1, 'y s': 1, ' sk': 1, 'ski': 1, 'kip': 1, 'ipp': 1, 'ppi': 1, 'pin': 1, 'g t': 4, 'd a': 1, ' ad': 2, 'add': 2, 'ddi': 1, 'din': 1, 'hem': 1, 'm t': 1, 'o \n': 1, '  t': 13, 'e f': 2, 's i': 2, 'it ': 1, 't i': 7, 'alr': 1, 'lre': 1, 'rea': 1, 'ead': 11, 'ady': 1, 'dy ': 1, ' un': 3, 'uni': 3, 'niq': 1, 'iqu': 1, 'que': 1, 'ue.': 1, 'e. ': 1, '. W': 1, ' We': 1, ' fo': 3, 'fol': 1, 'oll': 1, 'llo': 1, 'low': 1, 'ow ': 1, 'w s': 1, ' sa': 1, 'sam': 1, 'ame': 1, 'me ': 1, 'e p': 2, 'roc': 1, 'oce': 1, 'ced': 1, 'edu': 1, 'dur': 1, 'ure': 1, 'for': 2, 'or ': 2, 'r i': 1, 'int': 8, 'nte': 6, 'ter': 6, 'on ': 4, '  e': 4, ' ex': 1, 'exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pt ': 1, 'l o': 1, ' on': 1, 'onl': 1, 'nly': 1, 'ly ': 1, 'y a': 1, 'dd ': 1, 'tho': 1, 'hos': 1, 'ose': 1, 'e e': 1, ' el': 5, 'ele': 19, 'eme': 15, 'men': 15, 'ent': 16, 'nts': 1, 'ts ': 1, 'nto': 1, 'o n': 1, 'new': 3, 'ew ': 1, 'w l': 1, ' wh': 6, 'whi': 6, 'hic': 1, 'ich': 1, 'ch ': 2, 'h a': 1, ' ar': 1, 'are': 1, 'pre': 1, 'ese': 1, 'sen': 1, 'nt ': 7, 'n b': 1, ' bo': 1, 'bot': 1, 'oth': 1, 'h l': 1, 'sts': 1, 'ts.': 1, 's.\n': 1, '.\n\n': 1, ""\n\n'"": 1, ""\n''"": 1, ""'\n\n"": 1, '\n\n\n': 3, '\n\nf': 1, '\nfr': 2, 'fro': 2, 'rom': 2, 'om ': 2, 'm L': 1, ' Li': 3, 'Lin': 3, 'ink': 3, 'nke': 3, 'ked': 3, 'edL': 3, 'dLi': 3, 'Lis': 3, ' im': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 4, 't L': 1, 'st\n': 1, 't\nf': 1, 'm N': 1, ' No': 8, 'Nod': 5, 'ode': 10, 'de ': 7, 't N': 1, 'de\n': 2, 'e\n#': 1, '\n# ': 10, '# A': 1, ' Ac': 1, 'Acc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss ': 2, 's h': 1, ' he': 4, 'hea': 10, 'ad_': 1, 'd_n': 1, '_no': 3, 'nod': 3, 'e =': 3, ' =>': 7, '=> ': 7, '> l': 7, 't.g': 1, '.ge': 6, 'get': 6, 'et_': 6, 't_h': 8, '_he': 8, 'ad(': 8, 'd()': 7, '()\n': 12, ')\n#': 7, '# C': 1, ' Ch': 1, 'Che': 1, 'f l': 10, 's e': 1, ' em': 1, 'emp': 17, 'mpt': 2, 'pty': 2, 'ty ': 1, 'y =': 1, 't.i': 1, '.is': 1, 'is_': 1, 's_e': 1, '_em': 1, 'ty(': 1, 'y()': 1, '# D': 2, ' De': 2, 'Del': 2, 'let': 4, 'ete': 4, ' at': 1, 'at ': 1, 't h': 1, 'ad ': 1, 'd =': 7, 't.d': 2, '.de': 2, 'del': 2, 'te_': 1, 'e_a': 1, '_at': 2, 'at_': 2, 'e b': 1, 'y v': 1, ' va': 1, 'val': 2, 'alu': 2, 'lue': 2, 'ue ': 1, 'te(': 1, 'e(v': 1, '(va': 1, 'ue)': 1, 'e)\n': 1, '# S': 1, ' Se': 1, 'Sea': 1, 'ear': 2, 'arc': 2, 'rch': 2, 'r e': 1, 't =': 10, 't.s': 1, '.se': 1, 'sea': 1, 'ch(': 1, 'h()': 2, '# L': 1, ' Le': 1, 'Len': 1, 'eng': 2, 'ngt': 2, 'gth': 2, 'h o': 1, 't.l': 1, '.le': 1, 'len': 1, 'th(': 1, '# R': 3, ' Re': 3, 'Rem': 1, 'ove': 2, 's =': 1, 't.r': 1, '.re': 1, 've_': 1, 'e_d': 1, '_du': 1, 'es(': 1, 's()': 1, '# N': 1, ' cl': 1, 'cla': 1, 'las': 1, 'ass': 1, 's  ': 1, '  {': 1, ' {i': 1, '{in': 1, 't d': 1, ' da': 1, 'dat': 11, 'ata': 11, 'ta ': 7, 'a ;': 1, ' ; ': 1, '; N': 1, 'e n': 1, 'nex': 13, 'ext': 13, 'xt_': 13, 't_e': 13, '_el': 13, 'nt;': 1, 't;}': 1, ';}\n': 1, '}\n\n': 1, '\n\n#': 2, 'Ret': 2, 'etu': 4, 'tur': 4, 'urn': 4, 'rns': 2, 'ns ': 2, ' a ': 2, 'a l': 2, 't c': 2, ' co': 4, 'ont': 2, 'nta': 2, 'tai': 2, 'ain': 2, 'ini': 2, 'nin': 2, 'e u': 1, 'nio': 2, 'n o': 2, 'st1': 25, 't1 ': 2, '1 a': 2, 'st2': 22, 't2\n': 2, '2\n\n': 2, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f u': 1, 'on(': 2, 'n(l': 2, '(li': 8, 't1,': 2, '1, ': 2, ', l': 2, 't2)': 2, '2):': 2, '):\n': 6, ':\n ': 14, '  #': 2, ' # ': 2, '# W': 2, ' Wr': 2, 'Wri': 2, 'rit': 2, 'e y': 2, ' yo': 2, 'you': 2, 'our': 2, 'ur ': 2, 'r c': 2, 'cod': 2, 're\n': 2, 'e\n ': 6, '  m': 5, ' my': 12, 'my_': 12, 'y_d': 12, '_di': 12, 'dic': 12, '= {': 2, ' {}': 2, '{}\n': 2, '}\n ': 2, '  i': 11, 'ind': 8, 'nde': 8, 'dex': 8, 'ex ': 2, 'x =': 2, '= 1': 2, ' 1\n': 2, '1\n ': 5, '  l': 8, 't1_': 18, '1_p': 18, '_p ': 12, 'p =': 8, '= l': 15, 't1.': 3, '1.g': 3, ')\n ': 8, 't2_': 16, '2_p': 16, 't2.': 2, '2.g': 2, 'hil': 5, 'ile': 5, 'le ': 4, 'e (': 3, ' (l': 3, '_p)': 5, 'p):': 4, '  \n': 3, '_p.': 17, 'p.d': 10, '.da': 10, 'a n': 3, ' no': 3, 'not': 3, 'ot ': 3, 'n m': 7, 'ct:': 7, 't:\n': 8, 'ct[': 3, 't[l': 3, '[li': 3, 'ta]': 3, 'a] ': 3, '] =': 3, '= i': 3, 'ex\n': 3, 'x\n ': 3, 'eli': 3, 'lif': 3, 'a i': 3, ' te': 15, 'mp_': 15, 'p_d': 9, '_d ': 6, '_p\n': 6, 'p\n ': 6, 'p_p': 6, 'p.n': 7, '.ne': 12, '= t': 3, '_d.': 3, 'd.n': 3, 'nt\n': 8, 't\n ': 9, '= N': 4, 'Non': 3, 'one': 3, 'ne\n': 3, 'p  ': 3, '  =': 3, 'ex+': 3, 'x+=': 3, '+=1': 3, '=1\n': 3, '  s': 3, ' st': 6, 'sta': 6, 'tar': 6, 'art': 6, 'rt:': 1, '= s': 1, 'rt.': 2, 't.n': 2, '  n': 1, 'ew_': 2, 'w_n': 2, 'de(': 1, 'e(l': 2, 'ta)': 1, 'a)\n': 1, '= n': 1, '  r': 2, 'ret': 2, 'rn ': 2, 'rt\n': 1, ' \n\n': 1, 'f i': 1, 'n =': 1, '= L': 1, 'st(': 1, 't()': 1, 'le(': 1, 'p i': 1, 'on.': 1, 'n.i': 1, '.in': 1, 'ins': 1, 'nse': 1, 'ser': 1, 'ert': 1, 'rt_': 1, 't_a': 1, 'd(l': 1, 'p)\n': 1, 'n i': 1, 'on\n': 1}"
Jaredliw,1073 Towers.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 40, 'time:': 2, '0.14': 1, 's': 2, 'from': 1, 'bisect': 2, 'import': 1, 'input()': 2, 'store': 2, 'the': 8, 'topmost': 2, 'cube': 8, 'of': 6, 'each': 2, 'tower': 8, 'towers': 4, 'are': 2, 'in': 4, 'non-decreasing': 2, 'order': 2, 'for': 4, 'sure': 2, '=': 12, '[]': 2, 'map(int,': 2, 'input().split()):': 2, 'tower_idx': 5, 'bisect(towers,': 1, 'cube)': 1, 'if': 7, 'there': 4, 'exists': 2, 'a': 2, 'satisfying': 2, 'tower,': 2, 'add': 2, 'to': 4, 'that': 2, 'and': 2, 'update': 2, 'top': 2, 'element': 2, '<': 1, 'len(towers):': 1, 'towers[tower_idx]': 2, ""aren't"": 2, 'any': 2, 'suitable': 2, 'towers,': 2, 'append': 2, 'new': 2, 'end': 2, 'array': 2, 'else:': 3, 'towers.append(cube)': 2, 'print(len(towers))': 2, '0.12': 1, 'binary': 1, 'search': 1, 'left': 3, '0': 1, 'right': 2, 'len(towers)': 1, '-': 2, '1': 3, '-1': 1, 'while': 1, '<=': 2, 'right:': 1, 'mid': 4, '(left': 1, '+': 2, 'right)': 1, '//': 1, '2': 1, 'towers[mid]': 1, 'cube:': 1, '!=': 1, '-1:': 1}","{'# T': 4, ' Ti': 2, 'Tim': 2, 'ime': 2, 'me:': 2, 'e: ': 2, ': 0': 2, ' 0.': 2, '0.1': 2, '.14': 1, '14 ': 1, '4 s': 1, ' s\n': 2, 's\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm b': 1, ' bi': 3, 'bis': 3, 'ise': 3, 'sec': 3, 'ect': 3, 'ct ': 1, 't i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't b': 1, 'ct\n': 1, 't\n\n': 1, '\n\ni': 1, '\nin': 1, 'inp': 4, 'npu': 4, 'put': 4, 'ut(': 4, 't()': 6, '()\n': 2, ')\n#': 3, '\n# ': 28, '# S': 2, ' St': 2, 'Sto': 2, 'tor': 2, 'ore': 2, 're ': 8, 'e t': 14, ' th': 14, 'the': 12, 'he ': 8, ' to': 24, 'top': 4, 'opm': 2, 'pmo': 2, 'mos': 2, 'ost': 2, 'st ': 2, 't c': 2, ' cu': 10, 'cub': 12, 'ube': 12, 'be ': 6, 'e o': 2, ' of': 6, 'of ': 4, 'f e': 2, ' ea': 2, 'eac': 2, 'ach': 2, 'ch ': 2, 'h t': 2, 'tow': 31, 'owe': 33, 'wer': 33, 'er\n': 6, 'r\n#': 4, ' To': 2, 'Tow': 2, 'ers': 16, 'rs ': 4, 's a': 4, ' ar': 6, 'are': 4, 'e i': 4, ' in': 7, 'in ': 4, 'n n': 2, ' no': 2, 'non': 2, 'on-': 2, 'n-d': 2, '-de': 2, 'dec': 2, 'ecr': 2, 'cre': 2, 'rea': 2, 'eas': 2, 'asi': 2, 'sin': 2, 'ing': 4, 'ng ': 4, 'g o': 2, ' or': 2, 'ord': 2, 'rde': 2, 'der': 2, 'er ': 4, 'r f': 2, ' fo': 3, 'for': 4, 'or ': 4, 'r s': 2, ' su': 4, 'sur': 2, 'ure': 2, 're\n': 2, 'e\nt': 1, '\nto': 1, 's =': 2, ' = ': 12, '= [': 2, ' []': 2, '[]\n': 2, ']\nf': 1, '\nfo': 1, 'r c': 2, 'n m': 2, ' ma': 2, 'map': 2, 'ap(': 2, 'p(i': 2, '(in': 2, 'int': 4, 'nt,': 2, 't, ': 2, ', i': 2, '().': 2, ').s': 2, '.sp': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'it(': 2, '())': 2, ')):': 2, '):\n': 3, ':\n\t': 3, '\n\tt': 1, '\tto': 7, 'er_': 7, 'r_i': 7, '_id': 7, 'idx': 7, 'dx ': 5, 'x =': 3, '= b': 1, 'ct(': 1, 't(t': 1, '(to': 5, 'rs,': 3, 's, ': 3, ', c': 1, 'be)': 3, 'e)\n': 3, ')\n\n': 2, '\n\n\t': 1, '\n\t#': 4, '\t# ': 9, '# I': 4, ' If': 4, 'If ': 4, 'f t': 9, 'her': 4, 'ere': 4, 'e e': 2, ' ex': 2, 'exi': 2, 'xis': 2, 'ist': 2, 'sts': 2, 'ts ': 2, ' a ': 2, 'a s': 2, ' sa': 2, 'sat': 2, 'ati': 2, 'tis': 2, 'isf': 2, 'sfy': 2, 'fyi': 2, 'yin': 2, 'g t': 2, 'er,': 2, 'r, ': 2, ', a': 4, ' ad': 2, 'add': 2, 'dd ': 2, 'd t': 2, 'e c': 2, 'to ': 4, 'o t': 2, 'tha': 2, 'hat': 2, 'at ': 2, 't t': 2, 'r\n\t': 2, '# a': 4, ' an': 4, 'and': 2, 'nd ': 6, 'd u': 2, ' up': 2, 'upd': 2, 'pda': 2, 'dat': 2, 'ate': 2, 'te ': 2, 'op ': 2, 'p e': 2, ' el': 2, 'ele': 2, 'lem': 2, 'eme': 2, 'men': 2, 'ent': 2, 'nt ': 2, 't o': 2, '\n\ti': 1, '\tif': 3, 'if ': 3, 'x <': 1, ' < ': 1, '< l': 1, ' le': 3, 'len': 4, 'en(': 4, 'n(t': 4, 'rs)': 4, 's):': 1, '\n\t\t': 2, '\t\tt': 5, 'rs[': 3, 's[t': 2, '[to': 2, 'dx]': 2, 'x] ': 2, '] =': 2, '= c': 3, 'be\n': 2, 'e\n\t': 1, 'e a': 2, 'ren': 2, ""en'"": 2, ""n't"": 2, ""'t "": 2, 't a': 2, 'any': 2, 'ny ': 2, 'y s': 3, 'sui': 2, 'uit': 2, 'ita': 2, 'tab': 2, 'abl': 2, 'ble': 2, 'le ': 3, ' ap': 2, 'app': 4, 'ppe': 4, 'pen': 4, 'end': 6, 'd n': 2, ' ne': 2, 'new': 2, 'ew ': 2, 'w t': 2, 'r t': 2, 'o e': 2, ' en': 2, 'd o': 2, 'of\n': 2, 'f\n\t': 1, 'arr': 2, 'rra': 2, 'ray': 2, 'ay\n': 2, 'y\n\t': 1, '\n\te': 1, '\tel': 3, 'els': 3, 'lse': 3, 'se:': 3, 'e:\n': 4, 'rs.': 2, 's.a': 2, '.ap': 2, 'nd(': 2, 'd(c': 2, '(cu': 2, ')\np': 1, '\npr': 1, 'pri': 2, 'rin': 2, 'nt(': 2, 't(l': 2, '(le': 3, 's))': 2, '))\n': 1, '\n\n\n': 1, '\n\n#': 2, '.12': 1, '12 ': 1, '2 s': 1, 's\n#': 1, '# i': 1, '# #': 2, ' # ': 2, 'e\n#': 2, '# t': 1, ']\n#': 1, '# f': 1, ':\n#': 6, '# \t': 19, ' \t#': 5, '# B': 1, ' Bi': 1, 'Bin': 1, 'ina': 1, 'nar': 1, 'ary': 1, 'ry ': 1, ' se': 1, 'sea': 1, 'ear': 1, 'arc': 1, 'rch': 1, 'ch\n': 1, 'h\n#': 1, ' \tl': 1, '\tle': 2, 'lef': 4, 'eft': 4, 'ft ': 4, 't =': 4, '= 0': 1, ' 0\n': 1, '0\n#': 1, ' \tr': 1, '\tri': 2, 'rig': 4, 'igh': 4, 'ght': 4, 'ht ': 2, '= l': 1, 's) ': 1, ') -': 1, ' - ': 2, '- 1': 2, ' 1\n': 3, '1\n#': 4, ' \tt': 1, '= -': 2, ' -1': 2, '-1\n': 1, ' \tw': 1, '\twh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'e l': 1, 't <': 1, ' <=': 2, '<= ': 2, '= r': 1, ' ri': 2, 'ht:': 1, 't:\n': 1, ' \t\t': 8, '\t\tm': 1, '\tmi': 1, 'mid': 5, 'id ': 3, 'd =': 1, '= (': 1, ' (l': 1, 't +': 1, ' + ': 2, '+ r': 1, 'ht)': 1, 't) ': 1, ') /': 1, ' //': 1, '// ': 1, '/ 2': 1, ' 2\n': 1, '2\n#': 1, '\t\ti': 1, 's[m': 1, '[mi': 1, 'id]': 1, 'd] ': 1, '] <': 1, 'be:': 1, '\t\t\t': 3, '\t\tl': 1, '= m': 3, ' mi': 3, 'd +': 1, '+ 1': 1, '\t\te': 1, '\t\tr': 1, 'd -': 1, 'id\n': 1, 'd\n\n': 1, ' \ti': 1, 'x !': 1, ' !=': 1, '!= ': 1, '-1:': 1, '1:\n': 1, 'f\n#': 1, 'y\n#': 1, ' \te': 1, '# p': 1, ' pr': 1}"
Jaredliw,1084 Apartments.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 8, 'time:': 1, '0.21': 1, 's': 1, 'applicants': 1, '=': 8, 'list(map(int,': 2, 'input().split()))': 2, 'apartments': 1, 'applicants.sort()': 1, 'apartments.sort()': 1, 'n=len(applicants)': 1, 'm=len(apartments)': 1, 'i': 4, '0': 3, 'applicant': 7, 'pointer': 3, 'j': 4, 'apartment': 8, 'ans': 2, 'tolerance': 1, '1': 6, 'while': 1, '<': 3, 'n': 1, 'and': 2, 'm:': 1, 'applicants[i]': 1, 'apartments[j]': 1, 'if': 3, '-': 1, 'tolerance:': 2, 'the': 7, 'desired': 2, 'size': 2, 'of': 1, 'is': 2, 'too': 2, 'big,': 1, 'move': 2, 'to': 3, 'right': 1, 'find': 1, 'a': 2, 'bigger': 1, 'one': 1, '+=': 5, 'elif': 1, '>': 1, '+': 1, 'small,': 1, 'skip': 1, 'that': 1, 'next': 1, 'person': 1, 'else:': 1, 'found': 1, 'suitable': 1, 'for': 1, 'print(ans)': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 1, ': 0': 1, ' 0.': 1, '0.2': 1, '.21': 1, '21 ': 1, '1 s': 1, ' s\n': 1, 's\na': 1, '\nap': 4, 'app': 10, 'ppl': 11, 'pli': 13, 'lic': 11, 'ica': 11, 'can': 11, 'ant': 11, 'nts': 8, 'ts ': 2, 's =': 3, ' = ': 8, '= l': 2, ' li': 2, 'lis': 2, 'ist': 2, 'st(': 2, 't(m': 2, '(ma': 2, 'map': 2, 'ap(': 2, 'p(i': 2, '(in': 2, 'int': 6, 'nt,': 2, 't, ': 2, ', i': 2, ' in': 2, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 6, '().': 2, ').s': 2, '.sp': 2, 'spl': 2, 'lit': 2, 'it(': 2, '())': 2, ')))': 2, '))\n': 2, ')\na': 3, 'apa': 11, 'par': 12, 'art': 12, 'rtm': 12, 'tme': 12, 'men': 12, 'ent': 12, 'ts.': 2, 's.s': 2, '.so': 2, 'sor': 2, 'ort': 2, 'rt(': 2, '()\n': 2, ')\nn': 1, '\nn=': 1, 'n=l': 1, '=le': 2, 'len': 2, 'en(': 2, 'n(a': 2, '(ap': 2, 'ts)': 2, 's)\n': 2, ')\nm': 1, '\nm=': 1, 'm=l': 1, ')\ni': 1, '\ni ': 1, 'i =': 1, '= 0': 3, ' 0 ': 2, '0  ': 2, '  #': 7, ' # ': 7, '# A': 2, ' Ap': 2, 'App': 1, 'nt ': 14, 't p': 4, ' po': 3, 'poi': 3, 'oin': 3, 'nte': 3, 'ter': 3, 'er\n': 2, 'r\nj': 1, '\nj ': 1, 'j =': 1, 'Apa': 1, 'r\na': 1, '\nan': 1, 'ans': 3, 'ns ': 2, ' 0\n': 1, '0\nt': 1, '\nto': 1, 'tol': 3, 'ole': 3, 'ler': 3, 'era': 3, 'ran': 3, 'anc': 3, 'nce': 3, 'ce ': 1, 'e =': 1, '= 1': 6, ' 1\n': 6, '1\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 2, 'e i': 2, ' i ': 3, 'i <': 1, ' < ': 3, '< n': 1, ' n ': 1, 'n a': 1, ' an': 3, 'and': 2, 'nd ': 4, 'd j': 1, ' j ': 3, 'j <': 1, '< m': 1, ' m:': 1, 'm:\n': 1, ':\n ': 4, '\n  ': 15, '   ': 70, '  a': 3, ' ap': 15, 't =': 2, '= a': 2, 'ts[': 2, 's[i': 1, '[i]': 1, 'i]\n': 1, ']\n ': 1, 's[j': 1, '[j]': 1, 'j]\n': 1, ']\n\n': 1, '\n\n ': 1, '  i': 3, ' if': 1, 'if ': 2, 'f a': 2, 't <': 1, '< a': 1, 't -': 1, ' - ': 1, '- t': 1, ' to': 7, 'ce:': 2, 'e:\n': 3, '# I': 2, ' If': 2, 'If ': 2, 'f t': 3, ' th': 8, 'the': 7, 'he ': 7, 'e d': 2, ' de': 2, 'des': 2, 'esi': 2, 'sir': 2, 'ire': 2, 'red': 2, 'ed ': 2, 'd a': 4, 't s': 2, ' si': 2, 'siz': 2, 'ize': 2, 'ze ': 2, 'e o': 1, ' of': 1, 'of ': 1, 'e a': 4, 't i': 1, ' is': 2, 'is ': 2, 's t': 2, 'too': 2, 'oo ': 2, 'o b': 1, ' bi': 2, 'big': 2, 'ig,': 1, 'g,\n': 1, ',\n ': 2, '# m': 1, ' mo': 2, 'mov': 2, 'ove': 2, 've ': 2, 'e t': 2, 'er ': 2, 'r t': 2, 'to ': 3, 'o t': 2, 'e r': 1, ' ri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht ': 1, 't t': 1, 'o f': 1, ' fi': 1, 'fin': 1, 'ind': 1, ' a ': 2, 'a b': 1, 'igg': 1, 'gge': 1, 'ger': 1, 'r o': 1, ' on': 1, 'one': 1, 'ne\n': 1, 'e\n ': 1, '  j': 2, 'j +': 2, ' +=': 5, '+= ': 5, '1\n ': 4, '  e': 2, ' el': 2, 'eli': 1, 'lif': 1, 't >': 1, ' > ': 1, '> a': 1, 't +': 1, ' + ': 1, '+ t': 1, 'o s': 1, ' sm': 1, 'sma': 1, 'mal': 1, 'all': 1, 'll,': 1, 'l,\n': 1, '# s': 1, ' sk': 1, 'ski': 1, 'kip': 1, 'ip ': 1, 'p t': 1, 'tha': 1, 'hat': 1, 'at ': 1, 't a': 2, 'd m': 1, 'e n': 1, ' ne': 1, 'nex': 1, 'ext': 1, 'xt ': 1, ' pe': 1, 'per': 1, 'ers': 1, 'rso': 1, 'son': 1, 'on\n': 1, 'n\n ': 1, 'i +': 2, 'els': 1, 'lse': 1, 'se:': 1, '# F': 1, ' Fo': 1, 'Fou': 1, 'oun': 1, 'und': 1, 'a s': 1, ' su': 1, 'sui': 1, 'uit': 1, 'ita': 1, 'tab': 1, 'abl': 1, 'ble': 1, 't f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'nt\n': 1, 't\n ': 1, 's +': 1, '1\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'nt(': 1, 't(a': 1, '(an': 1, 'ns)': 1}"
Jaredliw,1090 Ferris Wheel.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 4, 'time:': 1, '0.13': 1, 's': 1, '_,': 1, 'max_weight': 1, '=': 5, 'map(int,': 1, 'input().split())': 1, 'weights': 1, 'sorted(map(int,': 1, 'input().split()))': 1, 'light_ptr': 3, '0': 2, 'heavy_ptr': 3, 'len(weights)': 1, '-': 1, '1': 5, 'gondola_total': 2, 'while': 1, '<=': 2, 'heavy_ptr:': 1, 'pair': 1, 'the': 4, 'heaviest': 2, 'child': 3, 'with': 1, 'lightest': 1, 'if': 2, 'possible': 1, 'weights[light_ptr]': 1, '+': 1, 'weights[heavy_ptr]': 1, 'max_weight:': 1, '+=': 2, '-=': 2, 'otherwise,': 1, 'only': 1, 'include': 1, 'else:': 1, 'increment': 1, 'number': 1, 'of': 1, 'gondolas': 1, 'used': 1, 'print(gondola_total)': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 1, ': 0': 1, ' 0.': 1, '0.1': 1, '.13': 1, '13 ': 1, '3 s': 1, ' s\n': 1, 's\n_': 1, '\n_,': 1, '_, ': 1, ', m': 1, ' ma': 3, 'max': 2, 'ax_': 2, 'x_w': 2, '_we': 2, 'wei': 6, 'eig': 6, 'igh': 11, 'ght': 11, 'ht ': 1, 't =': 1, ' = ': 5, '= m': 2, 'map': 2, 'ap(': 2, 'p(i': 2, '(in': 2, 'int': 3, 'nt,': 2, 't, ': 2, ', i': 2, ' in': 3, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 4, '().': 2, ').s': 2, '.sp': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'it(': 2, '())': 2, '))\n': 2, ')\nw': 1, '\nwe': 1, 'hts': 4, 'ts ': 1, 's =': 1, '= s': 1, ' so': 1, 'sor': 1, 'ort': 1, 'rte': 1, 'ted': 1, 'ed(': 1, 'd(m': 1, '(ma': 1, ')))': 1, ')\n\n': 1, '\n\nl': 1, '\nli': 1, 'lig': 5, 'ht_': 4, 't_p': 4, '_pt': 9, 'ptr': 9, 'tr ': 6, 'r =': 2, '= 0': 2, ' 0\n': 2, '0\nh': 1, '\nhe': 1, 'hea': 7, 'eav': 7, 'avy': 5, 'vy_': 5, 'y_p': 5, '= l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(w': 1, '(we': 1, 'ts)': 1, 's) ': 1, ') -': 1, ' - ': 1, '- 1': 1, ' 1\n': 5, '1\ng': 1, '\ngo': 1, 'gon': 4, 'ond': 4, 'ndo': 4, 'dol': 4, 'ola': 4, 'la_': 3, 'a_t': 3, '_to': 3, 'tot': 3, 'ota': 3, 'tal': 3, 'al ': 2, 'l =': 1, '0\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 4, 'ile': 1, 'le ': 1, 'e l': 2, ' li': 2, 'r <': 1, ' <=': 2, '<= ': 2, '= h': 1, ' he': 3, 'tr:': 1, 'r:\n': 1, ':\n\t': 3, '\n\t#': 3, '\t# ': 3, '# P': 1, ' Pa': 1, 'Pai': 1, 'air': 1, 'ir ': 1, 'r t': 1, ' th': 4, 'the': 5, 'he ': 4, 'e h': 2, 'avi': 2, 'vie': 2, 'ies': 2, 'est': 3, 'st ': 3, 't c': 3, ' ch': 3, 'chi': 3, 'ild': 3, 'ld ': 2, 'd w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'th ': 1, 'h t': 1, 'hte': 1, 'tes': 1, 'd i': 1, ' if': 1, 'if ': 2, 'f p': 1, ' po': 1, 'pos': 1, 'oss': 1, 'ssi': 1, 'sib': 1, 'ibl': 1, 'ble': 1, 'le\n': 1, 'e\n\t': 1, '\n\ti': 1, '\tif': 1, 'f w': 1, ' we': 2, 'ts[': 2, 's[l': 1, '[li': 1, 'tr]': 2, 'r] ': 2, '] +': 1, ' + ': 1, '+ w': 1, 's[h': 1, '[he': 1, '] <': 1, 'ht:': 1, 't:\n': 1, '\n\t\t': 3, '\t\tl': 1, '\tli': 1, 'r +': 1, ' +=': 2, '+= ': 2, '= 1': 4, '1\n\t': 3, '\t\th': 2, '\the': 2, 'r -': 2, ' -=': 2, '-= ': 2, '# O': 1, ' Ot': 1, 'Oth': 1, 'her': 1, 'erw': 1, 'rwi': 1, 'wis': 1, 'ise': 1, 'se,': 1, 'e, ': 1, ', o': 1, ' on': 1, 'onl': 1, 'nly': 1, 'ly ': 1, 'y i': 1, 'inc': 1, 'ncl': 1, 'clu': 1, 'lud': 1, 'ude': 1, 'de ': 1, 'e t': 1, 'ld\n': 1, 'd\n\t': 2, '\n\te': 1, '\tel': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, '# I': 1, ' In': 1, 'Inc': 1, 'ncr': 1, 'cre': 1, 'rem': 1, 'eme': 1, 'men': 1, 'ent': 1, 'nt ': 1, 't t': 1, 'e n': 1, ' nu': 1, 'num': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'er ': 1, 'r o': 1, ' of': 1, 'of ': 1, 'f g': 1, ' go': 1, 'las': 1, 'as ': 1, 's u': 1, ' us': 1, 'use': 1, 'sed': 1, 'ed\n': 1, '\n\tg': 1, '\tgo': 1, 'l +': 1, '1\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'nt(': 1, 't(g': 1, '(go': 1, 'al)': 1, 'l)\n': 1}"
Jaredliw,1192 Counting Rooms.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 1, 'time:': 1, '0.65': 1, 's': 1, 'from': 1, 'sys': 1, 'import': 1, 'stdin': 1, 'def': 1, 'flood_fill(x,': 1, 'y):': 1, 'global': 1, 'graph': 2, 'to_visit': 1, '=': 6, '[(x,': 1, 'y)]': 1, 'while': 1, 'to_visit:': 1, 'x,': 1, 'y': 4, 'to_visit.pop()': 1, 'if': 2, '0': 3, '<=': 2, 'x': 1, '<': 2, 'width': 1, 'and': 2, 'length': 2, 'graph[x][y]': 2, '==': 2, '""."":': 2, '""x""': 1, 'to_visit.extend(((x': 1, '-': 2, '1,': 2, 'y),': 2, '(x': 1, '+': 2, '(x,': 2, '1),': 1, '1)))': 1, 'width,': 1, 'map(int,': 1, 'stdin.readline().split())': 1, 'list(map(lambda': 1, 'x:': 1, 'list(x.strip(""\\n"")),': 1, 'stdin.readlines()))': 1, 'room_count': 2, 'for': 2, 'row': 1, 'in': 2, 'range(width):': 1, 'col': 1, 'range(length):': 1, 'graph[row][col]': 1, 'flood_fill(row,': 1, 'col)': 1, '+=': 1, '1': 1, 'print(room_count)': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 1, ': 0': 1, ' 0.': 1, '0.6': 1, '.65': 1, '65 ': 1, '5 s': 1, ' s\n': 1, 's\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm s': 1, ' sy': 1, 'sys': 1, 'ys ': 1, 's i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't s': 1, ' st': 3, 'std': 3, 'tdi': 3, 'din': 3, 'in\n': 1, 'n\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f f': 1, ' fl': 2, 'flo': 2, 'loo': 2, 'ood': 2, 'od_': 2, 'd_f': 2, '_fi': 2, 'fil': 2, 'ill': 2, 'll(': 2, 'l(x': 1, '(x,': 4, 'x, ': 5, ', y': 7, ' y)': 4, 'y):': 1, '):\n': 3, ':\n ': 6, '\n  ': 11, '   ': 66, '  g': 2, ' gl': 1, 'glo': 1, 'lob': 1, 'oba': 1, 'bal': 1, 'al ': 1, 'l g': 1, ' gr': 4, 'gra': 5, 'rap': 5, 'aph': 5, 'ph\n': 1, 'h\n\n': 1, '\n\n ': 1, '  t': 2, ' to': 4, 'to_': 4, 'o_v': 4, '_vi': 4, 'vis': 4, 'isi': 4, 'sit': 4, 'it ': 1, 't =': 2, ' = ': 6, '= [': 1, ' [(': 1, '[(x': 1, 'y)]': 1, ')]\n': 1, ']\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e t': 1, 'it:': 1, 't:\n': 1, '  x': 1, ' x,': 1, ' y ': 4, 'y =': 1, '= t': 1, 'it.': 2, 't.p': 1, '.po': 1, 'pop': 1, 'op(': 1, 'p()': 1, '()\n': 1, ')\n ': 2, '  i': 2, ' if': 2, 'if ': 2, 'f 0': 1, ' 0 ': 2, '0 <': 2, ' <=': 2, '<= ': 2, '= x': 1, ' x ': 1, 'x <': 1, ' < ': 2, '< w': 1, ' wi': 1, 'wid': 3, 'idt': 3, 'dth': 3, 'th ': 3, 'h a': 2, ' an': 2, 'and': 2, 'nd ': 2, 'd 0': 1, '= y': 1, 'y <': 1, '< l': 1, ' le': 2, 'len': 3, 'eng': 3, 'ngt': 3, 'gth': 3, 'd g': 1, 'ph[': 3, 'h[x': 2, '[x]': 2, 'x][': 2, '][y': 2, '[y]': 2, 'y] ': 2, '] =': 3, ' ==': 2, '== ': 2, '= ""': 3, ' "".': 2, '"".""': 2, '."":': 2, '"":\n': 2, ' ""x': 1, '""x""': 1, 'x""\n': 1, '""\n ': 1, 't.e': 1, '.ex': 1, 'ext': 1, 'xte': 1, 'ten': 1, 'end': 1, 'nd(': 1, 'd((': 1, '(((': 1, '((x': 1, '(x ': 2, 'x -': 1, ' - ': 2, '- 1': 2, ' 1,': 2, '1, ': 2, 'y),': 2, '), ': 4, ', (': 3, ' (x': 3, 'x +': 1, ' + ': 2, '+ 1': 2, 'y -': 1, ' 1)': 2, '1),': 1, 'y +': 1, '1))': 1, ')))': 2, '))\n': 3, ')\n\n': 2, '\n\nw': 1, '\nwi': 1, 'th,': 1, 'h, ': 1, ', l': 1, 'h =': 2, '= m': 1, ' ma': 1, 'map': 2, 'ap(': 2, 'p(i': 1, '(in': 1, 'int': 2, 'nt,': 1, 't, ': 1, ', s': 2, 'in.': 2, 'n.r': 2, '.re': 2, 'rea': 2, 'ead': 2, 'adl': 2, 'dli': 2, 'lin': 2, 'ine': 2, 'ne(': 1, 'e()': 1, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, 't()': 1, '())': 2, ')\ng': 1, '\ngr': 1, 'ph ': 1, '= l': 1, ' li': 2, 'lis': 2, 'ist': 2, 'st(': 2, 't(m': 1, '(ma': 1, 'p(l': 1, '(la': 1, 'lam': 1, 'amb': 1, 'mbd': 1, 'bda': 1, 'da ': 1, 'a x': 1, ' x:': 1, 'x: ': 1, ': l': 1, 't(x': 1, '(x.': 1, 'x.s': 1, '.st': 1, 'str': 1, 'tri': 1, 'rip': 1, 'ip(': 1, 'p(""': 1, '(""\\': 1, '""\\n': 1, '\\n""': 1, 'n"")': 1, '""))': 1, ')),': 1, 'nes': 1, 'es(': 1, 's()': 1, '\n\nr': 1, '\nro': 1, 'roo': 3, 'oom': 3, 'om_': 3, 'm_c': 3, '_co': 3, 'cou': 3, 'oun': 3, 'unt': 3, 'nt ': 2, '= 0': 1, ' 0\n': 1, '0\nf': 1, '\nfo': 1, 'for': 2, 'or ': 2, 'r r': 1, ' ro': 2, 'row': 3, 'ow ': 1, 'w i': 1, ' in': 2, 'in ': 2, 'n r': 2, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(w': 1, '(wi': 1, 'th)': 2, 'h):': 2, '  f': 2, ' fo': 1, 'r c': 1, ' co': 2, 'col': 3, 'ol ': 1, 'l i': 1, 'e(l': 1, '(le': 1, 'f g': 1, 'h[r': 1, '[ro': 1, 'ow]': 1, 'w][': 1, '][c': 1, '[co': 1, 'ol]': 1, 'l] ': 1, 'l(r': 1, '(ro': 2, 'ow,': 1, 'w, ': 1, ', c': 1, 'ol)': 1, 'l)\n': 1, '  r': 1, 't +': 1, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 1, '1\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'nt(': 1, 't(r': 1, 'nt)': 1, 't)\n': 1}"
Jaredliw,1620 Factory Machines.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 2, 'time:': 1, '0.30': 1, 's': 1, '_,': 1, 'goal': 1, '=': 10, 'map(int,': 1, 'input().split())': 1, 'machines': 1, 'list(map(int,': 1, 'input().split()))': 1, 'lo': 3, '0': 3, 'hi': 2, '1000000000000000000': 1, '1e18': 1, 'ans': 2, 'while': 1, '<=': 1, 'hi:': 1, 'mid': 5, '(lo': 1, '+': 2, 'hi)': 1, '//': 2, '2': 1, 'n_produced': 3, 'for': 1, 'machine': 2, 'in': 1, 'machines:': 1, '+=': 1, 'if': 1, '>=': 1, 'goal:': 1, '-': 1, '1': 2, 'else:': 1, 'print(ans)': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 1, ': 0': 1, ' 0.': 1, '0.3': 1, '.30': 1, '30 ': 1, '0 s': 1, ' s\n': 1, 's\n_': 1, '\n_,': 1, '_, ': 1, ', g': 1, ' go': 2, 'goa': 2, 'oal': 2, 'al ': 1, 'l =': 1, ' = ': 10, '= m': 5, ' ma': 4, 'map': 2, 'ap(': 2, 'p(i': 2, '(in': 2, 'int': 3, 'nt,': 2, 't, ': 2, ', i': 2, ' in': 3, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 4, '().': 2, ').s': 2, '.sp': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'it(': 2, '())': 2, '))\n': 2, ')\nm': 1, '\nma': 1, 'mac': 4, 'ach': 4, 'chi': 4, 'hin': 4, 'ine': 4, 'nes': 2, 'es ': 1, 's =': 3, '= l': 1, ' li': 1, 'lis': 1, 'ist': 1, 'st(': 1, 't(m': 1, '(ma': 1, ')))': 1, ')\n\n': 1, '\n\nl': 1, '\nlo': 1, 'lo ': 4, 'o =': 2, '= 0': 3, ' 0\n': 3, '0\nh': 1, '\nhi': 1, 'hi ': 2, 'i =': 2, '= 1': 1, ' 10': 1, '100': 1, '000': 16, '00 ': 1, '0  ': 1, '  #': 1, ' # ': 1, '# 1': 1, ' 1e': 1, '1e1': 1, 'e18': 1, '18\n': 1, '8\na': 1, '\nan': 1, 'ans': 3, 'ns ': 2, '0\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 1, ' lo': 1, 'o <': 1, ' <=': 1, '<= ': 1, '= h': 1, ' hi': 2, 'hi:': 1, 'i:\n': 1, ':\n\t': 4, '\n\tm': 1, '\tmi': 1, 'mid': 5, 'id ': 4, 'd =': 2, '= (': 1, ' (l': 1, '(lo': 1, 'o +': 1, ' + ': 2, '+ h': 1, 'hi)': 1, 'i) ': 1, ') /': 1, ' //': 2, '// ': 2, '/ 2': 1, ' 2\n': 1, '2\n\n': 1, '\n\n\t': 2, '\n\tn': 1, '\tn_': 2, 'n_p': 3, '_pr': 3, 'pro': 3, 'rod': 3, 'odu': 3, 'duc': 3, 'uce': 3, 'ced': 3, 'ed ': 3, '0\n\t': 1, '\n\tf': 1, '\tfo': 1, 'for': 1, 'or ': 1, 'r m': 1, 'ne ': 1, 'e i': 1, 'in ': 1, 'n m': 1, 'es:': 1, 's:\n': 1, '\n\t\t': 4, '\t\tn': 1, 'd +': 2, ' +=': 1, '+= ': 1, ' mi': 4, 'd /': 1, '/ m': 1, 'ne\n': 1, 'e\n\n': 1, '\n\ti': 1, '\tif': 1, 'if ': 1, 'f n': 1, ' n_': 1, 'd >': 1, ' >=': 1, '>= ': 1, '= g': 1, 'al:': 1, 'l:\n': 1, '\t\ta': 1, '\tan': 1, 'id\n': 1, 'd\n\t': 1, '\t\th': 1, '\thi': 1, 'd -': 1, ' - ': 1, '- 1': 1, ' 1\n': 2, '1\n\t': 1, '\n\te': 1, '\tel': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, '\t\tl': 1, '\tlo': 1, '+ 1': 1, '1\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'nt(': 1, 't(a': 1, '(an': 1, 'ns)': 1, 's)\n': 1}"
Jaredliw,1629 Movie Festival.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'time:': 1, '0.72': 1, 's': 1, 'movies': 1, '=': 4, '[]': 1, 'for': 2, '_': 1, 'in': 2, 'range(int(input())):': 1, 'movies.append(tuple(map(int,': 1, 'input().split())))': 1, 'movies.sort(key=lambda': 1, 'x:': 1, 'x[1])': 1, 'last_end_time': 2, '0': 2, 'movie_count': 2, 'start_time,': 1, 'end_time': 2, 'movies:': 1, 'if': 1, 'start_time': 1, '>=': 1, 'last_end_time:': 1, '+=': 1, '1': 1, 'print(movie_count)': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 8, 'me:': 2, 'e: ': 1, ': 0': 1, ' 0.': 1, '0.7': 1, '.72': 1, '72 ': 1, '2 s': 1, ' s\n': 1, 's\nm': 1, '\nmo': 2, 'mov': 7, 'ovi': 7, 'vie': 7, 'ies': 4, 'es ': 1, 's =': 1, ' = ': 4, '= [': 1, ' []': 1, '[]\n': 1, ']\nf': 1, '\nfo': 2, 'for': 2, 'or ': 2, 'r _': 1, ' _ ': 1, '_ i': 1, ' in': 3, 'in ': 2, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(i': 1, '(in': 3, 'int': 3, 'nt(': 2, 't(i': 1, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 3, '())': 2, ')))': 3, ')):': 1, '):\n': 1, ':\n ': 3, '\n  ': 5, '   ': 18, '  m': 3, ' mo': 4, 'es.': 2, 's.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 6, 'nd(': 1, 'd(t': 1, '(tu': 1, 'tup': 1, 'upl': 1, 'ple': 1, 'le(': 1, 'e(m': 1, '(ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, 't, ': 1, ', i': 1, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, '))\n': 1, ')\n ': 1, 's.s': 1, '.so': 1, 'sor': 1, 'ort': 1, 'rt(': 1, 't(k': 1, '(ke': 1, 'key': 1, 'ey=': 1, 'y=l': 1, '=la': 1, 'lam': 1, 'amb': 1, 'mbd': 1, 'bda': 1, 'da ': 1, 'a x': 1, ' x:': 1, 'x: ': 1, ': x': 1, ' x[': 1, 'x[1': 1, '[1]': 1, '1])': 1, '])\n': 1, ')\n\n': 1, '\n\nl': 1, '\nla': 1, 'las': 3, 'ast': 3, 'st_': 3, 't_e': 3, '_en': 3, 'nd_': 5, 'd_t': 5, '_ti': 7, 'tim': 7, 'me ': 4, 'e =': 2, '= 0': 2, ' 0\n': 2, '0\nm': 1, 'ie_': 3, 'e_c': 3, '_co': 3, 'cou': 3, 'oun': 3, 'unt': 3, 'nt ': 2, 't =': 1, '0\nf': 1, 'r s': 1, ' st': 2, 'sta': 2, 'tar': 2, 'art': 2, 'rt_': 2, 't_t': 2, 'me,': 1, 'e, ': 1, ', e': 1, ' en': 2, 'e i': 1, 'n m': 1, 'es:': 1, 's:\n': 1, '  i': 1, ' if': 1, 'if ': 1, 'f s': 1, 'e >': 1, ' >=': 1, '>= ': 1, '= l': 1, ' la': 2, 'e:\n': 1, '  l': 1, '= e': 1, 'me\n': 1, 'e\n ': 1, 't +': 1, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 1, '1\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 't(m': 1, '(mo': 1, 'nt)': 1, 't)\n': 1}"
Jaredliw,1630 Tasks and Deadlines.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 4, 'time:': 1, '0.88': 1, 's': 1, 'from': 1, 'sys': 1, 'import': 1, 'stdin': 1, 'do': 1, 'not': 2, 'read': 2, 'input': 1, 'line': 2, 'by': 1, 'line,': 1, 'tle': 1, 'lines': 1, '=': 4, 'stdin.readlines()': 1, 'tasks': 1, '[]': 1, 'for': 3, 'in': 2, 'lines[1:]:': 1, 'tasks.append(tuple(map(int,': 1, 'line.split())))': 1, 'the': 3, 'optimal': 1, 'solution': 1, 'to': 1, 'problem': 1, 'does': 1, 'depend': 1, 'on': 1, 'deadlines': 1, 'at': 1, 'all,': 1, 'https://usaco.guide/cph.pdf#page=70': 1, 'more': 1, 'details': 1, 'tasks.sort()': 1, 'cur_time': 3, '0': 2, 'reward': 2, 'task,': 1, 'deadline': 2, 'tasks:': 1, '+=': 2, 'task': 1, '-': 1, 'print(reward)': 1}","{'# T': 2, ' Ti': 1, 'Tim': 1, 'ime': 4, 'me:': 1, 'e: ': 1, ': 0': 1, ' 0.': 1, '0.8': 1, '.88': 1, '88 ': 1, '8 s': 1, ' s\n': 1, 's\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm s': 1, ' sy': 1, 'sys': 1, 'ys ': 1, 's i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 2, 'rt ': 1, 't s': 1, ' st': 2, 'std': 2, 'tdi': 2, 'din': 2, 'in\n': 1, 'n\n\n': 1, '\n\n#': 1, '\n# ': 3, '# D': 1, ' Do': 1, 'Do ': 1, 'o n': 1, ' no': 2, 'not': 2, 'ot ': 2, 't r': 1, ' re': 2, 'rea': 3, 'ead': 6, 'ad ': 2, 'd i': 1, ' in': 3, 'inp': 1, 'npu': 1, 'put': 1, 'ut ': 1, 't l': 1, ' li': 5, 'lin': 10, 'ine': 10, 'ne ': 4, 'e b': 1, ' by': 1, 'by ': 1, 'y l': 1, 'ne,': 1, 'e, ': 1, ', T': 1, ' TL': 1, 'TLE': 1, 'LE\n': 1, 'E\nl': 1, '\nli': 1, 'nes': 4, 'es ': 3, 's =': 2, ' = ': 4, '= s': 1, 'in.': 1, 'n.r': 1, '.re': 1, 'adl': 4, 'dli': 4, 'es(': 1, 's()': 1, '()\n': 2, ')\nt': 1, '\nta': 2, 'tas': 6, 'ask': 6, 'sks': 4, 'ks ': 1, '= [': 1, ' []': 1, '[]\n': 1, ']\nf': 1, '\nfo': 2, 'for': 3, 'or ': 3, 'r l': 1, 'e i': 2, 'in ': 2, 'n l': 1, 'es[': 1, 's[1': 1, '[1:': 1, '1:]': 1, ':]:': 1, ']:\n': 1, ':\n\t': 2, '\n\tt': 1, '\tta': 1, 'ks.': 2, 's.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 2, 'end': 2, 'nd(': 1, 'd(t': 1, '(tu': 1, 'tup': 1, 'upl': 1, 'ple': 1, 'le(': 1, 'e(m': 1, '(ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, '(in': 1, 'int': 2, 'nt,': 1, 't, ': 1, ', l': 1, 'ne.': 1, 'e.s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, 't()': 2, '())': 1, ')))': 2, '))\n': 1, ')\n#': 1, ' Th': 1, 'The': 1, 'he ': 3, 'e o': 1, ' op': 1, 'opt': 1, 'pti': 1, 'tim': 4, 'ima': 1, 'mal': 1, 'al ': 1, 'l s': 1, ' so': 1, 'sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on ': 2, 'n t': 3, ' to': 1, 'to ': 1, 'o t': 1, ' th': 2, 'the': 2, 'e p': 1, ' pr': 1, 'pro': 1, 'rob': 1, 'obl': 1, 'ble': 1, 'lem': 1, 'em ': 1, 'm d': 1, ' do': 1, 'doe': 1, 'oes': 1, 's n': 1, 't d': 1, ' de': 5, 'dep': 1, 'epe': 1, 'nd ': 1, 'd o': 1, ' on': 1, 'e d': 2, 'dea': 3, 's a': 1, ' at': 1, 'at ': 1, 't a': 1, ' al': 1, 'all': 1, 'll,': 1, 'l,\n': 1, ',\n#': 1, '# r': 1, 'd h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//u': 1, '/us': 1, 'usa': 1, 'sac': 1, 'aco': 1, 'co.': 1, 'o.g': 1, '.gu': 1, 'gui': 1, 'uid': 1, 'ide': 1, 'de/': 1, 'e/C': 1, '/CP': 1, 'CPH': 1, 'PH.': 1, 'H.p': 1, '.pd': 1, 'pdf': 1, 'df#': 1, 'f#p': 1, '#pa': 1, 'pag': 1, 'age': 1, 'ge=': 1, 'e=7': 1, '=70': 1, '70 ': 1, '0 f': 1, ' fo': 1, 'r m': 1, ' mo': 1, 'mor': 1, 'ore': 1, 're ': 1, 'det': 1, 'eta': 1, 'tai': 1, 'ail': 1, 'ils': 1, 'ls\n': 1, 's\nt': 1, 's.s': 1, '.so': 1, 'sor': 1, 'rt(': 1, ')\n\n': 1, '\n\nc': 1, '\ncu': 1, 'cur': 3, 'ur_': 3, 'r_t': 3, '_ti': 3, 'me ': 2, 'e =': 1, '= 0': 2, ' 0\n': 2, '0\nr': 1, '\nre': 1, 'rew': 3, 'ewa': 3, 'war': 3, 'ard': 3, 'rd ': 2, 'd =': 1, '0\nf': 1, 'r t': 1, ' ta': 3, 'sk,': 1, 'k, ': 1, ', d': 1, 'ks:': 1, 's:\n': 1, '\n\tc': 1, '\tcu': 1, 'e +': 1, ' +=': 2, '+= ': 2, '= t': 1, 'sk\n': 1, 'k\n\t': 1, '\n\tr': 1, '\tre': 1, 'd +': 1, '= d': 1, 'e -': 1, ' - ': 1, '- c': 1, ' cu': 1, 'me\n': 1, 'e\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'nt(': 1, 't(r': 1, '(re': 1, 'rd)': 1, 'd)\n': 1}"
Jaredliw,1660 Subarray Sums I.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'time:': 1, '0.14': 1, 's': 1, '_,': 1, 'k': 1, '=': 5, 'map(int,': 2, 'input().split())': 2, 'nums': 1, 'prefix_count': 1, '{0:': 1, '1}': 1, 'sum_': 2, '0': 2, 'ans': 2, 'for': 1, 'num': 2, 'in': 1, 'nums:': 1, '+=': 3, 'try:': 1, 'prefix_count[sum_': 1, '-': 1, 'k]': 1, 'except': 1, 'keyerror:': 1, 'pass': 1, 'prefix_count.setdefault(sum_,': 1, '0)': 1, 'prefix_count[sum_]': 1, '1': 1, 'print(ans)': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 1, ': 0': 1, ' 0.': 1, '0.1': 1, '.14': 1, '14 ': 1, '4 s': 1, ' s\n': 1, 's\n_': 1, '\n_,': 1, '_, ': 2, ', k': 1, ' k ': 1, 'k =': 1, ' = ': 5, '= m': 2, ' ma': 2, 'map': 2, 'ap(': 2, 'p(i': 2, '(in': 2, 'int': 3, 'nt,': 2, 't, ': 2, ', i': 2, ' in': 3, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 4, '().': 2, ').s': 2, '.sp': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'it(': 2, '())': 2, '))\n': 2, ')\nn': 1, '\nnu': 1, 'num': 4, 'ums': 2, 'ms ': 1, 's =': 2, ')\n ': 2, '\n \n': 2, ' \np': 1, '\npr': 2, 'pre': 4, 'ref': 4, 'efi': 4, 'fix': 4, 'ix_': 4, 'x_c': 4, '_co': 4, 'cou': 4, 'oun': 4, 'unt': 4, 'nt ': 1, 't =': 1, '= {': 1, ' {0': 1, '{0:': 1, '0: ': 1, ': 1': 1, ' 1}': 1, '1}\n': 1, '}\ns': 1, '\nsu': 1, 'sum': 5, 'um_': 5, 'm_ ': 3, '_ =': 1, '= 0': 2, ' 0\n': 2, '0\na': 1, '\nan': 1, 'ans': 3, 'ns ': 2, '0\nf': 1, '\nfo': 1, 'for': 1, 'or ': 1, 'r n': 1, ' nu': 3, 'um ': 1, 'm i': 1, 'in ': 1, 'n n': 1, 'ms:': 1, 's:\n': 1, ':\n ': 3, '\n  ': 8, '   ': 24, '  s': 1, ' su': 1, '_ +': 1, ' +=': 3, '+= ': 3, '= n': 1, 'um\n': 1, 'm\n ': 1, ' \n ': 2, '  t': 1, ' tr': 1, 'try': 1, 'ry:': 1, 'y:\n': 1, '  a': 1, ' an': 1, 's +': 1, '= p': 1, ' pr': 3, 'nt[': 2, 't[s': 2, '[su': 2, '_ -': 1, ' - ': 1, '- k': 1, ' k]': 1, 'k]\n': 1, ']\n ': 1, '  e': 1, ' ex': 1, 'exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pt ': 1, 't K': 1, ' Ke': 1, 'Key': 1, 'eyE': 1, 'yEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or:': 1, 'r:\n': 1, '  p': 3, ' pa': 1, 'pas': 1, 'ass': 1, 'ss\n': 1, 's\n ': 1, '  \n': 1, 'nt.': 1, 't.s': 1, '.se': 1, 'set': 1, 'etd': 1, 'tde': 1, 'def': 1, 'efa': 1, 'fau': 1, 'aul': 1, 'ult': 1, 'lt(': 1, 't(s': 1, '(su': 1, 'm_,': 1, ', 0': 1, ' 0)': 1, '0)\n': 1, 'm_]': 1, '_] ': 1, '] +': 1, '= 1': 1, ' 1\n': 1, '1\np': 1, 'pri': 1, 'rin': 1, 'nt(': 1, 't(a': 1, '(an': 1, 'ns)': 1, 's)\n': 1}"
Jaredliw,1662 Subarray Divisibility.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'time:': 1, '0.13': 1, 's': 1, 'k': 2, '=': 7, 'int(input())': 1, 'nums': 1, 'map(int,': 1, 'input().split())': 1, 'mod_count': 1, '{}': 1, 'last_mod': 2, '0': 2, 'for': 2, 'num': 1, 'in': 2, 'nums:': 1, 'cur_mod': 2, '(last_mod': 1, '+': 1, 'num)': 1, '%': 1, 'mod_count.setdefault(cur_mod,': 1, '0)': 1, 'mod_count[cur_mod]': 1, '+=': 3, '1': 1, 'ans': 3, 'mod,': 1, 'count': 4, 'mod_count.items():': 1, 'if': 2, 'mod': 1, '==': 1, '0:': 1, '>': 1, '1:': 1, '*': 1, '(count': 1, '-': 1, '1)': 1, '//': 1, '2': 1, 'print(ans)': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 1, ': 0': 1, ' 0.': 1, '0.1': 1, '.13': 1, '13 ': 1, '3 s': 1, ' s\n': 1, 's\nk': 1, '\nk ': 1, 'k =': 1, ' = ': 7, '= i': 1, ' in': 4, 'int': 3, 'nt(': 2, 't(i': 1, '(in': 2, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 3, '())': 2, '))\n': 2, ')\nn': 1, '\nnu': 1, 'num': 4, 'ums': 2, 'ms ': 1, 's =': 2, '= m': 1, ' ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, 't, ': 1, ', i': 1, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, ')\n ': 2, '\n \n': 2, ' \nm': 1, '\nmo': 1, 'mod': 13, 'od_': 4, 'd_c': 4, '_co': 4, 'cou': 9, 'oun': 9, 'unt': 9, 'nt ': 5, 't =': 1, '= {': 1, ' {}': 1, '{}\n': 1, '}\nl': 1, '\nla': 1, 'las': 3, 'ast': 3, 'st_': 3, 't_m': 3, '_mo': 7, 'od ': 5, 'd =': 4, '= 0': 3, ' 0\n': 2, '0\nf': 2, '\nfo': 2, 'for': 2, 'or ': 2, 'r n': 1, ' nu': 3, 'um ': 1, 'm i': 1, 'in ': 2, 'n n': 1, 'ms:': 1, 's:\n': 1, ':\n ': 4, '\n  ': 8, '   ': 24, '  c': 1, ' cu': 2, 'cur': 4, 'ur_': 4, 'r_m': 4, '= (': 1, ' (l': 1, '(la': 1, 'd +': 1, ' + ': 1, '+ n': 1, 'um)': 1, 'm) ': 1, ') %': 1, ' % ': 1, '% k': 1, ' k\n': 1, 'k\n ': 1, '  m': 2, ' mo': 5, 'nt.': 2, 't.s': 1, '.se': 1, 'set': 1, 'etd': 1, 'tde': 1, 'def': 1, 'efa': 1, 'fau': 1, 'aul': 1, 'ult': 1, 'lt(': 1, 't(c': 1, '(cu': 1, 'od,': 2, 'd, ': 2, ', 0': 1, ' 0)': 1, '0)\n': 1, 'nt[': 1, 't[c': 1, '[cu': 1, 'od]': 1, 'd] ': 1, '] +': 1, ' +=': 3, '+= ': 3, '= 1': 1, ' 1\n': 1, '1\n ': 1, '  l': 1, ' la': 1, '= c': 3, 'od\n': 1, 'd\n ': 1, ' \na': 1, '\nan': 1, 'ans': 4, 'ns ': 3, 'r m': 1, ', c': 1, ' co': 4, 't i': 1, 'n m': 1, 't.i': 1, '.it': 1, 'ite': 1, 'tem': 1, 'ems': 1, 'ms(': 1, 's()': 1, '():': 1, '):\n': 1, '  i': 2, ' if': 2, 'if ': 2, 'f m': 1, ' ==': 1, '== ': 1, ' 0:': 1, '0:\n': 1, '  a': 2, ' an': 2, 's +': 2, 'nt\n': 1, 't\n ': 1, 'f c': 1, 't >': 1, ' > ': 1, '> 1': 1, ' 1:': 1, '1:\n': 1, 't *': 1, ' * ': 1, '* (': 1, ' (c': 1, '(co': 1, 't -': 1, ' - ': 1, '- 1': 1, ' 1)': 1, '1) ': 1, ') /': 1, ' //': 1, '// ': 1, '/ 2': 1, ' 2\n': 1, '2\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 't(a': 1, '(an': 1, 'ns)': 1, 's)\n': 1}"
Jaredliw,1666 Building Roads.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 6, 'time:': 1, '0.67': 1, 's': 1, 'n_nodes,': 1, 'n_lines': 1, '=': 8, 'map(int,': 1, 'input().split())': 2, 'adj': 1, '[set()': 1, 'for': 5, '_': 2, 'in': 7, 'range(n_nodes)]': 1, 'range(n_lines):': 1, 'node1,': 1, 'node2': 1, 'map(lambda': 1, 'x:': 1, 'int(x)': 1, '-': 3, '1,': 2, 'adj[node1].add(node2)': 1, 'adj[node2].add(node1)': 1, 'visited': 1, 'set()': 2, 'start_nodes': 1, 'one': 1, 'node': 3, 'per': 1, 'connected': 2, 'component': 1, 'start_node': 2, 'range(n_nodes):': 1, 'if': 2, 'not': 2, 'visited:': 2, 'start': 1, 'dfs': 2, 'to_visit': 1, 'set([start_node])': 1, 'while': 1, 'to_visit:': 1, 'cur_node': 1, 'to_visit.pop()': 1, 'visited.add(cur_node)': 1, 'adj_node': 2, 'adj[cur_node]:': 1, 'to_visit.add(adj_node)': 1, 'end': 1, 'start_nodes.add(start_node)': 1, 'print(len(start_nodes)': 1, '1)': 2, 'no.': 1, 'of': 1, 'components': 1, '1': 1, 'ref_node': 1, 'start_nodes.pop()': 1, 'start_nodes:': 1, 'print(ref_node': 1, '+': 2, '1-indexed': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 1, ': 0': 1, ' 0.': 1, '0.6': 1, '.67': 1, '67 ': 1, '7 s': 1, ' s\n': 1, 's\nn': 1, '\nn_': 1, 'n_n': 3, '_no': 20, 'nod': 29, 'ode': 29, 'des': 8, 'es,': 1, 's, ': 1, ', n': 3, ' n_': 1, 'n_l': 2, '_li': 2, 'lin': 2, 'ine': 2, 'nes': 2, 'es ': 2, 's =': 2, ' = ': 8, '= m': 2, ' ma': 2, 'map': 2, 'ap(': 2, 'p(i': 1, '(in': 1, 'int': 4, 'nt,': 1, 't, ': 1, ', i': 2, ' in': 10, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 7, '().': 2, ').s': 2, '.sp': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'it(': 2, '())': 2, '))\n': 2, ')\na': 1, '\nad': 1, 'adj': 7, 'dj ': 1, 'j =': 1, '= [': 1, ' [s': 1, '[se': 1, 'set': 4, 'et(': 4, '() ': 2, ') f': 1, ' fo': 1, 'for': 5, 'or ': 5, 'r _': 2, ' _ ': 2, '_ i': 2, 'in ': 7, 'n r': 3, ' ra': 3, 'ran': 3, 'ang': 3, 'nge': 3, 'ge(': 3, 'e(n': 3, '(n_': 3, 'es)': 4, 's)]': 1, ')]\n': 1, ']\nf': 1, '\nfo': 3, 's):': 2, '):\n': 2, ':\n\t': 7, '\n\tn': 1, '\tno': 1, 'de1': 3, 'e1,': 1, '1, ': 3, ' no': 6, 'de2': 3, 'e2 ': 1, '2 =': 1, 'p(l': 1, '(la': 1, 'lam': 1, 'amb': 1, 'mbd': 1, 'bda': 1, 'da ': 1, 'a x': 1, ' x:': 1, 'x: ': 1, ': i': 1, 'nt(': 3, 't(x': 1, '(x)': 1, 'x) ': 1, ') -': 2, ' - ': 3, '- 1': 3, ' 1,': 2, ')\n\t': 6, '\n\ta': 2, '\tad': 2, 'dj[': 3, 'j[n': 2, '[no': 2, 'e1]': 1, '1].': 1, '].a': 2, '.ad': 5, 'add': 5, 'dd(': 5, 'd(n': 2, '(no': 2, 'e2)': 1, '2)\n': 1, 'e2]': 1, '2].': 1, 'e1)': 1, '1)\n': 1, ')\n\n': 2, '\n\nv': 1, '\nvi': 1, 'vis': 8, 'isi': 8, 'sit': 8, 'ite': 4, 'ted': 6, 'ed ': 3, 'd =': 1, '= s': 4, ' se': 3, '()\n': 3, ')\ns': 1, '\nst': 1, 'sta': 9, 'tar': 10, 'art': 10, 'rt_': 9, 't_n': 9, ')  ': 3, '  #': 3, ' # ': 3, '# O': 1, ' On': 1, 'One': 1, 'ne ': 1, 'e n': 3, 'de ': 10, 'e p': 1, ' pe': 1, 'per': 1, 'er ': 1, 'r c': 1, ' co': 4, 'con': 2, 'onn': 2, 'nne': 2, 'nec': 2, 'ect': 2, 'cte': 2, 'd c': 2, 'com': 2, 'omp': 2, 'mpo': 2, 'pon': 2, 'one': 2, 'nen': 2, 'ent': 2, 'nt\n': 1, 't\nf': 1, 'r s': 1, ' st': 4, 'e i': 3, '\n\ti': 1, '\tif': 2, 'if ': 2, 'f s': 1, 'not': 2, 'ot ': 2, 't i': 2, 'n v': 2, ' vi': 2, 'ed:': 2, 'd:\n': 2, '\n\t\t': 10, '\t\t#': 2, '\t# ': 2, '# S': 1, ' St': 1, 'Sta': 1, 'rt ': 1, 't D': 1, ' DF': 2, 'DFS': 2, 'FS\n': 2, 'S\n\t': 2, '\t\tt': 2, '\tto': 2, 'to_': 4, 'o_v': 4, '_vi': 4, 'it ': 1, 't =': 1, 't([': 1, '([s': 1, '[st': 1, 'de]': 2, 'e])': 1, '])\n': 1, '\t\tw': 1, '\twh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e t': 1, ' to': 2, 'it:': 1, 't:\n': 1, '\t\t\t': 8, '\t\tc': 1, '\tcu': 1, 'cur': 3, 'ur_': 3, 'r_n': 3, 'e =': 2, '= t': 1, 'it.': 2, 't.p': 1, '.po': 2, 'pop': 2, 'op(': 2, 'p()': 2, '\t\tv': 1, '\tvi': 1, 'ed.': 1, 'd.a': 1, 'd(c': 1, '(cu': 1, 'de)': 3, 'e)\n': 3, '\t\tf': 1, '\tfo': 1, 'r a': 1, ' ad': 3, 'dj_': 3, 'j_n': 3, 'n a': 1, 'j[c': 1, '[cu': 1, 'e]:': 1, ']:\n': 1, '\t\ti': 1, 'f a': 1, 't.a': 1, 'd(a': 1, '(ad': 1, '# E': 1, ' En': 1, 'End': 1, 'nd ': 1, 'd D': 1, '\t\ts': 1, '\tst': 1, 'es.': 2, 's.a': 1, 'd(s': 1, '(st': 2, '\n\np': 1, '\npr': 1, 'pri': 2, 'rin': 2, 't(l': 1, '(le': 1, 'len': 1, 'en(': 1, 'n(s': 1, 's) ': 1, ' 1)': 2, '1) ': 2, '# N': 1, ' No': 1, 'No.': 1, 'o. ': 1, '. o': 1, ' of': 1, 'of ': 1, 'f c': 1, 'nts': 1, 'ts ': 1, 's -': 1, ' 1\n': 1, '1\nr': 1, '\nre': 1, 'ref': 2, 'ef_': 2, 'f_n': 2, 's.p': 1, ')\nf': 1, 'r n': 1, 'n s': 1, 'es:': 1, 's:\n': 1, '\n\tp': 1, '\tpr': 1, 't(r': 1, '(re': 1, 'e +': 2, ' + ': 2, '+ 1': 2, '# 1': 1, ' 1-': 1, '1-i': 1, '-in': 1, 'ind': 1, 'nde': 1, 'dex': 1, 'exe': 1, 'xed': 1, 'ed\n': 1}"
Jaredliw,Alphabet Spam.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 1, 'cpu:': 1, '0.06': 1, 's': 1, 'line': 1, '=': 6, 'input()': 1, 'length': 1, 'len(line)': 1, 'upper_count': 2, '0': 4, 'lower_count': 2, 'whitespace_count': 2, 'symbol_count': 2, 'for': 1, 'char': 2, 'in': 1, 'line:': 1, 'if': 1, '==': 1, '""_"":': 1, '+=': 4, '1': 4, 'elif': 2, '97': 1, '<=': 4, 'ord(char)': 2, '122:': 1, '65': 1, '90:': 1, 'else:': 1, 'print(whitespace_count': 1, '/': 4, 'length)': 4, 'print(lower_count': 1, 'print(upper_count': 1, 'print(symbol_count': 1}","{'# C': 1, ' CP': 1, 'CPU': 1, 'PU:': 1, 'U: ': 1, ': 0': 1, ' 0.': 1, '0.0': 1, '.06': 1, '06 ': 1, '6 s': 1, ' s\n': 1, 's\nl': 1, '\nli': 1, 'lin': 3, 'ine': 3, 'ne ': 1, 'e =': 1, ' = ': 6, '= i': 1, ' in': 2, 'inp': 1, 'npu': 1, 'put': 1, 'ut(': 1, 't()': 1, '()\n': 1, ')\nl': 1, '\nle': 1, 'len': 6, 'eng': 5, 'ngt': 5, 'gth': 5, 'th ': 1, 'h =': 1, '= l': 1, ' le': 5, 'en(': 1, 'n(l': 1, '(li': 1, 'ne)': 1, 'e)\n': 1, ')\n\n': 1, '\n\nu': 1, '\nup': 1, 'upp': 3, 'ppe': 3, 'per': 3, 'er_': 6, 'r_c': 6, '_co': 12, 'cou': 12, 'oun': 12, 'unt': 12, 'nt ': 12, 't =': 4, '= 0': 4, ' 0\n': 4, '0\nl': 1, '\nlo': 1, 'low': 3, 'owe': 3, 'wer': 3, '0\nw': 1, '\nwh': 1, 'whi': 3, 'hit': 3, 'ite': 3, 'tes': 3, 'esp': 3, 'spa': 3, 'pac': 3, 'ace': 3, 'ce_': 3, 'e_c': 3, '0\ns': 1, '\nsy': 1, 'sym': 3, 'ymb': 3, 'mbo': 3, 'bol': 3, 'ol_': 3, 'l_c': 3, '0\nf': 1, '\nfo': 1, 'for': 1, 'or ': 1, 'r c': 1, ' ch': 2, 'cha': 4, 'har': 4, 'ar ': 2, 'r i': 1, 'in ': 1, 'n l': 1, ' li': 1, 'ne:': 1, 'e:\n': 2, ':\n ': 5, '\n  ': 8, '   ': 32, '  i': 1, ' if': 1, 'if ': 3, 'f c': 1, 'r =': 1, ' ==': 1, '== ': 1, '= ""': 1, ' ""_': 1, '""_""': 1, '_"":': 1, '"":\n': 1, '  w': 1, ' wh': 1, 't +': 4, ' +=': 4, '+= ': 4, '= 1': 5, ' 1\n': 4, '1\n ': 3, '  e': 3, ' el': 3, 'eli': 2, 'lif': 2, 'f 9': 1, ' 97': 1, '97 ': 1, '7 <': 1, ' <=': 4, '<= ': 4, '= o': 2, ' or': 2, 'ord': 2, 'rd(': 2, 'd(c': 2, '(ch': 2, 'ar)': 2, 'r) ': 2, ') <': 2, ' 12': 1, '122': 1, '22:': 1, '2:\n': 1, '  l': 1, ' lo': 1, 'f 6': 1, ' 65': 1, '65 ': 1, '5 <': 1, '= 9': 1, ' 90': 1, '90:': 1, '0:\n': 1, '  u': 1, ' up': 1, 'els': 1, 'lse': 1, 'se:': 1, '  s': 1, ' sy': 1, '1\n\n': 1, '\n\np': 1, '\npr': 4, 'pri': 4, 'rin': 4, 'int': 4, 'nt(': 4, 't(w': 1, '(wh': 1, 't /': 4, ' / ': 4, '/ l': 4, 'th)': 4, 'h)\n': 4, ')\np': 3, 't(l': 1, '(lo': 1, 't(u': 1, '(up': 1, 't(s': 1, '(sy': 1}"
Jaredliw,ASCII Figure Rotation.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'cpu:': 1, '0.08': 1, 's': 1, 'first_run': 2, '=': 10, 'true': 1, 'while': 1, 'true:': 1, 'n_lines': 2, 'int(input())': 1, 'if': 3, '==': 3, '0:': 1, 'break': 1, 'not': 1, 'first_run:': 1, 'print()': 1, 'seperate': 1, 'two': 1, 'figures': 1, 'with': 1, 'an': 1, 'empty': 1, 'line': 2, 'figure': 1, '[]': 1, 'max_width': 2, '0': 1, 'for': 5, '_': 2, 'in': 5, 'range(n_lines):': 1, 'input()': 1, 'figure.append(line)': 1, 'max(max_width,': 1, 'len(line))': 1, 'rotated': 1, '[[]': 1, 'range(max_width)]': 1, 'row': 2, 'figure[::-1]:': 1, 'idx,': 1, 'char': 5, 'enumerate(row.ljust(max_width)):': 1, '""|"":': 1, '""-""': 1, 'elif': 1, '""-"":': 1, '""|""': 1, 'rotated[idx].append(char)': 1, 'rotated:': 1, 'print("""".join(row).rstrip())': 1, 'false': 1}","{'# C': 1, ' CP': 1, 'CPU': 1, 'PU:': 1, 'U: ': 1, ': 0': 1, ' 0.': 1, '0.0': 1, '.08': 1, '08 ': 1, '8 s': 1, ' s\n': 1, 's\nf': 1, '\nfi': 1, 'fir': 3, 'irs': 3, 'rst': 4, 'st_': 3, 't_r': 3, '_ru': 3, 'run': 3, 'un ': 2, 'n =': 2, ' = ': 10, '= T': 1, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue\n': 1, 'e\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e T': 1, 'ue:': 1, 'e:\n': 1, ':\n ': 9, '\n  ': 22, '   ': 120, '  n': 1, ' n_': 2, 'n_l': 3, '_li': 3, 'lin': 7, 'ine': 7, 'nes': 3, 'es ': 3, 's =': 2, '= i': 2, ' in': 7, 'int': 3, 'nt(': 3, 't(i': 1, '(in': 1, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 3, '())': 2, '))\n': 3, ')\n ': 3, '  i': 3, ' if': 3, 'if ': 4, 'f n': 2, ' ==': 3, '== ': 3, '= 0': 2, ' 0:': 1, '0:\n': 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n\n': 1, '\n\n ': 5, ' no': 1, 'not': 1, 'ot ': 1, 't f': 1, ' fi': 6, 'un:': 1, 'n:\n': 1, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 2, '() ': 1, ')  ': 1, '  #': 1, ' # ': 1, '# S': 1, ' Se': 1, 'Sep': 1, 'epe': 1, 'per': 1, 'era': 2, 'rat': 2, 'ate': 5, 'te ': 1, 'e t': 1, ' tw': 1, 'two': 1, 'wo ': 1, 'o f': 1, 'fig': 4, 'igu': 4, 'gur': 4, 'ure': 4, 'res': 1, 's w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'th ': 3, 'h a': 1, ' an': 1, 'an ': 1, 'n e': 2, ' em': 1, 'emp': 1, 'mpt': 1, 'pty': 1, 'ty ': 1, 'y l': 1, ' li': 2, 'ne\n': 1, 'e\n\n': 1, '  f': 7, 're ': 1, 'e =': 2, '= [': 2, ' []': 1, '[]\n': 1, ']\n ': 2, '  m': 2, ' ma': 3, 'max': 6, 'ax_': 5, 'x_w': 5, '_wi': 5, 'wid': 5, 'idt': 5, 'dth': 5, 'h =': 2, ' 0\n': 1, '0\n ': 1, ' fo': 5, 'for': 5, 'or ': 5, 'r _': 2, ' _ ': 2, '_ i': 2, 'in ': 5, 'n r': 3, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(n': 1, '(n_': 1, 'es)': 1, 's):': 1, '):\n': 2, '  l': 1, 'ne ': 1, '()\n': 1, 're.': 1, 'e.a': 1, '.ap': 2, 'app': 2, 'ppe': 2, 'pen': 2, 'end': 2, 'nd(': 2, 'd(l': 1, '(li': 2, 'ne)': 2, 'e)\n': 1, '= m': 1, 'ax(': 1, 'x(m': 1, '(ma': 3, 'th,': 1, 'h, ': 1, ', l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(l': 1, 'e))': 1, ')\n\n': 3, '  r': 2, ' ro': 5, 'rot': 3, 'ota': 3, 'tat': 3, 'ted': 3, 'ed ': 1, 'd =': 1, ' [[': 1, '[[]': 1, '[] ': 1, '] f': 1, 'e(m': 1, 'th)': 2, 'h)]': 1, ')]\n': 1, 'r r': 2, 'row': 4, 'ow ': 2, 'w i': 2, 'n f': 1, 're[': 1, 'e[:': 1, '[::': 1, '::-': 1, ':-1': 1, '-1]': 1, '1]:': 1, ']:\n': 1, 'r i': 2, ' id': 1, 'idx': 2, 'dx,': 1, 'x, ': 1, ', c': 1, ' ch': 5, 'cha': 6, 'har': 6, 'ar ': 5, ' en': 1, 'enu': 1, 'num': 1, 'ume': 1, 'mer': 1, 'te(': 1, 'e(r': 1, '(ro': 2, 'ow.': 1, 'w.l': 1, '.lj': 1, 'lju': 1, 'jus': 1, 'ust': 1, 'st(': 1, 't(m': 1, 'h))': 1, ')):': 1, 'f c': 2, 'r =': 4, '= ""': 4, ' ""|': 2, '""|""': 2, '|"":': 1, '"":\n': 2, '  c': 2, ' ""-': 2, '""-""': 2, '-""\n': 1, '""\n ': 2, '  e': 1, ' el': 1, 'eli': 1, 'lif': 1, '-"":': 1, '|""\n': 1, 'ed[': 1, 'd[i': 1, '[id': 1, 'dx]': 1, 'x].': 1, '].a': 1, 'd(c': 1, '(ch': 1, 'ar)': 1, 'r)\n': 1, 'ed:': 1, 'd:\n': 1, 't(""': 1, '(""""': 1, '"""".': 1, '"".j': 1, '.jo': 1, 'joi': 1, 'oin': 1, 'in(': 1, 'n(r': 1, 'ow)': 1, 'w).': 1, ').r': 1, '.rs': 1, 'str': 1, 'tri': 1, 'rip': 1, 'ip(': 1, 'p()': 1, '= F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 'se\n': 1}"
Jaredliw,Circuit Math.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'cpu:': 1, '0.06': 1, 's': 1, 'from': 1, 'collections': 1, 'import': 1, 'deque': 1, 'input()': 1, 'values': 1, '=': 4, 'list(map(lambda': 1, 'x:': 2, 'x': 1, '==': 4, '""t"",': 1, 'input().split()))': 2, 'queue': 1, 'deque(map(lambda': 1, 'values[ord(x)': 1, '-': 1, '65]': 1, 'if': 5, 'x.isalpha()': 1, 'else': 2, 'x,': 1, 'register': 1, 'deque()': 1, 'while': 1, 'len(queue)': 2, '>': 1, '0:': 1, 'op': 3, 'queue.popleft()': 1, 'isinstance(op,': 1, 'int):': 1, 'register.append(op)': 1, 'use': 1, 'bitwise': 1, 'operators': 2, '(&,': 1, '|),': 1, 'not': 1, 'logic': 1, '(and,': 1, 'or)': 1, 'else:': 2, '""*"":': 1, 'register.append(register.pop()': 2, '&': 1, 'register.pop())': 3, 'elif': 1, '""+"":': 1, '|': 1, 'register.append(not': 1, '1': 1, 'and': 1, 'isinstance(queue[0],': 1, 'bool):': 1, 'break': 1, 'print(""t""': 1, 'register.pop()': 1, '""f"")': 1}","{'# C': 1, ' CP': 1, 'CPU': 1, 'PU:': 1, 'U: ': 1, ': 0': 1, ' 0.': 1, '0.0': 1, '.06': 1, '06 ': 1, '6 s': 1, ' s\n': 1, 's\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm c': 1, ' co': 1, 'col': 1, 'oll': 1, 'lle': 1, 'lec': 1, 'ect': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'ons': 1, 'ns ': 1, 's i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't d': 1, ' de': 3, 'deq': 3, 'equ': 3, 'que': 8, 'ue\n': 1, 'e\n\n': 1, '\n\ni': 1, '\nin': 1, 'inp': 3, 'npu': 3, 'put': 3, 'ut(': 3, 't()': 6, '()\n': 3, ')\nv': 1, '\nva': 1, 'val': 2, 'alu': 2, 'lue': 2, 'ues': 2, 'es ': 1, 's =': 1, ' = ': 4, '= l': 1, ' li': 1, 'lis': 1, 'ist': 12, 'st(': 1, 't(m': 1, '(ma': 2, 'map': 2, 'ap(': 2, 'p(l': 2, '(la': 2, 'lam': 2, 'amb': 2, 'mbd': 2, 'bda': 2, 'da ': 2, 'a x': 2, ' x:': 2, 'x: ': 2, ': x': 1, ' x ': 1, 'x =': 1, ' ==': 4, '== ': 4, '= ""': 3, ' ""T': 1, '""T""': 2, 'T"",': 1, '"", ': 1, ', i': 2, ' in': 2, '().': 2, ').s': 2, '.sp': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'it(': 2, '())': 5, ')))': 2, '))\n': 5, ')\nq': 1, '\nqu': 1, 'ueu': 5, 'eue': 5, 'ue ': 1, 'e =': 1, '= d': 2, 'ue(': 2, 'e(m': 1, ': v': 1, ' va': 1, 'es[': 1, 's[o': 1, '[or': 1, 'ord': 1, 'rd(': 1, 'd(x': 1, '(x)': 1, 'x) ': 1, ') -': 1, ' - ': 1, '- 6': 1, ' 65': 1, '65]': 1, '5] ': 1, '] i': 1, ' if': 2, 'if ': 6, 'f x': 1, ' x.': 1, 'x.i': 1, '.is': 1, 'isa': 1, 'sal': 1, 'alp': 1, 'lph': 1, 'pha': 1, 'ha(': 1, 'a()': 1, '() ': 4, ') e': 2, ' el': 2, 'els': 4, 'lse': 4, 'se ': 4, 'e x': 1, ' x,': 1, 'x,\n': 1, ',\n\t': 1, '\n\ti': 2, '\tin': 1, ')\n\n': 3, '\n\nr': 1, '\nre': 1, 'reg': 11, 'egi': 11, 'gis': 11, 'ste': 11, 'ter': 11, 'er ': 1, 'r =': 1, 'e()': 1, ')\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 1, ' le': 2, 'len': 2, 'en(': 2, 'n(q': 2, '(qu': 3, 'ue)': 2, 'e) ': 2, ') >': 1, ' > ': 1, '> 0': 1, ' 0:': 1, '0:\n': 1, ':\n\t': 7, '\n\to': 1, '\top': 1, 'op ': 3, 'p =': 3, '= q': 1, ' qu': 1, 'ue.': 1, 'e.p': 1, '.po': 7, 'pop': 7, 'opl': 1, 'ple': 1, 'lef': 1, 'eft': 1, 'ft(': 1, '\n\n\t': 2, '\tif': 3, 'f i': 1, ' is': 2, 'isi': 2, 'sin': 2, 'ins': 2, 'nst': 2, 'sta': 2, 'tan': 2, 'anc': 2, 'nce': 2, 'ce(': 2, 'e(o': 1, '(op': 2, 'op,': 1, 'p, ': 1, 'int': 2, 'nt)': 1, 't):': 1, '):\n': 2, '\n\t\t': 9, '\t\tr': 4, '\tre': 4, 'er.': 10, 'r.a': 4, '.ap': 4, 'app': 4, 'ppe': 4, 'pen': 4, 'end': 4, 'nd(': 4, 'd(o': 1, 'op)': 1, 'p)\n': 1, ')\n\t': 4, '\n\t#': 1, '\t# ': 1, '# U': 1, ' Us': 1, 'Use': 1, 'e b': 1, ' bi': 1, 'bit': 1, 'itw': 1, 'twi': 1, 'wis': 1, 'ise': 1, 'e o': 1, ' op': 4, 'ope': 2, 'per': 2, 'era': 2, 'rat': 2, 'ato': 2, 'tor': 2, 'ors': 2, 'rs ': 2, 's (': 2, ' (&': 1, '(&,': 1, '&, ': 1, ', |': 1, ' |)': 1, '|),': 1, '), ': 1, ', n': 1, ' no': 1, 'not': 2, 'ot ': 2, 't l': 1, ' lo': 1, 'log': 1, 'ogi': 1, 'gic': 1, 'ic ': 1, 'c o': 1, ' (a': 1, '(an': 1, 'and': 2, 'nd,': 1, 'd, ': 1, ', o': 1, ' or': 1, 'or)': 1, 'r)\n': 1, '\n\te': 1, '\tel': 3, 'se:': 2, 'e:\n': 2, '\t\ti': 2, 'f o': 2, ' ""*': 1, '""*""': 1, '*"":': 1, '"":\n': 2, '\t\t\t': 4, 'd(r': 2, '(re': 2, 'r.p': 6, 'op(': 6, 'p()': 6, ') &': 1, ' & ': 1, '& r': 1, ' re': 4, '\t\te': 2, 'eli': 1, 'lif': 1, ' ""+': 1, '""+""': 1, '+"":': 1, ') |': 1, ' | ': 1, '| r': 1, 'd(n': 1, '(no': 1, 't r': 1, 'f l': 1, ') =': 1, '= 1': 1, ' 1 ': 1, '1 a': 1, ' an': 1, 'nd ': 1, 'd i': 1, 'e(q': 1, 'ue[': 1, 'e[0': 1, '[0]': 1, '0],': 1, '], ': 1, ', b': 1, ' bo': 1, 'boo': 1, 'ool': 1, 'ol)': 1, 'l):': 1, '\t\tb': 1, '\tbr': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n\n': 1, '\n\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'nt(': 1, 't(""': 1, '(""T': 1, 'T"" ': 1, '"" i': 1, 'f r': 1, 'e ""': 1, ' ""F': 1, '""F""': 1, 'F"")': 1, '"")\n': 1}"
Jaredliw,Combination Lock.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 6, 'cpu:': 1, '0.11': 1, 's': 1, 'while': 1, 'true:': 1, 'pos,': 1, 'num1,': 1, 'num2,': 1, 'num3': 3, '=': 2, 'map(int,': 1, 'input().split())': 1, 'if': 1, 'pos': 1, '==': 4, 'num1': 2, 'num2': 2, '0:': 1, 'break': 1, 'clockwise': 2, '2': 1, 'full': 2, 'turns': 1, 'degrees': 5, '720': 1, 'stop': 2, 'at': 2, '+=': 4, '((pos': 1, '-': 3, 'num1)': 2, '*': 3, '9)': 3, '%': 3, '360': 4, 'counter-clockwise': 1, '1': 1, 'turn': 1, '((num2': 2, 'until': 1, 'num3)': 1, 'print(degrees)': 1}","{'# C': 4, ' CP': 1, 'CPU': 1, 'PU:': 1, 'U: ': 1, ': 0': 1, ' 0.': 1, '0.1': 1, '.11': 1, '11 ': 1, '1 s': 1, ' s\n': 1, 's\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue:': 1, 'e:\n': 1, ':\n ': 2, '\n  ': 15, '   ': 34, '  p': 2, ' po': 2, 'pos': 3, 'os,': 1, 's, ': 1, ', n': 3, ' nu': 12, 'num': 14, 'um1': 5, 'm1,': 1, '1, ': 1, 'um2': 5, 'm2,': 1, '2, ': 1, 'um3': 4, 'm3 ': 2, '3 =': 2, ' = ': 2, '= m': 1, ' ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, '(in': 1, 'int': 2, 'nt,': 1, 't, ': 1, ', i': 1, ' in': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut(': 1, 't()': 2, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, '())': 1, '))\n': 1, ')\n ': 1, '  i': 1, ' if': 1, 'if ': 1, 'f p': 1, 'os ': 2, 's =': 2, ' ==': 4, '== ': 4, '= n': 3, 'm1 ': 1, '1 =': 1, 'm2 ': 3, '2 =': 1, '= 0': 1, ' 0:': 1, '0:\n': 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n ': 1, '  \n': 1, ' \n ': 1, '  #': 5, ' # ': 5, ' Cl': 2, 'Clo': 2, 'loc': 3, 'ock': 3, 'ckw': 3, 'kwi': 3, 'wis': 3, 'ise': 3, 'se ': 3, 'e 2': 1, ' 2 ': 1, '2 f': 1, ' fu': 2, 'ful': 2, 'ull': 2, 'll ': 2, 'l t': 2, ' tu': 2, 'tur': 2, 'urn': 2, 'rns': 1, 'ns\n': 1, 's\n ': 1, '  d': 5, ' de': 5, 'deg': 6, 'egr': 6, 'gre': 6, 'ree': 6, 'ees': 6, 'es ': 5, '= 7': 1, ' 72': 1, '720': 1, '20\n': 1, '0\n ': 4, '# S': 2, ' St': 2, 'Sto': 2, 'top': 2, 'op ': 2, 'p a': 2, ' at': 2, 'at ': 2, 't n': 2, 'm1\n': 1, '1\n ': 1, 's +': 4, ' +=': 4, '+= ': 4, '= (': 3, ' ((': 3, '((p': 1, '(po': 1, 's -': 1, ' - ': 3, '- n': 3, 'm1)': 2, '1) ': 2, ') *': 3, ' * ': 3, '* 9': 3, ' 9)': 3, '9) ': 3, ') %': 3, ' % ': 3, '% 3': 3, ' 36': 4, '360': 4, '60\n': 4, ' Co': 1, 'Cou': 1, 'oun': 1, 'unt': 2, 'nte': 1, 'ter': 1, 'er-': 1, 'r-c': 1, '-cl': 1, 'clo': 1, 'e 1': 1, ' 1 ': 1, '1 f': 1, 'rn\n': 1, 'n\n ': 1, '= 3': 1, 'm2\n': 1, '2\n ': 1, '((n': 2, '(nu': 2, '2 -': 2, 'e u': 1, ' un': 1, 'nti': 1, 'til': 1, 'il ': 1, 'l n': 1, 'm3\n': 1, '3\n ': 1, 'm3)': 1, '3) ': 1, '0\n\n': 1, '\n\n ': 1, ' pr': 1, 'pri': 1, 'rin': 1, 'nt(': 1, 't(d': 1, '(de': 1, 'es)': 1, 's)\n': 1}"
Jaredliw,Competitive Arcade Basketball.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'cpu:': 1, '0.44': 1, 's': 1, 'n_teams,': 1, 'win_score,': 1, 'n_records': 1, '=': 6, 'map(int,': 1, 'input().split())': 1, 'scoreboard': 1, '{}': 1, 'for': 2, '_': 2, 'in': 3, 'range(n_teams):': 1, 'scoreboard[input()]': 1, '0': 1, 'has_winner': 2, 'false': 1, 'range(n_records):': 1, 'team,': 1, 'score': 1, 'input().split()': 1, 'if': 3, 'team': 1, 'scoreboard:': 1, 'scoreboard[team]': 3, '+=': 1, 'int(score)': 1, '>=': 1, 'win_score:': 1, 'print(team,': 1, '""wins!"")': 1, 'true': 1, 'del': 1, 'not': 1, 'has_winner:': 1, 'print(""no': 1, 'winner!"")': 1}","{'# C': 1, ' CP': 1, 'CPU': 1, 'PU:': 1, 'U: ': 1, ': 0': 1, ' 0.': 1, '0.4': 1, '.44': 1, '44 ': 1, '4 s': 1, ' s\n': 1, 's\nn': 1, '\nn_': 1, 'n_t': 2, '_te': 2, 'tea': 8, 'eam': 8, 'ams': 2, 'ms,': 1, 's, ': 1, ', w': 1, ' wi': 3, 'win': 7, 'in_': 2, 'n_s': 2, '_sc': 2, 'sco': 10, 'cor': 12, 'ore': 10, 're,': 1, 'e, ': 1, ', n': 1, ' n_': 1, 'n_r': 2, '_re': 2, 'rec': 2, 'eco': 2, 'ord': 2, 'rds': 2, 'ds ': 1, 's =': 1, ' = ': 6, '= m': 1, ' ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, '(in': 1, 'int': 4, 'nt,': 1, 't, ': 1, ', i': 1, ' in': 6, 'inp': 3, 'npu': 3, 'put': 3, 'ut(': 3, 't()': 5, '().': 2, ').s': 2, '.sp': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'it(': 2, '())': 1, '))\n': 1, ')\n\n': 2, '\n\ns': 1, '\nsc': 1, 'reb': 6, 'ebo': 6, 'boa': 6, 'oar': 6, 'ard': 6, 'rd ': 1, 'd =': 1, '= {': 1, ' {}': 1, '{}\n': 1, '}\nf': 1, '\nfo': 2, 'for': 2, 'or ': 2, 'r _': 2, ' _ ': 2, '_ i': 2, 'in ': 3, 'n r': 2, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(n': 2, '(n_': 2, 'ms)': 1, 's):': 2, '):\n': 2, ':\n ': 5, '\n  ': 9, '   ': 50, '  s': 2, ' sc': 6, 'rd[': 4, 'd[i': 1, '[in': 1, '()]': 1, ')] ': 1, '] =': 1, '= 0': 1, ' 0\n': 1, '0\n\n': 1, '\n\nh': 1, '\nha': 1, 'has': 3, 'as_': 3, 's_w': 3, '_wi': 3, 'inn': 4, 'nne': 4, 'ner': 4, 'er ': 2, 'r =': 2, '= F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'e\nf': 1, 'ds)': 1, '  t': 1, ' te': 2, 'am,': 2, 'm, ': 2, ', s': 1, 're ': 1, 'e =': 1, '= i': 2, '()\n': 1, ')\n ': 2, '  i': 2, ' if': 2, 'if ': 3, 'f t': 1, 'am ': 1, 'm i': 1, 'n s': 1, 'rd:': 1, 'd:\n': 1, 'd[t': 3, '[te': 3, 'am]': 3, 'm] ': 2, '] +': 1, ' +=': 1, '+= ': 1, 'nt(': 3, 't(s': 1, '(sc': 1, 're)': 1, 'e)\n': 1, '\n\n ': 1, 'f s': 1, '] >': 1, ' >=': 1, '>= ': 1, '= w': 1, 're:': 1, 'e:\n': 1, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 2, 't(t': 1, '(te': 1, ', ""': 1, ' ""w': 1, '""wi': 1, 'ins': 1, 'ns!': 1, 's!""': 1, '!"")': 2, '"")\n': 2, '  h': 1, ' ha': 2, '= T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1, 'e\n ': 1, '  d': 1, ' de': 1, 'del': 1, 'el ': 1, 'l s': 1, 'm]\n': 1, ']\n\n': 1, '\n\ni': 1, '\nif': 1, 'f n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't h': 1, 'er:': 1, 'r:\n': 1, 't(""': 1, '(""N': 1, '""No': 1, 'No ': 1, 'o w': 1, 'er!': 1, 'r!""': 1}"
Jaredliw,Cudoviste.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 3, 'cpu:': 1, '0.06': 1, 's': 1, 'n_rows,': 1, 'n_cols': 1, '=': 4, 'map(int,': 1, 'input().split())': 1, 'mat': 1, '[input()': 1, 'for': 3, '_': 1, 'in': 4, 'range(n_rows)]': 1, 'squash_n': 1, '[0,': 1, '0,': 3, '0]': 1, 'squash': 1, '0': 1, '~': 1, '4': 1, 'cars': 1, 'to': 1, 'park': 1, 'size': 1, 'of': 1, 'monster': 1, 'truck:': 1, '2x2': 1, 'row': 1, 'range(n_rows': 1, '-': 2, '1):': 2, 'col': 1, 'range(n_cols': 1, 'string': 1, 'mat[row][col:col': 1, '+': 4, '2]': 2, 'mat[row': 1, '1][col:col': 1, 'if': 1, '""#""': 1, 'string:': 1, 'continue': 1, 'squash_n[string.count(""x"")]': 1, '+=': 1, '1': 1, 'print(*squash_n,': 1, 'sep=""\\n"")': 1}","{'# C': 1, ' CP': 1, 'CPU': 1, 'PU:': 1, 'U: ': 1, ': 0': 1, ' 0.': 1, '0.0': 1, '.06': 1, '06 ': 1, '6 s': 1, ' s\n': 1, 's\nn': 1, '\nn_': 1, 'n_r': 3, '_ro': 3, 'row': 6, 'ows': 3, 'ws,': 1, 's, ': 1, ', n': 1, ' n_': 1, 'n_c': 2, '_co': 2, 'col': 7, 'ols': 2, 'ls ': 2, 's =': 1, ' = ': 4, '= m': 2, ' ma': 3, 'map': 1, 'ap(': 1, 'p(i': 1, '(in': 1, 'int': 2, 'nt,': 1, 't, ': 1, ', i': 1, ' in': 5, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 3, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, '())': 1, '))\n': 1, ')\nm': 1, '\nma': 1, 'mat': 3, 'at ': 1, 't =': 1, '= [': 2, ' [i': 1, '[in': 1, '() ': 1, ') f': 1, ' fo': 1, 'for': 3, 'or ': 3, 'r _': 1, ' _ ': 1, '_ i': 1, 'in ': 4, 'n r': 3, ' ra': 3, 'ran': 3, 'ang': 3, 'nge': 3, 'ge(': 3, 'e(n': 3, '(n_': 3, 'ws)': 1, 's)]': 1, ')]\n': 1, ']\ns': 1, '\nsq': 1, 'squ': 3, 'qua': 4, 'uas': 4, 'ash': 4, 'sh_': 3, 'h_n': 3, '_n ': 1, 'n =': 1, ' [0': 1, '[0,': 1, '0, ': 4, ', 0': 4, ' 0,': 3, ' 0]': 1, '0] ': 1, ']  ': 1, '  #': 1, ' # ': 1, '# S': 2, ' Sq': 1, 'Squ': 1, 'sh ': 1, 'h 0': 1, ' 0 ': 1, '0 ~': 1, ' ~ ': 1, '~ 4': 1, ' 4 ': 1, '4 c': 1, ' ca': 1, 'car': 1, 'ars': 1, 'rs ': 1, 's t': 1, ' to': 1, 'to ': 1, 'o p': 1, ' pa': 1, 'par': 1, 'ark': 1, 'rk\n': 1, 'k\n\n': 1, '\n\n#': 1, '\n# ': 1, ' Si': 1, 'Siz': 1, 'ize': 1, 'ze ': 1, 'e o': 1, ' of': 1, 'of ': 1, 'f m': 1, ' mo': 1, 'mon': 1, 'ons': 1, 'nst': 1, 'ste': 1, 'ter': 1, 'er ': 1, 'r t': 1, ' tr': 1, 'tru': 1, 'ruc': 1, 'uck': 1, 'ck:': 1, 'k: ': 1, ': 2': 1, ' 2x': 1, '2x2': 1, 'x2\n': 1, '2\nf': 1, '\nfo': 1, 'r r': 1, ' ro': 1, 'ow ': 2, 'w i': 1, 'ws ': 1, 's -': 2, ' - ': 2, '- 1': 2, ' 1)': 2, '1):': 2, '):\n': 2, ':\n\t': 3, '\n\tf': 1, '\tfo': 1, 'r c': 1, ' co': 1, 'ol ': 3, 'l i': 1, '\n\t\t': 4, '\t\ts': 2, '\tst': 1, 'str': 3, 'tri': 3, 'rin': 4, 'ing': 3, 'ng ': 1, 'g =': 1, 'at[': 2, 't[r': 2, '[ro': 2, 'ow]': 1, 'w][': 1, '][c': 2, '[co': 2, 'ol:': 2, 'l:c': 2, ':co': 2, 'l +': 2, ' + ': 4, '+ 2': 2, ' 2]': 2, '2] ': 1, '] +': 2, '+ m': 1, 'w +': 1, '+ 1': 1, ' 1]': 1, '1][': 1, '2]\n': 1, ']\n\t': 1, '\t\ti': 1, '\tif': 1, 'if ': 1, 'f ""': 1, ' ""#': 1, '""#""': 1, '#"" ': 1, '"" i': 1, 'n s': 1, ' st': 1, 'ng:': 1, 'g:\n': 1, '\t\t\t': 1, '\t\tc': 1, '\tco': 1, 'con': 1, 'ont': 1, 'nti': 1, 'tin': 1, 'inu': 1, 'nue': 1, 'ue\n': 1, 'e\n\t': 1, '\tsq': 1, '_n[': 1, 'n[s': 1, '[st': 1, 'ng.': 1, 'g.c': 1, '.co': 1, 'cou': 1, 'oun': 1, 'unt': 1, 'nt(': 2, 't(""': 1, '(""X': 1, '""X""': 1, 'X"")': 1, '"")]': 1, ')] ': 1, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 1, '1\n\n': 1, '\n\np': 1, '\npr': 1, 'pri': 1, 't(*': 1, '(*s': 1, '*sq': 1, '_n,': 1, 'n, ': 1, ', s': 1, ' se': 1, 'sep': 1, 'ep=': 1, 'p=""': 1, '=""\\': 1, '""\\n': 1, '\\n""': 1, 'n"")': 1, '"")\n': 1}"
Jaredliw,DRM Messages.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 5, 'cpu:': 1, '0.07': 1, 's': 1, 'def': 2, 'to_int(string):': 1, 'sum_': 3, '=': 8, '0': 1, 'for': 2, 'char': 2, 'in': 2, 'string:': 1, '+=': 2, 'ord(char)': 1, '-': 2, '65': 2, 'return': 2, 'rotate(string,': 1, 'key):': 1, 'rotated': 3, '""""': 1, 'idx,': 1, 'enumerate(string):': 1, 'if': 1, 'isinstance(key,': 1, 'str):': 1, 'n': 2, 'to_int(key[idx])': 1, 'else:': 1, 'key': 1, 'chr(65': 1, '+': 2, '(ord(char)': 1, 'n)': 1, '%': 1, '26)': 1, 'cipher': 2, 'input()': 1, 'divide': 1, 'half': 1, 'len(cipher)': 1, '//': 1, '2': 1, 'the': 1, 'is': 1, 'always': 1, 'even': 1, 'chunk1,': 1, 'chunk2': 1, 'cipher[:half],': 1, 'cipher[half:]': 1, 'rotate': 1, 'rotated1,': 1, 'rotated2': 1, 'rotate(chunk1,': 1, 'to_int(chunk1)),': 1, 'rotate(chunk2,': 1, 'to_int(chunk2))': 1, 'merge': 1, 'print(rotate(rotated1,': 1, 'rotated2))': 1}","{'# C': 1, ' CP': 1, 'CPU': 1, 'PU:': 1, 'U: ': 1, ': 0': 1, ' 0.': 1, '0.0': 1, '.07': 1, '07 ': 1, '7 s': 1, ' s\n': 1, 's\nd': 1, '\nde': 2, 'def': 2, 'ef ': 2, 'f t': 1, ' to': 4, 'to_': 4, 'o_i': 4, '_in': 4, 'int': 5, 'nt(': 5, 't(s': 1, '(st': 3, 'str': 5, 'tri': 4, 'rin': 5, 'ing': 4, 'ng)': 2, 'g):': 2, '):\n': 4, ':\n\t': 6, '\n\ts': 1, '\tsu': 2, 'sum': 3, 'um_': 3, 'm_ ': 2, '_ =': 1, ' = ': 8, '= 0': 1, ' 0\n': 1, '0\n\t': 1, '\n\tf': 2, '\tfo': 2, 'for': 2, 'or ': 2, 'r c': 1, ' ch': 4, 'cha': 4, 'har': 4, 'ar ': 2, 'r i': 4, ' in': 3, 'in ': 2, 'n s': 2, ' st': 2, 'ng:': 1, 'g:\n': 1, '\n\t\t': 6, '\t\ts': 1, '_ +': 1, ' +=': 2, '+= ': 2, '= o': 1, ' or': 1, 'ord': 2, 'rd(': 2, 'd(c': 2, '(ch': 6, 'ar)': 2, 'r) ': 3, ') -': 2, ' - ': 2, '- 6': 2, ' 65': 2, '65\n': 1, '5\n\t': 1, '\n\tr': 3, '\tre': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, ' su': 1, 'm_\n': 1, '_\n\n': 1, '\n\nd': 1, 'f r': 1, ' ro': 6, 'rot': 11, 'ota': 12, 'tat': 12, 'ate': 13, 'te(': 5, 'e(s': 2, 'ng,': 1, 'g, ': 1, ', k': 1, ' ke': 2, 'key': 4, 'ey)': 1, 'y):': 1, '\tro': 2, 'ted': 7, 'ed ': 2, 'd =': 1, '= ""': 1, ' """"': 1, '""""\n': 1, '""\n\t': 1, ' id': 1, 'idx': 2, 'dx,': 1, 'x, ': 1, ', c': 3, 'n e': 1, ' en': 1, 'enu': 1, 'num': 1, 'ume': 1, 'mer': 1, 'era': 1, 'rat': 1, '\t\ti': 1, '\tif': 1, 'if ': 1, 'f i': 1, ' is': 2, 'isi': 1, 'sin': 1, 'ins': 1, 'nst': 1, 'sta': 1, 'tan': 1, 'anc': 1, 'nce': 1, 'ce(': 1, 'e(k': 1, '(ke': 2, 'ey,': 1, 'y, ': 1, ', s': 1, 'tr)': 1, 'r):': 1, '\t\t\t': 2, '\t\tn': 2, '\tn ': 2, 'n =': 2, '= t': 1, 't(k': 1, 'ey[': 1, 'y[i': 1, '[id': 1, 'dx]': 1, 'x])': 1, '])\n': 1, ')\n\t': 2, '\t\te': 1, '\tel': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, '= k': 1, 'ey\n': 1, 'y\n\t': 1, '\t\tr': 1, 'd +': 1, '= c': 2, 'chr': 1, 'hr(': 1, 'r(6': 1, '(65': 1, '65 ': 2, '5 +': 2, ' + ': 2, '+ (': 1, ' (o': 1, '(or': 1, '+ n': 1, ' n)': 1, 'n) ': 1, ') %': 1, ' % ': 1, '% 2': 1, ' 26': 1, '26)': 1, '6)\n': 1, 'n r': 1, 'ed\n': 1, 'd\n\n': 1, '\n\nc': 1, '\nci': 1, 'cip': 5, 'iph': 5, 'phe': 5, 'her': 5, 'er ': 2, 'r =': 1, '= i': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut(': 1, 't()': 1, '()\n': 1, ')\n#': 2, '\n# ': 3, '# D': 1, ' Di': 1, 'Div': 1, 'ivi': 1, 'vid': 1, 'ide': 1, 'de\n': 1, 'e\nh': 1, '\nha': 1, 'hal': 3, 'alf': 3, 'lf ': 1, 'f =': 1, '= l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(c': 1, '(ci': 1, 'er)': 1, ') /': 1, ' //': 1, '// ': 1, '/ 2': 1, ' 2 ': 1, '2  ': 1, '  #': 1, ' # ': 1, '# T': 1, ' Th': 1, 'The': 1, 'he ': 1, 'e c': 1, ' ci': 3, 'is ': 1, 's a': 1, ' al': 1, 'alw': 1, 'lwa': 1, 'way': 1, 'ays': 1, 'ys ': 1, 's e': 1, ' ev': 1, 'eve': 1, 'ven': 1, 'en\n': 1, 'n\nc': 1, '\nch': 1, 'chu': 6, 'hun': 6, 'unk': 6, 'nk1': 3, 'k1,': 2, '1, ': 4, 'nk2': 3, 'k2 ': 1, '2 =': 2, 'er[': 2, 'r[:': 1, '[:h': 1, ':ha': 1, 'lf]': 1, 'f],': 1, '], ': 1, 'r[h': 1, '[ha': 1, 'lf:': 1, 'f:]': 1, ':]\n': 1, ']\n#': 1, '# R': 1, ' Ro': 1, 'Rot': 1, 'te\n': 1, 'e\nr': 1, '\nro': 1, 'ed1': 2, 'd1,': 2, ', r': 3, 'ed2': 2, 'd2 ': 1, '= r': 1, 'e(c': 2, ', t': 2, 't(c': 2, 'k1)': 1, '1))': 1, ')),': 1, '), ': 1, 'k2,': 1, '2, ': 1, 'k2)': 1, '2))': 2, '))\n': 2, '# M': 1, ' Me': 1, 'Mer': 1, 'erg': 1, 'rge': 1, 'ge\n': 1, 'e\np': 1, '\npr': 1, 'pri': 1, 't(r': 1, '(ro': 2, 'e(r': 1, 'd2)': 1}"
Jaredliw,Ostgotska.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'cpu:': 1, '0.05': 1, 's': 1, 'words': 1, '=': 2, 'input().split()': 1, 'n_words_with_ae': 3, '0': 1, 'for': 1, 'word': 1, 'in': 2, 'words:': 1, 'if': 2, '""ae""': 1, 'word:': 1, '+=': 1, '1': 1, '/': 1, 'len(words)': 1, '>=': 1, '0.4:': 1, 'print(""dae': 1, 'ae': 1, 'ju': 1, 'traeligt': 1, 'va"")': 1, 'else:': 1, 'print(""haer': 1, 'talar': 1, 'vi': 1, 'rikssvenska"")': 1}","{'# C': 1, ' CP': 1, 'CPU': 1, 'PU:': 1, 'U: ': 1, ': 0': 1, ' 0.': 2, '0.0': 1, '.05': 1, '05 ': 1, '5 s': 1, ' s\n': 1, 's\nw': 1, '\nwo': 1, 'wor': 8, 'ord': 8, 'rds': 6, 'ds ': 1, 's =': 1, ' = ': 2, '= i': 1, ' in': 3, 'inp': 1, 'npu': 1, 'put': 1, 'ut(': 1, 't()': 2, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, '()\n': 1, ')\n\n': 1, '\n\nn': 1, '\nn_': 1, 'n_w': 3, '_wo': 3, 'ds_': 3, 's_w': 3, '_wi': 3, 'wit': 3, 'ith': 3, 'th_': 3, 'h_a': 3, '_ae': 3, 'ae ': 5, 'e =': 1, '= 0': 2, ' 0\n': 1, '0\nf': 1, '\nfo': 1, 'for': 1, 'or ': 1, 'r w': 1, ' wo': 3, 'rd ': 1, 'd i': 1, 'in ': 2, 'n w': 2, 'ds:': 1, 's:\n': 1, ':\n ': 4, '\n  ': 4, '   ': 12, '  i': 1, ' if': 1, 'if ': 2, 'f ""': 1, ' ""a': 1, '""ae': 1, 'ae""': 1, 'e"" ': 1, '"" i': 1, 'rd:': 1, 'd:\n': 1, '  n': 1, ' n_': 2, 'e +': 1, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 1, '1\n\n': 1, '\n\ni': 1, '\nif': 1, 'f n': 1, 'e /': 1, ' / ': 1, '/ l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(w': 1, '(wo': 1, 'ds)': 1, 's) ': 1, ') >': 1, ' >=': 1, '>= ': 1, '0.4': 1, '.4:': 1, '4:\n': 1, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 2, 'int': 2, 'nt(': 2, 't(""': 2, '(""d': 1, '""da': 1, 'dae': 1, 'e a': 1, ' ae': 1, 'e j': 1, ' ju': 1, 'ju ': 1, 'u t': 1, ' tr': 1, 'tra': 1, 'rae': 1, 'ael': 1, 'eli': 1, 'lig': 1, 'igt': 1, 'gt ': 1, 't v': 1, ' va': 1, 'va""': 1, 'a"")': 2, '"")\n': 2, ')\ne': 1, '\nel': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, '(""h': 1, '""ha': 1, 'hae': 1, 'aer': 1, 'er ': 1, 'r t': 1, ' ta': 1, 'tal': 1, 'ala': 1, 'lar': 1, 'ar ': 1, 'r v': 1, ' vi': 1, 'vi ': 1, 'i r': 1, ' ri': 1, 'rik': 1, 'iks': 1, 'kss': 1, 'ssv': 1, 'sve': 1, 'ven': 1, 'ens': 1, 'nsk': 1, 'ska': 1, 'ka""': 1}"
Jaredliw,Words for Numbers.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'cpu:': 1, '0.05': 1, 's': 1, 'from': 1, 'sys': 1, 'import': 1, 'stdin': 1, 'mapping': 1, '=': 8, '{': 1, '0:': 2, ""'zero',"": 1, '1:': 1, ""'one',"": 1, '2:': 1, ""'two',"": 1, '3:': 1, ""'three',"": 1, '4:': 1, ""'four',"": 1, '5:': 1, ""'five',"": 1, '6:': 1, ""'six',"": 1, '7:': 1, ""'seven',"": 1, '8:': 1, ""'eight',"": 1, '9:': 1, ""'nine',"": 1, '10:': 1, ""'ten',"": 1, '11:': 1, ""'eleven',"": 1, '12:': 1, ""'twelve',"": 1, '13:': 1, ""'thirteen',"": 1, '14:': 1, ""'fourteen',"": 1, '15:': 1, ""'fifteen',"": 1, '16:': 1, ""'sixteen',"": 1, '17:': 1, ""'seventeen',"": 1, '18:': 1, ""'eighteen',"": 1, '19:': 1, ""'nineteen',"": 1, '20:': 1, ""'twenty',"": 1, '30:': 1, ""'thirty',"": 1, '40:': 1, ""'forty',"": 1, '50:': 1, ""'fifty',"": 1, '60:': 1, ""'sixty',"": 1, '70:': 1, ""'seventy',"": 1, '80:': 1, ""'eighty',"": 1, '90:': 1, ""'ninety'"": 1, '}': 1, 'for': 2, 'line': 1, 'in': 3, 'stdin.readlines():': 1, 'words': 1, 'line.split()': 1, 'idx,': 1, 'word': 7, 'enumerate(words):': 1, 'if': 3, 'word.isdigit():': 1, 'int(word)': 1, 'mapping:': 1, 'mapping[word]': 1, 'else:': 1, 'tenths,': 1, 'ones': 1, 'divmod(word,': 1, '10)': 1, 'tenths': 1, '*=': 1, '10': 1, 'mapping[tenths]': 1, '+': 2, '""-""': 1, 'mapping[ones]': 1, 'idx': 1, '==': 1, 'word.capitalize()': 1, 'words[idx]': 1, 'print(*words)': 1}","{'# C': 1, ' CP': 1, 'CPU': 1, 'PU:': 1, 'U: ': 1, ': 0': 1, ' 0.': 1, '0.0': 1, '.05': 1, '05 ': 1, '5 s': 1, ' s\n': 1, 's\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm s': 1, ' sy': 1, 'sys': 1, 'ys ': 1, 's i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 2, 'rt ': 1, 't s': 1, ' st': 2, 'std': 2, 'tdi': 2, 'din': 2, 'in\n': 1, 'n\n\n': 1, '\n\nm': 1, '\nma': 1, 'map': 5, 'app': 5, 'ppi': 5, 'pin': 5, 'ing': 5, 'ng ': 1, 'g =': 1, ' = ': 8, '= {': 1, ' {\n': 1, '{\n\t': 1, '\n\t0': 1, '\t0:': 1, '0: ': 10, "": '"": 28, "" 'z"": 1, ""'ze"": 1, 'zer': 1, 'ero': 1, ""ro'"": 1, ""o',"": 2, ""',\n"": 24, ',\n\t': 9, '\n\t1': 2, '\t1:': 1, '1: ': 2, "" 'o"": 1, ""'on"": 1, 'one': 3, ""ne'"": 2, ""e',"": 5, ""', "": 3, ', \n': 3, ' \n\t': 1, '\n\t2': 1, '\t2:': 1, '2: ': 2, "" 't"": 7, ""'tw"": 3, 'two': 1, ""wo'"": 1, '\n\t3': 1, '\t3:': 1, '3: ': 2, ""'th"": 3, 'thr': 1, 'hre': 1, 'ree': 1, ""ee'"": 1, '\n\t4': 1, '\t4:': 1, '4: ': 2, "" 'f"": 6, ""'fo"": 3, 'fou': 2, 'our': 2, ""ur'"": 1, ""r',"": 1, '\n\t5': 1, '\t5:': 1, '5: ': 2, ""'fi"": 3, 'fiv': 1, 'ive': 1, ""ve'"": 2, '\n\t6': 1, '\t6:': 1, '6: ': 2, "" 's"": 6, ""'si"": 3, 'six': 3, ""ix'"": 1, ""x',"": 1, '\n\t7': 1, '\t7:': 1, '7: ': 2, ""'se"": 3, 'sev': 3, 'eve': 4, 'ven': 4, ""en'"": 10, ""n',"": 10, '\n\t8': 1, '\t8:': 1, '8: ': 2, "" 'e"": 4, ""'ei"": 3, 'eig': 3, 'igh': 3, 'ght': 3, ""ht'"": 1, ""t',"": 1, '\n\t9': 1, '\t9:': 1, '9: ': 2, "" 'n"": 3, ""'ni"": 3, 'nin': 3, 'ine': 6, '\t10': 1, '10:': 1, ""'te"": 1, 'ten': 4, ',\n ': 15, '\n  ': 17, '   ': 34, '  1': 9, ' 11': 1, '11:': 1, ""'el"": 1, 'ele': 1, 'lev': 1, ' 12': 1, '12:': 1, 'twe': 2, 'wel': 1, 'elv': 1, 'lve': 1, ' 13': 1, '13:': 1, 'thi': 2, 'hir': 2, 'irt': 2, 'rte': 2, 'tee': 7, 'een': 7, ' 14': 1, '14:': 1, 'urt': 1, ' 15': 1, '15:': 1, 'fif': 2, 'ift': 2, 'fte': 1, ' \n ': 2, ' 16': 1, '16:': 1, 'ixt': 2, 'xte': 1, ' 17': 1, '17:': 1, 'ent': 6, 'nte': 1, ' 18': 1, '18:': 1, 'hte': 1, ' 19': 1, '19:': 1, 'net': 2, 'ete': 1, '  2': 1, ' 20': 1, '20:': 1, 'wen': 1, 'nty': 2, ""ty'"": 8, ""y',"": 7, '  3': 1, ' 30': 1, '30:': 1, 'rty': 2, '  4': 1, ' 40': 1, '40:': 1, 'for': 3, '  5': 1, ' 50': 1, '50:': 1, 'fty': 1, '  6': 1, ' 60': 1, '60:': 1, 'xty': 1, '  7': 1, ' 70': 1, '70:': 1, '  8': 1, ' 80': 1, '80:': 1, 'hty': 1, '  9': 1, ' 90': 1, '90:': 1, 'ety': 1, ""y'\n"": 1, ""'\n}"": 1, '\n}\n': 1, '}\n\n': 1, '\n\nf': 1, '\nfo': 1, 'or ': 2, 'r l': 1, ' li': 2, 'lin': 3, 'ne ': 1, 'e i': 1, ' in': 4, 'in ': 3, 'n s': 1, 'in.': 1, 'n.r': 1, '.re': 1, 'rea': 1, 'ead': 1, 'adl': 1, 'dli': 1, 'nes': 3, 'es(': 1, 's()': 1, '():': 2, '):\n': 3, ':\n\t': 6, '\n\tw': 1, '\two': 6, 'wor': 16, 'ord': 16, 'rds': 4, 'ds ': 1, 's =': 2, '= l': 1, 'ne.': 1, 'e.s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 2, 't()': 2, '()\n': 2, ')\n\t': 4, '\n\tf': 1, '\tfo': 1, 'r i': 1, ' id': 2, 'idx': 3, 'dx,': 1, 'x, ': 1, ', w': 1, ' wo': 5, 'rd ': 6, 'd i': 2, 'n e': 1, ' en': 1, 'enu': 1, 'num': 1, 'ume': 1, 'mer': 1, 'era': 1, 'rat': 1, 'ate': 1, 'te(': 1, 'e(w': 1, '(wo': 3, 'ds)': 2, 's):': 1, '\n\t\t': 11, '\t\ti': 3, '\tif': 3, 'if ': 3, 'f w': 2, 'rd.': 2, 'd.i': 1, '.is': 1, 'isd': 1, 'sdi': 1, 'dig': 1, 'igi': 1, 'git': 1, '\t\t\t': 15, '\t\tw': 5, 'd =': 4, '= i': 1, 'int': 2, 'nt(': 2, 't(w': 1, 'rd)': 1, 'd)\n': 1, 'n m': 1, ' ma': 4, 'ng:': 1, 'g:\n': 1, '= m': 2, 'ng[': 3, 'g[w': 1, '[wo': 1, 'rd]': 1, 'd]\n': 1, ']\n\t': 1, '\t\te': 1, '\tel': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, '\t\tt': 2, '\tte': 2, 'nth': 3, 'ths': 3, 'hs,': 1, 's, ': 1, ', o': 1, ' on': 1, 'es ': 1, '= d': 1, ' di': 1, 'div': 1, 'ivm': 1, 'vmo': 1, 'mod': 1, 'od(': 1, 'd(w': 1, 'rd,': 1, 'd, ': 1, ', 1': 1, ' 10': 2, '10)': 1, '0)\n': 1, 'hs ': 1, 's *': 1, ' *=': 1, '*= ': 1, '= 1': 1, '10\n': 1, '0\n\t': 1, 'g[t': 1, '[te': 1, 'hs]': 1, 's] ': 1, '] +': 1, ' + ': 2, '+ ""': 1, ' ""-': 1, '""-""': 1, '-"" ': 1, '"" +': 1, '+ m': 1, 'g[o': 1, '[on': 1, 'es]': 1, 's]\n': 1, ']\n\n': 1, '\n\n\t': 1, 'f i': 1, 'dx ': 1, 'x =': 1, ' ==': 1, '== ': 1, '= 0': 1, ' 0:': 1, '0:\n': 1, '= w': 2, 'd.c': 1, '.ca': 1, 'cap': 1, 'api': 1, 'pit': 1, 'ita': 1, 'tal': 1, 'ali': 1, 'liz': 1, 'ize': 1, 'ze(': 1, 'e()': 1, 'ds[': 1, 's[i': 1, '[id': 1, 'dx]': 1, 'x] ': 1, '] =': 1, 'rd\n': 1, 'd\n\t': 1, '\n\tp': 1, '\tpr': 1, 'pri': 1, 'rin': 1, 't(*': 1, '(*w': 1, '*wo': 1, 's)\n': 1}"
Jaredliw,Zamka.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'cpu:': 1, '0.06': 1, 's': 1, 'def': 1, 'sum_digits(x):': 1, 'cur_sum_d': 3, '=': 2, '0': 1, 'while': 1, 'x': 3, '!=': 1, '0:': 1, '+=': 1, '%': 1, '10': 2, '//=': 1, 'return': 1, 'min_,': 1, 'max_,': 1, 'sum_d': 1, 'int(input()),': 2, 'int(input())': 1, 'for': 2, 'num': 2, 'in': 2, 'range(min_,': 1, 'max_': 1, '+': 1, '1):': 1, 'if': 2, 'sum_digits(num)': 2, '==': 2, 'sum_d:': 2, 'print(num)': 2, 'break': 2, 'range(max_,': 1, 'min_': 1, '-': 1, '1,': 1, '-1):': 1}","{'# C': 1, ' CP': 1, 'CPU': 1, 'PU:': 1, 'U: ': 1, ': 0': 1, ' 0.': 1, '0.0': 1, '.06': 1, '06 ': 1, '6 s': 1, ' s\n': 1, 's\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f s': 3, ' su': 6, 'sum': 9, 'um_': 9, 'm_d': 9, '_di': 3, 'dig': 3, 'igi': 3, 'git': 3, 'its': 3, 'ts(': 3, 's(x': 1, '(x)': 1, 'x):': 1, '):\n': 3, ':\n ': 6, '\n  ': 11, '   ': 46, '  c': 2, ' cu': 3, 'cur': 3, 'ur_': 3, 'r_s': 3, '_su': 3, '_d ': 3, 'd =': 2, ' = ': 2, '= 0': 2, ' 0\n': 1, '0\n ': 3, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e x': 1, ' x ': 3, 'x !': 1, ' !=': 1, '!= ': 1, ' 0:': 1, '0:\n': 1, 'd +': 1, ' +=': 1, '+= ': 1, '= x': 1, 'x %': 1, ' % ': 1, '% 1': 1, ' 10': 2, '10\n': 2, '  x': 1, 'x /': 1, ' //': 1, '//=': 1, '/= ': 1, '= 1': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n c': 1, '_d\n': 1, 'd\n\n': 1, '\n\n\n': 1, '\n\nm': 1, '\nmi': 1, 'min': 3, 'in_': 3, 'n_,': 2, '_, ': 4, ', m': 3, ' ma': 2, 'max': 3, 'ax_': 3, 'x_,': 2, ', s': 1, '= i': 1, ' in': 5, 'int': 5, 'nt(': 5, 't(i': 3, '(in': 3, 'inp': 3, 'npu': 3, 'put': 3, 'ut(': 3, 't()': 3, '())': 3, ')),': 2, '), ': 2, ', i': 2, '))\n': 1, ')\nf': 1, '\nfo': 2, 'for': 2, 'or ': 2, 'r n': 2, ' nu': 2, 'num': 6, 'um ': 2, 'm i': 2, 'in ': 2, 'n r': 2, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(m': 2, '(mi': 1, 'x_ ': 1, '_ +': 1, ' + ': 1, '+ 1': 1, ' 1)': 1, '1):': 2, '  i': 2, ' if': 2, 'if ': 2, 's(n': 2, '(nu': 4, 'um)': 4, 'm) ': 2, ') =': 2, ' ==': 2, '== ': 2, '= s': 2, '_d:': 2, 'd:\n': 2, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 2, 't(n': 2, 'm)\n': 2, ')\n ': 2, '  b': 2, ' br': 2, 'bre': 2, 'rea': 2, 'eak': 2, 'ak\n': 2, 'k\n\n': 1, '\n\nf': 1, '(ma': 1, ' mi': 1, 'n_ ': 1, '_ -': 1, ' - ': 1, '- 1': 1, ' 1,': 1, '1, ': 1, ', -': 1, ' -1': 1, '-1)': 1}"
Kamyu,1-bit-and-2-bit-characters.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'time:': 1, 'o(n)': 1, 'space:': 1, 'o(1)': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'isonebitcharacter(self,': 1, 'bits):': 1, '""""""': 2, ':type': 1, 'bits:': 1, 'list[int]': 1, ':rtype:': 1, 'bool': 1, 'parity': 3, '=': 1, '0': 2, 'for': 1, 'i': 1, 'in': 1, 'reversed(xrange(len(bits)-1)):': 1, 'if': 1, 'bits[i]': 2, '==': 2, '0:': 1, 'break': 1, '^=': 1, 'return': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 3, ':  ': 1, '  O': 1, ' O(': 2, 'O(n': 1, '(n)': 1, 'n)\n': 1, ')\n#': 1, '\n# ': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, 'O(1': 1, '(1)': 1, '1)\n': 1, ')\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 3, ':\n ': 4, '\n  ': 11, '   ': 78, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'f i': 1, ' is': 1, 'isO': 1, 'sOn': 1, 'One': 1, 'neB': 1, 'eBi': 1, 'Bit': 1, 'itC': 1, 'tCh': 1, 'Cha': 1, 'har': 1, 'ara': 1, 'rac': 1, 'act': 1, 'cte': 1, 'ter': 1, 'er(': 1, 'r(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', b': 1, ' bi': 4, 'bit': 5, 'its': 5, 'ts)': 2, 's):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e b': 1, 'ts:': 1, 's: ': 1, ': L': 1, ' Li': 1, 'Lis': 1, 'ist': 1, 'st[': 1, 't[i': 1, '[in': 1, 'int': 1, 'nt]': 1, 't]\n': 1, ']\n ': 2, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, ': b': 1, ' bo': 1, 'boo': 1, 'ool': 1, 'ol\n': 1, 'l\n ': 1, '  p': 2, ' pa': 3, 'par': 3, 'ari': 3, 'rit': 3, 'ity': 3, 'ty ': 3, 'y =': 2, ' = ': 1, '= 0': 3, ' 0\n': 2, '0\n ': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, ' in': 1, 'in ': 1, 'n r': 1, ' re': 2, 'rev': 1, 'eve': 1, 'ver': 1, 'ers': 1, 'rse': 1, 'sed': 1, 'ed(': 1, 'd(x': 1, '(xr': 1, 'xra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(l': 1, '(le': 1, 'len': 1, 'en(': 1, 'n(b': 1, '(bi': 1, 's)-': 1, ')-1': 1, '-1)': 1, '1))': 1, ')):': 1, '  i': 1, ' if': 1, 'if ': 1, 'f b': 1, 'ts[': 2, 's[i': 2, '[i]': 2, 'i] ': 1, '] =': 1, ' ==': 2, '== ': 2, ' 0:': 1, '0:\n': 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n ': 1, 'y ^': 1, ' ^=': 1, '^= ': 1, '= b': 1, 'i]\n': 1, '  r': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n p': 1}"
Kamyu,132-pattern.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 4, 'time:': 2, 'o(n)': 2, 'space:': 2, 'class': 2, 'solution(object):': 1, 'def': 2, 'find132pattern(self,': 2, 'nums):': 2, '""""""': 4, ':type': 2, 'nums:': 2, 'list[int]': 2, ':rtype:': 2, 'bool': 2, 'ak': 2, '=': 5, 'float(""-inf"")': 1, 'stk': 2, '[]': 1, 'for': 3, 'i': 1, 'in': 3, 'reversed(xrange(len(nums))):': 1, 'if': 3, 'nums[i]': 1, '<': 3, 'ak:': 1, 'return': 4, 'true': 3, 'while': 1, 'and': 1, 'stk[-1]': 1, 'nums[i]:': 1, 'stk.pop()': 1, 'stk.append(nums[i])': 1, 'false': 3, 'o(n^2)': 1, 'o(1)': 1, 'solution_tle(object):': 1, 'k': 1, 'xrange(len(nums)):': 1, 'valid': 2, 'j': 1, 'xrange(k):': 1, 'nums[j]': 2, 'nums[k]:': 2, 'elif': 1, '>': 1, 'valid:': 1}","{'# T': 2, ' Ti': 2, 'Tim': 2, 'ime': 2, 'me:': 2, 'e: ': 6, ':  ': 2, '  O': 2, ' O(': 4, 'O(n': 3, '(n)': 2, 'n)\n': 2, ')\n#': 2, '\n# ': 3, '# S': 2, ' Sp': 2, 'Spa': 2, 'pac': 2, 'ace': 2, 'ce:': 2, ': O': 2, ')\n\n': 1, '\n\nc': 1, '\ncl': 2, 'cla': 2, 'las': 2, 'ass': 2, 'ss ': 2, 's S': 2, ' So': 2, 'Sol': 2, 'olu': 2, 'lut': 2, 'uti': 2, 'tio': 2, 'ion': 2, 'on(': 1, 'n(o': 1, '(ob': 2, 'obj': 2, 'bje': 2, 'jec': 2, 'ect': 2, 'ct)': 2, 't):': 2, '):\n': 7, ':\n ': 12, '\n  ': 28, '   ': 252, '  d': 2, ' de': 2, 'def': 2, 'ef ': 2, 'f f': 2, ' fi': 2, 'fin': 2, 'ind': 2, 'nd1': 2, 'd13': 2, '132': 2, '32p': 2, '2pa': 2, 'pat': 2, 'att': 2, 'tte': 2, 'ter': 2, 'ern': 2, 'rn(': 2, 'n(s': 2, '(se': 2, 'sel': 2, 'elf': 2, 'lf,': 2, 'f, ': 2, ', n': 2, ' nu': 10, 'num': 13, 'ums': 13, 'ms)': 4, 's):': 2, '  ""': 4, ' """"': 4, '""""""': 4, '""""\n': 4, '""\n ': 4, '  :': 4, ' :t': 2, ':ty': 2, 'typ': 4, 'ype': 4, 'pe ': 2, 'e n': 2, 'ms:': 2, 's: ': 2, ': L': 2, ' Li': 2, 'Lis': 2, 'ist': 2, 'st[': 2, 't[i': 2, '[in': 2, 'int': 2, 'nt]': 2, 't]\n': 2, ']\n ': 3, ' :r': 2, ':rt': 2, 'rty': 2, 'pe:': 2, ': b': 2, ' bo': 2, 'boo': 2, 'ool': 2, 'ol\n': 2, 'l\n ': 2, '  a': 2, ' ak': 3, 'ak ': 2, 'k =': 3, ' = ': 5, '= f': 1, ' fl': 1, 'flo': 1, 'loa': 1, 'oat': 1, 'at(': 1, 't(""': 1, '(""-': 1, '""-i': 1, '-in': 1, 'inf': 1, 'nf""': 1, 'f"")': 1, '"")\n': 1, ')\n ': 3, '  s': 2, ' st': 5, 'stk': 5, 'tk ': 2, '= [': 1, ' []': 1, '[]\n': 1, '  f': 3, ' fo': 3, 'for': 3, 'or ': 3, 'r i': 1, ' i ': 1, 'i i': 1, ' in': 3, 'in ': 3, 'n r': 1, ' re': 5, 'rev': 1, 'eve': 1, 'ver': 1, 'ers': 1, 'rse': 1, 'sed': 1, 'ed(': 1, 'd(x': 1, '(xr': 1, 'xra': 3, 'ran': 3, 'ang': 3, 'nge': 3, 'ge(': 3, 'e(l': 2, '(le': 2, 'len': 2, 'en(': 2, 'n(n': 2, '(nu': 3, 's))': 2, ')))': 1, ')):': 2, '  i': 3, ' if': 3, 'if ': 4, 'f n': 3, 'ms[': 7, 's[i': 3, '[i]': 3, 'i] ': 1, '] <': 3, ' < ': 3, '< a': 1, 'ak:': 1, 'k:\n': 1, '  r': 4, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 4, 'n T': 2, ' Tr': 3, 'Tru': 3, 'rue': 3, 'ue\n': 3, 'e\n ': 4, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e s': 1, 'k a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd s': 1, 'tk[': 1, 'k[-': 1, '[-1': 1, '-1]': 1, '1] ': 1, '< n': 2, 'i]:': 1, ']:\n': 3, '= s': 1, 'tk.': 2, 'k.p': 1, '.po': 1, 'pop': 1, 'op(': 1, 'p()': 1, '()\n': 1, 'k.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(n': 1, 'i])': 1, '])\n': 1, 'n F': 2, ' Fa': 3, 'Fal': 3, 'als': 3, 'lse': 3, 'se\n': 3, 'e\n\n': 1, '\n\n\n': 1, '\n\n#': 1, '(n^': 1, 'n^2': 1, '^2)': 1, '2)\n': 1, 'O(1': 1, '(1)': 1, '1)\n': 1, ')\nc': 1, 'on_': 1, 'n_T': 1, '_TL': 1, 'TLE': 1, 'LE(': 1, 'E(o': 1, 'r k': 1, ' k ': 1, 'k i': 1, 'n x': 2, ' xr': 2, '  v': 2, ' va': 3, 'val': 3, 'ali': 3, 'lid': 3, 'id ': 2, 'd =': 2, '= F': 1, 'r j': 1, ' j ': 1, 'j i': 1, 'e(k': 1, '(k)': 1, 'k):': 1, 's[j': 2, '[j]': 2, 'j] ': 2, 's[k': 2, '[k]': 2, 'k]:': 2, '= T': 1, '  e': 1, ' el': 1, 'eli': 1, 'lif': 1, '] >': 1, ' > ': 1, '> n': 1, 'f v': 1, 'id:': 1, 'd:\n': 1}"
Kamyu,2-keys-keyboard.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 3, 'time:': 1, 'o(sqrt(n))': 1, 'space:': 1, 'o(1)': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'minsteps(self,': 1, 'n):': 1, '""""""': 2, ':type': 1, 'n:': 2, 'int': 2, ':rtype:': 1, 'result': 4, '=': 2, '0': 1, 'p': 5, '2': 1, 'the': 2, 'answer': 1, 'is': 1, 'sum': 1, 'of': 1, 'prime': 1, 'factors': 1, 'while': 2, 'p**2': 1, '<=': 1, 'n': 4, '%': 1, '==': 1, '0:': 1, '+=': 3, '//=': 1, '1': 1, 'if': 1, '>': 1, '1:': 1, 'return': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 2, 'me:': 1, 'e: ': 3, ':  ': 1, '  O': 1, ' O(': 2, 'O(s': 1, '(sq': 1, 'sqr': 1, 'qrt': 1, 'rt(': 1, 't(n': 1, '(n)': 1, 'n))': 1, '))\n': 1, ')\n#': 1, '\n# ': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, 'O(1': 1, '(1)': 1, '1)\n': 1, ')\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 2, ':\n ': 5, '\n  ': 16, '   ': 120, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'f m': 1, ' mi': 1, 'min': 1, 'inS': 1, 'nSt': 1, 'Ste': 1, 'tep': 1, 'eps': 1, 'ps(': 1, 's(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', n': 1, ' n)': 1, 'n):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e n': 2, ' n:': 2, 'n: ': 1, ': i': 2, ' in': 2, 'int': 2, 'nt\n': 2, 't\n ': 2, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, '  r': 4, ' re': 5, 'res': 4, 'esu': 4, 'sul': 4, 'ult': 4, 'lt ': 3, 't =': 1, ' = ': 2, '= 0': 2, ' 0\n': 1, '0\n ': 1, '  p': 2, ' p ': 3, 'p =': 2, '= 2': 1, ' 2\n': 1, '2\n ': 1, '  #': 1, ' # ': 1, '# t': 1, ' th': 2, 'the': 2, 'he ': 2, 'e a': 1, ' an': 1, 'ans': 1, 'nsw': 1, 'swe': 1, 'wer': 1, 'er ': 1, 'r i': 1, ' is': 1, 'is ': 1, 's t': 1, 'e s': 1, ' su': 1, 'sum': 1, 'um ': 1, 'm o': 1, ' of': 1, 'of ': 1, 'f p': 1, ' pr': 1, 'pri': 1, 'rim': 1, 'me ': 1, 'e f': 1, ' fa': 1, 'fac': 1, 'act': 1, 'cto': 1, 'tor': 1, 'ors': 1, 'rs\n': 1, 's\n ': 1, '  w': 2, ' wh': 2, 'whi': 2, 'hil': 2, 'ile': 2, 'le ': 2, 'e p': 1, ' p*': 1, 'p**': 1, '**2': 1, '*2 ': 1, '2 <': 1, ' <=': 1, '<= ': 1, '= n': 2, 'n:\n': 1, ' n ': 3, 'n %': 1, ' % ': 1, '% p': 1, ' ==': 1, '== ': 1, ' 0:': 1, '0:\n': 1, 't +': 2, ' +=': 3, '+= ': 3, '= p': 2, ' p\n': 2, 'p\n ': 2, '  n': 1, 'n /': 1, ' //': 1, '//=': 1, '/= ': 1, 'p +': 1, '= 1': 1, ' 1\n': 1, '1\n ': 1, '  i': 1, ' if': 1, 'if ': 1, 'f n': 1, 'n >': 1, ' > ': 1, '> 1': 1, ' 1:': 1, '1:\n': 1, ' n\n': 1, 'n\n ': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n r': 1, 'lt\n': 1}"
Kamyu,24-game.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 4, 'time:': 2, 'o(n^3': 2, '*': 2, '4^n)': 2, '=': 10, 'o(1),': 2, 'n': 2, '4': 2, 'space:': 2, 'o(n^2)': 2, 'o(1)': 2, 'from': 2, 'operator': 1, 'import': 2, 'add,': 1, 'sub,': 3, 'mul,': 3, 'truediv': 3, 'fractions': 1, 'fraction': 1, 'class': 2, 'solution(object):': 1, 'def': 3, 'judgepoint24(self,': 2, 'nums):': 2, '""""""': 4, ':type': 2, 'nums:': 2, 'list[int]': 2, ':rtype:': 2, 'bool': 2, 'if': 10, 'len(nums)': 2, '==': 9, '1:': 2, 'return': 7, 'abs(nums[0]-24)': 1, '<': 1, '1e-6': 1, 'ops': 2, '[add,': 2, 'truediv]': 2, 'for': 8, 'i': 6, 'in': 8, 'xrange(len(nums)):': 4, 'j': 4, 'j:': 2, 'continue': 4, 'next_nums': 2, '[nums[k]': 2, 'k': 4, 'xrange(len(nums))': 2, '!=': 4, 'j]': 2, 'op': 4, 'ops:': 2, '((op': 2, 'is': 4, 'add': 2, 'or': 4, 'mul)': 2, 'and': 4, '>': 2, 'i)': 2, '\\': 2, '(op': 2, 'nums[j]': 2, '0):': 2, 'next_nums.append(op(nums[i],': 2, 'nums[j]))': 2, 'self.judgepoint24(next_nums):': 1, 'true': 2, 'next_nums.pop()': 2, 'false': 2, 'solution2(object):': 1, 'dfs(nums):': 1, 'nums[0]': 1, '24': 1, 'dfs(next_nums):': 1, 'dfs(map(fraction,': 1, 'nums))': 1}","{'# T': 2, ' Ti': 2, 'Tim': 2, 'ime': 2, 'me:': 2, 'e: ': 6, ':  ': 2, '  O': 2, ' O(': 8, 'O(n': 4, '(n^': 4, 'n^3': 2, '^3 ': 2, '3 *': 2, ' * ': 2, '* 4': 2, ' 4^': 2, '4^n': 2, '^n)': 2, 'n) ': 2, ') =': 6, ' = ': 10, '= O': 4, 'O(1': 4, '(1)': 4, '1),': 2, '), ': 2, ', n': 7, ' n ': 2, 'n =': 2, '= 4': 2, ' 4\n': 2, '4\n#': 2, '\n# ': 3, '# S': 2, ' Sp': 2, 'Spa': 2, 'pac': 2, 'ace': 2, 'ce:': 2, ': O': 2, 'n^2': 2, '^2)': 2, '2) ': 2, '1)\n': 2, ')\n\n': 1, '\n\nf': 1, '\nfr': 2, 'fro': 2, 'rom': 2, 'om ': 2, 'm o': 1, ' op': 9, 'ope': 1, 'per': 1, 'era': 1, 'rat': 1, 'ato': 1, 'tor': 1, 'or ': 13, 'r i': 3, ' im': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't a': 1, ' ad': 3, 'add': 5, 'dd,': 3, 'd, ': 3, ', s': 3, ' su': 3, 'sub': 3, 'ub,': 3, 'b, ': 3, ', m': 3, ' mu': 5, 'mul': 5, 'ul,': 3, 'l, ': 3, ', t': 3, ' tr': 5, 'tru': 5, 'rue': 7, 'ued': 5, 'edi': 5, 'div': 5, 'iv\n': 1, 'v\nf': 1, 'm f': 1, ' fr': 1, 'fra': 1, 'rac': 3, 'act': 3, 'cti': 3, 'tio': 5, 'ion': 5, 'ons': 1, 'ns ': 1, 's i': 1, 't F': 1, ' Fr': 1, 'Fra': 2, 'on\n': 1, 'n\n\n': 1, '\n\n\n': 2, '\n\nc': 1, '\ncl': 2, 'cla': 2, 'las': 2, 'ass': 2, 'ss ': 2, 's S': 2, ' So': 2, 'Sol': 2, 'olu': 2, 'lut': 2, 'uti': 2, 'on(': 1, 'n(o': 1, '(ob': 2, 'obj': 2, 'bje': 2, 'jec': 2, 'ect': 2, 'ct)': 2, 't):': 2, '):\n': 13, ':\n ': 19, '\n  ': 47, '   ': 645, '  d': 3, ' de': 3, 'def': 3, 'ef ': 3, 'f j': 2, ' ju': 2, 'jud': 3, 'udg': 3, 'dge': 3, 'geP': 3, 'ePo': 3, 'Poi': 3, 'oin': 3, 'int': 5, 'nt2': 3, 't24': 3, '24(': 3, '4(s': 2, '(se': 2, 'sel': 3, 'elf': 3, 'lf,': 2, 'f, ': 2, ' nu': 10, 'num': 32, 'ums': 32, 'ms)': 14, 's):': 5, '  ""': 4, ' """"': 4, '""""""': 4, '""""\n': 4, '""\n ': 4, '  :': 4, ' :t': 2, ':ty': 2, 'typ': 4, 'ype': 4, 'pe ': 2, 'e n': 2, 'ms:': 2, 's: ': 2, ': L': 2, ' Li': 2, 'Lis': 2, 'ist': 2, 'st[': 2, 't[i': 2, '[in': 2, 'nt]': 2, 't]\n': 2, ']\n ': 6, ' :r': 2, ':rt': 2, 'rty': 2, 'pe:': 2, ': b': 2, ' bo': 2, 'boo': 2, 'ool': 2, 'ol\n': 2, 'l\n ': 2, '  i': 9, ' if': 10, 'if ': 10, 'f l': 2, ' le': 2, 'len': 8, 'en(': 8, 'n(n': 8, '(nu': 12, 's) ': 2, ' ==': 9, '== ': 9, '= 1': 2, ' 1:': 2, '1:\n': 2, '  r': 7, ' re': 7, 'ret': 7, 'etu': 7, 'tur': 7, 'urn': 7, 'rn ': 7, 'n a': 1, ' ab': 1, 'abs': 1, 'bs(': 1, 's(n': 3, 'ms[': 10, 's[0': 2, '[0]': 2, '0]-': 1, ']-2': 1, '-24': 1, '24)': 1, '4) ': 1, ') <': 1, ' < ': 1, '< 1': 1, ' 1e': 1, '1e-': 1, 'e-6': 1, '-6\n': 1, '6\n ': 1, '  o': 2, 'ops': 4, 'ps ': 2, 's =': 4, '= [': 4, ' [a': 2, '[ad': 2, 'iv]': 2, 'v]\n': 2, '  f': 6, ' fo': 8, 'for': 8, ' i ': 6, 'i i': 2, ' in': 8, 'in ': 8, 'n x': 6, ' xr': 6, 'xra': 6, 'ran': 6, 'ang': 6, 'nge': 6, 'ge(': 6, 'e(l': 6, '(le': 6, 's))': 7, ')):': 4, 'r j': 2, ' j ': 4, 'j i': 2, 'f i': 4, 'i =': 2, '= j': 4, ' j:': 2, 'j:\n': 2, '  c': 4, ' co': 4, 'con': 4, 'ont': 4, 'nti': 4, 'tin': 4, 'inu': 4, 'nue': 4, 'ue\n': 6, 'e\n ': 6, '  n': 6, ' ne': 6, 'nex': 8, 'ext': 8, 'xt_': 8, 't_n': 8, '_nu': 8, 'ms ': 2, ' [n': 2, '[nu': 2, 's[k': 2, '[k]': 2, 'k] ': 2, '] f': 2, 'r k': 2, ' k ': 4, 'k i': 2, ')) ': 1, ') i': 1, 'i !': 2, ' !=': 4, '!= ': 4, '= k': 2, 'k !': 2, ' j]': 2, 'j]\n': 2, 'r o': 4, 'op ': 8, 'p i': 6, 'n o': 2, 'ps:': 2, 's:\n': 2, 'f (': 2, ' ((': 2, '((o': 2, '(op': 6, ' is': 4, 'is ': 4, 's a': 2, 'dd ': 2, 'd o': 2, ' or': 4, 's m': 2, 'ul)': 2, 'l) ': 2, ') a': 2, ' an': 4, 'and': 4, 'nd ': 4, 'd j': 2, 'j >': 2, ' > ': 2, '> i': 2, ' i)': 2, 'i) ': 2, ') o': 2, 'r \\': 2, ' \\\n': 2, '\\\n ': 2, '  (': 2, ' (o': 2, 'p =': 2, '= t': 2, 'iv ': 2, 'v a': 2, 'd n': 2, 's[j': 4, '[j]': 4, 'j] ': 2, '] =': 3, '= 0': 2, ' 0)': 2, '0):': 2, 'ms.': 4, 's.a': 2, '.ap': 2, 'app': 2, 'ppe': 2, 'pen': 2, 'end': 2, 'nd(': 2, 'd(o': 2, 'op(': 4, 'p(n': 2, 's[i': 2, '[i]': 2, 'i],': 2, '], ': 2, 'j])': 2, ']))': 2, '))\n': 4, ')\n ': 5, 'f s': 1, ' se': 1, 'lf.': 1, 'f.j': 1, '.ju': 1, '4(n': 1, '(ne': 2, 'n T': 2, ' Tr': 2, 'Tru': 2, 's.p': 2, '.po': 2, 'pop': 2, 'p()': 2, '()\n': 2, 'n F': 2, ' Fa': 2, 'Fal': 2, 'als': 2, 'lse': 2, 'se\n': 2, 'e\n\n': 2, '\n\n#': 1, ')\nc': 1, 'on2': 1, 'n2(': 1, '2(o': 1, 'f d': 2, ' df': 3, 'dfs': 3, 'fs(': 3, 'n n': 1, '0] ': 1, '= 2': 1, ' 24': 1, '24\n': 1, '4\n ': 1, '\n\n ': 1, 'n d': 1, 's(m': 1, '(ma': 1, 'map': 1, 'ap(': 1, 'p(F': 1, '(Fr': 1, 'on,': 1, 'n, ': 1}"
Kamyu,accounts-merge.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 4, 'time:': 1, 'o(nlogn),': 1, 'n': 1, 'is': 2, 'the': 2, 'number': 1, 'of': 1, 'total': 1, 'emails,': 1, 'and': 1, 'max': 1, 'length': 1, 'ofemail': 1, '320,': 1, 'p.s.': 1, '{64}@{255}': 1, 'space:': 1, 'o(n)': 1, 'import': 1, 'collections': 1, 'class': 2, 'unionfind(object):': 1, 'def': 5, '__init__(self):': 1, 'self.set': 1, '=': 11, '[]': 1, 'get_id(self):': 1, 'self.set.append(len(self.set))': 1, 'return': 3, 'len(self.set)-1': 1, 'find_set(self,': 1, 'x):': 1, 'if': 3, 'self.set[x]': 3, '!=': 2, 'x:': 1, 'self.find_set(self.set[x])': 1, 'path': 1, 'compression.': 1, 'union_set(self,': 1, 'x,': 1, 'y):': 1, 'x_root,': 1, 'y_root': 1, 'map(self.find_set,': 1, '(x,': 1, 'y))': 1, 'x_root': 1, 'y_root:': 1, 'self.set[min(x_root,': 1, 'y_root)]': 1, 'max(x_root,': 1, 'y_root)': 1, 'solution(object):': 1, 'accountsmerge(self,': 1, 'accounts):': 1, '""""""': 2, ':type': 1, 'accounts:': 2, 'list[list[str]]': 2, ':rtype:': 1, 'union_find': 1, 'unionfind()': 1, 'email_to_name': 1, '{}': 2, 'email_to_id': 1, 'for': 5, 'account': 1, 'in': 6, 'name': 2, 'account[0]': 1, 'i': 1, 'xrange(1,': 1, 'len(account)):': 1, 'account[i]': 1, 'not': 1, 'email_to_id:': 1, 'email_to_name[account[i]]': 1, 'email_to_id[account[i]]': 1, 'union_find.get_id()': 1, 'union_find.union_set(email_to_id[account[1]],': 1, 'email_to_id[account[i]])': 1, 'result': 1, 'collections.defaultdict(list)': 1, 'email': 1, 'email_to_name.keys():': 1, 'result[union_find.find_set(email_to_id[email])].append(email)': 1, 'emails': 3, 'result.values():': 1, 'emails.sort()': 1, '[[email_to_name[emails[0]]]': 1, '+': 1, 'result.values()]': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 3, ':  ': 1, '  O': 1, ' O(': 2, 'O(n': 2, '(nl': 1, 'nlo': 1, 'log': 1, 'ogn': 1, 'gn)': 1, 'n),': 1, '), ': 1, ', n': 1, ' n ': 1, 'n i': 1, ' is': 2, 'is ': 2, 's t': 1, ' th': 2, 'the': 2, 'he ': 2, 'e n': 1, ' nu': 1, 'num': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'er ': 1, 'r o': 1, ' of': 2, 'of ': 1, 'f t': 1, ' to': 1, 'tot': 1, 'ota': 1, 'tal': 1, 'al ': 1, 'l e': 1, ' em': 13, 'ema': 20, 'mai': 20, 'ail': 20, 'ils': 6, 'ls,': 1, 's,\n': 1, ',\n#': 1, '\n# ': 2, '#  ': 1, '   ': 313, '  a': 1, ' an': 1, 'and': 1, 'nd ': 2, 'd t': 1, 'e m': 1, ' ma': 3, 'max': 2, 'ax ': 1, 'x l': 1, ' le': 3, 'len': 4, 'eng': 1, 'ngt': 1, 'gth': 1, 'th ': 2, 'h o': 1, 'ofe': 1, 'fem': 1, 'il ': 2, 'l i': 2, 's 3': 1, ' 32': 1, '320': 1, '20,': 1, '0, ': 1, ', p': 1, ' p.': 1, 'p.s': 1, '.s.': 1, 's. ': 1, '. {': 1, ' {6': 1, '{64': 1, '64}': 1, '4}@': 1, '}@{': 1, '@{2': 1, '{25': 1, '255': 1, '55}': 1, '5}\n': 1, '}\n#': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, '(n)': 1, 'n)\n': 1, ')\n\n': 3, '\n\ni': 1, '\nim': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 2, 'rt ': 1, 't c': 1, ' co': 3, 'col': 2, 'oll': 2, 'lle': 2, 'lec': 2, 'ect': 4, 'cti': 2, 'tio': 3, 'ion': 12, 'ons': 2, 'ns\n': 1, 's\n\n': 1, '\n\n\n': 2, '\n\nc': 2, '\ncl': 2, 'cla': 2, 'las': 2, 'ass': 2, 'ss ': 2, 's U': 1, ' Un': 2, 'Uni': 2, 'nio': 8, 'onF': 2, 'nFi': 2, 'Fin': 2, 'ind': 10, 'nd(': 4, 'd(o': 1, '(ob': 2, 'obj': 2, 'bje': 2, 'jec': 2, 'ct)': 2, 't):': 2, '):\n': 10, ':\n ': 14, '\n  ': 36, '  d': 5, ' de': 5, 'def': 6, 'ef ': 5, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 9, 'sel': 16, 'elf': 16, 'lf)': 2, 'f):': 2, '  s': 4, ' se': 7, 'lf.': 11, 'f.s': 9, '.se': 9, 'set': 15, 'et ': 1, 't =': 3, ' = ': 11, '= [': 1, ' []': 1, '[]\n': 1, ']\n\n': 2, '\n\n ': 4, 'f g': 1, ' ge': 1, 'get': 2, 'et_': 2, 't_i': 2, '_id': 8, 'id(': 2, 'd(s': 1, 'et.': 1, 't.a': 1, '.ap': 2, 'app': 2, 'ppe': 2, 'pen': 2, 'end': 2, 'd(l': 1, '(le': 1, 'en(': 3, 'n(s': 2, 'et)': 2, 't))': 2, '))\n': 2, ')\n ': 7, '  r': 5, ' re': 7, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n l': 1, 't)-': 1, ')-1': 1, '-1\n': 1, '1\n\n': 1, 'f f': 1, ' fi': 1, 'fin': 8, 'nd_': 4, 'd_s': 4, '_se': 6, 'et(': 5, 't(s': 3, 'lf,': 3, 'f, ': 3, ', x': 2, ' x)': 1, 'x):': 1, '  i': 3, ' if': 3, 'if ': 3, 'f s': 1, 'et[': 5, 't[x': 4, '[x]': 4, 'x] ': 2, '] !': 1, ' !=': 2, '!= ': 2, '= x': 1, ' x:': 1, 'x:\n': 1, '] =': 4, '= s': 1, 'f.f': 2, '.fi': 3, 'x])': 1, ']) ': 1, ')  ': 1, '  #': 1, ' # ': 1, '# p': 1, ' pa': 1, 'pat': 1, 'ath': 1, 'h c': 1, 'com': 1, 'omp': 1, 'mpr': 1, 'pre': 1, 'res': 5, 'ess': 1, 'ssi': 1, 'sio': 1, 'on.': 1, 'n.\n': 1, '.\n ': 1, 'n s': 1, 'x]\n': 1, 'f u': 1, ' un': 4, 'uni': 6, 'on_': 6, 'n_s': 2, ' x,': 1, 'x, ': 2, ', y': 5, ' y)': 2, 'y):': 1, '  x': 1, ' x_': 2, 'x_r': 4, '_ro': 8, 'roo': 8, 'oot': 8, 'ot,': 3, 't, ': 4, ' y_': 4, 'y_r': 4, 'ot ': 3, '= m': 2, 'map': 1, 'ap(': 1, 'p(s': 1, 'et,': 1, ', (': 1, ' (x': 1, '(x,': 1, 'y))': 1, 'f x': 1, 't !': 1, '= y': 1, 'ot:': 1, 't:\n': 1, 't[m': 1, '[mi': 1, 'min': 1, 'in(': 1, 'n(x': 1, '(x_': 2, 'ot)': 2, 't)]': 1, ')] ': 1, 'ax(': 1, 'x(x': 1, 't)\n': 2, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'on(': 1, 'n(o': 1, 'f a': 2, ' ac': 7, 'acc': 12, 'cco': 12, 'cou': 12, 'oun': 12, 'unt': 12, 'nts': 4, 'tsM': 1, 'sMe': 1, 'Mer': 1, 'erg': 1, 'rge': 1, 'ge(': 2, 'e(s': 1, ', a': 1, 'ts)': 1, 's):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e a': 1, 'ts:': 2, 's: ': 1, ': L': 2, ' Li': 2, 'Lis': 4, 'ist': 5, 'st[': 4, 't[L': 2, '[Li': 2, 't[s': 2, '[st': 2, 'str': 2, 'tr]': 2, 'r]]': 2, ']]\n': 2, ']\n ': 3, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, '  u': 2, 'n_f': 4, '_fi': 4, 'd =': 2, '= U': 1, 'd()': 2, '()\n': 3, '  e': 6, 'il_': 10, 'l_t': 10, '_to': 10, 'to_': 10, 'o_n': 4, '_na': 4, 'nam': 6, 'ame': 6, 'me ': 2, 'e =': 2, '= {': 2, ' {}': 2, '{}\n': 2, '}\n ': 2, 'o_i': 6, 'id ': 1, '  f': 5, ' fo': 5, 'for': 5, 'or ': 5, 'r a': 1, 'nt ': 1, 't i': 2, ' in': 6, 'in ': 6, 'n a': 1, 's:\n': 1, '  n': 1, ' na': 2, '= a': 1, 'nt[': 6, 't[0': 1, '[0]': 2, '0]\n': 1, 'r i': 1, ' i ': 1, 'i i': 1, 'n x': 1, ' xr': 1, 'xra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'e(1': 1, '(1,': 1, '1, ': 1, ', l': 1, 'n(a': 1, '(ac': 1, 'nt)': 1, ')):': 1, 't[i': 4, '[i]': 4, 'i] ': 1, '] n': 1, ' no': 1, 'not': 1, 'n e': 2, 'id:': 1, 'd:\n': 1, 'me[': 2, 'e[a': 1, '[ac': 4, 'i]]': 3, ']] ': 3, '= n': 1, 'me\n': 1, 'e\n ': 1, 'id[': 4, 'd[a': 3, '= u': 1, 'nd.': 3, 'd.g': 1, '.ge': 1, 'd.u': 1, '.un': 1, 't(e': 2, '(em': 3, 't[1': 1, '[1]': 1, '1]]': 1, ']],': 1, '],\n': 1, ',\n ': 1, ']])': 1, '])\n': 1, 'esu': 4, 'sul': 4, 'ult': 5, 'lt ': 1, '= c': 1, 'ns.': 1, 's.d': 1, '.de': 1, 'efa': 1, 'fau': 1, 'aul': 1, 'ltd': 1, 'tdi': 1, 'dic': 1, 'ict': 1, 'ct(': 1, 't(l': 1, '(li': 1, 'lis': 1, 'st)': 1, 'r e': 3, 'me.': 1, 'e.k': 1, '.ke': 1, 'key': 1, 'eys': 1, 'ys(': 1, 's()': 3, '():': 2, 'lt[': 1, 't[u': 1, '[un': 1, 'd.f': 1, 'd[e': 1, '[em': 3, 'il]': 1, 'l])': 1, '])]': 1, ')].': 1, '].a': 1, 'd(e': 1, 'il)': 1, 'l)\n': 1, 'ls ': 2, 's i': 2, 'n r': 2, 'lt.': 2, 't.v': 2, '.va': 2, 'val': 2, 'alu': 2, 'lue': 2, 'ues': 2, 'es(': 2, 'ls.': 1, 's.s': 1, '.so': 1, 'sor': 1, 'rt(': 1, 't()': 1, 'n [': 1, ' [[': 1, '[[e': 1, 'e[e': 1, 'ls[': 1, 's[0': 1, '0]]': 1, ']]]': 1, '] +': 1, ' + ': 1, '+ e': 1, 'ls\n': 1, 's\n ': 1, '()]': 1, ')]\n': 1}"
Kamyu,ambiguous-coordinates.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'time:': 1, 'o(n^4)': 1, 'space:': 1, 'o(n)': 1, 'import': 1, 'itertools': 1, 'class': 1, 'solution(object):': 1, 'def': 2, 'ambiguouscoordinates(self,': 1, 's):': 1, '""""""': 2, ':type': 1, 's:': 1, 'str': 1, ':rtype:': 1, 'list[str]': 1, 'make(s,': 2, 'i,': 1, 'n):': 1, 'for': 3, 'd': 1, 'in': 3, 'xrange(1,': 2, 'n+1):': 1, 'left': 2, '=': 2, 's[i:i+d]': 1, 'right': 2, 's[i+d:i+n]': 1, 'if': 2, '((not': 1, ""left.startswith('0')"": 1, 'or': 1, '==': 1, ""'0')"": 1, 'and': 1, '(not': 1, ""right.endswith('0'))):"": 1, 'yield': 1, '"""".join([left,': 1, ""'.'"": 1, 'else': 1, ""'',"": 1, 'right])': 1, 'return': 1, '[""({},': 1, '{})"".format(*cand)': 1, 'i': 1, 'len(s)-2)': 1, 'cand': 1, 'itertools.product(make(s,': 1, '1,': 1, 'i),': 1, 'i+1,': 1, 'len(s)-2-i))]': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 3, ':  ': 1, '  O': 1, ' O(': 2, 'O(n': 2, '(n^': 1, 'n^4': 1, '^4)': 1, '4)\n': 1, ')\n#': 1, '\n# ': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, '(n)': 1, 'n)\n': 1, ')\n\n': 2, '\n\ni': 1, '\nim': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't i': 1, ' it': 2, 'ite': 2, 'ter': 2, 'ert': 2, 'rto': 2, 'too': 2, 'ool': 2, 'ols': 2, 'ls\n': 1, 's\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 5, ':\n ': 5, '\n  ': 16, '   ': 202, '  d': 2, ' de': 2, 'def': 2, 'ef ': 2, 'f a': 1, ' am': 1, 'amb': 1, 'mbi': 1, 'big': 1, 'igu': 1, 'guo': 1, 'uou': 1, 'ous': 1, 'usC': 1, 'sCo': 1, 'Coo': 1, 'oor': 1, 'ord': 1, 'rdi': 1, 'din': 1, 'ina': 1, 'nat': 1, 'ate': 1, 'tes': 1, 'es(': 1, 's(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', S': 1, ' S)': 1, 'S):': 1, '  ""': 2, ' """"': 3, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e S': 1, ' S:': 1, 'S: ': 1, ': s': 1, ' st': 1, 'str': 2, 'tr\n': 1, 'r\n ': 1, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, ': L': 1, ' Li': 1, 'Lis': 1, 'ist': 1, 'st[': 1, 't[s': 1, '[st': 1, 'tr]': 1, 'r]\n': 1, ']\n ': 3, 'f m': 1, ' ma': 2, 'mak': 3, 'ake': 3, 'ke(': 3, 'e(S': 3, '(S,': 3, 'S, ': 3, ', i': 3, ' i,': 1, 'i, ': 1, ', n': 2, ' n)': 1, 'n):': 1, '  f': 3, ' fo': 3, 'for': 4, 'or ': 4, 'r d': 1, ' d ': 1, 'd i': 2, ' in': 3, 'in ': 3, 'n x': 2, ' xr': 2, 'xra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(1': 2, '(1,': 2, '1, ': 4, ' n+': 1, 'n+1': 1, '+1)': 1, '1):': 1, '  l': 1, ' le': 5, 'lef': 4, 'eft': 4, 'ft ': 2, 't =': 3, ' = ': 2, '= S': 2, ' S[': 2, 'S[i': 2, '[i:': 1, 'i:i': 1, ':i+': 2, 'i+d': 2, '+d]': 1, 'd]\n': 1, '  r': 2, ' ri': 4, 'rig': 4, 'igh': 4, 'ght': 4, 'ht ': 2, '[i+': 1, '+d:': 1, 'd:i': 1, 'i+n': 1, '+n]': 1, 'n]\n': 1, '  i': 1, ' if': 2, 'if ': 2, 'f (': 1, ' ((': 1, '((n': 1, '(no': 2, 'not': 2, 'ot ': 2, 't l': 1, 'ft.': 1, 't.s': 1, '.st': 1, 'sta': 1, 'tar': 1, 'art': 1, 'rts': 1, 'tsw': 1, 'swi': 2, 'wit': 2, 'ith': 2, 'th(': 2, ""h('"": 2, ""('0"": 2, ""'0'"": 3, ""0')"": 3, ""') "": 1, ') o': 1, ' or': 1, 'r l': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '0"": 1, ""')\n"": 1, ')\n ': 3, '  a': 1, ' an': 1, 'and': 3, 'nd ': 2, 'd (': 1, ' (n': 1, 't r': 1, 'ht.': 1, 't.e': 1, '.en': 1, 'end': 1, 'nds': 1, 'dsw': 1, ""'))"": 1, ')))': 1, ')):': 1, '  y': 1, ' yi': 1, 'yie': 1, 'iel': 1, 'eld': 1, 'ld ': 1, 'd ""': 1, '"""".': 1, '"".j': 1, '.jo': 1, 'joi': 1, 'oin': 1, 'in(': 1, 'n([': 1, '([l': 1, '[le': 1, 'ft,': 1, 't, ': 1, "", '"": 1, "" '."": 1, ""'.'"": 1, "".' "": 1, ""' i"": 1, 'f r': 1, 't e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se ': 1, ""e '"": 1, "" ''"": 1, ""'',"": 1, ""', "": 1, ', r': 1, 'ht]': 1, 't])': 1, '])\n': 1, '\n\n ': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n [': 1, ' [""': 1, '[""(': 1, '""({': 1, '({}': 1, '{},': 1, '}, ': 1, ', {': 1, ' {}': 1, '{})': 1, '})""': 1, ')"".': 1, '"".f': 1, '.fo': 1, 'orm': 1, 'rma': 1, 'mat': 1, 'at(': 1, 't(*': 1, '(*c': 1, '*ca': 1, 'can': 2, 'nd)': 1, 'd)\n': 1, 'r i': 1, ' i ': 1, 'i i': 1, ', l': 2, 'len': 2, 'en(': 2, 'n(S': 2, '(S)': 2, 'S)-': 2, ')-2': 2, '-2)': 1, '2)\n': 1, 'r c': 1, ' ca': 1, 'n i': 1, 'ls.': 1, 's.p': 1, '.pr': 1, 'pro': 1, 'rod': 1, 'odu': 1, 'duc': 1, 'uct': 1, 'ct(': 1, 't(m': 1, '(ma': 1, ', 1': 1, ' 1,': 1, ' i)': 1, 'i),': 1, '),\n': 1, ',\n ': 1, '  m': 1, ' i+': 1, 'i+1': 1, '+1,': 1, '-2-': 1, '2-i': 1, '-i)': 1, 'i))': 1, '))]': 1, ')]\n': 1}"
Kamyu,bag-of-tokens.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 2, 'time:': 1, 'o(nlogn)': 1, 'space:': 1, 'o(1)': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'bagoftokensscore(self,': 1, 'tokens,': 1, 'p):': 1, '""""""': 2, ':type': 2, 'tokens:': 1, 'list[int]': 1, 'p:': 1, 'int': 2, ':rtype:': 1, 'tokens.sort()': 1, 'result,': 1, 'points': 4, '=': 3, '0,': 2, '0': 1, 'left,': 1, 'right': 2, 'len(tokens)-1': 1, 'while': 1, 'left': 2, '<=': 1, 'right:': 1, 'if': 1, 'p': 3, '>=': 1, 'tokens[left]:': 1, '-=': 3, 'tokens[left]': 1, '+=': 3, '1': 4, 'result': 2, 'max(result,': 1, 'points)': 1, 'elif': 1, '>': 1, '0:': 1, 'tokens[right]': 1, 'else:': 1, 'break': 1, 'return': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 3, ':  ': 1, '  O': 1, ' O(': 2, 'O(n': 1, '(nl': 1, 'nlo': 1, 'log': 1, 'ogn': 1, 'gn)': 1, 'n)\n': 1, ')\n#': 1, '\n# ': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, 'O(1': 1, '(1)': 1, '1)\n': 1, ')\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 2, ':\n ': 6, '\n  ': 22, '   ': 204, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'f b': 1, ' ba': 1, 'bag': 1, 'agO': 1, 'gOf': 1, 'OfT': 1, 'fTo': 1, 'Tok': 1, 'oke': 8, 'ken': 8, 'ens': 8, 'nsS': 1, 'sSc': 1, 'Sco': 1, 'cor': 1, 'ore': 1, 're(': 1, 'e(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', t': 1, ' to': 6, 'tok': 7, 'ns,': 1, 's, ': 1, ', P': 1, ' P)': 1, 'P):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 3, ' :t': 2, ':ty': 2, 'typ': 3, 'ype': 3, 'pe ': 2, 'e t': 1, 'ns:': 1, 's: ': 1, ': L': 1, ' Li': 1, 'Lis': 1, 'ist': 1, 'st[': 1, 't[i': 1, '[in': 1, 'int': 8, 'nt]': 1, 't]\n': 3, ']\n ': 3, 'e P': 1, ' P:': 1, 'P: ': 1, ': i': 2, ' in': 2, 'nt\n': 2, 't\n ': 2, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, '  t': 1, 'ns.': 1, 's.s': 1, '.so': 1, 'sor': 1, 'ort': 1, 'rt(': 1, 't()': 1, '()\n': 1, ')\n ': 2, '  r': 4, ' re': 4, 'res': 4, 'esu': 4, 'sul': 4, 'ult': 4, 'lt,': 2, 't, ': 3, ', p': 2, ' po': 5, 'poi': 5, 'oin': 5, 'nts': 5, 'ts ': 4, 's =': 1, ' = ': 3, '= 0': 2, ' 0,': 2, '0, ': 2, ', 0': 1, ' 0\n': 1, '0\n ': 1, '  l': 2, ' le': 4, 'lef': 5, 'eft': 5, 'ft,': 1, ', r': 1, ' ri': 3, 'rig': 4, 'igh': 4, 'ght': 4, 'ht ': 2, 't =': 2, ', l': 1, 'len': 1, 'en(': 1, 'n(t': 1, '(to': 1, 'ns)': 1, 's)-': 1, ')-1': 1, '-1\n': 1, '1\n ': 5, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 1, 'ft ': 2, 't <': 1, ' <=': 1, '<= ': 1, '= r': 1, 'ht:': 1, 't:\n': 1, '  i': 1, ' if': 1, 'if ': 2, 'f P': 1, ' P ': 3, 'P >': 1, ' >=': 1, '>= ': 1, '= t': 3, 'ns[': 3, 's[l': 2, '[le': 2, 'ft]': 2, 't]:': 1, ']:\n': 1, '  P': 2, 'P -': 1, ' -=': 3, '-= ': 3, 't +': 1, ' +=': 3, '+= ': 3, '= 1': 4, ' 1\n': 4, '  p': 2, 's +': 1, 'lt ': 1, '= m': 1, ' ma': 1, 'max': 1, 'ax(': 1, 'x(r': 1, '(re': 1, 'ts)': 1, 's)\n': 1, '  e': 2, ' el': 2, 'eli': 1, 'lif': 1, 'f p': 1, 's >': 1, ' > ': 1, '> 0': 1, ' 0:': 1, '0:\n': 1, 's -': 1, 'P +': 1, 's[r': 1, '[ri': 1, 'ht]': 1, 't -': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n ': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n r': 1, 'lt\n': 1}"
Kamyu,battleships-in-a-board.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'time:': 1, 'o(m': 1, '*': 1, 'n)': 1, 'space:': 1, 'o(1)': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'countbattleships(self,': 1, 'board):': 1, '""""""': 2, ':type': 1, 'board:': 1, 'list[list[str]]': 1, ':rtype:': 1, 'int': 1, 'if': 1, 'not': 2, 'board': 1, 'or': 3, 'board[0]:': 1, 'return': 2, '0': 4, 'cnt': 3, '=': 1, 'for': 2, 'i': 1, 'in': 2, 'xrange(len(board)):': 1, 'j': 1, 'xrange(len(board[0])):': 1, '+=': 1, 'int(board[i][j]': 1, '==': 3, ""'x'"": 1, 'and': 2, '(i': 1, 'board[i': 1, '-': 2, '1][j]': 1, '!=': 2, ""'x')"": 1, '(j': 1, 'board[i][j': 1, '1]': 1, ""'x'))"": 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 3, ':  ': 1, '  O': 1, ' O(': 2, 'O(m': 1, '(m ': 1, 'm *': 1, ' * ': 1, '* n': 1, ' n)': 1, 'n)\n': 1, ')\n#': 1, '\n# ': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, 'O(1': 1, '(1)': 1, '1)\n': 1, ')\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 4, ':\n ': 5, '\n  ': 14, '   ': 134, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'f c': 1, ' co': 1, 'cou': 1, 'oun': 1, 'unt': 1, 'ntB': 1, 'tBa': 1, 'Bat': 1, 'att': 1, 'ttl': 1, 'tle': 1, 'les': 1, 'esh': 1, 'shi': 1, 'hip': 1, 'ips': 1, 'ps(': 1, 's(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', b': 1, ' bo': 6, 'boa': 9, 'oar': 9, 'ard': 9, 'rd)': 2, 'd):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e b': 1, 'rd:': 1, 'd: ': 1, ': L': 1, ' Li': 1, 'Lis': 2, 'ist': 2, 'st[': 2, 't[L': 1, '[Li': 1, 't[s': 1, '[st': 1, 'str': 1, 'tr]': 1, 'r]]': 1, ']]\n': 1, ']\n ': 1, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, ': i': 1, ' in': 4, 'int': 2, 'nt\n': 2, 't\n ': 1, '  i': 1, ' if': 1, 'if ': 1, 'f n': 1, ' no': 2, 'not': 2, 'ot ': 2, 't b': 2, 'rd ': 1, 'd o': 1, ' or': 3, 'or ': 5, 'r n': 1, 'rd[': 5, 'd[0': 2, '[0]': 2, '0]:': 1, ']:\n': 1, '  r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n 0': 1, ' 0\n': 2, '0\n\n': 1, '\n\n ': 1, '  c': 2, ' cn': 3, 'cnt': 3, 'nt ': 2, 't =': 1, ' = ': 1, '= 0': 3, '0\n ': 1, '  f': 2, ' fo': 2, 'for': 2, 'r i': 1, ' i ': 1, 'i i': 1, 'in ': 2, 'n x': 2, ' xr': 2, 'xra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(l': 2, '(le': 2, 'len': 2, 'en(': 2, 'n(b': 2, '(bo': 3, 'd))': 1, ')):': 2, 'r j': 1, ' j ': 1, 'j i': 1, '0])': 1, ']))': 1, 't +': 1, ' +=': 1, '+= ': 1, '= i': 1, 'nt(': 1, 't(b': 1, 'd[i': 3, '[i]': 2, 'i][': 2, '][j': 3, '[j]': 2, 'j] ': 2, '] =': 1, ' ==': 3, '== ': 3, ""= '"": 3, "" 'X"": 3, ""'X'"": 3, ""X' "": 1, ""' a"": 1, ' an': 2, 'and': 2, 'nd\n': 2, 'd\n ': 2, '  (': 2, ' (i': 1, '(i ': 1, 'i =': 1, ' 0 ': 2, '0 o': 2, 'r b': 2, '[i ': 1, 'i -': 1, ' - ': 2, '- 1': 2, ' 1]': 2, '1][': 1, '] !': 2, ' !=': 2, '!= ': 2, ""X')"": 2, ""') "": 1, ') a': 1, ' (j': 1, '(j ': 1, 'j =': 1, '[j ': 1, 'j -': 1, '1] ': 1, ""'))"": 1, '))\n': 1, ')\n ': 1, 'n c': 1}"
Kamyu,best-meeting-point.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 3, 'time:': 1, 'o(m': 2, '*': 1, 'n)': 2, 'space:': 1, '+': 5, 'from': 1, 'random': 1, 'import': 1, 'randint': 1, 'class': 1, 'solution(object):': 1, 'def': 3, 'mintotaldistance(self,': 1, 'grid):': 1, '""""""': 2, ':type': 1, 'grid:': 1, 'list[list[int]]': 1, ':rtype:': 1, 'int': 1, 'x': 1, '=': 14, '[i': 1, 'for': 7, 'i,': 2, 'row': 4, 'in': 7, 'enumerate(grid)': 2, 'v': 6, 'if': 5, '==': 4, '1]': 2, 'y': 1, '[j': 1, 'grid': 1, 'j,': 2, 'enumerate(row)': 2, 'mid_x': 1, 'self.findkthlargest(x,': 1, 'len(x)': 1, '/': 2, '2': 2, '1)': 2, 'mid_y': 1, 'self.findkthlargest(y,': 1, 'len(y)': 1, 'return': 3, 'sum([abs(mid_x-i)': 1, 'abs(mid_y-j)': 1, '1])': 1, 'findkthlargest(self,': 1, 'nums,': 1, 'k):': 1, 'left,': 2, 'right': 2, '0,': 1, 'len(nums)': 1, '-': 5, '1': 4, 'while': 1, 'left': 3, '<=': 1, 'right:': 1, 'pivot_idx': 1, 'randint(left,': 1, 'right)': 1, 'new_pivot_idx': 9, 'self.partitionaroundpivot(left,': 1, 'right,': 2, 'pivot_idx,': 2, 'nums)': 1, 'k': 3, '1:': 2, 'nums[new_pivot_idx]': 3, 'elif': 1, '>': 2, 'else:': 1, '<': 1, '1.': 1, 'partitionaroundpivot(self,': 1, 'nums):': 1, 'pivot_value': 1, 'nums[pivot_idx]': 2, 'nums[pivot_idx],': 1, 'nums[right]': 2, 'nums[right],': 2, 'i': 1, 'xrange(left,': 1, 'right):': 1, 'nums[i]': 2, 'pivot_value:': 1, 'nums[i],': 1, 'nums[new_pivot_idx],': 2, '+=': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 4, ':  ': 2, '  O': 1, ' O(': 2, 'O(m': 2, '(m ': 2, 'm *': 1, ' * ': 1, '* n': 1, ' n)': 2, 'n)\n': 2, ')\n#': 1, '\n# ': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, 'm +': 1, ' + ': 5, '+ n': 1, ')\n\n': 3, '\n\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 2, 'm r': 1, ' ra': 3, 'ran': 4, 'and': 3, 'ndo': 1, 'dom': 1, 'm i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't r': 1, 'ndi': 2, 'din': 2, 'int': 4, 'nt\n': 2, 't\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 3, 'ion': 3, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 2, '):\n': 5, ':\n ': 9, '\n  ': 34, '   ': 324, '  d': 3, ' de': 3, 'def': 3, 'ef ': 3, 'f m': 1, ' mi': 3, 'min': 1, 'inT': 1, 'nTo': 1, 'Tot': 1, 'ota': 1, 'tal': 1, 'alD': 1, 'lDi': 1, 'Dis': 1, 'ist': 3, 'sta': 1, 'tan': 1, 'anc': 1, 'nce': 1, 'ce(': 1, 'e(s': 1, '(se': 3, 'sel': 6, 'elf': 6, 'lf,': 3, 'f, ': 3, ', g': 1, ' gr': 3, 'gri': 5, 'rid': 5, 'id)': 3, 'd):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e g': 1, 'id:': 1, 'd: ': 1, ': L': 1, ' Li': 1, 'Lis': 2, 'st[': 2, 't[L': 1, '[Li': 1, 't[i': 1, '[in': 1, 'nt]': 1, 't]]': 1, ']]\n': 1, ']\n ': 8, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, ': i': 1, ' in': 8, 't\n ': 2, '  x': 1, ' x ': 1, 'x =': 6, ' = ': 14, '= [': 2, ' [i': 1, '[i ': 1, 'i f': 1, ' fo': 7, 'for': 7, 'or ': 7, 'r i': 3, ' i,': 2, 'i, ': 2, ', r': 7, ' ro': 4, 'row': 6, 'ow ': 4, 'w i': 4, 'in ': 7, 'n e': 4, ' en': 4, 'enu': 4, 'num': 23, 'ume': 4, 'mer': 4, 'era': 4, 'rat': 4, 'ate': 4, 'te(': 4, 'e(g': 2, '(gr': 2, 'd) ': 1, ') f': 1, 'r v': 1, ' v ': 6, 'v i': 3, 'n r': 1, ' if': 5, 'if ': 6, 'f v': 3, 'v =': 3, ' ==': 4, '== ': 4, '= 1': 4, ' 1]': 3, '1]\n': 2, '  y': 1, ' y ': 1, 'y =': 2, ' [j': 1, '[j ': 1, 'j f': 1, 'r r': 1, 'n g': 1, 'id ': 1, 'd f': 1, 'r j': 2, ' j,': 2, 'j, ': 2, ', v': 2, 'e(r': 2, '(ro': 2, 'ow)': 2, 'w) ': 2, ') i': 2, '  m': 2, 'mid': 4, 'id_': 4, 'd_x': 2, '_x ': 1, '= s': 3, ' se': 3, 'lf.': 3, 'f.f': 2, '.fi': 2, 'fin': 3, 'ind': 3, 'ndK': 3, 'dKt': 3, 'Kth': 3, 'thL': 3, 'hLa': 3, 'Lar': 3, 'arg': 3, 'rge': 3, 'ges': 3, 'est': 3, 'st(': 3, 't(x': 1, '(x,': 1, 'x, ': 3, ', l': 4, ' le': 8, 'len': 3, 'en(': 3, 'n(x': 1, '(x)': 1, 'x) ': 1, ') /': 2, ' / ': 2, '/ 2': 2, ' 2 ': 2, '2 +': 2, '+ 1': 3, ' 1)': 2, '1)\n': 2, ')\n ': 5, 'd_y': 2, '_y ': 1, 't(y': 1, '(y,': 1, 'y, ': 1, 'n(y': 1, '(y)': 1, 'y) ': 1, '\n\n ': 4, '  r': 4, ' re': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n s': 1, ' su': 1, 'sum': 1, 'um(': 1, 'm([': 1, '([a': 1, '[ab': 1, 'abs': 2, 'bs(': 2, 's(m': 2, '(mi': 2, '_x-': 1, 'x-i': 1, '-i)': 1, 'i) ': 1, ') +': 1, '+ a': 1, ' ab': 1, '_y-': 1, 'y-j': 1, '-j)': 1, 'j)\n': 1, '  f': 3, 'd)\n': 1, '1])': 1, '])\n': 1, 'f f': 1, ' fi': 1, 't(s': 2, ', n': 9, ' nu': 18, 'ums': 19, 'ms,': 1, 's, ': 1, ', k': 1, ' k)': 1, 'k):': 1, '  l': 2, 'lef': 8, 'eft': 8, 'ft,': 5, 't, ': 6, ' ri': 7, 'rig': 11, 'igh': 11, 'ght': 11, 'ht ': 2, 't =': 3, '= 0': 1, ' 0,': 1, '0, ': 1, 'n(n': 1, '(nu': 1, 'ms)': 3, 's) ': 1, ') -': 1, ' - ': 5, '- 1': 5, ' 1\n': 4, '1\n ': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 1, 'ft ': 2, 't <': 1, ' <=': 1, '<= ': 1, '= r': 2, 'ht:': 1, 't:\n': 1, '  p': 3, ' pi': 5, 'piv': 22, 'ivo': 24, 'vot': 24, 'ot_': 22, 't_i': 20, '_id': 20, 'idx': 20, 'dx ': 9, 'nt(': 1, 't(l': 2, '(le': 3, 'ht)': 2, 't)\n': 1, '  n': 6, ' ne': 9, 'new': 14, 'ew_': 14, 'w_p': 14, '_pi': 14, 'f.P': 1, '.Pa': 1, 'Par': 2, 'art': 2, 'rti': 2, 'tit': 2, 'iti': 2, 'onA': 2, 'nAr': 2, 'Aro': 2, 'rou': 2, 'oun': 2, 'und': 2, 'ndP': 2, 'dPi': 2, 'Piv': 2, 'ot(': 2, 'ht,': 2, 't,\n': 1, ',\n ': 1, 'dx,': 2, 's)\n': 1, '  i': 2, 'f n': 3, '= k': 1, ' k ': 3, 'k -': 3, ' 1:': 2, '1:\n': 2, 'n n': 2, 'ms[': 15, 's[n': 5, '[ne': 5, 'dx]': 8, 'x]\n': 3, '  e': 2, ' el': 2, 'eli': 1, 'lif': 1, 'x >': 1, ' > ': 2, '> k': 1, '= n': 6, 'x -': 1, 'els': 1, 'lse': 1, 'se:': 1, '  #': 1, ' # ': 1, '# n': 1, 'x <': 1, ' < ': 1, '< k': 1, ' 1.': 1, '1.\n': 1, '.\n ': 1, 'x +': 2, '1\n\n': 2, 'f P': 1, ' Pa': 1, ', p': 1, 's):': 1, 't_v': 2, '_va': 2, 'val': 2, 'alu': 2, 'lue': 2, 'ue ': 1, 'e =': 1, 's[p': 3, '[pi': 3, '= l': 1, 'ft\n': 1, 'x],': 3, '], ': 6, 's[r': 4, '[ri': 4, 'ht]': 4, 't] ': 1, '] =': 3, 't],': 2, ' i ': 1, 'i i': 1, 'n x': 1, ' xr': 1, 'xra': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(l': 1, 's[i': 3, '[i]': 3, 'i] ': 1, '] >': 1, '> p': 1, 'ue:': 1, 'e:\n': 1, 'i],': 1, 'x] ': 2, 'i]\n': 1, ' +=': 1, '+= ': 1, 't]\n': 1, 'dx\n': 1}"
Kamyu,binary-subarrays-with-sum.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 3, 'time:': 1, 'o(n)': 1, 'space:': 1, 'o(1)': 1, 'two': 1, 'pointers': 1, 'solution': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'numsubarrayswithsum(self,': 1, 'a,': 1, 's):': 1, '""""""': 2, ':type': 2, 'a:': 1, 'list[int]': 1, 's:': 3, 'int': 2, ':rtype:': 1, 'result': 3, '=': 2, '0': 2, 'left,': 1, 'right,': 1, 'sum_left,': 1, 'sum_right': 3, '0,': 3, 'for': 1, 'i,': 1, 'a': 3, 'in': 1, 'enumerate(a):': 1, 'sum_left': 4, '+=': 5, 'while': 2, 'left': 2, '<': 2, 'i': 2, 'and': 3, '>': 2, '-=': 2, 'a[left]': 1, '1': 2, 'right': 2, '\\': 1, '(sum_right': 2, 's': 2, 'or': 1, '==': 2, 'not': 1, 'a[right])):': 1, 'a[right]': 1, 'if': 1, 'right-left+1': 1, 'return': 1}","{'# T': 2, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 3, ':  ': 1, '  O': 1, ' O(': 2, 'O(n': 1, '(n)': 1, 'n)\n': 1, ')\n#': 1, '\n# ': 2, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, 'O(1': 1, '(1)': 1, '1)\n': 1, ')\n\n': 1, '\n\n#': 1, ' Tw': 1, 'Two': 1, 'wo ': 1, 'o p': 1, ' po': 1, 'poi': 1, 'oin': 1, 'int': 4, 'nte': 1, 'ter': 1, 'ers': 1, 'rs ': 1, 's s': 1, ' so': 1, 'sol': 1, 'olu': 2, 'lut': 2, 'uti': 2, 'tio': 2, 'ion': 2, 'on\n': 1, 'n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 4, ':\n ': 6, '\n  ': 21, '   ': 192, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'f n': 1, ' nu': 1, 'num': 2, 'umS': 1, 'mSu': 1, 'Sub': 1, 'uba': 1, 'bar': 1, 'arr': 1, 'rra': 1, 'ray': 1, 'ays': 1, 'ysW': 1, 'sWi': 1, 'Wit': 1, 'ith': 1, 'thS': 1, 'hSu': 1, 'Sum': 1, 'um(': 1, 'm(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', A': 1, ' A,': 1, 'A, ': 1, ', S': 1, ' S)': 1, 'S):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 3, ' :t': 2, ':ty': 2, 'typ': 3, 'ype': 3, 'pe ': 2, 'e A': 1, ' A:': 1, 'A: ': 1, ': L': 1, ' Li': 1, 'Lis': 1, 'ist': 1, 'st[': 1, 't[i': 1, '[in': 1, 'nt]': 1, 't]\n': 3, ']\n ': 3, 'e S': 1, ' S:': 3, 'S: ': 1, ': i': 2, ' in': 3, 'nt\n': 2, 't\n ': 2, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, '  r': 4, ' re': 4, 'res': 3, 'esu': 3, 'sul': 3, 'ult': 3, 'lt ': 2, 't =': 4, ' = ': 2, '= 0': 2, ' 0\n': 2, '0\n ': 2, '  l': 2, ' le': 3, 'lef': 10, 'eft': 10, 'ft,': 2, 't, ': 3, ', r': 1, ' ri': 4, 'rig': 11, 'igh': 11, 'ght': 11, 'ht,': 1, ', s': 2, ' su': 8, 'sum': 10, 'um_': 10, 'm_l': 5, '_le': 5, 'm_r': 5, '_ri': 5, 'ht ': 7, ' 0,': 3, '0, ': 3, ', 0': 3, '  f': 1, ' fo': 1, 'for': 1, 'or ': 2, 'r i': 1, ' i,': 1, 'i, ': 1, ', a': 1, ' a ': 1, 'a i': 1, 'in ': 1, 'n e': 1, ' en': 1, 'enu': 1, 'ume': 1, 'mer': 1, 'era': 1, 'rat': 1, 'ate': 1, 'te(': 1, 'e(A': 1, '(A)': 1, 'A):': 1, '  s': 4, 'ft ': 6, 't +': 5, ' +=': 5, '+= ': 5, '= a': 2, ' a\n': 2, 'a\n ': 2, '  w': 2, ' wh': 2, 'whi': 2, 'hil': 2, 'ile': 2, 'le ': 2, 'e l': 1, 't <': 2, ' < ': 2, '< i': 2, ' i ': 2, 'i a': 2, ' an': 3, 'and': 3, 'nd ': 3, 'd s': 1, 't >': 2, ' > ': 2, '> S': 2, 'S:\n': 2, 't -': 2, ' -=': 2, '-= ': 2, '= A': 2, ' A[': 3, 'A[l': 1, '[le': 1, 'ft]': 1, '= 1': 2, ' 1\n': 2, '1\n ': 3, 'e r': 1, 'd \\': 1, ' \\\n': 1, '\\\n ': 1, '  (': 1, ' (s': 2, '(su': 2, ' S ': 2, 'S o': 1, ' or': 1, 'r (': 1, ' ==': 2, '== ': 2, '= S': 2, 'S a': 1, 'd n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't A': 1, 'A[r': 2, '[ri': 2, 'ht]': 2, 't])': 1, ']))': 1, ')):': 1, '  i': 1, ' if': 1, 'if ': 1, 'f s': 1, '= r': 1, 'ht-': 1, 't-l': 1, '-le': 1, 'ft+': 1, 't+1': 1, '+1\n': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n r': 1, 'lt\n': 1}"
Kamyu,binary-watch.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'time:': 1, 'o(1)': 2, 'space:': 1, 'class': 1, 'solution(object):': 1, 'def': 3, 'readbinarywatch(self,': 1, 'num):': 2, '""""""': 4, ':type': 2, 'num:': 2, 'int': 2, ':rtype:': 2, 'list[str]': 2, 'bit_count(bits):': 1, 'count': 3, '=': 1, '0': 1, 'while': 1, 'bits:': 1, 'bits': 1, '&=': 1, 'bits-1': 1, '+=': 1, '1': 1, 'return': 3, ""['%d:%02d'"": 1, '%': 1, '(h,': 1, 'm)': 1, 'for': 4, 'h': 2, 'in': 4, 'xrange(12)': 1, 'm': 2, 'xrange(60)': 1, 'if': 2, 'bit_count(h)': 1, '+': 2, 'bit_count(m)': 1, '==': 2, 'num]': 2, 'readbinarywatch2(self,': 1, ""['{0}:{1}'.format(str(h),"": 1, 'str(m).zfill(2))': 1, 'range(12)': 1, 'range(60)': 1, '(bin(h)': 1, ""bin(m)).count('1')"": 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 4, ':  ': 1, '  O': 1, ' O(': 2, 'O(1': 2, '(1)': 2, '1)\n': 2, ')\n#': 1, '\n# ': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, ')\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 4, ':\n ': 5, '\n  ': 21, '   ': 170, '  d': 3, ' de': 3, 'def': 3, 'ef ': 3, 'f r': 2, ' re': 5, 'rea': 2, 'ead': 2, 'adB': 2, 'dBi': 2, 'Bin': 2, 'ina': 2, 'nar': 2, 'ary': 2, 'ryW': 2, 'yWa': 2, 'Wat': 2, 'atc': 2, 'tch': 2, 'ch(': 1, 'h(s': 1, '(se': 2, 'sel': 2, 'elf': 2, 'lf,': 2, 'f, ': 2, ', n': 2, ' nu': 6, 'num': 6, 'um)': 2, 'm):': 2, '  ""': 4, ' """"': 4, '""""""': 4, '""""\n': 4, '""\n ': 4, '  :': 4, ' :t': 2, ':ty': 2, 'typ': 4, 'ype': 4, 'pe ': 2, 'e n': 2, 'um:': 2, 'm: ': 2, ': i': 2, ' in': 6, 'int': 2, 'nt\n': 3, 't\n ': 2, ' :r': 2, ':rt': 2, 'rty': 2, 'pe:': 2, ': L': 2, ' Li': 2, 'Lis': 2, 'ist': 2, 'st[': 2, 't[s': 2, '[st': 2, 'str': 4, 'tr]': 2, 'r]\n': 2, ']\n ': 2, 'f b': 2, ' bi': 7, 'bit': 7, 'it_': 3, 't_c': 3, '_co': 3, 'cou': 7, 'oun': 7, 'unt': 7, 'nt(': 4, 't(b': 1, '(bi': 2, 'its': 4, 'ts)': 1, 's):': 1, '  c': 2, ' co': 3, 'nt ': 2, 't =': 1, ' = ': 1, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e b': 1, 'ts:': 1, 's:\n': 1, '  b': 1, 'ts ': 1, 's &': 1, ' &=': 1, '&= ': 1, '= b': 1, 'ts-': 1, 's-1': 1, '-1\n': 1, '1\n ': 2, 't +': 1, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 1, '  r': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n c': 1, 't\n\n': 1, '\n\n ': 2, 'n [': 2, "" ['"": 2, ""['%"": 1, ""'%d"": 1, '%d:': 1, 'd:%': 1, ':%0': 1, '%02': 1, '02d': 1, ""2d'"": 1, ""d' "": 1, ""' %"": 1, ' % ': 1, '% (': 1, ' (h': 1, '(h,': 1, 'h, ': 1, ', m': 1, ' m)': 1, 'm) ': 2, ') f': 3, ' fo': 4, 'for': 5, 'or ': 4, 'r h': 2, ' h ': 2, 'h i': 2, 'in ': 4, 'n x': 2, ' xr': 2, 'xra': 2, 'ran': 4, 'ang': 4, 'nge': 4, 'ge(': 4, 'e(1': 2, '(12': 2, '12)': 2, '2) ': 2, 'r m': 2, ' m ': 2, 'm i': 2, 'e(6': 2, '(60': 2, '60)': 2, '0)\n': 2, ')\n ': 3, '  i': 2, ' if': 2, 'if ': 2, 't(h': 1, '(h)': 3, 'h) ': 2, ') +': 2, ' + ': 2, '+ b': 2, 't(m': 1, '(m)': 3, ') =': 2, ' ==': 2, '== ': 2, '= n': 2, 'um]': 2, 'm]\n': 2, ']\n\n': 1, 'ch2': 1, 'h2(': 1, '2(s': 1, ""['{"": 1, ""'{0"": 1, '{0}': 1, '0}:': 1, '}:{': 1, ':{1': 1, '{1}': 1, ""1}'"": 1, ""}'."": 1, ""'.f"": 1, '.fo': 1, 'orm': 1, 'rma': 1, 'mat': 1, 'at(': 1, 't(s': 1, '(st': 1, 'tr(': 2, 'r(h': 1, 'h),': 1, '), ': 1, ', s': 1, ' st': 1, 'r(m': 1, 'm).': 1, ').z': 1, '.zf': 1, 'zfi': 1, 'fil': 1, 'ill': 1, 'll(': 1, 'l(2': 1, '(2)': 1, '2))': 1, '))\n': 1, '  f': 1, 'n r': 2, ' ra': 2, 'f (': 1, ' (b': 1, 'bin': 2, 'in(': 2, 'n(h': 1, 'n(m': 1, 'm))': 1, ')).': 1, ').c': 1, '.co': 1, ""t('"": 1, ""('1"": 1, ""'1'"": 1, ""1')"": 1, ""') "": 1}"
Kamyu,candy-crush.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'time:': 1, 'o((r': 1, '*': 1, 'c)^2)': 1, 'space:': 1, 'o(1)': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'candycrush(self,': 1, 'board):': 1, '""""""': 2, ':type': 1, 'board:': 1, 'list[list[int]]': 2, ':rtype:': 1, 'r,': 1, 'c': 4, '=': 14, 'len(board),': 1, 'len(board[0])': 1, 'changed': 4, 'true': 3, 'while': 1, 'changed:': 1, 'false': 1, 'for': 7, 'r': 4, 'in': 7, 'xrange(r):': 1, 'xrange(c-2):': 1, 'if': 3, 'abs(board[r][c])': 2, '==': 4, 'abs(board[r][c+1])': 1, 'abs(board[r][c+2])': 1, '!=': 2, '0:': 3, 'board[r][c]': 5, 'board[r][c+1]': 1, 'board[r][c+2]': 1, '-abs(board[r][c])': 2, 'xrange(r-2):': 1, 'xrange(c):': 2, 'abs(board[r+1][c])': 1, 'abs(board[r+2][c])': 1, 'board[r+1][c]': 1, 'board[r+2][c]': 1, 'i': 2, 'r-1': 1, 'reversed(xrange(r)):': 1, '>': 1, 'board[i][c]': 1, '-=': 1, '1': 1, 'reversed(xrange(i+1)):': 1, '0': 1, 'return': 1, 'board': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 3, ':  ': 1, '  O': 1, ' O(': 2, 'O((': 1, '((R': 1, '(R ': 1, 'R *': 1, ' * ': 1, '* C': 1, ' C)': 1, 'C)^': 1, ')^2': 1, '^2)': 1, '2)\n': 1, ')\n#': 1, '\n# ': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, 'O(1': 1, '(1)': 1, '1)\n': 1, ')\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 9, ':\n ': 13, '\n  ': 28, '   ': 364, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'f c': 1, ' ca': 1, 'can': 1, 'and': 1, 'ndy': 1, 'dyC': 1, 'yCr': 1, 'Cru': 1, 'rus': 1, 'ush': 1, 'sh(': 1, 'h(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', b': 1, ' bo': 13, 'boa': 23, 'oar': 23, 'ard': 23, 'rd)': 2, 'd):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e b': 1, 'rd:': 1, 'd: ': 1, ': L': 2, ' Li': 2, 'Lis': 4, 'ist': 4, 'st[': 4, 't[L': 2, '[Li': 2, 't[i': 2, '[in': 2, 'int': 2, 'nt]': 2, 't]]': 2, ']]\n': 2, ']\n ': 3, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, '  R': 1, ' R,': 1, 'R, ': 1, ', C': 1, ' C ': 1, 'C =': 1, ' = ': 14, '= l': 1, ' le': 2, 'len': 2, 'en(': 2, 'n(b': 2, '(bo': 10, 'd),': 1, '), ': 1, ', l': 1, 'rd[': 19, 'd[0': 1, '[0]': 1, '0])': 1, '])\n': 3, ')\n ': 3, '  c': 4, ' ch': 5, 'cha': 5, 'han': 5, 'ang': 12, 'nge': 12, 'ged': 5, 'ed ': 4, 'd =': 4, '= T': 3, ' Tr': 3, 'Tru': 3, 'rue': 3, 'ue\n': 3, 'e\n\n': 4, '\n\n ': 5, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e c': 1, 'ed:': 1, 'd:\n': 1, '= F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, '  f': 7, ' fo': 7, 'for': 7, 'or ': 7, 'r r': 4, ' r ': 4, 'r i': 4, ' in': 7, 'in ': 7, 'n x': 5, ' xr': 5, 'xra': 7, 'ran': 7, 'ge(': 7, 'e(R': 3, '(R)': 2, 'R):': 1, 'r c': 3, ' c ': 3, 'c i': 3, 'e(C': 3, '(C-': 1, 'C-2': 1, '-2)': 2, '2):': 2, '  i': 5, ' if': 3, 'if ': 3, 'f a': 2, ' ab': 6, 'abs': 8, 'bs(': 8, 's(b': 8, 'd[r': 17, '[r]': 13, 'r][': 13, '][c': 18, '[c]': 14, 'c])': 6, ']) ': 6, ') =': 4, ' ==': 4, '== ': 4, '= a': 4, '[c+': 4, 'c+1': 2, '+1]': 4, '1])': 1, 'c+2': 2, '+2]': 4, '2])': 1, ') !': 2, ' !=': 2, '!= ': 2, '= 0': 3, ' 0:': 3, '0:\n': 3, '  b': 4, 'c] ': 7, '] =': 8, '= b': 5, '1] ': 1, '2] ': 1, '= -': 2, ' -a': 2, '-ab': 2, '(R-': 1, 'R-2': 1, '(C)': 2, 'C):': 2, '[r+': 4, 'r+1': 2, '1][': 2, 'r+2': 2, '2][': 2, ' i ': 2, 'i =': 1, '= R': 1, ' R-': 1, 'R-1': 1, '-1\n': 1, '1\n ': 2, 'n r': 2, ' re': 3, 'rev': 2, 'eve': 2, 'ver': 2, 'ers': 2, 'rse': 2, 'sed': 2, 'ed(': 2, 'd(x': 2, '(xr': 2, 'R))': 1, ')):': 2, 'f b': 1, '] >': 1, ' > ': 1, '> 0': 1, 'd[i': 1, '[i]': 1, 'i][': 1, 'c]\n': 1, 'i -': 1, ' -=': 1, '-= ': 1, '= 1': 1, ' 1\n': 1, 'e(i': 1, '(i+': 1, 'i+1': 1, '+1)': 1, '1))': 1, ' 0\n': 1, '0\n\n': 1, '  r': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n b': 1, 'rd\n': 1}"
Kamyu,coin-path.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'time:': 1, 'o(n': 1, '*': 3, 'b)': 1, 'space:': 1, 'o(n)': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'cheapestjump(self,': 1, 'a,': 1, 'b):': 1, '""""""': 2, ':type': 2, 'a:': 1, 'list[int]': 2, 'b:': 1, 'int': 1, ':rtype:': 1, 'result': 4, '=': 8, '[]': 1, 'if': 4, 'not': 1, 'a': 1, 'or': 1, 'a[-1]': 1, '==': 3, '-1:': 3, 'return': 3, 'n': 2, 'len(a)': 1, 'dp,': 1, 'next_pos': 1, '[float(""inf"")]': 1, 'n,': 1, '[-1]': 1, 'dp[n-1]': 1, 'a[n-1]': 1, 'for': 2, 'i': 1, 'in': 2, 'reversed(xrange(n-1)):': 1, 'a[i]': 3, 'continue': 1, 'j': 2, 'xrange(i+1,': 1, 'min(i+b+1,n)):': 1, '+': 2, 'dp[j]': 2, '<': 1, 'dp[i]:': 1, 'dp[i]': 1, 'next_pos[i]': 1, 'dp[0]': 1, 'float(""inf""):': 1, 'k': 3, '0': 1, 'while': 1, '!=': 1, 'result.append(k+1)': 1, 'next_pos[k]': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 3, ':  ': 1, '  O': 1, ' O(': 2, 'O(n': 2, '(n ': 1, 'n *': 1, ' * ': 3, '* B': 1, ' B)': 2, 'B)\n': 1, ')\n#': 1, '\n# ': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, '(n)': 1, 'n)\n': 1, ')\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 5, ':\n ': 9, '\n  ': 26, '   ': 216, '  d': 4, ' de': 1, 'def': 1, 'ef ': 1, 'f c': 1, ' ch': 1, 'che': 1, 'hea': 1, 'eap': 1, 'ape': 1, 'pes': 1, 'est': 1, 'stJ': 1, 'tJu': 1, 'Jum': 1, 'ump': 1, 'mp(': 1, 'p(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', A': 1, ' A,': 1, 'A, ': 1, ', B': 1, 'B):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 3, ' :t': 2, ':ty': 2, 'typ': 3, 'ype': 3, 'pe ': 2, 'e A': 1, ' A:': 1, 'A: ': 1, ': L': 2, ' Li': 2, 'Lis': 2, 'ist': 2, 'st[': 2, 't[i': 2, '[in': 2, 'int': 3, 'nt]': 2, 't]\n': 2, ']\n ': 6, 'e B': 1, ' B:': 1, 'B: ': 1, ': i': 1, ' in': 3, 'nt\n': 1, 't\n ': 3, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, '  r': 5, ' re': 9, 'res': 5, 'esu': 5, 'sul': 5, 'ult': 5, 'lt ': 1, 't =': 1, ' = ': 8, '= [': 2, ' []': 1, '[]\n': 1, '  i': 4, ' if': 4, 'if ': 4, 'f n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't A': 1, ' A ': 1, 'A o': 1, ' or': 1, 'or ': 3, 'r A': 1, ' A[': 5, 'A[-': 1, '[-1': 2, '-1]': 4, '1] ': 3, '] =': 6, ' ==': 3, '== ': 3, '= -': 3, ' -1': 3, '-1:': 3, '1:\n': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n r': 4, 'lt\n': 3, '  n': 2, ' n ': 1, 'n =': 1, '= l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(A': 1, '(A)': 1, 'A)\n': 1, ')\n ': 2, ' dp': 7, 'dp,': 1, 'p, ': 1, ', n': 1, ' ne': 3, 'nex': 3, 'ext': 3, 'xt_': 3, 't_p': 3, '_po': 3, 'pos': 3, 'os ': 1, 's =': 1, ' [f': 1, '[fl': 1, 'flo': 2, 'loa': 2, 'oat': 2, 'at(': 2, 't(""': 2, '(""i': 2, '""in': 2, 'inf': 2, 'nf""': 2, 'f"")': 2, '"")]': 1, ')] ': 1, '] *': 2, '* n': 2, ' n,': 1, 'n, ': 1, ', [': 1, ' [-': 1, ' n\n': 1, 'n\n ': 1, 'dp[': 6, 'p[n': 1, '[n-': 2, 'n-1': 3, '= A': 2, 'A[n': 1, '1]\n': 1, '  f': 2, ' fo': 2, 'for': 2, 'r i': 1, ' i ': 1, 'i i': 1, 'in ': 2, 'rev': 1, 'eve': 1, 'ver': 1, 'ers': 1, 'rse': 1, 'sed': 1, 'ed(': 1, 'd(x': 1, '(xr': 1, 'xra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(n': 1, '(n-': 1, '-1)': 1, '1))': 1, ')):': 2, 'f A': 2, 'A[i': 3, '[i]': 6, 'i] ': 5, '  c': 1, ' co': 1, 'con': 1, 'ont': 1, 'nti': 1, 'tin': 1, 'inu': 1, 'nue': 1, 'ue\n': 1, 'e\n ': 1, 'r j': 1, ' j ': 1, 'j i': 1, 'n x': 1, ' xr': 1, 'e(i': 1, '(i+': 2, 'i+1': 1, '+1,': 2, '1, ': 1, ', m': 1, ' mi': 1, 'min': 1, 'in(': 1, 'n(i': 1, 'i+B': 1, '+B+': 1, 'B+1': 1, '1,n': 1, ',n)': 1, 'n))': 1, '] +': 2, ' + ': 2, '+ d': 2, 'p[j': 2, '[j]': 2, 'j] ': 1, '] <': 1, ' < ': 1, '< d': 1, 'p[i': 2, 'i]:': 1, ']:\n': 1, 'j]\n': 1, 'os[': 2, 's[i': 1, '= j': 1, ' j\n': 1, 'j\n ': 1, 'f d': 1, 'p[0': 1, '[0]': 1, '0] ': 1, '= f': 1, ' fl': 1, '""):': 1, '  k': 2, ' k ': 3, 'k =': 2, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e k': 1, 'k !': 1, ' !=': 1, '!= ': 1, 'lt.': 1, 't.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(k': 1, '(k+': 1, 'k+1': 1, '+1)': 1, '1)\n': 1, '= n': 1, 's[k': 1, '[k]': 1, 'k]\n': 1}"
Kamyu,delete-and-earn.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'time:': 1, 'o(n)': 1, 'space:': 1, 'o(1)': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'deleteandearn(self,': 1, 'nums):': 1, '""""""': 2, ':type': 1, 'nums:': 2, 'list[int]': 1, ':rtype:': 1, 'int': 1, 'vals': 1, '=': 4, '[0]': 1, '*': 1, '10001': 1, 'for': 2, 'num': 2, 'in': 2, 'vals[num]': 1, '+=': 1, 'val_i,': 2, 'val_i_1': 2, 'vals[0],': 1, '0': 1, 'i': 1, 'xrange(1,': 1, 'len(vals)):': 1, 'val_i_1,': 1, 'val_i_2': 1, 'val_i': 2, 'max(vals[i]': 1, '+': 1, 'val_i_2,': 1, 'val_i_1)': 1, 'return': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 3, ':  ': 1, '  O': 1, ' O(': 2, 'O(n': 1, '(n)': 1, 'n)\n': 1, ')\n#': 1, '\n# ': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, 'O(1': 1, '(1)': 1, '1)\n': 2, ')\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 3, ':\n ': 4, '\n  ': 13, '   ': 86, '  d': 1, ' de': 2, 'def': 1, 'ef ': 1, 'f d': 1, 'del': 1, 'ele': 1, 'let': 1, 'ete': 1, 'teA': 1, 'eAn': 1, 'And': 1, 'ndE': 1, 'dEa': 1, 'Ear': 1, 'arn': 1, 'rn(': 1, 'n(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', n': 1, ' nu': 5, 'num': 6, 'ums': 3, 'ms)': 1, 's):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e n': 1, 'ms:': 2, 's: ': 1, ': L': 1, ' Li': 1, 'Lis': 1, 'ist': 1, 'st[': 1, 't[i': 1, '[in': 1, 'int': 2, 'nt]': 1, 't]\n': 1, ']\n ': 1, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, ': i': 1, ' in': 3, 'nt\n': 1, 't\n ': 1, '  v': 5, ' va': 13, 'val': 15, 'als': 5, 'ls ': 1, 's =': 1, ' = ': 4, '= [': 1, ' [0': 1, '[0]': 2, '0] ': 1, '] *': 1, ' * ': 1, '* 1': 1, ' 10': 1, '100': 1, '000': 1, '001': 1, '01\n': 1, '1\n ': 2, '  f': 2, ' fo': 2, 'for': 2, 'or ': 2, 'r n': 1, 'um ': 1, 'm i': 1, 'in ': 2, 'n n': 1, 's:\n': 1, 'ls[': 3, 's[n': 1, '[nu': 1, 'um]': 1, 'm] ': 1, '] +': 2, ' +=': 1, '+= ': 1, '= n': 1, 'um\n': 1, 'm\n ': 1, 'al_': 10, 'l_i': 10, '_i,': 2, 'i, ': 2, ', v': 4, '_i_': 6, 'i_1': 4, '_1 ': 1, '1 =': 1, '= v': 2, 's[0': 1, '0],': 1, '], ': 1, ', 0': 1, ' 0\n': 1, '0\n ': 1, 'r i': 1, ' i ': 1, 'i i': 1, 'n x': 1, ' xr': 1, 'xra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(1': 1, '(1,': 1, '1, ': 2, ', l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(v': 1, '(va': 2, 'ls)': 1, 's))': 1, ')):': 1, '_1,': 1, 'i_2': 2, '_2 ': 1, '2 =': 1, '_1\n': 1, '_i ': 1, 'i =': 1, '= m': 1, ' ma': 1, 'max': 1, 'ax(': 1, 'x(v': 1, 's[i': 1, '[i]': 1, 'i] ': 1, ' + ': 1, '+ v': 1, '_2,': 1, '2, ': 1, '_1)': 1, ')\n ': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n v': 1, '_i\n': 1}"
Kamyu,elimination-game.py,"[0.1304, 0.2033, 0.1306, 0.0757, 0.0095, 0.0968, 0.3493, 0.1598, 0.0399, 0.0669, 0.0504, 0.2585, 0.3612, 0.0552, 0.1984, 0.0932, 0.1159, 0.0605, 0.2925, 0.3197, 0.1163, 0.1891, 0.0208, 0.198, 0.1916, 0.0725]","[0.0425, 0.4343, 0.1629, 0.1523, 0.1582, 0.117, 0.2369, 0.0583, 0.1195, 0.1047, 0.0582, 0.285, 0.0547, 0.0969, 0.1697, 0.2841, 0.0087, 0.4232, 0.1347, 0.1646, 0.171, 0.1163, 0.0044, 0.0355, 0.0605, 0.1564, 0.1021, 0.1206, 0.0753, 0.1711, 0.0158, 0.0566, 0.0249, 0.0175, 0.1694, 0.2008, 0.1216, 0.2297, 0.1314, 0.1782, 0.0731, 0.2395, 0.0399, 0.0532, 0.1231, 0.2063]","[0.0718, 0.0256, 0.0647, 0.1901, 0.1869, 0.1697, 0.282, 0.3454, 0.1076, 0.0284, 0.2822, 0.1171, 0.2219, 0.0931, 0.0028, 0.0863, 0.0282, 0.0876, 0.1666, 0.0705, 0.1549, 0.136, 0.127, 0.1445, 0.1966, 0.0979, 0.0092, 0.0505, 0.0003, 0.0293, 0.0933, 0.1966]","[0.1636, 0.0683, 0.1786, 0.2766, 0.0812, 0.2095, 0.0903, 0.2449, 0.2352, 0.1178, 0.1229, 0.1556, 0.104, 0.1075, 0.0267, 0.1381, 0.0565, 0.0101, 0.1144, 0.2519, 0.2842, 0.0084, 0.0591, 0.0614, 0.2053, 0.1904, 0.0052, 0.0078, 0.2985, 0.1136, 0.0558]","{'#': 2, 'time:': 1, 'o(logn)': 1, 'space:': 1, 'o(1)': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'lastremaining(self,': 1, 'n):': 1, '""""""': 2, ':type': 1, 'n:': 1, 'int': 2, ':rtype:': 1, 'start,': 1, 'step,': 1, 'direction': 3, '=': 1, '1,': 1, '2,': 1, '1': 1, 'while': 1, 'n': 2, '>': 1, '1:': 1, 'start': 2, '+=': 1, '*': 2, '(step': 1, '(n//2)': 1, '-': 1, 'step//2)': 1, '//=': 1, '2': 2, 'step': 1, '*=': 2, '-1': 1, 'return': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 3, ':  ': 1, '  O': 1, ' O(': 2, 'O(l': 1, '(lo': 1, 'log': 1, 'ogn': 1, 'gn)': 1, 'n)\n': 1, ')\n#': 1, '\n# ': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, 'O(1': 1, '(1)': 1, '1)\n': 1, ')\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 2, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 4, 'ion': 4, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 4, 'ct)': 1, 't):': 1, '):\n': 2, ':\n ': 3, '\n  ': 12, '   ': 84, '  d': 2, ' de': 1, 'def': 1, 'ef ': 1, 'f l': 1, ' la': 1, 'ast': 1, 'stR': 1, 'tRe': 1, 'Rem': 1, 'ema': 1, 'mai': 1, 'ain': 1, 'ini': 1, 'nin': 1, 'ing': 1, 'ng(': 1, 'g(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', n': 1, ' n)': 1, 'n):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e n': 2, ' n:': 1, 'n: ': 1, ': i': 2, ' in': 2, 'int': 2, 'nt\n': 2, 't\n ': 2, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, '  s': 3, ' st': 6, 'sta': 3, 'tar': 3, 'art': 3, 'rt,': 1, 't, ': 1, ', s': 1, 'ste': 4, 'tep': 4, 'ep,': 1, 'p, ': 1, ', d': 1, ' di': 3, 'dir': 3, 'ire': 3, 'rec': 3, 'cti': 3, 'on ': 3, 'n =': 1, ' = ': 1, '= 1': 1, ' 1,': 1, '1, ': 1, ', 2': 1, ' 2,': 1, '2, ': 1, ', 1': 1, ' 1\n': 1, '1\n ': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, ' n ': 2, 'n >': 1, ' > ': 1, '> 1': 1, ' 1:': 1, '1:\n': 1, 'rt ': 1, 't +': 1, ' +=': 1, '+= ': 1, '= d': 1, 'n *': 2, ' * ': 2, '* (': 2, ' (s': 1, '(st': 1, 'ep ': 2, 'p *': 2, ' (n': 1, '(n/': 1, 'n//': 1, '//2': 2, '/2)': 2, '2) ': 1, ') -': 1, ' - ': 1, '- s': 1, 'ep/': 1, 'p//': 1, '2)\n': 1, ')\n ': 1, '  n': 1, 'n /': 1, ' //': 1, '//=': 1, '/= ': 1, '= 2': 2, ' 2\n': 2, '2\n ': 2, ' *=': 2, '*= ': 2, '= -': 1, ' -1': 1, '-1\n': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n s': 1, 'rt\n': 1}"
Kamyu,grid-game.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'time:': 1, 'o(n)': 1, 'space:': 1, 'o(1)': 1, 'import': 1, 'itertools': 1, 'class': 1, 'solution(object):': 1, 'def': 1, 'gridgame(self,': 1, 'grid):': 1, '""""""': 2, ':type': 1, 'grid:': 1, 'list[list[int]]': 1, ':rtype:': 1, 'int': 1, 'result': 3, '=': 3, 'float(""inf"")': 1, 'left,': 1, 'right': 2, '0,': 1, 'sum(grid[0])': 1, 'for': 1, 'a,': 1, 'b': 2, 'in': 1, 'itertools.izip(grid[0],': 1, 'grid[1]):': 1, '-=': 1, 'a': 1, 'min(result,': 1, 'max(left,': 1, 'right))': 1, 'left': 1, '+=': 1, 'return': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 3, ':  ': 1, '  O': 1, ' O(': 2, 'O(n': 1, '(n)': 1, 'n)\n': 1, ')\n#': 1, '\n# ': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, 'O(1': 1, '(1)': 1, '1)\n': 1, ')\n\n': 1, '\n\ni': 1, '\nim': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't i': 1, ' it': 2, 'ite': 2, 'ter': 2, 'ert': 2, 'rto': 2, 'too': 2, 'ool': 2, 'ols': 2, 'ls\n': 1, 's\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 3, ':\n ': 3, '\n  ': 12, '   ': 80, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'f g': 1, ' gr': 4, 'gri': 6, 'rid': 6, 'idG': 1, 'dGa': 1, 'Gam': 1, 'ame': 1, 'me(': 1, 'e(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', g': 2, 'id)': 1, 'd):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e g': 1, 'id:': 1, 'd: ': 1, ': L': 1, ' Li': 1, 'Lis': 2, 'ist': 2, 'st[': 2, 't[L': 1, '[Li': 1, 't[i': 1, '[in': 1, 'int': 2, 'nt]': 1, 't]]': 1, ']]\n': 1, ']\n ': 1, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, ': i': 1, ' in': 2, 'nt\n': 1, 't\n ': 1, '  r': 4, ' re': 4, 'res': 4, 'esu': 4, 'sul': 4, 'ult': 4, 'lt ': 2, 't =': 3, ' = ': 3, '= f': 1, ' fl': 1, 'flo': 1, 'loa': 1, 'oat': 1, 'at(': 1, 't(""': 1, '(""i': 1, '""in': 1, 'inf': 1, 'nf""': 1, 'f"")': 1, '"")\n': 1, ')\n ': 3, '  l': 2, ' le': 2, 'lef': 3, 'eft': 3, 'ft,': 2, 't, ': 3, ', r': 2, ' ri': 3, 'rig': 3, 'igh': 3, 'ght': 3, 'ht ': 2, '= 0': 1, ' 0,': 1, '0, ': 1, ', s': 1, ' su': 1, 'sum': 1, 'um(': 1, 'm(g': 1, '(gr': 2, 'id[': 3, 'd[0': 2, '[0]': 2, '0])': 1, '])\n': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r a': 1, ' a,': 1, 'a, ': 1, ', b': 1, ' b ': 1, 'b i': 1, 'in ': 1, 'n i': 1, 'ls.': 1, 's.i': 1, '.iz': 1, 'izi': 1, 'zip': 1, 'ip(': 1, 'p(g': 1, '0],': 1, '], ': 1, 'd[1': 1, '[1]': 1, '1])': 1, ']):': 1, 't -': 1, ' -=': 1, '-= ': 1, '= a': 1, ' a\n': 1, 'a\n ': 1, '= m': 1, ' mi': 1, 'min': 1, 'in(': 1, 'n(r': 1, '(re': 1, 'lt,': 1, ', m': 1, ' ma': 1, 'max': 1, 'ax(': 1, 'x(l': 1, '(le': 1, 'ht)': 1, 't))': 1, '))\n': 1, 'ft ': 1, 't +': 1, ' +=': 1, '+= ': 1, '= b': 1, ' b\n': 1, 'b\n ': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n r': 1, 'lt\n': 1}"
Kamyu,hamming-distance.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'time:': 1, 'o(1)': 2, 'space:': 1, 'class': 1, 'solution(object):': 1, 'def': 2, 'hammingdistance(self,': 1, 'x,': 2, 'y):': 2, '""""""': 4, ':type': 4, 'x:': 2, 'int': 6, 'y:': 2, ':rtype:': 2, 'distance': 3, '=': 2, '0': 1, 'z': 3, 'x': 1, '^': 2, 'y': 1, 'while': 1, 'z:': 1, '+=': 1, '1': 2, '&=': 1, '-': 1, 'return': 2, 'hammingdistance2(self,': 1, 'bin(x': 1, ""y).count('1')"": 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 4, ':  ': 1, '  O': 1, ' O(': 2, 'O(1': 2, '(1)': 2, '1)\n': 2, ')\n#': 1, '\n# ': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, ')\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 3, ':\n ': 4, '\n  ': 19, '   ': 114, '  d': 4, ' de': 2, 'def': 2, 'ef ': 2, 'f h': 2, ' ha': 2, 'ham': 2, 'amm': 2, 'mmi': 2, 'min': 2, 'ing': 2, 'ngD': 2, 'gDi': 2, 'Dis': 2, 'ist': 5, 'sta': 5, 'tan': 5, 'anc': 5, 'nce': 5, 'ce(': 1, 'e(s': 1, '(se': 2, 'sel': 2, 'elf': 2, 'lf,': 2, 'f, ': 2, ', x': 2, ' x,': 2, 'x, ': 2, ', y': 2, ' y)': 3, 'y):': 2, '  ""': 4, ' """"': 4, '""""""': 4, '""""\n': 4, '""\n ': 4, '  :': 6, ' :t': 4, ':ty': 4, 'typ': 6, 'ype': 6, 'pe ': 4, 'e x': 2, ' x:': 2, 'x: ': 2, ': i': 6, ' in': 6, 'int': 6, 'nt\n': 6, 't\n ': 6, 'e y': 2, ' y:': 2, 'y: ': 2, ' :r': 2, ':rt': 2, 'rty': 2, 'pe:': 2, ' di': 3, 'dis': 3, 'ce ': 2, 'e =': 1, ' = ': 2, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  z': 2, ' z ': 3, 'z =': 1, '= x': 1, ' x ': 1, 'x ^': 2, ' ^ ': 2, '^ y': 2, ' y\n': 1, 'y\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e z': 1, ' z:': 1, 'z:\n': 1, 'e +': 1, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 2, '1\n ': 2, 'z &': 1, ' &=': 1, '&= ': 1, '= z': 1, 'z -': 1, ' - ': 1, '- 1': 1, '  r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n d': 1, 'ce\n': 1, 'e\n\n': 1, '\n\n ': 1, 'ce2': 1, 'e2(': 1, '2(s': 1, 'n b': 1, ' bi': 1, 'bin': 1, 'in(': 1, 'n(x': 1, '(x ': 1, 'y).': 1, ').c': 1, '.co': 1, 'cou': 1, 'oun': 1, 'unt': 1, 'nt(': 1, ""t('"": 1, ""('1"": 1, ""'1'"": 1, ""1')"": 1, ""')\n"": 1}"
Kamyu,house-robber.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 4, 'time:': 1, 'o(n)': 1, 'space:': 1, 'o(1)': 1, 'class': 1, 'solution(object):': 1, '@param': 1, 'num,': 1, 'a': 1, 'list': 1, 'of': 1, 'integer': 2, '@return': 1, 'an': 1, 'def': 1, 'rob(self,': 1, 'nums):': 1, '""""""': 2, ':type': 1, 'nums:': 2, 'list[int]': 1, ':rtype:': 1, 'int': 1, 'last,': 2, 'now': 3, '=': 2, '0,': 1, '0': 1, 'for': 1, 'i': 1, 'in': 1, 'now,': 1, 'max(last': 1, '+': 1, 'i,': 1, 'now)': 1, 'return': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 3, ':  ': 1, '  O': 1, ' O(': 2, 'O(n': 1, '(n)': 1, 'n)\n': 1, ')\n#': 1, '\n# ': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, 'O(1': 1, '(1)': 1, '1)\n': 1, ')\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 4, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 2, ':\n ': 3, '\n  ': 11, '   ': 58, '  #': 2, ' # ': 2, '# @': 2, ' @p': 1, '@pa': 1, 'par': 1, 'ara': 1, 'ram': 1, 'am ': 1, 'm n': 1, ' nu': 4, 'num': 4, 'um,': 1, 'm, ': 1, ', a': 1, ' a ': 1, 'a l': 1, ' li': 1, 'lis': 1, 'ist': 2, 'st ': 2, 't o': 1, ' of': 1, 'of ': 1, 'f i': 1, ' in': 4, 'int': 4, 'nte': 2, 'teg': 2, 'ege': 2, 'ger': 2, 'er\n': 2, 'r\n ': 2, ' @r': 1, '@re': 1, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n a': 1, ' an': 1, 'an ': 1, 'n i': 1, '  d': 1, ' de': 1, 'def': 1, 'ef ': 1, 'f r': 1, ' ro': 1, 'rob': 1, 'ob(': 1, 'b(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', n': 4, 'ums': 3, 'ms)': 1, 's):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e n': 1, 'ms:': 2, 's: ': 1, ': L': 1, ' Li': 1, 'Lis': 1, 'st[': 1, 't[i': 1, '[in': 1, 'nt]': 1, 't]\n': 1, ']\n ': 1, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, ': i': 1, 'nt\n': 1, 't\n ': 1, '  l': 2, ' la': 2, 'ast': 3, 'st,': 2, 't, ': 2, ' no': 5, 'now': 5, 'ow ': 2, 'w =': 2, ' = ': 2, '= 0': 1, ' 0,': 1, '0, ': 1, ', 0': 1, ' 0\n': 1, '0\n ': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, 'in ': 1, 'n n': 2, 's:\n': 1, '= n': 1, 'ow,': 1, 'w, ': 1, ', m': 1, ' ma': 1, 'max': 1, 'ax(': 1, 'x(l': 1, '(la': 1, 't +': 1, ' + ': 1, '+ i': 1, ' i,': 1, 'i, ': 1, 'ow)': 1, 'w)\n': 1, ')\n ': 1, '  r': 1, ' re': 1, 'ow\n': 1, 'w\n\n': 1}"
Kamyu,image-smoother.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 2, 'time:': 1, 'o(m': 1, '*': 1, 'n)': 1, 'space:': 1, 'o(1)': 1, 'class': 1, 'solution(object):': 1, 'def': 2, 'imagesmoother(self,': 1, 'm):': 1, '""""""': 2, ':type': 1, 'm:': 1, 'list[list[int]]': 2, ':rtype:': 1, 'getgray(m,': 2, 'i,': 2, 'j):': 1, 'total,': 1, 'count': 2, '=': 4, '0,': 1, '0.0': 1, 'for': 6, 'r': 1, 'in': 6, 'xrange(-1,': 2, '2):': 2, 'c': 2, 'ii,': 1, 'jj': 2, 'i': 2, '+': 2, 'r,': 1, 'j': 2, 'if': 1, '0': 2, '<=': 2, 'ii': 1, '<': 2, 'len(m)': 1, 'and': 1, 'len(m[0]):': 1, 'total': 1, '+=': 2, 'm[ii][jj]': 1, '1.0': 1, 'return': 2, 'int(total': 1, '/': 1, 'count)': 1, 'result': 2, '[[0': 1, '_': 2, 'xrange(len(m[0]))]': 1, 'xrange(len(m))]': 1, 'xrange(len(m)):': 1, 'xrange(len(m[0])):': 1, 'result[i][j]': 1, 'j)': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 3, ':  ': 1, '  O': 1, ' O(': 2, 'O(m': 1, '(m ': 1, 'm *': 1, ' * ': 1, '* n': 1, ' n)': 1, 'n)\n': 1, ')\n#': 1, '\n# ': 1, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, 'O(1': 1, '(1)': 1, '1)\n': 1, ')\n\n': 2, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on(': 1, 'n(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 8, ':\n ': 8, '\n  ': 19, '   ': 198, '  d': 2, ' de': 2, 'def': 2, 'ef ': 2, 'f i': 1, ' im': 1, 'ima': 1, 'mag': 1, 'age': 1, 'geS': 1, 'eSm': 1, 'Smo': 1, 'moo': 1, 'oot': 1, 'oth': 1, 'the': 1, 'her': 1, 'er(': 1, 'r(s': 1, '(se': 1, 'sel': 1, 'elf': 1, 'lf,': 1, 'f, ': 1, ', M': 1, ' M)': 1, 'M):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 2, ' :t': 1, ':ty': 1, 'typ': 2, 'ype': 2, 'pe ': 1, 'e M': 1, ' M:': 1, 'M: ': 1, ': L': 2, ' Li': 2, 'Lis': 4, 'ist': 4, 'st[': 4, 't[L': 2, '[Li': 2, 't[i': 3, '[in': 2, 'int': 3, 'nt]': 2, 't]]': 2, ']]\n': 2, ']\n ': 4, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, 'f g': 1, ' ge': 2, 'get': 2, 'etG': 2, 'tGr': 2, 'Gra': 2, 'ray': 2, 'ay(': 2, 'y(M': 2, '(M,': 2, 'M, ': 2, ', i': 2, ' i,': 2, 'i, ': 3, ', j': 4, ' j)': 2, 'j):': 1, '  t': 2, ' to': 2, 'tot': 3, 'ota': 3, 'tal': 3, 'al,': 1, 'l, ': 1, ', c': 1, ' co': 3, 'cou': 3, 'oun': 3, 'unt': 3, 'nt ': 2, 't =': 2, ' = ': 4, '= 0': 1, ' 0,': 1, '0, ': 1, ', 0': 1, ' 0.': 1, '0.0': 1, '.0\n': 2, '0\n ': 2, '  f': 4, ' fo': 6, 'for': 6, 'or ': 6, 'r r': 1, ' r ': 1, 'r i': 2, ' in': 7, 'in ': 6, 'n x': 6, ' xr': 6, 'xra': 6, 'ran': 6, 'ang': 6, 'nge': 6, 'ge(': 6, 'e(-': 2, '(-1': 2, '-1,': 2, '1, ': 2, ', 2': 2, ' 2)': 2, '2):': 2, 'r c': 1, ' c ': 1, 'c i': 1, '  i': 2, ' ii': 2, 'ii,': 1, ' jj': 2, 'jj ': 2, 'j =': 1, '= i': 2, ' i ': 2, 'i +': 1, ' + ': 2, '+ r': 1, ' r,': 1, 'r, ': 1, ' j ': 2, 'j +': 1, '+ c': 1, ' c\n': 1, 'c\n ': 1, ' if': 1, 'if ': 1, 'f 0': 1, ' 0 ': 2, '0 <': 2, ' <=': 2, '<= ': 2, 'ii ': 1, 'i <': 1, ' < ': 2, '< l': 2, ' le': 2, 'len': 6, 'en(': 6, 'n(M': 6, '(M)': 3, 'M) ': 1, ') a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd 0': 1, '= j': 1, 'j <': 1, '(M[': 3, 'M[0': 3, '[0]': 3, '0])': 3, ']):': 1, 'al ': 2, 'l +': 1, ' +=': 2, '+= ': 2, '= M': 1, ' M[': 1, 'M[i': 1, '[ii': 1, 'ii]': 1, 'i][': 2, '][j': 2, '[jj': 1, 'jj]': 1, 'j]\n': 1, '  c': 1, 't +': 1, '= 1': 1, ' 1.': 1, '1.0': 1, '  r': 4, ' re': 5, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n i': 1, 'nt(': 1, 't(t': 1, '(to': 1, 'l /': 1, ' / ': 1, '/ c': 1, 'nt)': 1, 't)\n': 1, '\n\n ': 1, 'res': 3, 'esu': 3, 'sul': 3, 'ult': 3, 'lt ': 1, '= [': 1, ' [[': 1, '[[0': 1, '[0 ': 1, '0 f': 1, 'r _': 2, ' _ ': 2, '_ i': 2, 'e(l': 4, '(le': 4, ']))': 2, '))]': 2, ')] ': 1, '] f': 1, 'M))': 2, ')]\n': 1, 'i i': 1, ')):': 2, 'r j': 1, 'j i': 1, 'lt[': 1, '[i]': 1, '[j]': 1, 'j] ': 1, '] =': 1, '= g': 1, 'j)\n': 1, ')\n ': 1, 'n r': 1, 'lt\n': 1}"
Kamyu,leaf-similar-trees.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 3, 'time:': 1, 'o(n)': 1, 'space:': 1, 'o(h)': 1, 'import': 1, 'itertools': 1, 'definition': 1, 'for': 4, 'a': 1, 'binary': 1, 'tree': 1, 'node.': 1, 'class': 2, 'treenode(object):': 1, 'def': 3, '__init__(self,': 1, 'x):': 1, 'self.val': 1, '=': 3, 'x': 1, 'self.left': 1, 'none': 2, 'self.right': 1, 'solution(object):': 1, 'leafsimilar(self,': 1, 'root1,': 1, 'root2):': 1, '""""""': 2, ':type': 2, 'root1:': 1, 'treenode': 2, 'root2:': 1, ':rtype:': 1, 'bool': 1, 'dfs(node):': 1, 'if': 2, 'not': 3, 'node:': 1, 'return': 2, 'node.left': 1, 'and': 1, 'node.right:': 1, 'yield': 3, 'node.val': 1, 'i': 4, 'in': 3, 'dfs(node.left):': 1, 'dfs(node.right):': 1, 'all(a': 1, '==': 1, 'b': 2, 'a,': 1, 'itertools.izip_longest(dfs(root1),': 1, 'dfs(root2)))': 1}","{'# T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me:': 1, 'e: ': 3, ':  ': 1, '  O': 1, ' O(': 2, 'O(n': 1, '(n)': 1, 'n)\n': 1, ')\n#': 1, '\n# ': 2, '# S': 1, ' Sp': 1, 'Spa': 1, 'pac': 1, 'ace': 1, 'ce:': 1, ': O': 1, 'O(h': 1, '(h)': 1, 'h)\n': 1, ')\n\n': 1, '\n\ni': 1, '\nim': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't i': 1, ' it': 2, 'ite': 2, 'ter': 2, 'ert': 2, 'rto': 2, 'too': 2, 'ool': 3, 'ols': 2, 'ls\n': 1, 's\n\n': 1, '\n\n\n': 2, '\n\n#': 1, '# D': 1, ' De': 1, 'Def': 1, 'efi': 1, 'fin': 1, 'ini': 2, 'nit': 2, 'iti': 1, 'tio': 2, 'ion': 2, 'on ': 1, 'n f': 1, ' fo': 4, 'for': 4, 'or ': 4, 'r a': 2, ' a ': 1, 'a b': 1, ' bi': 1, 'bin': 1, 'ina': 1, 'nar': 1, 'ary': 1, 'ry ': 1, 'y t': 1, ' tr': 1, 'tre': 1, 'ree': 4, 'ee ': 1, 'e n': 1, ' no': 8, 'nod': 8, 'ode': 11, 'de.': 6, 'e.\n': 1, '.\nc': 1, '\ncl': 2, 'cla': 2, 'las': 2, 'ass': 2, 'ss ': 2, 's T': 1, ' Tr': 3, 'Tre': 3, 'eeN': 3, 'eNo': 3, 'Nod': 3, 'de(': 1, 'e(o': 1, '(ob': 2, 'obj': 2, 'bje': 2, 'jec': 2, 'ect': 2, 'ct)': 2, 't):': 4, '):\n': 7, ':\n ': 9, '\n  ': 21, '   ': 177, '  d': 3, ' de': 3, 'def': 3, 'ef ': 3, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 2, 'sel': 5, 'elf': 5, 'lf,': 2, 'f, ': 2, ', x': 1, ' x)': 1, 'x):': 1, '  s': 3, ' se': 3, 'lf.': 3, 'f.v': 1, '.va': 2, 'val': 2, 'al ': 1, 'l =': 1, ' = ': 3, '= x': 1, ' x\n': 1, 'x\n ': 1, 'f.l': 1, '.le': 3, 'lef': 3, 'eft': 3, 'ft ': 2, 't =': 2, '= N': 2, ' No': 2, 'Non': 2, 'one': 2, 'ne\n': 2, 'e\n ': 3, 'f.r': 1, '.ri': 3, 'rig': 3, 'igh': 3, 'ght': 3, 'ht ': 1, 'e\n\n': 1, '\n\nc': 1, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'on(': 1, 'n(o': 1, 'f l': 1, ' le': 1, 'lea': 1, 'eaf': 1, 'afS': 1, 'fSi': 1, 'Sim': 1, 'imi': 1, 'mil': 1, 'ila': 1, 'lar': 1, 'ar(': 1, 'r(s': 1, ', r': 2, ' ro': 4, 'roo': 6, 'oot': 6, 'ot1': 3, 't1,': 1, '1, ': 1, 'ot2': 3, 't2)': 2, '2):': 1, '  ""': 2, ' """"': 2, '""""""': 2, '""""\n': 2, '""\n ': 2, '  :': 3, ' :t': 2, ':ty': 2, 'typ': 3, 'ype': 3, 'pe ': 2, 'e r': 2, 't1:': 1, '1: ': 1, ': T': 2, 'de\n': 2, 't2:': 1, '2: ': 1, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, ': b': 1, ' bo': 1, 'boo': 1, 'ol\n': 1, 'l\n ': 2, 'f d': 1, ' df': 4, 'dfs': 5, 'fs(': 5, 's(n': 3, '(no': 3, 'de)': 1, 'e):': 1, '  i': 3, ' if': 2, 'if ': 2, 'f n': 2, 'not': 3, 'ot ': 3, 't n': 3, 'de:': 1, 'e:\n': 1, '  r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn\n': 1, 'n\n ': 2, 'e.l': 2, 't a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd n': 2, 'e.r': 2, 'ht:': 1, 't:\n': 1, '  y': 3, ' yi': 3, 'yie': 3, 'iel': 3, 'eld': 3, 'ld ': 3, 'e.v': 1, 'al\n': 1, '  f': 2, 'r i': 2, ' i ': 2, 'i i': 2, ' in': 3, 'in ': 2, 'n d': 2, 'ft)': 1, 'd i': 2, ' i\n': 2, 'i\n ': 2, 'ht)': 1, 'rn ': 1, 'n a': 1, ' al': 1, 'all': 1, 'll(': 1, 'l(a': 1, '(a ': 1, 'a =': 1, ' ==': 1, '== ': 1, '= b': 1, ' b ': 2, 'b f': 1, ' a,': 1, 'a, ': 1, ', b': 1, 'b i': 1, 'in\n': 1, 'ls.': 1, 's.i': 1, '.iz': 1, 'izi': 1, 'zip': 1, 'ip_': 1, 'p_l': 1, '_lo': 1, 'lon': 1, 'ong': 1, 'nge': 1, 'ges': 1, 'est': 1, 'st(': 1, 't(d': 1, '(df': 1, 's(r': 2, '(ro': 2, 't1)': 1, '1),': 1, '), ': 1, ', d': 1, '2))': 1, ')))': 1, '))\n': 1}"
Kenneth Reitz Archive,baisics.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 7, '-*-': 2, 'coding:': 1, 'utf-8': 1, '""""""': 2, 'requests.basics': 1, '~~~~~~~~~~~~~~~': 1, 'this': 1, 'modules': 1, 'covers': 1, 'the': 1, 'basics.': 1, 'import': 8, 'chardet': 1, 'sys': 1, '---------': 2, 'specifics': 1, 'from': 6, 'urllib.parse': 1, '(': 2, 'urlparse,': 1, 'urlunparse,': 1, 'urljoin,': 1, 'urlsplit,': 1, 'urlencode,': 1, 'quote,': 1, 'unquote,': 1, 'quote_plus,': 1, 'unquote_plus,': 1, 'urldefrag,': 1, ')': 2, 'urllib.request': 1, 'parse_http_list,': 1, 'getproxies,': 1, 'proxy_bypass,': 1, 'proxy_bypass_environment,': 1, 'getproxies_environment,': 1, 'http': 1, 'cookiejar': 1, 'as': 1, 'cookielib': 1, 'http.cookies': 1, 'morsel': 1, 'io': 1, 'stringio': 1, 'collections': 1, 'ordereddict': 1, 'builtin_str': 1, '=': 6, 'str': 3, 'type:': 3, 'ignore': 3, 'bytes': 2, 'basestring': 1, '(str,': 1, 'bytes)': 1, 'numeric_types': 1, '(int,': 1, 'float)': 1, 'integer_types': 1, '(int,)': 1}","{'# -': 3, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 5, 'cod': 2, 'odi': 1, 'din': 1, 'ing': 3, 'ng:': 1, 'g: ': 1, ': u': 1, ' ut': 1, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\n""': 1, '\n""""': 2, '""""""': 2, '""""\n': 2, '""\nr': 1, '\nre': 1, 'req': 2, 'equ': 2, 'que': 2, 'ues': 2, 'est': 3, 'sts': 1, 'ts.': 1, 's.b': 1, '.ba': 1, 'bas': 3, 'asi': 2, 'sic': 2, 'ics': 3, 'cs\n': 2, 's\n~': 1, '\n~~': 1, '~~~': 13, '~~\n': 1, '~\n\n': 1, '\n\nT': 1, '\nTh': 1, 'Thi': 1, 'his': 1, 'is ': 1, 's m': 1, ' mo': 1, 'mod': 1, 'odu': 1, 'dul': 1, 'ule': 1, 'les': 1, 'es ': 6, 's c': 2, 'cov': 1, 'ove': 1, 'ver': 1, 'ers': 1, 'rs ': 1, 's t': 1, ' th': 1, 'the': 1, 'he ': 1, 'e b': 1, ' ba': 1, 'cs.': 1, 's.\n': 1, '.\n""': 1, '""\n\n': 1, '\n\ni': 2, '\nim': 2, 'imp': 8, 'mpo': 8, 'por': 8, 'ort': 8, 'rt ': 8, 't c': 2, ' ch': 1, 'cha': 1, 'har': 1, 'ard': 1, 'rde': 2, 'det': 1, 'et\n': 1, 't\n\n': 2, 't s': 1, ' sy': 1, 'sys': 1, 'ys\n': 1, 's\n\n': 1, '\n\n#': 1, '\n# ': 3, ' --': 2, '---': 14, '--\n': 2, '-\n#': 1, '# S': 1, ' Sp': 1, 'Spe': 1, 'pec': 1, 'eci': 1, 'cif': 1, 'ifi': 1, 'fic': 1, 's\n#': 1, '-\nf': 1, '\nfr': 6, 'fro': 6, 'rom': 6, 'om ': 6, 'm u': 2, ' ur': 8, 'url': 8, 'rll': 2, 'lli': 2, 'lib': 3, 'ib.': 2, 'b.p': 1, '.pa': 1, 'par': 4, 'ars': 4, 'rse': 5, 'se ': 1, 'e i': 1, ' im': 6, 't (': 2, ' (\n': 2, '(\n ': 2, '\n  ': 15, '   ': 30, '  u': 8, 'rlp': 1, 'lpa': 1, 'se,': 2, 'e,\n': 5, ',\n ': 13, 'rlu': 1, 'lun': 1, 'unp': 1, 'npa': 1, 'rlj': 1, 'ljo': 1, 'joi': 1, 'oin': 1, 'in,': 1, 'n,\n': 1, 'rls': 1, 'lsp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it,': 1, 't,\n': 4, 'rle': 1, 'len': 1, 'enc': 1, 'nco': 1, 'ode': 1, 'de,': 1, '  q': 2, ' qu': 2, 'quo': 4, 'uot': 4, 'ote': 4, 'te,': 2, ' un': 2, 'unq': 2, 'nqu': 2, 'te_': 2, 'e_p': 2, '_pl': 2, 'plu': 2, 'lus': 2, 'us,': 2, 's,\n': 4, 'rld': 1, 'lde': 1, 'def': 1, 'efr': 1, 'fra': 1, 'rag': 1, 'ag,': 1, 'g,\n': 1, ',\n)': 2, '\n)\n': 2, ')\nf': 2, 'b.r': 1, '.re': 1, 'st ': 1, 't i': 1, '  p': 3, ' pa': 1, 'se_': 1, 'e_h': 1, '_ht': 1, 'htt': 3, 'ttp': 3, 'tp_': 1, 'p_l': 1, '_li': 1, 'lis': 1, 'ist': 1, 'st,': 1, '  g': 2, ' ge': 2, 'get': 2, 'etp': 2, 'tpr': 2, 'pro': 4, 'rox': 4, 'oxi': 2, 'xie': 2, 'ies': 3, 'es,': 1, ' pr': 2, 'oxy': 2, 'xy_': 2, 'y_b': 2, '_by': 2, 'byp': 2, 'ypa': 2, 'pas': 2, 'ass': 2, 'ss,': 1, 'ss_': 1, 's_e': 2, '_en': 2, 'env': 2, 'nvi': 2, 'vir': 2, 'iro': 2, 'ron': 2, 'onm': 2, 'nme': 2, 'men': 2, 'ent': 2, 'nt,': 4, 'es_': 1, 'm h': 2, ' ht': 2, 'tp ': 1, 'p i': 1, 'coo': 3, 'ook': 3, 'oki': 3, 'kie': 3, 'iej': 1, 'eja': 1, 'jar': 1, 'ar ': 1, 'r a': 1, ' as': 1, 'as ': 1, 'iel': 1, 'eli': 1, 'ib\n': 1, 'b\nf': 1, 'tp.': 1, 'p.c': 1, '.co': 1, 's i': 2, 't M': 1, ' Mo': 1, 'Mor': 1, 'ors': 1, 'sel': 1, 'el\n': 1, 'l\nf': 1, 'm i': 1, ' io': 1, 'io ': 1, 'o i': 1, 't S': 1, ' St': 1, 'Str': 1, 'tri': 2, 'rin': 2, 'ngI': 1, 'gIO': 1, 'IO\n': 1, 'O\nf': 1, 'm c': 1, 'col': 1, 'oll': 1, 'lle': 1, 'lec': 1, 'ect': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'ons': 1, 'ns ': 1, 't O': 1, ' Or': 1, 'Ord': 1, 'der': 1, 'ere': 1, 'red': 1, 'edD': 1, 'dDi': 1, 'Dic': 1, 'ict': 1, 'ct\n': 1, '\n\nb': 1, '\nbu': 1, 'bui': 1, 'uil': 1, 'ilt': 1, 'lti': 1, 'tin': 1, 'in_': 1, 'n_s': 1, '_st': 1, 'str': 6, 'tr ': 4, 'r =': 2, ' = ': 6, '= s': 2, ' st': 2, 'r  ': 2, '  #': 3, ' # ': 3, '# t': 3, ' ty': 3, 'typ': 5, 'ype': 5, 'pe:': 3, 'e: ': 3, ': i': 3, ' ig': 3, 'ign': 3, 'gno': 3, 'nor': 3, 'ore': 3, 're\n': 3, 'e\ns': 1, '\nst': 1, 'e\nb': 2, '\nby': 1, 'byt': 3, 'yte': 3, 'tes': 3, 's =': 3, '= b': 1, ' by': 2, 's  ': 1, '\nba': 1, 'ase': 1, 'ses': 1, 'ng ': 1, 'g =': 1, '= (': 3, ' (s': 1, '(st': 1, 'tr,': 1, 'r, ': 1, ', b': 1, 'es)': 1, 's)\n': 1, ')\nn': 1, '\nnu': 1, 'num': 1, 'ume': 1, 'mer': 1, 'eri': 1, 'ric': 1, 'ic_': 1, 'c_t': 1, '_ty': 2, 'pes': 2, ' (i': 2, '(in': 2, 'int': 3, 't, ': 1, ', f': 1, ' fl': 1, 'flo': 1, 'loa': 1, 'oat': 1, 'at)': 1, 't)\n': 1, ')\ni': 1, '\nin': 1, 'nte': 1, 'teg': 1, 'ege': 1, 'ger': 1, 'er_': 1, 'r_t': 1, 't,)': 1, ',)\n': 1}"
Kenneth Reitz Archive,depreced.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 3, '-*-': 2, 'coding:': 1, 'utf-8': 1, '""""""a': 1, 'collection': 1, 'of': 1, 'functions': 1, 'deprecated': 3, 'in': 6, 'requests.utils.""""""': 1, 'import': 7, 're': 1, 'sys': 1, 'from': 8, 'requests': 3, 'utils': 1, 'find_charset': 1, '=': 13, 're.compile(br\'<meta.*?charset=[""\\\']*(.+?)[""\\\'>]\',': 1, 'flags=re.i).findall': 1, 'find_pragma': 1, 're.compile(': 1, 'br\'<meta.*?content=[""\\\']*;?charset=(.+?)[""\\\'>]\',': 1, 'flags=re.i': 1, ').findall': 1, 'find_xml': 1, 're.compile(br\'^<\\?xml.*?encoding=[""\\\']*(.+?)[""\\\'>]\').findall': 1, 'def': 2, 'get_encodings_from_content(content):': 1, '""""""return': 2, 'encodings': 9, 'given': 1, 'content': 4, 'string.': 1, '..': 2, 'code-block::': 2, 'python': 2, 'requests_toolbelt.utils': 2, 'r': 2, 'requests.get(url)': 2, 'deprecated.get_encodings_from_content(r)': 1, ':param': 2, 'content:': 2, 'bytestring': 1, 'to': 4, 'extract': 1, ':type': 2, 'bytes': 1, ':return:': 1, 'detected': 1, 'the': 4, 'provided': 1, ':rtype:': 1, 'list(str)': 1, '""""""': 2, 'find_charset(content)': 1, '+': 2, 'find_pragma(content)': 1, 'find_xml(content)': 1, 'if': 5, '(3,': 1, '0)': 1, '<=': 1, 'sys.version_info': 1, '<': 1, '(4,': 1, '0):': 1, '[encoding.decode(""utf8"")': 1, 'for': 2, 'encoding': 3, 'encodings]': 1, 'return': 5, 'get_unicode_from_response(response):': 1, 'requested': 1, 'back': 1, 'unicode.': 1, 'this': 1, 'will': 2, 'first': 1, 'attempt': 1, 'retrieve': 1, 'response': 2, 'headers.': 1, 'that': 1, 'fails,': 1, 'it': 1, 'use': 1, ':func:`requests_toolbelt.utils.deprecated.get_encodings_from_content`': 1, 'determine': 1, 'html': 1, 'elements.': 1, 'text': 1, 'deprecated.get_unicode_from_response(r)': 1, 'response:': 2, 'object': 1, 'get': 1, 'unicode': 1, 'from.': 1, 'requests.models.response': 1, 'tried_encodings': 1, 'set()': 1, 'try': 1, 'charset': 1, 'content-type': 1, 'utils.get_encoding_from_headers(response.headers)': 1, 'encoding:': 2, 'try:': 3, 'str(response.content,': 3, 'encoding)': 1, 'except': 3, 'unicodeerror:': 2, 'tried_encodings.add(encoding.lower())': 1, 'get_encodings_from_content(response.content)': 1, '_encoding': 3, 'encodings:': 1, '_encoding.lower()': 1, 'tried_encodings:': 1, 'continue': 1, '_encoding)': 1, 'tried_encodings.add(_encoding)': 1, 'fall': 1, 'back:': 1, 'encoding,': 1, 'errors=""replace"")': 1, 'typeerror:': 1, 'pass': 1, 'response.text': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 12, 'cod': 46, 'odi': 37, 'din': 37, 'ing': 39, 'ng:': 3, 'g: ': 1, ': u': 1, ' ut': 3, 'utf': 2, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\n""': 1, '\n""""': 1, '""""""': 6, '""""A': 1, '""A ': 1, 'A c': 1, 'col': 1, 'oll': 1, 'lle': 1, 'lec': 1, 'ect': 3, 'cti': 2, 'tio': 2, 'ion': 3, 'on ': 1, 'n o': 1, ' of': 1, 'of ': 1, 'f f': 1, ' fu': 1, 'fun': 2, 'unc': 2, 'nct': 1, 'ons': 15, 'ns ': 1, 's d': 2, ' de': 7, 'dep': 6, 'epr': 6, 'pre': 6, 'rec': 6, 'eca': 6, 'cat': 6, 'ate': 6, 'ted': 8, 'ed ': 4, 'd i': 2, ' in': 6, 'in ': 6, 'n r': 2, ' re': 24, 'req': 11, 'equ': 11, 'que': 11, 'ues': 11, 'est': 12, 'sts': 10, 'ts.': 5, 's.u': 1, '.ut': 4, 'uti': 6, 'til': 6, 'ils': 7, 'ls.': 4, 's.""': 1, '.""""': 1, '""""\n': 3, '""\ni': 1, '\nim': 2, 'imp': 7, 'mpo': 7, 'por': 7, 'ort': 7, 'rt ': 7, 't r': 3, 're\n': 1, 'e\ni': 1, 't s': 2, ' sy': 2, 'sys': 2, 'ys\n': 1, 's\n\n': 3, '\n\nf': 4, '\nfr': 1, 'fro': 16, 'rom': 16, 'om ': 7, 'm r': 4, 'ts ': 1, 's i': 3, ' im': 5, 't u': 2, 'ls\n': 1, '\nfi': 3, 'fin': 9, 'ind': 9, 'nd_': 6, 'd_c': 2, '_ch': 2, 'cha': 5, 'har': 5, 'ars': 5, 'rse': 5, 'set': 6, 'et ': 3, 't =': 2, ' = ': 13, '= r': 5, 're.': 5, 'e.c': 7, '.co': 7, 'com': 3, 'omp': 3, 'mpi': 3, 'pil': 3, 'ile': 3, 'le(': 3, 'e(b': 2, '(br': 2, ""br'"": 3, ""r'<"": 2, ""'<m"": 2, '<me': 2, 'met': 2, 'eta': 2, 'ta.': 2, 'a.*': 2, '.*?': 3, '*?c': 2, '?ch': 2, 'et=': 2, 't=[': 2, '=[""': 3, '[""\\': 6, '""\\\'': 6, ""\\']"": 3, ""']*"": 3, ']*(': 2, '*(.': 2, '(.+': 3, '.+?': 3, '+?)': 3, '?)[': 3, ')[""': 3, ""\\'>"": 3, ""'>]"": 3, "">]'"": 3, ""]',"": 2, ""', "": 2, ', f': 2, ' fl': 2, 'fla': 2, 'lag': 2, 'ags': 2, 'gs=': 2, 's=r': 2, '=re': 2, 'e.I': 2, '.I)': 1, 'I).': 1, ').f': 3, '.fi': 3, 'nda': 3, 'dal': 3, 'all': 4, 'll\n': 3, 'l\n\n': 3, 'd_p': 2, '_pr': 2, 'pra': 2, 'rag': 2, 'agm': 2, 'gma': 2, 'ma ': 1, 'a =': 1, 'e(\n': 1, '(\n ': 1, '\n  ': 53, '   ': 230, '  b': 1, ' br': 1, '?co': 1, 'con': 21, 'ont': 21, 'nte': 20, 'ten': 20, 'ent': 21, 'nt=': 1, ']*;': 1, '*;?': 1, ';?c': 1, 't=(': 1, '=(.': 1, '.I\n': 1, 'I\n)': 1, '\n).': 1, 'd_x': 2, '_xm': 2, 'xml': 3, 'ml ': 1, 'l =': 1, ""r'^"": 1, ""'^<"": 1, '^<\\': 1, '<\\?': 1, '\\?x': 1, '?xm': 1, 'ml.': 1, 'l.*': 1, '*?e': 1, '?en': 1, 'enc': 36, 'nco': 36, 'ng=': 1, 'g=[': 1, ""]')"": 1, ""')."": 1, '\n\n\n': 2, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f g': 2, ' ge': 4, 'get': 10, 'et_': 7, 't_e': 5, '_en': 15, 'ngs': 19, 'gs_': 4, 's_f': 4, '_fr': 7, 'om_': 7, 'm_c': 4, '_co': 4, 'nt(': 3, 't(c': 2, '(co': 4, 'nt)': 5, 't):': 1, '):\n': 3, ':\n ': 14, '  ""': 4, ' """"': 4, '""""R': 2, '""Re': 2, 'Ret': 2, 'etu': 8, 'tur': 8, 'urn': 8, 'rn ': 7, 'n e': 4, ' en': 18, 'gs ': 9, 's f': 3, ' fr': 8, 'm g': 1, ' gi': 1, 'giv': 1, 'ive': 1, 'ven': 1, 'en ': 1, 'n c': 1, 'nt ': 3, ' st': 4, 'str': 6, 'tri': 7, 'rin': 2, 'ng.': 4, 'g.\n': 1, '.\n\n': 3, '\n\n ': 14, '  .': 2, ' ..': 2, '.. ': 2, '. c': 2, 'ode': 10, 'de-': 2, 'e-b': 2, '-bl': 2, 'blo': 2, 'loc': 2, 'ock': 2, 'ck:': 3, 'k::': 2, ':: ': 2, ': p': 2, ' py': 2, 'pyt': 2, 'yth': 2, 'tho': 2, 'hon': 2, 'on\n': 2, 'n\n\n': 2, '  i': 6, 'ts\n': 2, 's\n ': 4, '  f': 3, 'ts_': 3, 's_t': 3, '_to': 3, 'too': 3, 'ool': 3, 'olb': 3, 'lbe': 3, 'bel': 3, 'elt': 3, 'lt.': 3, 't.u': 3, 'ls ': 2, 't d': 2, 'ed\n': 2, 'd\n\n': 2, '  r': 7, ' r ': 2, 'r =': 2, 's.g': 3, '.ge': 6, 'et(': 4, 't(u': 2, '(ur': 2, 'url': 2, 'rl)': 2, 'l)\n': 2, ')\n ': 8, '  e': 8, 's =': 5, '= d': 2, 'ed.': 3, 'd.g': 3, 't(r': 2, '(r)': 2, 'r)\n': 3, ')\n\n': 7, '  :': 7, ' :p': 2, ':pa': 2, 'par': 2, 'ara': 2, 'ram': 2, 'am ': 2, 'm c': 2, 'nt:': 2, 't: ': 2, ': b': 2, ' by': 2, 'byt': 2, 'yte': 2, 'tes': 2, 'ng ': 7, 'g t': 1, ' to': 4, 'to ': 4, 'o e': 1, ' ex': 4, 'ext': 3, 'xtr': 1, 'tra': 1, 'rac': 1, 'act': 1, 'ct ': 2, 't e': 1, 'om\n': 1, 'm\n ': 1, ' :t': 2, ':ty': 2, 'typ': 4, 'ype': 5, 'pe ': 2, 'e c': 2, 'es\n': 1, ' :r': 2, ':re': 1, 'ret': 7, 'rn:': 1, 'n: ': 1, ': e': 1, 'det': 2, 'ete': 2, 'tec': 1, 'cte': 1, 'n t': 3, ' th': 5, 'the': 4, 'he ': 4, 'e p': 1, ' pr': 1, 'pro': 1, 'rov': 1, 'ovi': 1, 'vid': 1, 'ide': 1, 'ded': 1, 'd c': 2, 'nt\n': 1, 't\n ': 1, ':rt': 1, 'rty': 1, 'pe:': 1, 'e: ': 3, ': l': 1, ' li': 1, 'lis': 1, 'ist': 1, 'st(': 1, 't(s': 1, '(st': 1, 'tr)': 1, '""\n ': 2, '= f': 1, ' fi': 4, 't) ': 2, ') +': 2, ' + ': 2, '+ f': 2, 'ma(': 1, 'a(c': 1, 'ml(': 1, 'l(c': 1, 't)\n': 2, ' if': 4, 'if ': 4, 'f (': 1, ' (3': 1, '(3,': 1, '3, ': 1, ', 0': 2, ' 0)': 2, '0) ': 1, ') <': 1, ' <=': 1, '<= ': 1, '= s': 2, 'ys.': 1, 's.v': 1, '.ve': 1, 'ver': 1, 'ers': 4, 'rsi': 1, 'sio': 1, 'on_': 1, 'n_i': 1, '_in': 1, 'inf': 1, 'nfo': 1, 'fo ': 1, 'o <': 1, ' < ': 1, '< (': 1, ' (4': 1, '(4,': 1, '4, ': 1, '0):': 1, '= [': 1, ' [e': 1, '[en': 1, 'g.d': 1, '.de': 2, 'dec': 1, 'eco': 1, 'de(': 1, 'e(""': 1, '(""u': 1, '""ut': 1, 'tf8': 1, 'f8""': 1, '8"")': 1, '"") ': 1, ') f': 1, ' fo': 2, 'for': 2, 'or ': 2, 'r e': 1, 'g i': 3, 'gs]': 1, 's]\n': 1, ']\n ': 1, 'gs\n': 1, 't_u': 2, '_un': 2, 'uni': 4, 'nic': 6, 'ico': 6, 'de_': 2, 'e_f': 2, 'm_r': 2, '_re': 2, 'res': 12, 'esp': 14, 'spo': 14, 'pon': 14, 'nse': 14, 'se(': 2, 'e(r': 2, '(re': 6, 'se)': 1, 'e):': 1, 'e r': 3, 'ste': 1, 't b': 1, ' ba': 2, 'bac': 2, 'ack': 2, 'ck ': 1, 'k i': 1, 'n u': 1, ' un': 2, 'de.': 1, 'e.\n': 1, '  T': 1, ' Th': 1, 'Thi': 1, 'his': 1, 'is ': 1, 's w': 1, ' wi': 2, 'wil': 2, 'ill': 2, 'll ': 3, 'l f': 1, 'fir': 1, 'irs': 1, 'rst': 1, 'st ': 1, 't a': 1, ' at': 1, 'att': 1, 'tte': 1, 'tem': 1, 'emp': 1, 'mpt': 1, 'pt ': 4, 't t': 2, 'o r': 1, 'etr': 1, 'rie': 5, 'iev': 1, 'eve': 1, 've ': 1, 'e t': 1, 'e e': 2, 'g f': 1, 'm t': 1, 'se\n': 3, 'e\n ': 5, '  h': 1, ' he': 1, 'hea': 3, 'ead': 3, 'ade': 3, 'der': 3, 'rs.': 1, 's. ': 1, '. I': 1, ' If': 1, 'If ': 1, 'f t': 1, 'tha': 1, 'hat': 1, 'at ': 1, 't f': 3, ' fa': 1, 'fai': 1, 'ail': 1, 'ls,': 1, 's, ': 1, ', i': 1, ' it': 1, 'it ': 1, 't w': 1, 'l u': 1, ' us': 1, 'use': 1, ' :f': 1, ':fu': 1, 'nc:': 1, 'c:`': 1, ':`r': 1, '`re': 1, 's.d': 1, 'nt`': 1, 't`\n': 1, '`\n ': 1, '  t': 8, 'o d': 1, 'ter': 1, 'erm': 1, 'rmi': 1, 'min': 1, 'ine': 1, 'ne ': 1, 'm H': 1, ' HT': 1, 'HTM': 1, 'TML': 1, 'ML ': 1, 'L e': 1, ' el': 1, 'ele': 1, 'lem': 1, 'eme': 1, 'men': 1, 'nts': 1, 's.\n': 1, ' te': 1, 'tex': 2, 'xt ': 1, 'se:': 2, ': R': 1, ' Re': 1, 'Res': 2, 'se ': 1, 'e o': 1, ' ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'o g': 1, 'de ': 1, 'om.': 1, 'm.\n': 1, '.\n ': 1, ': r': 1, 's.m': 1, '.mo': 1, 'mod': 1, 'del': 1, 'els': 1, 's.R': 1, '.Re': 1, ' tr': 7, 'ied': 4, 'ed_': 4, 'd_e': 4, ' se': 1, 't()': 1, '()\n': 2, '  #': 2, ' # ': 2, '# T': 1, ' Tr': 1, 'Try': 1, 'ry ': 1, 'y c': 1, ' ch': 1, 'nt-': 1, 't-t': 1, '-ty': 1, 'pe\n': 1, 'g =': 2, '= u': 1, 'ng_': 1, 'g_f': 1, 'm_h': 1, '_he': 1, 'rs(': 1, 's(r': 1, 'se.': 6, 'e.h': 1, '.he': 1, 'rs)': 1, 's)\n': 1, 'f e': 2, 'g:\n': 2, 'try': 3, 'ry:': 3, 'y:\n': 3, 'n s': 3, 'tr(': 3, 'r(r': 3, 'nt,': 3, 't, ': 3, ', e': 3, 'ng)': 3, 'g)\n': 3, 'exc': 3, 'xce': 3, 'cep': 3, 'ept': 3, 't U': 2, ' Un': 2, 'Uni': 2, 'deE': 2, 'eEr': 3, 'Err': 3, 'rro': 4, 'ror': 4, 'or:': 3, 'r:\n': 3, 'gs.': 2, 's.a': 2, '.ad': 2, 'add': 2, 'dd(': 2, 'd(e': 1, '(en': 1, 'g.l': 2, '.lo': 2, 'low': 2, 'owe': 2, 'wer': 2, 'er(': 2, 'r()': 2, '())': 1, '))\n': 1, '= g': 1, 'r _': 1, ' _e': 5, 'gs:': 2, 's:\n': 2, '  _': 1, '= _': 1, 'f _': 1, '  c': 1, 'nti': 1, 'tin': 1, 'inu': 1, 'nue': 1, 'ue\n': 1, ', _': 1, 'd(_': 1, '(_e': 1, '# F': 1, ' Fa': 1, 'Fal': 1, 'l b': 1, 'k:\n': 1, 'ng,': 1, 'g, ': 1, ' er': 1, 'err': 1, 'ors': 1, 'rs=': 1, 's=""': 1, '=""r': 1, '""re': 1, 'rep': 1, 'epl': 1, 'pla': 1, 'lac': 1, 'ace': 1, 'ce""': 1, 'e"")': 1, '"")\n': 1, 't T': 1, ' Ty': 1, 'Typ': 1, 'peE': 1, '  p': 1, ' pa': 1, 'pas': 1, 'ass': 1, 'ss\n': 1, 'e.t': 1, '.te': 1, 'xt\n': 1}"
Kenneth Reitz Archive,extenetions.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, '-*-': 2, 'coding:': 1, 'utf-8': 1, '""""""': 5, 'requests.exceptions': 1, '~~~~~~~~~~~~~~~~~~~': 1, 'this': 4, 'module': 1, 'contains': 1, 'the': 4, 'set': 1, 'of': 2, ""requests'"": 1, 'exceptions.': 1, 'from': 1, 'urllib3.exceptions': 1, 'import': 1, 'httperror': 1, 'as': 1, 'basehttperror': 1, 'class': 24, 'requestexception(ioerror):': 1, '""""""there': 1, 'was': 6, 'an': 3, 'ambiguous': 1, 'exception': 1, 'that': 2, 'occurred': 1, 'while': 2, 'handling': 1, 'your': 1, 'request.': 1, 'def': 1, '__init__(self,': 1, '*args,': 1, '**kwargs):': 1, '""""""initialize': 1, 'requestexception': 1, 'with': 1, '`request`': 1, 'and': 4, '`response`': 1, 'objects.""""""': 1, 'response': 5, '=': 4, 'kwargs.pop(""response"",': 1, 'none)': 2, 'self.response': 1, 'self.request': 3, 'kwargs.pop(""request"",': 1, 'if': 1, 'is': 4, 'not': 3, 'none': 1, 'hasattr(response,': 1, '""request""):': 1, 'self.response.request': 1, 'super(requestexception,': 1, 'self).__init__(*args,': 1, '**kwargs)': 1, 'httperror(requestexception):': 1, '""""""an': 4, 'http': 2, 'error': 7, 'occurred.""""""': 4, 'connectionerror(requestexception):': 1, '""""""a': 4, 'connection': 1, 'proxyerror(connectionerror):': 1, 'proxy': 2, 'sslerror(connectionerror):': 1, 'ssl': 1, 'timeout(requestexception):': 1, '""""""the': 9, 'request': 3, 'timed': 2, 'out.': 1, 'catching': 1, 'will': 1, 'catch': 1, 'both': 1, ':exc:`~requests.exceptions.connecttimeout`': 1, ':exc:`~requests.exceptions.readtimeout`': 1, 'errors.': 1, 'connecttimeout(connectionerror,': 1, 'timeout):': 1, 'out': 1, 'trying': 2, 'to': 6, 'connect': 1, 'remote': 1, 'server.': 1, 'requests': 2, 'produced': 1, 'are': 1, 'safe': 1, 'retry.': 1, 'readtimeout(timeout):': 1, 'server': 2, 'did': 1, 'send': 1, 'any': 1, 'data': 1, 'in': 2, 'allotted': 1, 'amount': 1, 'time.""""""': 1, 'urlrequired(requestexception):': 1, 'valid': 2, 'url': 4, 'required': 1, 'make': 1, 'a': 2, 'request.""""""': 1, 'toomanyredirects(requestexception):': 1, '""""""too': 1, 'many': 1, 'redirects.""""""': 1, 'missingscheme(requestexception,': 1, 'valueerror):': 5, 'scheme': 1, '(e.g.': 1, 'or': 1, 'https)': 1, 'missing.""""""': 1, 'invalidscheme(requestexception,': 1, '""""""see': 1, 'defaults.py': 1, 'for': 3, 'schemes.""""""': 1, 'invalidurl(requestexception,': 1, 'provided': 3, 'somehow': 2, 'invalid.""""""': 3, 'invalidheader(requestexception,': 1, 'header': 1, 'value': 1, 'invalidproxyurl(invalidurl):': 1, 'chunkedencodingerror(requestexception):': 1, 'declared': 1, 'chunked': 1, 'encoding': 1, 'but': 2, 'sent': 1, 'invalid': 2, 'chunk.""""""': 1, 'contentdecodingerror(requestexception,': 1, 'basehttperror):': 1, '""""""failed': 1, 'decode': 1, 'content""""""': 1, 'streamconsumederror(requestexception,': 1, 'typeerror):': 1, 'content': 1, 'already': 1, 'consumed""""""': 1, 'retryerror(requestexception):': 1, '""""""custom': 1, 'retries': 1, 'logic': 1, 'failed""""""': 1, 'unrewindablebodyerror(requestexception):': 1, '""""""requests': 1, 'encountered': 1, 'when': 1, 'rewind': 1, 'body""""""': 1, 'invalidbodyerror(requestexception,': 1, 'body': 1, 'specified""""""': 1, 'warnings': 1, 'requestswarning(warning):': 1, '""""""base': 1, 'warning': 1, 'requests.""""""': 1, 'pass': 3, 'filemodewarning(requestswarning,': 1, 'deprecationwarning):': 1, 'file': 1, 'opened': 1, 'text': 1, 'mode,': 1, 'determined': 1, 'its': 1, 'binary': 1, 'length.""""""': 1, 'requestsdependencywarning(requestswarning):': 1, 'imported': 1, 'dependency': 1, ""doesn't"": 1, 'match': 1, 'expected': 1, 'version': 1, 'range.""""""': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 6, 'cod': 5, 'odi': 4, 'din': 4, 'ing': 19, 'ng:': 1, 'g: ': 1, ': u': 1, ' ut': 1, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\n""': 1, '\n""""': 2, '""""""': 52, '""""\n': 27, '""\nr': 1, '\nre': 1, 'req': 16, 'equ': 44, 'que': 42, 'ues': 42, 'est': 42, 'sts': 12, 'ts.': 7, 's.e': 3, '.ex': 4, 'exc': 8, 'xce': 24, 'cep': 24, 'ept': 24, 'pti': 24, 'tio': 30, 'ion': 31, 'ons': 17, 'ns\n': 1, 's\n~': 1, '\n~~': 1, '~~~': 17, '~~\n': 1, '~\n\n': 1, '\n\nT': 1, '\nTh': 1, 'Thi': 1, 'his': 4, 'is ': 8, 's m': 2, ' mo': 2, 'mod': 2, 'odu': 2, 'dul': 1, 'ule': 1, 'le ': 4, 'e c': 3, 'con': 5, 'ont': 4, 'nta': 1, 'tai': 1, 'ain': 1, 'ins': 1, 'ns ': 2, 's t': 2, ' th': 9, 'the': 4, 'he ': 13, 'e s': 5, ' se': 12, 'set': 1, 'et ': 1, 't o': 3, ' of': 2, 'of ': 2, 'f R': 1, ' Re': 10, 'Req': 28, ""ts'"": 1, ""s' "": 1, ""' e"": 1, ' ex': 3, 'ns.': 3, 's.\n': 2, '.\n""': 1, '""\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 2, 'm u': 1, ' ur': 1, 'url': 1, 'rll': 1, 'lli': 1, 'lib': 1, 'ib3': 1, 'b3.': 1, '3.e': 1, 's i': 2, ' im': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 1, 't H': 1, ' HT': 3, 'HTT': 5, 'TTP': 5, 'TPE': 4, 'PEr': 4, 'Err': 23, 'rro': 31, 'ror': 31, 'or ': 12, 'r a': 2, ' as': 1, 'as ': 7, 's B': 1, ' Ba': 2, 'Bas': 3, 'ase': 3, 'seH': 2, 'eHT': 2, 'or\n': 1, 'r\n\n': 1, '\n\n\n': 24, '\n\nc': 23, '\ncl': 24, 'cla': 25, 'las': 24, 'ass': 27, 'ss ': 24, 's R': 5, 'stE': 18, 'tEx': 18, 'Exc': 18, 'on(': 1, 'n(I': 1, '(IO': 1, 'IOE': 1, 'OEr': 1, 'or)': 10, 'r):': 10, '):\n': 26, ':\n ': 26, '\n  ': 43, '   ': 118, '  ""': 28, ' """"': 28, '""""T': 11, '""Th': 10, 'The': 10, 'her': 1, 'ere': 2, 're ': 2, 'e w': 4, ' wa': 7, 'was': 6, 's a': 2, ' an': 8, 'an ': 3, 'n a': 1, ' am': 2, 'amb': 1, 'mbi': 1, 'big': 1, 'igu': 1, 'guo': 1, 'uou': 1, 'ous': 1, 'us ': 1, 's e': 4, 'on ': 4, 'n t': 4, 'tha': 2, 'hat': 2, 'at ': 2, ' oc': 5, 'occ': 5, 'ccu': 5, 'cur': 5, 'urr': 5, 'rre': 5, 'red': 10, 'ed ': 17, 'd w': 3, ' wh': 3, 'whi': 2, 'hil': 2, 'ile': 6, 'e h': 2, ' ha': 2, 'han': 1, 'and': 5, 'ndl': 1, 'dli': 1, 'lin': 1, 'ng ': 6, 'g y': 1, ' yo': 1, 'you': 1, 'our': 1, 'ur\n': 1, 'r\n ': 1, '  r': 2, ' re': 16, 'st.': 2, 't.\n': 2, '.\n ': 3, '""\n\n': 24, '\n\n ': 6, '  d': 1, ' de': 6, 'def': 2, 'ef ': 1, 'f _': 1, ' __': 1, '__i': 2, '_in': 2, 'ini': 2, 'nit': 3, 'it_': 2, 't__': 2, '__(': 2, '_(s': 1, '(se': 1, 'sel': 7, 'elf': 7, 'lf,': 1, 'f, ': 1, ', *': 3, ' *a': 1, '*ar': 2, 'arg': 6, 'rgs': 6, 'gs,': 2, 's, ': 2, ' **': 2, '**k': 2, '*kw': 2, 'kwa': 4, 'war': 5, 'gs)': 2, 's):': 1, '""""I': 1, '""In': 1, 'Ini': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'ali': 14, 'liz': 1, 'ize': 1, 'ze ': 1, 'e R': 1, 'n w': 1, ' wi': 2, 'wit': 1, 'ith': 1, 'th ': 1, 'h `': 1, ' `r': 2, '`re': 2, 'st`': 1, 't` ': 3, '` a': 2, 'nd ': 5, 'd `': 1, 'res': 10, 'esp': 10, 'spo': 10, 'pon': 10, 'nse': 10, 'se`': 1, 'e` ': 1, '` o': 1, ' ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 12, 'cts': 3, 's.""': 4, '.""""': 17, '""\n ': 1, 'se ': 6, 'e =': 2, ' = ': 4, '= k': 2, ' kw': 2, 'gs.': 2, 's.p': 3, '.po': 2, 'pop': 2, 'op(': 2, 'p(""': 2, '(""r': 2, '""re': 3, 'se""': 1, 'e"",': 1, '"", ': 2, ', N': 2, ' No': 3, 'Non': 3, 'one': 3, 'ne)': 2, 'e)\n': 2, ')\n ': 2, '  s': 4, 'lf.': 5, 'f.r': 5, '.re': 6, '= r': 1, 'se\n': 1, 'e\n ': 1, 'st ': 6, 't =': 2, 'st""': 2, 't"",': 1, '  i': 1, ' if': 1, 'if ': 1, 'f r': 1, 'e i': 1, ' is': 4, 's n': 1, ' no': 3, 'not': 3, 'ot ': 3, 't N': 1, 'ne ': 1, 'e a': 3, 'd n': 2, 't s': 3, 't a': 2, 'd h': 1, 'has': 1, 'asa': 1, 'sat': 1, 'att': 1, 'ttr': 1, 'tr(': 1, 'r(r': 1, '(re': 1, 'se,': 1, 'e, ': 2, ', ""': 1, ' ""r': 1, 't"")': 1, '""):': 1, '= s': 1, 'se.': 1, 'e.r': 1, 'st\n': 1, 't\n ': 1, ' su': 1, 'sup': 1, 'upe': 1, 'per': 1, 'er(': 2, 'r(R': 10, '(Re': 18, 'on,': 8, 'n, ': 8, ', s': 1, 'lf)': 1, 'f).': 1, ')._': 1, '.__': 1, '_(*': 1, '(*a': 1, 's)\n': 1, ')\n\n': 1, 's H': 1, 'or(': 10, 'on)': 8, 'n):': 8, '""""A': 8, '""An': 4, 'An ': 4, 'n H': 1, 'TP ': 1, 'P e': 1, ' er': 8, 'err': 8, 'r o': 4, 'ed.': 4, 'd.""': 7, 's C': 4, ' Co': 4, 'Con': 9, 'onn': 8, 'nne': 8, 'nec': 8, 'cti': 5, 'onE': 4, 'nEr': 4, '""A ': 4, 'A C': 1, 'n e': 2, 's P': 1, ' Pr': 1, 'Pro': 2, 'rox': 4, 'oxy': 4, 'xyE': 1, 'yEr': 4, 'r(C': 2, '(Co': 3, 'A p': 1, ' pr': 6, 'pro': 6, 'xy ': 2, 'y e': 1, 's S': 2, ' SS': 2, 'SSL': 2, 'SLE': 1, 'LEr': 1, 'n S': 1, 'SL ': 1, 'L e': 1, 's T': 2, ' Ti': 2, 'Tim': 7, 'ime': 10, 'meo': 7, 'eou': 7, 'out': 9, 'ut(': 3, 't(R': 1, 'e r': 4, 't t': 3, ' ti': 3, 'tim': 3, 'med': 4, 'd o': 2, ' ou': 2, 'ut.': 1, '.\n\n': 2, '  C': 1, ' Ca': 1, 'Cat': 1, 'atc': 3, 'tch': 3, 'chi': 1, 'hin': 1, 'g t': 3, 'thi': 3, 'r w': 2, 'wil': 1, 'ill': 1, 'll ': 1, 'l c': 1, ' ca': 1, 'cat': 2, 'ch ': 2, 'h b': 1, ' bo': 3, 'bot': 1, 'oth': 1, 'th\n': 1, 'h\n ': 1, '  :': 2, ' :e': 2, ':ex': 2, 'xc:': 2, 'c:`': 2, ':`~': 2, '`~r': 2, '~re': 2, 's.C': 1, '.Co': 1, 'ctT': 2, 'tTi': 2, 'ut`': 2, 'nd\n': 1, 'd\n ': 1, 's.R': 1, '.Re': 1, 'Rea': 2, 'ead': 5, 'adT': 2, 'dTi': 2, '` e': 1, 'ors': 1, 'rs.': 1, 't(C': 1, 'or,': 1, 'r, ': 1, ', T': 2, 'ut)': 2, 't):': 2, 'ut ': 3, 't w': 1, 'e t': 2, ' tr': 2, 'try': 4, 'ryi': 2, 'yin': 2, ' to': 6, 'to ': 6, 'o c': 1, 'ct ': 1, 'o t': 1, 'rem': 1, 'emo': 1, 'mot': 1, 'ote': 1, 'te ': 1, 'ser': 3, 'erv': 3, 'rve': 3, 'ver': 4, 'er.': 1, 'r.\n': 1, '  R': 1, 'ts ': 4, 't p': 1, 'rod': 1, 'duc': 1, 'uce': 1, 'ced': 1, 'd t': 3, ' ar': 1, 'are': 2, ' sa': 1, 'saf': 1, 'afe': 1, 'fe ': 1, 'o r': 2, 'ret': 2, 'etr': 3, 'ry.': 1, 'y.\n': 1, 't(T': 1, '(Ti': 1, 'er ': 3, 'r d': 2, ' di': 1, 'did': 1, 'id ': 5, 'sen': 2, 'end': 3, 'd a': 4, 'any': 3, 'ny ': 2, 'y d': 2, ' da': 1, 'dat': 1, 'ata': 1, 'ta ': 1, 'a i': 1, ' in': 7, 'in ': 2, ' al': 2, 'all': 1, 'llo': 1, 'lot': 1, 'ott': 1, 'tte': 1, 'ted': 3, 'amo': 1, 'mou': 1, 'oun': 2, 'unt': 2, 'nt ': 3, 'f t': 1, 'me.': 1, 'e.""': 2, 's U': 2, ' UR': 5, 'URL': 8, 'RLR': 1, 'LRe': 1, 'qui': 2, 'uir': 2, 'ire': 4, 'ed(': 1, 'd(R': 1, 'A v': 1, ' va': 3, 'val': 14, 'lid': 13, 'd U': 1, 'RL ': 4, 'L i': 1, 's r': 2, 'o m': 2, ' ma': 3, 'mak': 1, 'ake': 1, 'ke ': 1, ' a ': 2, 'a r': 1, 't.""': 1, ' To': 1, 'Too': 2, 'ooM': 1, 'oMa': 1, 'Man': 1, 'nyR': 1, 'yRe': 1, 'Red': 1, 'edi': 2, 'dir': 2, 'rec': 3, 'ts(': 1, 's(R': 1, '""To': 1, 'oo ': 1, 'man': 1, 'y r': 1, 's M': 1, ' Mi': 1, 'Mis': 1, 'iss': 2, 'ssi': 2, 'sin': 2, 'ngS': 1, 'gSc': 1, 'Sch': 2, 'che': 4, 'hem': 4, 'eme': 4, 'me(': 2, 'e(R': 2, ', V': 5, ' Va': 5, 'Val': 5, 'alu': 6, 'lue': 6, 'ueE': 5, 'eEr': 6, 'e U': 2, 'L s': 1, ' sc': 2, 'sch': 2, 'me ': 1, 'e (': 1, ' (e': 1, '(e.': 1, 'e.g': 1, '.g.': 1, 'g. ': 1, '. h': 1, ' ht': 2, 'htt': 2, 'ttp': 2, 'tp ': 1, 'p o': 1, ' or': 1, 'r h': 1, 'tps': 1, 'ps)': 1, 's) ': 1, ') i': 1, ' mi': 1, 'mis': 1, 'ng.': 1, 'g.""': 1, 's I': 5, ' In': 5, 'Inv': 6, 'nva': 11, 'idS': 1, 'dSc': 1, '""""S': 1, '""Se': 1, 'See': 1, 'ee ': 1, 'e d': 1, 'efa': 1, 'fau': 1, 'aul': 1, 'ult': 1, 'lts': 1, '.py': 1, 'py ': 1, 'y f': 1, ' fo': 3, 'for': 3, 'r v': 2, 'd s': 1, 'mes': 1, 'es.': 1, 'idU': 2, 'dUR': 2, 'RL(': 2, 'L(R': 1, 'L p': 2, 'rov': 3, 'ovi': 3, 'vid': 3, 'ide': 3, 'ded': 3, 's s': 3, ' so': 2, 'som': 2, 'ome': 2, 'meh': 2, 'eho': 2, 'how': 2, 'ow ': 2, 'w i': 2, 'inv': 5, 'id.': 3, 'idH': 1, 'dHe': 1, 'Hea': 1, 'ade': 2, 'der': 2, ' he': 1, 'hea': 1, 'ue ': 1, 'e p': 2, 'idP': 1, 'dPr': 1, 'xyU': 1, 'yUR': 1, 'L(I': 1, '(In': 1, 'RL)': 1, 'L):': 1, 'y U': 1, 'd i': 3, ' Ch': 1, 'Chu': 1, 'hun': 3, 'unk': 3, 'nke': 2, 'ked': 2, 'edE': 2, 'dEn': 1, 'Enc': 1, 'nco': 3, 'ngE': 2, 'gEr': 2, 'dec': 2, 'ecl': 1, 'lar': 1, 'd c': 2, ' ch': 2, 'chu': 2, 'd e': 1, ' en': 2, 'enc': 4, 'g b': 1, ' bu': 2, 'but': 2, 'ent': 4, 'n i': 3, 'nk.': 1, 'k.""': 1, 'nte': 4, 'ten': 3, 'ntD': 1, 'tDe': 1, 'Dec': 1, 'eco': 2, ', B': 1, '""""F': 1, '""Fa': 1, 'Fai': 1, 'ail': 2, 'led': 2, 'o d': 1, 'ode': 3, 'de ': 1, 'nt""': 1, 't""""': 1, ' St': 1, 'Str': 1, 'tre': 1, 'rea': 2, 'eam': 1, 'amC': 1, 'mCo': 1, 'nsu': 2, 'sum': 2, 'ume': 2, 'dEr': 1, ' Ty': 1, 'Typ': 1, 'ype': 1, 'peE': 1, 't f': 1, 'r t': 1, 'alr': 1, 'lre': 1, 'ady': 1, 'dy ': 2, 'y c': 1, 'ed""': 3, 'd""""': 3, 'Ret': 1, 'ryE': 1, '""""C': 1, '""Cu': 1, 'Cus': 1, 'ust': 1, 'sto': 1, 'tom': 1, 'm r': 1, 'tri': 1, 'rie': 1, 'ies': 1, 'es ': 1, 's l': 1, ' lo': 1, 'log': 1, 'ogi': 1, 'gic': 1, 'ic ': 1, 'c f': 1, ' fa': 1, 'fai': 1, ' Un': 1, 'Unr': 1, 'nre': 1, 'rew': 2, 'ewi': 2, 'win': 2, 'ind': 2, 'nda': 1, 'dab': 1, 'abl': 1, 'ble': 1, 'leB': 1, 'eBo': 1, 'Bod': 2, 'ody': 4, 'dyE': 2, '""""R': 1, '""Re': 1, 'cou': 1, 'ter': 2, 'whe': 1, 'hen': 1, 'en ': 1, 'a b': 1, 'bod': 2, 'dy""': 1, 'y""""': 1, 'idB': 1, 'dBo': 1, 'd r': 1, 't b': 1, 'y w': 1, ' sp': 1, 'spe': 1, 'pec': 2, 'eci': 1, 'cif': 1, 'ifi': 1, 'fie': 1, 'ied': 1, '\n\n#': 1, '\n# ': 1, '# W': 1, ' Wa': 1, 'War': 8, 'arn': 9, 'rni': 9, 'nin': 9, 'ngs': 1, 'gs\n': 1, 's\nc': 1, 'tsW': 3, 'sWa': 3, 'ng(': 3, 'g(W': 1, '(Wa': 1, 'ng)': 3, 'g):': 3, '""""B': 1, '""Ba': 1, 'g f': 1, 'r R': 1, '  p': 3, ' pa': 3, 'pas': 3, 'ss\n': 3, 's\n\n': 2, 's F': 1, ' Fi': 1, 'Fil': 1, 'leM': 1, 'eMo': 1, 'Mod': 1, 'deW': 1, 'eWa': 1, 'g(R': 2, 'ng,': 1, 'g, ': 1, ', D': 1, ' De': 1, 'Dep': 2, 'epr': 1, 'pre': 1, 'eca': 1, 'ati': 1, 'onW': 1, 'nWa': 1, 'A f': 1, ' fi': 1, 'fil': 1, 's o': 1, ' op': 1, 'ope': 1, 'pen': 3, 'ene': 1, 'ned': 2, ' te': 1, 'tex': 1, 'ext': 1, 'xt ': 1, 't m': 2, 'de,': 1, ', b': 1, 't R': 1, 's d': 1, 'det': 1, 'ete': 1, 'erm': 1, 'rmi': 1, 'min': 1, 'ine': 1, ' it': 1, 'its': 1, 's b': 1, ' bi': 1, 'bin': 1, 'ina': 1, 'nar': 1, 'ary': 1, 'ry ': 1, 'y l': 1, ' le': 1, 'len': 1, 'eng': 1, 'ngt': 1, 'gth': 1, 'th.': 1, 'h.""': 1, 'tsD': 1, 'sDe': 1, 'epe': 2, 'nde': 2, 'den': 2, 'ncy': 2, 'cyW': 1, 'yWa': 1, 'rte': 1, 'd d': 1, 'dep': 1, 'cy ': 1, ' do': 1, 'doe': 1, 'oes': 1, 'esn': 1, ""sn'"": 1, ""n't"": 1, ""'t "": 1, 'mat': 1, 'h t': 1, 'e e': 1, 'exp': 1, 'xpe': 1, 'cte': 1, 'd v': 1, ' ve': 1, 'ers': 1, 'rsi': 1, 'sio': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge.': 1}"
Kenneth Reitz Archive,fingerprint.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, '-*-': 2, 'coding:': 1, 'utf-8': 1, '""""""submodule': 1, 'containing': 2, 'the': 4, 'implementation': 2, 'for': 2, 'fingerprintadapter.': 1, 'this': 1, 'file': 1, 'contains': 1, 'an': 1, 'of': 3, 'a': 3, 'transport': 1, 'adapter': 2, 'that': 2, 'validates': 1, 'fingerprints': 1, 'ssl': 2, 'certificates': 1, 'presented': 1, 'upon': 1, 'connection.': 1, '""""""': 3, 'from': 3, 'requests.adapters': 1, 'import': 5, 'httpadapter': 1, '.._compat': 1, 'poolmanager': 1, 'class': 1, 'fingerprintadapter(httpadapter):': 1, 'https': 1, 'python': 2, 'requests': 2, 'verifies': 1, 'certificate': 2, 'fingerprints,': 1, 'instead': 1, 'hostnames.': 1, 'example': 1, 'usage:': 1, '..': 1, 'code-block::': 1, 'requests_toolbelt.adapters.fingerprint': 1, 'fingerprintadapter': 1, 'twitter_fingerprint': 1, '=': 5, ""'...'"": 1, 's': 1, 'requests.session()': 1, 's.mount(': 1, ""'https://twitter.com',"": 1, 'fingerprintadapter(twitter_fingerprint)': 1, ')': 2, 'fingerprint': 2, 'should': 1, 'be': 1, 'provided': 1, 'as': 1, 'hexadecimal': 1, 'string,': 1, 'optionally': 1, 'colons.': 1, '__attrs__': 1, 'httpadapter.__attrs__': 1, '+': 1, '[""fingerprint""]': 1, 'def': 2, '__init__(self,': 1, 'fingerprint,': 1, '**kwargs):': 1, 'self.fingerprint': 1, 'super(fingerprintadapter,': 1, 'self).__init__(**kwargs)': 1, 'init_poolmanager(self,': 1, 'connections,': 1, 'maxsize,': 1, 'block=false):': 1, 'self.poolmanager': 1, 'poolmanager.poolmanager(': 1, 'num_pools=connections,': 1, 'maxsize=maxsize,': 1, 'block=block,': 1, 'assert_fingerprint=self.fingerprint,': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 8, 'cod': 2, 'odi': 1, 'din': 1, 'ing': 21, 'ng:': 1, 'g: ': 1, ': u': 1, ' ut': 1, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\n""': 1, '\n""""': 2, '""""""': 4, '""""S': 1, '""Su': 1, 'Sub': 1, 'ubm': 1, 'bmo': 1, 'mod': 1, 'odu': 1, 'dul': 1, 'ule': 1, 'le ': 3, 'e c': 2, 'con': 6, 'ont': 3, 'nta': 5, 'tai': 3, 'ain': 3, 'ini': 5, 'nin': 2, 'ng ': 2, 'g t': 1, ' th': 4, 'the': 3, 'he ': 4, 'e i': 1, ' im': 7, 'imp': 7, 'mpl': 3, 'ple': 3, 'lem': 2, 'eme': 2, 'men': 2, 'ent': 3, 'tat': 2, 'ati': 2, 'tio': 6, 'ion': 7, 'on ': 4, 'n f': 1, ' fo': 2, 'for': 2, 'or ': 2, 'r t': 2, 'e F': 1, ' Fi': 4, 'Fin': 5, 'nge': 17, 'ger': 22, 'erp': 17, 'rpr': 17, 'pri': 17, 'rin': 18, 'int': 17, 'ntA': 5, 'tAd': 5, 'Ada': 10, 'dap': 12, 'apt': 12, 'pte': 12, 'ter': 15, 'er.': 4, 'r.\n': 1, '.\n\n': 2, '\n\nT': 1, '\nTh': 1, 'Thi': 1, 'his': 1, 'is ': 1, 's f': 1, ' fi': 6, 'fil': 1, 'ile': 1, 'ins': 2, 'ns ': 1, 's a': 2, ' an': 1, 'an ': 1, 'n i': 1, 'n o': 1, ' of': 3, 'of ': 3, 'f a': 1, ' a ': 2, 'a T': 1, ' Tr': 1, 'Tra': 1, 'ran': 1, 'ans': 1, 'nsp': 1, 'spo': 1, 'por': 6, 'ort': 6, 'rt ': 6, 't A': 1, ' Ad': 2, 'er ': 3, 'tha': 2, 'hat': 2, 'at ': 3, 't v': 2, ' va': 1, 'val': 1, 'ali': 1, 'lid': 1, 'ida': 1, 'dat': 1, 'ate': 4, 'tes': 2, 'es\n': 1, 's\nt': 1, '\nth': 1, 'e f': 3, 'fin': 12, 'nts': 2, 'ts ': 2, 's o': 1, 'f S': 1, ' SS': 1, 'SSL': 1, 'SL ': 1, 'L c': 1, ' ce': 3, 'cer': 3, 'ert': 4, 'rti': 3, 'tif': 3, 'ifi': 4, 'fic': 3, 'ica': 3, 'cat': 3, 'es ': 2, 's p': 1, ' pr': 2, 'pre': 1, 'res': 1, 'ese': 1, 'sen': 1, 'nte': 1, 'ted': 1, 'ed ': 2, 'd u': 1, ' up': 1, 'upo': 1, 'pon': 1, 'n c': 1, 'onn': 3, 'nne': 3, 'nec': 3, 'ect': 3, 'cti': 3, 'on.': 1, 'n.\n': 1, '.\n""': 1, '""""\n': 3, '""\nf': 1, '\nfr': 2, 'fro': 3, 'rom': 3, 'om ': 3, 'm r': 2, ' re': 4, 'req': 4, 'equ': 5, 'que': 5, 'ues': 5, 'est': 5, 'sts': 5, 'ts.': 2, 's.a': 1, '.ad': 2, 'ada': 2, 'ers': 2, 'rs ': 1, 's i': 1, 'mpo': 5, 't H': 1, ' HT': 3, 'HTT': 4, 'TTP': 4, 'TPA': 3, 'PAd': 3, 'er\n': 3, 'r\n\n': 3, '\n\nf': 1, 'm .': 1, ' ..': 2, '.._': 1, '._c': 1, '_co': 1, 'com': 2, 'omp': 1, 'mpa': 1, 'pat': 1, 't i': 2, 't p': 1, ' po': 2, 'poo': 5, 'ool': 7, 'olm': 4, 'lma': 4, 'man': 4, 'ana': 5, 'nag': 5, 'age': 6, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 2, 'ss ': 1, 's F': 1, 'er(': 5, 'r(H': 1, '(HT': 1, 'er)': 1, 'r):': 1, '):\n': 3, ':\n ': 3, '\n  ': 28, '   ': 148, '  ""': 2, ' """"': 2, '""\n ': 1, '  A': 1, ' A ': 1, 'A H': 1, 'TPS': 1, 'PS ': 1, 'S A': 1, 'r f': 1, 'r P': 1, ' Py': 1, 'Pyt': 1, 'yth': 2, 'tho': 2, 'hon': 2, 'n R': 1, ' Re': 1, 'Req': 1, 's t': 1, ' ve': 1, 'ver': 1, 'eri': 1, 'rif': 1, 'fie': 1, 'ies': 1, 's c': 1, 'te ': 2, 'ts,': 1, 's,\n': 2, ',\n ': 6, '  i': 3, ' in': 2, 'nst': 1, 'ste': 1, 'tea': 1, 'ead': 1, 'ad ': 1, 'd o': 1, 'f c': 1, 'e h': 1, ' ho': 1, 'hos': 1, 'ost': 1, 'stn': 1, 'tna': 1, 'nam': 1, 'ame': 1, 'mes': 1, 'es.': 1, 's.\n': 2, '\n\n ': 9, '  E': 1, ' Ex': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'e u': 1, ' us': 1, 'usa': 1, 'sag': 1, 'ge:': 1, 'e:\n': 1, ':\n\n': 1, '  .': 1, '.. ': 1, '. c': 1, 'ode': 1, 'de-': 1, 'e-b': 1, '-bl': 1, 'blo': 4, 'loc': 4, 'ock': 4, 'ck:': 1, 'k::': 1, ':: ': 1, ': p': 1, ' py': 1, 'pyt': 1, 'on\n': 1, 'n\n\n': 1, 't r': 1, 'ts\n': 1, 's\n ': 1, 't s': 2, ' ss': 1, 'ssl': 1, 'sl\n': 1, 'l\n ': 1, '  f': 1, ' fr': 1, 'ts_': 1, 's_t': 1, '_to': 1, 'too': 1, 'olb': 1, 'lbe': 1, 'bel': 1, 'elt': 1, 'lt.': 1, 't.a': 1, 'rs.': 1, 's.f': 1, '.fi': 3, 'nt ': 4, 't F': 1, '  t': 1, ' tw': 1, 'twi': 3, 'wit': 3, 'itt': 3, 'tte': 3, 'er_': 2, 'r_f': 2, '_fi': 3, 't =': 2, ' = ': 5, ""= '"": 1, "" '."": 1, ""'.."": 1, '...': 1, ""..'"": 1, "".'\n"": 1, ""'\n "": 1, '  s': 5, ' s ': 1, 's =': 1, '= r': 1, 's.S': 1, '.Se': 1, 'Ses': 1, 'ess': 1, 'ssi': 1, 'sio': 1, 'on(': 1, 'n()': 1, '()\n': 1, ')\n ': 2, ' s.': 1, 's.m': 1, '.mo': 1, 'mou': 1, 'oun': 1, 'unt': 1, 'nt(': 1, 't(\n': 1, '(\n ': 2, ""  '"": 1, "" 'h"": 1, ""'ht"": 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//t': 1, '/tw': 1, 'r.c': 1, '.co': 1, ""om'"": 1, ""m',"": 1, ""',\n"": 1, '  F': 1, 'r(t': 1, '(tw': 1, 'nt)': 1, 't)\n': 1, '  )': 2, ' )\n': 2, ')\n\n': 2, '  T': 1, ' Th': 1, 'The': 1, ' sh': 1, 'sho': 1, 'hou': 1, 'oul': 1, 'uld': 1, 'ld ': 1, 'd b': 1, ' be': 1, 'be ': 1, 'e p': 1, 'pro': 1, 'rov': 1, 'ovi': 1, 'vid': 1, 'ide': 1, 'ded': 1, 'd a': 1, ' as': 2, 'as ': 1, 'a h': 1, ' he': 1, 'hex': 1, 'exa': 1, 'xad': 1, 'ade': 1, 'dec': 1, 'eci': 1, 'cim': 1, 'ima': 1, 'mal': 1, 'al ': 1, 'l s': 1, ' st': 1, 'str': 1, 'tri': 1, 'ng,': 1, 'g, ': 1, ', o': 1, ' op': 1, 'opt': 1, 'pti': 1, 'ona': 1, 'nal': 1, 'all': 1, 'lly': 1, 'ly\n': 1, 'y\n ': 1, '  c': 1, 'g c': 1, 'col': 1, 'olo': 1, 'lon': 1, 'ons': 3, 'ns.': 1, '.\n ': 1, '""\n\n': 1, '  _': 1, ' __': 2, '__a': 2, '_at': 2, 'att': 2, 'ttr': 2, 'trs': 2, 'rs_': 2, 's__': 2, '__ ': 2, '_ =': 1, '= H': 1, 'r._': 1, '.__': 2, '_ +': 1, ' + ': 1, '+ [': 1, ' [""': 1, '[""f': 1, '""fi': 1, 'nt""': 1, 't""]': 1, '""]\n': 1, ']\n\n': 1, '  d': 2, ' de': 2, 'def': 2, 'ef ': 2, 'f _': 1, '__i': 2, '_in': 2, 'nit': 3, 'it_': 3, 't__': 2, '__(': 2, '_(s': 1, '(se': 2, 'sel': 6, 'elf': 6, 'lf,': 2, 'f, ': 2, ', f': 1, 'nt,': 2, 't, ': 1, ', *': 1, ' **': 1, '**k': 2, '*kw': 2, 'kwa': 2, 'war': 2, 'arg': 2, 'rgs': 2, 'gs)': 2, 's):': 1, ' se': 3, 'lf.': 3, 'f.f': 2, '= f': 1, 'nt\n': 1, 't\n\n': 1, ' su': 1, 'sup': 1, 'upe': 1, 'per': 1, 'r(F': 1, '(Fi': 1, 'er,': 1, 'r, ': 1, ', s': 1, 'lf)': 1, 'f).': 1, ')._': 1, '_(*': 1, '(**': 1, 's)\n': 1, 'f i': 1, 't_p': 1, '_po': 2, 'r(s': 1, ', c': 1, 'ns,': 2, 's, ': 1, ', m': 1, ' ma': 2, 'max': 3, 'axs': 3, 'xsi': 3, 'siz': 3, 'ize': 3, 'ze,': 2, 'e, ': 1, ', b': 1, ' bl': 2, 'ck=': 2, 'k=F': 1, '=Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 'se)': 1, 'e):': 1, 'f.p': 1, '.po': 1, 'r =': 1, '= p': 1, 'r.P': 1, '.Po': 1, 'Poo': 1, 'olM': 1, 'lMa': 1, 'Man': 1, 'r(\n': 1, '  n': 1, ' nu': 1, 'num': 1, 'um_': 1, 'm_p': 1, 'ols': 1, 'ls=': 1, 's=c': 1, '=co': 1, '  m': 1, 'ze=': 1, 'e=m': 1, '=ma': 1, 'e,\n': 1, '  b': 1, 'k=b': 1, '=bl': 1, 'ck,': 1, 'k,\n': 1, '  a': 1, 'sse': 1, 'ser': 1, 'rt_': 1, 't_f': 1, 'nt=': 1, 't=s': 1, '=se': 1, 't,\n': 1}"
Kenneth Reitz Archive,flask_theme_support.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 66, 'flasky': 2, 'extensions.': 1, 'pygments': 1, 'style': 3, 'based': 1, 'on': 1, 'tango': 1, 'from': 2, 'pygments.style': 1, 'import': 2, 'pygments.token': 1, 'keyword,': 1, 'name,': 1, 'comment,': 1, 'string,': 1, 'error,': 1, 'number,': 1, 'operator,': 1, 'generic,': 1, 'whitespace,': 1, 'punctuation,': 1, 'other,': 1, 'literal': 1, 'class': 3, 'flaskystyle(style):': 1, 'background_color': 1, '=': 3, '""#f8f8f8""': 1, 'default_style': 1, '""""': 1, 'styles': 1, '{': 1, 'no': 1, 'corresponding': 1, 'for': 1, 'the': 3, 'following:': 1, '#text:': 1, '"""",': 1, 'class:': 60, ""''"": 1, 'whitespace:': 1, '""underline': 1, '#f8f8f8"",': 1, ""'w'"": 1, 'error:': 1, '""#a40000': 1, 'border:#ef2929"",': 1, ""'err'"": 1, 'other:': 1, '""#000000"",': 15, ""'x'"": 1, 'comment:': 1, '""italic': 3, '#8f5902"",': 2, ""'c'"": 1, 'comment.preproc:': 1, '""noitalic"",': 1, ""'cp'"": 1, 'keyword:': 1, '""bold': 15, '#004461"",': 9, ""'k'"": 1, 'keyword.constant:': 1, ""'kc'"": 1, 'keyword.declaration:': 1, ""'kd'"": 1, 'keyword.namespace:': 1, ""'kn'"": 1, 'keyword.pseudo:': 1, ""'kp'"": 1, 'keyword.reserved:': 1, ""'kr'"": 1, 'keyword.type:': 1, ""'kt'"": 1, 'operator:': 1, '""#582800"",': 1, ""'o'"": 1, 'operator.word:': 1, ""'ow'"": 1, '-': 12, 'like': 3, 'keywords': 1, 'punctuation:': 1, '#000000"",': 3, ""'p'"": 1, 'because': 1, 'special': 1, 'names': 1, 'such': 2, 'as': 3, 'name.class,': 1, 'name.function,': 1, 'etc.': 1, 'are': 1, 'not': 1, 'recognized': 1, 'later': 1, 'in': 1, 'parsing,': 1, 'we': 1, 'choose': 1, 'them': 1, 'to': 10, 'look': 1, 'same': 1, 'ordinary': 1, 'variables.': 1, 'name:': 1, ""'n'"": 1, 'name.attribute:': 1, '""#c4a000"",': 1, ""'na'"": 1, 'be': 9, 'revised': 9, 'name.builtin:': 1, '""#004461"",': 1, ""'nb'"": 1, 'name.builtin.pseudo:': 1, '""#3465a4"",': 1, ""'bp'"": 1, 'name.class:': 1, ""'nc'"": 1, 'name.constant:': 1, ""'no'"": 1, 'name.decorator:': 1, '""#888"",': 2, ""'nd'"": 1, 'name.entity:': 1, '""#ce5c00"",': 1, ""'ni'"": 1, 'name.exception:': 1, '#cc0000"",': 1, ""'ne'"": 1, 'name.function:': 1, ""'nf'"": 1, 'name.property:': 1, ""'py'"": 1, 'name.label:': 1, '""#f57900"",': 1, ""'nl'"": 1, 'name.namespace:': 1, ""'nn'"": 1, 'name.other:': 1, ""'nx'"": 1, 'name.tag:': 1, ""'nt'"": 1, 'a': 2, 'keyword': 1, 'name.variable:': 1, ""'nv'"": 1, 'name.variable.class:': 1, ""'vc'"": 1, 'name.variable.global:': 1, ""'vg'"": 1, 'name.variable.instance:': 1, ""'vi'"": 1, 'number:': 1, '""#990000"",': 1, ""'m'"": 1, 'literal:': 1, ""'l'"": 1, 'literal.date:': 1, ""'ld'"": 1, 'string:': 1, '""#4e9a06"",': 11, ""'s'"": 1, 'string.backtick:': 1, ""'sb'"": 1, 'string.char:': 1, ""'sc'"": 1, 'string.doc:': 1, ""'sd'"": 1, 'comment': 1, 'string.double:': 1, ""'s2'"": 1, 'string.escape:': 1, ""'se'"": 1, 'string.heredoc:': 1, ""'sh'"": 1, 'string.interpol:': 1, ""'si'"": 1, 'string.other:': 1, ""'sx'"": 1, 'string.regex:': 1, ""'sr'"": 1, 'string.single:': 1, ""'s1'"": 1, 'string.symbol:': 1, ""'ss'"": 1, 'generic:': 1, ""'g'"": 1, 'generic.deleted:': 1, '""#a40000"",': 1, ""'gd'"": 1, 'generic.emph:': 1, ""'ge'"": 1, 'generic.error:': 1, '""#ef2929"",': 1, ""'gr'"": 1, 'generic.heading:': 1, '#000080"",': 1, ""'gh'"": 1, 'generic.inserted:': 1, '""#00a000"",': 1, ""'gi'"": 1, 'generic.output:': 1, ""'go'"": 1, 'generic.prompt:': 1, '""#745334"",': 1, ""'gp'"": 1, 'generic.strong:': 1, ""'gs'"": 1, 'generic.subheading:': 1, '#800080"",': 1, ""'gu'"": 1, 'generic.traceback:': 1, '#a40000"",': 1, ""'gt'"": 1, '}': 1}","{'# f': 1, ' fl': 2, 'fla': 2, 'las': 69, 'ask': 3, 'sky': 3, 'ky ': 2, 'y e': 1, ' ex': 1, 'ext': 2, 'xte': 1, 'ten': 1, 'ens': 1, 'nsi': 1, 'sio': 1, 'ion': 7, 'ons': 3, 'ns.': 1, 's. ': 1, '.  ': 1, '  f': 1, 'y p': 1, ' py': 3, 'pyg': 3, 'ygm': 3, 'gme': 3, 'men': 7, 'ent': 7, 'nts': 3, 'ts ': 1, 's s': 3, ' st': 3, 'sty': 5, 'tyl': 8, 'yle': 8, 'le ': 3, 'e b': 1, ' ba': 2, 'bas': 1, 'ase': 1, 'sed': 10, 'ed ': 2, 'd o': 1, ' on': 1, 'on ': 1, 'n t': 2, ' ta': 1, 'tan': 4, 'ang': 1, 'ngo': 1, 'go ': 1, 'o s': 1, 'le\n': 2, 'e\nf': 2, '\nfr': 2, 'fro': 2, 'rom': 3, 'om ': 2, 'm p': 2, 'ts.': 2, 's.s': 1, '.st': 1, 'e i': 1, ' im': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't S': 1, ' St': 14, 'Sty': 3, 's.t': 1, '.to': 1, 'tok': 1, 'oke': 1, 'ken': 1, 'en ': 1, 'n i': 1, 't K': 1, ' Ke': 8, 'Key': 8, 'eyw': 10, 'ywo': 10, 'wor': 10, 'ord': 13, 'rd,': 1, 'd, ': 1, ', N': 3, ' Na': 22, 'Nam': 24, 'ame': 26, 'me,': 1, 'e, ': 2, ', C': 1, ' Co': 3, 'Com': 3, 'omm': 4, 'mme': 4, 'nt,': 1, 't, ': 1, ', S': 1, 'Str': 14, 'tri': 14, 'rin': 13, 'ing': 19, 'ng,': 2, 'g, ': 2, ', E': 1, ' Er': 2, 'Err': 3, 'rro': 3, 'ror': 3, 'or,': 2, 'r, ': 4, ' Nu': 2, 'Num': 2, 'umb': 2, 'mbe': 2, 'ber': 2, 'er,': 2, ', O': 2, ' Op': 3, 'Ope': 3, 'per': 4, 'era': 6, 'rat': 5, 'ato': 4, 'tor': 4, ', G': 1, ' Ge': 12, 'Gen': 12, 'ene': 12, 'ner': 12, 'eri': 12, 'ric': 12, 'ic,': 1, 'c, ': 1, ', W': 1, ' Wh': 2, 'Whi': 2, 'hit': 2, 'ite': 5, 'tes': 2, 'esp': 5, 'spa': 4, 'pac': 4, 'ace': 5, 'ce,': 1, ', P': 1, ' Pu': 2, 'Pun': 2, 'unc': 4, 'nct': 4, 'ctu': 2, 'tua': 2, 'uat': 2, 'ati': 3, 'tio': 6, 'on,': 2, 'n, ': 2, ' Ot': 2, 'Oth': 4, 'the': 8, 'her': 4, ', L': 1, ' Li': 3, 'Lit': 3, 'ter': 5, 'ral': 3, 'al\n': 1, 'l\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 64, 'ass': 66, 'ss ': 3, 's F': 1, ' Fl': 1, 'Fla': 1, 'kyS': 1, 'ySt': 1, 'le(': 1, 'e(S': 1, '(St': 1, 'le)': 1, 'e):': 1, '):\n': 1, ':\n ': 2, '\n  ': 70, '   ': 423, '  b': 1, 'bac': 2, 'ack': 3, 'ckg': 1, 'kgr': 1, 'gro': 1, 'rou': 1, 'oun': 1, 'und': 2, 'nd_': 1, 'd_c': 1, '_co': 1, 'col': 1, 'olo': 1, 'lor': 1, 'or ': 2, 'r =': 1, ' = ': 3, '= ""': 2, ' ""#': 41, '""#f': 2, '#f8': 2, 'f8f': 4, '8f8': 4, 'f8""': 2, '8""\n': 1, '""\n ': 2, '  d': 1, ' de': 1, 'def': 1, 'efa': 1, 'fau': 1, 'aul': 1, 'ult': 1, 'lt_': 1, 't_s': 1, '_st': 1, 'e =': 1, ' """"': 2, '""""\n': 1, '  s': 1, 'les': 2, 'es ': 2, 's =': 1, '= {': 1, ' {\n': 1, '{\n ': 1, '  #': 65, ' # ': 65, '# N': 1, ' No': 1, 'No ': 1, 'o c': 1, ' co': 2, 'cor': 2, 'orr': 1, 'rre': 1, 'res': 1, 'spo': 1, 'pon': 1, 'ond': 1, 'ndi': 1, 'din': 4, 'ng ': 1, 'g c': 1, ' cl': 62, 's f': 1, ' fo': 2, 'for': 1, 'r t': 1, ' th': 4, 'he ': 3, 'e f': 1, 'fol': 1, 'oll': 1, 'llo': 1, 'low': 1, 'owi': 1, 'win': 1, 'ng:': 5, 'g:\n': 1, ' #T': 1, '#Te': 1, 'Tex': 1, 'xt:': 1, 't: ': 6, ':  ': 2, '  ""': 1, '"""",': 1, '"", ': 60, ', #': 1, '# c': 61, 'ss:': 62, 's: ': 62, ""  '"": 1, "" ''"": 1, ""''\n"": 1, ""'\n "": 49, '  W': 1, 'ce:': 4, 'e: ': 12, ': ""': 60, ' ""u': 1, '""un': 1, 'nde': 1, 'der': 2, 'erl': 1, 'rli': 1, 'lin': 1, 'ine': 1, 'ne ': 1, 'e #': 1, ' #f': 1, '8"",': 3, ',  ': 59, "": '"": 59, "" 'w"": 1, ""'w'"": 1, ""w'\n"": 1, '  E': 1, 'or:': 4, 'r: ': 9, '""#a': 2, '#a4': 3, 'a40': 3, '400': 3, '000': 87, '00 ': 1, '0 b': 1, ' bo': 1, 'bor': 1, 'rde': 1, 'er:': 5, 'r:#': 1, ':#e': 1, '#ef': 2, 'ef2': 2, 'f29': 2, '292': 2, '929': 2, '29""': 2, '9"",': 2, "" 'e"": 1, ""'er"": 1, 'err': 1, ""rr'"": 1, ""r'\n"": 4, '  O': 3, '""#0': 17, '#00': 30, '00""': 27, '0"",': 29, ""s '"": 1, "" 'x"": 1, ""'x'"": 1, ""x'\n"": 3, '  C': 2, 'nt:': 3, ' ""i': 3, '""it': 3, 'ita': 4, 'tal': 4, 'ali': 4, 'lic': 4, 'ic ': 3, 'c #': 3, ' #8': 3, '#8f': 2, '8f5': 2, 'f59': 2, '590': 2, '902': 2, '02""': 2, '2"",': 2, "" 'c"": 2, ""'c'"": 1, ""c'\n"": 3, 'nt.': 1, 't.P': 1, '.Pr': 3, 'Pre': 1, 'rep': 1, 'epr': 1, 'pro': 1, 'roc': 1, 'oc:': 3, 'c: ': 4, ' ""n': 1, '""no': 1, 'noi': 1, 'oit': 1, 'ic""': 1, 'c"",': 1, ""'cp"": 1, ""cp'"": 1, ""p'\n"": 5, '  K': 7, 'rd:': 2, 'd: ': 5, ' ""b': 15, '""bo': 15, 'bol': 16, 'old': 15, 'ld ': 15, 'd #': 15, ' #0': 13, '004': 10, '044': 10, '446': 10, '461': 10, '61""': 10, '1"",': 10, "" 'k"": 7, ""'k'"": 1, ""k'\n"": 1, 'rd.': 6, 'd.C': 1, '.Co': 2, 'Con': 2, 'nst': 3, 'sta': 3, 'ant': 2, ""'kc"": 1, ""kc'"": 1, 'd.D': 1, '.De': 3, 'Dec': 2, 'ecl': 1, 'lar': 1, 'ara': 1, 'on:': 4, 'n: ': 5, ""'kd"": 1, ""kd'"": 1, ""d'\n"": 3, 'd.N': 1, '.Na': 2, 'mes': 3, ""'kn"": 1, ""kn'"": 1, ""n'\n"": 2, 'd.P': 1, '.Ps': 2, 'Pse': 2, 'seu': 2, 'eud': 2, 'udo': 2, 'do:': 2, 'o: ': 2, ""'kp"": 1, ""kp'"": 1, 'd.R': 1, '.Re': 2, 'Res': 1, 'ese': 1, 'ser': 2, 'erv': 1, 'rve': 1, 'ved': 1, 'ed:': 3, ""'kr"": 1, ""kr'"": 1, 'd.T': 1, '.Ty': 1, 'Typ': 1, 'ype': 1, 'pe:': 2, ""'kt"": 1, ""kt'"": 1, ""t'\n"": 2, '""#5': 1, '#58': 1, '582': 1, '828': 1, '280': 1, '800': 2, "" 'o"": 2, ""'o'"": 1, ""o'\n"": 2, 'or.': 1, 'r.W': 1, '.Wo': 1, 'Wor': 1, ""'ow"": 1, ""ow'"": 1, ""w' "": 1, ""' -"": 12, ' - ': 12, '- l': 3, ' li': 3, 'lik': 3, 'ike': 3, 'ke ': 3, 'e k': 1, ' ke': 2, 'key': 2, 'rds': 1, 'ds\n': 1, 's\n ': 1, '  P': 1, '"",\n': 1, ',\n ': 1, "" 'p"": 2, ""'p'"": 1, '# b': 1, ' be': 10, 'bec': 1, 'eca': 1, 'cau': 1, 'aus': 1, 'use': 1, 'se ': 2, 'e s': 2, ' sp': 1, 'spe': 1, 'pec': 1, 'eci': 1, 'cia': 1, 'ial': 1, 'al ': 1, 'l n': 1, ' na': 1, 'nam': 1, ' su': 2, 'suc': 2, 'uch': 2, 'ch ': 2, 'h a': 1, ' as': 3, 'as ': 3, 's N': 1, 'me.': 20, 'e.C': 4, '.Cl': 3, 'Cla': 3, 'ss,': 1, 's, ': 1, 'e.F': 2, '.Fu': 2, 'Fun': 2, 'cti': 2, ', e': 1, ' et': 1, 'etc': 1, 'tc.': 1, 'c.\n': 1, '.\n ': 2, '# a': 1, ' ar': 1, 'are': 1, 're ': 1, 'e n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't r': 1, ' re': 10, 'rec': 1, 'eco': 2, 'cog': 1, 'ogn': 1, 'gni': 1, 'niz': 1, 'ize': 1, 'zed': 1, 'd a': 1, 'h l': 1, ' la': 1, 'lat': 1, 'ate': 2, 'er ': 1, 'r i': 1, ' in': 1, 'in ': 1, 'e p': 1, ' pa': 1, 'par': 1, 'ars': 1, 'rsi': 1, 'sin': 1, ', w': 1, ' we': 1, 'we ': 1, 'e c': 1, ' ch': 1, 'cho': 1, 'hoo': 1, 'oos': 1, 'ose': 1, 'e t': 1, 'hem': 1, 'em\n': 1, 'm\n ': 1, '# t': 1, ' to': 10, 'to ': 10, 'o l': 1, ' lo': 1, 'loo': 1, 'ook': 1, 'ok ': 1, 'k t': 1, ' sa': 1, 'sam': 1, 'me ': 1, 'e a': 3, 's o': 1, ' or': 1, 'rdi': 1, 'ina': 1, 'nar': 1, 'ary': 1, 'ry ': 1, 'y v': 1, ' va': 1, 'var': 1, 'ari': 5, 'ria': 5, 'iab': 5, 'abl': 5, 'ble': 6, 'es.': 1, 's.\n': 1, '  N': 20, 'me:': 1, "" 'n"": 14, ""'n'"": 1, 'e.A': 1, '.At': 1, 'Att': 1, 'ttr': 1, 'rib': 1, 'ibu': 1, 'but': 1, 'ute': 1, 'te:': 2, '""#c': 2, '#c4': 1, 'c4a': 1, '4a0': 1, 'a00': 1, ""'na"": 1, ""na'"": 1, ""a' "": 1, '- t': 9, 'o b': 9, 'be ': 9, 'e r': 9, 'rev': 9, 'evi': 9, 'vis': 9, 'ise': 9, 'ed\n': 9, 'd\n ': 10, 'e.B': 2, '.Bu': 2, 'Bui': 2, 'uil': 2, 'ilt': 2, 'lti': 2, 'tin': 2, 'in:': 1, ""'nb"": 1, ""nb'"": 1, ""b'\n"": 2, 'in.': 1, 'n.P': 1, '""#3': 1, '#34': 1, '346': 1, '465': 1, '65a': 1, '5a4': 1, 'a4""': 1, '4"",': 2, "" 'b"": 1, ""'bp"": 1, ""bp'"": 1, ""'nc"": 1, ""nc'"": 1, ""c' "": 2, ""'no"": 1, ""no'"": 1, ""o' "": 1, 'e.D': 1, 'ora': 1, '""#8': 2, '#88': 2, '888': 2, '88""': 2, ""'nd"": 1, ""nd'"": 1, ""d' "": 2, 'e.E': 2, '.En': 1, 'Ent': 1, 'nti': 1, 'tit': 1, 'ity': 1, 'ty:': 2, 'y: ': 2, '#ce': 1, 'ce5': 1, 'e5c': 1, '5c0': 1, 'c00': 2, ""'ni"": 1, ""ni'"": 1, ""i'\n"": 3, '.Ex': 1, 'Exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pti': 1, ' #c': 1, '#cc': 1, 'cc0': 1, ""'ne"": 1, ""ne'"": 1, ""e'\n"": 3, ""'nf"": 1, ""nf'"": 1, ""f'\n"": 1, 'e.P': 1, 'Pro': 2, 'rop': 1, 'ope': 1, 'ert': 2, 'rty': 1, ""'py"": 1, ""py'"": 1, ""y'\n"": 1, 'e.L': 1, '.La': 1, 'Lab': 1, 'abe': 1, 'bel': 1, 'el:': 1, 'l: ': 5, '#f5': 1, 'f57': 1, '579': 1, '790': 1, '900': 2, ""'nl"": 1, ""nl'"": 1, ""l'\n"": 2, 'e.N': 1, ""'nn"": 1, ""nn'"": 1, ""n' "": 1, 'e.O': 1, '.Ot': 2, ""'nx"": 1, ""nx'"": 1, 'e.T': 1, '.Ta': 1, 'Tag': 1, 'ag:': 1, 'g: ': 5, ""'nt"": 1, ""nt'"": 1, ""t' "": 1, ' a ': 2, 'a k': 1, 'rd\n': 1, 'e.V': 4, '.Va': 4, 'Var': 4, 'le:': 3, ""'nv"": 1, ""nv'"": 1, ""v' "": 1, 'le.': 3, "" 'v"": 3, ""'vc"": 1, ""vc'"": 1, 'e.G': 1, '.Gl': 1, 'Glo': 1, 'lob': 1, 'oba': 1, 'bal': 1, 'al:': 2, ""'vg"": 1, ""vg'"": 1, ""g' "": 1, 'e.I': 1, '.In': 3, 'Ins': 2, 'anc': 1, 'nce': 1, ""'vi"": 1, ""vi'"": 1, ""i' "": 1, '""#9': 1, '#99': 1, '990': 1, "" 'm"": 1, ""'m'"": 1, ""m'\n"": 1, '  L': 2, "" 'l"": 2, ""'l'"": 1, 'al.': 1, 'l.D': 1, '.Da': 1, 'Dat': 1, ""'ld"": 1, ""ld'"": 1, '  S': 12, '""#4': 11, '#4e': 11, '4e9': 11, 'e9a': 11, '9a0': 11, 'a06': 11, '06""': 11, '6"",': 11, "" 's"": 12, ""'s'"": 1, ""s'\n"": 3, 'ng.': 11, 'g.B': 1, '.Ba': 1, 'Bac': 1, 'ckt': 1, 'kti': 1, 'tic': 1, 'ick': 1, 'ck:': 2, 'k: ': 2, ""'sb"": 1, ""sb'"": 1, 'g.C': 1, '.Ch': 1, 'Cha': 1, 'har': 1, 'ar:': 1, ""'sc"": 1, ""sc'"": 1, 'g.D': 2, '.Do': 2, 'Doc': 1, ""'sd"": 1, ""sd'"": 1, 'a c': 1, 'com': 1, 'nt\n': 1, 't\n ': 1, 'Dou': 1, 'oub': 1, 'ubl': 1, ""'s2"": 1, ""s2'"": 1, ""2'\n"": 1, 'g.E': 1, '.Es': 1, 'Esc': 1, 'sca': 1, 'cap': 1, 'ape': 1, ""'se"": 1, ""se'"": 1, 'g.H': 1, '.He': 2, 'Her': 1, 'ere': 1, 'red': 1, 'edo': 1, 'doc': 1, ""'sh"": 1, ""sh'"": 1, ""h'\n"": 2, 'g.I': 1, 'Int': 1, 'nte': 1, 'erp': 1, 'rpo': 1, 'pol': 1, 'ol:': 2, ""'si"": 1, ""si'"": 1, 'g.O': 1, ""'sx"": 1, ""sx'"": 1, 'g.R': 1, 'Reg': 1, 'ege': 1, 'gex': 1, 'ex:': 1, 'x: ': 1, ""'sr"": 1, ""sr'"": 1, 'g.S': 2, '.Si': 1, 'Sin': 1, 'ngl': 1, 'gle': 1, ""'s1"": 1, ""s1'"": 1, ""1'\n"": 1, '.Sy': 1, 'Sym': 1, 'ymb': 1, 'mbo': 1, ""'ss"": 1, ""ss'"": 1, '  G': 11, 'ic:': 1, "" 'g"": 11, ""'g'"": 1, ""g'\n"": 1, 'ic.': 10, 'c.D': 1, 'Del': 1, 'ele': 1, 'let': 1, 'ete': 1, 'ted': 2, ""'gd"": 1, ""gd'"": 1, 'c.E': 2, '.Em': 1, 'Emp': 1, 'mph': 1, 'ph:': 1, 'h: ': 1, ""'ge"": 1, ""ge'"": 1, '.Er': 1, '""#e': 1, ""'gr"": 1, ""gr'"": 1, 'c.H': 1, 'Hea': 1, 'ead': 2, 'adi': 2, '008': 2, '080': 2, '80""': 2, ""'gh"": 1, ""gh'"": 1, 'c.I': 1, 'nse': 1, 'rte': 1, '00A': 1, '0A0': 1, 'A00': 1, ""'gi"": 1, ""gi'"": 1, 'c.O': 1, '.Ou': 1, 'Out': 1, 'utp': 1, 'tpu': 1, 'put': 1, 'ut:': 1, ""'go"": 1, ""go'"": 1, 'c.P': 1, 'omp': 1, 'mpt': 1, 'pt:': 1, '""#7': 1, '#74': 1, '745': 1, '453': 1, '533': 1, '334': 1, '34""': 1, ""'gp"": 1, ""gp'"": 1, 'c.S': 2, '.St': 1, 'tro': 1, 'ron': 1, 'ong': 1, ""'gs"": 1, ""gs'"": 1, '.Su': 1, 'Sub': 1, 'ubh': 1, 'bhe': 1, 'hea': 1, '#80': 1, ""'gu"": 1, ""gu'"": 1, ""u'\n"": 1, 'c.T': 1, '.Tr': 1, 'Tra': 1, 'rac': 1, 'ceb': 1, 'eba': 1, ' #a': 1, ""'gt"": 1, ""gt'"": 1, '  }': 1, ' }\n': 1}"
Kenneth Reitz Archive,formdata.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 3, '-*-': 2, 'coding:': 1, 'utf-8': 1, '""""""implementation': 1, 'of': 4, 'nested': 5, 'form-data': 2, 'encoding': 1, 'function(s).""""""': 1, 'from': 4, '.._compat': 2, 'import': 6, 'basestring': 1, 'urlencode': 2, 'as': 1, '_urlencode': 1, '__all__': 1, '=': 14, '(""urlencode"",)': 1, 'def': 4, 'urlencode(query,': 1, '*args,': 2, '**kwargs):': 1, '""""""handle': 1, 'queries': 1, 'and': 4, 'serialize': 1, 'them': 1, 'appropriately.': 1, 'there': 1, 'are': 1, 'times': 1, 'when': 2, 'a': 5, 'website': 1, 'expects': 1, 'form': 1, 'data': 2, 'query': 4, 'to': 5, 'be': 3, 'sent': 1, 'but,': 1, 'the': 7, 'standard': 1, ""library's"": 1, 'function': 2, 'does': 1, 'not': 2, 'appropriately': 1, 'handle': 1, 'structures.': 1, 'in': 6, 'that': 1, 'case,': 1, 'you': 3, 'need': 1, 'this': 2, 'which': 1, 'will': 1, 'flatten': 1, 'structure': 1, 'first': 1, 'then': 1, 'properly': 1, 'encode': 1, 'it': 1, 'for': 7, 'you.': 1, 'using': 1, 'send': 1, 'body': 1, 'request,': 1, 'make': 1, 'sure': 1, 'specify': 2, 'appropriate': 1, 'content-type': 1, 'header': 1, 'request.': 1, '..': 3, 'code-block::': 2, 'python': 2, 'requests': 2, 'requests_toolbelt.utils': 2, 'formdata': 2, '{': 2, ""'my_dict':"": 1, ""'foo':"": 1, ""'bar',"": 1, ""'biz':"": 1, '\'baz"",': 1, '},': 3, ""'a':"": 1, ""'b',"": 1, '}': 1, 'resp': 4, 'requests.get(url,': 2, 'params=formdata.urlencode(query))': 2, 'or': 2, 'requests.post(': 2, 'url,': 2, 'data=formdata.urlencode(query),': 2, 'headers={': 2, ""'content-type':"": 2, ""'application/x-www-form-urlencoded'"": 2, ')': 3, 'similarly,': 1, 'can': 1, 'list': 1, 'tuples,': 1, 'e.g.,': 1, '[': 2, ""('my_list',"": 1, ""('foo',"": 1, ""'bar'),"": 1, ""('biz',"": 1, ""'baz'),"": 1, ']),': 1, ""('a',"": 1, ""'b'),"": 1, ']': 1, 'additional': 1, 'parameter': 1, 'return': 6, 'information,': 1, 'see': 1, 'official': 1, '`urlencode`_': 1, 'documentation.': 1, '_urlencode:': 1, 'https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlencode': 1, '""""""': 1, 'expand_classes': 1, '(dict,': 1, 'list,': 1, 'tuple)': 1, 'original_query_list': 2, '_to_kv_list(query)': 1, 'if': 3, 'all(_is_two_tuple(i)': 1, 'i': 1, 'original_query_list):': 1, 'raise': 1, 'valueerror(': 1, '""expected': 1, 'able': 1, 'converted': 1, '""': 1, '""list': 1, 'comprised': 1, 'length': 1, '2': 2, 'tuples.""': 1, 'query_list': 4, 'while': 1, 'any(isinstance(v,': 1, 'expand_classes)': 1, '_,': 1, 'v': 2, 'query_list):': 1, '_expand_query_values(query_list)': 1, '_urlencode(query_list,': 1, '**kwargs)': 1, '_to_kv_list(dict_or_list):': 1, 'hasattr(dict_or_list,': 1, '""items""):': 1, 'list(dict_or_list.items())': 1, 'dict_or_list': 1, '_is_two_tuple(item):': 1, 'isinstance(item,': 1, '(list,': 1, 'tuple))': 1, 'len(item)': 1, '==': 1, '_expand_query_values(original_query_list):': 1, '[]': 1, 'key,': 1, 'value': 1, 'original_query_list:': 1, 'isinstance(value,': 1, 'basestring):': 1, 'query_list.append((key,': 1, 'value))': 1, 'else:': 1, 'key_fmt': 1, 'key': 1, '+': 1, '""[%s]""': 1, 'value_list': 1, '_to_kv_list(value)': 1, 'query_list.extend((key_fmt': 1, '%': 1, 'k,': 2, 'v)': 1, 'value_list)': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 5, 'cod': 20, 'odi': 2, 'din': 2, 'ing': 5, 'ng:': 1, 'g: ': 1, ': u': 1, ' ut': 1, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\n""': 1, '\n""""': 1, '""""""': 4, '""""I': 1, '""Im': 1, 'Imp': 1, 'mpl': 1, 'ple': 7, 'lem': 1, 'eme': 1, 'men': 2, 'ent': 6, 'nta': 2, 'tat': 2, 'ati': 5, 'tio': 9, 'ion': 9, 'on ': 3, 'n o': 3, ' of': 5, 'of ': 4, 'f n': 3, ' ne': 6, 'nes': 5, 'est': 17, 'ste': 5, 'ted': 7, 'ed ': 9, 'd f': 3, ' fo': 11, 'for': 18, 'orm': 12, 'rm-': 4, 'm-d': 2, '-da': 2, 'dat': 12, 'ata': 12, 'ta ': 4, 'a e': 1, ' en': 2, 'enc': 17, 'nco': 17, 'ng ': 2, 'g f': 1, ' fu': 3, 'fun': 3, 'unc': 3, 'nct': 3, 'cti': 3, 'on(': 1, 'n(s': 1, '(s)': 1, 's).': 1, ').""': 1, '.""""': 1, '""""\n': 2, '""\nf': 1, '\nfr': 2, 'fro': 4, 'rom': 4, 'om ': 4, 'm .': 2, ' ..': 5, '.._': 2, '._c': 2, '_co': 2, 'com': 3, 'omp': 3, 'mpa': 2, 'pat': 2, 'at ': 3, 't i': 2, ' im': 6, 'imp': 6, 'mpo': 6, 'por': 6, 'ort': 6, 'rt ': 6, 't b': 1, ' ba': 2, 'bas': 2, 'ase': 3, 'ses': 4, 'str': 4, 'tri': 2, 'rin': 2, 'ng\n': 1, 'g\nf': 1, 't u': 1, ' ur': 5, 'url': 21, 'rle': 15, 'len': 17, 'ode': 18, 'de ': 3, 'e a': 5, ' as': 1, 'as ': 1, 's _': 1, ' _u': 3, '_ur': 3, 'de\n': 2, 'e\n\n': 1, '\n\n\n': 5, '\n\n_': 1, '\n__': 1, '__a': 1, '_al': 1, 'all': 2, 'll_': 1, 'l__': 1, '__ ': 1, '_ =': 1, ' = ': 14, '= (': 2, ' (""': 1, '(""u': 1, '""ur': 1, 'de""': 1, 'e"",': 1, '"",)': 1, ',)\n': 1, ')\n\n': 7, '\n\nd': 4, '\nde': 4, 'def': 4, 'ef ': 4, 'f u': 1, 'de(': 6, 'e(q': 6, '(qu': 8, 'que': 37, 'uer': 27, 'ery': 26, 'ry,': 1, 'y, ': 4, ', *': 4, ' *a': 2, '*ar': 2, 'arg': 4, 'rgs': 4, 'gs,': 2, 's, ': 3, ' **': 2, '**k': 2, '*kw': 2, 'kwa': 2, 'war': 2, 'gs)': 2, 's):': 1, '):\n': 8, ':\n ': 11, '\n  ': 75, '   ': 471, '  ""': 4, ' """"': 2, '""""H': 1, '""Ha': 1, 'Han': 1, 'and': 11, 'ndl': 2, 'dle': 2, 'le ': 4, 'e n': 2, 'a q': 2, ' qu': 12, 'eri': 2, 'rie': 1, 'ies': 1, 'es ': 4, 's a': 2, ' an': 5, 'nd ': 5, 'd s': 2, ' se': 4, 'ser': 1, 'ria': 4, 'ial': 2, 'ali': 1, 'liz': 1, 'ize': 1, 'ze ': 1, 'e t': 5, ' th': 12, 'the': 9, 'hem': 1, 'em ': 1, 'm a': 1, ' ap': 3, 'app': 6, 'ppr': 3, 'pro': 4, 'rop': 4, 'opr': 3, 'pri': 4, 'iat': 3, 'ate': 3, 'tel': 2, 'ely': 2, 'ly.': 1, 'y.\n': 1, '.\n\n': 4, '\n\n ': 16, '  T': 1, ' Th': 1, 'The': 1, 'her': 1, 'ere': 1, 're ': 4, ' ar': 1, 'are': 1, ' ti': 1, 'tim': 1, 'ime': 1, 'mes': 1, 's w': 1, ' wh': 3, 'whe': 1, 'hen': 3, 'en ': 4, 'n a': 1, ' a ': 5, 'a w': 1, ' we': 1, 'web': 1, 'ebs': 1, 'bsi': 1, 'sit': 1, 'ite': 6, 'te ': 2, 'e e': 1, ' ex': 3, 'exp': 5, 'xpe': 2, 'pec': 4, 'ect': 2, 'cts': 1, 'ts ': 1, 'a n': 1, 'rm ': 1, 'm d': 1, ' da': 4, 'ry ': 4, 'y t': 3, ' to': 5, 'to ': 5, 'o b': 3, ' be': 3, 'be ': 3, 'e s': 4, 'sen': 2, 'nt\n': 1, 't\n ': 2, '  b': 1, ' bu': 1, 'but': 1, 'ut,': 1, 't, ': 7, ', t': 3, 'he ': 7, ' st': 3, 'sta': 4, 'tan': 4, 'nda': 1, 'dar': 1, 'ard': 1, 'rd ': 1, 'd l': 2, ' li': 4, 'lib': 4, 'ibr': 2, 'bra': 2, 'rar': 2, 'ary': 2, ""ry'"": 1, ""y's"": 1, ""'s "": 1, 's u': 1, 'e f': 2, 'n d': 2, ' do': 2, 'doe': 1, 'oes': 1, 's n': 1, ' no': 2, 'not': 2, 'ot ': 2, 't a': 3, 'ly\n': 1, 'y\n ': 1, '  h': 4, ' ha': 2, 'han': 1, 'tru': 2, 'ruc': 2, 'uct': 2, 'ctu': 2, 'tur': 8, 'ure': 3, 'res': 5, 'es.': 2, 's. ': 1, '. I': 1, ' In': 1, 'In ': 1, 'n t': 3, 'tha': 1, 'hat': 1, 't c': 2, ' ca': 2, 'cas': 1, 'se,': 1, 'e, ': 2, ', y': 2, ' yo': 4, 'you': 4, 'ou ': 2, 'u n': 1, 'nee': 1, 'eed': 1, 'd t': 4, 'thi': 2, 'his': 2, 'is ': 2, 's f': 1, 'n w': 1, 'whi': 2, 'hic': 1, 'ich': 1, 'ch\n': 1, 'h\n ': 1, '  w': 2, ' wi': 1, 'wil': 1, 'ill': 1, 'll ': 1, 'l f': 1, ' fl': 1, 'fla': 1, 'lat': 1, 'att': 2, 'tte': 1, 'ten': 5, ' fi': 1, 'fir': 1, 'irs': 1, 'rst': 1, 'st ': 8, 'n p': 1, ' pr': 1, 'ope': 1, 'per': 1, 'erl': 1, 'rly': 2, 'ly ': 1, 'y e': 1, 'e i': 2, ' it': 1, 'it ': 1, 't f': 3, 'or ': 7, 'r y': 1, 'ou.': 1, 'u.\n': 1, '  W': 1, ' Wh': 1, 'Whe': 1, 'n u': 1, ' us': 1, 'usi': 1, 'sin': 4, 'g t': 1, 's t': 1, 'o s': 1, 'end': 3, 'd d': 1, 'a i': 1, ' in': 6, 'in ': 5, 'e b': 1, ' bo': 1, 'bod': 1, 'ody': 1, 'dy ': 1, 'y o': 1, 'f a': 1, 'a r': 1, ' re': 20, 'req': 10, 'equ': 10, 'ues': 12, 'st,': 5, ', m': 1, ' ma': 1, 'mak': 1, 'ake': 1, 'ke ': 1, ' su': 1, 'sur': 1, 'e y': 1, 'ou\n': 1, 'u\n ': 1, '  s': 1, ' sp': 2, 'spe': 2, 'eci': 2, 'cif': 2, 'ify': 2, 'fy ': 2, 'e C': 1, ' Co': 1, 'Con': 3, 'ont': 3, 'nte': 3, 'nt-': 3, 't-T': 3, '-Ty': 3, 'Typ': 3, 'ype': 3, 'pe ': 1, 'e h': 1, ' he': 3, 'hea': 3, 'ead': 3, 'ade': 3, 'der': 3, 'er ': 2, 'r f': 1, 'r t': 1, 'e r': 1, 'st.': 4, 't.\n': 1, '  .': 3, '.. ': 3, '. c': 2, 'de-': 2, 'e-b': 2, '-bl': 2, 'blo': 2, 'loc': 2, 'ock': 2, 'ck:': 2, 'k::': 2, ':: ': 2, ': p': 2, ' py': 2, 'pyt': 3, 'yth': 3, 'tho': 3, 'hon': 3, 'on\n': 2, 'n\n\n': 2, '  i': 5, 't r': 2, 'sts': 8, 'ts\n': 2, 's\n ': 2, '  f': 3, ' fr': 2, 'm r': 2, 'ts_': 2, 's_t': 4, '_to': 5, 'too': 2, 'ool': 2, 'olb': 2, 'lbe': 2, 'bel': 2, 'elt': 2, 'lt.': 2, 't.u': 2, '.ut': 2, 'uti': 2, 'til': 2, 'ils': 2, 'ls ': 2, 's i': 2, 'rmd': 6, 'mda': 6, 'ta\n': 2, 'a\n\n': 2, '  q': 7, 'y =': 2, '= {': 1, ' {\n': 2, '{\n ': 4, ""  '"": 6, "" 'm"": 1, ""'my"": 2, 'my_': 2, 'y_d': 1, '_di': 1, 'dic': 6, 'ict': 6, ""ct'"": 1, ""t':"": 1, ""': "": 6, ': {': 1, "" 'f"": 1, ""'fo"": 2, 'foo': 2, ""oo'"": 2, ""o':"": 1, "": '"": 5, "" 'b"": 7, ""'ba"": 4, 'bar': 2, ""ar'"": 2, ""r',"": 1, ""',\n"": 2, ',\n ': 14, ""'bi"": 2, 'biz': 2, ""iz'"": 2, ""z':"": 1, 'baz': 2, 'az""': 1, 'z"",': 1, '"",\n': 1, '  }': 4, ' },': 3, '},\n': 3, "" 'a"": 3, ""'a'"": 2, ""a':"": 1, ""'b'"": 2, ""b',"": 1, ' }\n': 1, '}\n\n': 1, '  r': 10, 'esp': 4, 'sp ': 4, 'p =': 4, '= r': 4, 'ts.': 4, 's.g': 2, '.ge': 2, 'get': 2, 'et(': 2, 't(u': 2, '(ur': 2, 'rl,': 4, 'l, ': 2, ', p': 2, ' pa': 3, 'par': 5, 'ara': 3, 'ram': 3, 'ams': 2, 'ms=': 2, 's=f': 2, '=fo': 4, 'ta.': 4, 'a.u': 4, '.ur': 5, 'ry)': 5, 'y))': 2, '))\n': 4, ')\n ': 7, '  #': 2, ' # ': 2, '# o': 2, ' or': 6, 'or\n': 2, 'r\n ': 2, 's.p': 3, '.po': 2, 'pos': 2, 'ost': 2, 'st(': 6, 't(\n': 2, '(\n ': 3, '  u': 2, 'l,\n': 2, '  d': 2, 'ta=': 2, 'a=f': 2, 'y),': 2, '),\n': 6, 'ers': 2, 'rs=': 2, 's={': 2, '={\n': 2, "" 'C"": 2, ""'Co"": 2, ""pe'"": 2, ""e':"": 2, ""'ap"": 2, 'ppl': 2, 'pli': 2, 'lic': 2, 'ica': 2, 'cat': 2, 'on/': 2, 'n/x': 2, '/x-': 2, 'x-w': 2, '-ww': 2, 'www': 2, 'ww-': 2, 'w-f': 2, '-fo': 2, 'm-u': 2, '-ur': 2, 'ded': 2, ""ed'"": 2, ""d'\n"": 2, ""'\n "": 2, '  )': 3, ' )\n': 3, '  S': 1, ' Si': 1, 'Sim': 1, 'imi': 1, 'mil': 1, 'ila': 1, 'lar': 1, 'arl': 1, 'ly,': 1, 'u c': 1, 'can': 1, 'an ': 1, 'n s': 1, 'y a': 1, 'a l': 1, 'lis': 29, 'ist': 29, 't o': 1, ' tu': 4, 'tup': 6, 'upl': 6, 'les': 2, 'es,': 1, ', e': 2, ' e.': 1, 'e.g': 1, '.g.': 1, 'g.,': 1, '.,\n': 1, ',\n\n': 1, '= [': 2, ' [\n': 2, '[\n ': 2, '  (': 4, "" ('"": 4, ""('m"": 1, 'y_l': 15, '_li': 24, ""st'"": 1, ""t',"": 1, ""', "": 4, ', [': 1, ""('f"": 1, ""o',"": 1, "", '"": 3, ""r')"": 1, ""'),"": 3, ""('b"": 1, ""z',"": 1, ""az'"": 1, ""z')"": 1, '  ]': 2, ' ])': 1, ']),': 1, ""('a"": 1, ""a',"": 1, ""b')"": 1, ' ]\n': 1, ']\n\n': 1, '  F': 1, ' Fo': 1, 'For': 1, 'r a': 2, ' ad': 1, 'add': 1, 'ddi': 1, 'dit': 1, 'iti': 1, 'ona': 1, 'nal': 6, 'al ': 1, 'l p': 1, 'ame': 1, 'met': 1, 'ete': 1, 'ter': 1, 'd r': 1, 'ret': 6, 'etu': 6, 'urn': 6, 'rn ': 6, 'n i': 2, 'inf': 1, 'nfo': 1, 'rma': 1, 'mat': 1, 'on,': 1, 'n, ': 1, ', s': 1, 'see': 1, 'ee ': 1, 'e o': 1, 'off': 1, 'ffi': 1, 'fic': 1, 'ici': 1, 'cia': 1, 'al\n': 1, 'l\n ': 1, '  `': 1, ' `u': 1, '`ur': 1, 'de`': 1, 'e`_': 1, '`_ ': 1, '_ d': 1, 'doc': 2, 'ocu': 1, 'cum': 1, 'ume': 1, 'on.': 2, 'n.\n': 1, '. _': 1, 'de:': 1, 'e:\n': 2, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//d': 1, '/do': 1, 'ocs': 1, 'cs.': 1, '.py': 1, 'n.o': 1, '.or': 1, 'org': 1, 'rg/': 1, 'g/3': 1, '/3/': 1, '3/l': 1, '/li': 1, 'ry/': 1, 'y/u': 1, '/ur': 1, 'rll': 2, 'lli': 2, 'ib.': 2, 'b.p': 2, '.pa': 2, 'ars': 2, 'rse': 2, 'se.': 2, 'e.h': 1, '.ht': 1, 'htm': 1, 'tml': 1, 'ml#': 1, 'l#u': 1, '#ur': 1, 'e.u': 1, 'e\n ': 1, '""\n ': 4, '  e': 2, 'xpa': 4, 'pan': 4, 'nd_': 4, 'd_c': 2, '_cl': 2, 'cla': 2, 'las': 2, 'ass': 2, 'sse': 2, 's =': 1, ' (d': 1, '(di': 4, 'ct,': 1, ', l': 1, 'le)': 2, 'e)\n': 2, '  o': 1, 'ori': 5, 'rig': 5, 'igi': 5, 'gin': 5, 'ina': 5, 'al_': 5, 'l_q': 5, '_qu': 7, 'ry_': 16, 't =': 6, '= _': 3, ' _t': 3, 'to_': 3, 'o_k': 3, '_kv': 3, 'kv_': 3, 'v_l': 3, 't(q': 1, 'y)\n': 1, ' if': 3, 'if ': 3, ' al': 1, 'll(': 1, 'l(_': 1, '(_i': 1, '_is': 2, 'is_': 2, '_tw': 2, 'two': 2, 'wo_': 2, 'o_t': 2, '_tu': 2, 'le(': 2, 'e(i': 3, '(i)': 1, 'i) ': 1, ') f': 3, 'r i': 1, ' i ': 1, 'i i': 1, 'st)': 6, 't):': 4, ' ra': 1, 'rai': 1, 'ais': 1, 'ise': 2, 'se ': 1, 'e V': 1, ' Va': 1, 'Val': 1, 'alu': 9, 'lue': 9, 'ueE': 1, 'eEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or(': 1, 'r(\n': 1, ' ""E': 1, '""Ex': 1, 'Exp': 1, 'cte': 1, 'd q': 1, ' ab': 1, 'abl': 1, 'ble': 1, 'e c': 1, 'con': 1, 'onv': 1, 'nve': 1, 'ver': 1, 'ert': 1, 'rte': 1, 'o a': 1, 'a ""': 1, ' ""\n': 1, ' ""l': 1, '""li': 1, 'mpr': 1, 'ris': 1, 'sed': 1, 'd o': 1, 'f l': 1, ' le': 2, 'eng': 1, 'ngt': 1, 'gth': 1, 'th ': 1, 'h 2': 1, ' 2 ': 1, '2 t': 1, 's.""': 1, '.""\n': 1, '= o': 1, 'st\n': 3, 'hil': 1, 'ile': 1, 'any': 1, 'ny(': 1, 'y(i': 1, '(is': 1, 'isi': 3, 'ins': 3, 'nst': 3, 'anc': 3, 'nce': 3, 'ce(': 3, 'e(v': 2, '(v,': 1, 'v, ': 1, 'es)': 1, 's) ': 1, 'r _': 1, ' _,': 1, '_, ': 1, ', v': 5, ' v ': 2, 'v i': 2, 'n q': 2, ' _e': 2, '_ex': 2, 'd_q': 2, 'y_v': 2, '_va': 2, 'val': 8, 'es(': 2, 's(q': 1, 't)\n': 2, 'n _': 1, 's)\n': 1, 'f _': 3, 't(d': 2, 'ct_': 4, 't_o': 4, '_or': 4, 'or_': 4, 'r_l': 4, 'f h': 1, 'has': 1, 'asa': 1, 'sat': 1, 'ttr': 1, 'tr(': 1, 'r(d': 1, ', ""': 1, ' ""i': 1, '""it': 1, 'tem': 5, 'ems': 2, 'ms""': 1, 's"")': 1, '""):': 1, 'n l': 1, 't.i': 1, '.it': 1, 'ms(': 1, 's()': 1, '())': 1, ' di': 1, 't\n\n': 1, ' _i': 1, '(it': 3, 'em)': 2, 'm):': 1, ' is': 2, 'em,': 1, 'm, ': 1, ', (': 1, ' (l': 1, '(li': 1, 'e))': 2, ')) ': 1, ') a': 1, 'en(': 1, 'n(i': 1, 'm) ': 1, ') =': 1, ' ==': 1, '== ': 1, '= 2': 1, ' 2\n': 1, '2\n\n': 1, 's(o': 1, '(or': 1, ' []': 1, '[]\n': 1, ']\n ': 1, 'r k': 2, ' ke': 3, 'key': 5, 'ey,': 2, ' va': 4, 'ue ': 1, 'st:': 1, 't:\n': 1, 'f i': 1, '(va': 2, 'ue,': 1, ', b': 1, 'ng)': 1, 'g):': 1, 't.a': 1, '.ap': 1, 'ppe': 1, 'pen': 1, 'nd(': 2, 'd((': 2, '((k': 2, '(ke': 2, 'ue)': 2, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, '  k': 1, 'ey_': 2, 'y_f': 2, '_fm': 2, 'fmt': 2, 'mt ': 2, '= k': 1, 'ey ': 1, 'y +': 1, ' + ': 1, '+ ""': 1, ' ""[': 1, '""[%': 1, '[%s': 1, '%s]': 1, 's]""': 1, ']""\n': 1, '  v': 1, 'ue_': 2, 'e_l': 2, 't(v': 1, 't.e': 1, '.ex': 1, 'ext': 1, 'xte': 1, 't %': 1, ' % ': 1, '% k': 1, ' k,': 2, 'k, ': 2, ' v)': 1, 'v) ': 1, 'n v': 1}"
Kenneth Reitz Archive,guess.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 10, '-*-': 2, 'coding:': 1, 'utf-8': 1, '""""""the': 1, 'module': 1, 'containing': 1, 'the': 8, 'code': 1, 'for': 2, 'guessauth.""""""': 1, 'from': 3, 'requests': 4, 'import': 3, 'auth': 5, 'cookies': 1, '.': 1, '_digest_auth_compat': 1, 'as': 1, 'auth_compat,': 1, 'http_proxy_digest': 1, 'class': 2, 'guessauth(auth.authbase):': 1, '""""""guesses': 1, 'type': 2, 'by': 3, 'www-authentication': 2, 'header.""""""': 1, 'def': 10, '__init__(self,': 1, 'username,': 1, 'password):': 1, 'self.username': 1, '=': 27, 'username': 1, 'self.password': 1, 'password': 1, 'self.auth': 4, 'none': 3, 'self.pos': 5, '_handle_basic_auth_401(self,': 1, 'r,': 6, 'kwargs):': 4, 'if': 13, 'is': 6, 'not': 9, 'none:': 5, 'r.request.body.seek(self.pos)': 2, 'consume': 1, 'content': 1, 'and': 4, 'release': 1, 'original': 1, 'connection': 1, 'to': 2, 'allow': 1, 'our': 1, 'new': 1, 'request': 5, 'reuse': 1, 'same': 1, 'one.': 1, 'r.content': 2, 'r.raw.release_conn()': 2, 'prep': 6, 'r.request.copy()': 2, 'hasattr(prep,': 2, '""_cookies""):': 2, 'prep._cookies': 2, 'cookies.requestscookiejar()': 2, 'cookies.extract_cookies_to_jar(prep._cookies,': 2, 'r.request,': 2, 'r.raw)': 2, 'prep.prepare_cookies(prep._cookies)': 2, 'auth.httpbasicauth(self.username,': 1, 'self.password)': 2, 'self.auth(prep)': 1, '_r': 4, 'r.connection.send(prep,': 2, '**kwargs)': 4, '_r.history.append(r)': 2, '_r.request': 2, 'return': 11, '_handle_digest_auth_401(self,': 1, 'auth_compat.httpdigestauth(self.username,': 1, 'try:': 4, 'self.auth.init_per_thread_state()': 2, 'except': 4, 'attributeerror:': 4, ""we're"": 1, 'on': 1, '2.8.0+': 1, 'this': 2, 'method': 1, 'does': 1, 'exist': 1, 'relevant.': 1, 'pass': 4, 'check': 1, 'that': 1, 'attr': 1, 'exists': 1, 'because': 1, 'much': 1, 'older': 1, 'versions': 1, 'of': 1, 'set': 1, 'attribute': 1, 'lazily.': 1, 'example:': 1, 'https://github.com/kennethreitz/requests/blob/33735480f77891754304e7f13e3cdf83aaaa76aa/requests/auth.py#l59': 1, 'hasattr(self.auth,': 1, '""num_401_calls"")': 1, 'self.auth.num_401_calls': 2, '1': 1, 'digest': 1, 'would': 1, 'resend': 1, 'itself.': 1, 'we': 1, 'can': 1, 'take': 1, 'a': 2, 'shortcut': 1, 'here.': 1, 'self.auth.handle_401(r,': 1, 'handle_401(self,': 1, '**kwargs):': 2, '""""""resends': 1, 'with': 1, 'headers,': 1, 'needed.""""""': 1, 'www_authenticate': 1, 'r.headers.get(""www-authenticate"",': 1, '"""").lower()': 2, '""basic""': 2, 'in': 4, 'www_authenticate:': 2, 'self._handle_basic_auth_401(r,': 1, 'kwargs)': 4, '""digest""': 2, 'self._handle_digest_auth_401(r,': 1, '__call__(self,': 2, 'request):': 2, 'self.auth(request)': 1, 'request.body.tell()': 2, 'request.register_hook(""response"",': 2, 'self.handle_401)': 1, 'guessproxyauth(guessauth):': 1, '""""""': 2, 'guesses': 1, 'proxy-authentication': 1, 'headers': 1, '__init__(': 1, 'self,': 1, 'username=none,': 1, 'password=none,': 1, 'proxy_username=none,': 1, 'proxy_password=none': 1, '):': 1, 'super(guessproxyauth,': 2, 'self).__init__(username,': 1, 'password)': 1, 'self.proxy_username': 1, 'proxy_username': 1, 'self.proxy_password': 1, 'proxy_password': 1, 'self.proxy_auth': 4, '_handle_basic_auth_407(self,': 1, 'auth.httpproxyauth(self.proxy_username,': 1, 'self.proxy_password)': 1, 'self.proxy_auth(prep)': 1, '_handle_digest_auth_407(self,': 1, 'http_proxy_digest.httpproxydigestauth(': 1, 'username=self.proxy_username,': 1, 'password=self.proxy_password': 1, ')': 1, 'self.proxy_auth.handle_407(r,': 1, 'handle_407(self,': 1, 'proxy_authenticate': 1, 'r.headers.get(""proxy-authenticate"",': 1, 'proxy_authenticate:': 2, 'self._handle_basic_auth_407(r,': 1, 'self._handle_digest_auth_407(r,': 1, 'self.proxy_auth(request)': 1, 'self.handle_407)': 1, 'self).__call__(request)': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 10, 'cod': 2, 'odi': 1, 'din': 1, 'ing': 2, 'ng:': 1, 'g: ': 1, ': u': 1, ' ut': 1, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\n""': 1, '\n""""': 1, '""""""': 8, '""""T': 1, '""Th': 1, 'The': 1, 'he ': 9, 'e m': 2, ' mo': 1, 'mod': 1, 'odu': 1, 'dul': 1, 'ule': 1, 'le ': 1, 'e c': 4, 'con': 9, 'ont': 4, 'nta': 1, 'tai': 1, 'ain': 1, 'ini': 6, 'nin': 1, 'ng ': 1, 'g t': 1, ' th': 11, 'the': 19, 'ode': 1, 'de ': 1, 'e f': 1, ' fo': 1, 'for': 1, 'or ': 2, 'r G': 1, ' Gu': 4, 'Gue': 8, 'ues': 38, 'ess': 8, 'ssA': 3, 'sAu': 3, 'Aut': 15, 'uth': 61, 'th.': 11, 'h.""': 1, '.""""': 3, '""""\n': 5, '""\nf': 1, '\nfr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm r': 2, ' re': 30, 'req': 28, 'equ': 30, 'que': 30, 'est': 42, 'sts': 9, 'ts ': 4, 's i': 5, ' im': 3, 'imp': 3, 'mpo': 3, 'por': 3, 'ort': 4, 'rt ': 3, 't a': 5, ' au': 9, 'aut': 46, 'th\n': 1, 'h\nf': 1, 't c': 1, 'coo': 17, 'ook': 21, 'oki': 19, 'kie': 19, 'ies': 17, 'es\n': 1, 's\n\n': 5, '\n\nf': 1, 'm .': 1, ' . ': 1, '. i': 1, 't _': 1, ' _d': 1, '_di': 7, 'dig': 9, 'ige': 12, 'ges': 12, 'st_': 5, 't_a': 5, '_au': 22, 'th_': 11, 'h_c': 3, '_co': 17, 'com': 4, 'omp': 3, 'mpa': 3, 'pat': 3, 'at ': 2, ' as': 1, 'as ': 1, 's a': 3, 'at,': 1, 't, ': 3, ', h': 1, ' ht': 3, 'htt': 3, 'ttp': 3, 'tp_': 2, 'p_p': 2, '_pr': 2, 'pro': 22, 'rox': 29, 'oxy': 29, 'xy_': 22, 'y_d': 2, 'st\n': 2, 't\n\n': 2, '\n\n\n': 2, '\n\nc': 2, '\ncl': 2, 'cla': 2, 'las': 2, 'ass': 19, 'ss ': 2, 's G': 2, 'th(': 10, 'h(a': 1, '(au': 1, 'h.A': 1, '.Au': 1, 'thB': 1, 'hBa': 1, 'Bas': 2, 'ase': 4, 'se)': 1, 'e):': 1, '):\n': 14, ':\n ': 32, '\n  ': 107, '   ': 666, '  ""': 4, ' """"': 6, '""""G': 1, '""Gu': 1, 'sse': 2, 'ses': 2, 'es ': 5, 's t': 2, 'e a': 4, 'th ': 13, 'h t': 2, ' ty': 2, 'typ': 2, 'ype': 2, 'pe ': 2, 'e b': 2, ' by': 3, 'by ': 3, 'y t': 1, 'e W': 1, ' WW': 2, 'WWW': 2, 'WW-': 2, 'W-A': 2, '-Au': 4, 'hen': 11, 'ent': 14, 'nti': 11, 'tic': 11, 'ica': 11, 'cat': 11, 'ati': 3, 'tio': 6, 'ion': 7, 'on ': 3, 'n h': 1, ' he': 4, 'hea': 5, 'ead': 7, 'ade': 5, 'der': 6, 'er.': 1, 'r.""': 1, '""\n\n': 3, '\n\n ': 28, '  d': 10, ' de': 10, 'def': 10, 'ef ': 10, 'f _': 8, ' __': 4, '__i': 3, '_in': 3, 'nit': 5, 'it_': 5, 't__': 3, '__(': 6, '_(s': 3, '(se': 15, 'sel': 57, 'elf': 57, 'lf,': 10, 'f, ': 10, ', u': 2, ' us': 4, 'use': 15, 'ser': 13, 'ern': 13, 'rna': 13, 'nam': 13, 'ame': 14, 'me,': 6, 'e, ': 9, ', p': 6, ' pa': 9, 'pas': 17, 'ssw': 13, 'swo': 13, 'wor': 13, 'ord': 13, 'rd)': 5, 'd):': 1, '  s': 18, ' se': 40, 'lf.': 45, 'f.u': 3, '.us': 3, 'me ': 4, 'e =': 4, ' = ': 27, '= u': 1, 'me\n': 2, 'e\n ': 4, 'f.p': 23, '.pa': 3, 'rd ': 2, 'd =': 2, '= p': 5, 'rd\n': 3, 'd\n ': 4, 'f.a': 12, '.au': 12, 'h =': 6, '= N': 3, ' No': 8, 'Non': 12, 'one': 13, 'ne\n': 4, '.po': 7, 'pos': 7, 'os ': 5, 's =': 6, 'e\n\n': 2, ' _h': 4, '_ha': 8, 'han': 14, 'and': 18, 'ndl': 14, 'dle': 14, 'le_': 14, 'e_b': 4, '_ba': 4, 'bas': 6, 'asi': 7, 'sic': 7, 'ic_': 4, 'c_a': 4, 'h_4': 8, '_40': 17, '401': 10, '01(': 6, '1(s': 3, ', r': 12, ' r,': 6, 'r, ': 12, ', k': 8, ' kw': 8, 'kwa': 14, 'war': 14, 'arg': 14, 'rgs': 14, 'gs)': 14, 's):': 6, '  i': 11, ' if': 12, 'if ': 12, 'f s': 4, ' is': 6, 'is ': 8, 's n': 6, ' no': 9, 'not': 9, 'ot ': 9, 't N': 4, 'ne:': 5, 'e:\n': 10, '  r': 20, ' r.': 16, 'r.r': 12, '.re': 12, 'st.': 9, 't.b': 4, '.bo': 4, 'bod': 4, 'ody': 4, 'dy.': 4, 'y.s': 2, '.se': 4, 'see': 2, 'eek': 2, 'ek(': 2, 'k(s': 2, 'os)': 2, 's)\n': 12, ')\n\n': 15, '  #': 9, ' # ': 9, '# C': 2, ' Co': 1, 'Con': 1, 'ons': 4, 'nsu': 1, 'sum': 1, 'ume': 1, 'nte': 3, 'ten': 3, 'nt ': 1, ' an': 4, 'nd ': 4, 'd r': 2, 'rel': 4, 'ele': 4, 'lea': 3, 'eas': 3, 'se ': 3, 'e t': 2, 'e o': 2, ' or': 1, 'ori': 1, 'rig': 1, 'igi': 1, 'gin': 1, 'ina': 1, 'nal': 1, 'al ': 1, 'l c': 1, 'onn': 5, 'nne': 4, 'nec': 3, 'ect': 3, 'cti': 3, 'on\n': 2, 'n\n ': 2, '# t': 1, ' to': 2, 'to ': 2, 'o a': 1, ' al': 1, 'all': 7, 'llo': 1, 'low': 3, 'ow ': 1, 'w o': 1, ' ou': 1, 'our': 1, 'ur ': 1, 'r n': 1, ' ne': 2, 'new': 1, 'ew ': 1, 'w r': 1, 'st ': 8, 't t': 3, 'o r': 1, 'reu': 1, 'eus': 1, 'e s': 1, ' sa': 1, 'sam': 1, ' on': 2, 'ne.': 1, 'e.\n': 2, '.\n ': 3, 'r.c': 4, '.co': 7, 'nt\n': 2, 't\n ': 2, '.ra': 4, 'raw': 4, 'aw.': 2, 'w.r': 2, 'se_': 2, 'e_c': 4, 'nn(': 2, 'n()': 2, '()\n': 12, ')\n ': 24, '  p': 13, ' pr': 17, 'pre': 22, 'rep': 22, 'ep ': 4, 'p =': 4, '= r': 8, 't.c': 2, 'cop': 2, 'opy': 2, 'py(': 2, 'y()': 2, 'f n': 3, 't h': 3, ' ha': 5, 'has': 3, 'asa': 3, 'sat': 3, 'att': 5, 'ttr': 9, 'tr(': 3, 'r(p': 4, '(pr': 10, 'ep,': 4, 'p, ': 4, ', ""': 5, ' ""_': 2, '""_c': 2, 'es""': 2, 's"")': 3, '""):': 2, 'ep.': 8, 'p._': 6, '._c': 6, '= c': 2, 'es.': 4, 's.R': 2, '.Re': 2, 'Req': 2, 'tsC': 2, 'sCo': 2, 'Coo': 2, 'ieJ': 2, 'eJa': 2, 'Jar': 2, 'ar(': 4, 'r()': 4, '  c': 2, 's.e': 2, '.ex': 2, 'ext': 2, 'xtr': 2, 'tra': 2, 'rac': 2, 'act': 2, 'ct_': 2, 't_c': 2, 'es_': 2, 's_t': 2, '_to': 2, 'to_': 2, 'o_j': 2, '_ja': 2, 'jar': 2, 'es,': 2, 's, ': 3, 'st,': 2, 'aw)': 2, 'w)\n': 2, 'p.p': 2, '.pr': 15, 'epa': 2, 'par': 2, 'are': 2, 're_': 2, 'es(': 2, 's(p': 2, 'es)': 2, '= a': 3, 'h.H': 2, '.HT': 4, 'HTT': 4, 'TTP': 4, 'TPB': 1, 'PBa': 1, 'icA': 1, 'cAu': 1, 'h(s': 3, ', s': 7, 'd)\n': 4, '= s': 3, 'h(p': 2, 'ep)': 2, 'p)\n': 2, '  _': 6, ' _r': 8, '_r ': 2, 'r =': 2, 'on.': 2, 'n.s': 2, 'sen': 4, 'end': 6, 'nd(': 4, 'd(p': 2, ', *': 6, ' **': 6, '**k': 6, '*kw': 6, '_r.': 4, 'r.h': 4, '.hi': 2, 'his': 4, 'ist': 6, 'sto': 2, 'tor': 2, 'ory': 2, 'ry.': 2, 'y.a': 2, '.ap': 2, 'app': 2, 'ppe': 2, 'pen': 2, 'd(r': 2, '(r)': 2, 'r)\n': 2, 't =': 3, 'ep\n': 2, 'p\n\n': 2, 'ret': 11, 'etu': 11, 'tur': 11, 'urn': 11, 'rn ': 11, 'n _': 2, '_r\n': 2, 'r\n\n': 2, 'e_d': 4, 'at.': 1, 't.H': 2, 'TPD': 1, 'PDi': 1, 'Dig': 3, 'stA': 2, 'tAu': 2, '  t': 4, ' tr': 4, 'try': 4, 'ry:': 4, 'y:\n': 4, 'h.i': 2, '.in': 2, 't_p': 2, '_pe': 2, 'per': 4, 'er_': 4, 'r_t': 2, '_th': 2, 'thr': 3, 'hre': 3, 'rea': 2, 'ad_': 2, 'd_s': 2, '_st': 2, 'sta': 2, 'tat': 2, 'ate': 10, 'te(': 2, 'e()': 2, '  e': 4, ' ex': 7, 'exc': 4, 'xce': 4, 'cep': 4, 'ept': 4, 'pt ': 4, 't A': 4, ' At': 4, 'Att': 4, 'tri': 5, 'rib': 5, 'ibu': 5, 'but': 5, 'ute': 5, 'teE': 4, 'eEr': 4, 'Err': 4, 'rro': 4, 'ror': 4, 'or:': 4, 'r:\n': 4, '# I': 1, ' If': 1, 'If ': 1, 'f w': 1, ' we': 1, ""we'"": 1, ""e'r"": 1, ""'re"": 1, 're ': 1, 'e n': 1, 't o': 1, 'n r': 2, 's 2': 1, ' 2.': 1, '2.8': 1, '.8.': 1, '8.0': 1, '.0+': 1, '0+ ': 1, '+ t': 1, 'thi': 2, 's m': 1, ' me': 1, 'met': 1, 'eth': 2, 'tho': 1, 'hod': 1, 'od ': 1, 'd d': 1, ' do': 1, 'doe': 1, 'oes': 1, 't e': 1, 'exi': 2, 'xis': 2, 'nd\n': 1, '# i': 1, 't r': 1, 'lev': 1, 'eva': 1, 'van': 1, 'ant': 1, 'nt.': 1, 't.\n': 1, 'ss\n': 4, ' Ch': 1, 'Che': 1, 'hec': 1, 'eck': 1, 'ck ': 1, 'k t': 1, 'tha': 1, 'hat': 1, ' at': 2, 'tr ': 1, 'r e': 2, 's b': 1, ' be': 1, 'bec': 1, 'eca': 1, 'cau': 1, 'aus': 1, ' mu': 1, 'muc': 1, 'uch': 1, 'ch ': 1, 'h o': 1, ' ol': 1, 'old': 1, 'lde': 1, 'er ': 1, 'r v': 1, ' ve': 1, 'ver': 1, 'ers': 5, 'rsi': 1, 'sio': 1, 'ns ': 1, 's o': 1, ' of': 1, 'of ': 1, 'f r': 1, 'ts\n': 1, 's\n ': 2, '# s': 2, 'set': 1, 'et ': 1, 'te ': 3, 'e l': 1, ' la': 1, 'laz': 1, 'azi': 1, 'zil': 1, 'ily': 1, 'ly.': 1, 'y. ': 1, '. F': 1, ' Fo': 1, 'For': 1, 'exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le:': 1, '# h': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//g': 1, '/gi': 1, 'git': 1, 'ith': 2, 'thu': 1, 'hub': 1, 'ub.': 1, 'b.c': 1, 'om/': 1, 'm/k': 1, '/ke': 1, 'ken': 1, 'enn': 1, 'net': 1, 'rei': 1, 'eit': 1, 'itz': 1, 'tz/': 1, 'z/r': 1, '/re': 2, 'ts/': 2, 's/b': 1, '/bl': 1, 'blo': 1, 'lob': 1, 'ob/': 1, 'b/3': 1, '/33': 1, '337': 1, '373': 1, '735': 1, '354': 1, '548': 1, '480': 1, '80f': 1, '0f7': 1, 'f77': 1, '778': 1, '789': 1, '891': 1, '917': 1, '175': 1, '754': 1, '543': 1, '430': 1, '304': 1, '04e': 1, '4e7': 1, 'e7f': 1, '7f1': 1, 'f13': 1, '13e': 1, '3e3': 1, 'e3c': 1, '3cd': 1, 'cdf': 1, 'df8': 1, 'f83': 1, '83a': 1, '3aa': 1, 'aaa': 2, 'aa7': 1, 'a76': 1, '76a': 1, '6aa': 1, 'aa/': 1, 'a/r': 1, 's/a': 1, '/au': 1, 'h.p': 1, '.py': 1, 'py#': 1, 'y#L': 1, '#L5': 1, 'L59': 1, '59\n': 1, '9\n ': 1, 'f h': 3, 'r(s': 1, 'th,': 3, 'h, ': 3, ' ""n': 1, '""nu': 1, 'num': 3, 'um_': 3, 'm_4': 3, '01_': 3, '1_c': 3, '_ca': 6, 'cal': 6, 'lls': 3, 'ls""': 1, '"") ': 1, ') a': 1, 'd s': 1, 'h.n': 2, '.nu': 2, 'ls ': 2, 's N': 1, '= 1': 1, ' 1\n': 1, '1\n ': 1, '# D': 1, ' Di': 1, 'h w': 1, ' wo': 1, 'wou': 1, 'oul': 1, 'uld': 1, 'ld ': 1, 'res': 3, 'ese': 2, 'd t': 1, 'e r': 1, 't b': 1, 'y i': 1, ' it': 1, 'its': 1, 'tse': 1, 'f. ': 1, '. W': 1, ' We': 1, 'We ': 1, ' ca': 1, 'can': 1, 'an ': 1, 'n t': 1, ' ta': 1, 'tak': 1, 'ake': 1, 'ke ': 1, ' a\n': 1, 'a\n ': 1, ' sh': 1, 'sho': 1, 'hor': 1, 'rtc': 1, 'tcu': 1, 'cut': 1, 'ut ': 1, 'her': 1, 'ere': 1, 're.': 1, 'n s': 8, 'h.h': 2, '.ha': 4, 'e_4': 6, '1(r': 3, '(r,': 6, '""""R': 1, '""Re': 1, 'Res': 1, 'nds': 1, 'ds ': 1, ' a ': 1, 'a r': 1, 't w': 1, ' wi': 1, 'wit': 1, 'h a': 1, 'h h': 1, 'rs,': 1, ', i': 1, 'nee': 1, 'eed': 1, 'ede': 1, 'ded': 1, 'ed.': 1, 'd.""': 1, '  w': 1, ' ww': 3, 'www': 4, 'ww_': 3, 'w_a': 3, '.he': 2, 'rs.': 2, 's.g': 2, '.ge': 2, 'get': 2, 'et(': 2, 't(""': 2, '(""w': 1, '""ww': 1, 'ww-': 1, 'w-a': 1, '-au': 1, 'te""': 2, 'e"",': 4, '"", ': 4, '"""")': 2, '"").': 2, ').l': 2, '.lo': 2, 'owe': 2, 'wer': 2, 'er(': 4, 'f ""': 4, ' ""b': 2, '""ba': 2, 'ic""': 2, 'c"" ': 2, '"" i': 4, ' in': 4, 'in ': 4, 'n w': 2, 'te:': 4, 'f._': 4, '._h': 4, ' ""d': 2, '""di': 2, 'st""': 2, 't"" ': 2, '__c': 3, 'll_': 3, 'l__': 3, 'st)': 5, 't):': 2, 'h i': 2, 'h(r': 2, '(re': 3, 't)\n': 3, 'y.t': 2, '.te': 2, 'tel': 2, 'ell': 2, 'll(': 2, 'l()': 2, 't.r': 2, 'reg': 2, 'egi': 2, 'gis': 2, 'ste': 2, 'ter': 2, 'r_h': 2, '_ho': 2, 'hoo': 2, 'ok(': 2, 'k(""': 2, '(""r': 2, '""re': 2, 'esp': 2, 'spo': 2, 'pon': 2, 'nse': 2, 'se""': 2, 'f.h': 2, '01)': 1, '1)\n': 1, 'ssP': 3, 'sPr': 3, 'Pro': 7, 'xyA': 4, 'yAu': 4, 'h(G': 1, '(Gu': 3, 'th)': 1, 'h):': 1, '""\n ': 1, '  G': 1, 'y W': 1, 'n a': 1, 'd P': 1, ' Pr': 1, 'xy-': 2, 'y-A': 2, '  h': 1, 'rs\n': 1, '_(\n': 1, '(\n ': 2, 'me=': 3, 'e=N': 2, '=No': 4, 'ne,': 3, 'rd=': 3, 'd=N': 2, 'y_u': 5, '_us': 5, 'y_p': 5, '_pa': 5, '  )': 2, ' ):': 1, ' su': 2, 'sup': 2, 'upe': 2, 'r(G': 2, 'lf)': 2, 'f).': 2, ')._': 2, '.__': 2, '_(u': 1, '(us': 1, 'y_a': 10, '407': 7, '07(': 6, '7(s': 3, 'TPP': 2, 'PPr': 2, '= h': 1, 'xyD': 1, 'yDi': 1, 'h(\n': 1, '  u': 1, 'e=s': 1, '=se': 2, 'd=s': 1, ' )\n': 1, '7(r': 3, '(""P': 1, '""Pr': 1, 'n p': 2, '07)': 1, '7)\n': 1, '_(r': 1}"
Kenneth Reitz Archive,handler.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 5, '-*-': 2, 'coding:': 1, 'utf-8': 1, '""""""': 7, 'requests_toolbelt.auth.handler': 2, '==============================': 1, 'this': 2, 'holds': 1, 'all': 1, 'of': 4, 'the': 11, 'implementation': 1, 'details': 1, 'authentication': 7, 'handler.': 1, 'from': 5, 'requests.auth': 1, 'import': 6, 'authbase,': 1, 'httpbasicauth': 1, 'requests.compat': 1, 'urlparse,': 1, 'urlunparse': 1, 'class': 2, 'authhandler(authbase):': 1, '``authhandler``': 1, 'object': 1, 'takes': 1, 'a': 11, 'dictionary': 1, 'domains': 1, 'paired': 1, 'with': 2, 'strategies': 1, 'and': 3, 'will': 2, 'use': 4, 'to': 5, 'determine': 1, 'which': 1, 'credentials': 1, 'when': 1, 'making': 2, 'request.': 2, 'for': 10, 'example,': 3, 'you': 7, 'could': 1, 'do': 1, 'following:': 1, '..': 5, 'code-block::': 4, 'python': 4, 'requests': 3, 'httpdigestauth': 2, 'authhandler': 2, 'auth': 3, '=': 20, 'authhandler({': 1, ""'https://api.github.com':"": 1, ""('sigmavirus24',"": 1, ""'fakepassword'),"": 1, ""'https://example.com':"": 1, ""httpdigestauth('username',"": 1, ""'password')"": 1, '})': 1, 'r': 4, ""requests.get('https://api.github.com/user',"": 1, 'auth=auth)': 2, '=>': 3, '<response': 3, '[200]>': 3, ""requests.get('https://example.com/some/path',"": 1, 's': 1, 'requests.session()': 1, 's.auth': 1, ""s.get('https://api.github.com/user')"": 1, 'warning::': 1, ':class:`requests.auth.httpdigestauth`': 1, 'is': 1, 'not': 1, 'yet': 1, 'thread-safe.': 1, 'if': 3, ':class:`authhandler`': 1, 'across': 1, 'multiple': 1, 'threads': 1, 'should': 1, 'instantiate': 1, 'new': 3, 'each': 2, 'thread': 1, 'instance': 1, 'thread.': 1, 'def': 10, '__init__(self,': 1, 'strategies):': 1, 'self.strategies': 2, 'dict(strategies)': 1, 'self._make_uniform()': 1, '__call__(self,': 2, 'request):': 1, 'self.get_strategy_for(request.url)': 1, 'return': 6, 'auth(request)': 1, '__repr__(self):': 2, '""<authhandler({!r})>"".format(self.strategies)': 1, '_make_uniform(self):': 1, 'existing_strategies': 1, 'list(self.strategies.items())': 1, '{}': 2, '(k,': 1, 'v)': 2, 'in': 2, 'existing_strategies:': 1, 'self.add_strategy(k,': 1, '@staticmethod': 1, '_key_from_url(url):': 1, 'parsed': 1, 'urlparse(url)': 1, 'urlunparse(': 1, '(parsed.scheme.lower(),': 1, 'parsed.netloc.lower(),': 1, '"""",': 3, '"""")': 1, ')': 1, 'add_strategy(self,': 1, 'domain,': 1, 'strategy):': 1, '""""""add': 1, 'domain': 4, 'strategy.': 1, ':param': 4, 'str': 4, 'domain:': 2, 'wish': 3, 'match': 1, 'against.': 2, 'example:': 2, ""``'https://api.github.com'``"": 1, 'strategy:': 1, 'strategy': 6, 'that': 2, 'domain.': 1, ""``('username',"": 1, ""'password')``"": 2, 'or': 1, ""``requests.httpdigestauth('username',"": 1, 'authhandler({})': 1, ""a.add_strategy('https://api.github.com',"": 1, ""('username',"": 1, ""'password'))"": 1, 'turn': 1, 'tuples': 1, 'into': 1, 'basic': 1, 'objects': 1, 'isinstance(strategy,': 2, 'tuple):': 1, 'httpbasicauth(*strategy)': 1, 'key': 4, 'self._key_from_url(domain)': 2, 'self.strategies[key]': 2, 'get_strategy_for(self,': 1, 'url):': 1, '""""""retrieve': 1, 'specified': 1, 'url.': 1, 'url:': 1, 'full': 1, 'url': 1, 'be': 1, 'request': 1, ""``'https://api.github.com/user'``"": 1, ':returns:': 1, 'callable': 1, 'adds': 1, ""authhandler({'example.com',"": 2, ""('foo',"": 2, ""'bar')})"": 2, ""a.get_strategy_for('http://example.com/example')"": 1, 'assert': 2, 'requests.auth.httpbasicauth)': 1, 'self._key_from_url(url)': 1, 'self.strategies.get(key,': 1, 'nullauthstrategy())': 1, 'remove_strategy(self,': 1, 'domain):': 1, '""""""remove': 1, 'collection': 1, 'strategies.': 1, 'remove.': 1, ""``'https://api.github.com'``."": 1, ""a.remove_strategy('example.com')"": 1, 'a.strategies': 1, '==': 1, 'self.strategies:': 1, 'del': 1, 'nullauthstrategy(authbase):': 1, '""<nullauthstrategy>""': 1, 'r):': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 7, 'cod': 5, 'odi': 1, 'din': 1, 'ing': 7, 'ng:': 3, 'g: ': 1, ': u': 1, ' ut': 1, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\n""': 1, '\n""""': 2, '""""""': 10, '""""\n': 7, '""\n\n': 5, '\n\nr': 1, '\nre': 1, 'req': 19, 'equ': 19, 'que': 19, 'ues': 19, 'est': 24, 'sts': 13, 'ts_': 2, 's_t': 2, '_to': 2, 'too': 2, 'ool': 2, 'olb': 2, 'lbe': 2, 'bel': 2, 'elt': 2, 'lt.': 2, 't.a': 2, '.au': 6, 'aut': 19, 'uth': 45, 'th.': 4, 'h.h': 2, '.ha': 2, 'han': 2, 'and': 16, 'ndl': 13, 'dle': 13, 'ler': 13, 'er\n': 2, 'r\n=': 1, '\n==': 1, '===': 28, '==\n': 1, '=\n\n': 1, '\n\nT': 1, '\nTh': 1, 'Thi': 1, 'his': 2, 'is ': 3, 's h': 1, ' ho': 1, 'hol': 1, 'old': 1, 'lds': 1, 'ds ': 3, 's a': 4, ' al': 1, 'all': 4, 'll ': 4, 'l o': 1, ' of': 4, 'of ': 4, 'f t': 2, ' th': 13, 'the': 13, 'he ': 11, 'e i': 1, ' im': 7, 'imp': 7, 'mpl': 13, 'ple': 16, 'lem': 1, 'eme': 2, 'men': 1, 'ent': 9, 'nta': 1, 'tat': 2, 'ati': 9, 'tio': 10, 'ion': 11, 'on ': 9, 'n d': 1, ' de': 13, 'det': 2, 'eta': 1, 'tai': 1, 'ail': 1, 'ils': 1, 'ls ': 1, 's o': 1, 'e A': 1, ' Au': 10, 'Aut': 26, 'hen': 8, 'nti': 9, 'tic': 8, 'ica': 7, 'cat': 7, 'n H': 1, ' Ha': 1, 'Han': 11, 'er.': 1, 'r.\n': 1, '.\n\n': 7, '\n\n""': 1, '\n\nf': 1, '\nfr': 2, 'fro': 9, 'rom': 9, 'om ': 5, 'm r': 4, ' re': 22, 'ts.': 8, 's.a': 4, 'th ': 6, 'h i': 2, 'mpo': 6, 'por': 6, 'ort': 6, 'rt ': 8, 't A': 2, 'thB': 3, 'hBa': 3, 'Bas': 7, 'ase': 3, 'se,': 2, 'e, ': 4, ', H': 1, ' HT': 5, 'HTT': 8, 'TTP': 8, 'TPB': 3, 'PBa': 3, 'asi': 4, 'sic': 4, 'icA': 3, 'cAu': 3, 'th\n': 4, 'h\nf': 1, 's.c': 1, '.co': 14, 'com': 14, 'omp': 1, 'mpa': 1, 'pat': 2, 'at ': 3, 't i': 2, 't u': 1, ' ur': 6, 'url': 14, 'rlp': 2, 'lpa': 2, 'par': 11, 'ars': 7, 'rse': 7, ', u': 2, 'rlu': 2, 'lun': 2, 'unp': 2, 'npa': 2, 'se\n': 1, 'e\n\n': 1, '\n\n\n': 2, '\n\nc': 2, '\ncl': 2, 'cla': 4, 'las': 4, 'ass': 11, 'ss ': 3, 's A': 1, 'thH': 10, 'hHa': 10, 'er(': 8, 'r(A': 1, '(Au': 2, 'se)': 2, 'e):': 3, '):\n': 13, ':\n\n': 3, '\n\n ': 34, '\n  ': 90, '   ': 548, '  ""': 8, ' """"': 12, '  T': 1, ' Th': 5, 'The': 5, 'e `': 1, ' ``': 6, '``A': 1, '`Au': 2, 'er`': 2, 'r``': 1, '`` ': 2, '` o': 2, ' ob': 2, 'obj': 2, 'bje': 2, 'jec': 2, 'ect': 3, 'ct ': 1, 't t': 2, ' ta': 1, 'tak': 1, 'ake': 4, 'kes': 1, 'es ': 7, ' a ': 11, 'a d': 1, ' di': 2, 'dic': 2, 'ict': 2, 'cti': 2, 'ona': 1, 'nar': 1, 'ary': 1, 'ry ': 1, 'y o': 1, 'f d': 1, ' do': 11, 'dom': 12, 'oma': 12, 'mai': 12, 'ain': 14, 'ins': 7, 'ns ': 1, 's p': 1, ' pa': 3, 'pai': 1, 'air': 1, 'ire': 1, 'red': 2, 'ed ': 3, 'd w': 3, ' wi': 7, 'wit': 2, 'ith': 9, 'h\n ': 3, '  a': 10, ' au': 11, 'n s': 6, ' st': 16, 'str': 39, 'tra': 38, 'rat': 38, 'ate': 39, 'teg': 38, 'egi': 15, 'gie': 15, 'ies': 15, ' an': 3, 'nd ': 3, 'wil': 2, 'ill': 2, 'l u': 1, ' us': 4, 'use': 11, 'se ': 7, 'e t': 5, 'thi': 1, 's t': 1, ' to': 5, 'to ': 6, 'o d': 1, 'ete': 1, 'ter': 1, 'erm': 1, 'rmi': 1, 'min': 1, 'ine': 1, 'ne ': 1, 'e w': 2, ' wh': 2, 'whi': 1, 'hic': 1, 'ich': 1, 'ch ': 4, 'h c': 1, ' cr': 1, 'cre': 1, 'ede': 1, 'den': 1, 'tia': 2, 'ial': 1, 'als': 1, 'ls\n': 1, 's\n ': 3, '  t': 2, 'o u': 2, 'whe': 1, 'en ': 1, 'n m': 1, ' ma': 3, 'mak': 4, 'aki': 2, 'kin': 2, 'ng ': 2, 'g a': 2, 'a r': 3, 'st.': 5, 't. ': 3, '. F': 5, ' Fo': 5, 'For': 5, 'or ': 8, 'r e': 6, ' ex': 7, 'exa': 12, 'xam': 12, 'amp': 12, 'le,': 3, ', y': 1, ' yo': 7, 'you': 7, 'ou ': 6, 'u c': 1, 'cou': 1, 'oul': 2, 'uld': 2, 'ld ': 1, 'd d': 1, 'do ': 1, 'o t': 1, 'e f': 4, ' fo': 6, 'fol': 1, 'oll': 2, 'llo': 1, 'low': 3, 'owi': 1, 'win': 1, 'g:\n': 1, '  .': 5, ' ..': 5, '.. ': 5, '. c': 4, 'ode': 4, 'de-': 4, 'e-b': 4, '-bl': 4, 'blo': 4, 'loc': 5, 'ock': 4, 'ck:': 4, 'k::': 4, ':: ': 4, ': p': 4, ' py': 4, 'pyt': 4, 'yth': 4, 'tho': 5, 'hon': 4, 'on\n': 4, 'n\n\n': 4, '  f': 3, ' fr': 3, 'ts ': 1, 's i': 2, 't H': 1, 'TPD': 5, 'PDi': 5, 'Dig': 5, 'ige': 5, 'ges': 5, 'stA': 5, 'tAu': 5, 'er ': 2, 'r i': 1, 'r\n\n': 1, '  i': 5, 't r': 2, 'ts\n': 3, 's\n\n': 1, 'h =': 3, ' = ': 20, '= A': 4, 'r({': 5, '({\n': 1, '{\n ': 1, ""  '"": 2, "" 'h"": 2, ""'ht"": 10, 'htt': 10, 'ttp': 10, 'tps': 9, 'ps:': 9, 's:/': 9, '://': 10, '//a': 7, '/ap': 7, 'api': 7, 'pi.': 7, 'i.g': 7, '.gi': 7, 'git': 7, 'thu': 7, 'hub': 7, 'ub.': 7, 'b.c': 7, ""om'"": 8, ""m':"": 2, ""': "": 2, ': (': 1, "" ('"": 4, ""('s"": 1, ""'si"": 1, 'sig': 1, 'igm': 1, 'gma': 1, 'mav': 1, 'avi': 1, 'vir': 1, 'iru': 1, 'rus': 1, 'us2': 1, 's24': 1, ""24'"": 1, ""4',"": 1, ""', "": 12, "", '"": 7, "" 'f"": 1, ""'fa"": 1, 'fak': 1, 'kep': 1, 'epa': 1, 'pas': 5, 'ssw': 5, 'swo': 5, 'wor': 5, 'ord': 5, ""rd'"": 5, ""d')"": 5, ""'),"": 1, '),\n': 1, ',\n ': 2, '//e': 3, '/ex': 4, 'le.': 6, 'e.c': 6, ': H': 1, 'th(': 4, ""h('"": 2, ""('u"": 4, ""'us"": 4, 'ser': 9, 'ern': 4, 'rna': 4, 'nam': 4, 'ame': 4, ""me'"": 4, ""e',"": 4, "" 'p"": 4, ""'pa"": 4, ""')\n"": 4, ')\n ': 18, '  }': 1, ' })': 1, '})\n': 4, ')\n\n': 10, '  r': 9, ' r ': 3, 'r =': 3, '= r': 3, 's.g': 4, '.ge': 6, 'get': 7, 'et(': 4, ""t('"": 3, ""('h"": 5, 'om/': 5, 'm/u': 3, '/us': 3, ""er'"": 3, ""r',"": 1, ', a': 2, 'th=': 2, 'h=a': 2, '=au': 2, 'th)': 3, 'h)\n': 3, '  #': 4, ' # ': 4, '# =': 3, ' =>': 3, '=> ': 3, '> <': 3, ' <R': 3, '<Re': 3, 'Res': 3, 'esp': 3, 'spo': 3, 'pon': 3, 'ons': 3, 'nse': 3, 'e [': 3, ' [2': 3, '[20': 3, '200': 3, '00]': 3, '0]>': 3, ']>\n': 3, '>\n ': 1, 'm/s': 1, '/so': 1, 'som': 1, 'ome': 1, 'me/': 1, 'e/p': 1, '/pa': 1, 'ath': 1, ""th'"": 1, ""h',"": 1, '>\n\n': 2, '  s': 9, ' s ': 1, 's =': 5, 's.S': 1, '.Se': 1, 'Ses': 1, 'ess': 1, 'ssi': 1, 'sio': 1, 'on(': 1, 'n()': 1, '()\n': 2, ' s.': 2, '= a': 2, '= s': 6, ""r')"": 3, '. w': 1, ' wa': 1, 'war': 1, 'arn': 1, 'rni': 1, 'nin': 1, 'g::': 1, '::\n': 1, '  :': 6, ' :c': 2, ':cl': 2, 'ss:': 2, 's:`': 2, ':`r': 1, '`re': 2, 'h.H': 2, '.HT': 3, 'th`': 1, 'h` ': 1, '` i': 1, ' is': 3, 's n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't y': 1, ' ye': 1, 'yet': 1, 'et ': 1, 'thr': 4, 'hre': 4, 'rea': 4, 'ead': 4, 'ad-': 1, 'd-s': 1, '-sa': 1, 'saf': 1, 'afe': 1, 'fe.': 1, 'e. ': 2, '. I': 1, ' If': 1, 'If ': 1, 'f y': 1, 'ou\n': 1, 'u\n ': 1, '  u': 1, 'e :': 1, ':`A': 1, 'r` ': 1, '` a': 1, ' ac': 1, 'acr': 1, 'cro': 1, 'ros': 1, 'oss': 1, 's m': 1, ' mu': 1, 'mul': 1, 'ult': 1, 'lti': 1, 'tip': 1, 'ipl': 1, 'le ': 2, 'ads': 1, 's y': 1, 'u s': 1, ' sh': 1, 'sho': 1, 'hou': 1, 'ld\n': 1, 'd\n ': 2, ' in': 5, 'nst': 6, 'sta': 5, 'tan': 4, 'ant': 1, 'iat': 1, 'te ': 1, 'e a': 3, 'a n': 3, ' ne': 3, 'new': 3, 'ew ': 2, 'w A': 1, 'r f': 1, 'for': 11, ' ea': 2, 'eac': 2, 'ach': 2, 'h t': 4, 'ad ': 1, 'h a': 2, 'ew\n': 1, 'w\n ': 1, '  H': 1, 'anc': 3, 'nce': 3, 'ce ': 1, 'ad.': 1, 'd.\n': 1, '  d': 11, 'def': 10, 'ef ': 10, 'f _': 7, ' __': 5, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 5, '_(s': 5, '(se': 11, 'sel': 23, 'elf': 23, 'lf,': 6, 'f, ': 6, ', s': 2, 'es)': 3, 's):': 1, ':\n ': 15, ' se': 12, 'lf.': 14, 'f.s': 8, '.st': 9, '= d': 1, 'ct(': 1, 't(s': 3, '(st': 3, 's)\n': 2, 'f._': 4, '._m': 1, '_ma': 2, 'ke_': 2, 'e_u': 2, '_un': 2, 'uni': 2, 'nif': 2, 'ifo': 2, 'orm': 3, 'rm(': 2, 'm()': 1, '__c': 2, '_ca': 2, 'cal': 2, 'll_': 2, 'l__': 2, ', r': 3, 'st)': 2, 't):': 1, 'f.g': 1, 'et_': 3, 't_s': 3, '_st': 10, 'egy': 23, 'gy_': 3, 'y_f': 7, '_fo': 3, 'or(': 3, 'r(r': 1, '(re': 2, 't.u': 1, '.ur': 1, 'rl)': 5, 'l)\n': 3, 'ret': 7, 'etu': 7, 'tur': 7, 'urn': 8, 'rn ': 7, 'n a': 3, 'h(r': 1, 't)\n': 1, '__r': 2, '_re': 2, 'rep': 2, 'epr': 2, 'pr_': 2, 'r__': 2, 'lf)': 3, 'f):': 3, 'n ""': 2, ' ""<': 2, '""<A': 1, '<Au': 1, '({!': 1, '{!r': 1, '!r}': 1, 'r})': 1, '})>': 1, ')>""': 1, '>"".': 1, '"".f': 1, '.fo': 1, 'rma': 1, 'mat': 2, 'at(': 1, ' _m': 1, 'm(s': 1, '  e': 2, 'exi': 2, 'xis': 2, 'ist': 3, 'sti': 2, 'tin': 2, 'ng_': 2, 'g_s': 2, '= l': 1, ' li': 1, 'lis': 1, 'st(': 1, 'es.': 3, 's.i': 1, '.it': 1, 'ite': 1, 'tem': 1, 'ems': 1, 'ms(': 1, 's()': 1, '())': 2, '))\n': 3, '= {': 2, ' {}': 2, '{}\n': 2, '}\n\n': 2, 'r (': 1, ' (k': 1, '(k,': 2, 'k, ': 2, ', v': 2, ' v)': 2, 'v) ': 1, ') i': 1, 'in ': 6, 'n e': 1, 'es:': 2, 's:\n': 2, 'f.a': 1, '.ad': 2, 'add': 4, 'dd_': 3, 'd_s': 3, 'gy(': 7, 'y(k': 1, 'v)\n': 1, '  @': 1, ' @s': 1, '@st': 1, 'icm': 1, 'cme': 1, 'met': 1, 'eth': 1, 'hod': 1, 'od\n': 1, ' _k': 1, '_ke': 4, 'key': 11, 'ey_': 4, '_fr': 4, 'om_': 4, 'm_u': 4, '_ur': 4, 'rl(': 4, 'l(u': 2, '(ur': 3, 'l):': 2, '  p': 1, 'sed': 3, 'd =': 1, '= u': 1, 'se(': 2, 'e(u': 1, 'n u': 1, 'e(\n': 1, '(\n ': 1, '  (': 1, ' (p': 1, '(pa': 1, 'ed.': 2, 'd.s': 1, '.sc': 1, 'sch': 1, 'che': 1, 'hem': 1, 'me.': 1, 'e.l': 1, '.lo': 2, 'owe': 2, 'wer': 2, 'r()': 2, '(),': 2, '), ': 2, ', p': 1, 'd.n': 1, '.ne': 1, 'net': 1, 'etl': 1, 'tlo': 1, 'oc.': 1, 'c.l': 1, ', ""': 4, '"""",': 3, '"", ': 3, '"""")': 1, '"")\n': 1, '  )': 1, ' )\n': 1, 'f a': 1, ' ad': 2, 'y(s': 2, ', d': 2, 'in,': 1, 'n, ': 1, 'gy)': 2, 'y):': 1, '""""A': 1, '""Ad': 1, 'Add': 1, 'dd ': 1, 'd a': 2, 'w d': 1, 'gy.': 1, 'y.\n': 1, ' :p': 4, ':pa': 4, 'ara': 4, 'ram': 4, 'am ': 4, 'm s': 4, 'tr ': 4, 'r d': 2, 'in:': 2, 'n: ': 2, ': T': 4, 'e d': 3, 'n y': 2, 'u w': 4, 'wis': 3, 'ish': 3, 'sh ': 3, 'o m': 1, 'atc': 1, 'tch': 1, ' ag': 2, 'aga': 2, 'gai': 2, 'le:': 2, 'e:\n': 1, '  `': 3, ""``'"": 3, ""`'h"": 3, ""m'`"": 2, ""'``"": 3, '``\n': 3, '`\n ': 2, 'r s': 1, 'gy:': 1, 'y: ': 1, 'gy ': 5, 'y y': 1, 'or\n': 3, 'r\n ': 3, 'tha': 2, 'hat': 2, 't d': 1, 'in.': 1, 'n. ': 1, 'e: ': 1, ': `': 1, '``(': 1, ""`('"": 1, ""')`"": 2, ')``': 2, ' or': 1, '``r': 1, 's.H': 1, '`\n\n': 1, 'a =': 3, '({}': 1, '{})': 1, ' a.': 4, 'a.a': 1, ""y('"": 2, ""m',"": 3, ', (': 3, ""'))"": 1, '""\n ': 3, '# T': 1, ' Tu': 1, 'Tur': 1, 'n t': 2, ' tu': 2, 'tup': 2, 'upl': 2, 'les': 1, 'int': 1, 'nto': 1, 'o B': 1, ' Ba': 1, 'ic ': 1, 'c A': 1, 'n o': 2, 'cts': 1, ' if': 2, 'if ': 2, 'f i': 1, 'isi': 2, 'sin': 2, 'ce(': 2, 'e(s': 2, 'gy,': 2, 'y, ': 3, ', t': 1, 'le)': 1, 'y =': 5, '= H': 1, 'h(*': 1, '(*s': 1, '*st': 1, 'y)\n': 1, '  k': 3, ' ke': 4, 'ey ': 4, '._k': 3, 'l(d': 2, '(do': 2, 'in)': 3, 'n)\n': 2, 'es[': 2, 's[k': 2, '[ke': 2, 'ey]': 2, 'y] ': 1, '] =': 1, 'gy\n': 1, 'y\n\n': 1, 'f g': 1, ' ge': 1, 'r(s': 1, '""""R': 2, '""Re': 2, 'Ret': 1, 'etr': 1, 'tri': 1, 'rie': 1, 'iev': 1, 'eve': 1, 've ': 2, 'y f': 2, 'r a': 1, 'a s': 1, ' sp': 1, 'spe': 1, 'pec': 1, 'eci': 1, 'cif': 1, 'ifi': 1, 'fie': 1, 'ied': 1, 'd U': 1, ' UR': 2, 'URL': 2, 'RL.': 1, 'L.\n': 1, 'r u': 1, 'rl:': 1, 'l: ': 1, ' fu': 1, 'ful': 1, 'ull': 4, 'l U': 1, 'RL ': 1, 'L y': 1, 'l b': 1, ' be': 1, 'be ': 1, 'e m': 1, 'st ': 1, 't a': 3, ', `': 1, ""r'`"": 1, ' :r': 1, ':re': 1, 'rns': 1, 'ns:': 1, 's: ': 1, ': C': 1, ' Ca': 1, 'Cal': 1, 'lla': 1, 'lab': 1, 'abl': 1, 'ble': 1, 'dds': 1, 'o a': 1, 't.\n': 1, ""({'"": 2, ""{'e"": 2, ""'ex"": 3, ""('f"": 2, ""'fo"": 2, 'foo': 2, ""oo'"": 2, ""o',"": 2, "" 'b"": 2, ""'ba"": 2, 'bar': 2, ""ar'"": 2, ""')}"": 2, ')})': 2, 'a.g': 1, ""r('"": 1, 'tp:': 1, 'p:/': 1, 'm/e': 1, ""le'"": 1, ""e')"": 1, ' as': 2, 'sse': 2, 'ert': 2, 't(k': 1, '(ke': 1, 'ey,': 1, ', N': 1, ' Nu': 2, 'Nul': 3, 'llA': 3, 'lAu': 3, 'thS': 3, 'hSt': 3, 'Str': 3, 'y()': 1, 'f r': 1, 'rem': 3, 'emo': 4, 'mov': 4, 'ove': 4, 've_': 2, 'e_s': 2, 'n):': 1, 'Rem': 1, 'd s': 1, 'm t': 1, 'e c': 1, 'col': 1, 'lle': 1, 'lec': 1, 'f s': 1, 's.\n': 1, 'h r': 1, 've.': 1, 'e,\n': 1, '``.': 1, '`.\n': 1, 'a.r': 1, '.re': 1, ""('e"": 1, ""m')"": 1, 'a.s': 1, ' ==': 1, '== ': 1, 'f k': 1, 'y i': 1, 'del': 1, 'el ': 1, 'l s': 1, 'y]\n': 1, ']\n\n': 1, 's N': 1, 'y(A': 1, '""<N': 1, '<Nu': 1, 'gy>': 1, 'y>""': 1, '>""\n': 1, ' r)': 1, 'r):': 1, 'n r': 1, ' r\n': 1}"
Kenneth Reitz Archive,help.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""module': 1, 'containing': 1, 'bug': 3, 'report': 1, 'helper(s).""""""': 1, 'from': 4, '__future__': 1, 'import': 13, 'print_function': 1, 'json': 1, 'platform': 1, 'sys': 1, 'ssl': 1, 'idna': 1, 'urllib3': 1, 'chardet': 1, '.': 2, '_types': 1, 'as': 3, 'types': 1, '__version__': 1, 'requests_version': 1, 'try:': 2, 'urllib3.contrib': 1, 'pyopenssl': 3, 'except': 2, 'importerror:': 1, '=': 21, 'none': 4, 'openssl': 2, 'cryptography': 2, 'else:': 2, 'def': 3, '_implementation()': 2, '->': 2, 'types.help:': 2, '""""""return': 1, 'a': 2, 'dict': 1, 'with': 1, 'the': 7, 'python': 2, 'implementation': 7, 'and': 3, 'version.': 1, 'provide': 1, 'both': 1, 'name': 1, 'version': 1, 'of': 2, 'currently': 1, 'running.': 1, 'for': 4, 'example,': 1, 'on': 2, 'cpython': 2, '2.7.5': 1, 'it': 2, 'will': 1, 'return': 3, ""{'name':"": 1, ""'cpython',"": 1, ""'version':"": 1, ""'2.7.5'}."": 1, 'this': 1, 'function': 1, 'works': 1, 'best': 1, 'pypy:': 1, 'in': 1, 'particular,': 1, 'probably': 1, ""doesn't"": 1, 'work': 2, 'jython': 1, 'or': 1, 'ironpython.': 1, 'future': 1, 'investigation': 1, 'should': 1, 'be': 1, 'done': 1, 'to': 1, 'out': 1, 'correct': 1, 'shape': 1, 'code': 1, 'those': 1, 'platforms.': 1, '""""""': 1, 'platform.python_implementation()': 1, 'if': 5, '==': 5, '""cpython"":': 1, 'implementation_version': 6, 'platform.python_version()': 3, 'elif': 3, '""pypy"":': 1, '""%s.%s.%s""': 1, '%': 3, '(': 1, 'sys.pypy_version_info.major,': 1, 'sys.pypy_version_info.minor,': 1, 'sys.pypy_version_info.micro,': 1, ')': 2, 'sys.pypy_version_info.releaselevel': 1, '!=': 1, '""final"":': 1, '"""".join(': 1, '[implementation_version,': 1, 'sys.pypy_version_info.releaselevel]': 1, '""jython"":': 1, '#': 2, 'complete': 2, 'guess': 2, '""ironpython"":': 1, '""unknown""': 1, '{""name"":': 1, 'implementation,': 1, '""version"":': 2, 'implementation_version}': 1, 'info()': 1, '""""""generate': 1, 'information': 2, 'report.""""""': 1, 'platform_info': 2, '{""system"":': 2, 'platform.system(),': 1, '""release"":': 2, 'platform.release()}': 1, 'ioerror:': 1, '""unknown"",': 1, '""unknown""}': 1, 'implementation_info': 1, 'urllib3_info': 1, '{""version"":': 7, 'urllib3.__version__}': 1, 'chardet_info': 1, 'chardet.__version__}': 1, 'pyopenssl_info': 2, 'none,': 2, '""openssl_version"":': 2, '""""}': 2, 'openssl:': 1, '{': 2, 'openssl.__version__,': 1, '""%x""': 2, 'openssl.ssl.openssl_version_number,': 1, '}': 2, 'cryptography_info': 1, 'getattr(cryptography,': 1, '""__version__"",': 2, '"""")}': 2, 'idna_info': 1, 'getattr(idna,': 1, 'system_ssl': 3, 'ssl.openssl_version_number': 1, 'system_ssl_info': 1, 'is': 2, 'not': 2, 'else': 1, '""platform"":': 1, 'platform_info,': 1, '""implementation"":': 1, 'implementation_info,': 1, '""system_ssl"":': 1, 'system_ssl_info,': 1, '""using_pyopenssl"":': 1, '""pyopenssl"":': 1, 'pyopenssl_info,': 1, '""urllib3"":': 1, 'urllib3_info,': 1, '""chardet"":': 1, 'chardet_info,': 1, '""cryptography"":': 1, 'cryptography_info,': 1, '""idna"":': 1, 'idna_info,': 1, '""requests"":': 1, 'requests_version},': 1, 'main():': 1, '""""""pretty-print': 1, 'json.""""""': 1, 'print(json.dumps(info(),': 1, 'sort_keys=true,': 1, 'indent=2))': 1, '__name__': 1, '""__main__"":': 1, 'main()': 1}","{'""""""': 8, '""""M': 1, '""Mo': 1, 'Mod': 1, 'odu': 1, 'dul': 1, 'ule': 1, 'le ': 1, 'e c': 3, ' co': 3, 'con': 2, 'ont': 2, 'nta': 23, 'tai': 1, 'ain': 4, 'ini': 1, 'nin': 2, 'ing': 3, 'ng ': 1, 'g b': 1, ' bu': 3, 'bug': 3, 'ug ': 3, 'g r': 2, ' re': 7, 'rep': 2, 'epo': 2, 'por': 16, 'ort': 17, 'rt ': 14, 't h': 1, ' he': 1, 'hel': 1, 'elp': 3, 'lpe': 1, 'per': 1, 'er(': 1, 'r(s': 1, '(s)': 1, 's).': 1, ').""': 1, '.""""': 3, '""""\n': 4, '""\nf': 1, '\nfr': 3, 'fro': 4, 'rom': 4, 'om ': 4, 'm _': 1, ' __': 3, '__f': 1, '_fu': 2, 'fut': 1, 'utu': 2, 'tur': 6, 'ure': 2, 're_': 1, 'e__': 2, '__ ': 3, '_ i': 1, ' im': 23, 'imp': 35, 'mpo': 14, 't p': 4, ' pr': 3, 'pri': 3, 'rin': 3, 'int': 3, 'nt_': 1, 't_f': 1, 'fun': 2, 'unc': 2, 'nct': 2, 'cti': 2, 'tio': 27, 'ion': 65, 'on\n': 4, 'n\n\n': 2, '\n\ni': 3, '\nim': 7, 't j': 1, ' js': 1, 'jso': 2, 'son': 2, 'n\ni': 1, ' pl': 11, 'pla': 12, 'lat': 12, 'atf': 12, 'tfo': 12, 'for': 17, 'orm': 14, 'rm\n': 1, 'm\ni': 1, 't s': 3, ' sy': 11, 'sys': 15, 'ys\n': 1, 's\ni': 1, ' ss': 2, 'ssl': 17, 'sl\n': 2, 'l\n\n': 1, 't i': 1, ' id': 3, 'idn': 5, 'dna': 5, 'na\n': 1, 'a\ni': 1, 't u': 1, ' ur': 5, 'url': 6, 'rll': 6, 'lli': 6, 'lib': 6, 'ib3': 6, 'b3\n': 1, '3\ni': 1, 't c': 2, ' ch': 4, 'cha': 5, 'har': 5, 'ard': 5, 'rde': 5, 'det': 5, 'et\n': 1, 't\n\n': 1, '\n\nf': 2, 'm .': 2, ' . ': 2, '. i': 2, 't _': 2, ' _t': 1, '_ty': 1, 'typ': 4, 'ype': 4, 'pes': 4, 'es ': 1, 's a': 1, ' as': 3, 'as ': 3, 's t': 1, ' ty': 3, 'es\n': 1, 's\n\n': 1, '__v': 6, '_ve': 26, 'ver': 38, 'ers': 38, 'rsi': 38, 'sio': 38, 'on_': 25, 'n__': 7, '_ a': 1, 's r': 1, 'req': 3, 'equ': 3, 'que': 3, 'ues': 5, 'est': 5, 'sts': 3, 'ts_': 2, 's_v': 2, '\n\nt': 1, '\ntr': 1, 'try': 2, 'ry:': 2, 'y:\n': 2, ':\n ': 16, '\n  ': 67, '   ': 286, '  f': 1, ' fr': 1, 'm u': 1, 'b3.': 2, '3.c': 1, '.co': 1, 'ntr': 1, 'tri': 1, 'rib': 1, 'ib ': 1, 'b i': 1, ' py': 6, 'pyo': 7, 'yop': 7, 'ope': 9, 'pen': 15, 'ens': 9, 'nss': 9, 'l\ne': 1, '\nex': 1, 'exc': 2, 'xce': 2, 'cep': 2, 'ept': 2, 'pt ': 2, 't I': 2, ' Im': 1, 'Imp': 1, 'rtE': 1, 'tEr': 1, 'Err': 2, 'rro': 2, 'ror': 2, 'or:': 2, 'r:\n': 2, '  p': 6, 'sl ': 5, 'l =': 2, ' = ': 21, '= N': 3, ' No': 6, 'Non': 6, 'one': 7, 'ne\n': 4, 'e\n ': 3, '  O': 1, ' Op': 5, 'Ope': 6, 'enS': 6, 'nSS': 6, 'SSL': 9, 'SL ': 1, 'L =': 1, '  c': 4, ' cr': 4, 'cry': 6, 'ryp': 6, 'ypt': 6, 'pto': 6, 'tog': 6, 'ogr': 6, 'gra': 6, 'rap': 6, 'aph': 6, 'phy': 6, 'hy ': 1, 'y =': 1, 'e\ne': 1, '\nel': 1, 'els': 3, 'lse': 3, 'se:': 2, 'e:\n': 2, '  i': 14, 't O': 1, 'SL\n': 1, 'L\n ': 1, 'hy\n': 1, 'y\n\n': 1, '\n\n\n': 4, '\n\nd': 3, '\nde': 3, 'def': 3, 'ef ': 3, 'f _': 2, ' _i': 2, '_im': 3, 'mpl': 25, 'ple': 25, 'lem': 22, 'eme': 22, 'men': 22, 'ent': 24, 'tat': 24, 'ati': 25, 'on(': 6, 'n()': 8, '() ': 4, ') -': 2, ' ->': 2, '-> ': 2, '> t': 2, 'es.': 2, 's.H': 2, '.He': 2, 'Hel': 2, 'lp:': 2, 'p:\n': 2, '  ""': 16, ' """"': 9, '""""R': 1, '""Re': 1, 'Ret': 1, 'etu': 4, 'urn': 4, 'rn ': 3, 'n a': 4, ' a ': 2, 'a d': 1, ' di': 1, 'dic': 1, 'ict': 1, 'ct ': 2, 't w': 3, ' wi': 2, 'wit': 1, 'ith': 1, 'th ': 2, 'h t': 2, ' th': 8, 'the': 7, 'he ': 7, 'e P': 2, ' Py': 3, 'Pyt': 8, 'yth': 14, 'tho': 15, 'hon': 14, 'on ': 24, 'n i': 2, ' an': 3, 'and': 3, 'nd ': 3, 'd v': 1, ' ve': 2, 'on.': 3, 'n.\n': 1, '.\n\n': 2, '\n\n ': 3, '  P': 1, ' Pr': 1, 'Pro': 1, 'rov': 1, 'ovi': 1, 'vid': 1, 'ide': 1, 'de ': 2, 'e b': 2, ' bo': 1, 'bot': 1, 'oth': 1, 'e n': 1, ' na': 1, 'nam': 4, 'ame': 4, 'me ': 1, 'e a': 1, 'd t': 1, 'e v': 1, 'n o': 2, ' of': 2, 'of ': 2, 'f t': 2, 'n\n ': 2, ' cu': 1, 'cur': 1, 'urr': 1, 'rre': 2, 'ren': 1, 'ntl': 1, 'tly': 1, 'ly ': 1, 'y r': 1, ' ru': 1, 'run': 1, 'unn': 1, 'nni': 1, 'ng.': 1, 'g. ': 1, '. F': 2, ' Fo': 1, 'For': 1, 'or ': 5, 'r e': 1, ' ex': 2, 'exa': 1, 'xam': 1, 'amp': 1, 'le,': 1, 'e, ': 3, ', o': 1, ' on': 2, 'n C': 2, ' CP': 2, 'CPy': 4, 'n 2': 1, ' 2.': 1, '2.7': 2, '.7.': 2, '7.5': 2, '.5 ': 1, '5 i': 1, ' it': 2, 'it ': 2, 'wil': 1, 'ill': 1, 'll ': 1, 'l r': 1, 'ret': 4, 'rn\n': 1, '  {': 1, "" {'"": 1, ""{'n"": 1, ""'na"": 1, ""me'"": 1, ""e':"": 1, ""': "": 2, "": '"": 2, "" 'C"": 1, ""'CP"": 1, ""on'"": 2, ""n',"": 1, ""', "": 1, "", '"": 1, "" 'v"": 1, ""'ve"": 1, ""n':"": 1, "" '2"": 1, ""'2."": 1, "".5'"": 1, ""5'}"": 1, ""'}."": 1, '}.\n': 1, '  T': 1, ' Th': 1, 'Thi': 1, 'his': 1, 'is ': 3, 's f': 1, ' fu': 1, 'n w': 1, ' wo': 3, 'wor': 3, 'ork': 3, 'rks': 1, 'ks ': 1, 's b': 1, ' be': 2, 'bes': 1, 'st ': 1, 't o': 1, 'd P': 1, 'PyP': 2, 'yPy': 2, 'Py:': 1, 'y: ': 1, ': i': 5, ' in': 6, 'in ': 1, 'n p': 1, ' pa': 1, 'par': 1, 'art': 1, 'rti': 1, 'tic': 1, 'icu': 1, 'cul': 1, 'ula': 1, 'lar': 1, 'ar,': 1, 'r, ': 1, ', i': 2, 'pro': 1, 'rob': 1, 'oba': 1, 'bab': 1, 'abl': 1, 'bly': 1, 'ly\n': 1, 'y\n ': 1, '  d': 1, ' do': 2, 'doe': 1, 'oes': 1, 'esn': 1, ""sn'"": 1, ""n't"": 1, ""'t "": 1, 'rk ': 2, 'k f': 1, ' fo': 3, 'r J': 1, ' Jy': 1, 'Jyt': 2, ' or': 1, 'r I': 1, ' Ir': 1, 'Iro': 2, 'ron': 2, 'onP': 2, 'nPy': 2, 'n. ': 1, ' Fu': 1, 'Fut': 1, 're ': 1, 'e i': 2, 'inv': 1, 'nve': 1, 'ves': 1, 'sti': 1, 'tig': 1, 'iga': 1, 'gat': 1, 'n s': 1, ' sh': 2, 'sho': 1, 'hou': 1, 'oul': 1, 'uld': 1, 'ld ': 1, 'd b': 1, 'be ': 1, 'e d': 1, 'don': 1, '  t': 2, ' to': 1, 'to ': 1, 'o w': 1, 'k o': 1, ' ou': 1, 'out': 1, 'ut ': 1, 't t': 2, 'cor': 1, 'orr': 1, 'rec': 1, 'ect': 1, 'sha': 1, 'hap': 1, 'ape': 1, 'pe ': 1, 'e o': 1, 'cod': 1, 'ode': 1, 'e f': 1, 'r t': 1, 'hos': 1, 'ose': 1, 'se ': 2, 'e p': 1, 'rms': 1, 'ms.': 1, 's.\n': 1, '.\n ': 1, '""\n ': 4, 'n =': 11, '= p': 4, 'rm.': 6, 'm.p': 4, '.py': 9, 'pyt': 4, 'n_i': 8, '()\n': 4, ')\n ': 5, ' if': 4, 'if ': 8, 'f i': 5, ' ==': 5, '== ': 5, '= ""': 9, ' ""C': 1, '""CP': 1, 'on""': 15, 'n"":': 15, '"":\n': 6, 'n_v': 11, '  e': 5, ' el': 5, 'eli': 3, 'lif': 3, ' ""P': 1, '""Py': 1, 'Py""': 1, 'y"":': 2, ' ""%': 3, '""%s': 1, '%s.': 2, 's.%': 2, '.%s': 2, '%s""': 1, 's"" ': 1, '"" %': 3, ' % ': 3, '% (': 1, ' (\n': 1, '(\n ': 2, '  s': 5, 'ys.': 5, 's.p': 5, 'pyp': 5, 'ypy': 5, 'py_': 5, 'y_v': 5, '_in': 23, 'inf': 27, 'nfo': 27, 'fo.': 5, 'o.m': 3, '.ma': 1, 'maj': 1, 'ajo': 1, 'jor': 1, 'or,': 2, 'r,\n': 2, ',\n ': 15, '.mi': 2, 'min': 1, 'ino': 1, 'nor': 1, 'mic': 1, 'icr': 1, 'cro': 1, 'ro,': 1, 'o,\n': 9, '  )': 2, ' )\n': 2, 'f s': 2, 'o.r': 2, '.re': 3, 'rel': 5, 'ele': 7, 'lea': 5, 'eas': 5, 'ase': 5, 'sel': 2, 'lev': 2, 'eve': 2, 'vel': 2, 'el ': 1, 'l !': 1, ' !=': 1, '!= ': 1, ' ""f': 1, '""fi': 1, 'fin': 1, 'ina': 1, 'nal': 1, 'al""': 1, 'l"":': 3, '"""".': 1, '"".j': 1, '.jo': 1, 'joi': 1, 'oin': 1, 'in(': 3, 'n(\n': 1, '  [': 1, ' [i': 1, '[im': 1, 'on,': 2, 'n, ': 2, ', s': 2, 'el]': 1, 'l]\n': 1, ']\n ': 1, ' ""J': 1, '""Jy': 1, ')  ': 2, '  #': 2, ' # ': 2, '# C': 2, ' Co': 2, 'Com': 2, 'omp': 2, 'let': 2, 'ete': 2, 'te ': 3, 'e G': 2, ' Gu': 2, 'Gue': 2, 'ess': 2, 'ss\n': 2, 's\n ': 2, ' ""I': 1, '""Ir': 1, ' ""U': 3, '""Un': 3, 'Unk': 3, 'nkn': 3, 'kno': 3, 'now': 3, 'own': 3, 'wn""': 3, 'n""\n': 1, '  r': 2, 'n {': 2, ' {""': 10, '{""n': 1, '""na': 1, 'me""': 1, 'e"":': 3, '"": ': 26, ', ""': 8, ' ""v': 2, '""ve': 9, 'on}': 2, 'n}\n': 1, '}\n\n': 3, 'fo(': 2, 'o()': 2, '""""G': 1, '""Ge': 1, 'Gen': 1, 'ene': 1, 'ner': 1, 'era': 1, 'rat': 1, 'ate': 1, 'rma': 2, 'mat': 2, 'n f': 1, 'r a': 1, 'a b': 1, 'rt.': 1, 't.""': 1, ' tr': 1, 'rm_': 3, 'm_i': 3, 'fo ': 10, 'o =': 10, '= {': 9, '{""s': 2, '""sy': 3, 'yst': 9, 'ste': 9, 'tem': 9, 'em""': 2, 'm"":': 3, ': p': 5, 'm.s': 1, '.sy': 1, 'em(': 1, 'm()': 1, '(),': 2, '), ': 2, ' ""r': 3, '""re': 3, 'se""': 2, 'm.r': 1, 'se(': 1, 'e()': 1, '()}': 1, ')}\n': 3, '}\n ': 8, ' IO': 1, 'IOE': 1, 'OEr': 1, ': ""': 5, 'n"",': 1, '"", ': 3, 'n""}': 1, '""}\n': 3, '= _': 1, '  u': 1, 'b3_': 2, '3_i': 2, '{""v': 7, ': u': 2, '3._': 1, '.__': 3, '__}': 2, '_}\n': 2, 'et_': 2, 't_i': 2, ': c': 3, 'et.': 1, 't._': 1, 'sl_': 7, 'l_i': 5, ': N': 1, 'ne,': 2, ' ""o': 2, '""op': 2, 'l_v': 2, '""""}': 2, 'f O': 1, 'SL:': 1, 'L:\n': 1, ' {\n': 2, '{\n ': 2, ': O': 1, 'SL.': 3, 'L._': 1, '__,': 1, '_,\n': 1, '""%x': 2, '%x""': 2, 'x"" ': 2, '% O': 1, 'L.S': 1, '.SS': 1, 'L.O': 1, '.OP': 2, 'OPE': 2, 'PEN': 2, 'ENS': 2, 'NSS': 2, 'SL_': 2, 'L_V': 2, '_VE': 2, 'VER': 2, 'ERS': 2, 'RSI': 2, 'SIO': 2, 'ION': 2, 'ON_': 2, 'N_N': 2, '_NU': 2, 'NUM': 2, 'UMB': 2, 'MBE': 2, 'BER': 2, 'ER,': 1, 'R,\n': 1, '  }': 2, ' }\n': 2, 'hy_': 2, 'y_i': 2, ': g': 2, ' ge': 2, 'get': 2, 'eta': 2, 'att': 2, 'ttr': 2, 'tr(': 2, 'r(c': 1, '(cr': 1, 'hy,': 1, 'y, ': 1, ' ""_': 3, '""__': 3, '__""': 3, '_"",': 2, '"""")': 2, '"")}': 2, 'na_': 2, 'a_i': 2, 'r(i': 1, '(id': 1, 'na,': 1, 'a, ': 1, 'em_': 6, 'm_s': 6, '_ss': 6, '= s': 1, 'sl.': 1, 'l.O': 1, 'ER\n': 1, 'R\n ': 1, '% s': 1, 'l i': 3, ' is': 2, 's n': 2, ' no': 2, 'not': 2, 'ot ': 2, 't N': 2, 'ne ': 1, 'e e': 1, 'e ""': 1, ' ""p': 2, '""pl': 1, 'rm""': 1, 'fo,': 8, ' ""i': 2, '""im': 1, ' ""s': 1, 'sl""': 2, ': s': 1, ' ""u': 2, '""us': 1, 'usi': 1, 'sin': 1, 'ng_': 1, 'g_p': 1, '_py': 1, 'e,\n': 1, '""py': 1, 'pyO': 1, 'yOp': 1, 'SL""': 1, 'L"":': 1, '""ur': 1, 'b3""': 1, '3"":': 1, ' ""c': 2, '""ch': 1, 'et""': 1, 't"":': 1, '""cr': 1, 'hy""': 1, '""id': 1, 'na""': 1, 'a"":': 1, 'ts""': 1, 's"":': 1, ': {': 1, ': r': 1, 'n},': 1, '},\n': 1, 'f m': 1, ' ma': 2, 'mai': 3, '():': 1, '):\n': 1, '""""P': 1, '""Pr': 1, 'Pre': 1, 'ett': 1, 'tty': 1, 'ty-': 1, 'y-p': 1, '-pr': 1, 'nt ': 1, 'g i': 1, 's J': 1, ' JS': 1, 'JSO': 1, 'SON': 1, 'ON.': 1, 'N.""': 1, 'nt(': 1, 't(j': 1, '(js': 1, 'n.d': 1, '.du': 1, 'dum': 1, 'ump': 1, 'mps': 1, 'ps(': 1, 's(i': 1, '(in': 1, ' so': 1, 'sor': 1, 'rt_': 1, 't_k': 1, '_ke': 1, 'key': 1, 'eys': 1, 'ys=': 1, 's=T': 1, '=Tr': 1, 'Tru': 1, 'rue': 1, 'ue,': 1, 'ind': 1, 'nde': 1, 'den': 1, 'nt=': 1, 't=2': 1, '=2)': 1, '2))': 1, '))\n': 1, ')\n\n': 1, '\nif': 1, '__n': 1, '_na': 1, 'me_': 1, '_ =': 1, '__m': 1, '_ma': 1, 'in_': 1, '_"":': 1, '  m': 1}"
Kenneth Reitz Archive,hooks.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, '-*-': 2, 'coding:': 1, 'utf-8': 1, '""""""': 2, 'requests.hooks': 1, '~~~~~~~~~~~~~~': 1, 'this': 1, 'module': 1, 'provides': 1, 'the': 4, 'capabilities': 1, 'for': 3, 'requests': 1, 'hooks': 6, 'system.': 1, 'available': 1, 'hooks:': 3, '``response``:': 1, 'response': 2, 'generated': 1, 'from': 1, 'a': 3, 'request.': 1, '=': 6, '[""response""]': 1, 'def': 2, 'default_hooks():': 1, 'return': 2, '{event:': 1, '[]': 1, 'event': 1, 'in': 2, 'hooks}': 1, 'todo:': 1, 'is': 2, 'only': 1, 'one': 1, 'dispatch_hook(key,': 1, 'hooks,': 1, 'hook_data,': 1, '**kwargs):': 1, '""""""dispatches': 1, 'hook': 2, 'dictionary': 1, 'on': 1, 'given': 1, 'piece': 1, 'of': 1, 'data.""""""': 1, 'or': 1, '{}': 1, 'hooks.get(key)': 1, 'if': 3, 'hasattr(hooks,': 1, '""__call__""):': 1, '[hooks]': 1, '_hook_data': 3, 'hook(hook_data,': 1, '**kwargs)': 1, 'not': 1, 'none:': 1, 'hook_data': 2}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 1, 'cod': 1, 'odi': 1, 'din': 1, 'ing': 1, 'ng:': 1, 'g: ': 1, ': u': 1, ' ut': 1, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\n""': 1, '\n""""': 2, '""""""': 4, '""""\n': 3, '""\nr': 1, '\nre': 1, 'req': 1, 'equ': 3, 'que': 3, 'ues': 3, 'est': 3, 'sts': 2, 'ts.': 1, 's.h': 1, '.ho': 1, 'hoo': 25, 'ook': 25, 'oks': 14, 'ks\n': 1, 's\n~': 1, '\n~~': 1, '~~~': 12, '~~\n': 1, '~\n\n': 1, '\n\nT': 1, '\nTh': 1, 'Thi': 1, 'his': 1, 'is ': 3, 's m': 1, ' mo': 1, 'mod': 1, 'odu': 1, 'dul': 1, 'ule': 1, 'le ': 2, 'e p': 1, ' pr': 1, 'pro': 1, 'rov': 1, 'ovi': 1, 'vid': 1, 'ide': 1, 'des': 1, 'es ': 3, 's t': 2, ' th': 3, 'the': 3, 'he ': 4, 'e c': 1, ' ca': 1, 'cap': 1, 'apa': 1, 'pab': 1, 'abi': 1, 'bil': 1, 'ili': 1, 'lit': 1, 'iti': 1, 'tie': 1, 'ies': 1, 's f': 1, ' fo': 3, 'for': 3, 'or ': 4, 'r t': 1, 'e R': 1, ' Re': 2, 'Req': 2, 'ts ': 1, 's h': 1, ' ho': 16, 'ks ': 5, 's s': 1, ' sy': 1, 'sys': 1, 'yst': 1, 'ste': 1, 'tem': 1, 'em.': 1, 'm.\n': 1, '.\n\n': 1, '\n\nA': 1, '\nAv': 1, 'Ava': 1, 'vai': 1, 'ail': 1, 'ila': 1, 'lab': 1, 'abl': 1, 'ble': 1, 'e h': 1, 'ks:': 3, 's:\n': 3, ':\n\n': 1, '\n\n`': 1, '\n``': 1, '``r': 1, '`re': 1, 'res': 4, 'esp': 4, 'spo': 4, 'pon': 4, 'ons': 4, 'nse': 4, 'se`': 1, 'e``': 1, '``:': 1, '`:\n': 1, ':\n ': 7, '\n  ': 13, '   ': 70, '  T': 1, ' Th': 1, 'The': 1, 'e r': 1, ' re': 4, 'se ': 2, 'e g': 1, ' ge': 1, 'gen': 1, 'ene': 1, 'ner': 1, 'era': 1, 'rat': 1, 'ate': 1, 'ted': 1, 'ed ': 1, 'd f': 1, ' fr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm a': 1, ' a ': 3, 'a R': 1, 'st.': 1, 't.\n': 1, '.\n""': 1, '""\nH': 1, '\nHO': 1, 'HOO': 2, 'OOK': 2, 'OKS': 2, 'KS ': 1, 'S =': 1, ' = ': 6, '= [': 2, ' [""': 1, '[""r': 1, '""re': 1, 'se""': 1, 'e""]': 1, '""]\n': 1, ']\n\n': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 2, 'def': 3, 'ef ': 2, 'f d': 3, ' de': 1, 'efa': 1, 'fau': 1, 'aul': 1, 'ult': 1, 'lt_': 1, 't_h': 1, '_ho': 5, 'ks(': 1, 's()': 1, '():': 1, '):\n': 3, '  r': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n {': 1, ' {e': 1, '{ev': 1, 'eve': 2, 'ven': 3, 'ent': 2, 'nt:': 1, 't: ': 1, ': [': 1, ' []': 1, '[] ': 1, '] f': 1, 'r e': 1, ' ev': 1, 'nt ': 1, 't i': 1, ' in': 2, 'in ': 2, 'n H': 1, ' HO': 1, 'KS}': 1, 'S}\n': 1, '}\n\n': 1, '\n\n#': 1, '\n# ': 1, '# T': 1, ' TO': 1, 'TOD': 1, 'ODO': 1, 'DO:': 1, 'O: ': 1, ': r': 1, 'e i': 1, ' is': 2, 'e o': 2, ' on': 3, 'onl': 1, 'nly': 1, 'ly ': 1, 'y o': 2, 'one': 2, 'ne\n': 1, 'e\nd': 1, ' di': 2, 'dis': 1, 'isp': 2, 'spa': 2, 'pat': 2, 'atc': 2, 'tch': 2, 'ch_': 1, 'h_h': 1, 'ok(': 2, 'k(k': 1, '(ke': 2, 'key': 2, 'ey,': 1, 'y, ': 1, ', h': 2, 'ks,': 2, 's, ': 2, 'ok_': 7, 'k_d': 7, '_da': 7, 'dat': 8, 'ata': 8, 'ta,': 2, 'a, ': 2, ', *': 2, ' **': 2, '**k': 2, '*kw': 2, 'kwa': 2, 'war': 2, 'arg': 2, 'rgs': 2, 'gs)': 2, 's):': 1, '  ""': 1, ' """"': 1, '""""D': 1, '""Di': 1, 'Dis': 1, 'che': 1, 'hes': 1, 's a': 1, 'a h': 1, 'ok ': 2, 'k d': 1, 'dic': 1, 'ict': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'ona': 1, 'nar': 1, 'ary': 1, 'ry ': 1, 'on ': 1, 'n a': 1, 'a g': 1, ' gi': 1, 'giv': 1, 'ive': 1, 'en ': 1, 'n p': 1, ' pi': 1, 'pie': 1, 'iec': 1, 'ece': 1, 'ce ': 1, ' of': 1, 'of ': 1, ' da': 1, 'ta.': 1, 'a.""': 1, '.""""': 1, '""\n ': 1, '  h': 4, 's =': 3, '= h': 3, 's o': 1, ' or': 1, 'r {': 1, ' {}': 1, '{}\n': 1, '}\n ': 1, 'ks.': 1, 's.g': 1, '.ge': 1, 'get': 1, 'et(': 1, 't(k': 1, 'ey)': 1, 'y)\n': 1, ')\n ': 2, '  i': 3, ' if': 3, 'if ': 3, 'f h': 2, ' ha': 1, 'has': 1, 'asa': 1, 'sat': 1, 'att': 1, 'ttr': 1, 'tr(': 1, 'r(h': 1, '(ho': 2, ', ""': 1, ' ""_': 1, '""__': 1, '__c': 1, '_ca': 1, 'cal': 1, 'all': 1, 'll_': 1, 'l__': 1, '__""': 1, '_"")': 1, '""):': 1, ' [h': 1, '[ho': 1, 'ks]': 1, 's]\n': 1, ']\n ': 1, '  f': 1, 'r h': 1, 'k i': 1, 'n h': 2, '  _': 1, ' _h': 3, 'ta ': 3, 'a =': 2, 'k(h': 1, 's)\n': 1, 'f _': 1, 'a i': 1, 's n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't N': 1, ' No': 1, 'Non': 1, 'ne:': 1, 'e:\n': 1, '= _': 1, 'ta\n': 2, 'a\n ': 1}"
Kenneth Reitz Archive,http_proxy_digest.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 10, '-*-': 2, 'coding:': 1, 'utf-8': 1, '""""""the': 1, 'module': 1, 'containing': 1, 'httpproxydigestauth.""""""': 1, 'import': 3, 're': 1, 'from': 2, 'requests': 2, 'cookies,': 1, 'utils': 1, '.': 1, '_digest_auth_compat': 1, 'as': 1, 'auth': 1, 'class': 1, 'httpproxydigestauth(auth.httpdigestauth):': 1, '""""""http': 1, 'digest': 1, 'authentication': 1, 'between': 1, 'proxy': 1, ':param': 2, 'stale_rejects:': 2, 'the': 8, 'number': 1, 'of': 1, 'rejects': 1, 'indicate': 1, 'that:': 1, 'client': 1, 'may': 1, 'wish': 1, 'to': 3, 'simply': 1, 'retry': 2, 'request': 2, 'with': 2, 'a': 2, 'new': 4, 'encrypted': 1, 'response,': 1, 'without': 1, 'reprompting': 1, 'user': 1, 'for': 1, 'username': 1, 'and': 5, 'password.': 1, 'i.e.,': 1, 'build_digest_header': 1, ':type': 1, 'int': 1, '""""""': 2, '_pat': 1, '=': 13, 're.compile(r""digest': 1, '"",': 1, 'flags=re.ignorecase)': 1, 'def': 6, '__init__(self,': 1, '*args,': 1, '**kwargs):': 2, 'super(httpproxydigestauth,': 2, 'self).__init__(*args,': 1, '**kwargs)': 2, 'self.stale_rejects': 3, '0': 1, 'self.init_per_thread_state()': 2, '@property': 1, 'stale_rejects(self):': 1, 'thread_local': 4, 'getattr(self,': 2, '""_thread_local"",': 2, 'none)': 2, 'if': 10, 'is': 4, 'none:': 3, 'return': 6, 'self._stale_rejects': 2, 'thread_local.stale_rejects': 2, '@stale_rejects.setter': 1, 'stale_rejects(self,': 1, 'value):': 1, 'value': 2, 'else:': 2, 'init_per_thread_state(self):': 1, 'try:': 1, 'self).init_per_thread_state()': 1, 'except': 1, 'attributeerror:': 1, ""we're"": 1, 'not': 3, 'on': 1, '2.8.0+': 1, 'this': 1, 'method': 1, 'does': 1, 'exist': 1, 'pass': 1, 'handle_407(self,': 1, 'r,': 1, '""""""handle': 1, 'http': 1, '407': 2, 'only': 1, 'once,': 1, 'otherwise': 2, 'give': 2, 'up': 2, 'r:': 1, 'current': 1, 'response': 3, ':returns:': 1, 'responses,': 1, 'along': 1, 'r.status_code': 1, '==': 3, '<': 1, '2:': 1, 's_auth': 2, 'r.headers.get(""proxy-authenticate"")': 1, 'raise': 2, 'ioerror(': 1, '""proxy': 1, 'server': 2, 'violated': 1, 'rfc': 1, '7235:""': 1, '""407': 1, 'must': 1, 'contain': 1, 'header': 1, 'proxy-authenticate""': 1, ')': 2, 'elif': 2, 'self._pat.match(s_auth):': 1, 'r': 3, 'self.chal': 1, 'utils.parse_dict_header(self._pat.sub("""",': 1, 's_auth,': 1, 'count=1))': 1, 'we': 2, 'present': 1, 'user/passwd': 2, 'still': 1, 'get': 1, 'rejected': 1, 'https://tools.ietf.org/html/rfc2617#section-3.2.1': 1, '""proxy-authorization""': 1, 'in': 2, 'r.request.headers': 1, '""stale""': 1, 'self.chal:': 1, 'self.chal[""stale""].lower()': 2, '""true"":': 1, 'try': 1, 'again': 1, '+=': 1, '1': 1, 'wrong': 1, '""false"":': 1, 'ioerror(""user': 1, 'or': 1, 'password': 1, 'invalid"")': 1, 'consume': 1, 'content': 1, 'release': 1, 'original': 1, 'connection': 1, 'allow': 1, 'our': 1, 'reuse': 1, 'same': 1, 'one.': 1, 'r.content': 1, 'r.close()': 1, 'prep': 2, 'r.request.copy()': 1, 'cookies.extract_cookies_to_jar(prep._cookies,': 1, 'r.request,': 1, 'r.raw)': 1, 'prep.prepare_cookies(prep._cookies)': 1, 'prep.headers[""proxy-authorization""]': 1, 'self.build_digest_header(': 1, 'prep.method,': 1, 'prep.url': 1, '_r': 2, 'r.connection.send(prep,': 1, '_r.history.append(r)': 1, '_r.request': 1, 'authenticate': 1, '__call__(self,': 1, 'r):': 1, 'have': 1, 'nonce,': 1, 'then': 1, 'just': 1, 'use': 1, 'it,': 1, 'will': 1, 'tell': 1, 'us': 1, 'self.last_nonce:': 1, 'r.headers[""proxy-authorization""]': 1, 'self.build_digest_header(r.method,': 1, 'r.url)': 1, 'r.register_hook(""response"",': 1, 'self.handle_407)': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 8, 'cod': 2, 'odi': 1, 'din': 1, 'ing': 3, 'ng:': 1, 'g: ': 1, ': u': 1, ' ut': 3, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\n""': 1, '\n""""': 1, '""""""': 6, '""""T': 1, '""Th': 1, 'The': 2, 'he ': 9, 'e m': 1, ' mo': 1, 'mod': 1, 'odu': 1, 'dul': 1, 'ule': 1, 'le ': 2, 'e c': 3, 'con': 6, 'ont': 4, 'nta': 2, 'tai': 2, 'ain': 3, 'ini': 7, 'nin': 1, 'ng ': 4, 'g H': 1, ' HT': 3, 'HTT': 7, 'TTP': 7, 'TPP': 4, 'PPr': 4, 'Pro': 7, 'rox': 11, 'oxy': 11, 'xyD': 4, 'yDi': 4, 'Dig': 5, 'ige': 11, 'ges': 11, 'est': 19, 'stA': 5, 'tAu': 5, 'Aut': 8, 'uth': 19, 'th.': 2, 'h.""': 1, '.""""': 1, '""""\n': 3, '""\ni': 1, '\nim': 1, 'imp': 4, 'mpo': 3, 'por': 3, 'ort': 3, 'rt ': 3, 't r': 4, ' re': 24, 're\n': 1, 'e\n\n': 2, '\n\nf': 2, '\nfr': 2, 'fro': 2, 'rom': 3, 'om ': 2, 'm r': 2, 'req': 8, 'equ': 8, 'que': 8, 'ues': 8, 'sts': 2, 'ts ': 8, 's i': 3, ' im': 2, 't c': 1, 'coo': 6, 'ook': 7, 'oki': 6, 'kie': 6, 'ies': 6, 'es,': 3, 's, ': 5, ', u': 1, 'uti': 2, 'til': 3, 'ils': 2, 'ls\n': 1, 's\n\n': 3, 'm .': 1, ' . ': 1, '. i': 2, 't _': 1, ' _d': 1, '_di': 5, 'dig': 6, 'st_': 5, 't_a': 1, '_au': 5, 'aut': 11, 'th_': 1, 'h_c': 1, '_co': 6, 'com': 2, 'omp': 3, 'mpa': 1, 'pat': 4, 'at ': 2, 't a': 3, ' as': 1, 'as ': 1, 's a': 2, ' au': 3, 'th\n': 1, 'h\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 2, 'ass': 6, 'ss ': 1, 's H': 1, 'th(': 1, 'h(a': 1, '(au': 1, 'h.H': 1, '.HT': 1, 'TPD': 1, 'PDi': 1, 'th)': 2, 'h):': 2, '):\n': 8, ':\n ': 19, '\n  ': 77, '   ': 626, '  ""': 6, ' """"': 4, '""""H': 2, '""HT': 1, 'TP ': 2, 'P d': 1, ' di': 1, 'st ': 5, 'the': 14, 'hen': 5, 'ent': 9, 'nti': 4, 'tic': 4, 'ica': 5, 'cat': 5, 'ati': 4, 'tio': 7, 'ion': 7, 'on ': 2, 'n b': 1, ' be': 1, 'bet': 1, 'etw': 1, 'twe': 1, 'wee': 1, 'een': 1, 'en ': 2, 'n p': 1, ' pr': 9, 'pro': 6, 'xy\n': 1, 'y\n\n': 1, '\n\n ': 15, '  :': 4, ' :p': 2, ':pa': 2, 'par': 4, 'ara': 2, 'ram': 2, 'am ': 2, 'm s': 1, ' st': 5, 'sta': 20, 'tal': 15, 'ale': 15, 'le_': 14, 'e_r': 12, '_re': 12, 'rej': 14, 'eje': 14, 'jec': 14, 'ect': 17, 'cts': 13, 'ts:': 2, 's: ': 3, ': T': 1, ' Th': 1, 'e n': 4, ' nu': 1, 'num': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'er ': 6, 'r o': 2, ' of': 1, 'of ': 1, 'f r': 2, ' in': 6, 'ind': 1, 'ndi': 1, 'dic': 2, 'ate': 9, 'te ': 1, 'e t': 3, ' th': 16, 'tha': 1, 'hat': 1, 'at:': 1, 't:\n': 1, '  t': 5, ' cl': 1, 'cli': 1, 'lie': 1, 'ien': 1, 'nt ': 4, 't m': 1, ' ma': 1, 'may': 1, 'ay ': 1, 'y w': 1, ' wi': 5, 'wis': 3, 'ish': 1, 'sh ': 1, 'h t': 2, ' to': 3, 'to ': 3, 'o s': 1, ' si': 1, 'sim': 1, 'mpl': 1, 'ply': 1, 'ly ': 2, 'y r': 1, 'ret': 9, 'etr': 2, 'try': 4, 'ry ': 3, 'y t': 1, 'e r': 1, 'st\n': 2, 't\n ': 4, '  w': 1, 'wit': 3, 'ith': 3, 'th ': 4, 'h a': 1, ' a ': 1, 'a n': 1, ' ne': 4, 'new': 4, 'ew ': 4, 'w e': 1, ' en': 1, 'enc': 1, 'ncr': 1, 'cry': 1, 'ryp': 1, 'ypt': 1, 'pte': 1, 'ted': 3, 'ed ': 2, 'd r': 2, 'res': 7, 'esp': 6, 'spo': 6, 'pon': 6, 'ons': 7, 'nse': 6, 'se,': 1, 'e, ': 3, ', w': 1, 'tho': 7, 'hou': 1, 'out': 1, 'ut ': 1, 'rep': 11, 'epr': 1, 'mpt': 1, 'pti': 1, 'tin': 1, 'g t': 1, 'e u': 4, ' us': 6, 'use': 6, 'ser': 7, 'r f': 1, ' fo': 1, 'for': 1, 'or ': 2, 'r a': 1, ' a\n': 1, 'a\n ': 1, '  n': 1, 'w u': 1, 'ern': 1, 'rna': 1, 'nam': 1, 'ame': 2, 'me ': 3, 'e a': 1, ' an': 5, 'and': 8, 'nd ': 5, 'd p': 1, ' pa': 3, 'pas': 5, 'ssw': 4, 'swo': 2, 'wor': 2, 'ord': 2, 'rd.': 1, 'd. ': 1, ' i.': 1, 'i.e': 1, '.e.': 1, 'e.,': 1, '., ': 1, ', r': 6, 'y b': 1, ' bu': 1, 'bui': 3, 'uil': 3, 'ild': 3, 'ld_': 3, 'd_d': 3, 't_h': 4, '_he': 4, 'hea': 9, 'ead': 21, 'ade': 9, 'der': 9, 'er\n': 2, 'r\n ': 3, ' :t': 1, ':ty': 1, 'typ': 1, 'ype': 1, 'pe ': 1, 'e s': 3, ': i': 1, 'int': 1, 'nt\n': 2, '""\n\n': 1, '  _': 4, ' _p': 1, '_pa': 3, 't =': 2, ' = ': 13, '= r': 4, 're.': 2, 'e.c': 1, '.co': 4, 'mpi': 1, 'pil': 1, 'ile': 1, 'le(': 1, 'e(r': 1, '(r""': 1, 'r""d': 1, '""di': 1, 't ""': 1, ' "",': 1, '"", ': 5, ', f': 1, ' fl': 1, 'fla': 1, 'lag': 1, 'ags': 1, 'gs=': 1, 's=r': 1, '=re': 1, 'e.I': 1, '.IG': 1, 'IGN': 1, 'GNO': 1, 'NOR': 1, 'ORE': 1, 'REC': 1, 'ECA': 1, 'CAS': 1, 'ASE': 1, 'SE)': 1, 'E)\n': 1, ')\n\n': 5, '  d': 6, ' de': 6, 'def': 6, 'ef ': 6, 'f _': 2, ' __': 2, '__i': 2, '_in': 2, 'nit': 6, 'it_': 6, 't__': 2, '__(': 3, '_(s': 2, '(se': 9, 'sel': 27, 'elf': 27, 'lf,': 6, 'f, ': 6, ', *': 5, ' *a': 1, '*ar': 2, 'arg': 6, 'rgs': 6, 'gs,': 2, ' **': 4, '**k': 4, '*kw': 4, 'kwa': 4, 'war': 4, 'gs)': 4, 's):': 2, '  s': 9, ' su': 2, 'sup': 2, 'upe': 2, 'per': 7, 'er(': 7, 'r(H': 2, '(HT': 2, 'th,': 3, 'h, ': 3, ', s': 4, ' se': 20, 'lf)': 4, 'f).': 2, ')._': 1, '.__': 1, '_(*': 1, '(*a': 1, 's)\n': 3, ')\n ': 15, 'lf.': 17, 'f.s': 3, '.st': 6, 's =': 3, '= 0': 1, ' 0\n': 1, '0\n\n': 1, 'f.i': 2, '.in': 3, 't_p': 4, '_pe': 4, 'er_': 5, 'r_t': 4, '_th': 6, 'thr': 12, 'hre': 12, 'rea': 12, 'ad_': 12, 'd_s': 4, '_st': 6, 'tat': 7, 'te(': 4, 'e()': 4, '()\n': 5, '  @': 2, ' @p': 1, '@pr': 1, 'rop': 1, 'ope': 1, 'ert': 1, 'rty': 1, 'ty\n': 1, 'y\n ': 1, 'f s': 6, 'ts(': 2, 's(s': 2, 'f):': 2, 'd_l': 8, '_lo': 8, 'loc': 8, 'oca': 8, 'cal': 9, 'al ': 6, 'l =': 3, '= g': 2, ' ge': 3, 'get': 4, 'eta': 2, 'att': 2, 'ttr': 3, 'tr(': 2, 'r(s': 3, ', ""': 2, ' ""_': 2, '""_t': 2, 'al""': 2, 'l"",': 2, ', N': 2, ' No': 5, 'Non': 5, 'one': 6, 'ne)': 2, 'e)\n': 2, '  i': 7, ' if': 9, 'if ': 11, 'f t': 2, 'l i': 2, ' is': 4, 'is ': 5, 's N': 3, 'ne:': 3, 'e:\n': 5, '  r': 12, 'etu': 7, 'tur': 7, 'urn': 7, 'rn ': 6, 'n s': 2, 'f._': 4, '._s': 2, 'ts\n': 2, 's\n ': 2, 'n t': 1, 'al.': 2, 'l.s': 2, ' @s': 1, '@st': 1, 'ts.': 1, 's.s': 1, '.se': 2, 'set': 1, 'ett': 1, 'tte': 1, 'ter': 2, ', v': 1, ' va': 3, 'val': 4, 'alu': 3, 'lue': 3, 'ue)': 1, 'e):': 1, '= v': 2, 'ue\n': 2, 'e\n ': 4, '  e': 5, ' el': 4, 'els': 2, 'lse': 3, 'se:': 2, 'f i': 1, 'e(s': 1, ' tr': 2, 'ry:': 1, 'y:\n': 1, ').i': 1, ' ex': 2, 'exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pt ': 1, 't A': 1, ' At': 1, 'Att': 1, 'tri': 1, 'rib': 1, 'ibu': 1, 'but': 1, 'ute': 1, 'teE': 1, 'eEr': 1, 'Err': 3, 'rro': 3, 'ror': 3, 'or:': 1, 'r:\n': 1, '  #': 9, ' # ': 9, '# I': 1, ' If': 1, 'If ': 1, 'f w': 3, ' we': 3, ""we'"": 1, ""e'r"": 1, ""'re"": 1, 're ': 1, ' no': 4, 'not': 3, 'ot ': 3, 't o': 1, ' on': 4, 'n r': 5, 's 2': 1, ' 2.': 1, '2.8': 1, '.8.': 1, '8.0': 1, '.0+': 1, '0+ ': 1, '+ t': 1, 'thi': 1, 'his': 2, 's m': 1, ' me': 1, 'met': 3, 'eth': 3, 'hod': 3, 'od ': 1, 'd d': 1, ' do': 1, 'doe': 1, 'oes': 1, 'es ': 1, 's n': 1, 't e': 1, 'exi': 1, 'xis': 1, 'ist': 3, '  p': 5, 'ss\n': 1, 'f h': 1, ' ha': 2, 'han': 2, 'ndl': 3, 'dle': 3, 'e_4': 2, '_40': 2, '407': 5, '07(': 1, '7(s': 1, ' r,': 1, 'r, ': 1, '""Ha': 1, 'Han': 1, 'e H': 1, 'P 4': 1, ' 40': 2, '07 ': 3, '7 o': 1, 'onl': 1, 'nly': 1, 'y o': 1, 'onc': 3, 'nce': 3, 'ce,': 2, ', o': 2, ' ot': 2, 'oth': 2, 'her': 2, 'erw': 2, 'rwi': 2, 'ise': 4, 'se ': 8, 'e g': 1, ' gi': 2, 'giv': 2, 'ive': 2, 've ': 3, ' up': 2, 'up\n': 1, 'p\n\n': 2, ' r:': 1, 'r: ': 1, ': c': 1, ' cu': 1, 'cur': 1, 'urr': 1, 'rre': 1, 'ren': 1, 'se\n': 2, ' :r': 1, ':re': 1, 'rns': 1, 'ns:': 1, ': r': 1, 'ses': 1, ', a': 1, ' al': 2, 'alo': 1, 'lon': 1, 'ong': 2, 'g w': 1, 'w r': 2, '""\n ': 3, ' r.': 12, 'r.s': 1, 'atu': 1, 'tus': 1, 'us_': 1, 's_c': 1, 'ode': 1, 'de ': 1, 'e =': 1, ' ==': 3, '== ': 3, '= 4': 1, '7 a': 1, 'd s': 2, 's <': 1, ' < ': 1, '< 2': 1, ' 2:': 1, '2:\n': 1, ' s_': 3, 's_a': 4, 'h =': 1, 'r.h': 3, '.he': 4, 'ers': 4, 'rs.': 1, 's.g': 1, '.ge': 1, 'et(': 1, 't(""': 1, '(""p': 1, '""pr': 2, 'xy-': 5, 'y-a': 2, '-au': 2, 'te""': 2, 'e"")': 1, '"")\n': 2, 'h i': 1, ' ra': 2, 'rai': 2, 'ais': 2, 'e I': 2, ' IO': 2, 'IOE': 2, 'OEr': 2, 'or(': 2, 'r(\n': 2, '(\n ': 2, ' ""p': 1, 'xy ': 1, 'y s': 1, 'erv': 2, 'rve': 2, 'ver': 2, 'r v': 1, ' vi': 1, 'vio': 1, 'iol': 1, 'ola': 1, 'lat': 1, 'd R': 1, ' RF': 1, 'RFC': 1, 'FC ': 1, 'C 7': 1, ' 72': 1, '723': 1, '235': 1, '35:': 1, '5:""': 1, ':""\n': 1, ' ""4': 1, '""40': 1, '7 r': 1, 'e M': 1, ' MU': 1, 'MUS': 1, 'UST': 1, 'ST ': 1, 'T c': 1, 'in ': 3, 'n h': 1, ' he': 1, 'r p': 2, 'e""\n': 1, '  )': 2, ' )\n': 2, 'eli': 2, 'lif': 2, 'f n': 1, 't s': 1, '._p': 2, 'at.': 2, 't.m': 1, '.ma': 1, 'mat': 1, 'atc': 1, 'tch': 1, 'ch(': 1, 'h(s': 1, '(s_': 1, ' r\n': 3, 'r\n\n': 2, 'f.c': 4, '.ch': 4, 'cha': 4, 'hal': 4, '= u': 1, 'ls.': 2, 's.p': 1, '.pa': 1, 'ars': 1, 'rse': 1, 'se_': 1, 'e_d': 1, 'ict': 1, 'ct_': 2, 't.s': 1, '.su': 1, 'sub': 1, 'ub(': 1, 'b(""': 1, '(""""': 1, '"""",': 1, ', c': 1, 'cou': 1, 'oun': 1, 'unt': 1, 'nt=': 1, 't=1': 1, '=1)': 1, '1))': 1, '))\n': 1, '# i': 2, 'we ': 2, 'e p': 1, 'pre': 11, 'ese': 1, 'sen': 2, 't t': 2, 'er/': 2, 'r/p': 2, '/pa': 2, 'swd': 2, 'wd ': 1, 'd a': 1, 'sti': 1, 'ill': 2, 'll ': 3, 'l g': 1, 'et ': 1, 'cte': 1, 'ed\n': 1, 'd\n ': 2, '# h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//t': 1, '/to': 1, 'too': 1, 'ool': 1, 'ols': 1, 's.i': 1, '.ie': 1, 'iet': 1, 'etf': 1, 'tf.': 1, 'f.o': 1, '.or': 1, 'org': 1, 'rg/': 1, 'g/h': 1, '/ht': 1, 'htm': 1, 'tml': 1, 'ml/': 1, 'l/r': 1, '/rf': 1, 'rfc': 1, 'fc2': 1, 'c26': 1, '261': 1, '617': 1, '17#': 1, '7#s': 1, '#se': 1, 'sec': 1, 'cti': 3, 'on-': 1, 'n-3': 1, '-3.': 1, '3.2': 1, '.2.': 1, '2.1': 1, '.1\n': 1, '1\n ': 2, 'f ""': 1, ' ""P': 1, '""Pr': 3, 'y-A': 3, '-Au': 3, 'hor': 3, 'ori': 4, 'riz': 3, 'iza': 3, 'zat': 3, 'on""': 3, 'n"" ': 1, '"" i': 2, 'r.r': 6, '.re': 5, 'st.': 2, 't.h': 1, 'rs ': 1, 'd ""': 1, ' ""s': 1, '""st': 3, 'le""': 3, 'e"" ': 1, 'al:': 1, 'l:\n': 1, 'al[': 2, 'l[""': 2, '[""s': 2, 'e""]': 2, '""].': 2, '].l': 2, '.lo': 2, 'low': 3, 'owe': 2, 'wer': 2, 'r()': 2, '() ': 2, ') =': 2, '= ""': 2, ' ""t': 1, '""tr': 1, 'tru': 1, 'rue': 1, 'ue""': 1, 'e"":': 2, '"": ': 1, ':  ': 2, '# t': 2, 'y a': 1, ' ag': 1, 'aga': 1, 'gai': 1, 'in\n': 1, 'n\n ': 2, 's +': 1, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 1, '# w': 1, ' wr': 1, 'wro': 1, 'ron': 1, 'g u': 1, 'wd\n': 1, ' ""f': 1, '""fa': 1, 'fal': 1, 'als': 1, 'se""': 2, '"":\n': 1, 'r(""': 1, '(""U': 1, '""Us': 1, 'Use': 1, ' or': 2, 'rd ': 1, 'd i': 1, 'inv': 1, 'nva': 1, 'ali': 1, 'lid': 1, 'id""': 1, 'd"")': 1, '# C': 1, ' Co': 1, 'Con': 1, 'nsu': 1, 'sum': 1, 'ume': 1, 'nte': 2, 'ten': 2, 'rel': 1, 'ele': 1, 'lea': 1, 'eas': 1, 'ase': 1, 'e o': 2, 'rig': 1, 'igi': 1, 'gin': 1, 'ina': 1, 'nal': 1, 'l c': 1, 'onn': 2, 'nne': 2, 'nec': 2, 'on\n': 1, 'o a': 1, 'all': 2, 'llo': 1, 'ow ': 1, 'w o': 1, ' ou': 1, 'our': 1, 'ur ': 1, 'r n': 1, 'o r': 1, 'reu': 1, 'eus': 1, ' sa': 1, 'sam': 1, 'ne.': 1, 'e.\n': 1, '.\n ': 1, 'r.c': 3, '.cl': 1, 'clo': 1, 'los': 1, 'ose': 1, 'se(': 1, 'ep ': 1, 'p =': 1, 't.c': 1, 'cop': 1, 'opy': 1, 'py(': 1, 'y()': 1, '  c': 1, 'es.': 1, 's.e': 1, '.ex': 1, 'ext': 1, 'xtr': 1, 'tra': 1, 'rac': 1, 'act': 1, 't_c': 1, 'es_': 1, 's_t': 1, '_to': 1, 'to_': 1, 'o_j': 1, '_ja': 1, 'jar': 1, 'ar(': 1, 'r(p': 1, '(pr': 3, 'ep.': 6, 'p._': 2, '._c': 2, 'st,': 1, 't, ': 2, '.ra': 1, 'raw': 1, 'aw)': 1, 'w)\n': 1, 'p.p': 1, '.pr': 1, 'epa': 1, 'are': 1, 're_': 1, 'e_c': 1, 'es(': 1, 's(p': 1, 'es)': 1, 'p.h': 1, 'rs[': 2, 's[""': 2, '[""P': 2, 'n""]': 2, '""] ': 2, '] =': 2, '= s': 2, 'f.b': 2, '.bu': 2, 'p.m': 1, '.me': 2, 'od,': 2, 'd, ': 2, ', p': 1, 'p.u': 1, '.ur': 2, 'url': 2, 'rl\n': 1, 'l\n ': 1, ' _r': 4, '_r ': 1, 'r =': 1, 'on.': 1, 'n.s': 1, 'end': 2, 'nd(': 2, 'd(p': 1, 'ep,': 1, 'p, ': 1, '_r.': 2, '.hi': 1, 'sto': 1, 'tor': 1, 'ory': 1, 'ry.': 1, 'y.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'd(r': 1, '(r)': 1, 'r)\n': 1, '= p': 1, 'ep\n': 1, 'n _': 1, '_r\n': 1, 'e: ': 1, '# g': 1, 'up ': 1, 'p a': 1, 'te\n': 1, '__c': 1, '_ca': 1, 'll_': 1, 'l__': 1, ' r)': 1, 'r):': 1, 'e h': 1, 'hav': 1, 'ave': 1, 'non': 2, ', t': 1, 'n j': 1, ' ju': 1, 'jus': 1, 'ust': 1, 't u': 1, 'e i': 1, ' it': 1, 'it,': 1, 'r w': 1, 'wil': 1, 'l t': 1, ' te': 1, 'tel': 1, 'ell': 1, 'l u': 1, 'us\n': 1, 'f.l': 1, '.la': 1, 'ast': 1, 't_n': 1, '_no': 1, 'ce:': 1, 'r(r': 1, '(r.': 1, 'r.m': 1, 'r.u': 1, 'rl)': 1, 'l)\n': 1, 'reg': 1, 'egi': 1, 'gis': 1, 'ste': 1, 'r_h': 1, '_ho': 1, 'hoo': 1, 'ok(': 1, 'k(""': 1, '(""r': 1, '""re': 1, 'e"",': 1, 'f.h': 1, '.ha': 1, '07)': 1, '7)\n': 1}"
Kenneth Reitz Archive,http_stati.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 7, '-*-': 2, 'coding:': 1, 'utf-8': 1, 'from': 1, '._structures': 1, 'import': 1, 'lookupdict': 1, '_codes': 1, '=': 2, '{': 1, 'informational.': 1, '100:': 1, '(""continue"",),': 1, '101:': 1, '(""switching_protocols"",),': 1, '102:': 1, '(""processing"",),': 1, '103:': 1, '(""checkpoint"",),': 1, '122:': 1, '(""uri_too_long"",': 1, '""request_uri_too_long""),': 1, '200:': 1, '(""ok"",': 1, '""okay"",': 1, '""all_ok"",': 1, '""all_okay"",': 1, '""all_good"",': 1, '""\\\\o/"",': 1, '""â\x9c\x93""),': 1, '201:': 1, '(""created"",),': 1, '202:': 1, '(""accepted"",),': 1, '203:': 1, '(""non_authoritative_info"",': 1, '""non_authoritative_information""),': 1, '204:': 1, '(""no_content"",),': 1, '205:': 1, '(""reset_content"",': 1, '""reset""),': 1, '206:': 1, '(""partial_content"",': 1, '""partial""),': 1, '207:': 1, '(""multi_status"",': 1, '""multiple_status"",': 1, '""multi_stati"",': 1, '""multiple_stati""),': 1, '208:': 1, '(""already_reported"",),': 1, '226:': 1, '(""im_used"",),': 1, 'redirection.': 1, '300:': 1, '(""multiple_choices"",),': 1, '301:': 1, '(""moved_permanently"",': 1, '""moved"",': 1, '""\\\\o-""),': 1, '302:': 1, '(""found"",),': 1, '303:': 1, '(""see_other"",': 1, '""other""),': 1, '304:': 1, '(""not_modified"",),': 1, '305:': 1, '(""use_proxy"",),': 1, '306:': 1, '(""switch_proxy"",),': 1, '307:': 1, '(""temporary_redirect"",': 1, '""temporary_moved"",': 1, '""temporary""),': 1, '308:': 1, '(""permanent_redirect"",': 1, '""resume_incomplete"",': 1, '""resume""),': 1, 'these': 1, '2': 1, 'to': 1, 'be': 1, 'removed': 1, 'in': 3, '3.0': 1, 'client': 1, 'error.': 2, '400:': 1, '(""bad_request"",': 1, '""bad""),': 1, '401:': 1, '(""unauthorized"",),': 1, '402:': 1, '(""payment_required"",': 1, '""payment""),': 1, '403:': 1, '(""forbidden"",),': 1, '404:': 1, '(""not_found"",': 1, '""-o-""),': 1, '405:': 1, '(""method_not_allowed"",': 1, '""not_allowed""),': 1, '406:': 1, '(""not_acceptable"",),': 1, '407:': 1, '(""proxy_authentication_required"",': 1, '""proxy_auth"",': 1, '""proxy_authentication""),': 1, '408:': 1, '(""request_timeout"",': 1, '""timeout""),': 1, '409:': 1, '(""conflict"",),': 1, '410:': 1, '(""gone"",),': 1, '411:': 1, '(""length_required"",),': 1, '412:': 1, '(""precondition_failed"",': 1, '""precondition""),': 2, '413:': 1, '(""request_entity_too_large"",),': 1, '414:': 1, '(""request_uri_too_large"",),': 1, '415:': 1, '(""unsupported_media_type"",': 1, '""unsupported_media"",': 1, '""media_type""),': 1, '416:': 1, '(': 1, '""requested_range_not_satisfiable"",': 1, '""requested_range"",': 1, '""range_not_satisfiable"",': 1, '),': 1, '417:': 1, '(""expectation_failed"",),': 1, '418:': 1, '(""im_a_teapot"",': 1, '""teapot"",': 1, '""i_am_a_teapot""),': 1, '421:': 1, '(""misdirected_request"",),': 1, '422:': 1, '(""unprocessable_entity"",': 1, '""unprocessable""),': 1, '423:': 1, '(""locked"",),': 1, '424:': 1, '(""failed_dependency"",': 1, '""dependency""),': 1, '425:': 1, '(""unordered_collection"",': 1, '""unordered""),': 1, '426:': 1, '(""upgrade_required"",': 1, '""upgrade""),': 1, '428:': 1, '(""precondition_required"",': 1, '429:': 1, '(""too_many_requests"",': 1, '""too_many""),': 1, '431:': 1, '(""header_fields_too_large"",': 1, '""fields_too_large""),': 1, '444:': 1, '(""no_response"",': 1, '""none""),': 1, '449:': 1, '(""retry_with"",': 1, '""retry""),': 1, '450:': 1, '(""blocked_by_windows_parental_controls"",': 1, '""parental_controls""),': 1, '451:': 1, '(""unavailable_for_legal_reasons"",': 1, '""legal_reasons""),': 1, '499:': 1, '(""client_closed_request"",),': 1, 'server': 1, '500:': 1, '(""internal_server_error"",': 1, '""server_error"",': 1, '""/o\\\\"",': 1, '""â\x9c\x97""),': 1, '501:': 1, '(""not_implemented"",),': 1, '502:': 1, '(""bad_gateway"",),': 1, '503:': 1, '(""service_unavailable"",': 1, '""unavailable""),': 1, '504:': 1, '(""gateway_timeout"",),': 1, '505:': 1, '(""http_version_not_supported"",': 1, '""http_version""),': 1, '506:': 1, '(""variant_also_negotiates"",),': 1, '507:': 1, '(""insufficient_storage"",),': 1, '509:': 1, '(""bandwidth_limit_exceeded"",': 1, '""bandwidth""),': 1, '510:': 1, '(""not_extended"",),': 1, '511:': 1, '(""network_authentication_required"",': 1, '""network_auth"",': 1, '""network_authentication""),': 1, '}': 1, 'codes': 1, 'lookupdict(name=""status_codes"")': 1, 'for': 2, 'code,': 1, 'titles': 1, '_codes.items():': 1, 'title': 1, 'titles:': 1, 'type:': 1, 'ignore': 1, 'setattr(codes,': 2, 'title,': 1, 'code)': 2, 'if': 1, 'not': 1, 'title.startswith((""\\\\"",': 1, '""/"")):': 1, 'title.upper(),': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 4, 'cod': 10, 'odi': 2, 'din': 1, 'ing': 3, 'ng:': 1, 'g: ': 1, ': u': 1, ' ut': 1, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm .': 1, ' ._': 1, '._s': 1, '_st': 6, 'str': 1, 'tru': 1, 'ruc': 1, 'uct': 1, 'ctu': 1, 'tur': 1, 'ure': 1, 'res': 6, 'es ': 4, 's i': 2, ' im': 1, 'imp': 2, 'mpo': 4, 'por': 8, 'ort': 5, 'rt ': 1, 't L': 1, ' Lo': 2, 'Loo': 2, 'ook': 2, 'oku': 2, 'kup': 2, 'upD': 2, 'pDi': 2, 'Dic': 2, 'ict': 3, 'ct\n': 1, 't\n\n': 1, '\n\n_': 1, '\n_c': 1, '_co': 9, 'ode': 9, 'des': 6, 's =': 2, ' = ': 2, '= {': 1, ' {\n': 1, '{\n ': 1, '\n  ': 81, '   ': 190, '  #': 6, ' # ': 6, '# I': 1, ' In': 1, 'Inf': 1, 'nfo': 3, 'for': 6, 'orm': 2, 'rma': 4, 'mat': 2, 'ati': 13, 'tio': 13, 'ion': 15, 'ona': 1, 'nal': 2, 'al.': 1, 'l.\n': 1, '.\n ': 4, '  1': 5, ' 10': 4, '100': 1, '00:': 5, '0: ': 8, ': (': 68, ' (""': 67, '(""c': 5, '""co': 2, 'con': 11, 'ont': 6, 'nti': 7, 'tin': 1, 'inu': 1, 'nue': 1, 'ue""': 1, 'e"",': 14, '"",)': 32, ',),': 32, '),\n': 68, ',\n ': 70, '101': 1, '01:': 5, '1: ': 10, '(""s': 4, '""sw': 2, 'swi': 3, 'wit': 4, 'itc': 2, 'tch': 2, 'chi': 1, 'hin': 1, 'ng_': 1, 'g_p': 1, '_pr': 3, 'pro': 9, 'rot': 1, 'oto': 1, 'toc': 1, 'oco': 1, 'col': 2, 'ols': 3, 'ls""': 3, 's"",': 8, '102': 1, '02:': 5, '2: ': 8, '(""p': 7, '""pr': 8, 'roc': 3, 'oce': 3, 'ces': 4, 'ess': 3, 'ssi': 1, 'sin': 1, 'ng""': 3, 'g"",': 2, '103': 1, '03:': 5, '3: ': 7, '""ch': 1, 'che': 1, 'hec': 1, 'eck': 1, 'ckp': 1, 'kpo': 1, 'poi': 1, 'oin': 1, 'int': 2, 'nt""': 5, 't"",': 14, ' 12': 1, '122': 1, '22:': 2, '(""u': 8, '""ur': 1, 'uri': 3, 'ri_': 3, 'i_t': 3, '_to': 6, 'too': 8, 'oo_': 8, 'o_l': 6, '_lo': 2, 'lon': 2, 'ong': 2, '"", ': 52, ', ""': 52, ' ""r': 8, '""re': 12, 'req': 16, 'equ': 16, 'que': 10, 'ues': 10, 'est': 10, 'st_': 4, 't_u': 2, '_ur': 2, 'g"")': 1, '""),': 35, '  2': 10, ' 20': 9, '200': 1, '(""o': 1, '""ok': 2, 'ok""': 2, 'k"",': 2, ' ""o': 2, 'oka': 2, 'kay': 2, 'ay""': 3, 'y"",': 8, ' ""a': 3, '""al': 4, 'all': 5, 'll_': 3, 'l_o': 2, '_ok': 2, 'l_g': 1, '_go': 1, 'goo': 1, 'ood': 1, 'od""': 1, 'd"",': 25, ' ""\\': 2, '""\\\\': 3, '\\\\o': 2, '\\o/': 1, 'o/""': 1, '/"",': 1, ' ""â': 2, '""â\x9c': 2, 'â\x9c\x93': 1, '\x9c\x93""': 1, '\x93"")': 1, '201': 1, '""cr': 1, 'cre': 1, 'rea': 4, 'eat': 1, 'ate': 4, 'ted': 10, 'ed""': 24, '202': 1, '(""a': 2, '""ac': 1, 'acc': 2, 'cce': 2, 'cep': 2, 'ept': 2, 'pte': 1, '203': 1, '(""n': 9, '""no': 11, 'non': 3, 'on_': 8, 'n_a': 2, '_au': 8, 'aut': 9, 'uth': 9, 'tho': 4, 'hor': 3, 'ori': 3, 'rit': 2, 'ita': 2, 'tat': 10, 'tiv': 2, 'ive': 2, 've_': 2, 'e_i': 3, '_in': 3, 'inf': 2, 'fo""': 1, 'o"",': 1, ' ""n': 5, 'on""': 7, 'n"")': 6, '204': 1, '04:': 4, '4: ': 7, 'no_': 2, 'o_c': 1, 'nte': 5, 'ten': 4, 'ent': 19, '205': 1, '05:': 4, '5: ': 6, '(""r': 5, 'ese': 3, 'set': 4, 'et_': 1, 't_c': 2, 'et""': 1, 't"")': 4, '206': 1, '06:': 4, '6: ': 7, '""pa': 5, 'par': 4, 'art': 3, 'rti': 2, 'tia': 3, 'ial': 2, 'al_': 6, 'l_c': 3, ' ""p': 7, 'al""': 1, 'l"")': 1, '207': 1, '07:': 4, '7: ': 5, '(""m': 5, '""mu': 5, 'mul': 5, 'ult': 5, 'lti': 5, 'ti_': 2, 'i_s': 2, 'sta': 6, 'atu': 3, 'tus': 3, 'us""': 2, ' ""m': 5, 'tip': 3, 'ipl': 3, 'ple': 5, 'le_': 5, 'e_s': 2, 'ti""': 2, 'i"",': 1, 'i"")': 1, '208': 1, '08:': 3, '8: ': 5, 'alr': 1, 'lre': 1, 'ead': 2, 'ady': 1, 'dy_': 1, 'y_r': 3, '_re': 16, 'rep': 1, 'epo': 1, 'rte': 4, ' 22': 1, '226': 1, '26:': 2, '(""i': 4, '""im': 2, 'im_': 2, 'm_u': 1, '_us': 1, 'use': 2, 'sed': 2, '# R': 1, ' Re': 1, 'Red': 1, 'edi': 6, 'dir': 4, 'ire': 10, 'rec': 8, 'ect': 6, 'cti': 2, 'on.': 1, 'n.\n': 1, '  3': 9, ' 30': 9, '300': 1, 'e_c': 1, '_ch': 1, 'cho': 1, 'hoi': 1, 'oic': 1, 'ice': 2, 'es""': 3, '301': 1, '""mo': 2, 'mov': 4, 'ove': 4, 'ved': 4, 'ed_': 10, 'd_p': 1, '_pe': 1, 'per': 3, 'erm': 2, 'man': 4, 'ane': 2, 'nen': 2, 'ntl': 1, 'tly': 1, 'ly""': 1, '\\o-': 1, 'o-""': 2, '-"")': 2, '302': 1, '(""f': 3, '""fo': 2, 'fou': 2, 'oun': 2, 'und': 2, 'nd""': 2, '303': 1, '""se': 3, 'see': 1, 'ee_': 1, 'e_o': 1, '_ot': 1, 'oth': 2, 'the': 6, 'her': 2, 'er""': 2, 'r"",': 3, '""ot': 1, 'r"")': 1, '304': 1, 'not': 11, 'ot_': 10, 't_m': 1, '_mo': 2, 'mod': 1, 'dif': 1, 'ifi': 1, 'fie': 3, 'ied': 1, '305': 1, '""us': 1, 'se_': 1, 'e_p': 1, 'rox': 5, 'oxy': 5, 'xy""': 2, '306': 1, 'ch_': 1, 'h_p': 1, '307': 1, '(""t': 2, '""te': 4, 'tem': 4, 'emp': 3, 'ora': 4, 'rar': 3, 'ary': 3, 'ry_': 3, 'red': 10, 'ct""': 3, ' ""t': 5, 'y_m': 1, 'ry""': 2, 'y"")': 4, '308': 1, '""pe': 1, 'nt_': 5, 't_r': 2, 'esu': 2, 'sum': 2, 'ume': 2, 'me_': 1, 'inc': 1, 'nco': 1, 'com': 1, 'omp': 1, 'mpl': 2, 'let': 1, 'ete': 1, 'te""': 1, 'me""': 1, 'e"")': 7, '# T': 1, ' Th': 1, 'The': 1, 'hes': 1, 'se ': 1, 'e 2': 1, ' 2 ': 1, '2 t': 1, ' to': 1, 'to ': 1, 'o b': 1, ' be': 1, 'be ': 1, 'e r': 1, ' re': 1, 'rem': 1, 'emo': 1, 'ed ': 1, 'd i': 1, ' in': 3, 'in ': 3, 'n 3': 1, ' 3.': 1, '3.0': 1, '.0\n': 1, '0\n ': 1, '# C': 1, ' Cl': 1, 'Cli': 1, 'lie': 2, 'ien': 3, 'nt ': 1, 't E': 1, ' Er': 2, 'Err': 2, 'rro': 4, 'ror': 4, 'or.': 2, 'r.\n': 2, '  4': 33, ' 40': 10, '400': 1, '(""b': 4, '""ba': 5, 'bad': 3, 'ad_': 2, 'd_r': 5, 'st""': 3, ' ""b': 2, 'ad""': 1, 'd"")': 3, '401': 1, '""un': 9, 'una': 4, 'nau': 1, 'riz': 1, 'ize': 1, 'zed': 1, '402': 1, 'pay': 2, 'aym': 2, 'yme': 2, 'men': 3, 'qui': 6, 'uir': 6, '403': 1, 'orb': 1, 'rbi': 1, 'bid': 1, 'idd': 1, 'dde': 1, 'den': 3, 'en""': 1, 'n"",': 2, '404': 1, 't_f': 1, '_fo': 2, ' ""-': 1, '""-o': 1, '-o-': 1, '405': 1, '""me': 2, 'met': 1, 'eth': 1, 'hod': 1, 'od_': 1, 'd_n': 1, '_no': 4, 't_a': 4, '_al': 3, 'llo': 2, 'low': 2, 'owe': 2, 'wed': 2, '406': 1, '_ac': 1, 'pta': 1, 'tab': 1, 'abl': 8, 'ble': 8, 'le""': 6, '407': 1, 'xy_': 3, 'y_a': 3, 'hen': 4, 'tic': 4, 'ica': 4, 'cat': 4, 'n_r': 3, 'th""': 4, 'h"",': 3, '408': 1, 't_t': 1, '_ti': 2, 'tim': 3, 'ime': 3, 'meo': 3, 'eou': 3, 'out': 3, 'ut""': 3, '""ti': 1, '409': 1, '09:': 2, '9: ': 5, 'onf': 1, 'nfl': 1, 'fli': 1, 'lic': 1, ' 41': 9, '410': 1, '10:': 2, '(""g': 2, '""go': 1, 'gon': 1, 'one': 2, 'ne""': 2, '411': 1, '11:': 2, '(""l': 2, '""le': 2, 'len': 1, 'eng': 1, 'ngt': 1, 'gth': 1, 'th_': 2, 'h_r': 1, '412': 1, '12:': 1, 'pre': 4, 'eco': 4, 'ond': 4, 'ndi': 4, 'dit': 4, 'iti': 4, 'n_f': 2, '_fa': 2, 'fai': 3, 'ail': 6, 'ile': 3, 'led': 3, '413': 1, '13:': 1, 't_e': 3, '_en': 2, 'tit': 8, 'ity': 2, 'ty_': 1, 'y_t': 2, '_la': 4, 'lar': 4, 'arg': 4, 'rge': 4, 'ge""': 6, '414': 1, '14:': 1, '415': 1, '15:': 1, 'uns': 2, 'nsu': 3, 'sup': 3, 'upp': 4, 'ppo': 3, 'd_m': 2, '_me': 2, 'med': 3, 'dia': 3, 'ia_': 2, 'a_t': 4, '_ty': 2, 'typ': 3, 'ype': 3, 'pe""': 2, ' ""u': 5, 'ia""': 1, 'a"",': 1, '416': 1, '16:': 1, ' (\n': 1, '(\n ': 1, '  ""': 3, 'ste': 2, '_ra': 2, 'ran': 3, 'ang': 3, 'nge': 3, 'ge_': 2, 'e_n': 2, 't_s': 4, '_sa': 2, 'sat': 2, 'tis': 2, 'isf': 2, 'sfi': 2, 'fia': 2, 'iab': 2, '"",\n': 3, '""ra': 1, '  )': 1, ' ),': 1, '417': 1, '17:': 1, '(""e': 1, '""ex': 1, 'exp': 1, 'xpe': 1, 'pec': 1, 'cta': 1, '418': 1, '18:': 1, 'm_a': 2, '_a_': 2, '_te': 2, 'tea': 3, 'eap': 3, 'apo': 3, 'pot': 3, 'ot""': 3, ' ""i': 1, '""i_': 1, 'i_a': 1, '_am': 1, 'am_': 1, ' 42': 8, '421': 1, '21:': 1, '""mi': 1, 'mis': 1, 'isd': 1, 'sdi': 1, 'cte': 1, '422': 1, 'unp': 2, 'npr': 2, 'ssa': 2, 'sab': 2, 'e_e': 1, 'ty""': 1, '423': 1, '23:': 1, '""lo': 1, 'loc': 2, 'ock': 2, 'cke': 2, 'ked': 2, '424': 1, '24:': 1, '""fa': 1, 'd_d': 1, '_de': 1, 'dep': 2, 'epe': 2, 'pen': 2, 'end': 3, 'nde': 3, 'enc': 2, 'ncy': 2, 'cy""': 2, ' ""d': 1, '""de': 1, '425': 1, '25:': 1, 'uno': 2, 'nor': 3, 'ord': 2, 'rde': 2, 'der': 3, 'ere': 2, 'd_c': 1, 'oll': 1, 'lle': 1, 'lec': 1, '426': 1, '""up': 2, 'upg': 2, 'pgr': 2, 'gra': 2, 'rad': 2, 'ade': 3, 'de_': 1, 'e_r': 1, 'de""': 1, '428': 1, '28:': 1, '429': 1, '29:': 1, '""to': 2, 'o_m': 2, '_ma': 2, 'any': 2, 'ny_': 1, 'sts': 1, 'ts""': 1, 'ny""': 1, ' 43': 1, '431': 1, '31:': 1, '(""h': 2, '""he': 1, 'hea': 1, 'er_': 3, 'r_f': 1, '_fi': 1, 'iel': 2, 'eld': 2, 'lds': 2, 'ds_': 2, 's_t': 2, ' ""f': 1, '""fi': 1, ' 44': 2, '444': 1, '44:': 1, 'o_r': 1, 'esp': 1, 'spo': 1, 'pon': 1, 'ons': 3, 'nse': 1, 'se""': 1, '449': 1, '49:': 1, 'ret': 2, 'etr': 2, 'try': 2, 'y_w': 2, '_wi': 2, 'ith': 2, ' 45': 2, '450': 1, '50:': 1, '""bl': 1, 'blo': 1, 'd_b': 1, '_by': 1, 'by_': 1, 'win': 1, 'ind': 1, 'ndo': 1, 'dow': 1, 'ows': 1, 'ws_': 1, 's_p': 1, '_pa': 1, 'are': 2, 'ren': 2, 'nta': 2, 'tal': 2, 'ntr': 2, 'tro': 2, 'rol': 2, 's"")': 3, '451': 1, '51:': 1, 'nav': 3, 'ava': 3, 'vai': 3, 'ila': 3, 'lab': 3, 'e_f': 1, 'or_': 1, 'r_l': 1, '_le': 1, 'leg': 2, 'ega': 2, 'gal': 2, 'l_r': 2, 'eas': 2, 'aso': 2, 'son': 2, 'ns""': 2, ' ""l': 1, ' 49': 1, '499': 1, '99:': 1, '""cl': 1, 'cli': 1, '_cl': 1, 'clo': 1, 'los': 1, 'ose': 1, '# S': 1, ' Se': 1, 'Ser': 1, 'erv': 4, 'rve': 3, 'ver': 5, 'er ': 1, 'r E': 1, '  5': 11, ' 50': 9, '500': 1, '""in': 2, 'ter': 1, 'ern': 1, 'rna': 1, 'l_s': 1, '_se': 1, 'ser': 3, 'r_e': 2, '_er': 2, 'err': 2, 'or""': 2, ' ""s': 1, ' ""/': 2, '""/o': 1, '/o\\': 1, 'o\\\\': 1, '\\\\""': 2, '\\"",': 2, 'â\x9c\x97': 1, '\x9c\x97""': 1, '\x97"")': 1, '501': 1, 't_i': 1, '_im': 1, 'lem': 1, 'eme': 1, '502': 1, 'd_g': 1, '_ga': 1, 'gat': 2, 'tew': 2, 'ewa': 2, 'way': 2, '503': 1, 'rvi': 1, 'vic': 1, 'ce_': 1, 'e_u': 1, '_un': 1, '504': 1, '""ga': 1, 'ay_': 1, '505': 1, '""ht': 2, 'htt': 2, 'ttp': 2, 'tp_': 2, 'p_v': 2, '_ve': 2, 'ers': 2, 'rsi': 2, 'sio': 2, 'n_n': 1, '_su': 1, ' ""h': 1, '506': 1, '(""v': 1, '""va': 1, 'var': 1, 'ari': 1, 'ria': 1, 'ian': 1, 'ant': 1, 'als': 1, 'lso': 1, 'so_': 1, 'o_n': 1, '_ne': 1, 'neg': 1, 'ego': 1, 'got': 1, 'oti': 1, 'iat': 1, 'tes': 1, '507': 1, 'ins': 1, 'suf': 1, 'uff': 1, 'ffi': 1, 'fic': 1, 'ici': 1, 'cie': 1, 'sto': 1, 'tor': 1, 'rag': 1, 'age': 1, '509': 1, 'ban': 2, 'and': 2, 'ndw': 2, 'dwi': 2, 'wid': 2, 'idt': 2, 'dth': 2, 'h_l': 1, '_li': 1, 'lim': 1, 'imi': 1, 'mit': 1, 'it_': 1, '_ex': 2, 'exc': 1, 'xce': 1, 'cee': 1, 'eed': 1, 'ede': 1, 'ded': 2, 'h"")': 1, ' 51': 2, '510': 1, 'ext': 1, 'xte': 1, '511': 1, '""ne': 3, 'net': 3, 'etw': 3, 'two': 3, 'wor': 3, 'ork': 3, 'rk_': 3, 'k_a': 3, ',\n}': 1, '\n}\n': 1, '}\nc': 1, '\nco': 1, '= L': 1, 'ct(': 1, 't(n': 1, '(na': 1, 'nam': 1, 'ame': 1, 'me=': 1, 'e=""': 1, '=""s': 1, '""st': 1, 'us_': 1, 's_c': 1, '"")\n': 1, ')\nf': 1, '\nfo': 1, 'or ': 2, 'r c': 1, 'de,': 1, 'e, ': 2, ', t': 3, ' ti': 6, 'itl': 6, 'tle': 6, 'les': 2, 'n _': 1, ' _c': 1, 'es.': 1, 's.i': 1, '.it': 1, 'ite': 1, 'ems': 1, 'ms(': 1, 's()': 1, '():': 1, '):\n': 2, ':\n ': 2, '  f': 1, ' fo': 1, 'r t': 1, 'le ': 1, 'e i': 1, 'n t': 1, 'es:': 1, 's: ': 1, ':  ': 1, '# t': 1, ' ty': 1, 'pe:': 1, 'e: ': 1, ': i': 1, ' ig': 1, 'ign': 1, 'gno': 1, 'ore': 1, 're\n': 1, 'e\n ': 1, '  s': 2, ' se': 2, 'eta': 2, 'att': 2, 'ttr': 2, 'tr(': 2, 'r(c': 2, '(co': 2, 'es,': 2, 's, ': 2, 'le,': 1, ', c': 2, 'de)': 2, 'e)\n': 2, ')\n ': 1, '  i': 1, ' if': 1, 'if ': 1, 'f n': 1, ' no': 1, 'ot ': 1, 't t': 1, 'le.': 2, 'e.s': 1, '.st': 1, 'tar': 1, 'rts': 1, 'tsw': 1, 'th(': 1, 'h((': 1, '((""': 1, '(""\\': 1, '""/""': 1, '/"")': 1, '""))': 1, ')):': 1, 'e.u': 1, '.up': 1, 'ppe': 1, 'er(': 1, 'r()': 1, '(),': 1, '), ': 1}"
Kenneth Reitz Archive,sessions.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 4, 'requests': 2, 'from': 4, '._compat': 1, 'urljoin': 1, 'class': 1, 'baseurlsession(requests.session):': 1, '""""""a': 1, 'session': 3, 'with': 2, 'a': 5, 'url': 6, 'that': 3, 'all': 1, 'will': 2, 'use': 2, 'as': 1, 'base.': 1, ""let's"": 2, 'start': 1, 'by': 2, 'looking': 1, 'at': 2, 'an': 1, 'example:': 1, '..': 3, 'code-block::': 2, 'python': 2, '>>>': 8, 'requests_toolbelt': 2, 'sessions': 2, 's': 2, '=': 7, 'sessions.baseurlsession(': 2, '...': 2, ""base_url='https://example.com/resource/')"": 2, 'r': 2, ""s.get('sub-resource/',"": 1, ""params={'foo':"": 2, ""'bar'})"": 2, 'print(r.request.url)': 2, 'https://example.com/resource/sub-resource/?foo=bar': 1, 'our': 1, 'call': 1, 'to': 3, 'the': 15, '``get``': 2, 'method': 3, 'make': 1, 'request': 2, 'passed': 1, 'in': 1, 'when': 1, 'we': 7, 'created': 1, 'and': 3, 'partial': 2, 'resource': 1, 'name': 1, 'provide.': 1, 'implement': 1, 'this': 4, 'overriding': 1, '``request``': 1, 'so': 1, 'most': 1, 'uses': 1, 'of': 2, 'are': 2, 'covered.': 1, '(this,': 1, 'however,': 1, 'precludes': 1, 'preparedrequest': 1, 'objects).': 1, 'note::': 1, 'base': 1, 'you': 2, 'provide': 2, 'path': 1, '**very**': 1, 'important.': 1, 'look': 1, 'another': 1, '*similar*': 1, 'example': 1, ""s.get('/sub-resource/',"": 1, 'https://example.com/sub-resource/?foo=bar': 1, 'key': 1, 'difference': 1, 'here': 1, 'is': 1, 'called': 1, '``/sub-resource/``,': 1, 'i.e.,': 1, 'there': 1, 'was': 1, 'leading': 1, '``/``.': 1, 'changes': 1, 'how': 2, 'create': 1, 'because': 1, 'rely': 1, 'on': 2, ':mod:`urllib.parse.urljoin`.': 1, 'override': 2, 'generate': 1, 'url,': 3, 'sub-class': 1, '``create_url``': 1, 'method.': 1, 'based': 2, 'implementation': 1, 'https://github.com/kennethreitz/requests/issues/2554#issuecomment-109341010': 1, '""""""': 1, 'base_url': 2, 'none': 1, 'def': 3, '__init__(self,': 1, 'base_url=none):': 1, 'if': 1, 'base_url:': 1, 'self.base_url': 1, 'super(baseurlsession,': 2, 'self).__init__()': 1, 'request(self,': 1, 'method,': 1, '*args,': 2, '**kwargs):': 1, '""""""send': 1, 'after': 1, 'generating': 1, 'complete': 1, 'url.""""""': 1, 'self.create_url(url)': 1, 'return': 2, 'self).request(method,': 1, '**kwargs)': 1, 'create_url(self,': 1, 'url):': 1, '""""""create': 1, 'off': 1, 'path.""""""': 1, 'urljoin(self.base_url,': 1, 'url)': 1}","{'imp': 7, 'mpo': 5, 'por': 5, 'ort': 5, 'rt ': 5, 't r': 1, ' re': 11, 'req': 13, 'equ': 14, 'que': 14, 'ues': 15, 'est': 14, 'sts': 6, 'ts\n': 1, 's\n\n': 1, '\n\nf': 1, '\nfr': 1, 'fro': 4, 'rom': 4, 'om ': 3, 'm .': 1, ' ._': 1, '._c': 1, '_co': 1, 'com': 8, 'omp': 2, 'mpa': 1, 'pat': 3, 'at ': 6, 't i': 3, ' im': 6, 't u': 2, ' ur': 7, 'url': 23, 'rlj': 3, 'ljo': 3, 'joi': 3, 'oin': 3, 'in\n': 2, 'n\n\n': 3, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 2, 'las': 2, 'ass': 3, 'ss ': 2, 's B': 1, ' Ba': 2, 'Bas': 6, 'ase': 17, 'seU': 5, 'eUr': 5, 'Url': 5, 'rlS': 5, 'lSe': 5, 'Ses': 9, 'ess': 13, 'ssi': 13, 'sio': 13, 'ion': 14, 'on(': 3, 'n(r': 1, '(re': 1, 'ts.': 1, 's.S': 1, '.Se': 1, 'on)': 1, 'n):': 1, '):\n': 4, ':\n ': 5, '\n  ': 45, '   ': 188, '  ""': 4, ' """"': 4, '""""""': 6, '""""A': 1, '""A ': 1, 'A S': 1, ' Se': 3, 'on ': 6, 'n w': 2, ' wi': 4, 'wit': 2, 'ith': 3, 'th ': 3, 'h a': 1, ' a ': 4, 'a U': 1, ' UR': 7, 'URL': 7, 'RL ': 4, 'L t': 2, ' th': 20, 'tha': 3, 'hat': 3, 't a': 4, ' al': 1, 'all': 3, 'll ': 4, 'l r': 2, 'ts ': 1, 's w': 1, 'wil': 2, 'ill': 2, 'l u': 1, ' us': 3, 'use': 4, 'se ': 4, 'e a': 4, ' as': 1, 'as ': 2, 's a': 2, 'a b': 1, ' ba': 9, 'bas': 11, 'se.': 2, 'e.\n': 2, '.\n\n': 6, '\n\n ': 17, '  L': 2, ' Le': 2, 'Let': 2, ""et'"": 2, ""t's"": 2, ""'s "": 2, 's s': 1, ' st': 1, 'sta': 1, 'tar': 1, 'art': 3, 't b': 1, ' by': 2, 'by ': 2, 'y l': 1, ' lo': 2, 'loo': 2, 'ook': 2, 'oki': 1, 'kin': 1, 'ing': 4, 'ng ': 4, 'g a': 1, ' at': 2, ' an': 5, 'an ': 1, 'n e': 1, ' ex': 2, 'exa': 6, 'xam': 6, 'amp': 6, 'mpl': 9, 'ple': 9, 'le:': 1, 'e:\n': 1, ':\n\n': 2, '  .': 5, ' ..': 5, '.. ': 5, '. c': 2, ' co': 4, 'cod': 2, 'ode': 2, 'de-': 2, 'e-b': 2, '-bl': 2, 'blo': 2, 'loc': 2, 'ock': 2, 'ck:': 2, 'k::': 2, ':: ': 2, ': p': 2, ' py': 2, 'pyt': 2, 'yth': 2, 'tho': 8, 'hon': 2, 'on\n': 2, '  >': 8, ' >>': 8, '>>>': 8, '>> ': 8, '> f': 2, ' fr': 3, 'm r': 2, 'ts_': 2, 's_t': 2, '_to': 2, 'too': 2, 'ool': 2, 'olb': 2, 'lbe': 2, 'bel': 2, 'elt': 2, 'lt ': 2, 't s': 2, ' se': 8, 'ses': 5, 'ons': 4, 'ns\n': 2, 's\n ': 2, '> s': 2, ' s ': 2, 's =': 2, ' = ': 7, '= s': 5, 'ns.': 2, 's.B': 2, '.Ba': 2, 'n(\n': 2, '(\n ': 2, '...': 2, '.  ': 2, '  b': 4, 'se_': 8, 'e_u': 11, '_ur': 11, 'rl=': 3, ""l='"": 2, ""='h"": 2, ""'ht"": 2, 'htt': 5, 'ttp': 5, 'tps': 5, 'ps:': 5, 's:/': 5, '://': 5, '//e': 4, '/ex': 4, 'le.': 4, 'e.c': 4, '.co': 5, 'om/': 5, 'm/r': 3, '/re': 4, 'res': 9, 'eso': 9, 'sou': 9, 'our': 9, 'urc': 9, 'rce': 9, 'ce/': 8, ""e/'"": 4, ""/')"": 2, ""')\n"": 2, ')\n ': 7, '> r': 2, ' r ': 2, 'r =': 2, ' s.': 2, 's.g': 2, '.ge': 2, 'get': 4, 'et(': 2, ""t('"": 2, ""('s"": 1, ""'su"": 1, 'sub': 6, 'ub-': 6, 'b-r': 5, '-re': 5, ""/',"": 2, ""', "": 2, ', p': 3, ' pa': 7, 'par': 6, 'ara': 2, 'ram': 2, 'ams': 2, 'ms=': 2, 's={': 2, ""={'"": 2, ""{'f"": 2, ""'fo"": 2, 'foo': 4, ""oo'"": 2, ""o':"": 2, ""': "": 2, "": '"": 2, "" 'b"": 2, ""'ba"": 2, 'bar': 4, ""ar'"": 2, ""r'}"": 2, ""'})"": 2, '})\n': 2, '> p': 2, ' pr': 6, 'pri': 2, 'rin': 2, 'int': 2, 'nt(': 2, 't(r': 2, '(r.': 2, 'r.r': 2, '.re': 3, 'st.': 2, 't.u': 2, '.ur': 3, 'rl)': 5, 'l)\n': 4, '  h': 3, ' ht': 3, 'e/s': 1, '/su': 4, 'e/?': 2, '/?f': 2, '?fo': 2, 'oo=': 2, 'o=b': 2, '=ba': 2, 'ar\n': 2, 'r\n\n': 2, '  O': 1, ' Ou': 1, 'Our': 1, 'ur ': 1, 'r c': 1, ' ca': 2, 'cal': 2, 'l t': 1, ' to': 2, 'to ': 2, 'o t': 2, 'the': 15, 'he ': 14, 'e `': 2, ' ``': 6, '``g': 2, '`ge': 2, 'et`': 2, 't``': 3, '`` ': 4, '` m': 3, ' me': 5, 'met': 6, 'eth': 7, 'hod': 6, 'od ': 3, 'd w': 1, 'l m': 1, ' ma': 1, 'mak': 1, 'ake': 1, 'ke ': 1, 'a r': 1, 'st ': 3, 't t': 2, 'e U': 6, 'L p': 1, 'pas': 1, 'sse': 1, 'sed': 3, 'ed ': 5, 'd i': 1, ' in': 1, 'n\n ': 1, '  w': 1, ' wh': 1, 'whe': 1, 'hen': 1, 'en ': 1, ' we': 6, 'we ': 6, 'e c': 5, ' cr': 3, 'cre': 5, 'rea': 6, 'eat': 6, 'ate': 7, 'ted': 1, 'd t': 4, 'e S': 1, 'n a': 2, 'and': 3, 'nd ': 4, 'e p': 3, 'rti': 2, 'tia': 2, 'ial': 2, 'al ': 2, 'ce ': 2, 'e n': 1, ' na': 1, 'nam': 1, 'ame': 1, 'me ': 1, 'e w': 3, 'pro': 3, 'rov': 3, 'ovi': 3, 'vid': 3, 'ide': 5, 'de.': 1, '  W': 1, ' We': 1, 'We ': 1, 'e i': 2, 'lem': 2, 'eme': 2, 'men': 3, 'ent': 3, 'nt ': 1, 'thi': 3, 'his': 5, 'is ': 5, 's b': 1, 'y o': 2, ' ov': 3, 'ove': 4, 'ver': 6, 'err': 3, 'rri': 3, 'rid': 3, 'idi': 1, 'din': 2, 'g t': 2, '``r': 1, '`re': 1, 'st`': 1, 'd s': 1, ' so': 1, 'so ': 1, 'o m': 1, ' mo': 1, 'mos': 1, 'ost': 1, 'es ': 3, 's o': 1, ' of': 3, 'of ': 2, 'f a': 1, ' a\n': 1, 'a\n ': 1, '  S': 1, ' ar': 2, 'are': 3, 're ': 4, 'cov': 1, 'ere': 4, 'red': 2, 'ed.': 1, 'd. ': 1, '. (': 1, ' (T': 1, '(Th': 1, 'Thi': 2, 'is,': 1, 's, ': 3, ', h': 1, ' ho': 3, 'how': 3, 'owe': 1, 'wev': 1, 'eve': 1, 'er,': 1, 'r, ': 1, 'pre': 1, 'rec': 1, 'ecl': 1, 'clu': 1, 'lud': 1, 'ude': 1, 'des': 1, 's t': 3, 'e u': 1, 'e o': 1, 'f P': 1, ' Pr': 1, 'Pre': 1, 'rep': 1, 'epa': 1, 'edR': 1, 'dRe': 1, 'Req': 1, 'st\n': 1, 't\n ': 1, '  o': 1, ' ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'cts': 1, 'ts)': 1, 's).': 1, ').\n': 1, '. n': 1, ' no': 1, 'not': 2, 'ote': 1, 'te:': 1, 'e::': 1, '::\n': 1, '  T': 3, ' Th': 3, 'The': 2, 'e b': 1, 't y': 1, ' yo': 2, 'you': 2, 'ou ': 2, 'u p': 2, 'de ': 4, 'ath': 2, 'h y': 1, 'e *': 1, ' **': 3, '**v': 1, '*ve': 1, 'ery': 1, 'ry*': 1, 'y**': 1, '**\n': 1, '*\n ': 1, '  i': 3, 'rta': 1, 'tan': 1, 'ant': 1, 'nt.': 1, 't.\n': 1, 's l': 1, 'ok ': 1, 'k a': 1, 'ano': 1, 'oth': 1, 'her': 3, 'er ': 2, 'r *': 1, ' *s': 1, '*si': 1, 'sim': 1, 'imi': 1, 'mil': 1, 'ila': 1, 'lar': 1, 'ar*': 1, 'r* ': 1, '* e': 1, 'le\n': 1, 'e\n\n': 2, ""('/"": 1, ""'/s"": 1, 'm/s': 1, 'e k': 1, ' ke': 1, 'key': 1, 'ey ': 1, 'y d': 1, ' di': 1, 'dif': 1, 'iff': 1, 'ffe': 1, 'fer': 1, 'ren': 1, 'enc': 1, 'nce': 1, 'e h': 2, ' he': 1, ' is': 1, 't w': 1, 'lle': 1, 'led': 1, 'd `': 1, '` w': 1, 'h `': 1, '``/': 2, '`/s': 1, 'e/`': 1, '/``': 2, '``,': 1, '`,\n': 1, ',\n ': 1, ' i.': 1, 'i.e': 1, '.e.': 1, 'e.,': 1, '., ': 1, ', t': 1, ' wa': 1, 'was': 1, 'a l': 1, ' le': 1, 'lea': 1, 'ead': 1, 'adi': 1, 'g `': 1, '`/`': 1, '``.': 1, '`. ': 1, '. T': 1, 's c': 1, ' ch': 1, 'cha': 1, 'han': 1, 'ang': 1, 'nge': 1, 'ges': 1, 's h': 1, 'ow ': 2, 'w w': 2, 'te ': 4, 'e t': 4, 'RL\n': 1, 'L\n ': 1, ' be': 1, 'bec': 1, 'eca': 1, 'cau': 1, 'aus': 1, 'e r': 2, 'rel': 1, 'ely': 1, 'ly ': 1, ' on': 2, 'n :': 1, ' :m': 1, ':mo': 1, 'mod': 1, 'od:': 1, 'd:`': 1, ':`u': 1, '`ur': 1, 'rll': 1, 'lli': 1, 'lib': 1, 'ib.': 1, 'b.p': 1, '.pa': 1, 'ars': 1, 'rse': 1, 'e.u': 1, 'in`': 1, 'n`.': 1, '`.\n': 1, ' To': 1, 'To ': 1, 'o o': 1, 'e g': 1, ' ge': 2, 'gen': 2, 'ene': 2, 'ner': 2, 'era': 2, 'rat': 2, 'RL,': 1, 'L, ': 1, ', s': 3, ' su': 3, 'b-c': 1, '-cl': 1, 's m': 1, 'd a': 1, 'd o': 3, 'he\n': 1, 'e\n ': 1, '  `': 1, '``c': 1, '`cr': 1, 'te_': 3, 'rl`': 1, 'l``': 1, 'od.': 1, 'd.\n': 1, '  B': 1, 'n i': 1, 'nta': 1, 'tat': 1, 'ati': 2, 'tio': 1, 'n f': 1, 'om\n': 1, 'm\n ': 1, '//g': 1, '/gi': 1, 'git': 1, 'thu': 1, 'hub': 1, 'ub.': 1, 'b.c': 1, 'm/k': 1, '/ke': 1, 'ken': 1, 'enn': 1, 'nne': 1, 'net': 1, 'thr': 1, 'hre': 1, 'rei': 1, 'eit': 1, 'itz': 1, 'tz/': 1, 'z/r': 1, 'ts/': 1, 's/i': 1, '/is': 1, 'iss': 2, 'ssu': 2, 'sue': 2, 'es/': 1, 's/2': 1, '/25': 1, '255': 1, '554': 1, '54#': 1, '4#i': 1, '#is': 1, 'uec': 1, 'eco': 1, 'omm': 1, 'mme': 1, 'nt-': 1, 't-1': 1, '-10': 1, '109': 1, '093': 1, '934': 1, '341': 1, '410': 1, '101': 1, '010': 1, '10\n': 1, '0\n ': 1, '""""\n': 3, '""\n\n': 1, 'rl ': 3, 'l =': 3, '= N': 1, ' No': 1, 'Non': 2, 'one': 2, 'ne\n': 1, '  d': 3, ' de': 3, 'def': 3, 'ef ': 3, 'f _': 1, ' __': 1, '__i': 2, '_in': 2, 'ini': 2, 'nit': 2, 'it_': 2, 't__': 2, '__(': 2, '_(s': 1, '(se': 4, 'sel': 8, 'elf': 8, 'lf,': 3, 'f, ': 3, ', b': 1, 'l=N': 1, '=No': 1, 'ne)': 1, 'e):': 1, ' if': 1, 'if ': 1, 'f b': 1, 'rl:': 1, 'l:\n': 1, '  s': 2, 'lf.': 3, 'f.b': 2, '.ba': 2, '= b': 1, 'rl\n': 1, 'l\n ': 1, 'sup': 2, 'upe': 2, 'per': 2, 'er(': 2, 'r(B': 2, '(Ba': 2, 'on,': 2, 'n, ': 2, 'lf)': 2, 'f).': 2, ')._': 1, '.__': 1, '_()': 1, '()\n': 1, ')\n\n': 2, 'f r': 1, 'st(': 2, 't(s': 1, ', m': 1, 'od,': 2, 'd, ': 2, ', u': 4, 'rl,': 3, 'l, ': 3, ', *': 4, ' *a': 2, '*ar': 2, 'arg': 4, 'rgs': 4, 'gs,': 2, '**k': 2, '*kw': 2, 'kwa': 2, 'war': 2, 'gs)': 2, 's):': 1, '""""S': 1, '""Se': 1, 'Sen': 1, 'end': 1, ' af': 1, 'aft': 1, 'fte': 1, 'ter': 1, 'r g': 1, 'tin': 1, 'let': 1, 'ete': 1, 'RL.': 1, 'L.""': 1, '.""""': 2, '""\n ': 2, '  u': 1, 'f.c': 1, '.cr': 1, 'rl(': 2, 'l(u': 1, '(ur': 1, '  r': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n s': 1, ').r': 1, 't(m': 1, '(me': 1, 's)\n': 1, 'f c': 1, 'l(s': 1, 'l):': 1, '""""C': 1, '""Cr': 1, 'Cre': 1, 'L b': 1, 'off': 1, 'ff ': 1, 'f t': 1, 's p': 1, 'l p': 1, 'th.': 1, 'h.""': 1, 'n u': 1, 'in(': 1, 'n(s': 1}"
Kenneth Reitz Archive,streaming_iterator.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 5, '-*-': 2, 'coding:': 1, 'utf-8': 1, '""""""': 4, 'requests_toolbelt.streaming_iterator': 1, '====================================': 1, 'this': 6, 'holds': 1, 'the': 37, 'implementation': 1, 'details': 3, 'for': 4, ':class:`streamingiterator`.': 1, 'it': 3, 'is': 6, 'designed': 1, 'case': 3, 'where': 1, 'you,': 1, 'user,': 1, 'know': 2, 'size': 11, 'of': 11, 'upload': 7, 'but': 2, 'need': 1, 'to': 18, 'provide': 3, 'data': 7, 'as': 1, 'an': 2, 'iterator.': 1, 'class': 4, 'will': 4, 'allow': 1, 'you': 9, 'specify': 1, 'and': 6, 'stream': 2, 'without': 1, 'using': 4, 'a': 7, 'chunked': 3, 'transfer-encoding.': 1, 'from': 3, 'requests.utils': 1, 'import': 4, 'super_len': 1, '.multipart.encoder': 1, 'custombytesio,': 1, 'encode_with': 1, 'streamingiterator(object):': 1, 'provides': 1, 'way': 2, 'allowing': 1, 'iterators': 1, 'with': 3, 'known': 1, 'be': 4, 'streamed': 1, 'instead': 3, 'chunked.': 1, 'in': 3, 'requests,': 1, 'if': 4, 'pass': 3, 'iterator': 10, 'assumes': 1, 'want': 2, 'use': 3, 'transfer-encoding': 2, 'data,': 1, 'which': 1, 'not': 3, 'all': 1, 'servers': 1, 'support': 1, 'well.': 1, 'additionally,': 1, 'may': 1, 'set': 2, 'content-length': 1, 'yourself': 1, 'avoid': 1, 'that': 5, 'work.': 1, 'only': 1, 'preempt': 1, 'requests': 6, 'forcing': 1, 'uploads': 1, 'mimic': 1, 'very': 1, 'specific': 1, 'interace.': 1, 'having': 1, 'these': 1, 'can': 3, 'just': 1, 'class.': 1, 'simply': 1, 'instance': 1, 'streamingiterator': 2, 'via': 1, 'parameter': 1, 'like': 2, 'so:': 1, '..': 1, 'code-block::': 1, 'python': 1, 'requests_toolbelt': 1, 'let': 1, 'some': 1, 'generator': 1, 'already': 1, 'have': 1, 'produced': 1, 'by': 1, 'r': 1, '=': 14, 'requests.post(url,': 1, 'data=streamingiterator(size,': 1, 'iterator))': 1, 'also': 2, 'file-like': 1, 'objects': 2, ':py:class:`streamingiterator`': 1, ""can't"": 1, 'determize': 1, 'filesize': 2, 'itself.': 2, 'streaming': 1, 'file': 1, '``stdin``': 1, 'or': 1, 'any': 1, 'sockets.': 1, 'wrapping': 1, 'e.g.': 1, 'files': 1, 'are': 1, 'on': 1, 'disk': 1, '``streamingiterator``': 1, 'unnecessary,': 1, 'because': 2, 'determine': 2, 'naturally,': 1, 'should': 1, '`content-type`': 1, 'your': 1, 'appropriately': 1, 'toolbelt': 1, 'attempt': 1, 'guess': 1, 'you.': 1, 'def': 6, '__init__(self,': 2, 'size,': 1, 'iterator,': 2, 'encoding=""utf-8""):': 2, '#:': 7, 'expected': 1, 'self.size': 3, 'int(size)': 2, '<': 1, '0:': 1, 'raise': 1, 'valueerror(""the': 1, 'must': 1, 'positive': 1, 'integer"")': 1, 'attribute': 1, 'check': 1, 'length': 1, 'body.': 1, 'see': 1, 'bug': 1, '#80': 1, 'more': 1, 'self.len': 1, 'encoding': 4, 'input': 1, 'self.encoding': 2, 'used': 2, 'generate': 2, 'self.iterator': 2, 'hasattr(iterator,': 1, '""read""):': 1, 'self._file': 2, 'else:': 1, '_iteratorasbinaryfile(iterator,': 1, 'encoding)': 1, 'read(self,': 2, 'size=-1):': 2, 'return': 5, 'encode_with(self._file.read(size),': 1, 'self.encoding)': 2, '_iteratorasbinaryfile(object):': 1, 'buffer': 1, 'we': 1, 'correct': 1, 'number': 1, 'bytes': 1, 'requested': 1, 'during': 1, 'read': 1, 'self._buffer': 1, 'custombytesio()': 1, '_get_bytes(self):': 1, 'try:': 1, 'encode_with(next(self.iterator),': 1, 'except': 1, 'stopiteration:': 1, 'b""""': 1, '_load_bytes(self,': 1, 'size):': 1, 'self._buffer.smart_truncate()': 1, 'amount_to_load': 3, '-': 1, 'super_len(self._buffer)': 1, 'bytes_to_append': 2, 'true': 1, 'while': 1, '>': 1, '0': 1, 'bytes_to_append:': 1, 'self._get_bytes()': 1, '-=': 1, 'self._buffer.append(bytes_to_append)': 1, '==': 1, '-1:': 1, 'b"""".join(self.iterator)': 1, 'self._load_bytes(size)': 1, 'self._buffer.read(size)': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 4, 'cod': 20, 'odi': 15, 'din': 16, 'ing': 33, 'ng:': 1, 'g: ': 1, ': u': 1, ' ut': 1, 'utf': 3, 'tf-': 3, 'f-8': 3, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\n""': 1, '\n""""': 2, '""""""': 4, '""""\n': 5, '""\n\n': 3, '\n\nr': 1, '\nre': 1, 'req': 12, 'equ': 12, 'que': 12, 'ues': 13, 'est': 12, 'sts': 11, 'ts_': 2, 's_t': 6, '_to': 9, 'too': 3, 'ool': 3, 'olb': 3, 'lbe': 3, 'bel': 3, 'elt': 3, 'lt.': 1, 't.s': 1, '.st': 1, 'str': 5, 'tre': 12, 'rea': 19, 'eam': 12, 'ami': 9, 'min': 11, 'ng_': 1, 'g_i': 1, '_it': 1, 'ite': 22, 'ter': 37, 'era': 36, 'rat': 35, 'ato': 32, 'tor': 32, 'or\n': 6, 'r\n=': 1, '\n==': 1, '===': 34, '==\n': 1, '=\n\n': 1, '\n\nT': 1, '\nTh': 1, 'Thi': 4, 'his': 6, 'is ': 12, 's h': 1, ' ho': 1, 'hol': 1, 'old': 1, 'lds': 1, 'ds ': 2, 's t': 6, ' th': 39, 'the': 33, 'he ': 35, 'e i': 10, ' im': 5, 'imp': 6, 'mpl': 2, 'ple': 1, 'lem': 1, 'eme': 1, 'men': 1, 'ent': 3, 'nta': 1, 'tat': 1, 'ati': 2, 'tio': 3, 'ion': 3, 'on ': 2, 'n d': 3, ' de': 13, 'det': 6, 'eta': 3, 'tai': 3, 'ail': 3, 'ils': 4, 'ls ': 3, 's f': 2, ' fo': 5, 'for': 5, 'or ': 15, 'r t': 4, 'e :': 1, ' :c': 1, ':cl': 2, 'cla': 7, 'las': 7, 'ass': 11, 'ss:': 2, 's:`': 2, ':`S': 2, '`St': 3, 'Str': 7, 'ngI': 7, 'gIt': 7, 'Ite': 10, 'or`': 3, 'r`.': 1, '`. ': 1, '. I': 2, ' It': 1, 'It\n': 1, 't\ni': 1, '\nis': 1, 's d': 1, 'des': 2, 'esi': 3, 'sig': 1, 'ign': 1, 'gne': 1, 'ned': 1, 'ed ': 10, 'd f': 2, 'e c': 4, ' ca': 7, 'cas': 3, 'ase': 3, 'se ': 8, 'e w': 2, ' wh': 3, 'whe': 1, 'her': 1, 'ere': 1, 're ': 3, 'e y': 1, ' yo': 11, 'you': 11, 'ou,': 1, 'u, ': 1, ', t': 1, 'e u': 7, ' us': 10, 'use': 8, 'ser': 2, 'er,': 1, 'r, ': 5, ', k': 1, ' kn': 3, 'kno': 3, 'now': 3, 'ow ': 2, 'w t': 1, 'e s': 6, ' si': 16, 'siz': 26, 'ize': 27, 'ze ': 16, 'e o': 9, ' of': 11, 'of ': 11, 'f t': 6, ' up': 8, 'upl': 8, 'plo': 8, 'loa': 13, 'oad': 13, 'ad ': 11, 'd b': 3, ' bu': 4, 'but': 3, 'ut\n': 1, 't\nn': 1, '\nne': 1, 'nee': 1, 'eed': 1, 'd t': 8, ' to': 19, 'to ': 18, 'o p': 4, ' pr': 6, 'pro': 6, 'rov': 4, 'ovi': 4, 'vid': 4, 'ide': 4, 'de ': 3, 'e t': 14, 'e d': 7, ' da': 9, 'dat': 9, 'ata': 9, 'ta ': 5, 'a a': 1, ' as': 2, 'as ': 1, 's a': 2, ' an': 9, 'an ': 5, 'n i': 3, ' it': 19, 'or.': 1, 'r. ': 1, '. T': 3, ' Th': 8, 's c': 5, ' cl': 3, 'ss ': 8, 's w': 3, ' wi': 8, 'wil': 4, 'ill': 4, 'll ': 5, 'l a': 1, ' al': 6, 'all': 5, 'llo': 2, 'low': 2, 'w y': 1, 'ou ': 9, 'u t': 1, 'o s': 4, ' sp': 2, 'spe': 2, 'pec': 3, 'eci': 2, 'cif': 2, 'ify': 1, 'fy\n': 1, 'y\nt': 1, '\nth': 1, 'e a': 5, 'and': 6, 'nd ': 8, 'd s': 3, ' st': 4, 'am ': 2, 'm t': 2, 'a w': 2, 'wit': 7, 'ith': 7, 'tho': 2, 'hou': 2, 'out': 1, 'ut ': 3, 't u': 2, 'usi': 4, 'sin': 4, 'ng ': 14, 'g a': 4, ' a ': 7, 'a c': 2, ' ch': 5, 'chu': 4, 'hun': 4, 'unk': 4, 'nke': 4, 'ked': 4, ' tr': 4, 'tra': 3, 'ran': 3, 'ans': 3, 'nsf': 3, 'sfe': 3, 'fer': 9, 'er-': 3, 'r-e': 3, '-en': 3, 'enc': 16, 'nco': 18, 'ng.': 1, 'g.\n': 1, '.\n\n': 3, '\n\n""': 1, '""\nf': 1, '\nfr': 2, 'fro': 3, 'rom': 3, 'om ': 3, 'm r': 2, ' re': 19, 'ts.': 3, 's.u': 1, '.ut': 1, 'uti': 1, 'til': 1, 's i': 4, 'mpo': 4, 'por': 5, 'ort': 5, 'rt ': 5, 't s': 1, ' su': 3, 'sup': 3, 'upe': 2, 'per': 2, 'er_': 2, 'r_l': 2, '_le': 2, 'len': 5, 'en\n': 1, 'n\n\n': 2, '\n\nf': 1, 'm .': 1, ' .m': 1, '.mu': 1, 'mul': 1, 'ult': 1, 'lti': 1, 'tip': 1, 'ipa': 1, 'par': 2, 'art': 2, 'rt.': 1, 't.e': 1, '.en': 5, 'ode': 5, 'der': 1, 'er ': 5, 'r i': 3, 't C': 1, ' Cu': 2, 'Cus': 2, 'ust': 4, 'sto': 2, 'tom': 2, 'omB': 2, 'mBy': 2, 'Byt': 2, 'yte': 11, 'tes': 11, 'esI': 2, 'sIO': 2, 'IO,': 1, 'O, ': 1, ', e': 4, ' en': 8, 'de_': 3, 'e_w': 3, '_wi': 3, 'th\n': 3, 'h\n\n': 1, '\n\n\n': 2, '\n\nc': 2, '\ncl': 2, 's S': 1, ' St': 4, 'or(': 3, 'r(o': 1, '(ob': 2, 'obj': 4, 'bje': 4, 'jec': 4, 'ect': 6, 'ct)': 2, 't):': 2, '):\n': 9, ':\n\n': 2, '\n\n ': 23, '\n  ': 70, '   ': 344, '  ""': 2, ' """"': 2, '""\n ': 1, '  T': 1, 's p': 1, 'es ': 3, ' wa': 4, 'way': 2, 'ay ': 3, 'y o': 1, 'f a': 1, 'owi': 1, 'win': 1, 'g i': 2, 'ors': 1, 'rs ': 1, 'th ': 3, 'h a': 1, 'a k': 1, 'own': 1, 'wn ': 1, 'n s': 2, 'o b': 1, ' be': 6, 'be\n': 2, 'e\n ': 7, '  s': 16, 'ame': 2, 'med': 1, 'd i': 2, ' in': 10, 'ins': 3, 'nst': 4, 'ste': 4, 'tea': 3, 'ead': 10, 'd o': 2, 'f c': 1, 'ed.': 1, 'd.\n': 1, '  I': 1, ' In': 2, 'In ': 1, 'n r': 1, 'ts,': 1, 's, ': 1, ', i': 4, ' if': 4, 'if ': 4, 'f y': 2, 'u p': 1, ' pa': 4, 'pas': 3, 'in ': 1, 'n a': 2, 'it ': 2, 't a': 4, 'ssu': 1, 'sum': 1, 'ume': 1, 'mes': 1, 's y': 2, 'u w': 1, 'wan': 2, 'ant': 2, 'nt ': 2, 't t': 7, 'o u': 2, 'se\n': 2, '  c': 2, 'g t': 4, 'ta,': 1, 'a, ': 1, ', w': 1, 'whi': 2, 'hic': 1, 'ich': 1, 'ch ': 1, 'h n': 1, ' no': 3, 'not': 3, 'ot ': 3, 'l s': 1, ' se': 21, 'erv': 1, 'rve': 1, 'ver': 2, 'ers': 1, 'rs\n': 1, 's\n ': 4, 'upp': 1, 'ppo': 1, 't w': 4, ' we': 2, 'wel': 1, 'ell': 1, 'll.': 1, 'l. ': 1, '. A': 1, ' Ad': 1, 'Add': 1, 'ddi': 1, 'dit': 1, 'iti': 2, 'ona': 1, 'nal': 1, 'lly': 2, 'ly,': 2, 'y, ': 3, ', y': 2, 'u m': 1, ' ma': 1, 'may': 1, 'y w': 2, 'set': 2, 'et ': 3, 'con': 1, 'ont': 2, 'nte': 4, 'ten': 2, 'nt-': 2, 't-l': 1, '-le': 1, 'eng': 2, 'ngt': 2, 'gth': 2, 'h\n ': 2, '  y': 1, 'our': 2, 'urs': 1, 'rse': 1, 'sel': 31, 'elf': 31, 'lf ': 1, 'o a': 1, ' av': 1, 'avo': 1, 'voi': 1, 'oid': 1, 'id ': 1, 'thi': 2, 's b': 1, 'tha': 5, 'hat': 5, 'at ': 5, 'l n': 2, ' wo': 1, 'wor': 1, 'ork': 1, 'rk.': 1, 'k. ': 1, 'The': 6, ' on': 2, 'onl': 1, 'nly': 1, 'ly ': 3, 'y t': 2, 'pre': 1, 'ree': 1, 'eem': 1, 'emp': 2, 'mpt': 2, 'pt\n': 1, 't\n ': 1, '  r': 9, 'ts ': 6, 's u': 4, 'orc': 1, 'rci': 1, 'cin': 1, 'he\n': 3, '  u': 1, 'ads': 1, ' is': 5, 'o m': 1, ' mi': 1, 'mim': 1, 'imi': 1, 'mic': 1, 'ic ': 2, 'c a': 1, 'a v': 1, ' ve': 1, 'ery': 1, 'ry ': 1, 'y s': 2, 'ifi': 1, 'fic': 1, 'c i': 1, 'int': 4, 'rac': 1, 'ace': 1, 'ce.': 1, 'e. ': 1, 'Ins': 1, 'f h': 2, ' ha': 3, 'hav': 2, 'avi': 1, 'vin': 1, 'o k': 1, 'ow\n': 1, 'w\n ': 1, '  t': 3, 'hes': 1, 'ese': 1, 'u c': 2, 'can': 4, 'd j': 1, ' ju': 1, 'jus': 1, 'st ': 2, 'ss.': 1, 's. ': 2, '. Y': 1, ' Yo': 2, 'You': 2, 'u s': 2, 'sim': 1, 'ply': 1, 'y p': 1, 'r a': 2, 'd p': 1, 'sta': 1, 'tan': 1, 'anc': 1, 'nce': 1, 'ce ': 1, 'f S': 1, 'o r': 1, 'ts\n': 2, '  v': 1, ' vi': 1, 'via': 1, 'ia ': 1, 'a t': 1, 'a p': 3, 'ara': 1, 'ram': 1, 'met': 1, 'ete': 4, 'r l': 1, ' li': 2, 'lik': 3, 'ike': 3, 'ke ': 3, ' so': 3, 'so:': 1, 'o:\n': 1, '  .': 1, ' ..': 1, '.. ': 1, '. c': 1, 'de-': 1, 'e-b': 1, '-bl': 1, 'blo': 1, 'loc': 1, 'ock': 2, 'ck:': 1, 'k::': 1, ':: ': 1, ': p': 1, ' py': 1, 'pyt': 1, 'yth': 1, 'hon': 1, 'on\n': 1, '  f': 1, ' fr': 1, 'lt ': 2, 't i': 2, 't S': 2, 'r\n\n': 4, '  i': 4, 't r': 2, 's\n\n': 1, '  #': 11, ' # ': 4, '# L': 1, ' Le': 1, 'Let': 1, 'r b': 1, 'be ': 2, 'som': 1, 'ome': 1, 'me ': 1, 'e g': 1, ' ge': 3, 'gen': 3, 'ene': 3, 'ner': 3, 't y': 1, 'u a': 1, 'alr': 1, 'lre': 1, 'ady': 1, 'dy ': 1, 'y h': 1, 'ave': 1, 've ': 2, 'e b': 3, '# t': 1, 'rod': 1, 'odu': 1, 'duc': 1, 'uce': 1, 'ced': 1, ' by': 5, 'by ': 1, ' r ': 1, 'r =': 4, ' = ': 14, '= r': 1, 's.p': 1, '.po': 1, 'pos': 2, 'ost': 1, 'st(': 1, 't(u': 1, '(ur': 1, 'url': 1, 'rl,': 1, 'l, ': 1, ', d': 1, 'ta=': 1, 'a=S': 1, '=St': 1, 'r(s': 1, '(si': 6, 'ze,': 2, 'e, ': 2, 'or)': 3, 'r))': 1, '))\n': 1, ')\n\n': 8, '  Y': 1, 'als': 2, 'lso': 2, 'so ': 2, ' fi': 5, 'fil': 8, 'ile': 11, 'le-': 1, 'e-l': 1, '-li': 1, ' ob': 2, 'cts': 2, 'o :': 1, ' :p': 1, ':py': 1, 'py:': 1, 'y:c': 1, 'r` ': 1, '` i': 2, 'in\n': 1, 'n\n ': 1, 'e r': 1, ""an'"": 1, ""n't"": 1, ""'t "": 1, 't d': 2, 'erm': 3, 'rmi': 3, 'miz': 1, 'e f': 2, 'les': 3, 'its': 2, 'tse': 2, 'lf.': 24, 'f. ': 1, 'g f': 1, 'le ': 4, 's l': 1, 'e `': 2, ' ``': 2, '``s': 1, '`st': 1, 'std': 1, 'tdi': 1, 'in`': 1, 'n``': 1, '`` ': 2, '` o': 2, ' or': 1, 'any': 1, 'ny ': 1, 'soc': 1, 'cke': 1, 'ket': 1, 'ets': 1, '. W': 1, ' Wr': 1, 'Wra': 1, 'rap': 1, 'app': 7, 'ppi': 1, 'pin': 1, 'g e': 1, ' e.': 1, 'e.g': 1, '.g.': 1, 'g. ': 1, '. f': 1, 'es\n': 1, ' ar': 1, 'are': 1, ' di': 1, 'dis': 1, 'isk': 1, 'sk ': 1, 'k w': 1, 'h `': 1, '``S': 1, 'r``': 1, ' un': 1, 'unn': 1, 'nne': 1, 'nec': 1, 'ece': 1, 'ces': 1, 'ess': 2, 'ssa': 1, 'sar': 1, 'ary': 3, 'ry,': 1, ', b': 1, 'bec': 2, 'eca': 2, 'cau': 2, 'aus': 2, 'ine': 2, 'ne ': 2, 'f.\n': 1, '  N': 1, ' Na': 1, 'Nat': 1, 'atu': 1, 'tur': 6, 'ura': 1, 'ral': 1, ' sh': 1, 'sho': 1, 'oul': 1, 'uld': 1, 'ld ': 1, 'd a': 1, ' `C': 1, '`Co': 1, 'Con': 1, 't-T': 1, '-Ty': 1, 'Typ': 1, 'ype': 1, 'pe`': 1, 'e` ': 1, 'ur ': 1, 'r u': 3, 'ad\n': 3, 'd\n ': 4, '  a': 3, ' ap': 1, 'ppr': 1, 'rop': 1, 'opr': 1, 'pri': 1, 'ria': 1, 'iat': 1, 'ate': 4, 'tel': 1, 'ely': 1, 'y b': 1, ' at': 1, 'att': 2, 'tte': 1, 'tem': 1, 'pt ': 2, 'o g': 3, ' gu': 1, 'gue': 1, 't f': 1, 'r y': 1, 'ou.': 1, 'u.\n': 1, '.\n ': 1, '  d': 6, 'def': 6, 'ef ': 6, 'f _': 4, ' __': 2, '__i': 2, '_in': 2, 'ini': 2, 'nit': 2, 'it_': 2, 't__': 2, '__(': 2, '_(s': 2, '(se': 10, 'lf,': 5, 'f, ': 5, ', s': 6, 'or,': 4, 'ng=': 2, 'g=""': 2, '=""u': 2, '""ut': 2, '-8""': 2, '8"")': 2, '""):': 3, ':\n ': 14, ' #:': 7, '#: ': 7, ': T': 3, 'e e': 1, ' ex': 2, 'exp': 1, 'xpe': 1, 'cte': 1, 'ted': 2, 'f.s': 3, '.si': 3, 'e =': 5, '= i': 5, 'nt(': 2, 't(s': 3, 'ze)': 6, 'e)\n': 4, 'f s': 2, 'e <': 1, ' < ': 1, '< 0': 1, ' 0:': 1, '0:\n': 1, ' ra': 1, 'rai': 1, 'ais': 1, 'ise': 1, 'e V': 1, ' Va': 1, 'Val': 1, 'alu': 1, 'lue': 1, 'ueE': 1, 'eEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'r(""': 1, '(""T': 1, '""Th': 1, 'd m': 1, ' mu': 1, 'mus': 1, 't b': 1, ' po': 1, 'osi': 1, 'sit': 1, 'tiv': 1, 'ive': 1, 'teg': 1, 'ege': 1, 'ger': 1, 'er""': 1, 'r"")': 1, '"")\n': 1, ': A': 1, ' At': 1, 'Att': 1, 'ttr': 2, 'tri': 1, 'rib': 1, 'ibu': 1, 'ute': 1, 'te ': 3, 'l c': 1, 'che': 1, 'hec': 1, 'eck': 1, 'ck ': 1, 'k t': 1, 'o d': 1, 'e l': 1, ' le': 1, 'h o': 1, ': b': 1, ' bo': 1, 'bod': 1, 'ody': 1, 'dy.': 1, 'y. ': 1, '. S': 1, ' Se': 1, 'See': 1, 'ee ': 1, 'bug': 1, 'ug ': 1, 'g #': 1, ' #8': 1, '#80': 1, '80 ': 1, '0 f': 1, 'r m': 1, ' mo': 1, 'mor': 1, 'ore': 1, 'ls\n': 1, 'f.l': 1, '.le': 1, 'en ': 1, 'n =': 1, '= s': 4, 'ze\n': 1, 'e\n\n': 2, ': E': 2, ' En': 2, 'Enc': 2, 'inp': 1, 'npu': 1, 'put': 1, 'a i': 1, 'ng\n': 4, 'g\n ': 2, 'f.e': 4, 'g =': 2, '= e': 2, 'g\n\n': 2, 'sed': 2, 'd d': 2, 'ta\n': 2, 'a\n ': 2, 'f.i': 4, '.it': 4, 'has': 1, 'asa': 1, 'sat': 1, 'tr(': 1, 'r(i': 1, '(it': 2, ', ""': 1, ' ""r': 1, '""re': 1, 'ad""': 1, 'd"")': 1, 'f._': 10, '._f': 3, '_fi': 3, 'r\n ': 1, '  e': 2, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, '= _': 1, ' _I': 2, '_It': 2, 'orA': 2, 'rAs': 2, 'AsB': 2, 'sBi': 2, 'Bin': 2, 'ina': 2, 'nar': 2, 'ryF': 2, 'yFi': 2, 'Fil': 2, 'le(': 2, 'e(i': 1, 'ng)': 3, 'g)\n': 3, 'f r': 2, 'ad(': 4, 'd(s': 4, 'ze=': 2, 'e=-': 2, '=-1': 2, '-1)': 2, '1):': 2, 'ret': 5, 'etu': 5, 'urn': 5, 'rn ': 5, 'n e': 2, 'th(': 2, 'h(s': 1, 'le.': 1, 'e.r': 1, '.re': 2, 'e),': 1, '), ': 2, 's _': 1, 'e(o': 1, '# T': 1, 'buf': 6, 'uff': 6, 'ffe': 6, 'r w': 1, 'we ': 1, 'cor': 1, 'orr': 1, 'rre': 1, 'rec': 1, 'ct ': 1, 't n': 1, ' nu': 1, 'num': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'r o': 1, 'f b': 1, 'byt': 9, 's r': 1, 'ed\n': 1, '# d': 1, ' du': 1, 'dur': 1, 'uri': 1, 'rin': 1, 'a r': 1, '._b': 5, '_bu': 5, '= C': 1, 'IO(': 1, 'O()': 1, '()\n': 3, ' _g': 1, '_ge': 2, 'get': 2, 'et_': 2, 't_b': 2, '_by': 4, 'es(': 4, 's(s': 3, 'lf)': 1, 'f):': 1, 'try': 1, 'ry:': 1, 'y:\n': 1, 'h(n': 1, '(ne': 1, 'nex': 1, 'ext': 1, 'xt(': 1, 'r),': 1, ')\n ': 6, 'exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'Sto': 1, 'top': 1, 'opI': 1, 'pIt': 1, 'on:': 1, 'n:\n': 1, 'n b': 2, ' b""': 2, 'b""""': 2, ' _l': 1, '_lo': 5, 'ad_': 2, 'd_b': 2, 'e):': 1, 'er.': 3, 'r.s': 1, '.sm': 1, 'sma': 1, 'mar': 1, 'rt_': 1, 't_t': 4, '_tr': 1, 'tru': 1, 'run': 1, 'unc': 1, 'nca': 1, 'cat': 1, 'te(': 1, 'e()': 1, ' am': 3, 'amo': 3, 'mou': 3, 'oun': 3, 'unt': 3, 'nt_': 3, 'to_': 7, 'o_l': 3, 'd =': 3, 'e -': 1, ' - ': 1, '- s': 1, 'en(': 1, 'n(s': 2, 'er)': 1, 'r)\n': 2, '  b': 2, 'es_': 4, 'o_a': 4, '_ap': 4, 'ppe': 5, 'pen': 5, 'end': 5, '= T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1, '  w': 1, 'hil': 1, 'd >': 1, ' > ': 1, '> 0': 1, ' 0 ': 1, '0 a': 1, 'nd:': 1, 'd:\n': 1, '._g': 1, 's()': 1, 'd -': 1, ' -=': 1, '-= ': 1, 'r.a': 1, '.ap': 1, 'nd(': 1, 'd(b': 1, '(by': 1, 'nd)': 1, 'd)\n': 1, ' ==': 1, '== ': 1, '= -': 1, ' -1': 1, '-1:': 1, '1:\n': 1, '"""".': 1, '"".j': 1, '.jo': 1, 'joi': 1, 'oin': 1, 'in(': 1, '._l': 1, 'r.r': 1}"
Kenneth Reitz Archive,tee.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""tee': 1, 'function': 1, 'implementations.""""""': 1, 'import': 2, 'io': 2, '_default_chunksize': 1, '=': 8, '65536': 1, '__all__': 1, '[""tee"",': 1, '""tee_to_file"",': 1, '""tee_to_bytearray""]': 1, 'def': 4, '_tee(response,': 3, 'callback,': 1, 'chunksize,': 4, 'decode_content):': 2, 'for': 7, 'chunk': 15, 'in': 8, 'response.raw.stream(amt=chunksize,': 1, 'decode_content=decode_content):': 1, 'callback(chunk)': 1, 'yield': 3, 'tee(response,': 2, 'fileobject,': 1, 'chunksize=_default_chunksize,': 3, 'decode_content=none):': 2, '""""""stream': 3, 'the': 33, 'response': 10, 'both': 3, 'to': 20, 'generator': 3, 'and': 5, 'a': 7, 'file.': 2, 'this': 9, 'will': 10, 'stream': 3, 'body': 2, 'while': 2, 'writing': 3, 'bytes': 5, '``fileobject``.': 1, 'example': 3, 'usage:': 3, '..': 5, 'code-block::': 4, 'python': 4, 'resp': 4, 'requests.get(url,': 4, 'stream=true)': 4, 'with': 8, ""open('save_file',"": 1, ""'wb')"": 1, 'as': 2, 'save_file:': 1, 'tee(resp,': 2, 'save_file):': 1, '#': 8, 'do': 4, 'stuff': 4, 'fileobject': 3, 'io.bytesio()': 1, 'fileobject):': 1, ':param': 12, 'response:': 6, 'from': 5, 'requests.': 3, ':type': 4, 'requests.response': 3, 'fileobject:': 2, 'writable': 1, 'file-like': 1, 'object.': 3, 'file,': 1, 'io.bytesio': 1, 'int': 3, 'chunksize:': 3, '(optional),': 6, 'size': 3, 'of': 8, 'attempt': 3, 'stream.': 3, 'bool': 3, 'decode_content:': 3, 'if': 8, 'true,': 3, 'decode': 3, 'compressed': 3, 'content': 3, 'response.': 3, ':raises:': 1, 'typeerror': 1, ""wasn't"": 1, 'opened': 3, 'right': 1, 'mode': 1, 'or': 3, ""isn't"": 1, 'bytesio': 2, '""""""': 3, 'we': 4, 'be': 3, 'streaming': 1, 'raw': 1, 'over': 1, 'wire,': 1, 'so': 2, 'need': 2, 'ensure': 1, 'that': 1, 'preserve': 1, 'those': 1, 'bytes.': 1, 'on': 1, 'python3,': 1, 'user': 1, 'passes': 1, 'an': 1, 'io.stringio,': 1, 'fail,': 1, 'check': 1, 'instead.': 1, 'not': 2, '(': 1, '""b""': 2, 'getattr(fileobject,': 1, '""mode"",': 1, '"""")': 1, 'isinstance(fileobject,': 1, 'io.bytesio)': 1, '):': 2, 'raise': 2, 'typeerror(': 1, '""tee()': 1, 'write': 2, 'directly': 1, 'fileobject""': 1, ""',"": 1, 'it': 2, 'must': 1, 'flag': 1, 'is': 1, ""file'"": 1, '""': 2, 'inherit': 1, 'io.bytesio.""': 1, ')': 1, 'return': 2, 'fileobject.write,': 1, 'decode_content)': 2, 'tee_to_file(response,': 1, 'filename,': 1, 'open': 1, 'file': 3, 'named': 1, '``filename``': 1, 'tee_to_file(resp,': 1, ""'save_file'):"": 1, 'str': 1, 'filename:': 1, 'name': 1, 'which': 1, 'content.': 1, 'open(filename,': 1, '""wb"")': 1, 'fd:': 1, 'fd,': 1, 'tee_to_bytearray(': 1, 'response,': 1, 'bytearr,': 1, 'decode_content=none': 1, 'bytearray.': 1, 'provided': 2, 'function,': 1, 'add': 2, 'them': 2, ':class:`bytearray`': 1, 'user.': 1, 'note::': 1, 'uses': 1, ':meth:`bytearray.extend`': 1, 'by': 1, 'default': 1, 'instead': 1, 'passing': 1, 'bytearray': 2, 'into': 1, '``readinto``': 1, 'method.': 1, 'b': 1, 'bytearray()': 1, 'tee_to_bytearray(resp,': 1, 'b):': 1, 'bytearr:': 1, 'array': 1, 'streamed': 1, 'to.': 1, 'isinstance(bytearr,': 1, 'bytearray):': 1, 'typeerror(""tee_to_bytearray()': 1, 'expects': 1, 'bytearr': 1, '""bytearray"")': 1, 'bytearr.extend,': 1}","{'""""""': 8, '""""T': 1, '""Te': 1, 'Tee': 1, 'ee ': 1, 'e f': 9, ' fu': 2, 'fun': 2, 'unc': 2, 'nct': 2, 'cti': 2, 'tio': 9, 'ion': 9, 'on ': 1, 'n i': 2, ' im': 2, 'imp': 3, 'mpl': 4, 'ple': 4, 'lem': 1, 'eme': 1, 'men': 1, 'ent': 17, 'nta': 1, 'tat': 2, 'ati': 1, 'ons': 31, 'ns.': 1, 's.""': 1, '.""""': 1, '""""\n': 4, '""\ni': 1, '\nim': 1, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't i': 5, ' io': 7, 'io\n': 2, 'o\n\n': 2, '\n\n_': 2, '\n_D': 1, '_DE': 4, 'DEF': 4, 'EFA': 4, 'FAU': 4, 'AUL': 4, 'ULT': 4, 'LT_': 4, 'T_C': 4, '_CH': 4, 'CHU': 4, 'HUN': 4, 'UNK': 4, 'NKS': 4, 'KSI': 4, 'SIZ': 4, 'IZE': 4, 'ZE ': 1, 'E =': 1, ' = ': 8, '= 6': 1, ' 65': 1, '655': 1, '553': 1, '536': 1, '36\n': 1, '6\n\n': 1, '\n__': 1, '__a': 1, '_al': 1, 'all': 3, 'll_': 1, 'l__': 1, '__ ': 1, '_ =': 1, '= [': 1, ' [""': 1, '[""t': 1, '""te': 5, 'tee': 16, 'ee""': 1, 'e"",': 3, '"", ': 3, ', ""': 5, ' ""t': 3, 'ee_': 7, 'e_t': 7, '_to': 7, 'to_': 7, 'o_f': 3, '_fi': 7, 'fil': 31, 'ile': 33, 'le""': 1, 'o_b': 4, '_by': 4, 'byt': 23, 'yte': 29, 'tea': 19, 'ear': 17, 'arr': 17, 'rra': 13, 'ray': 13, 'ay""': 2, 'y""]': 1, '""]\n': 1, ']\n\n': 1, '\n\n\n': 4, '\n\nd': 4, '\nde': 4, 'def': 5, 'ef ': 4, 'f _': 1, ' _t': 3, '_te': 3, 'ee(': 8, 'e(r': 9, '(re': 10, 'res': 36, 'esp': 38, 'spo': 30, 'pon': 30, 'nse': 30, 'se,': 7, 'e, ': 20, ', c': 8, ' ca': 2, 'cal': 2, 'llb': 2, 'lba': 2, 'bac': 2, 'ack': 2, 'ck,': 1, 'k, ': 1, ' ch': 26, 'chu': 27, 'hun': 27, 'unk': 27, 'nks': 11, 'ksi': 11, 'siz': 11, 'ize': 14, 'ze,': 5, ', d': 8, ' de': 15, 'dec': 15, 'eco': 15, 'cod': 19, 'ode': 21, 'de_': 12, 'e_c': 12, '_co': 12, 'con': 16, 'ont': 16, 'nte': 16, 'ten': 18, 'nt)': 5, 't):': 4, '):\n': 12, ':\n ': 14, '\n  ': 82, '   ': 336, '  f': 7, ' fo': 7, 'for': 7, 'or ': 14, 'r c': 6, 'nk ': 9, 'k i': 6, ' in': 15, 'in ': 8, 'n r': 1, ' re': 34, 'se.': 4, 'e.r': 1, '.ra': 1, 'raw': 2, 'aw.': 1, 'w.s': 1, '.st': 1, 'str': 14, 'tre': 16, 'rea': 17, 'eam': 16, 'am(': 1, 'm(a': 1, '(am': 1, 'amt': 1, 'mt=': 1, 't=c': 1, '=ch': 1, 'nt=': 4, 't=d': 1, '=de': 1, '  c': 4, 'ck(': 1, 'k(c': 1, '(ch': 1, 'nk)': 1, 'k)\n': 1, ')\n ': 8, '  y': 2, ' yi': 3, 'yie': 3, 'iel': 3, 'eld': 3, 'ld ': 3, 'd c': 5, 'nk\n': 6, 'k\n\n': 6, 'f t': 8, ' te': 8, ', f': 5, ' fi': 19, 'leo': 12, 'eob': 12, 'obj': 15, 'bje': 15, 'jec': 15, 'ect': 17, 'ct,': 3, 't, ': 3, 'ze=': 3, 'e=_': 3, '=_D': 3, 'ZE,': 3, 'E, ': 3, 't=N': 3, '=No': 3, 'Non': 3, 'one': 3, 'ne)': 2, 'e):': 3, '  ""': 9, ' """"': 7, '""""S': 3, '""St': 3, 'Str': 4, 'am ': 18, 'm t': 8, ' th': 42, 'the': 35, 'he ': 29, 'e r': 15, 'se ': 13, 'e b': 10, ' bo': 8, 'bot': 3, 'oth': 3, 'th ': 11, 'h t': 5, ' to': 21, 'to ': 19, 'o t': 10, 'e g': 3, ' ge': 4, 'gen': 3, 'ene': 6, 'ner': 3, 'era': 3, 'rat': 3, 'ato': 3, 'tor': 3, 'r a': 3, ' an': 6, 'and': 5, 'nd ': 5, 'd a': 3, ' a ': 7, 'a f': 4, 'le.': 2, 'e.\n': 5, '.\n\n': 7, '\n\n ': 22, '  T': 4, ' Th': 4, 'Thi': 4, 'his': 9, 'is ': 10, 's w': 7, ' wi': 19, 'wil': 10, 'ill': 10, 'll ': 10, 'l s': 2, ' st': 17, 'bod': 2, 'ody': 2, 'dy ': 1, 'y w': 1, ' wh': 3, 'whi': 3, 'hil': 2, 'le ': 9, 'e w': 5, ' wr': 5, 'wri': 6, 'rit': 8, 'iti': 3, 'tin': 3, 'ing': 6, 'ng ': 4, 'g t': 4, ' by': 16, 'tes': 12, 'es ': 7, 's t': 4, 'to\n': 2, 'o\n ': 2, '  `': 1, ' ``': 3, '``f': 2, '`fi': 2, 'ct`': 1, 't``': 1, '``.': 1, '`.\n': 1, '  E': 3, ' Ex': 3, 'Exa': 3, 'xam': 3, 'amp': 3, 'e u': 5, ' us': 6, 'usa': 3, 'sag': 3, 'age': 3, 'ge:': 3, 'e:\n': 4, ':\n\n': 4, '  .': 5, ' ..': 5, '.. ': 5, '. c': 4, ' co': 11, 'de-': 4, 'e-b': 4, '-bl': 4, 'blo': 4, 'loc': 4, 'ock': 4, 'ck:': 4, 'k::': 4, ':: ': 4, ': p': 4, ' py': 4, 'pyt': 4, 'yth': 5, 'tho': 7, 'hon': 5, 'on\n': 4, 'n\n\n': 4, '  r': 9, 'sp ': 4, 'p =': 4, '= r': 4, 'req': 10, 'equ': 10, 'que': 10, 'ues': 10, 'est': 10, 'sts': 10, 'ts.': 10, 's.g': 4, '.ge': 4, 'get': 5, 'et(': 4, 't(u': 4, '(ur': 4, 'url': 4, 'rl,': 4, 'l, ': 5, ', s': 7, 'am=': 4, 'm=T': 4, '=Tr': 4, 'Tru': 7, 'rue': 7, 'ue)': 4, 'e)\n': 4, '  w': 3, 'wit': 8, 'ith': 8, 'h o': 2, ' op': 6, 'ope': 6, 'pen': 6, 'en(': 2, ""n('"": 1, ""('s"": 1, ""'sa"": 2, 'sav': 4, 'ave': 4, 've_': 4, 'e_f': 4, ""le'"": 3, ""e',"": 1, ""', "": 2, "", '"": 2, "" 'w"": 1, ""'wb"": 1, ""wb'"": 1, ""b')"": 1, ""') "": 1, ') a': 2, ' as': 2, 'as ': 2, 's s': 1, ' sa': 2, 'le:': 1, 'n t': 5, 'sp,': 4, 'p, ': 4, 'le)': 1, '  #': 8, ' # ': 8, '# d': 4, ' do': 4, 'do ': 4, 'o s': 7, 'stu': 4, 'tuf': 4, 'uff': 4, 'ff ': 4, 'f w': 4, 'h c': 4, '  i': 3, 'ct ': 3, 't =': 1, '= i': 1, 'io.': 5, 'o.B': 4, '.By': 4, 'Byt': 6, 'esI': 6, 'sIO': 6, 'IO(': 1, 'O()': 1, '()\n': 2, ')\n\n': 3, 'ct)': 1, '  :': 17, ' :p': 12, ':pa': 12, 'par': 12, 'ara': 12, 'ram': 12, 'm r': 6, 'se:': 6, 'e: ': 10, ': R': 3, ' Re': 3, 'Res': 6, ' fr': 5, 'fro': 5, 'rom': 5, 'om ': 5, 's.\n': 3, '.\n ': 14, ' :t': 4, ':ty': 4, 'typ': 4, 'ype': 7, 'pe ': 4, ': r': 3, 's.R': 3, '.Re': 3, 'se\n': 3, 'e\n ': 8, 'm f': 1, 'ct:': 2, 't: ': 5, ': W': 1, ' Wr': 1, 'Wri': 1, 'ita': 1, 'tab': 1, 'abl': 1, 'ble': 1, 'le-': 1, 'e-l': 1, '-li': 1, 'lik': 1, 'ike': 1, 'ke ': 1, 'e o': 8, ' ob': 3, 'ct.': 4, 't.\n': 4, ': f': 1, 'le,': 1, ', i': 4, 'IO\n': 1, 'O\n ': 1, 'm i': 4, 'int': 5, 'nt ': 6, 't c': 3, 'ze:': 3, ': (': 6, ' (o': 6, '(op': 6, 'opt': 6, 'pti': 6, 'ona': 6, 'nal': 6, 'al)': 6, 'l),': 6, '), ': 6, ', S': 3, ' Si': 3, 'Siz': 3, 'ze ': 3, ' of': 8, 'of ': 8, 'f c': 3, 'k t': 3, 'o a': 4, ' at': 3, 'att': 4, 'tte': 3, 'tem': 3, 'emp': 3, 'mpt': 3, 'pt ': 3, 't t': 3, 'am.': 3, 'm.\n': 3, 'm b': 4, 'boo': 3, 'ool': 3, 'ol ': 3, 'l d': 6, 'nt:': 3, ', I': 3, ' If': 3, 'If ': 3, 'f T': 3, ' Tr': 3, 'ue,': 3, ', t': 4, 'thi': 5, 'de ': 3, 'e t': 6, 'he\n': 4, 'com': 3, 'omp': 3, 'mpr': 3, 'pre': 4, 'ess': 3, 'sse': 4, 'sed': 3, 'ed ': 11, 't o': 4, ' :r': 1, ':ra': 1, 'rai': 3, 'ais': 3, 'ise': 3, 'ses': 3, 'es:': 1, 's: ': 1, ': T': 1, ' Ty': 3, 'Typ': 3, 'peE': 3, 'eEr': 3, 'Err': 3, 'rro': 3, 'ror': 3, 'r i': 4, ' if': 5, 'if ': 5, 't w': 3, ' wa': 1, 'was': 1, 'asn': 1, ""sn'"": 2, ""n't"": 2, ""'t "": 2, 'ned': 3, 'd w': 2, ' ri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht ': 1, 't m': 2, ' mo': 1, 'mod': 2, 'de\n': 1, '  o': 1, ' or': 3, ' is': 4, 'isn': 1, 't a': 1, 'a B': 1, ' By': 2, 'IO ': 2, 'O o': 1, '""\n ': 5, '# W': 1, ' We': 1, 'We ': 1, 'l b': 1, ' be': 3, 'be ': 3, 'e s': 2, 'ami': 1, 'min': 1, ' ra': 3, 'aw ': 1, 'w b': 1, 's f': 3, 'm o': 1, ' ov': 1, 'ove': 1, 'ver': 1, 'er ': 2, 'r t': 2, 'wir': 1, 'ire': 2, 're,': 1, ' so': 2, 'so ': 2, 'o w': 2, ' we': 3, 'we ': 3, 'e n': 3, ' ne': 2, 'nee': 2, 'eed': 2, 'd t': 5, '# e': 1, ' en': 1, 'ens': 1, 'nsu': 1, 'sur': 1, 'ure': 1, 're ': 1, 'tha': 1, 'hat': 1, 'at ': 1, 'l p': 1, ' pr': 3, 'ese': 1, 'ser': 3, 'erv': 1, 'rve': 1, 've ': 1, 'hos': 1, 'ose': 1, 'es.': 1, 's. ': 1, '. O': 1, ' On': 1, 'On\n': 1, 'n\n ': 1, '# P': 1, ' Py': 1, 'Pyt': 1, 'on3': 1, 'n3,': 1, '3, ': 1, 'use': 3, 'r p': 1, ' pa': 2, 'pas': 2, 'ass': 3, 's a': 2, 'an ': 1, 'o.S': 1, '.St': 1, 'tri': 1, 'rin': 1, 'ngI': 1, 'gIO': 1, 'IO,': 1, 'O, ': 1, 'l f': 1, ' fa': 1, 'fai': 1, 'ail': 1, 'il,': 1, 'ed\n': 1, 'd\n ': 1, '# t': 1, 'o c': 1, 'che': 1, 'hec': 1, 'eck': 1, 'ck ': 1, 'k f': 1, 'r B': 1, 'O i': 1, 'ins': 4, 'nst': 4, 'ste': 2, 'ead': 3, 'ad.': 1, 'd.\n': 2, 'f n': 2, ' no': 3, 'not': 3, 'ot ': 2, 't (': 1, ' (\n': 1, '(\n ': 3, ' ""b': 3, '""b""': 2, 'b"" ': 2, '"" i': 1, 'n g': 1, 'eta': 1, 'ttr': 1, 'tr(': 1, 'r(f': 1, '(fi': 3, ' ""m': 1, '""mo': 1, 'de""': 1, '"""")': 1, '"") ': 2, ') o': 1, 'isi': 2, 'sin': 3, 'sta': 2, 'tan': 2, 'anc': 2, 'nce': 2, 'ce(': 2, 'e(f': 1, 'IO)': 1, 'O)\n': 1, '  )': 2, ' ):': 1, 'e T': 2, 'or(': 2, 'r(\n': 1, 'e()': 1, '() ': 2, ') w': 1, 'l w': 1, 'ite': 3, 'te ': 2, 's d': 1, ' di': 1, 'dir': 1, 'rec': 1, 'ctl': 1, 'tly': 1, 'ly ': 1, 'y t': 2, 'ct""': 1, 't""\n': 1, ""  '"": 1, "" ',"": 1, ' it': 2, 'it ': 3, ' mu': 1, 'mus': 1, 'ust': 1, 'st ': 1, 't b': 1, 'e ""': 1, '"" f': 1, ' fl': 1, 'fla': 1, 'lag': 1, 'ag ': 1, 'g i': 1, 'f i': 1, ""e'\n"": 1, ""'\n "": 1, ' "" ': 2, '"" o': 1, 'inh': 1, 'nhe': 1, 'her': 1, 'eri': 1, 't f': 1, 'IO.': 1, 'O.""': 1, '.""\n': 1, ' )\n': 1, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n _': 2, 't.w': 1, '.wr': 1, 'te,': 1, 't)\n': 2, 'le(': 2, 'len': 4, 'ena': 4, 'nam': 5, 'ame': 7, 'me,': 2, 'l o': 1, 'en ': 1, 'n a': 1, ' na': 1, 'med': 2, 'd `': 1, 'me`': 1, 'e``': 1, '`` ': 2, '` a': 2, 'd s': 1, 'dy\n': 1, 'y\n ': 1, 'd f': 1, "" 's"": 1, ""e')"": 1, ""'):"": 1, 'm s': 1, 'tr ': 1, 'r f': 1, 'me:': 1, ': N': 1, ' Na': 1, 'Nam': 1, 'me ': 1, 'f f': 1, 'e i': 1, 'n w': 1, 'hic': 1, 'ich': 1, 'ch ': 1, 'h w': 1, 'e c': 1, 'nt.': 1, 'n(f': 1, ' ""w': 1, '""wb': 1, 'wb""': 1, 'b"")': 1, ' fd': 2, 'fd:': 1, 'd:\n': 1, 'fd,': 1, 'd, ': 2, 'ay(': 4, 'y(\n': 1, ', b': 4, 'rr,': 2, 'r, ': 2, 'ne\n': 1, 'e\n)': 1, '\n):': 1, 'a b': 1, 'ay.': 2, 'y.\n': 1, 'e p': 1, 'pro': 2, 'rov': 2, 'ovi': 2, 'vid': 2, 'ide': 2, 'ded': 2, 'on,': 1, 'n, ': 1, ', a': 1, ' ad': 2, 'add': 2, 'dd ': 2, 'hem': 2, 'em ': 2, '  p': 1, 'd :': 1, ' :c': 1, ':cl': 1, 'cla': 1, 'las': 1, 'ss:': 1, 's:`': 1, ':`b': 2, '`by': 2, 'ay`': 1, 'y` ': 1, 'd y': 1, 'er.': 1, 'r.\n': 1, '. n': 1, 'ote': 1, 'te:': 1, 'e::': 1, '::\n': 1, 's u': 1, 'e :': 1, ' :m': 1, ':me': 1, 'met': 2, 'eth': 2, 'th:': 1, 'h:`': 1, 'y.e': 1, '.ex': 2, 'ext': 2, 'xte': 2, 'end': 2, 'nd`': 1, 'd` ': 1, '` b': 1, 'by ': 1, 'y d': 1, 'efa': 1, 'fau': 1, 'aul': 1, 'ult': 1, 'lt ': 1, 'ad ': 1, 'd o': 1, 'f p': 1, 'ssi': 1, 'ng\n': 1, 'g\n ': 1, '  t': 1, 'ay ': 3, 'y i': 1, 'nto': 2, 'e `': 1, '``r': 1, '`re': 1, 'adi': 1, 'din': 1, 'to`': 1, 'o``': 1, '` m': 1, ' me': 1, 'hod': 1, 'od.': 1, '  b': 1, ' b ': 1, 'b =': 1, '= b': 1, 'y()': 2, 'y(r': 1, ' b)': 1, 'b):': 1, 'y b': 1, 'rr:': 1, 'r: ': 1, ': A': 1, ' Ar': 1, 'Arr': 1, 'd b': 1, 'to.': 1, 'o.\n': 1, 'e(b': 1, '(by': 1, 'ay)': 1, 'y):': 1, 'r(""': 1, '(""t': 1, ') e': 1, ' ex': 1, 'exp': 1, 'xpe': 1, 'pec': 1, 'cts': 1, 'ts ': 1, 's b': 1, 'rr ': 1, 'o b': 1, 'e a': 1, 'a ""': 1, '"" ""': 1, '""by': 1, 'y"")': 1, '"")\n': 1, 'rr.': 1, 'r.e': 1, 'nd,': 1}"
Kenneth Reitz Archive,thread.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""module': 1, 'containing': 1, 'the': 3, 'sessionthread': 1, 'class.""""""': 1, 'import': 4, 'threading': 1, 'uuid': 1, 'requests.exceptions': 1, 'as': 2, 'exc': 1, 'from': 1, '.._compat': 1, 'queue': 1, 'class': 1, 'sessionthread(object):': 1, 'def': 6, '__init__(self,': 1, 'initialized_session,': 1, 'job_queue,': 1, 'response_queue,': 1, 'exception_queue):': 1, 'self._session': 1, '=': 9, 'initialized_session': 1, 'self._jobs': 1, 'job_queue': 1, 'self._create_worker()': 1, 'self._responses': 1, 'response_queue': 1, 'self._exceptions': 1, 'exception_queue': 1, '_create_worker(self):': 1, 'self._worker': 1, 'threading.thread(target=self._make_request,': 1, 'name=uuid.uuid4())': 1, 'self._worker.daemon': 1, 'true': 1, 'self._worker._state': 1, '0': 1, 'self._worker.start()': 1, '_handle_request(self,': 1, 'kwargs):': 1, 'try:': 2, 'response': 1, 'self._session.request(**kwargs)': 1, 'except': 2, 'exc.requestexception': 1, 'e:': 1, 'self._exceptions.put((kwargs,': 1, 'e))': 1, 'else:': 1, 'self._responses.put((kwargs,': 1, 'response))': 1, 'finally:': 1, 'self._jobs.task_done()': 1, '_make_request(self):': 1, 'while': 1, 'true:': 1, 'kwargs': 1, 'self._jobs.get_nowait()': 1, 'queue.empty:': 1, 'break': 1, 'self._handle_request(kwargs)': 1, 'is_alive(self):': 1, '""""""proxy': 1, 'to': 2, ""thread's"": 1, '``is_alive``': 1, 'method.""""""': 1, 'return': 1, 'self._worker.is_alive()': 1, 'join(self):': 1, '""""""join': 1, 'this': 1, 'thread': 1, 'master': 1, 'thread.""""""': 1, 'self._worker.join()': 1}","{'""""""': 6, '""""M': 1, '""Mo': 1, 'Mod': 1, 'odu': 1, 'dul': 1, 'ule': 1, 'le ': 2, 'e c': 1, ' co': 1, 'con': 1, 'ont': 1, 'nta': 1, 'tai': 1, 'ain': 1, 'ini': 4, 'nin': 1, 'ing': 3, 'ng ': 1, 'g t': 1, ' th': 9, 'the': 3, 'he ': 3, 'e S': 1, ' Se': 2, 'Ses': 2, 'ess': 6, 'ssi': 6, 'sio': 6, 'ion': 12, 'onT': 2, 'nTh': 2, 'Thr': 3, 'hre': 8, 'rea': 11, 'ead': 8, 'ad ': 2, 'd c': 1, ' cl': 1, 'cla': 2, 'las': 2, 'ass': 2, 'ss.': 1, 's.""': 1, '.""""': 3, '""""\n': 3, '""\ni': 1, '\nim': 3, 'imp': 4, 'mpo': 4, 'por': 4, 'ort': 4, 'rt ': 4, 't t': 1, 'thr': 5, 'adi': 2, 'din': 2, 'ng\n': 1, 'g\ni': 1, 't u': 1, ' uu': 1, 'uui': 3, 'uid': 3, 'id\n': 1, 'd\n\n': 1, '\n\ni': 1, 't r': 1, ' re': 6, 'req': 6, 'equ': 7, 'que': 15, 'ues': 7, 'est': 7, 'sts': 1, 'ts.': 1, 's.e': 1, '.ex': 1, 'exc': 9, 'xce': 8, 'cep': 8, 'ept': 8, 'pti': 6, 'tio': 6, 'ons': 9, 'ns ': 2, 's a': 1, ' as': 2, 'as ': 2, 's e': 2, ' ex': 6, 'xc\n': 1, 'c\n\n': 1, '\n\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm .': 1, ' ..': 1, '.._': 1, '._c': 2, '_co': 1, 'com': 1, 'omp': 1, 'mpa': 1, 'pat': 1, 'at ': 1, 't i': 1, ' im': 1, 't q': 2, ' qu': 2, 'ueu': 8, 'eue': 8, 'ue\n': 5, 'e\n\n': 2, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'ss ': 1, 's S': 1, 'ad(': 2, 'd(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 1, '):\n': 7, ':\n ': 14, '\n  ': 33, '   ': 218, '  d': 6, ' de': 6, 'def': 6, 'ef ': 6, 'f _': 4, ' __': 1, '__i': 1, '_in': 1, 'nit': 3, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 6, 'sel': 24, 'elf': 24, 'lf,': 2, 'f, ': 2, ', i': 1, ' in': 2, 'iti': 2, 'tia': 2, 'ial': 2, 'ali': 5, 'liz': 2, 'ize': 2, 'zed': 2, 'ed_': 2, 'd_s': 2, '_se': 4, 'ses': 6, 'on,': 1, 'n, ': 1, ', j': 1, ' jo': 3, 'job': 5, 'ob_': 2, 'b_q': 2, '_qu': 6, 'ue,': 2, 'e, ': 2, ', r': 2, 'res': 6, 'esp': 6, 'spo': 6, 'pon': 6, 'nse': 6, 'se_': 2, 'e_q': 2, ', e': 2, 'on_': 2, 'n_q': 2, 'ue)': 1, 'e):': 1, '  s': 14, ' se': 17, 'lf.': 18, 'f._': 18, '._s': 3, 'on ': 3, 'n =': 2, ' = ': 9, '= i': 1, 'on\n': 1, 'n\n ': 1, '._j': 3, '_jo': 3, 'obs': 3, 'bs ': 1, 's =': 4, '= j': 1, 'e\n ': 3, '_cr': 2, 'cre': 2, 'eat': 2, 'ate': 3, 'te_': 2, 'e_w': 2, '_wo': 8, 'wor': 8, 'ork': 8, 'rke': 8, 'ker': 8, 'er(': 2, 'r()': 1, '()\n': 6, ')\n ': 6, '._r': 2, '_re': 6, 'es ': 1, '= r': 1, '._e': 2, '_ex': 2, '= e': 1, '\n\n ': 6, ' _c': 1, 'r(s': 1, 'lf)': 4, 'f):': 4, '._w': 6, 'er ': 2, 'r =': 1, '= t': 1, 'ng.': 1, 'g.T': 1, '.Th': 1, 'd(t': 1, '(ta': 1, 'tar': 2, 'arg': 7, 'rge': 1, 'get': 2, 'et=': 1, 't=s': 1, '=se': 1, '._m': 1, '_ma': 2, 'mak': 2, 'ake': 2, 'ke_': 2, 'e_r': 4, 'st,': 1, 't, ': 1, ', n': 1, ' na': 1, 'nam': 1, 'ame': 1, 'me=': 1, 'e=u': 1, '=uu': 1, 'id.': 1, 'd.u': 1, '.uu': 1, 'id4': 1, 'd4(': 1, '4()': 1, '())': 1, '))\n': 3, 'er.': 5, 'r.d': 1, '.da': 1, 'dae': 1, 'aem': 1, 'emo': 1, 'mon': 1, '= T': 1, ' Tr': 2, 'Tru': 2, 'rue': 2, 'r._': 1, '_st': 1, 'sta': 2, 'tat': 1, 'te ': 1, 'e =': 2, '= 0': 1, ' 0\n': 1, '0\n ': 1, 'r.s': 1, '.st': 1, 'art': 1, 'rt(': 1, 't()': 2, ')\n\n': 4, ' _h': 1, '_ha': 2, 'han': 2, 'and': 2, 'ndl': 2, 'dle': 2, 'le_': 2, 'st(': 4, 't(s': 2, ', k': 1, ' kw': 2, 'kwa': 6, 'war': 6, 'rgs': 6, 'gs)': 3, 's):': 1, '  t': 2, ' tr': 2, 'try': 2, 'ry:': 2, 'y:\n': 4, '  r': 2, 'se ': 1, '= s': 2, 'on.': 1, 'n.r': 1, '.re': 1, 't(*': 1, '(**': 1, '**k': 1, '*kw': 1, 's)\n': 2, '  e': 3, 'pt ': 2, 't e': 1, 'xc.': 1, 'c.R': 1, '.Re': 1, 'Req': 1, 'stE': 1, 'tEx': 1, 'Exc': 1, 'n a': 1, ' e:': 1, 'e:\n': 3, 'ns.': 1, 's.p': 2, '.pu': 2, 'put': 2, 'ut(': 2, 't((': 2, '((k': 2, '(kw': 3, 'gs,': 2, 's, ': 2, ' e)': 1, 'e))': 2, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'es.': 1, 'se)': 1, '  f': 1, ' fi': 1, 'fin': 1, 'ina': 1, 'nal': 1, 'all': 1, 'lly': 1, 'ly:': 1, 'bs.': 2, 's.t': 1, '.ta': 1, 'tas': 1, 'ask': 1, 'sk_': 1, 'k_d': 1, '_do': 1, 'don': 1, 'one': 1, 'ne(': 1, 'e()': 2, ' _m': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'e T': 1, 'ue:': 1, '  k': 1, 'gs ': 1, 's.g': 1, '.ge': 1, 'et_': 1, 't_n': 1, '_no': 1, 'now': 1, 'owa': 1, 'wai': 1, 'ait': 1, 'it(': 1, 'ue.': 1, 'e.E': 1, '.Em': 1, 'Emp': 1, 'mpt': 1, 'pty': 1, 'ty:': 1, '  b': 1, ' br': 1, 'bre': 1, 'eak': 1, 'ak\n': 1, 'k\n\n': 1, '._h': 1, 't(k': 1, 'f i': 1, ' is': 1, 'is_': 3, 's_a': 3, '_al': 3, 'liv': 3, 'ive': 3, 've(': 2, 'e(s': 1, '  ""': 2, ' """"': 2, '""""P': 1, '""Pr': 1, 'Pro': 1, 'rox': 1, 'oxy': 1, 'xy ': 1, 'y t': 1, ' to': 2, 'to ': 2, 'o t': 2, 'e t': 1, ""ad'"": 1, ""d's"": 1, ""'s "": 1, 's `': 1, ' ``': 1, '``i': 1, '`is': 1, 've`': 1, 'e``': 1, '`` ': 1, '` m': 1, ' me': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od.': 1, 'd.""': 2, '""\n ': 2, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n s': 1, 'r.i': 1, '.is': 1, 'f j': 1, 'joi': 2, 'oin': 3, 'in(': 2, 'n(s': 1, '""""J': 1, '""Jo': 1, 'Joi': 1, 'in ': 1, 'n t': 1, 'thi': 1, 'his': 1, 'is ': 1, 's t': 1, 'd t': 1, 'e m': 1, ' ma': 1, 'mas': 1, 'ast': 1, 'ste': 1, 'ter': 1, 'r t': 1, 'ad.': 1, 'r.j': 1, '.jo': 1, 'n()': 1}"
Kenneth Reitz Archive,user_agent.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 3, '-*-': 2, 'coding:': 1, 'utf-8': 1, 'import': 3, 'collections': 1, 'platform': 1, 'sys': 1, 'def': 9, 'user_agent(name,': 1, 'version,': 1, 'extras=none):': 1, '""""""return': 2, 'an': 1, 'internet-friendly': 1, 'user_agent': 1, 'string.': 6, 'the': 24, 'majority': 1, 'of': 14, 'this': 4, 'code': 2, 'has': 1, 'been': 1, 'wilfully': 1, 'stolen': 1, 'from': 1, 'equivalent': 1, 'function': 2, 'in': 4, 'requests.': 1, ':param': 6, 'name:': 2, 'intended': 1, 'name': 5, 'user-agent,': 2, 'e.g.': 2, '""python-requests"".': 1, 'version:': 2, 'version': 4, '""0.0.1"".': 1, 'extras:': 2, 'list': 3, 'two-item': 1, 'tuples': 2, 'that': 3, 'are': 1, 'added': 1, 'to': 6, 'user-agent': 6, ':returns:': 2, 'formatted': 2, 'string': 4, ':rtype:': 2, 'str': 4, '""""""': 7, 'if': 4, 'extras': 2, 'is': 2, 'none:': 1, '=': 15, '[]': 1, 'return': 9, '(': 2, 'useragentbuilder(name,': 1, 'version)': 1, '.include_extras(extras)': 1, '.include_implementation()': 1, '.include_system()': 1, '.build()': 1, ')': 3, 'class': 1, 'useragentbuilder(object):': 1, '""""""class': 1, 'provide': 1, 'a': 3, 'greater': 1, 'level': 1, 'control': 1, 'than': 1, ':func:`user_agent`.': 1, 'used': 1, 'by': 1, ':func:`user_agent`': 1, 'build': 1, 'its': 1, '..': 1, 'code-block::': 1, 'python': 2, 'user_agent_str': 1, 'useragentbuilder(': 1, ""name='requests-toolbelt',"": 1, ""version='17.4.0',"": 1, ').include_implementation(': 1, ').include_system(': 1, ').include_extras([': 1, ""('requests',"": 1, ""'2.14.2'),"": 1, ""('urllib3',"": 1, ""'1.21.2'),"": 1, ']).build()': 1, 'format_string': 1, '""%s/%s""': 2, '__init__(self,': 1, 'name,': 1, 'version):': 1, '""""""initialize': 1, 'our': 3, 'builder': 1, 'with': 1, 'and': 5, 'user': 1, 'agent.': 1, 'user-agent.': 4, 'for': 6, 'self._pieces': 1, 'collections.deque([(name,': 1, 'version)])': 1, 'build(self):': 1, '""""""finalize': 1, '""': 1, '"".join([self.format_string': 1, '%': 3, 'piece': 2, 'self._pieces])': 1, 'include_extras(self,': 1, 'extras):': 2, '""""""include': 1, 'extra': 2, 'portions': 1, 'extra-name': 1, 'extra-version': 1, 'any(len(extra)': 1, '!=': 2, '2': 1, 'raise': 1, 'valueerror(""extras': 1, 'should': 2, 'be': 2, 'sequence': 1, 'two': 1, 'item': 1, 'tuples."")': 1, 'self._pieces.extend(extras)': 1, 'self': 3, 'include_implementation(self):': 1, '""""""append': 2, 'implementation': 7, 'adds': 1, 'information': 2, ""you're"": 1, 'using': 1, 'cpython': 3, '2.7.13': 1, 'self._pieces.append(_implementation_tuple())': 1, 'include_system(self):': 1, 'about': 1, 'operating': 1, 'system.""""""': 1, 'self._pieces.append(_platform_tuple())': 1, '_implementation_tuple():': 1, 'tuple': 1, 'interpreter': 1, 'version.': 1, 'returns': 1, 'provides': 1, 'both': 1, 'currently': 1, 'running.': 1, 'example,': 1, 'on': 2, '2.7.5': 1, 'it': 2, 'will': 1, '""cpython/2.7.5"".': 1, 'works': 1, 'best': 1, 'pypy:': 1, 'particular,': 1, 'probably': 1, ""doesn't"": 1, 'work': 2, 'jython': 1, 'or': 1, 'ironpython.': 1, 'future': 1, 'investigation': 1, 'done': 1, 'out': 1, 'correct': 1, 'shape': 1, 'those': 1, 'platforms.': 1, 'platform.python_implementation()': 1, '==': 4, '""cpython"":': 1, 'implementation_version': 6, 'platform.python_version()': 3, 'elif': 3, '""pypy"":': 1, '""%s.%s.%s""': 1, 'sys.pypy_version_info.major,': 1, 'sys.pypy_version_info.minor,': 1, 'sys.pypy_version_info.micro,': 1, 'sys.pypy_version_info.releaselevel': 1, '""final"":': 1, '"""".join(': 1, '[implementation_version,': 1, 'sys.pypy_version_info.releaselevel]': 1, '""jython"":': 1, 'complete': 2, 'guess': 2, '""ironpython"":': 1, 'else:': 1, '""unknown""': 3, '(implementation,': 1, 'implementation_version)': 1, '_implementation_string():': 1, '_implementation_tuple()': 1, '_platform_tuple():': 1, 'try:': 1, 'p_system': 2, 'platform.system()': 1, 'p_release': 2, 'platform.release()': 1, 'except': 1, 'ioerror:': 1, '(p_system,': 1, 'p_release)': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 8, 'cod': 4, 'odi': 1, 'din': 1, 'ing': 17, 'ng:': 1, 'g: ': 1, ': u': 1, ' ut': 1, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\ni': 1, '\nim': 3, 'imp': 27, 'mpo': 3, 'por': 4, 'ort': 4, 'rt ': 3, 't c': 1, 'col': 2, 'oll': 2, 'lle': 2, 'lec': 2, 'ect': 4, 'cti': 4, 'tio': 32, 'ion': 61, 'ons': 3, 'ns\n': 1, 's\ni': 1, 't p': 3, ' pl': 8, 'pla': 10, 'lat': 10, 'atf': 10, 'tfo': 10, 'for': 19, 'orm': 16, 'rm\n': 1, 'm\ni': 1, 't s': 8, ' sy': 6, 'sys': 13, 'ys\n': 1, 's\n\n': 1, '\n\n\n': 5, '\n\nd': 4, '\nde': 4, 'def': 9, 'ef ': 9, 'f u': 1, ' us': 13, 'use': 14, 'ser': 21, 'er_': 5, 'r_a': 5, '_ag': 5, 'age': 13, 'gen': 21, 'ent': 47, 'nt(': 1, 't(n': 1, '(na': 3, 'nam': 12, 'ame': 13, 'me,': 4, 'e, ': 5, ', v': 4, ' ve': 12, 'ver': 29, 'ers': 29, 'rsi': 29, 'sio': 29, 'on,': 3, 'n, ': 3, ', e': 4, ' ex': 13, 'ext': 18, 'xtr': 18, 'tra': 18, 'ras': 13, 'as=': 1, 's=N': 1, '=No': 1, 'Non': 2, 'one': 3, 'ne)': 1, 'e):': 1, '):\n': 11, ':\n ': 25, '\n  ': 105, '   ': 566, '  ""': 15, ' """"': 16, '""""""': 16, '""""R': 2, '""Re': 2, 'Ret': 3, 'etu': 14, 'tur': 15, 'urn': 14, 'rn ': 11, 'n a': 3, ' an': 7, 'an ': 2, 'n i': 2, ' in': 13, 'int': 3, 'nte': 3, 'ter': 4, 'ern': 1, 'rne': 1, 'net': 1, 'et-': 1, 't-f': 1, '-fr': 1, 'fri': 1, 'rie': 1, 'ien': 1, 'end': 7, 'ndl': 1, 'dly': 1, 'ly ': 3, 'y u': 1, 'nt ': 6, ' st': 15, 'str': 18, 'tri': 13, 'rin': 13, 'ng.': 7, 'g.\n': 6, '.\n\n': 10, '\n\n ': 22, '  T': 5, ' Th': 7, 'The': 4, 'he ': 23, 'e m': 1, ' ma': 1, 'maj': 2, 'ajo': 2, 'jor': 2, 'ori': 1, 'rit': 1, 'ity': 1, 'ty ': 1, 'y o': 1, ' of': 14, 'of ': 14, 'f t': 9, ' th': 26, 'thi': 1, 'his': 4, 'is ': 6, 's c': 1, 'ode': 3, 'de ': 4, 'e h': 1, ' ha': 1, 'has': 1, 'as ': 4, 's b': 3, ' be': 4, 'bee': 1, 'een': 1, 'en ': 2, 'n w': 2, ' wi': 3, 'wil': 2, 'ilf': 1, 'lfu': 1, 'ful': 1, 'ull': 1, 'lly': 1, 'y s': 1, 'sto': 1, 'tol': 1, 'ole': 1, 'len': 3, 'n f': 1, ' fr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm t': 3, 'the': 20, 'e e': 2, ' eq': 1, 'equ': 7, 'qui': 1, 'uiv': 1, 'iva': 1, 'val': 1, 'ale': 1, 'nt\n': 2, 't\n ': 2, '  f': 2, ' fu': 2, 'fun': 4, 'unc': 4, 'nct': 2, 'on ': 28, 'in ': 4, 'n R': 1, ' Re': 2, 'Req': 1, 'que': 6, 'ues': 6, 'est': 6, 'sts': 4, 'ts.': 1, 's.\n': 2, '  :': 10, ' :p': 6, ':pa': 6, 'par': 7, 'ara': 6, 'ram': 6, 'am ': 6, 'm n': 1, ' na': 8, 'me:': 2, 'e: ': 2, ': T': 2, 'e i': 6, 'ten': 2, 'nde': 1, 'ded': 2, 'ed ': 5, 'd n': 1, 'me ': 6, 'e o': 6, 'e u': 5, 'er-': 12, 'r-a': 7, '-ag': 7, 'nt,': 2, 't, ': 2, ' e.': 2, 'e.g': 2, '.g.': 2, 'g. ': 3, '. ""': 2, ' ""p': 1, '""py': 1, 'pyt': 6, 'yth': 16, 'tho': 17, 'hon': 16, 'on-': 1, 'n-r': 1, '-re': 1, 'req': 3, 'ts""': 1, 's"".': 1, '"".\n': 3, '.\n ': 8, 'm v': 1, 'on:': 2, 'n: ': 1, 'e v': 3, 'n o': 4, ' ""0': 1, '""0.': 1, '0.0': 1, '.0.': 1, '0.1': 1, '.1""': 1, '1"".': 1, 'm e': 1, 'as:': 2, 's: ': 2, ': L': 1, ' Li': 1, 'Lis': 1, 'ist': 3, 'st ': 4, 't o': 3, ' tw': 2, 'two': 2, 'wo-': 1, 'o-i': 1, '-it': 1, 'ite': 2, 'tem': 10, 'em ': 4, ' tu': 4, 'tup': 9, 'upl': 9, 'ple': 36, 'les': 3, 'es ': 4, 's t': 3, 'tha': 4, 'hat': 3, 'at ': 3, 't a': 1, ' ar': 1, 'are': 1, 're ': 3, 'e a': 7, ' ad': 2, 'add': 2, 'dde': 1, 'd t': 4, ' to': 6, 'to ': 6, 'o t': 3, '  s': 9, ' :r': 4, ':re': 2, 'ret': 12, 'rns': 3, 'ns:': 2, ': F': 1, ' Fo': 3, 'For': 3, 'rma': 6, 'mat': 6, 'att': 2, 'tte': 2, 'ted': 2, 'd u': 1, 'ng\n': 1, 'g\n ': 1, ':rt': 2, 'rty': 2, 'typ': 2, 'ype': 2, 'pe:': 2, ': s': 1, 'tr\n': 2, 'r\n ': 2, '""""\n': 8, '""\n ': 9, '  i': 12, ' if': 4, 'if ': 7, 'f e': 2, 's i': 2, ' is': 2, 's N': 1, ' No': 1, 'ne:': 1, 'e:\n': 4, '  e': 6, 's =': 2, ' = ': 15, '= [': 1, ' []': 1, '[]\n': 1, ']\n\n': 1, '  r': 10, ' re': 9, 'n (': 3, ' (\n': 2, '(\n ': 6, '  U': 2, ' Us': 8, 'Use': 8, 'erA': 3, 'rAg': 3, 'Age': 8, 'ntB': 3, 'tBu': 3, 'Bui': 3, 'uil': 8, 'ild': 8, 'lde': 4, 'der': 4, 'er(': 3, 'r(n': 1, 'on)': 4, 'n)\n': 2, ')\n ': 13, '  .': 5, ' .i': 3, '.in': 6, 'inc': 9, 'ncl': 10, 'clu': 10, 'lud': 10, 'ude': 10, 'de_': 9, 'e_e': 3, '_ex': 3, 'as(': 3, 's(e': 1, '(ex': 3, 'as)': 4, 's)\n': 2, 'e_i': 3, '_im': 8, 'mpl': 27, 'lem': 24, 'eme': 24, 'men': 24, 'nta': 24, 'tat': 24, 'ati': 28, 'on(': 7, 'n()': 5, '()\n': 9, 'e_s': 3, '_sy': 6, 'yst': 8, 'ste': 8, 'em(': 4, 'm()': 2, ' .b': 1, '.bu': 2, 'bui': 5, 'ld(': 3, 'd()': 2, '  )': 6, ' )\n': 3, ')\n\n': 8, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 2, 'ass': 2, 'ss ': 2, 's U': 2, 'r(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ct)': 1, 't):': 1, '""""C': 1, '""Cl': 1, 'Cla': 1, 'o p': 1, ' pr': 3, 'pro': 3, 'rov': 2, 'ovi': 2, 'vid': 2, 'ide': 2, ' a ': 3, 'a g': 1, ' gr': 1, 'gre': 1, 'rea': 1, 'eat': 1, 'ate': 1, 'er ': 4, 'r l': 1, ' le': 1, 'lev': 3, 'eve': 3, 'vel': 3, 'el ': 2, 'l o': 1, 'f c': 1, 'con': 1, 'ont': 1, 'ntr': 1, 'tro': 1, 'rol': 1, 'ol ': 1, 'l t': 1, 'han': 1, 'n :': 1, ' :f': 2, ':fu': 2, 'nc:': 2, 'c:`': 2, ':`u': 2, '`us': 2, 'nt`': 2, 't`.': 1, '`.\n': 1, 'Thi': 3, 's u': 1, 'sed': 1, 'd b': 3, ' by': 1, 'by ': 1, 'y :': 1, 't` ': 1, '` t': 1, 'o b': 1, ' bu': 3, 'ld ': 3, 'd i': 1, ' it': 4, 'its': 1, 'ts ': 1, 'r-A': 5, '-Ag': 5, ' ..': 1, '.. ': 1, '. c': 1, 'de-': 1, 'e-b': 1, '-bl': 1, 'blo': 1, 'loc': 1, 'ock': 1, 'ck:': 1, 'k::': 1, ':: ': 1, ': p': 1, ' py': 1, 'on\n': 3, 'n\n\n': 1, '  u': 1, 'nt_': 1, 't_s': 3, '_st': 4, 'tr ': 3, 'r =': 1, '= U': 1, 'r(\n': 1, '  n': 1, 'me=': 1, ""e='"": 1, ""='r"": 1, ""'re"": 3, 'ts-': 1, 's-t': 1, '-to': 1, 'too': 1, 'ool': 1, 'olb': 1, 'lbe': 1, 'bel': 1, 'elt': 1, ""lt'"": 1, ""t',"": 1, ""',\n"": 2, ',\n ': 7, '  v': 1, 'on=': 1, ""n='"": 1, ""='1"": 1, ""'17"": 1, '17.': 1, '7.4': 1, '.4.': 1, '4.0': 1, "".0'"": 1, ""0',"": 1, ' ).': 3, ').i': 3, 'n(\n': 2, 'm(\n': 1, 's([': 1, '([\n': 1, '[\n ': 1, '  (': 2, "" ('"": 2, ""('r"": 1, ""ts'"": 1, ""s',"": 1, ""', "": 2, "", '"": 2, "" '2"": 1, ""'2."": 1, '2.1': 1, '.14': 1, '14.': 1, '4.2': 1, "".2'"": 2, ""2')"": 2, ""'),"": 2, '),\n': 2, ""('u"": 1, ""'ur"": 1, 'url': 1, 'rll': 1, 'lli': 1, 'lib': 1, 'ib3': 1, ""b3'"": 1, ""3',"": 1, "" '1"": 1, ""'1."": 1, '1.2': 2, '.21': 1, '21.': 1, '  ]': 1, ' ])': 1, ']).': 1, ').b': 1, '""\n\n': 3, ' fo': 6, 'at_': 2, 'ng ': 7, 'g =': 1, '= ""': 11, ' ""%': 3, '""%s': 3, '%s/': 2, 's/%': 2, '/%s': 2, '%s""': 3, 's""\n': 1, '  d': 6, ' de': 5, 'f _': 4, ' __': 1, '__i': 1, '_in': 6, 'ini': 1, 'nit': 2, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 5, 'sel': 16, 'elf': 14, 'lf,': 2, 'f, ': 2, ', n': 1, 'n):': 1, '""""I': 2, '""In': 2, 'Ini': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'ali': 2, 'liz': 2, 'ize': 2, 'ze ': 2, ' ou': 4, 'our': 3, 'ur ': 3, 'r b': 1, 'r w': 1, 'wit': 1, 'ith': 1, 'th ': 2, 'h t': 2, 'e n': 2, 'and': 5, 'nd ': 7, 'd v': 2, 'f o': 2, 'r u': 3, 'r a': 1, ' ag': 1, 'nt.': 5, 't.\n': 5, 'm s': 2, 'r n': 2, '  N': 1, ' Na': 1, 'Nam': 1, 'r v': 1, 'n:\n': 1, 'n s': 7, 'g f': 1, 'or ': 7, ' se': 9, 'lf.': 6, 'f._': 5, '._p': 5, '_pi': 5, 'pie': 7, 'iec': 7, 'ece': 7, 'ces': 5, '= c': 1, 'ns.': 1, 's.d': 1, '.de': 1, 'deq': 1, 'ue(': 1, 'e([': 1, '([(': 1, '[(n': 1, 'n)]': 1, ')])': 1, '])\n': 2, 'f b': 1, 'd(s': 1, 'lf)': 3, 'f):': 3, '""""F': 1, '""Fi': 1, 'Fin': 1, 'ina': 2, 'nal': 2, 'e t': 3, 'e U': 2, 's:\n': 2, '  F': 1, 'd U': 1, 'n ""': 3, ' "" ': 1, '"" ""': 1, ' "".': 1, '"".j': 2, '.jo': 2, 'joi': 2, 'oin': 2, 'in(': 2, 'n([': 1, '([s': 1, '[se': 1, 'f.f': 1, '.fo': 1, 'g %': 1, ' % ': 3, '% p': 1, ' pi': 2, 'ce ': 3, 'e f': 2, 'r p': 1, 'es]': 1, 's])': 1, 'f i': 8, 's(s': 1, 's):': 2, 'Inc': 1, 'ra ': 2, 'a p': 1, ' po': 1, 'rti': 2, 'ns ': 2, 's o': 2, 'm l': 1, ' li': 2, 'lis': 2, 't e': 1, '  l': 1, 'ra-': 2, 'a-n': 1, '-na': 1, 'd e': 1, 'a-v': 1, '-ve': 1, 'n\n ': 2, 'f a': 1, 'any': 1, 'ny(': 1, 'y(l': 1, '(le': 1, 'en(': 1, 'n(e': 1, 'ra)': 1, 'a) ': 1, ') !': 1, ' !=': 2, '!= ': 2, '= 2': 1, ' 2 ': 1, '2 f': 1, 'r e': 2, 'a i': 1, 'n e': 1, ' ra': 1, 'rai': 1, 'ais': 1, 'ise': 1, 'se ': 4, 'e V': 1, ' Va': 1, 'Val': 1, 'alu': 1, 'lue': 1, 'ueE': 1, 'eEr': 1, 'Err': 2, 'rro': 2, 'ror': 2, 'or(': 1, 'r(""': 1, '(""E': 1, '""Ex': 1, 'Ext': 1, 's s': 1, ' sh': 3, 'sho': 2, 'hou': 2, 'oul': 2, 'uld': 2, 'be ': 2, 'a s': 2, 'seq': 1, 'uen': 1, 'enc': 1, 'nce': 1, 'wo ': 1, 'o i': 1, 'es.': 4, 's.""': 1, '."")': 1, '"")\n': 1, 's.e': 1, '.ex': 1, 'xte': 1, 'nd(': 3, 'd(e': 1, 'lf\n': 3, 'f\n\n': 3, 'n(s': 1, '""""A': 2, '""Ap': 2, 'App': 2, 'ppe': 4, 'pen': 4, ' im': 14, 'g t': 2, 's a': 2, 'dds': 1, 'ds ': 1, 'inf': 7, 'nfo': 7, 'n t': 2, 't y': 1, ' yo': 1, 'you': 1, ""ou'"": 1, ""u'r"": 1, 'usi': 1, 'sin': 1, 'g C': 1, ' CP': 3, 'CPy': 5, 'Pyt': 8, 'n 2': 2, ' 2.': 2, '2.7': 3, '.7.': 3, '7.1': 1, '.13': 1, '13 ': 1, '3 t': 1, 'he\n': 1, 'e\n ': 2, 's.a': 2, '.ap': 2, 'app': 2, 'd(_': 2, '(_i': 1, 'on_': 21, 'n_t': 3, '_tu': 5, 'le(': 5, 'e()': 6, '())': 2, '))\n': 2, 'm(s': 1, ' ab': 1, 'abo': 1, 'bou': 1, 'out': 2, 'ut ': 2, 't t': 2, 'e O': 1, ' Op': 1, 'Ope': 1, 'per': 1, 'era': 1, 'rat': 1, 'tin': 1, 'g S': 1, ' Sy': 1, 'Sys': 1, 'em.': 1, 'm.""': 1, '.""""': 1, '(_p': 1, '_pl': 2, 'rm_': 2, 'm_t': 2, ' _i': 3, '():': 3, 'le ': 1, 'erp': 1, 'rpr': 1, 'pre': 1, 'ete': 3, 'on.': 2, 'n.\n': 1, '  R': 1, 'des': 1, ' bo': 1, 'bot': 1, 'oth': 1, 'e P': 1, ' Py': 2, 'n c': 1, ' cu': 1, 'cur': 1, 'urr': 1, 'rre': 2, 'ren': 1, 'ntl': 1, 'tly': 1, 'y r': 1, ' ru': 1, 'run': 1, 'unn': 1, 'nni': 1, 'nin': 1, '. F': 2, 'exa': 1, 'xam': 1, 'amp': 1, 'le,': 1, ', o': 1, ' on': 2, 'n C': 2, '7.5': 2, '.5 ': 1, '5 i': 1, 'it ': 2, 't w': 2, 'ill': 1, 'll\n': 1, 'l\n ': 1, ' ""C': 2, '""CP': 2, 'on/': 1, 'n/2': 1, '/2.': 1, '.5""': 1, '5"".': 1, 's f': 1, ' wo': 3, 'wor': 3, 'ork': 3, 'rks': 1, 'ks ': 1, 'bes': 1, 'd P': 1, 'PyP': 2, 'yPy': 2, 'Py:': 1, 'y: ': 1, ': i': 1, 'n p': 1, ' pa': 1, 'art': 1, 'tic': 1, 'icu': 1, 'cul': 1, 'ula': 1, 'lar': 1, 'ar,': 1, 'r, ': 1, ', i': 2, 'rob': 1, 'oba': 1, 'bab': 1, 'abl': 1, 'bly': 1, 'ly\n': 1, 'y\n ': 1, ' do': 2, 'doe': 1, 'oes': 1, 'esn': 1, ""sn'"": 1, ""n't"": 1, ""'t "": 1, 'rk ': 2, 'k f': 1, 'r J': 1, ' Jy': 1, 'Jyt': 2, ' or': 1, 'r I': 1, ' Ir': 1, 'Iro': 2, 'ron': 2, 'onP': 2, 'nPy': 2, 'n. ': 1, ' Fu': 1, 'Fut': 1, 'utu': 1, 'ure': 1, 'inv': 1, 'nve': 1, 'ves': 1, 'sti': 1, 'tig': 1, 'iga': 1, 'gat': 1, 'e d': 1, 'don': 1, 'ne\n': 1, '  t': 2, 'o w': 1, 'k o': 1, 'e c': 2, 'cor': 1, 'orr': 1, 'rec': 1, 'ct ': 1, 'sha': 1, 'hap': 1, 'ape': 1, 'pe ': 1, 'r t': 1, 'hos': 1, 'ose': 1, 'e p': 1, 'rms': 1, 'ms.': 1, 'n =': 11, '= p': 6, 'rm.': 6, 'm.p': 4, '.py': 9, 'n_i': 6, ' ==': 4, '== ': 4, 'on""': 3, 'n"":': 3, '"":\n': 5, 'n_v': 11, '_ve': 16, ' el': 4, 'eli': 3, 'lif': 3, ' ""P': 1, '""Py': 1, 'Py""': 1, 'y"":': 1, '%s.': 2, 's.%': 2, '.%s': 2, 's"" ': 2, '"" %': 2, '% (': 1, 'ys.': 5, 's.p': 5, 'pyp': 5, 'ypy': 5, 'py_': 5, 'y_v': 5, 'fo.': 5, 'o.m': 3, '.ma': 1, 'or,': 2, 'r,\n': 2, '.mi': 2, 'min': 1, 'ino': 1, 'nor': 1, 'mic': 1, 'icr': 1, 'cro': 1, 'ro,': 1, 'o,\n': 1, 'f s': 1, 'o.r': 2, '.re': 3, 'rel': 6, 'ele': 8, 'lea': 6, 'eas': 6, 'ase': 6, 'l !': 1, ' ""f': 1, '""fi': 1, 'fin': 1, 'al""': 1, 'l"":': 1, '"""".': 1, '  [': 1, ' [i': 1, '[im': 1, ', s': 1, 'el]': 1, 'l]\n': 1, ']\n ': 1, ' ""J': 1, '""Jy': 1, '() ': 2, ')  ': 2, '  #': 2, ' # ': 2, '# C': 2, ' Co': 2, 'Com': 2, 'omp': 2, 'let': 2, 'te ': 2, 'e G': 2, ' Gu': 2, 'Gue': 2, 'ess': 2, 'ss\n': 2, 's\n ': 2, ' ""I': 1, '""Ir': 1, 'els': 1, 'lse': 1, 'se:': 1, ' ""U': 3, '""Un': 3, 'Unk': 3, 'nkn': 3, 'kno': 3, 'now': 3, 'own': 3, 'wn""': 3, 'n""\n': 3, ' (i': 1, '(im': 1, 'n_s': 1, 'ng(': 1, 'g()': 1, '% _': 1, ' _p': 1, ' tr': 1, 'try': 1, 'ry:': 1, 'y:\n': 1, '  p': 4, ' p_': 5, 'p_s': 3, 'm =': 2, 'm.s': 1, '.sy': 1, 'p_r': 3, '_re': 3, 'e =': 2, 'm.r': 1, 'se(': 1, 'exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pt ': 1, 't I': 1, ' IO': 1, 'IOE': 1, 'OEr': 1, 'or:': 1, 'r:\n': 1, ' (p': 1, '(p_': 1, 'em,': 1, 'm, ': 1, ', p': 1, 'se)': 1, 'e)\n': 1}"
Kenneth Reitz Archive,_digest_auth_compat.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""provide': 1, 'a': 1, 'compatibility': 1, 'layer': 1, 'for': 1, 'requests.auth.httpdigestauth.""""""': 1, 'import': 1, 'requests': 1, 'class': 2, '_threadingdescriptor(object):': 1, 'def': 3, '__init__(self,': 1, 'prop,': 1, 'default):': 1, 'self.prop': 1, '=': 10, 'prop': 1, 'self.default': 1, 'default': 1, '__get__(self,': 1, 'obj,': 2, 'objtype=none):': 1, 'return': 1, 'getattr(obj._thread_local,': 1, 'self.prop,': 2, 'self.default)': 1, '__set__(self,': 1, 'value):': 1, 'setattr(obj._thread_local,': 1, 'value)': 1, '_httpdigestauth(requests.auth.httpdigestauth):': 1, 'init': 1, '_threadingdescriptor(""init"",': 1, 'true)': 1, 'last_nonce': 1, '_threadingdescriptor(""last_nonce"",': 1, '"""")': 1, 'nonce_count': 1, '_threadingdescriptor(""nonce_count"",': 1, '0)': 1, 'chal': 1, '_threadingdescriptor(""chal"",': 1, '{})': 1, 'pos': 1, '_threadingdescriptor(""pos"",': 1, 'none)': 1, 'num_401_calls': 1, '_threadingdescriptor(""num_401_calls"",': 1, '1)': 1, 'if': 1, 'requests.__build__': 1, '<': 1, '0x020800:': 1, 'httpdigestauth': 2, 'requests.auth.httpdigestauth': 1, 'else:': 1, '_httpdigestauth': 1}","{'""""""': 2, '""""P': 1, '""Pr': 1, 'Pro': 1, 'rov': 1, 'ovi': 1, 'vid': 1, 'ide': 1, 'de ': 1, 'e a': 1, ' a ': 1, 'a c': 1, ' co': 1, 'com': 1, 'omp': 1, 'mpa': 1, 'pat': 1, 'ati': 1, 'tib': 1, 'ibi': 1, 'bil': 1, 'ili': 1, 'lit': 1, 'ity': 1, 'ty ': 1, 'y l': 1, ' la': 2, 'lay': 1, 'aye': 1, 'yer': 1, 'er ': 1, 'r f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r r': 1, ' re': 5, 'req': 5, 'equ': 5, 'que': 5, 'ues': 5, 'est': 12, 'sts': 5, 'ts.': 4, 's.a': 3, '.au': 3, 'aut': 3, 'uth': 10, 'th.': 4, 'h.H': 3, '.HT': 3, 'HTT': 7, 'TTP': 7, 'TPD': 7, 'PDi': 7, 'Dig': 7, 'ige': 7, 'ges': 7, 'stA': 7, 'tAu': 7, 'Aut': 7, 'h.""': 1, '.""""': 1, '""""\n': 1, '""\ni': 1, '\nim': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't r': 1, 'ts\n': 1, 's\n\n': 1, '\n\n\n': 3, '\n\nc': 2, '\ncl': 2, 'cla': 2, 'las': 4, 'ass': 2, 'ss ': 2, 's _': 2, ' _T': 7, '_Th': 7, 'Thr': 7, 'hre': 9, 'rea': 9, 'ead': 9, 'adi': 7, 'din': 7, 'ing': 7, 'ngD': 7, 'gDe': 7, 'Des': 7, 'esc': 7, 'scr': 7, 'cri': 7, 'rip': 7, 'ipt': 7, 'pto': 7, 'tor': 7, 'or(': 7, 'r(o': 3, '(ob': 3, 'obj': 6, 'bje': 1, 'jec': 1, 'ect': 1, 'ct)': 1, 't):': 2, '):\n': 5, ':\n ': 7, '\n  ': 15, '   ': 46, '  d': 3, ' de': 5, 'def': 7, 'ef ': 3, 'f _': 3, ' __': 3, '__i': 1, '_in': 1, 'ini': 3, 'nit': 3, 'it_': 1, 't__': 3, '__(': 3, '_(s': 3, '(se': 3, 'sel': 8, 'elf': 8, 'lf,': 3, 'f, ': 3, ', p': 1, ' pr': 2, 'pro': 5, 'rop': 5, 'op,': 3, 'p, ': 3, ', d': 1, 'efa': 4, 'fau': 4, 'aul': 4, 'ult': 4, 'lt)': 2, '  s': 3, ' se': 6, 'lf.': 5, 'f.p': 3, '.pr': 3, 'op ': 1, 'p =': 1, ' = ': 10, '= p': 1, 'op\n': 1, 'p\n ': 1, 'f.d': 2, '.de': 2, 'lt ': 1, 't =': 3, '= d': 1, 'lt\n': 1, 't\n\n': 1, '\n\n ': 2, '__g': 1, '_ge': 1, 'get': 2, 'et_': 2, ', o': 3, ' ob': 3, 'bj,': 2, 'j, ': 2, 'bjt': 1, 'jty': 1, 'typ': 1, 'ype': 1, 'pe=': 1, 'e=N': 1, '=No': 1, 'Non': 2, 'one': 2, 'ne)': 2, 'e):': 2, '  r': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n g': 1, ' ge': 1, 'eta': 2, 'tat': 2, 'att': 2, 'ttr': 2, 'tr(': 2, 'bj.': 2, 'j._': 2, '._t': 2, '_th': 2, 'thr': 2, 'ad_': 2, 'd_l': 2, '_lo': 2, 'loc': 2, 'oca': 2, 'cal': 4, 'al,': 2, 'l, ': 2, ', s': 3, 't)\n': 1, ')\n\n': 3, '__s': 1, '_se': 1, 'set': 2, ', v': 2, ' va': 2, 'val': 2, 'alu': 2, 'lue': 2, 'ue)': 3, 'e)\n': 3, ' _H': 2, '_HT': 2, 'th(': 1, 'h(r': 1, '(re': 1, 'th)': 1, 'h):': 1, '  i': 1, ' in': 1, 'it ': 1, '= _': 7, 'r(""': 6, '(""i': 1, '""in': 1, 'it""': 1, 't"",': 2, '"", ': 6, ', T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, ')\n ': 5, '  l': 1, 'ast': 2, 'st_': 2, 't_n': 2, '_no': 2, 'non': 4, 'onc': 4, 'nce': 4, 'ce ': 1, 'e =': 1, '(""l': 1, '""la': 1, 'ce""': 1, 'e"",': 1, ', ""': 1, ' """"': 1, '"""")': 1, '"")\n': 1, '  n': 2, ' no': 1, 'ce_': 2, 'e_c': 2, '_co': 2, 'cou': 2, 'oun': 2, 'unt': 2, 'nt ': 1, '(""n': 2, '""no': 1, 'nt""': 1, ', 0': 1, ' 0)': 1, '0)\n': 1, '  c': 1, ' ch': 1, 'cha': 2, 'hal': 2, 'al ': 1, 'l =': 1, '(""c': 1, '""ch': 1, 'al""': 1, 'l"",': 1, ', {': 1, ' {}': 1, '{})': 1, '})\n': 1, '  p': 1, ' po': 1, 'pos': 2, 'os ': 1, 's =': 2, '(""p': 1, '""po': 1, 'os""': 1, 's"",': 2, ', N': 1, ' No': 1, ' nu': 1, 'num': 2, 'um_': 2, 'm_4': 2, '_40': 2, '401': 2, '01_': 2, '1_c': 2, '_ca': 2, 'all': 2, 'lls': 2, 'ls ': 1, '""nu': 1, 'ls""': 1, ', 1': 1, ' 1)': 1, '1)\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f r': 1, 's._': 1, '.__': 1, '__b': 1, '_bu': 1, 'bui': 1, 'uil': 1, 'ild': 1, 'ld_': 1, 'd__': 1, '__ ': 1, '_ <': 1, ' < ': 1, '< 0': 1, ' 0x': 1, '0x0': 1, 'x02': 1, '020': 1, '208': 1, '080': 1, '800': 1, '00:': 1, '0:\n': 1, '  H': 2, ' HT': 2, 'th ': 2, 'h =': 2, '= r': 1, 'th\n': 2, 'h\ne': 1, '\nel': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1}"
Kenneth Reitz Archive,_internal_utils.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, '-*-': 2, 'coding:': 1, 'utf-8': 1, '""""""': 4, 'requests._internal_utils': 1, '~~~~~~~~~~~~~~': 1, 'provides': 1, 'utility': 1, 'functions': 1, 'that': 2, 'are': 1, 'consumed': 1, 'internally': 1, 'by': 1, 'requests': 1, 'which': 1, 'depend': 1, 'on': 1, 'extremely': 1, 'few': 1, 'external': 1, 'helpers': 1, '(such': 1, 'as': 1, 'compat)': 1, 'from': 1, '._basics': 1, 'import': 1, 'builtin_str,': 1, 'str': 2, 'def': 2, 'to_native_string(string,': 1, 'encoding=""ascii""):': 1, '""""""given': 1, 'a': 2, 'string': 6, 'object,': 1, 'regardless': 1, 'of': 2, 'type,': 2, 'returns': 1, 'representation': 1, 'in': 1, 'the': 1, 'native': 1, 'encoding': 1, 'and': 2, 'decoding': 1, 'where': 1, 'necessary.': 1, 'this': 1, 'assumes': 1, 'ascii': 2, 'unless': 1, 'told': 1, 'otherwise.': 1, 'if': 3, 'isinstance(string,': 1, 'builtin_str):': 1, 'out': 3, '=': 2, 'else:': 1, 'string.decode(encoding)': 1, 'return': 4, 'unicode_is_ascii(u_string):': 1, '""""""determine': 1, 'unicode': 3, 'only': 1, 'contains': 1, 'characters.': 1, ':param': 1, 'u_string:': 1, 'to': 1, 'check.': 1, 'must': 1, 'be': 1, 'not': 2, 'python': 1, '2': 1, '`str`.': 1, ':rtype:': 1, 'bool': 1, 'isinstance(u_string,': 1, 'str):': 1, 'none': 1, 'try:': 1, 'u_string.encode(""ascii"")': 1, 'true': 1, 'except': 1, 'unicodeencodeerror:': 1, 'false': 1}","{'# -': 1, ' -*': 2, '-*-': 2, '*- ': 1, '- c': 1, ' co': 4, 'cod': 13, 'odi': 5, 'din': 5, 'ing': 19, 'ng:': 2, 'g: ': 2, ': u': 2, ' ut': 2, 'utf': 1, 'tf-': 1, 'f-8': 1, '-8 ': 1, '8 -': 1, '*-\n': 1, '-\n""': 1, '\n""""': 2, '""""""': 6, '""""\n': 4, '""\nr': 1, '\nre': 1, 'req': 1, 'equ': 2, 'que': 2, 'ues': 2, 'est': 2, 'sts': 2, 'ts.': 1, 's._': 1, '._i': 1, '_in': 1, 'int': 2, 'nte': 2, 'ter': 5, 'ern': 3, 'rna': 3, 'nal': 3, 'al_': 1, 'l_u': 1, '_ut': 1, 'uti': 2, 'til': 2, 'ils': 1, 'ls\n': 1, 's\n~': 1, '\n~~': 1, '~~~': 12, '~~\n': 1, '~\n\n': 1, '\n\nP': 1, '\nPr': 1, 'Pro': 1, 'rov': 1, 'ovi': 1, 'vid': 1, 'ide': 1, 'des': 1, 'es ': 2, 's u': 1, 'ili': 1, 'lit': 1, 'ity': 1, 'ty ': 1, 'y f': 2, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 2, 'ion': 2, 'ons': 2, 'ns ': 3, 's t': 2, ' th': 3, 'tha': 2, 'hat': 2, 'at ': 2, 't a': 1, ' ar': 1, 'are': 1, 're ': 1, 'e c': 1, 'con': 2, 'nsu': 1, 'sum': 2, 'ume': 2, 'med': 1, 'ed ': 1, 'd i': 1, ' in': 2, 'all': 1, 'lly': 1, 'ly ': 3, 'y b': 1, ' by': 1, 'by ': 1, 'y R': 1, ' Re': 1, 'Req': 1, 'ts\n': 1, 's\nw': 1, '\nwh': 1, 'whi': 1, 'hic': 1, 'ich': 1, 'ch ': 2, 'h d': 1, ' de': 2, 'dep': 1, 'epe': 1, 'pen': 1, 'end': 1, 'nd ': 3, 'd o': 2, ' on': 2, 'on ': 3, 'n e': 1, ' ex': 3, 'ext': 2, 'xtr': 1, 'tre': 1, 'rem': 1, 'eme': 1, 'mel': 1, 'ely': 1, ' fe': 1, 'few': 1, 'ew ': 1, 'w e': 1, 'xte': 1, 'al ': 1, 'l h': 1, ' he': 1, 'hel': 1, 'elp': 1, 'lpe': 1, 'per': 1, 'ers': 2, 'rs ': 1, 's (': 1, ' (s': 1, '(su': 1, 'suc': 1, 'uch': 1, 'h a': 1, ' as': 2, 'as ': 1, 's c': 1, 'com': 1, 'omp': 1, 'mpa': 1, 'pat': 1, 'at)': 1, 't)\n': 1, ')\n""': 1, '""\n\n': 1, '\n\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm .': 1, ' ._': 1, '._b': 1, '_ba': 1, 'bas': 1, 'asi': 1, 'sic': 1, 'ics': 1, 'cs ': 1, 's i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't b': 2, ' bu': 2, 'bui': 2, 'uil': 2, 'ilt': 2, 'lti': 2, 'tin': 2, 'in_': 2, 'n_s': 2, '_st': 7, 'str': 20, 'tr,': 1, 'r, ': 1, ', s': 2, ' st': 10, 'tr\n': 1, 'r\n\n': 1, '\n\n\n': 2, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f t': 2, ' to': 3, 'to_': 1, 'o_n': 1, '_na': 1, 'nat': 2, 'ati': 3, 'tiv': 2, 'ive': 3, 've_': 1, 'e_s': 1, 'tri': 14, 'rin': 14, 'ng(': 1, 'g(s': 1, '(st': 2, 'ng,': 3, 'g, ': 3, ', e': 2, ' en': 2, 'enc': 4, 'nco': 5, 'ng=': 1, 'g=""': 1, '=""a': 1, '""as': 2, 'asc': 3, 'sci': 3, 'cii': 3, 'ii""': 2, 'i"")': 2, '""):': 1, '):\n': 4, ':\n ': 7, '\n  ': 21, '   ': 70, '  ""': 4, ' """"': 4, '""""G': 1, '""Gi': 1, 'Giv': 1, 'ven': 1, 'en ': 1, 'n a': 1, ' a ': 2, 'a s': 1, 'ng ': 7, 'g o': 2, ' ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct,': 1, 't, ': 1, ', r': 2, ' re': 7, 'reg': 1, 'ega': 1, 'gar': 1, 'ard': 1, 'rdl': 1, 'dle': 1, 'les': 2, 'ess': 3, 'ss ': 2, 's o': 1, ' of': 2, 'of ': 1, ' ty': 2, 'typ': 3, 'ype': 3, 'pe,': 2, 'e, ': 2, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rns': 1, 's a': 2, 'a r': 1, 'rep': 1, 'epr': 1, 'pre': 1, 'res': 1, 'ese': 1, 'sen': 1, 'ent': 1, 'nta': 2, 'tat': 1, 'n o': 2, 'of\n': 1, 'f\n ': 1, '  t': 2, 't s': 1, 'g i': 1, 'in ': 1, 'n t': 1, 'the': 2, 'he ': 1, 'e n': 1, ' na': 1, 've ': 1, 'e s': 3, 'g t': 2, 'g a': 1, ' an': 2, 'and': 2, 'd d': 1, 'dec': 2, 'eco': 2, 'g w': 1, ' wh': 1, 'whe': 1, 'her': 2, 'ere': 1, 're\n': 1, 'e\n ': 2, '  n': 1, ' ne': 1, 'nec': 1, 'ece': 1, 'ces': 1, 'ssa': 1, 'sar': 1, 'ary': 1, 'ry.': 1, 'y. ': 1, '. T': 1, ' Th': 1, 'Thi': 1, 'his': 1, 'is ': 1, 'ass': 1, 'ssu': 1, 'mes': 1, 's A': 2, ' AS': 2, 'ASC': 2, 'SCI': 2, 'CII': 2, 'II ': 2, 'I u': 1, ' un': 5, 'unl': 1, 'nle': 1, 'tol': 1, 'old': 1, 'ld ': 1, ' ot': 1, 'oth': 1, 'erw': 1, 'rwi': 1, 'wis': 1, 'ise': 1, 'se.': 1, 'e.\n': 1, '.\n ': 2, '""\n ': 2, '  i': 2, ' if': 3, 'if ': 3, 'f i': 1, ' is': 2, 'isi': 2, 'sin': 2, 'ins': 3, 'nst': 2, 'sta': 2, 'tan': 2, 'anc': 2, 'nce': 2, 'ce(': 2, 'e(s': 1, ', b': 1, 'tr)': 2, 'r):': 2, '  o': 2, ' ou': 3, 'out': 3, 'ut ': 2, 't =': 2, ' = ': 2, '= s': 2, 'ng\n': 1, 'g\n ': 1, '  e': 2, ' el': 1, 'els': 1, 'lse': 2, 'se:': 1, 'e:\n': 1, 'ng.': 2, 'g.d': 1, '.de': 1, 'ode': 8, 'de(': 2, 'e(e': 1, '(en': 1, 'ng)': 2, 'g)\n': 1, ')\n ': 2, '  r': 4, 'rn ': 4, 'ut\n': 1, 't\n\n': 1, 'f u': 2, 'uni': 4, 'nic': 5, 'ico': 5, 'de_': 1, 'e_i': 1, '_is': 1, 'is_': 1, 's_a': 1, '_as': 1, 'ii(': 1, 'i(u': 1, '(u_': 2, 'u_s': 4, 'g):': 1, '""""D': 1, '""De': 1, 'Det': 1, 'ete': 1, 'erm': 1, 'rmi': 1, 'min': 1, 'ine': 1, 'ne ': 1, 'e i': 1, 'de ': 2, 'onl': 1, 'nly': 1, 'y c': 1, 'ont': 1, 'tai': 1, 'ain': 1, 'I c': 1, ' ch': 2, 'cha': 1, 'har': 1, 'ara': 2, 'rac': 1, 'act': 1, 'cte': 1, 'rs.': 1, 's.\n': 1, '.\n\n': 1, '\n\n ': 3, '  :': 2, ' :p': 1, ':pa': 1, 'par': 1, 'ram': 1, 'am ': 1, 'm s': 1, 'tr ': 1, 'r u': 1, ' u_': 2, 'to ': 1, 'o c': 1, 'che': 1, 'hec': 1, 'eck': 1, 'ck.': 1, 'k. ': 1, '. M': 1, ' Mu': 1, 'Mus': 1, 'ust': 1, 'st ': 1, ' be': 1, 'be ': 1, 'e u': 1, 'de\n': 1, '  a': 1, 'd n': 1, ' no': 2, 'not': 2, 'ot ': 2, 't P': 1, ' Py': 1, 'Pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'n 2': 1, ' 2 ': 1, '2 `': 1, ' `s': 1, '`st': 1, 'tr`': 1, 'r`.': 1, '`.\n': 1, ' :r': 1, ':rt': 1, 'rty': 1, 'pe:': 1, 'e: ': 1, ': b': 1, ' bo': 1, 'boo': 1, 'ool': 1, 'ol\n': 1, 'l\n ': 1, 'f n': 1, 't i': 1, 'e(u': 1, 'n N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne\n': 1, 'e\n\n': 2, ' tr': 1, 'try': 1, 'ry:': 1, 'y:\n': 1, '  u': 1, 'g.e': 1, '.en': 1, 'e(""': 1, '(""a': 1, '"")\n': 1, 'n T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1, 'exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pt ': 1, 't U': 1, ' Un': 1, 'Uni': 1, 'deE': 2, 'eEn': 1, 'Enc': 1, 'eEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or:': 1, 'r:\n': 1, 'n F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'se\n': 1}"
Kenneth Reitz Archive,_types.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'from': 5, 'typing': 1, 'import': 5, '(': 1, 'callable,': 1, 'optional,': 1, 'union,': 1, 'any,': 1, 'iterable,': 1, 'list,': 1, 'mapping,': 1, 'mutablemapping,': 1, 'tuple,': 1, 'io,': 2, 'text,': 1, 'type,': 1, 'dict,': 1, ')': 1, '.': 1, 'http_auth': 1, 'as': 1, 'auth': 2, '.http_models': 1, 'response,': 1, 'preparedrequest': 1, '.http_cookies': 1, 'requestscookiejar': 1, '.http_sessions': 1, 'httpsession': 1, '_paramsmappingvaluetype': 1, '=': 23, 'union[': 4, 'str,': 1, 'bytes,': 5, 'int,': 4, 'float,': 2, 'iterable[union[str,': 1, 'float]]': 2, ']': 5, 'params': 1, 'optional[': 1, 'mapping[union[str,': 1, 'float],': 2, '_paramsmappingvaluetype],': 6, 'union[str,': 1, 'bytes],': 1, 'tuple[union[str,': 1, 'mapping[str,': 1, 'mapping[bytes,': 1, 'mapping[int,': 1, 'mapping[float,': 1, 'data': 1, 'none,': 2, 'mutablemapping[str,': 2, 'str],': 2, 'text],': 3, 'mutablemapping[text,': 4, 'iterable[tuple[str,': 1, 'str]],': 1, '_hook': 1, 'callable[[response],': 1, 'any]': 1, 'method': 1, 'str': 4, 'url': 1, 'headers': 1, 'optional[union[none,': 2, 'text]]]': 2, 'cookies': 1, 'requestscookiejar,': 1, 'files': 1, 'optional[mutablemapping[text,': 3, 'io]]': 1, 'tuple[text,': 2, 'auth.authbase,': 1, 'callable[[preparedrequest],': 1, 'preparedrequest]': 1, 'timeout': 1, 'union[none,': 2, 'tuple[float,': 1, 'allowredirects': 1, 'optional[bool]': 2, 'proxies': 1, 'text]]': 3, 'hooks': 1, 'union[iterable[_hook],': 1, '_hook]]]': 1, 'stream': 1, 'verify': 1, 'bool,': 1, 'text]': 1, 'cert': 1, 'union[text,': 1, 'json': 1, 'optional[mutablemapping]': 1, 'help': 1, 'dict': 1, 'host': 1, 'sequence': 1, 'list': 1, 'filename': 1, 'keyvaluelist': 1, 'list[tuple[text,': 1}","{'fro': 5, 'rom': 5, 'om ': 5, 'm t': 1, ' ty': 1, 'typ': 1, 'ypi': 1, 'pin': 25, 'ing': 25, 'ng ': 1, 'g i': 1, ' im': 5, 'imp': 5, 'mpo': 5, 'por': 5, 'ort': 5, 'rt ': 6, 't (': 1, ' (\n': 1, '(\n ': 1, '\n  ': 32, '   ': 92, '  C': 1, ' Ca': 3, 'Cal': 3, 'all': 3, 'lla': 3, 'lab': 3, 'abl': 18, 'ble': 18, 'le,': 3, 'e,\n': 5, ',\n ': 26, '  O': 1, ' Op': 10, 'Opt': 10, 'pti': 10, 'tio': 10, 'ion': 27, 'ona': 10, 'nal': 10, 'al,': 1, 'l,\n': 1, '  U': 3, ' Un': 10, 'Uni': 15, 'nio': 15, 'on,': 1, 'n,\n': 1, '  A': 1, ' An': 2, 'Any': 2, 'ny,': 1, 'y,\n': 1, '  I': 4, ' It': 3, 'Ite': 4, 'ter': 4, 'era': 4, 'rab': 4, '  L': 1, ' Li': 3, 'Lis': 4, 'ist': 4, 'st,': 1, 't,\n': 3, '  M': 11, ' Ma': 6, 'Map': 24, 'app': 24, 'ppi': 24, 'ng,': 2, 'g,\n': 2, ' Mu': 7, 'Mut': 11, 'uta': 11, 'tab': 11, 'leM': 11, 'eMa': 11, '  T': 4, ' Tu': 5, 'Tup': 7, 'upl': 7, 'ple': 7, ' IO': 3, 'IO,': 2, 'O,\n': 2, ' Te': 10, 'Tex': 21, 'ext': 21, 'xt,': 12, ' Ty': 1, 'Typ': 8, 'ype': 8, 'pe,': 1, '  D': 1, ' Di': 2, 'Dic': 2, 'ict': 2, 'ct,': 1, ',\n)': 1, '\n)\n': 1, ')\n\n': 1, '\n\nf': 1, '\nfr': 4, 'm .': 4, ' . ': 1, '. i': 1, 't h': 1, ' ht': 1, 'htt': 4, 'ttp': 4, 'tp_': 4, 'p_a': 1, '_au': 1, 'aut': 3, 'uth': 5, 'th ': 2, 'h a': 1, ' as': 1, 'as ': 1, 's a': 1, ' au': 2, 'th\n': 1, 'h\nf': 1, ' .h': 3, '.ht': 3, 'p_m': 1, '_mo': 1, 'mod': 1, 'ode': 1, 'del': 1, 'els': 1, 'ls ': 1, 's i': 3, 't R': 2, ' Re': 3, 'Res': 2, 'esp': 2, 'spo': 2, 'pon': 2, 'ons': 3, 'nse': 2, 'se,': 2, 'e, ': 7, ', P': 2, ' Pr': 2, 'Pre': 3, 'rep': 3, 'epa': 3, 'par': 3, 'are': 3, 'red': 3, 'edR': 3, 'dRe': 3, 'Req': 5, 'equ': 6, 'que': 6, 'ues': 5, 'est': 5, 'st\n': 2, 't\nf': 1, 'p_c': 1, '_co': 1, 'coo': 1, 'ook': 8, 'oki': 4, 'kie': 4, 'ies': 3, 'es ': 4, 'sts': 2, 'tsC': 2, 'sCo': 2, 'Coo': 3, 'ieJ': 2, 'eJa': 2, 'Jar': 2, 'ar\n': 1, 'r\nf': 1, 'p_s': 1, '_se': 1, 'ses': 1, 'ess': 2, 'ssi': 2, 'sio': 2, 'ns ': 1, 't H': 1, ' HT': 1, 'HTT': 1, 'TTP': 1, 'TPS': 1, 'PSe': 1, 'Ses': 1, 'on\n': 1, 'n\n\n': 1, '\n\n_': 1, '\n_P': 1, '_Pa': 7, 'Par': 8, 'ara': 8, 'ram': 8, 'ams': 8, 'msM': 7, 'sMa': 7, 'ngV': 7, 'gVa': 7, 'Val': 8, 'alu': 8, 'lue': 8, 'ueT': 7, 'eTy': 7, 'pe ': 1, 'e =': 3, ' = ': 23, '= U': 6, 'on[': 14, 'n[\n': 4, '[\n ': 5, '  s': 1, ' st': 8, 'str': 16, 'tr,': 9, 'r, ': 10, ', b': 6, ' by': 6, 'byt': 7, 'yte': 7, 'tes': 7, 'es,': 6, 's, ': 5, ', i': 4, ' in': 4, 'int': 5, 'nt,': 5, 't, ': 20, ', f': 6, ' fl': 6, 'flo': 8, 'loa': 8, 'oat': 8, 'at,': 4, ', I': 2, 'le[': 11, 'e[U': 2, '[Un': 5, 'n[s': 4, '[st': 8, 'at]': 4, 't]]': 7, ']]\n': 9, ']\n]': 3, '\n]\n': 4, ']\nP': 2, '\nPa': 1, 'ms ': 1, 's =': 7, '= O': 9, 'al[': 9, 'l[\n': 1, 'ng[': 14, 'g[U': 1, 't],': 6, '], ': 6, ', _': 7, ' _P': 6, 'pe]': 6, 'e],': 7, '],\n': 12, 'es]': 1, 's],': 1, 'g[s': 3, 'g[b': 1, '[by': 1, 'g[i': 1, '[in': 1, 'g[f': 1, '[fl': 2, '  ]': 1, ' ]\n': 1, ']\nD': 1, '\nDa': 1, 'Dat': 1, 'ata': 1, 'ta ': 1, 'a =': 1, '  N': 2, ' No': 2, 'Non': 6, 'one': 6, 'ne,': 6, '  b': 1, 's,\n': 1, ', s': 3, 'tr]': 3, 'r],': 2, ', T': 12, 'xt]': 9, 'g[T': 7, '[Te': 11, 'e[T': 4, '[Tu': 2, 'e[s': 1, 'r]]': 1, ']],': 1, ',\n]': 1, ']\n_': 1, '\n_H': 1, '_Ho': 3, 'Hoo': 4, 'ok ': 1, 'k =': 1, '= C': 1, 'e[[': 2, '[[R': 1, '[Re': 1, 'se]': 1, ', A': 1, 'ny]': 1, 'y]\n': 1, ']\nM': 1, '\nMe': 1, 'Met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od ': 1, 'd =': 1, '= s': 4, 'tr\n': 4, 'r\nU': 1, '\nUR': 1, 'URL': 1, 'RL ': 1, 'L =': 1, 'r\nH': 1, '\nHe': 2, 'Hea': 1, 'ead': 1, 'ade': 1, 'der': 1, 'ers': 1, 'rs ': 1, 'l[U': 2, 'n[N': 4, '[No': 4, ', M': 2, ']]]': 3, ']\nC': 2, '\nCo': 1, ', R': 1, 'ar,': 1, ']\nF': 1, '\nFi': 2, 'Fil': 2, 'ile': 2, 'les': 1, 'l[M': 4, '[Mu': 4, 'IO]': 1, 'O]]': 1, ']\nA': 2, '\nAu': 1, 'Aut': 2, 'h =': 1, ', a': 1, 'th.': 1, 'h.A': 1, '.Au': 1, 'thB': 1, 'hBa': 1, 'Bas': 1, 'ase': 1, ', C': 1, '[[P': 1, '[Pr': 1, 'st]': 2, 't]\n': 2, ']\nT': 1, '\nTi': 1, 'Tim': 1, 'ime': 1, 'meo': 1, 'eou': 1, 'out': 1, 'ut ': 1, 't =': 4, 'e[f': 1, '\nAl': 1, 'All': 1, 'llo': 1, 'low': 1, 'owR': 1, 'wRe': 1, 'Red': 1, 'edi': 1, 'dir': 1, 'ire': 1, 'rec': 1, 'ect': 1, 'cts': 1, 'ts ': 1, 'l[b': 2, '[bo': 2, 'boo': 3, 'ool': 3, 'ol]': 2, 'l]\n': 2, '\nPr': 1, 'Pro': 1, 'rox': 1, 'oxi': 1, 'xie': 1, ']\nH': 2, '\nHo': 2, 'oks': 1, 'ks ': 1, ', U': 1, 'n[I': 1, '[It': 1, 'e[_': 1, '[_H': 1, 'ok]': 2, 'k],': 1, ' _H': 1, 'k]]': 1, ']\nS': 1, '\nSt': 1, 'Str': 1, 'tre': 1, 'rea': 1, 'eam': 1, 'am ': 1, 'm =': 1, ']\nV': 1, '\nVe': 1, 'Ver': 1, 'eri': 1, 'rif': 1, 'ify': 1, 'fy ': 1, 'y =': 1, ' bo': 1, 'ol,': 1, 'l, ': 1, '\nCe': 1, 'Cer': 1, 'ert': 1, 'n[T': 1, ']\nJ': 1, '\nJS': 1, 'JSO': 1, 'SON': 1, 'ON ': 1, 'N =': 1, 'ng]': 1, 'g]\n': 1, 'Hel': 1, 'elp': 1, 'lp ': 1, 'p =': 1, '= D': 1, 'ct\n': 1, 't\nH': 1, 'Hos': 1, 'ost': 1, 'st ': 2, 'r\nS': 1, '\nSe': 1, 'Seq': 1, 'uen': 1, 'enc': 1, 'nce': 1, 'ce ': 1, '= L': 2, 't\nF': 1, 'len': 1, 'ena': 1, 'nam': 1, 'ame': 1, 'me ': 1, 'r\nK': 1, '\nKe': 1, 'Key': 1, 'eyV': 1, 'yVa': 1, 'ueL': 1, 'eLi': 1, 'st[': 1, 't[T': 1}"
Mahamudul Hasan Mithhu,balancedBrackets.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'def': 1, 'balancedbrackets(string):': 1, 'openingbrackets': 1, '=': 4, '""([{""': 1, 'closingbrackets': 1, '"")]}""': 1, 'matchingbrackets': 1, '{"")"":': 1, '""("",': 1, '""}"":': 1, '""{"",': 1, '""]"":': 1, '""]""}': 1, 'stack': 1, '[]': 1, 'for': 1, 'char': 3, 'in': 3, 'string:': 1, 'if': 3, 'openingbrackets:': 1, 'stack.append(char)': 1, 'elif': 1, 'closingbrackets:': 1, 'len(stack)': 1, '==': 2, '0:': 1, 'return': 2, 'false': 2, 'stack[-1]': 1, 'matchingbrackets[char]:': 1, 'stack.pop()': 1, 'else:': 1}","{'def': 1, 'ef ': 1, 'f b': 1, ' ba': 1, 'bal': 1, 'ala': 1, 'lan': 1, 'anc': 1, 'nce': 1, 'ced': 1, 'edB': 1, 'dBr': 1, 'Bra': 7, 'rac': 7, 'ack': 12, 'cke': 7, 'ket': 7, 'ets': 7, 'ts(': 1, 's(s': 1, '(st': 2, 'str': 2, 'tri': 2, 'rin': 2, 'ing': 8, 'ng)': 1, 'g):': 1, '):\n': 1, ':\n ': 7, '\n  ': 14, '   ': 104, '  o': 1, ' op': 2, 'ope': 2, 'pen': 3, 'eni': 2, 'nin': 2, 'ngB': 6, 'gBr': 6, 'ts ': 3, 's =': 3, ' = ': 4, '= ""': 2, ' ""(': 2, '""([': 1, '([{': 1, '[{""': 1, '{""\n': 1, '""\n ': 1, '  c': 1, ' cl': 2, 'clo': 2, 'los': 2, 'osi': 2, 'sin': 2, ' "")': 1, '"")]': 1, ')]}': 1, ']}""': 1, '}""\n': 1, '""\n\n': 1, '\n\n ': 2, '  m': 1, ' ma': 2, 'mat': 2, 'atc': 2, 'tch': 2, 'chi': 2, 'hin': 2, '= {': 1, ' {""': 1, '{"")': 1, '"")""': 1, ')"":': 1, '"": ': 3, ': ""': 3, '""(""': 1, '("",': 1, '"", ': 2, ', ""': 2, ' ""}': 1, '""}""': 1, '}"":': 1, ' ""{': 1, '""{""': 1, '{"",': 1, ' ""]': 2, '""]""': 2, ']"":': 1, ']""}': 1, '""}\n': 1, '}\n ': 1, '  s': 3, ' st': 5, 'sta': 5, 'tac': 5, 'ck ': 1, 'k =': 1, '= [': 1, ' []': 1, '[]\n': 1, ']\n\n': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r c': 1, ' ch': 3, 'cha': 5, 'har': 5, 'ar ': 3, 'r i': 3, ' in': 3, 'in ': 3, 'n s': 1, 'ng:': 1, 'g:\n': 1, '  i': 3, ' if': 3, 'if ': 4, 'f c': 2, 'n o': 1, 'ts:': 2, 's:\n': 2, 'ck.': 2, 'k.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'end': 1, 'nd(': 1, 'd(c': 1, '(ch': 1, 'ar)': 1, 'r)\n': 1, ')\n ': 2, '  e': 2, ' el': 2, 'eli': 1, 'lif': 1, 'n c': 1, 'f l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(s': 1, 'ck)': 1, 'k) ': 1, ') =': 1, ' ==': 2, '== ': 2, '= 0': 1, ' 0:': 1, '0:\n': 1, '  r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n F': 2, ' Fa': 2, 'Fal': 2, 'als': 2, 'lse': 3, 'se\n': 2, 'e\n ': 1, 'f s': 1, 'ck[': 1, 'k[-': 1, '[-1': 1, '-1]': 1, '1] ': 1, '] =': 1, '= m': 1, 'ts[': 1, 's[c': 1, '[ch': 1, 'ar]': 1, 'r]:': 1, ']:\n': 1, 'k.p': 1, '.po': 1, 'pop': 1, 'op(': 1, 'p()': 1, '()\n': 1, 'els': 1, 'se:': 1, 'e:\n': 1}"
Mahamudul Hasan Mithhu,binarySearch.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 13, 'def': 4, 'binarysearch(array,': 2, 'target):': 2, 'return': 6, 'binarysearchhelper(array,': 6, 'target,': 6, '0,': 2, 'len(array)-1,)': 2, 'left,': 3, 'right):': 2, 'if': 3, 'left': 3, '>': 2, 'right:': 2, '-1': 2, 'middle': 7, '=': 6, '(left': 2, '+': 3, 'right)': 3, '//': 2, '2': 2, 'potentialmatch': 2, 'array[middle]': 2, 'target': 4, '==': 2, 'potentialmatch:': 4, 'elif': 2, '<': 2, '-': 2, '1)': 1, 'else:': 2, 'middle+1,': 1, 'while': 1, 'right': 1, '1': 2}","{'# d': 2, ' de': 2, 'def': 4, 'ef ': 4, 'f b': 4, ' bi': 8, 'bin': 8, 'ina': 8, 'nar': 8, 'ary': 8, 'ryS': 8, 'ySe': 8, 'Sea': 8, 'ear': 8, 'arc': 8, 'rch': 8, 'ch(': 2, 'h(a': 2, '(ar': 10, 'arr': 12, 'rra': 12, 'ray': 12, 'ay,': 8, 'y, ': 8, ', t': 8, ' ta': 12, 'tar': 12, 'arg': 12, 'rge': 12, 'get': 12, 'et)': 2, 't):': 4, '):\n': 4, ':\n#': 6, '\n# ': 12, '#  ': 11, '   ': 115, '  r': 7, ' re': 6, 'ret': 6, 'etu': 6, 'tur': 6, 'urn': 6, 'rn ': 6, 'n b': 2, 'chH': 6, 'hHe': 6, 'Hel': 6, 'elp': 6, 'lpe': 6, 'per': 6, 'er(': 6, 'r(a': 6, 'et,': 6, 't, ': 9, ', 0': 2, ' 0,': 2, '0, ': 2, ', l': 5, ' le': 8, 'len': 2, 'en(': 2, 'n(a': 2, 'ay)': 2, 'y)-': 2, ')-1': 2, '-1,': 2, '1,)': 2, ',)\n': 2, ')\n\n': 3, '\n\n\n': 3, '\n\n#': 3, 'lef': 8, 'eft': 8, 'ft,': 3, ', r': 3, ' ri': 8, 'rig': 8, 'igh': 8, 'ght': 8, 'ht)': 5, '  i': 3, ' if': 3, 'if ': 5, 'f l': 1, 'ft ': 5, 't >': 2, ' > ': 2, '> r': 2, 'ht:': 2, 't:\n': 2, 'n -': 2, ' -1': 2, '-1\n': 2, '1\n#': 1, '  m': 2, ' mi': 8, 'mid': 10, 'idd': 10, 'ddl': 10, 'dle': 10, 'le ': 6, 'e =': 2, ' = ': 6, '= (': 2, ' (l': 2, '(le': 2, 't +': 2, ' + ': 3, '+ r': 2, 't) ': 2, ') /': 2, ' //': 2, '// ': 2, '/ 2': 2, ' 2\n': 2, '2\n#': 1, '  p': 2, ' po': 6, 'pot': 6, 'ote': 6, 'ten': 6, 'ent': 6, 'nti': 6, 'tia': 6, 'ial': 6, 'alM': 6, 'lMa': 6, 'Mat': 6, 'atc': 6, 'tch': 6, 'ch ': 2, 'h =': 2, '= a': 2, ' ar': 2, 'ay[': 2, 'y[m': 2, '[mi': 2, 'le]': 2, 'e]\n': 2, ']\n\n': 1, 'f t': 4, 'et ': 4, 't =': 4, ' ==': 2, '== ': 2, '= p': 2, 'ch:': 4, 'h:\n': 4, 'n m': 2, 'le\n': 2, 'e\n\n': 1, '  e': 4, ' el': 4, 'eli': 2, 'lif': 2, 't <': 2, ' < ': 2, '< p': 2, '  b': 2, ', m': 2, 'e -': 2, ' - ': 2, '- 1': 2, ' 1)': 1, '1)\n': 1, ')\n#': 1, 'els': 2, 'lse': 2, 'se:': 2, 'e:\n': 2, 'le+': 1, 'e+1': 1, '+1,': 1, '1, ': 1, 't)\n': 1, '\n\nd': 2, '\nde': 2, ':\n ': 6, '\n  ': 11, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'e l': 1, '2\n ': 1, ']\n ': 1, 'e\n ': 1, 'ht ': 1, '= m': 2, ' 1\n': 2, '1\n ': 2, '  l': 1, 'e +': 1, '+ 1': 1}"
Mahamudul Hasan Mithhu,branchSums.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'def': 2, 'branchsums(root):': 1, 'sums': 2, '=': 2, '[]': 1, 'calculatebranchsums(root,': 1, '0,': 1, 'sums)': 3, 'return': 3, 'calculatebranchsums(node,': 1, 'runningsum,': 1, 'sums):': 1, 'if': 2, 'node': 1, 'is': 3, 'none:': 2, 'noderunningsum': 1, 'runningsum': 1, '+': 1, 'node.value': 1, 'node.left': 1, 'none': 1, 'and': 1, 'node.right': 1, 'sums.append(noderunningsum)': 1, 'calculatebranchsums(node.left,': 1, 'noderunningsum,': 2, 'calculatebranchsums(node.runningsum,': 1}","{'def': 2, 'ef ': 2, 'f b': 1, ' br': 1, 'bra': 1, 'ran': 5, 'anc': 5, 'nch': 5, 'chS': 5, 'hSU': 1, 'SUm': 1, 'Ums': 1, 'ms(': 5, 's(r': 2, '(ro': 2, 'roo': 2, 'oot': 2, 'ot)': 1, 't):': 1, '):\n': 2, ':\n ': 4, '\n  ': 11, '   ': 34, '  s': 2, ' su': 7, 'sum': 7, 'ums': 11, 'ms ': 1, 's =': 1, ' = ': 2, '= [': 1, ' []': 1, '[]\n': 1, ']\n ': 1, '  c': 3, ' ca': 4, 'cal': 4, 'alc': 4, 'lcu': 4, 'cul': 4, 'ula': 4, 'lat': 4, 'ate': 4, 'teB': 4, 'eBr': 4, 'Bra': 4, 'hSu': 4, 'Sum': 11, 'ot,': 1, 't, ': 2, ', 0': 1, ' 0,': 1, '0, ': 1, ', s': 4, 'ms)': 4, 's)\n': 3, ')\n ': 3, '  r': 3, ' re': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 1, 'n s': 1, 'ms\n': 1, 's\n\n': 1, '\n\n\n': 1, '\n\nd': 1, '\nde': 1, 'f c': 1, 's(n': 3, '(no': 4, 'nod': 11, 'ode': 11, 'de,': 1, 'e, ': 1, ', r': 1, ' ru': 2, 'run': 3, 'unn': 7, 'nni': 7, 'nin': 7, 'ing': 7, 'ngS': 7, 'gSu': 7, 'um,': 4, 'm, ': 4, 's):': 1, '  i': 2, ' if': 2, 'if ': 2, 'f n': 2, ' no': 7, 'de ': 1, 'e i': 1, ' is': 3, 'is ': 3, 's N': 3, ' No': 3, 'Non': 3, 'one': 3, 'ne:': 2, 'e:\n': 2, 'rn\n': 2, 'n\n ': 1, '  n': 1, 'deR': 4, 'eRu': 4, 'Run': 4, 'um ': 2, 'm =': 1, '= r': 1, 'm +': 1, ' + ': 1, '+ n': 1, 'de.': 5, 'e.v': 1, '.va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ue\n': 1, 'e\n ': 1, 'e.l': 2, '.le': 2, 'lef': 2, 'eft': 2, 'ft ': 1, 't i': 2, 'ne ': 1, 'e a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd n': 1, 'e.r': 2, '.ri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht ': 1, 'ms.': 1, 's.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(n': 1, 'um)': 1, 'm)\n': 1, 'n\n\n': 1, '\n\n ': 1, 'ft,': 1, ', n': 2, '.ru': 1}"
Mahamudul Hasan Mithhu,bredthFirst.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'class': 1, 'node:': 1, 'def': 3, '__init__(self,': 1, 'name):': 2, 'self.children': 1, '=': 4, '[]': 1, 'self.name': 1, 'name': 1, 'addchild(self,': 1, 'self.children.append(node(name))': 1, 'breadthfirst(self,': 1, 'array):': 1, 'queue': 1, '[self]': 1, 'while': 1, 'len(queue):': 1, 'current': 1, 'queue.pop(0)': 1, 'array.append(current)': 1, 'for': 1, 'child': 1, 'in': 1, 'self.children:': 1, 'queue.append(child)': 1, 'return': 1, 'array': 1}","{'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's N': 1, ' No': 1, 'Nod': 2, 'ode': 2, 'de:': 1, 'e:\n': 1, ':\n ': 6, '\n  ': 13, '   ': 86, '  d': 3, ' de': 3, 'def': 3, 'ef ': 3, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 3, 'sel': 8, 'elf': 8, 'lf,': 3, 'f, ': 3, ', n': 2, ' na': 3, 'nam': 5, 'ame': 5, 'me)': 3, 'e):': 3, '):\n': 4, '  s': 3, ' se': 4, 'lf.': 4, 'f.c': 3, '.ch': 3, 'chi': 5, 'hil': 7, 'ild': 6, 'ldr': 3, 'dre': 3, 'ren': 5, 'en ': 1, 'n =': 1, ' = ': 4, '= [': 2, ' []': 1, '[]\n': 1, ']\n ': 2, 'f.n': 1, '.na': 1, 'me ': 1, 'e =': 2, '= n': 1, 'me\n': 1, 'e\n\n': 1, '\n\n ': 2, 'f a': 1, ' ad': 1, 'add': 1, 'ddC': 1, 'dCh': 1, 'Chi': 1, 'ld(': 1, 'd(s': 1, 'en.': 1, 'n.a': 1, '.ap': 3, 'app': 3, 'ppe': 3, 'pen': 3, 'end': 3, 'nd(': 3, 'd(N': 1, '(No': 1, 'de(': 1, 'e(n': 1, '(na': 1, 'e))': 1, '))\n': 1, ')\n\n': 1, 'f b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'ead': 1, 'adt': 1, 'dth': 1, 'thF': 1, 'hFi': 1, 'Fir': 1, 'irs': 1, 'rst': 1, 'st(': 1, 't(s': 1, ', a': 1, ' ar': 3, 'arr': 3, 'rra': 3, 'ray': 3, 'ay)': 1, 'y):': 1, '  q': 2, ' qu': 3, 'que': 4, 'ueu': 4, 'eue': 4, 'ue ': 1, ' [s': 1, '[se': 1, 'lf]': 1, 'f]\n': 1, '  w': 1, ' wh': 1, 'whi': 1, 'ile': 1, 'le ': 1, 'e l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(q': 1, '(qu': 1, 'ue)': 1, '  c': 1, ' cu': 1, 'cur': 2, 'urr': 2, 'rre': 2, 'ent': 2, 'nt ': 1, 't =': 1, '= q': 1, 'ue.': 2, 'e.p': 1, '.po': 1, 'pop': 1, 'op(': 1, 'p(0': 1, '(0)': 1, '0)\n': 1, ')\n ': 3, '  a': 1, 'ay.': 1, 'y.a': 1, 'd(c': 2, '(cu': 1, 'nt)': 1, 't)\n': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r c': 1, ' ch': 1, 'ld ': 1, 'd i': 1, ' in': 1, 'in ': 1, 'n s': 1, 'en:': 1, 'n:\n': 1, 'e.a': 1, '(ch': 1, 'ld)': 1, 'd)\n': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n a': 1, 'ay\n': 1}"
Mahamudul Hasan Mithhu,bstConstruction.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'class': 1, 'bst:': 1, 'def': 5, '__init__(self,': 1, 'value):': 3, 'self.value': 1, '=': 28, 'value': 6, 'self.left': 1, 'none': 3, 'self.right': 1, 'insert(self,': 1, 'currentnode': 18, 'self': 6, 'while': 4, 'true:': 1, 'if': 9, '<': 3, 'currentnode.value:': 4, 'currentnode.value': 6, 'is': 10, 'none:': 9, 'currentnode.left': 14, 'bst(value)': 2, 'break': 3, 'else:': 5, 'currentnode.right': 10, 'return': 5, 'contains(self,': 1, 'not': 7, 'elif': 5, '>': 2, 'true': 1, 'false': 1, '#': 1, 'remove(self,': 1, 'value,': 1, 'parentnode=none):': 1, 'parentnode': 3, 'currentnode:': 2, '#value': 1, '==': 2, 'and': 1, 'currentnode.right.getmainvalue()': 1, 'currentnode.right.remove(currentnode.value,': 1, 'currentnode)': 1, 'currentnode.left.value': 1, 'currentnode.left.right': 1, 'currentnode.left.left': 1, 'currentnode.right.value': 1, 'currentnode.right.left': 1, 'currentnode.right.right': 1, 'parentnode.left': 2, 'else': 2, 'parentnode.right': 1, 'getmainvalue(self):': 1}","{'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's B': 1, ' BS': 3, 'BST': 3, 'ST:': 1, 'T:\n': 1, ':\n ': 27, '\n  ': 64, '   ': 765, '  d': 5, ' de': 5, 'def': 5, 'ef ': 5, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 5, 'sel': 14, 'elf': 14, 'lf,': 4, 'f, ': 4, ', v': 4, ' va': 10, 'val': 27, 'alu': 29, 'lue': 29, 'ue)': 5, 'e):': 4, '):\n': 5, '  s': 3, ' se': 9, 'lf.': 3, 'f.v': 1, '.va': 14, 'ue ': 12, 'e =': 19, ' = ': 28, '= v': 1, 'ue\n': 5, 'e\n ': 9, 'f.l': 1, '.le': 22, 'lef': 22, 'eft': 22, 'ft ': 13, 't =': 11, '= N': 2, ' No': 12, 'Non': 13, 'one': 13, 'ne\n': 2, 'f.r': 1, '.ri': 19, 'rig': 19, 'igh': 19, 'ght': 19, 'ht ': 7, 'e\n\n': 2, '\n\n ': 4, 'f i': 1, ' in': 1, 'ins': 2, 'nse': 1, 'ser': 1, 'ert': 1, 'rt(': 1, 't(s': 1, '  c': 21, ' cu': 63, 'cur': 64, 'urr': 64, 'rre': 64, 'ren': 71, 'ent': 71, 'ntN': 71, 'tNo': 71, 'Nod': 71, 'ode': 71, 'de ': 17, '= s': 4, 'lf\n': 6, 'f\n ': 4, '  w': 4, ' wh': 4, 'whi': 4, 'hil': 4, 'ile': 4, 'le ': 4, 'e T': 1, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue:': 5, 'e:\n': 21, '  i': 7, ' if': 9, 'if ': 14, 'f v': 5, 'e <': 3, ' < ': 3, '< c': 3, 'de.': 46, 'e.v': 11, 'f c': 8, 'e i': 5, ' is': 10, 'is ': 10, 's N': 3, 'ne:': 9, 'e.l': 19, '= B': 2, 'ST(': 2, 'T(v': 2, '(va': 2, 'e)\n': 3, ')\n ': 4, '  b': 3, ' br': 3, 'bre': 3, 'rea': 3, 'eak': 3, 'ak\n': 3, 'k\n ': 3, '  e': 10, ' el': 12, 'els': 7, 'lse': 8, 'se:': 5, '= c': 21, 'ft\n': 6, 't\n ': 13, 'e.r': 16, 'ht\n': 7, '  r': 5, ' re': 6, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 5, 'n s': 2, 'f\n\n': 2, ' co': 1, 'con': 1, 'ont': 1, 'nta': 1, 'tai': 1, 'ain': 3, 'ns(': 1, 's(s': 1, 'e c': 5, 's n': 7, ' no': 7, 'not': 7, 'ot ': 7, 't N': 7, 'eli': 5, 'lif': 5, 'e >': 2, ' > ': 2, '> c': 2, 'n T': 1, 'n F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'se\n': 1, '  #': 2, ' # ': 1, '# c': 1, 'de\n': 4, 'f r': 1, 'rem': 2, 'emo': 2, 'mov': 2, 'ove': 2, 've(': 2, 'e(s': 2, 'ue,': 2, 'e, ': 2, ', p': 1, ' pa': 7, 'par': 7, 'are': 7, 'de=': 1, 'e=N': 1, '=No': 1, 'ne)': 1, '  p': 4, 'de:': 2, ' #v': 1, '#va': 1, ' ==': 2, '== ': 2, 't i': 7, 'ne ': 1, 'e a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd c': 1, 'ht.': 5, 't.g': 1, '.ge': 1, 'get': 2, 'etM': 2, 'tMa': 2, 'Mai': 2, 'inV': 2, 'nVa': 2, 'Val': 2, 'ue(': 2, 'e()': 1, '()\n': 1, 't.r': 3, '.re': 1, 'e(c': 1, '(cu': 1, ', c': 1, 'de)': 1, 'f p': 2, 'ft.': 3, 't.v': 2, 't.l': 2, 't e': 2, 'se ': 2, 'f g': 1, ' ge': 1, 'lf)': 1, 'f):': 1, 'n c': 1}"
Mahamudul Hasan Mithhu,bstTraverse.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'def': 3, 'inordertraverse(tree,': 1, 'array):': 3, 'if': 3, 'tree': 3, 'is': 3, 'not': 3, 'none:': 3, 'inordertraverse(tree.left,': 1, 'array)': 8, 'array.append(tree.value)': 1, 'inordertraverse(tree.right,': 1, 'return': 1, 'array': 1, 'preordertraverse(tree,': 1, 'array.append(tree.value,': 2, 'preordertraverse(tree.left,': 1, 'preordertraverse(tree.right,': 1, 'postordertraverse(tree,': 1, 'postordertraverse(tree.left,': 1, 'postordertraverse(tree.right,': 1}","{'def': 3, 'ef ': 3, 'f i': 1, ' in': 3, 'inO': 3, 'nOr': 3, 'Ord': 9, 'rde': 9, 'der': 9, 'erT': 9, 'rTr': 9, 'Tra': 9, 'rav': 9, 'ave': 9, 'ver': 9, 'ers': 9, 'rse': 9, 'se(': 9, 'e(t': 9, '(tr': 12, 'tre': 15, 'ree': 15, 'ee,': 3, 'e, ': 5, ', a': 11, ' ar': 15, 'arr': 15, 'rra': 15, 'ray': 15, 'ay)': 11, 'y):': 3, '):\n': 3, ':\n ': 6, '\n  ': 13, '   ': 62, '  i': 5, ' if': 3, 'if ': 3, 'f t': 3, ' tr': 3, 'ee ': 3, 'e i': 3, ' is': 3, 'is ': 3, 's n': 3, ' no': 3, 'not': 3, 'ot ': 3, 't N': 3, ' No': 3, 'Non': 3, 'one': 3, 'ne:': 3, 'e:\n': 3, 'ee.': 9, 'e.l': 3, '.le': 3, 'lef': 3, 'eft': 3, 'ft,': 3, 't, ': 6, 'y)\n': 8, ')\n ': 7, '  a': 3, 'ay.': 3, 'y.a': 3, '.ap': 3, 'app': 3, 'ppe': 3, 'pen': 3, 'end': 3, 'nd(': 3, 'd(t': 3, 'e.v': 3, '.va': 3, 'val': 3, 'alu': 3, 'lue': 3, 'ue)': 1, 'e)\n': 1, 'e.r': 3, '.ri': 3, 'rig': 3, 'igh': 3, 'ght': 3, 'ht,': 3, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n a': 1, 'ay\n': 1, 'y\n\n': 1, '\n\n\n': 2, '\n\nd': 2, '\nde': 2, 'f p': 2, ' pr': 3, 'pre': 3, 'reO': 3, 'eOr': 3, 'ue,': 2, '  p': 4, ')\n\n': 1, ' po': 3, 'pos': 3, 'ost': 3, 'stO': 3, 'tOr': 3}"
Mahamudul Hasan Mithhu,bubbleSort.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'def': 2, 'bubblesort(array):': 1, 'issorted': 3, '=': 5, 'false': 2, 'counter': 2, '0': 1, 'while': 1, 'not': 1, 'issorted:': 1, 'true': 1, 'for': 1, 'i': 1, 'in': 1, 'range(len(array)': 1, '-': 1, '1):': 1, 'if': 1, 'array[i]': 2, '>': 1, 'array[i+1]:': 1, 'swap(i,': 2, 'i+1,': 1, 'array)': 1, '+=': 1, '1': 1, 'return': 1, 'array': 1, 'j,': 1, 'array):': 1, 'array[i],': 1, 'array[j]': 1, 'array[j],': 1, 'print(bubblesort([2,': 1, '1,': 1, '5,': 1, '3]))': 1}","{'def': 2, 'ef ': 2, 'f b': 1, ' bu': 1, 'bub': 2, 'ubb': 2, 'bbl': 2, 'ble': 2, 'leS': 2, 'eSo': 2, 'Sor': 6, 'ort': 6, 'rt(': 2, 't(a': 1, '(ar': 2, 'arr': 11, 'rra': 11, 'ray': 11, 'ay)': 4, 'y):': 2, '):\n': 3, ':\n ': 5, '\n  ': 11, '   ': 66, '  i': 4, ' is': 4, 'isS': 4, 'sSo': 4, 'rte': 4, 'ted': 4, 'ed ': 3, 'd =': 3, ' = ': 5, '= F': 2, ' Fa': 2, 'Fal': 2, 'als': 2, 'lse': 2, 'se\n': 2, 'e\n ': 3, '  c': 2, ' co': 2, 'cou': 2, 'oun': 2, 'unt': 2, 'nte': 2, 'ter': 2, 'er ': 2, 'r =': 1, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't i': 1, 'ed:': 1, 'd:\n': 1, '= T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, ' in': 1, 'in ': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(l': 1, '(le': 1, 'len': 1, 'en(': 1, 'n(a': 1, 'y) ': 1, ') -': 1, ' - ': 1, '- 1': 1, ' 1)': 1, '1):': 1, ' if': 1, 'if ': 1, 'f a': 1, ' ar': 9, 'ay[': 6, 'y[i': 4, '[i]': 3, 'i] ': 1, '] >': 1, ' > ': 1, '> a': 1, '[i+': 1, 'i+1': 2, '+1]': 1, '1]:': 1, ']:\n': 1, '  s': 1, ' sw': 2, 'swa': 2, 'wap': 2, 'ap(': 2, 'p(i': 2, '(i,': 2, 'i, ': 2, ', i': 1, ' i+': 1, '+1,': 1, '1, ': 2, ', a': 4, 'y)\n': 1, ')\n ': 1, 'r +': 1, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 1, '1\n ': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n a': 1, 'ay\n': 1, 'y\n\n': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'f s': 1, ', j': 1, ' j,': 1, 'j, ': 1, '  a': 1, 'i],': 1, '], ': 2, 'y[j': 2, '[j]': 2, 'j] ': 1, '] =': 1, '= a': 1, 'j],': 1, 'i]\n': 1, ']\n\n': 1, '\n\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 't(b': 1, '(bu': 1, 't([': 1, '([2': 1, '[2,': 1, '2, ': 1, ', 1': 1, ' 1,': 1, ', 5': 1, ' 5,': 1, '5, ': 1, ', 3': 1, ' 3]': 1, '3])': 1, ']))': 1, '))\n': 1}"
Mahamudul Hasan Mithhu,caesarCipher.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'def': 2, 'caesarcipherencryptor(string,': 1, 'key):': 2, 'newletters': 1, '=': 3, '[]': 1, 'newkey': 1, 'key': 2, '%': 2, '26': 1, 'for': 1, 'letter': 1, 'in': 1, 'string:': 1, 'newletters.append(getnewletter(letter,': 1, 'newkey))': 1, 'return': 2, '"""".join(newletters)': 1, 'getnewletter(letter,': 1, 'newlettercode': 3, 'ord(letter)': 1, '+': 2, 'chr(newlettercode)': 1, 'if': 1, '<=': 1, '122': 1, 'else': 1, 'chr(96': 1, '122)': 1, 'print(caesarcipherencryptor(""xyz"",': 1, '2))': 1}","{'def': 2, 'ef ': 2, 'f c': 1, ' ca': 1, 'cae': 2, 'aes': 2, 'esa': 2, 'sar': 2, 'arC': 2, 'rCi': 2, 'Cip': 2, 'iph': 2, 'phe': 2, 'her': 2, 'erE': 2, 'rEn': 2, 'Enc': 2, 'ncr': 2, 'cry': 2, 'ryp': 2, 'ypt': 2, 'pto': 2, 'tor': 2, 'or(': 2, 'r(s': 1, '(st': 1, 'str': 2, 'tri': 2, 'rin': 3, 'ing': 2, 'ng,': 1, 'g, ': 1, ', k': 2, ' ke': 4, 'key': 4, 'ey)': 3, 'y):': 2, '):\n': 2, ':\n ': 3, '\n  ': 7, '   ': 18, '  n': 4, ' ne': 7, 'new': 9, 'ewL': 9, 'wLe': 9, 'Let': 9, 'ett': 13, 'tte': 13, 'ter': 13, 'ers': 3, 'rs ': 1, 's =': 1, ' = ': 3, '= [': 1, ' []': 1, '[]\n': 1, ']\n ': 1, 'ewK': 2, 'wKe': 2, 'Key': 2, 'ey ': 2, 'y =': 1, '= k': 1, 'y %': 1, ' % ': 2, '% 2': 1, ' 26': 1, '26\n': 1, '6\n ': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r l': 1, ' le': 1, 'let': 4, 'er ': 1, 'r i': 1, ' in': 1, 'in ': 1, 'n s': 1, ' st': 1, 'ng:': 1, 'g:\n': 1, 'rs.': 1, 's.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(g': 1, '(ge': 1, 'get': 2, 'etN': 2, 'tNe': 2, 'New': 2, 'er(': 2, 'r(l': 2, '(le': 3, 'er,': 2, 'r, ': 2, ', n': 1, 'y))': 1, '))\n': 2, ')\n ': 1, '  r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n ""': 1, ' """"': 1, '"""".': 1, '"".j': 1, '.jo': 1, 'joi': 1, 'oin': 1, 'in(': 1, 'n(n': 1, '(ne': 2, 'rs)': 1, 's)\n': 1, ')\n\n': 2, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'f g': 1, ' ge': 1, 'erC': 4, 'rCo': 4, 'Cod': 4, 'ode': 4, 'de ': 3, 'e =': 1, '= o': 1, ' or': 1, 'ord': 1, 'rd(': 1, 'd(l': 1, 'er)': 1, 'r) ': 1, ') +': 1, ' + ': 2, '+ k': 1, 'ey\n': 1, 'y\n ': 1, 'n c': 1, ' ch': 2, 'chr': 2, 'hr(': 2, 'r(n': 1, 'de)': 1, 'e) ': 1, ') i': 1, ' if': 1, 'if ': 1, 'f n': 1, 'e <': 1, ' <=': 1, '<= ': 1, '= 1': 1, ' 12': 2, '122': 2, '22 ': 1, '2 e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se ': 1, 'e c': 1, 'r(9': 1, '(96': 1, '96 ': 1, '6 +': 1, '+ n': 1, 'e %': 1, '% 1': 1, '22)': 1, '2)\n': 1, '\n\np': 1, '\npr': 1, 'pri': 1, 'int': 1, 'nt(': 1, 't(c': 1, '(ca': 1, 'r(""': 1, '(""x': 1, '""xy': 1, 'xyz': 1, 'yz""': 1, 'z"",': 1, '"", ': 1, ', 2': 1, ' 2)': 1, '2))': 1}"
Mahamudul Hasan Mithhu,depthFirst.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'class': 1, 'node:': 1, 'def': 3, '__init__(self,': 1, 'name):': 2, 'self.children': 1, '=': 2, '[]': 1, 'self.name': 1, 'name': 1, 'addchildren(self,': 1, 'self.children.append(node(name))': 1, 'depthfirst(self,': 1, 'array):': 1, 'array.append(self.name)': 1, 'for': 1, 'child': 1, 'in': 1, 'self.children:': 1, 'child.depthfirst(array)': 1, 'return': 1, 'array': 1}","{'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's N': 1, ' No': 1, 'Nod': 2, 'ode': 2, 'de:': 1, 'e:\n': 1, ':\n ': 5, '\n  ': 10, '   ': 52, '  d': 3, ' de': 4, 'def': 3, 'ef ': 3, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 4, 'sel': 8, 'elf': 8, 'lf,': 3, 'f, ': 3, ', n': 2, ' na': 3, 'nam': 6, 'ame': 6, 'me)': 4, 'e):': 2, '):\n': 3, '  s': 3, ' se': 4, 'lf.': 5, 'f.c': 3, '.ch': 3, 'chi': 5, 'hil': 6, 'ild': 6, 'ldr': 4, 'dre': 4, 'ren': 4, 'en ': 1, 'n =': 1, ' = ': 2, '= [': 1, ' []': 1, '[]\n': 1, ']\n ': 1, 'f.n': 2, '.na': 2, 'me ': 1, 'e =': 1, '= n': 1, 'me\n': 1, 'e\n\n': 1, '\n\n ': 2, 'f a': 1, ' ad': 1, 'add': 1, 'ddC': 1, 'dCh': 1, 'Chi': 1, 'en(': 1, 'n(s': 1, 'en.': 1, 'n.a': 1, '.ap': 2, 'app': 2, 'ppe': 2, 'pen': 2, 'end': 2, 'nd(': 2, 'd(N': 1, '(No': 1, 'de(': 1, 'e(n': 1, '(na': 1, 'e))': 1, '))\n': 1, ')\n\n': 1, 'f d': 1, 'dep': 2, 'ept': 2, 'pth': 2, 'thF': 2, 'hFi': 2, 'Fir': 2, 'irs': 2, 'rst': 2, 'st(': 2, 't(s': 1, ', a': 1, ' ar': 3, 'arr': 4, 'rra': 4, 'ray': 4, 'ay)': 2, 'y):': 1, '  a': 1, 'ay.': 1, 'y.a': 1, 'd(s': 1, 'e)\n': 1, ')\n ': 2, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r c': 1, ' ch': 2, 'ld ': 1, 'd i': 1, ' in': 1, 'in ': 1, 'n s': 1, 'en:': 1, 'n:\n': 1, '  c': 1, 'ld.': 1, 'd.d': 1, '.de': 1, 't(a': 1, '(ar': 1, 'y)\n': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n a': 1, 'ay\n': 1}"
Mahamudul Hasan Mithhu,findClosestValueinBST.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 13, 'def': 4, 'findclosestvalueinbst(tree,': 2, 'target):': 2, 'return': 7, 'findclosestvalueinbsthelper(tree,': 4, 'target,': 6, 'float(""inf""))': 2, 'closest):': 2, 'if': 5, 'tree': 2, 'is': 2, 'none:': 2, 'closest': 5, 'abs(target': 4, '-': 4, 'closest)': 4, '>': 4, 'tree.value):': 1, '=': 5, 'tree.value': 1, 'target': 4, '<': 2, 'tree.value:': 2, 'findclosestvalueinbsthelper(tree.left,': 1, 'elif': 2, 'findclosestvalueinbsthelper(tree.right,': 1, 'else:': 2, 'currentnode': 4, 'while': 1, 'not': 1, 'currentnode.value):': 1, 'currentnode.tree': 1, 'currentnode.value:': 2, 'currentnode.left': 1, 'currentnode.right': 1, 'break': 1}","{'# d': 2, ' de': 2, 'def': 4, 'ef ': 4, 'f f': 4, ' fi': 8, 'fin': 8, 'ind': 8, 'ndc': 8, 'dcl': 8, 'clo': 19, 'los': 19, 'ose': 19, 'ses': 19, 'est': 19, 'stv': 8, 'tva': 8, 'val': 15, 'alu': 15, 'lue': 15, 'uei': 8, 'ein': 8, 'inB': 8, 'nBS': 8, 'BST': 8, 'ST(': 2, 'T(t': 2, '(tr': 8, 'tre': 15, 'ree': 15, 'ee,': 6, 'e, ': 6, ', t': 8, ' ta': 12, 'tar': 16, 'arg': 16, 'rge': 16, 'get': 16, 'et)': 2, 't):': 4, '):\n': 6, ':\n#': 7, '\n# ': 12, '#  ': 11, '   ': 125, '  r': 7, ' re': 7, 'ret': 7, 'etu': 7, 'tur': 7, 'urn': 7, 'rn ': 7, 'n f': 4, 'STh': 6, 'The': 6, 'hel': 6, 'elp': 6, 'lpe': 6, 'per': 6, 'er(': 6, 'r(t': 6, 'et,': 6, 't, ': 8, ', f': 2, ' fl': 2, 'flo': 2, 'loa': 2, 'oat': 2, 'at(': 2, 't(""': 2, '(""i': 2, '""in': 2, 'inf': 2, 'nf""': 2, 'f"")': 2, '""))': 2, '))\n': 2, ')\n\n': 2, '\n\n#': 2, ', c': 4, ' cl': 11, 'st)': 6, '  i': 5, ' if': 5, 'if ': 7, 'f t': 5, ' tr': 6, 'ee ': 1, 'e i': 2, ' is': 2, 'is ': 2, 's N': 1, ' No': 2, 'Non': 2, 'one': 2, 'ne:': 2, 'e:\n': 8, 'n c': 3, 'st\n': 3, 't\n#': 1, 'f a': 2, ' ab': 4, 'abs': 4, 'bs(': 4, 's(t': 4, '(ta': 4, 'et ': 8, 't -': 4, ' - ': 4, '- c': 3, 't) ': 2, ') >': 2, ' > ': 4, '> a': 2, '- t': 1, 'ee.': 6, 'e.v': 7, '.va': 7, 'ue)': 2, 'e):': 2, '  c': 5, 'st ': 2, 't =': 2, ' = ': 5, '= t': 2, 'ue\n': 1, 'e\n\n': 1, 't <': 2, ' < ': 2, '< t': 1, 'ue:': 4, 'e.l': 2, '.le': 2, 'lef': 2, 'eft': 2, 'ft,': 1, 't)\n': 2, ')\n#': 2, '  e': 4, ' el': 4, 'eli': 2, 'lif': 2, 't >': 2, '> t': 1, 'e.r': 2, '.ri': 2, 'rig': 2, 'igh': 2, 'ght': 2, 'ht,': 1, 'els': 2, 'lse': 2, 'se:': 2, 't\n\n': 1, '\n\n\n': 2, '\n\nd': 2, '\nde': 2, ':\n ': 7, '\n  ': 12, ' cu': 10, 'cur': 10, 'urr': 10, 'rre': 10, 'ren': 10, 'ent': 10, 'ntN': 10, 'tNo': 10, 'Nod': 10, 'ode': 10, 'de ': 4, 'e =': 3, 'ee\n': 2, 'e\n ': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e c': 1, 's n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't N': 1, 'de.': 6, '= c': 3, 'e.t': 1, '.tr': 1, '< c': 1, 'ft\n': 1, 't\n ': 2, '> c': 1, 'ht\n': 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n ': 1}"
Mahamudul Hasan Mithhu,FindThreeLargest.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'def': 3, 'findthreelargest(array):': 1, 'threelargest': 2, '=': 3, '[none,': 1, 'none,': 1, 'none]': 1, 'for': 2, 'num': 5, 'in': 2, 'array:': 1, 'updatelargest(threelargest,': 2, 'num)': 1, 'return': 1, 'num):': 1, 'if': 2, 'threelargest[2]': 1, 'is': 3, 'not': 3, 'none': 3, 'and': 3, '>': 3, 'threelargest[2]:': 1, 'shiftandupdate(threelargest,': 3, 'num,': 4, '2)': 1, 'elif': 2, 'threelargest[1]': 1, 'threelargest[1]:': 1, '1)': 1, 'threelargest[0]': 1, 'threelargest[0]:': 1, '0)': 1, 'shiftandupdate(array,': 1, 'idx):': 1, 'i': 2, 'idx+1:': 1, '==': 1, 'idx:': 1, 'array[i]': 2, 'else:': 1, 'array[i+1]': 1}","{'def': 3, 'ef ': 3, 'f f': 1, ' fi': 1, 'fin': 1, 'ind': 1, 'ndT': 1, 'dTh': 1, 'Thr': 1, 'hre': 14, 'ree': 14, 'eeL': 14, 'eLa': 16, 'Lar': 16, 'arg': 16, 'rge': 16, 'ges': 16, 'est': 16, 'st(': 3, 't(a': 1, '(ar': 2, 'arr': 6, 'rra': 6, 'ray': 6, 'ay)': 1, 'y):': 1, '):\n': 3, ':\n ': 10, '\n  ': 15, '   ': 70, '  t': 1, ' th': 8, 'thr': 13, 'st ': 1, 't =': 1, ' = ': 3, '= [': 1, ' [N': 1, '[No': 1, 'Non': 6, 'one': 6, 'ne,': 2, 'e, ': 2, ', N': 2, ' No': 5, 'ne]': 1, 'e]\n': 1, ']\n ': 1, '  f': 2, ' fo': 2, 'for': 2, 'or ': 2, 'r n': 1, ' nu': 11, 'num': 11, 'um ': 4, 'm i': 1, ' in': 2, 'in ': 2, 'n a': 1, ' ar': 4, 'ay:': 1, 'y:\n': 1, '  u': 1, ' up': 2, 'upd': 2, 'pda': 6, 'dat': 6, 'ate': 6, 'teL': 2, 't(t': 2, '(th': 5, 'st,': 5, 't, ': 5, ', n': 6, 'um)': 2, 'm)\n': 1, ')\n ': 3, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n t': 1, 'st\n': 1, 't\n\n': 1, '\n\n\n': 2, '\n\nd': 2, '\nde': 2, 'f u': 1, 'm):': 1, '  i': 2, ' if': 2, 'if ': 4, 'f t': 3, 'st[': 6, 't[2': 2, '[2]': 2, '2] ': 1, '] i': 3, ' is': 3, 'is ': 3, 's n': 3, ' no': 3, 'not': 3, 'ot ': 3, 't N': 3, 'ne ': 3, 'e a': 3, ' an': 3, 'and': 3, 'nd ': 3, 'd n': 3, 'm >': 3, ' > ': 3, '> t': 3, '2]:': 1, ']:\n': 3, '  s': 3, ' sh': 4, 'shi': 4, 'hif': 4, 'ift': 4, 'ftA': 4, 'tAn': 4, 'And': 4, 'ndU': 4, 'dUp': 4, 'Upd': 4, 'te(': 4, 'e(t': 3, 'um,': 4, 'm, ': 4, ', 2': 1, ' 2)': 1, '2)\n': 1, '  e': 3, ' el': 3, 'eli': 2, 'lif': 2, 't[1': 2, '[1]': 2, '1] ': 1, '1]:': 1, ', 1': 1, ' 1)': 1, '1)\n': 1, 't[0': 2, '[0]': 2, '0] ': 1, '0]:': 1, ', 0': 1, ' 0)': 1, '0)\n': 1, ')\n\n': 1, 'f s': 1, 'e(a': 1, 'ay,': 1, 'y, ': 1, ', i': 1, ' id': 3, 'idx': 3, 'dx)': 1, 'x):': 1, 'r i': 1, ' i ': 2, 'i i': 1, 'n i': 1, 'dx+': 1, 'x+1': 1, '+1:': 1, '1:\n': 1, 'f i': 1, 'i =': 1, ' ==': 1, '== ': 1, '= i': 1, 'dx:': 1, 'x:\n': 1, '  a': 2, 'ay[': 3, 'y[i': 3, '[i]': 2, 'i] ': 2, '] =': 2, '= n': 1, 'um\n': 1, 'm\n ': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, '= a': 1, '[i+': 1, 'i+1': 1, '+1]': 1, '1]\n': 1}"
Mahamudul Hasan Mithhu,insertionSort.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'def': 2, 'insertionsort(array):': 1, 'for': 1, 'i': 2, 'in': 1, 'range(1,': 1, 'len(array)):': 1, 'j': 3, '=': 2, 'while': 1, '>': 1, '0': 1, 'and': 1, 'array[j]': 2, '<': 1, 'array[j-1]:': 1, 'swap(j,': 1, 'j-1,': 1, 'array)': 1, '-=': 1, '1': 1, 'return': 1, 'array': 1, 'swap(i,': 1, 'j,': 1, 'array):': 1, 'array[i],': 1, 'array[j],': 1, 'array[i]': 1, 'print(insertionsort([2,': 1, '1,': 1, '3,': 1, '9,': 1, '1]))': 1}","{'def': 2, 'ef ': 2, 'f i': 1, ' in': 2, 'ins': 2, 'nse': 2, 'ser': 2, 'ert': 2, 'rti': 2, 'tio': 2, 'ion': 2, 'onS': 2, 'nSo': 2, 'Sor': 2, 'ort': 2, 'rt(': 2, 't(a': 1, '(ar': 2, 'arr': 11, 'rra': 11, 'ray': 11, 'ay)': 4, 'y):': 2, '):\n': 3, ':\n ': 4, '\n  ': 7, '   ': 38, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, 'in ': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(1': 1, '(1,': 1, '1, ': 3, ', l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(a': 1, 'y))': 1, ')):': 1, '  j': 2, ' j ': 3, 'j =': 1, ' = ': 2, '= i': 1, ' i\n': 1, 'i\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e j': 1, 'j >': 1, ' > ': 1, '> 0': 1, ' 0 ': 1, '0 a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd a': 1, ' ar': 9, 'ay[': 6, 'y[j': 4, '[j]': 3, 'j] ': 2, '] <': 1, ' < ': 1, '< a': 1, '[j-': 1, 'j-1': 2, '-1]': 1, '1]:': 1, ']:\n': 1, '  s': 1, ' sw': 2, 'swa': 2, 'wap': 2, 'ap(': 2, 'p(j': 1, '(j,': 1, 'j, ': 2, ', j': 2, ' j-': 1, '-1,': 1, ', a': 4, 'y)\n': 1, ')\n ': 1, 'j -': 1, ' -=': 1, '-= ': 1, '= 1': 1, ' 1\n': 1, '1\n ': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n a': 1, 'ay\n': 1, 'y\n\n': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'f s': 1, 'p(i': 1, '(i,': 1, 'i, ': 1, ' j,': 1, '  a': 1, 'y[i': 2, '[i]': 2, 'i],': 1, '], ': 2, '] =': 1, '= a': 1, 'j],': 1, 'i]\n': 1, ']\n\n': 1, '\n\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 't(i': 1, '(in': 1, 't([': 1, '([2': 1, '[2,': 1, '2, ': 1, ', 1': 2, ' 1,': 1, ', 3': 1, ' 3,': 1, '3, ': 1, ', 9': 1, ' 9,': 1, '9, ': 1, ' 1]': 1, '1])': 1, ']))': 1, '))\n': 1}"
Mahamudul Hasan Mithhu,invertBinaryTree.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 11, 'time': 2, '-': 2, 'o(n)': 3, 'space-': 2, 'def': 4, 'invertbinarytree(tree):': 1, 'queue': 1, '=': 4, '[tree]': 1, 'while': 1, 'len(queue):': 1, 'current': 1, 'queue.pop(0)': 1, 'swapleftandright(tree)': 2, 'queue.append(current.left)': 1, 'queue.append(current.right)': 1, 'swapleftandright(tree):': 2, 'tree.left,': 2, 'tree.right': 2, 'tree.right,': 2, 'tree.left': 2, 'o(log(n))': 1, 'inversebinaarytree(tree):': 1, 'if': 1, 'tree': 1, 'is': 1, 'none:': 1, 'return': 1, 'inversebinaarytree(tree.left)': 1, 'inversebinaarytree(tree.right)': 1}","{'# t': 2, ' ti': 2, 'tim': 2, 'ime': 2, 'me ': 2, 'e -': 2, ' - ': 2, '- o': 4, ' o(': 4, 'o(n': 3, '(n)': 4, 'n) ': 2, ') s': 2, ' sp': 2, 'spa': 2, 'pac': 2, 'ace': 2, 'ce-': 2, 'e- ': 2, 'n)\n': 1, ')\n\n': 3, '\n\n#': 3, '\n# ': 10, '# d': 2, ' de': 2, 'def': 4, 'ef ': 4, 'f i': 2, ' in': 4, 'inv': 4, 'nve': 4, 'ver': 4, 'ert': 1, 'rtB': 1, 'tBi': 1, 'Bin': 4, 'ina': 4, 'nar': 1, 'ary': 4, 'ryT': 4, 'yTr': 4, 'Tre': 4, 'ree': 22, 'ee(': 4, 'e(t': 4, '(tr': 8, 'tre': 18, 'ee)': 6, 'e):': 5, '):\n': 5, ':\n#': 3, '#  ': 7, '   ': 53, '  q': 3, ' qu': 4, 'que': 5, 'ueu': 5, 'eue': 5, 'ue ': 1, 'e =': 1, ' = ': 4, '= [': 1, ' [t': 1, '[tr': 1, 'ee]': 1, 'e]\n': 1, ']\n#': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(q': 1, '(qu': 1, 'ue)': 1, '  c': 1, ' cu': 1, 'cur': 3, 'urr': 3, 'rre': 3, 'ren': 3, 'ent': 3, 'nt ': 1, 't =': 3, '= q': 1, 'ue.': 3, 'e.p': 1, '.po': 1, 'pop': 1, 'op(': 1, 'p(0': 1, '(0)': 1, '0)\n': 1, ')\n#': 3, '  s': 2, ' sw': 4, 'swa': 4, 'wap': 4, 'apL': 4, 'pLe': 4, 'Lef': 4, 'eft': 10, 'ftA': 4, 'tAn': 4, 'And': 4, 'ndR': 4, 'dRi': 4, 'Rig': 4, 'igh': 10, 'ght': 10, 'ht(': 4, 't(t': 4, 'e)\n': 2, 'e.a': 2, '.ap': 2, 'app': 2, 'ppe': 2, 'pen': 2, 'end': 2, 'nd(': 2, 'd(c': 2, '(cu': 2, 'nt.': 2, 't.l': 1, '.le': 6, 'lef': 6, 'ft)': 2, 't)\n': 4, 't.r': 1, '.ri': 6, 'rig': 6, 'ht)': 2, '\n\n\n': 2, 'f s': 2, '  t': 2, ' tr': 9, 'ee.': 10, 'e.l': 5, 'ft,': 2, 't, ': 4, ', t': 4, 'e.r': 5, 'ht ': 2, '= t': 2, 'ht,': 2, 'ft\n': 2, 't\n\n': 1, 'o(l': 1, '(lo': 1, 'log': 1, 'og(': 1, 'g(n': 1, 'n))': 1, '))\n': 1, ')\nd': 1, '\nde': 2, 'ers': 3, 'rse': 3, 'seB': 3, 'eBi': 3, 'naa': 3, 'aar': 3, ':\n ': 3, '\n  ': 6, '  i': 3, ' if': 1, 'if ': 1, 'f t': 1, 'ee ': 1, 'e i': 1, ' is': 1, 'is ': 1, 's N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne:': 1, 'e:\n': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn\n': 1, 'n\n ': 1, ')\n ': 2, '\n\nd': 1}"
Mahamudul Hasan Mithhu,longestPalindromicSubstring.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'def': 2, 'longestpalindromicsubstring(string):': 1, 'currentlongest': 2, '=': 5, '[0,': 1, '1]': 1, 'for': 1, 'i': 1, 'in': 1, 'range(1,': 1, 'len(string)):': 1, 'odd': 1, 'getlongestpalindromefrom(string,': 3, 'i-1,': 2, 'i+1)': 1, 'even': 1, 'i)': 1, 'longest': 1, 'max(odd,': 1, 'even,': 1, 'key=lambda': 2, 'x:': 2, 'x[1]': 2, '-': 2, 'x[0])': 2, 'max(longest,': 1, 'currentlongest,': 1, 'return': 2, 'string[currentlongest[0]:': 1, 'currentlongest[1]]': 1, 'leftidx,': 1, 'rightidx):': 1, 'while': 1, 'leftidx': 2, '>=': 1, '0': 1, 'and': 1, 'rightidx': 2, '<': 1, 'len(string):': 1, 'if': 1, 'string[leftidx]': 1, '!=': 1, 'string[rightidx]:': 1, 'break': 1, '-=': 1, '1': 2, '+=': 1, '[leftidx': 1, '+': 1, '1,': 1, 'rightidx]': 1, 'print(longestpalindromicsubstring(""abaygxaxgytub""))': 1}","{'def': 2, 'ef ': 2, 'f l': 1, ' lo': 2, 'lon': 4, 'ong': 12, 'nge': 13, 'ges': 12, 'est': 12, 'stP': 5, 'tPa': 5, 'Pal': 5, 'ali': 5, 'lin': 5, 'ind': 5, 'ndr': 5, 'dro': 5, 'rom': 8, 'omi': 2, 'mic': 2, 'icS': 2, 'cSu': 2, 'Sub': 2, 'ubs': 2, 'bst': 2, 'str': 11, 'tri': 11, 'rin': 12, 'ing': 11, 'ng(': 2, 'g(s': 1, '(st': 6, 'ng)': 3, 'g):': 2, '):\n': 4, ':\n ': 5, '\n  ': 14, '   ': 89, '  c': 2, ' cu': 4, 'cur': 5, 'urr': 5, 'rre': 5, 'ren': 5, 'ent': 5, 'ntL': 5, 'tLo': 8, 'Lon': 8, 'st ': 3, 't =': 3, ' = ': 5, '= [': 1, ' [0': 1, '[0,': 1, '0, ': 1, ', 1': 1, ' 1]': 1, '1]\n': 1, ']\n ': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, ' in': 1, 'in ': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'ge(': 1, 'e(1': 1, '(1,': 1, '1, ': 4, ', l': 2, ' le': 5, 'len': 2, 'en(': 2, 'n(s': 2, 'g))': 1, ')):': 1, '  o': 1, ' od': 1, 'odd': 2, 'dd ': 1, 'd =': 1, '= g': 2, ' ge': 3, 'get': 3, 'etL': 3, 'ome': 3, 'meF': 3, 'eFr': 3, 'Fro': 3, 'om(': 3, 'm(s': 3, 'ng,': 3, 'g, ': 3, ', i': 4, ' i-': 2, 'i-1': 2, '-1,': 2, ' i+': 1, 'i+1': 1, '+1)': 1, '1)\n': 1, ')\n ': 4, '  e': 1, ' ev': 2, 'eve': 2, 'ven': 2, 'en ': 1, 'n =': 1, ' i)': 1, 'i)\n': 1, '  l': 2, '= m': 2, ' ma': 2, 'max': 2, 'ax(': 2, 'x(o': 1, '(od': 1, 'dd,': 1, 'd, ': 1, ', e': 1, 'en,': 1, 'n, ': 1, ', k': 1, ' ke': 2, 'key': 2, 'ey=': 2, 'y=l': 2, '=la': 2, 'lam': 2, 'amb': 2, 'mbd': 2, 'bda': 2, 'da ': 2, 'a x': 2, ' x:': 2, 'x: ': 2, ': x': 2, ' x[': 4, 'x[1': 2, '[1]': 3, '1] ': 2, '] -': 2, ' - ': 2, '- x': 2, 'x[0': 2, '[0]': 3, '0])': 2, '])\n': 2, 'x(l': 1, '(lo': 2, 'st,': 2, 't, ': 1, ', c': 1, 't,\n': 1, ',\n ': 1, '  k': 1, '  r': 3, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n s': 1, ' st': 3, 'ng[': 3, 'g[c': 1, '[cu': 1, 'st[': 2, 't[0': 1, '0]:': 1, ']: ': 1, ': c': 1, 't[1': 1, '1]]': 1, ']]\n': 1, ']\n\n': 2, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'f g': 1, 'lef': 5, 'eft': 5, 'ftI': 5, 'tId': 10, 'Idx': 10, 'dx,': 1, 'x, ': 1, ', r': 2, ' ri': 4, 'rig': 5, 'igh': 5, 'ght': 5, 'htI': 5, 'dx)': 1, 'x):': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 1, 'dx ': 5, 'x >': 1, ' >=': 1, '>= ': 1, '= 0': 1, ' 0 ': 1, '0 a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd r': 1, 'x <': 1, ' < ': 1, '< l': 1, '  i': 1, ' if': 1, 'if ': 1, 'f s': 1, 'g[l': 1, '[le': 2, 'dx]': 3, 'x] ': 1, '] !': 1, ' !=': 1, '!= ': 1, '= s': 1, 'g[r': 1, '[ri': 1, 'x]:': 1, ']:\n': 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n ': 1, 'x -': 1, ' -=': 1, '-= ': 1, '= 1': 2, ' 1\n': 2, '1\n ': 1, 'x +': 2, ' +=': 1, '+= ': 1, '1\n\n': 1, '\n\n ': 1, 'n [': 1, ' [l': 1, ' + ': 1, '+ 1': 1, ' 1,': 1, 'x]\n': 1, '\n\np': 1, '\npr': 1, 'pri': 1, 'int': 1, 'nt(': 1, 't(l': 1, 'g(""': 1, '(""a': 1, '""ab': 1, 'aba': 1, 'bay': 1, 'ayg': 1, 'ygx': 1, 'gxa': 1, 'xax': 1, 'axg': 1, 'xgy': 1, 'gyt': 1, 'ytu': 1, 'tub': 1, 'ub""': 1, 'b"")': 1, '""))': 1, '))\n': 1}"
Mahamudul Hasan Mithhu,mergeSort.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'def': 5, 'mergesort(array):': 2, 'if': 5, 'len(array)': 3, '==': 2, '1:': 2, 'return': 6, 'array': 3, 'middleidx': 4, '=': 20, '//': 2, '2': 2, 'lefthalf': 1, 'array[:middleidx]': 1, 'righthalf': 1, 'array[middleidx:]': 1, 'mergesortedarrays(mergesort(lefthalf),': 1, 'mergesort(righthalf))': 1, 'mergesortedarrays(lefthalf,': 1, 'righthalf):': 1, 'sortedarrays': 2, '[none]': 1, '*': 1, '(len(lefthalf)': 1, '+': 3, 'len(righthalf))': 1, 'k': 8, 'i': 10, 'j': 10, '0': 1, 'while': 6, '<': 4, 'len(lefthalf)': 1, 'and': 2, 'len(righthalf):': 2, 'lefthalf[i]': 3, '<=': 7, 'righthalf[j]:': 1, 'sortedarrays[k]': 4, '+=': 14, '1': 15, 'else:': 2, 'righthalf[j]': 2, 'len(lefthalf):': 1, '#': 33, 'auxilaryarray': 1, 'array[:]': 1, 'mergesorthelper(array,': 1, '0,': 1, 'len(array)-1,': 1, 'auxilaryarray)': 2, 'mergesorthelper(mainarray,': 1, 'startidx,': 4, 'endidx,': 4, 'auxilaryarray):': 2, 'startidx': 3, 'endidx:': 3, '(startidx': 1, 'endidx)': 1, 'mergesorthelper(auxilaryarray,': 2, 'middleidx,': 3, 'mainarray)': 2, 'middleidx+1,': 1, 'domerge(mainarray,': 2, 'auxilaryarray[i]': 3, 'auxilaryarray[j]:': 1, 'mainarray[k]': 4, 'auxilaryarray[j]': 2, 'middleidx:': 1, 'print(mergesort([2,': 1, '3,': 1, '1]))': 1}","{'def': 5, 'ef ': 5, 'f m': 4, ' me': 9, 'mer': 11, 'erg': 13, 'rge': 13, 'geS': 11, 'eSo': 11, 'Sor': 11, 'ort': 17, 'rt(': 5, 't(a': 2, '(ar': 7, 'arr': 13, 'rra': 43, 'ray': 43, 'ay)': 12, 'y):': 4, '):\n': 8, ':\n ': 8, '\n  ': 25, '   ': 288, '  i': 10, ' if': 5, 'if ': 5, 'f l': 3, ' le': 13, 'len': 10, 'en(': 10, 'n(a': 4, 'y) ': 3, ') =': 1, ' ==': 2, '== ': 2, '= 1': 16, ' 1:': 2, '1:\n': 2, '  r': 7, ' re': 6, 'ret': 6, 'etu': 6, 'tur': 6, 'urn': 6, 'rn ': 5, 'n a': 3, ' ar': 6, 'ay\n': 3, 'y\n\n': 2, '\n\n ': 2, '  m': 9, ' mi': 9, 'mid': 11, 'idd': 11, 'ddl': 11, 'dle': 11, 'leI': 11, 'eId': 11, 'Idx': 27, 'dx ': 6, 'x =': 3, ' = ': 20, '= l': 3, ') /': 2, ' //': 2, '// ': 2, '/ 2': 2, ' 2\n': 2, '2\n ': 1, '  l': 1, 'lef': 9, 'eft': 9, 'ftH': 9, 'tHa': 18, 'Hal': 18, 'alf': 18, 'lf ': 2, 'f =': 2, '= a': 8, 'ay[': 13, 'y[:': 2, '[:m': 1, ':mi': 1, 'dx]': 1, 'x]\n': 1, ']\n ': 6, ' ri': 5, 'rig': 9, 'igh': 9, 'ght': 9, 'htH': 9, 'y[m': 1, '[mi': 1, 'dx:': 5, 'x:]': 1, ':]\n': 2, 'n m': 1, 'rte': 8, 'ted': 8, 'edA': 8, 'dAr': 8, 'Arr': 30, 'ays': 8, 'ys(': 2, 's(m': 1, '(me': 2, 't(l': 1, '(le': 6, 'lf)': 9, 'f),': 1, '), ': 1, ', m': 7, 't(r': 1, '(ri': 4, 'f))': 2, '))\n': 3, ')\n\n': 2, '\n\n\n': 3, '\n\nd': 1, '\nde': 1, 's(l': 1, 'lf,': 1, 'f, ': 1, ', r': 1, 'f):': 4, '  s': 5, ' so': 6, 'sor': 6, 'ys ': 1, 's =': 1, '= [': 1, ' [N': 1, '[No': 1, 'Non': 1, 'one': 1, 'ne]': 1, 'e] ': 1, '] *': 1, ' * ': 1, '* (': 1, ' (l': 1, 'n(l': 3, 'f) ': 2, ') +': 1, ' + ': 3, '+ l': 1, 'n(r': 3, ')\n ': 1, '  k': 8, ' k ': 8, 'k =': 2, '= i': 1, ' i ': 10, 'i =': 2, '= j': 1, ' j ': 10, 'j =': 2, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  w': 6, ' wh': 6, 'whi': 6, 'hil': 6, 'ile': 6, 'le ': 6, 'e i': 4, 'i <': 4, ' < ': 4, '< l': 4, ') a': 1, ' an': 2, 'and': 2, 'nd ': 2, 'd j': 2, 'j <': 4, 'lf[': 6, 'f[i': 3, '[i]': 6, 'i] ': 2, '] <': 2, ' <=': 7, '<= ': 7, '= r': 3, 'f[j': 3, '[j]': 6, 'j]:': 2, ']:\n': 2, 'ys[': 4, 's[k': 4, '[k]': 8, 'k] ': 8, '] =': 8, 'i]\n': 4, 'i +': 4, ' +=': 14, '+= ': 14, ' 1\n': 15, '1\n ': 6, '  e': 2, ' el': 2, 'els': 2, 'lse': 2, 'se:': 2, 'e:\n': 2, 'j]\n': 4, '  j': 5, 'j +': 4, 'k +': 6, '1\n\n': 3, 'e j': 2, 'n s': 1, 'ys\n': 1, 's\n\n': 1, '\n\n#': 4, '\n# ': 33, '# d': 3, ' de': 3, ':\n#': 10, '#  ': 30, ') <': 1, 'y\n#': 1, '  a': 1, ' au': 11, 'aux': 13, 'uxi': 13, 'xil': 13, 'ila': 13, 'lar': 13, 'ary': 13, 'ryA': 13, 'yAr': 13, 'ay ': 1, 'y =': 1, '[:]': 1, ']\n#': 5, 'rtH': 4, 'tHe': 4, 'Hel': 4, 'elp': 4, 'lpe': 4, 'per': 4, 'er(': 4, 'r(a': 3, 'ay,': 6, 'y, ': 6, ', 0': 1, ' 0,': 1, '0, ': 1, ', l': 1, 'y)-': 1, ')-1': 1, '-1,': 1, '1, ': 2, ', a': 4, 'y)\n': 4, ')\n#': 3, 'r(m': 1, '(ma': 3, 'mai': 9, 'ain': 9, 'inA': 9, 'nAr': 9, ', s': 4, ' st': 7, 'sta': 8, 'tar': 8, 'art': 8, 'rtI': 8, 'tId': 8, 'dx,': 11, 'x, ': 11, ', e': 4, ' en': 8, 'end': 8, 'ndI': 8, 'dId': 8, 'f s': 1, '= e': 3, 'x:\n': 4, 'rn\n': 1, 'n\n#': 1, '= (': 1, ' (s': 1, '(st': 1, 'x +': 2, '+ e': 1, 'dx)': 1, 'x) ': 1, '2\n#': 1, '(au': 2, ' ma': 6, 'dx+': 1, 'x+1': 1, '+1,': 1, '  d': 1, ' do': 2, 'doM': 2, 'oMe': 2, 'Mer': 2, 'ge(': 2, 'e(m': 2, 'f d': 1, '= s': 2, 'dx\n': 2, 'x\n#': 2, '= m': 3, '+ 1': 1, '1\n#': 6, 'x a': 1, 'f a': 1, 'y[i': 3, 'y[j': 3, 'y[k': 4, '\n\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 't(m': 1, 't([': 1, '([2': 1, '[2,': 1, '2, ': 1, ', 3': 1, ' 3,': 1, '3, ': 1, ', 1': 1, ' 1]': 1, '1])': 1, ']))': 1}"
Mahamudul Hasan Mithhu,minHeapConstruct.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'class': 1, 'minheap:': 1, 'def': 8, '__init__(self,': 1, 'array):': 2, 'self.heap': 1, '=': 13, 'self.buildheap(array)': 1, 'buildheap(self,': 1, 'firstparentidx': 1, '(len(array)': 1, '-': 6, '2)': 1, '//': 3, '2': 9, 'for': 1, 'currentidx': 8, 'in': 1, 'reversed(range(firstparentidx)):': 1, 'self.siftdown(currentidx,': 1, 'len(array)': 1, '1,': 3, 'array)': 1, 'return': 3, 'array': 1, 'siftup(self,': 1, 'currentidx,': 2, 'heap):': 3, 'parentidx': 3, '(currentidx': 2, '1)': 2, 'while': 2, '>': 1, '0': 1, 'and': 2, 'heap[currentidx]': 1, '<': 3, 'heap[parentidx]:': 1, 'self.swap(currentidx,': 2, 'parentidx,': 1, 'heap)': 2, 'siftdown(self,': 1, 'endidx,': 1, 'childoneidx': 5, '*': 4, '+': 4, '1': 2, '<=': 2, 'endidx:': 1, 'childtwoidx': 2, 'if': 3, 'endidx': 1, 'else': 1, '-1': 2, '!=': 1, 'heap[childtwoidx]': 1, 'heap[childoneidx]:': 1, 'idxtoswap': 3, 'else:': 2, 'heap[idxtoswap]': 1, 'heap[currentidx]:': 1, 'idxtoswap,': 1, 'break': 1, 'remove(self):': 1, 'self.swap(0,': 1, 'len(self.heap)': 2, 'self.heap)': 3, 'valuetoremove': 2, 'self.heap.pop()': 1, 'self.siftdown(0,': 1, 'peek(self):': 1, 'self.heap[0]': 1, 'insert(self,': 1, 'value):': 1, 'self.heap.append(value)': 1, 'self.siftup(len(self.heap)-1,': 1, 'swap(self,': 1, 'i,': 1, 'j,': 1, 'heap[i],': 1, 'heap[j]': 1, 'heap[j],': 1, 'heap[i]': 1}","{'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's M': 1, ' Mi': 1, 'Min': 1, 'inH': 1, 'nHe': 1, 'Hea': 3, 'eap': 28, 'ap:': 1, 'p:\n': 1, ':\n ': 16, '\n  ': 39, '   ': 286, '  d': 8, ' de': 8, 'def': 8, 'ef ': 8, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 11, 'sel': 25, 'elf': 25, 'lf,': 6, 'f, ': 6, ', a': 3, ' ar': 4, 'arr': 7, 'rra': 7, 'ray': 7, 'ay)': 6, 'y):': 2, '):\n': 9, '  s': 8, ' se': 14, 'lf.': 17, 'f.h': 10, '.he': 10, 'hea': 25, 'ap ': 3, 'p =': 3, ' = ': 13, '= s': 2, 'f.b': 1, '.bu': 1, 'bui': 2, 'uil': 2, 'ild': 11, 'ldH': 2, 'dHe': 2, 'ap(': 6, 'p(a': 1, '(ar': 3, 'y)\n': 2, ')\n\n': 2, '\n\n ': 7, 'f b': 1, ' bu': 1, 'p(s': 3, '  f': 2, ' fi': 1, 'fir': 2, 'irs': 2, 'rst': 2, 'stP': 2, 'tPa': 2, 'Par': 2, 'are': 7, 'ren': 24, 'ent': 24, 'ntI': 24, 'tId': 24, 'Idx': 36, 'dx ': 19, 'x =': 8, '= (': 3, ' (l': 1, '(le': 2, 'len': 5, 'en(': 5, 'n(a': 2, 'y) ': 2, ') -': 4, ' - ': 6, '- 2': 1, ' 2)': 1, '2) ': 1, ') /': 3, ' //': 3, '// ': 3, '/ 2': 3, ' 2\n': 3, '2\n ': 2, ' fo': 1, 'for': 1, 'or ': 1, 'r c': 1, ' cu': 10, 'cur': 17, 'urr': 17, 'rre': 17, 'x i': 1, ' in': 2, 'in ': 1, 'n r': 1, ' re': 5, 'rev': 1, 'eve': 1, 'ver': 1, 'ers': 1, 'rse': 1, 'sed': 1, 'ed(': 1, 'd(r': 1, '(ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(f': 1, '(fi': 1, 'dx)': 1, 'x))': 1, ')):': 1, 'f.s': 6, '.si': 3, 'sif': 5, 'ift': 5, 'ftD': 3, 'tDo': 3, 'Dow': 3, 'own': 3, 'wn(': 3, 'n(c': 1, '(cu': 5, 'dx,': 7, 'x, ': 7, ', l': 3, ' le': 3, '- 1': 5, ' 1,': 3, '1, ': 4, ')\n ': 7, '  r': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n a': 1, 'ay\n': 1, 'y\n\n': 1, 'f s': 3, ' si': 2, 'ftU': 2, 'tUp': 2, 'Up(': 2, ', c': 2, ', h': 7, ' he': 15, 'ap)': 11, 'p):': 3, '  p': 2, ' pa': 4, 'par': 5, ' (c': 2, 'x -': 2, ' 1)': 2, '1) ': 2, '  w': 2, ' wh': 2, 'whi': 2, 'hil': 11, 'ile': 2, 'le ': 2, 'e c': 2, 'x >': 1, ' > ': 1, '> 0': 1, ' 0 ': 1, '0 a': 1, ' an': 2, 'and': 2, 'nd ': 2, 'd h': 2, 'ap[': 11, 'p[c': 4, '[cu': 2, 'dx]': 5, 'x] ': 2, '] <': 3, ' < ': 3, '< h': 3, 'p[p': 1, '[pa': 1, 'x]:': 3, ']:\n': 3, '.sw': 3, 'swa': 4, 'wap': 9, 'p(c': 2, ', p': 1, 'p)\n': 5, '  c': 5, '= p': 1, 'dx\n': 3, 'x\n ': 3, '2\n\n': 1, 'n(s': 4, ', e': 1, ' en': 3, 'end': 4, 'ndI': 3, 'dId': 3, ' ch': 7, 'chi': 9, 'ldO': 6, 'dOn': 6, 'One': 6, 'neI': 6, 'eId': 6, '= c': 5, 'x *': 4, ' * ': 4, '* 2': 4, ' 2 ': 6, '2 +': 4, ' + ': 4, '+ 1': 2, ' 1\n': 2, '1\n ': 3, 'x <': 1, ' <=': 2, '<= ': 2, '= e': 2, 'dx:': 1, 'x:\n': 1, 'ldT': 3, 'dTw': 3, 'Two': 3, 'woI': 3, 'oId': 3, '+ 2': 2, '2 i': 1, ' if': 3, 'if ': 3, 'f c': 2, '2 <': 1, 'x e': 1, ' el': 3, 'els': 3, 'lse': 3, 'se ': 1, 'e -': 1, ' -1': 2, '-1\n': 1, '  i': 4, 'x !': 1, ' !=': 1, '!= ': 1, '= -': 1, '-1 ': 1, '1 a': 1, '[ch': 2, ' id': 4, 'idx': 5, 'dxT': 5, 'xTo': 5, 'ToS': 5, 'oSw': 5, 'Swa': 5, '  e': 2, 'se:': 2, 'e:\n': 2, 'f h': 1, 'p[i': 3, '[id': 1, 'ap]': 1, 'p] ': 1, ', i': 2, 'ap,': 1, 'p, ': 1, '= i': 1, 'ap\n': 1, 'p\n ': 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n\n': 1, 'f r': 1, 'rem': 1, 'emo': 3, 'mov': 3, 'ove': 3, 've(': 1, 'e(s': 1, 'lf)': 2, 'f):': 2, 'p(0': 1, '(0,': 2, '0, ': 2, 'p) ': 2, ', s': 3, '  v': 1, ' va': 3, 'val': 4, 'alu': 4, 'lue': 4, 'ueT': 2, 'eTo': 2, 'ToR': 2, 'oRe': 2, 'Rem': 2, 've ': 1, 'e =': 1, 'ap.': 2, 'p.p': 1, '.po': 1, 'pop': 1, 'op(': 1, 'p()': 1, '()\n': 1, 'n(0': 1, 'n v': 1, 've\n': 1, 'e\n\n': 1, 'f p': 1, ' pe': 1, 'pee': 1, 'eek': 1, 'ek(': 1, 'k(s': 1, 'n s': 1, 'p[0': 1, '[0]': 1, '0]\n': 1, ']\n\n': 1, 'f i': 1, 'ins': 1, 'nse': 1, 'ser': 1, 'ert': 1, 'rt(': 1, 't(s': 1, ', v': 1, 'ue)': 2, 'e):': 1, 'p.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'nd(': 1, 'd(v': 1, '(va': 1, 'e)\n': 1, 'p(l': 1, 'p)-': 1, ')-1': 1, '-1,': 1, ' sw': 1, ' i,': 1, 'i, ': 1, ', j': 1, ' j,': 1, 'j, ': 1, '  h': 1, '[i]': 2, 'i],': 1, '], ': 2, 'p[j': 2, '[j]': 2, 'j] ': 1, '] =': 1, '= h': 1, 'j],': 1, 'i]\n': 1}"
Mahamudul Hasan Mithhu,minMaxStack.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'class': 1, 'minmaxstack:': 1, 'def': 6, '__init__(self):': 1, 'self.minmaxstack': 1, '=': 6, '[]': 2, 'self.stack': 1, 'peek(self):': 1, 'return': 4, 'self.stack[len(self.stack)': 1, '-': 4, '1]': 2, 'pop(self):': 1, 'self.minmaxstack.pop()': 1, 'self.stack.pop()': 1, 'push(self,': 1, 'number):': 1, 'newminmax': 1, '{""min"":': 1, 'number,': 1, '""max"":': 1, 'number}': 1, 'if': 1, 'len(self.minmaxstack):': 1, 'lastminmaxstack': 1, 'self.minmaxstack[len(self.minmaxstack)': 3, 'newminmax[""min""]': 1, 'min(lastminmaxstack[""min""],': 1, 'number)': 2, 'newminmax[""max""]': 1, 'min(lastminmaxstack[""max""],': 1, 'self.minmaxstack.append(newminmax)': 1, 'self.stack.append(number)': 1, 'getmin(self):': 1, '1][""min""]': 1, 'getmax(self):': 1, '1][""max""]': 1}","{'cla': 1, 'las': 4, 'ass': 1, 'ss ': 1, 's M': 1, ' Mi': 1, 'Min': 9, 'inM': 18, 'nMa': 18, 'Max': 19, 'axS': 14, 'xSt': 14, 'Sta': 14, 'tac': 19, 'ack': 19, 'ck:': 1, 'k:\n': 1, ':\n ': 8, '\n  ': 20, '   ': 108, '  d': 6, ' de': 6, 'def': 6, 'ef ': 6, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 11, 'sel': 21, 'elf': 21, 'lf)': 5, 'f):': 5, '):\n': 7, '  s': 5, ' se': 10, 'lf.': 15, 'f.m': 10, '.mi': 10, 'min': 16, 'ck ': 3, 'k =': 3, ' = ': 6, '= [': 2, ' []': 2, '[]\n': 2, ']\n ': 2, 'f.s': 5, '.st': 5, 'sta': 5, ']\n\n': 3, '\n\n ': 5, 'f p': 3, ' pe': 1, 'pee': 1, 'eek': 1, 'ek(': 1, 'k(s': 1, '  r': 4, ' re': 4, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 4, 'n s': 4, 'ck[': 6, 'k[l': 4, '[le': 4, 'len': 5, 'en(': 5, 'n(s': 6, 'ck)': 5, 'k) ': 4, ') -': 4, ' - ': 4, '- 1': 4, ' 1]': 4, '1]\n': 2, ' po': 1, 'pop': 3, 'op(': 3, 'p(s': 1, 'ck.': 4, 'k.p': 2, '.po': 2, 'p()': 2, '()\n': 2, ')\n ': 4, ')\n\n': 2, ' pu': 1, 'pus': 1, 'ush': 1, 'sh(': 1, 'h(s': 1, 'lf,': 1, 'f, ': 1, ', n': 3, ' nu': 5, 'num': 6, 'umb': 6, 'mbe': 6, 'ber': 6, 'er)': 4, 'r):': 1, '  n': 3, ' ne': 3, 'new': 4, 'ewM': 4, 'wMi': 4, 'ax ': 1, 'x =': 1, '= {': 1, ' {""': 1, '{""m': 1, '""mi': 4, 'in""': 4, 'n"":': 1, '"": ': 2, ': n': 2, 'er,': 1, 'r, ': 1, ', ""': 1, ' ""m': 1, '""ma': 4, 'max': 4, 'ax""': 4, 'x"":': 1, 'er}': 1, 'r}\n': 1, '}\n ': 1, '  i': 1, ' if': 1, 'if ': 1, 'f l': 1, ' le': 1, 'k):': 1, '  l': 1, ' la': 1, 'ast': 3, 'stM': 3, 'tMi': 4, '= s': 1, 'ax[': 2, 'x[""': 2, '[""m': 6, 'n""]': 3, '""] ': 2, '] =': 2, '= m': 2, ' mi': 2, 'in(': 3, 'n(l': 2, '(la': 2, 'k[""': 2, '""],': 2, '], ': 2, 'r)\n': 3, 'x""]': 3, 'k.a': 2, '.ap': 2, 'app': 2, 'ppe': 2, 'pen': 2, 'end': 2, 'nd(': 2, 'd(n': 2, '(ne': 1, 'ax)': 1, 'x)\n': 1, '(nu': 1, 'f g': 2, ' ge': 2, 'get': 2, 'etM': 2, '1][': 2, '][""': 2, '""]\n': 2, 'tMa': 1, 'ax(': 1, 'x(s': 1}"
Mahamudul Hasan Mithhu,palindromeCheck.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 13, 'def': 4, 'ispalindrome(string):': 3, 'reversedstring': 3, '=': 5, '""""': 1, 'for': 2, 'str': 3, 'in': 2, 'reversed(string):': 2, '+=': 2, 'return': 5, '==': 3, 'string': 2, 'reversedchars': 1, '[]': 1, 'reversedchars.append(str)': 1, '"""".join(reversedchars)': 1, 'ispalindrome(string,': 2, 'i=0):': 1, 'j': 2, 'len(string)': 2, '-': 3, '1': 4, 'i': 2, 'true': 2, 'if': 2, '>=': 1, 'else': 1, 'string[i]': 1, 'string[j]': 1, 'and': 1, 'i+1)': 1, 'leftidx': 3, '0': 1, 'rightidx': 2, 'while': 1, '<': 1, 'rightidx:': 1, 'string[leftidx]': 1, '!=': 1, 'string[rightidx]:': 1, 'false': 1, '-=': 1, 'print(ispalindrome(""abbma""))': 1}","{'# d': 3, ' de': 3, 'def': 4, 'ef ': 4, 'f i': 5, ' is': 5, 'isP': 6, 'sPa': 6, 'Pal': 6, 'ali': 6, 'lin': 6, 'ind': 6, 'ndr': 6, 'dro': 6, 'rom': 6, 'ome': 6, 'me(': 6, 'e(s': 5, '(st': 10, 'str': 19, 'tri': 18, 'rin': 19, 'ing': 18, 'ng)': 7, 'g):': 5, '):\n': 6, ':\n#': 5, '\n# ': 12, '#  ': 10, '   ': 74, '  r': 11, ' re': 12, 'rev': 8, 'eve': 8, 'ver': 8, 'ers': 8, 'rse': 8, 'sed': 8, 'edS': 3, 'dSt': 3, 'Str': 3, 'ng ': 3, 'g =': 2, ' = ': 5, '= ""': 1, ' """"': 2, '""""\n': 1, '""\n#': 1, '  f': 2, ' fo': 2, 'for': 2, 'or ': 2, 'r s': 2, ' st': 9, 'tr ': 2, 'r i': 2, ' in': 2, 'in ': 2, 'n r': 3, 'ed(': 2, 'd(s': 3, 'g +': 1, ' +=': 2, '+= ': 2, '= s': 5, 'tr\n': 1, 'r\n#': 1, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 5, ' ==': 3, '== ': 3, 'ng\n': 2, 'g\n\n': 2, '\n\n\n': 2, '\n\n#': 2, 'edC': 3, 'dCh': 3, 'Cha': 3, 'har': 3, 'ars': 3, 'rs ': 1, 's =': 1, '= [': 1, ' []': 1, '[]\n': 1, ']\n#': 1, 'rs.': 1, 's.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'tr)': 1, 'r)\n': 1, ')\n#': 1, 'n ""': 1, '"""".': 1, '"".j': 1, '.jo': 1, 'joi': 1, 'oin': 1, 'in(': 1, 'n(r': 1, '(re': 1, 'rs)': 1, 's) ': 1, ') =': 1, 'ng,': 2, 'g, ': 2, ', i': 2, ' i=': 1, 'i=0': 1, '=0)': 1, '0):': 1, '  j': 1, ' j ': 2, 'j =': 1, '= l': 2, ' le': 5, 'len': 2, 'en(': 2, 'n(s': 2, 'g) ': 2, ') -': 2, ' - ': 3, '- 1': 2, ' 1 ': 1, '1 -': 1, '- i': 1, ' i\n': 1, 'i\n#': 1, 'n T': 2, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue ': 1, 'e i': 1, ' if': 2, 'if ': 2, ' i ': 1, 'i >': 1, ' >=': 1, '>= ': 1, '= j': 1, 'j e': 1, ' el': 1, 'els': 1, 'lse': 2, 'se ': 1, 'e s': 1, 'ng[': 4, 'g[i': 1, '[i]': 1, 'i] ': 1, '] =': 1, 'g[j': 1, '[j]': 1, 'j] ': 1, '] a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd i': 1, ' i+': 1, 'i+1': 1, '+1)': 1, '1)\n': 1, ')\n\n': 1, '\n\nd': 1, '\nde': 1, ':\n ': 3, '\n  ': 8, '  l': 2, 'lef': 4, 'eft': 4, 'fti': 4, 'tid': 4, 'idx': 4, 'dx ': 5, 'x =': 2, '= 0': 1, ' 0\n': 1, '0\n ': 1, ' ri': 3, 'rig': 4, 'igh': 4, 'ght': 4, 'htI': 4, 'tId': 4, 'Idx': 4, ' 1\n': 3, '1\n ': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 1, 'x <': 1, ' < ': 1, '< r': 1, 'dx:': 1, 'x:\n': 1, '  i': 1, 'f s': 1, 'g[l': 1, '[le': 1, 'dx]': 2, 'x] ': 1, '] !': 1, ' !=': 1, '!= ': 1, 'g[r': 1, '[ri': 1, 'x]:': 1, ']:\n': 1, 'n F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'se\n': 1, 'e\n ': 1, 'x +': 1, '= 1': 2, 'x -': 1, ' -=': 1, '-= ': 1, '1\n\n': 1, '\n\n ': 1, 'ue\n': 1, 'e\n\n': 1, '\n\np': 1, '\npr': 1, 'pri': 1, 'int': 1, 'nt(': 1, 't(i': 1, '(is': 1, 'e(""': 1, '(""a': 1, '""ab': 1, 'abb': 1, 'bbm': 1, 'bma': 1, 'ma""': 1, 'a"")': 1, '""))': 1, '))\n': 1}"
Mahamudul Hasan Mithhu,quickSort.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'def': 3, 'quicksort(array):': 1, 'quicksorthelper(array,': 6, '0,': 1, 'len(array)-1)': 1, 'return': 2, 'array': 1, 'startidx,': 3, 'endidx):': 1, 'if': 5, 'startidx': 4, '>=': 3, 'endidx:': 1, 'pivotidx': 1, '=': 5, 'leftidx': 2, '+': 4, '1': 4, 'rightidx': 8, 'endidx': 2, 'while': 1, 'leftidx:': 1, 'array[leftidx]': 2, '>': 1, 'array[pivotidx]': 1, 'and': 1, 'array[rightidx]': 2, '<': 2, 'array[pivotidx]:': 3, 'swap(leftidx,': 1, 'rightidx,': 2, 'array)': 2, '<=': 1, '+=': 1, '-=': 1, 'swap(pivotidx,': 1, 'leftsubarrayissmaller': 1, '-': 5, '(rightidx': 1, '1)': 3, 'leftsubarrayissmaller:': 1, '1,': 3, 'endidx)': 2, 'else:': 1, 'swap(i,': 1, 'j,': 1, 'array):': 1, 'array[i],': 1, 'array[j]': 1, 'array[j],': 1, 'array[i]': 1, 'print(quicksort([2,': 1, '5,': 1, '3]))': 1}","{'def': 3, 'ef ': 3, 'f q': 2, ' qu': 7, 'qui': 8, 'uic': 8, 'ick': 8, 'ckS': 8, 'kSo': 8, 'Sor': 8, 'ort': 8, 'rt(': 2, 't(a': 1, '(ar': 8, 'arr': 26, 'rra': 26, 'ray': 26, 'ay)': 5, 'y):': 2, '):\n': 3, ':\n ': 10, '\n  ': 23, '   ': 102, '  q': 5, 'rtH': 6, 'tHe': 6, 'Hel': 6, 'elp': 6, 'lpe': 6, 'per': 6, 'er(': 6, 'r(a': 6, 'ay,': 6, 'y, ': 6, ', 0': 1, ' 0,': 1, '0, ': 1, ', l': 1, ' le': 6, 'len': 1, 'en(': 1, 'n(a': 1, 'y)-': 1, ')-1': 1, '-1)': 1, '1)\n': 4, ')\n ': 7, '  r': 4, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 1, 'n a': 1, ' ar': 16, 'ay\n': 1, 'y\n\n': 1, '\n\n\n': 3, '\n\nd': 2, '\nde': 2, ', s': 3, ' st': 7, 'sta': 7, 'tar': 7, 'art': 7, 'rtI': 7, 'tId': 32, 'Idx': 38, 'dx,': 7, 'x, ': 7, ', e': 3, ' en': 6, 'end': 6, 'ndI': 6, 'dId': 6, 'dx)': 3, 'x):': 1, '  i': 5, ' if': 5, 'if ': 5, 'f s': 2, 'dx ': 16, 'x >': 2, ' >=': 3, '>= ': 3, '= e': 2, 'dx:': 2, 'x:\n': 2, 'rn\n': 1, 'n\n ': 1, '  p': 1, ' pi': 1, 'piv': 6, 'ivo': 6, 'vot': 6, 'otI': 6, 'x =': 3, ' = ': 5, '= s': 2, 'dx\n': 2, 'x\n ': 1, '  l': 3, 'lef': 8, 'eft': 8, 'ftI': 6, 'x +': 5, ' + ': 4, '+ 1': 4, ' 1\n': 3, '1\n ': 3, ' ri': 10, 'rig': 13, 'igh': 13, 'ght': 13, 'htI': 13, 'x\n\n': 1, '\n\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e r': 1, '= l': 1, 'f a': 3, 'ay[': 12, 'y[l': 2, '[le': 2, 'dx]': 8, 'x] ': 5, '] >': 2, ' > ': 1, '> a': 1, 'y[p': 4, '[pi': 4, '] a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd a': 1, 'y[r': 2, '[ri': 2, '] <': 2, ' < ': 2, '< a': 1, 'x]:': 3, ']:\n': 3, '  s': 2, ' sw': 3, 'swa': 3, 'wap': 3, 'ap(': 3, 'p(l': 1, '(le': 1, ', r': 6, ', a': 5, 'y)\n': 2, ' <=': 1, '<= ': 1, '= a': 3, ' +=': 1, '+= ': 1, '= 1': 2, 'x -': 5, ' -=': 1, '-= ': 1, 'p(p': 1, '(pi': 1, 'ftS': 2, 'tSu': 2, 'Sub': 2, 'uba': 2, 'bar': 2, 'ayI': 2, 'yIs': 2, 'IsS': 2, 'sSm': 2, 'Sma': 2, 'mal': 2, 'all': 2, 'lle': 2, 'ler': 2, 'er ': 1, 'r =': 1, '= r': 1, ' - ': 5, '- 1': 3, ' 1 ': 1, '1 -': 1, '- s': 1, 'x <': 1, '< e': 1, '- (': 1, ' (r': 1, '(ri': 1, ' 1)': 3, 'f l': 1, 'er:': 1, 'r:\n': 1, ' 1,': 3, '1, ': 3, 'x)\n': 2, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, ')\n\n': 1, 'p(i': 1, '(i,': 1, 'i, ': 1, ', j': 1, ' j,': 1, 'j, ': 1, '  a': 1, 'y[i': 2, '[i]': 2, 'i],': 1, '], ': 2, 'y[j': 2, '[j]': 2, 'j] ': 1, '] =': 1, 'j],': 1, 'i]\n': 1, ']\n\n': 1, '\n\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 't(q': 1, '(qu': 1, 't([': 1, '([2': 1, '[2,': 1, '2, ': 1, ', 1': 1, ', 5': 1, ' 5,': 1, '5, ': 1, ', 3': 1, ' 3]': 1, '3])': 1, ']))': 1, '))\n': 1}"
Mahamudul Hasan Mithhu,selectionSort.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'def': 2, 'selectionsort(array):': 1, 'currentidx': 3, '=': 4, '0': 1, 'while(currentidx': 1, '<': 1, 'len(array)': 1, '-': 1, '1):': 1, 'smallestidx': 2, 'for': 1, 'i': 2, 'in': 1, 'range(currentidx+1,': 1, 'len(array)):': 1, 'if': 1, 'array[smallestidx]': 1, '>': 1, 'array[i]:': 1, 'swap(currentidx,': 1, 'smallestidx,': 1, 'array)': 1, '+=': 1, '1': 1, 'return': 1, 'array': 1, 'swap(i,': 1, 'j,': 1, 'array):': 1, 'array[i],': 1, 'array[j]': 1, 'array[j],': 1, 'array[i]': 1, 'print(selectionsort([1,': 1, '3,': 2, '1,': 1, '2,': 1, '5]))': 1}","{'def': 2, 'ef ': 2, 'f s': 2, ' se': 1, 'sel': 2, 'ele': 2, 'lec': 2, 'ect': 2, 'cti': 2, 'tio': 2, 'ion': 2, 'onS': 2, 'nSo': 2, 'Sor': 2, 'ort': 2, 'rt(': 2, 't(a': 1, '(ar': 3, 'arr': 12, 'rra': 12, 'ray': 12, 'ay)': 5, 'y):': 2, '):\n': 4, ':\n ': 5, '\n  ': 10, '   ': 56, '  c': 2, ' cu': 3, 'cur': 6, 'urr': 6, 'rre': 6, 'ren': 6, 'ent': 6, 'ntI': 6, 'tId': 10, 'Idx': 10, 'dx ': 5, 'x =': 3, ' = ': 4, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le(': 1, 'e(c': 2, '(cu': 3, 'x <': 1, ' < ': 1, '< l': 1, ' le': 2, 'len': 2, 'en(': 2, 'n(a': 2, 'y) ': 1, ') -': 1, ' - ': 1, '- 1': 1, ' 1)': 1, '1):': 1, '  s': 3, ' sm': 3, 'sma': 4, 'mal': 4, 'all': 4, 'lle': 4, 'les': 4, 'est': 4, 'stI': 4, '= c': 1, 'dx\n': 1, 'x\n ': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, ' in': 1, 'in ': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'dx+': 1, 'x+1': 1, '+1,': 1, '1, ': 3, ', l': 1, 'y))': 1, ')):': 1, '  i': 1, ' if': 1, 'if ': 1, 'f a': 1, ' ar': 9, 'ay[': 6, 'y[s': 1, '[sm': 1, 'dx]': 1, 'x] ': 1, '] >': 1, ' > ': 1, '> a': 1, 'y[i': 3, '[i]': 3, 'i]:': 1, ']:\n': 1, '= i': 1, ' i\n': 1, 'i\n ': 1, ' sw': 2, 'swa': 2, 'wap': 2, 'ap(': 2, 'p(c': 1, 'dx,': 2, 'x, ': 2, ', s': 1, ', a': 4, 'y)\n': 1, ')\n ': 1, 'x +': 1, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 1, '1\n ': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n a': 1, 'ay\n': 1, 'y\n\n': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'p(i': 1, '(i,': 1, 'i, ': 1, ', j': 1, ' j,': 1, 'j, ': 1, '  a': 1, 'i],': 1, '], ': 2, 'y[j': 2, '[j]': 2, 'j] ': 1, '] =': 1, '= a': 1, 'j],': 1, 'i]\n': 1, ']\n\n': 1, '\n\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 't(s': 1, '(se': 1, 't([': 1, '([1': 1, '[1,': 1, ', 3': 2, ' 3,': 2, '3, ': 2, ', 1': 1, ' 1,': 1, ', 2': 1, ' 2,': 1, '2, ': 1, ', 5': 1, ' 5]': 1, '5])': 1, ']))': 1, '))\n': 1}"
Mushinako,aoi.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""': 6, 'get': 1, 'input': 4, 'from': 13, 'and': 2, 'submit': 2, 'answer': 3, 'to': 7, 'aoc': 5, '__future__': 1, 'import': 13, 'annotations': 1, 'time': 1, 'sleep': 1, 'datetime': 2, 'zoneinfo': 2, 'string': 1, 'template': 1, 'pathlib': 1, 'path': 2, 'typing': 2, 'type_checking': 1, 'requests': 1, 'yaml': 1, 'bs4': 1, 'beautifulsoup': 1, 'colorama': 1, 'fore,': 1, 'init': 1, 'utils': 1, 'get_input_path': 1, 'if': 8, 'type_checking:': 1, 'literal,': 1, 'optional': 1, 'init(autoreset=true)': 1, '_config_path': 1, '=': 17, 'path(__file__).resolve().parent': 1, '/': 1, '""config.yml""': 1, 'with': 6, '_config_path.open(""r"")': 1, 'as': 4, 'f:': 1, '_config': 1, 'yaml.safe_load(f)': 1, 'data_url': 1, 'template(""https://adventofcode.com/2021/day/${day}/input"")': 1, 'answer_url': 1, 'template(""https://adventofcode.com/2021/day/${day}/answer"")': 1, '_cookies': 1, '_config[""cookies""]': 1, '_day_choices': 1, 'set(range(1,': 1, '26))': 1, '_level_choices': 1, '{1,': 1, '2}': 1, 'def': 2, 'download_input(day:': 1, 'int,': 2, 'input_path:': 1, 'optional[path]': 1, 'none)': 1, '->': 2, 'none:': 3, 'download': 1, 'website.': 1, 'args:': 2, 'day': 6, '(1..25)': 2, ':': 3, 'the': 3, 'of': 3, 'input_path': 3, '(pathlib.path):': 1, 'file': 1, 'write': 1, 'not': 8, 'in': 7, '_day_choices:': 2, 'raise': 6, 'valueerror(f""{day=}': 2, 'is': 5, 'range': 2, '1..25"")': 2, 'one': 1, 'extra': 1, 'second': 1, 'just': 1, 'be': 2, 'sure': 1, 'target_time_est': 1, 'datetime(2021,': 1, '12,': 1, 'day,': 1, '0,': 2, '1,': 1, 'tzinfo=zoneinfo(""est""))': 1, 'target_time_local': 2, 'datetime.fromtimestamp(target_time_est.timestamp())': 1, 'while': 1, '(now': 1, ':=': 1, 'datetime.now())': 1, '<': 1, 'target_time_local:': 1, 'diff': 1, '-': 1, 'now': 1, 'seconds': 2, 'max(diff.days': 1, '*': 1, '86400': 1, '+': 8, 'diff.seconds,': 1, '0)': 1, 'print(f""\\r\\x1b[k{seconds}': 1, 'until': 1, 'problem': 1, 'opens.': 1, 'waiting..."",': 1, 'end="""")': 2, 'sleep(1)': 2, 'print(""\\r\\x1b[k"",': 1, 'for': 3, '_': 2, 'range(3):': 2, 'requests.get(data_url.substitute(day=day),': 1, 'cookies=_cookies)': 1, 'response:': 2, 'data': 2, 'response.content': 2, 'response.ok:': 2, 'print(fore.red': 4, 'data.decode(""utf-8"").strip())': 2, 'sleep(5)': 1, 'continue': 2, 'break': 2, 'else:': 3, 'connectionerror(""download': 1, 'failed!"")': 1, 'print(': 1, 'fore.green': 1, 'f""got': 1, '{len(data)}': 1, 'characters': 1, '{len(data.splitlines())}': 1, 'lines""': 1, ')': 2, 'get_input_path(day)': 1, 'input_path.open(""wb"")': 1, 'input_fp:': 1, 'input_fp.write(data)': 1, 'submit_output(day:': 1, 'part:': 1, 'literal[1,': 1, '2],': 1, 'answer:': 1, 'str': 2, '|': 2, 'int)': 1, 'upload': 1, 'solution': 1, 'website': 1, 'part': 3, '(1,': 1, '2)': 1, 'whether': 1, 'submission': 1, '1': 2, 'or': 2, '2': 1, '(str': 1, 'int):': 1, 'submitted': 1, 'returns:': 1, '(str):': 1, 'success/failure': 1, 'string,': 1, 'coloring': 1, '_level_choices:': 1, 'valueerror(f""{part=}': 1, '2"")': 1, 'requests.post(': 1, 'answer_url.substitute(day=day),': 1, '{""level"":': 1, 'part,': 1, '""answer"":': 1, 'answer},': 1, 'cookies=_cookies,': 1, 'connectionerror(""failed': 1, 'response."")': 1, 'html': 1, 'beautifulsoup(data,': 1, '""html.parser"")': 1, 'response_text:': 1, 'html.article.p.text': 1, 'response_text.startswith(""you': 2, 'don\'t""):': 1, 'print(fore.yellow': 1, 'response_text)': 4, 'elif': 3, 'response_text.startswith(""that\'s': 2, 'the""):': 1, 'print(fore.green': 1, 'not""):': 1, 'gave""):': 1, 'valueerror(f""unknown': 1, 'response': 1, 'text:': 1, '{response_text}"")': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 4, ': r': 1, ' re': 21, 'rep': 1, 'epo': 1, 'por': 14, 'ort': 14, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 2, 'ssi': 2, 'sin': 1, 'ing': 7, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 3, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 1, 'lse': 4, 'se\n': 1, 'e\n""': 1, '\n""""': 2, '""""""': 6, '""""\n': 6, '""\nG': 1, '\nGe': 1, 'Get': 1, 'et ': 1, 't i': 7, ' in': 23, 'inp': 15, 'npu': 15, 'put': 16, 'ut ': 4, 't f': 2, ' fr': 3, 'fro': 14, 'rom': 14, 'om ': 13, 'm a': 1, ' an': 7, 'and': 2, 'nd ': 3, 'd s': 2, ' su': 6, 'sub': 7, 'ubm': 5, 'bmi': 5, 'mit': 4, 'it ': 2, 't a': 2, 'ans': 6, 'nsw': 7, 'swe': 7, 'wer': 7, 'er ': 4, 'r t': 3, ' to': 7, 'to ': 6, 'o A': 2, ' AO': 5, 'AOC': 5, 'OC\n': 3, 'C\n""': 1, '""\n\n': 1, '\n\nf': 3, '\nfr': 10, 'm _': 1, ' __': 1, '__f': 2, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 2, 'ure': 3, 're_': 1, 'e__': 2, '__ ': 1, '_ i': 3, ' im': 11, 'imp': 13, 'mpo': 13, 'rt ': 16, 'ann': 1, 'nno': 1, 'not': 10, 'ota': 1, 'tat': 1, 'ati': 1, 'tio': 6, 'ion': 7, 'ons': 19, 'ns\n': 1, 's\n\n': 1, 'm t': 3, ' ti': 1, 'tim': 13, 'ime': 13, 'me ': 2, 'e i': 3, 't s': 1, ' sl': 4, 'sle': 4, 'lee': 4, 'eep': 4, 'ep\n': 1, 'p\nf': 2, 'm d': 1, ' da': 16, 'dat': 13, 'ate': 8, 'tet': 5, 'eti': 5, 't d': 1, 'me\n': 1, 'e\nf': 2, 'm z': 1, ' zo': 1, 'zon': 1, 'one': 7, 'nei': 1, 'ein': 1, 'inf': 2, 'nfo': 4, 'fo ': 1, 'o i': 1, 't Z': 1, ' Zo': 1, 'Zon': 2, 'neI': 2, 'eIn': 2, 'Inf': 2, 'fo\n': 1, 'o\nf': 1, 'm s': 1, ' st': 4, 'str': 8, 'tri': 4, 'rin': 12, 'ng ': 3, 'g i': 3, 't T': 2, ' Te': 3, 'Tem': 3, 'emp': 3, 'mpl': 3, 'pla': 3, 'lat': 3, 'te\n': 2, 'm p': 1, ' pa': 6, 'pat': 9, 'ath': 14, 'thl': 2, 'hli': 2, 'lib': 2, 'ib ': 1, 'b i': 1, 't P': 1, ' Pa': 3, 'Pat': 5, 'th\n': 2, 'h\nf': 1, ' ty': 2, 'typ': 2, 'ypi': 2, 'pin': 2, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 7, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, '\n\ni': 3, '\nim': 2, 't r': 4, 'req': 3, 'equ': 3, 'que': 3, 'ues': 3, 'est': 7, 'sts': 3, 'ts\n': 1, 's\ni': 1, 't y': 1, ' ya': 2, 'yam': 2, 'aml': 2, 'ml\n': 1, 'l\nf': 1, 'm b': 1, ' bs': 1, 'bs4': 1, 's4 ': 1, '4 i': 1, 't B': 1, ' Be': 2, 'Bea': 2, 'eau': 2, 'aut': 3, 'uti': 4, 'tif': 2, 'ifu': 2, 'ful': 2, 'ulS': 2, 'lSo': 2, 'Sou': 2, 'oup': 2, 'up\n': 1, 'm c': 1, ' co': 6, 'col': 2, 'olo': 2, 'lor': 2, 'ora': 1, 'ram': 1, 'ama': 1, 'ma ': 1, 'a i': 1, 't F': 1, ' Fo': 2, 'For': 8, 'ore': 9, 're,': 1, 'e, ': 1, ', i': 2, 'ini': 2, 'nit': 2, 'it\n': 1, 't\n\n': 1, 'm u': 1, ' ut': 1, 'til': 2, 'ils': 1, 'ls ': 1, 's i': 2, 't g': 1, ' ge': 2, 'get': 8, 'et_': 7, 't_i': 2, '_in': 3, 'ut_': 9, 't_p': 7, '_pa': 7, 'h\n\n': 1, '\nif': 1, 'if ': 11, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 26, '\n  ': 76, '   ': 423, '  f': 3, 't L': 1, ' Li': 2, 'Lit': 2, 'ite': 6, 'ter': 3, 'era': 2, 'ral': 2, 'al,': 1, 'l, ': 1, ', O': 1, ' Op': 2, 'Opt': 2, 'pti': 2, 'ona': 2, 'nal': 2, 'al\n': 1, 'l\n\n': 1, '\nin': 1, 'it(': 1, 't(a': 1, '(au': 1, 'uto': 1, 'tor': 1, 'res': 20, 'ese': 1, 'set': 2, 'et=': 1, 't=T': 1, '=Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e)\n': 1, ')\n\n': 9, '\n\n_': 3, '\n_C': 2, '_CO': 7, 'CON': 4, 'ONF': 4, 'NFI': 4, 'FIG': 4, 'IG_': 2, 'G_P': 2, '_PA': 2, 'PAT': 2, 'ATH': 2, 'TH ': 1, 'H =': 1, ' = ': 17, '= P': 1, 'th(': 6, 'h(_': 1, '(__': 1, '_fi': 1, 'fil': 2, 'ile': 5, 'le_': 1, '__)': 1, '_).': 1, ').r': 1, '.re': 1, 'eso': 1, 'sol': 2, 'olv': 1, 'lve': 1, 've(': 1, 'e()': 1, '().': 1, ').p': 1, '.pa': 2, 'par': 8, 'are': 1, 'ren': 1, 'ent': 5, 'nt ': 1, 't /': 1, ' / ': 1, '/ ""': 1, ' ""c': 1, '""co': 2, 'con': 10, 'onf': 1, 'nfi': 1, 'fig': 1, 'ig.': 1, 'g.y': 1, '.ym': 1, 'yml': 1, 'ml""': 1, 'l""\n': 1, '""\nw': 1, '\nwi': 1, 'wit': 10, 'ith': 10, 'th ': 10, 'h _': 1, ' _C': 3, 'TH.': 1, 'H.o': 1, '.op': 2, 'ope': 3, 'pen': 3, 'en(': 4, 'n(""': 2, '(""r': 1, '""r""': 1, 'r"")': 3, '"") ': 2, ') a': 4, ' as': 4, 'as ': 4, 's f': 2, ' f:': 1, 'f:\n': 1, '  _': 1, 'IG ': 1, 'G =': 1, '= y': 1, 'ml.': 3, 'l.s': 1, '.sa': 1, 'saf': 1, 'afe': 1, 'fe_': 1, 'e_l': 4, '_lo': 4, 'loa': 5, 'oad': 5, 'ad(': 1, 'd(f': 1, '(f)': 1, 'f)\n': 1, '\n\nD': 1, '\nDA': 1, 'DAT': 2, 'ATA': 2, 'TA_': 2, 'A_U': 2, '_UR': 4, 'URL': 4, 'RL ': 2, 'L =': 2, '= T': 2, 'te(': 5, 'e(""': 4, '(""h': 2, '""ht': 3, 'htt': 2, 'ttp': 2, 'tps': 2, 'ps:': 2, 's:/': 2, '://': 2, '//a': 2, '/ad': 2, 'adv': 2, 'dve': 2, 'ven': 2, 'nto': 2, 'tof': 2, 'ofc': 2, 'fco': 2, 'cod': 4, 'ode': 4, 'de.': 2, 'e.c': 4, '.co': 4, 'com': 2, 'om/': 2, 'm/2': 2, '/20': 2, '202': 3, '021': 3, '21/': 2, '1/d': 2, '/da': 2, 'day': 21, 'ay/': 2, 'y/$': 2, '/${': 2, '${d': 2, '{da': 4, 'ay}': 2, 'y}/': 2, '}/i': 1, '/in': 1, 'ut""': 1, 't"")': 3, '"")\n': 10, ')\nA': 1, '\nAN': 1, 'ANS': 2, 'NSW': 2, 'SWE': 2, 'WER': 2, 'ER_': 2, 'R_U': 2, '}/a': 1, '/an': 1, 'er""': 3, 'COO': 3, 'OOK': 3, 'OKI': 3, 'KIE': 3, 'IES': 3, 'ES ': 3, 'S =': 3, '= _': 1, 'IG[': 1, 'G[""': 1, '[""c': 1, 'coo': 3, 'ook': 3, 'oki': 3, 'kie': 3, 'ies': 3, 'es""': 2, 's""]': 1, '""]\n': 1, ']\n\n': 1, '\n_D': 1, '_DA': 3, 'DAY': 3, 'AY_': 3, 'Y_C': 3, 'CHO': 5, 'HOI': 5, 'OIC': 5, 'ICE': 5, 'CES': 5, '= s': 1, ' se': 4, 'et(': 2, 't(r': 1, '(ra': 1, 'ran': 5, 'ang': 5, 'nge': 5, 'ge(': 3, 'e(1': 1, '(1,': 2, '1, ': 6, ', 2': 4, ' 26': 1, '26)': 1, '6))': 1, '))\n': 5, ')\n_': 1, '\n_L': 1, '_LE': 2, 'LEV': 2, 'EVE': 2, 'VEL': 2, 'EL_': 2, 'L_C': 2, '= {': 1, ' {1': 1, '{1,': 1, ' 2}': 1, '2}\n': 1, '}\n\n': 1, '\n\n\n': 2, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f d': 3, ' do': 2, 'dow': 1, 'own': 4, 'wnl': 3, 'nlo': 3, 'ad_': 1, 'd_i': 1, 'ut(': 2, 't(d': 2, '(da': 9, 'ay:': 2, 'y: ': 2, ': i': 2, 'int': 13, 'nt,': 2, 't, ': 3, 'th:': 1, 'h: ': 1, ': O': 1, 'al[': 2, 'l[P': 1, '[Pa': 1, 'th]': 1, 'h] ': 1, '] =': 1, '= N': 1, ' No': 4, 'Non': 4, 'ne)': 1, 'e) ': 1, ') -': 2, ' ->': 2, '-> ': 2, '> N': 2, 'ne:': 3, 'e:\n': 8, '  ""': 4, ' """"': 4, '""\n ': 5, '  D': 1, ' Do': 1, 'Dow': 2, 'ad ': 3, 'd i': 1, 'm A': 1, 'OC ': 2, 'C w': 2, ' we': 2, 'web': 2, 'ebs': 2, 'bsi': 2, 'sit': 2, 'te.': 1, 'e.\n': 1, '.\n\n': 1, '\n\n ': 8, '  A': 3, ' Ar': 2, 'Arg': 2, 'rgs': 2, 'gs:': 2, 's:\n': 3, '  d': 5, 'ay ': 6, 'y  ': 2, '  (': 4, ' (1': 3, '(1.': 2, '1..': 4, '..2': 4, '.25': 4, '25)': 2, '5) ': 2, ')  ': 3, '  :': 3, ' : ': 3, ': T': 2, ' Th': 2, 'The': 2, 'he ': 3, 'e d': 2, 'y o': 2, ' of': 3, 'of ': 3, 'f A': 2, 'C\n ': 2, '  i': 10, 'h (': 1, ' (p': 1, '(pa': 1, 'ib.': 1, 'b.P': 1, '.Pa': 1, 'th)': 1, 'h):': 1, '): ': 3, ': P': 1, 'h o': 1, 'f f': 1, ' fi': 1, 'le ': 2, 'e t': 2, 'o w': 1, ' wr': 1, 'wri': 2, 'rit': 2, 'te ': 1, 't t': 2, 'to\n': 1, 'o\n ': 1, ' if': 7, 'y n': 2, ' no': 10, 'ot ': 9, 'in ': 7, 'n _': 3, ' _D': 2, 'ES:': 3, 'S:\n': 3, '  r': 7, ' ra': 10, 'rai': 6, 'ais': 6, 'ise': 6, 'se ': 7, 'e V': 4, ' Va': 4, 'Val': 4, 'alu': 4, 'lue': 4, 'ueE': 4, 'eEr': 4, 'Err': 6, 'rro': 6, 'ror': 6, 'or(': 6, 'r(f': 4, '(f""': 5, 'f""{': 3, '""{d': 2, 'ay=': 4, 'y=}': 2, '=} ': 3, '} i': 3, ' is': 5, 'is ': 5, 's n': 4, 'n r': 5, 'ge ': 2, 'e 1': 2, ' 1.': 2, '25""': 2, '5"")': 2, ')\n ': 17, '  #': 1, ' # ': 1, '# O': 1, ' On': 1, 'One': 1, 'ne ': 1, 'e e': 1, ' ex': 1, 'ext': 13, 'xtr': 1, 'tra': 1, 'ra ': 1, 'a s': 1, 'sec': 5, 'eco': 7, 'ond': 5, 'd j': 1, ' ju': 1, 'jus': 1, 'ust': 1, 'st ': 2, 'o b': 2, ' be': 2, 'be ': 2, 'e s': 4, 'sur': 1, 're\n': 1, 'e\n ': 3, '  t': 2, ' ta': 4, 'tar': 9, 'arg': 5, 'rge': 5, 't_t': 5, '_ti': 5, 'me_': 5, 'e_e': 2, '_es': 2, 't =': 1, '= d': 3, 'me(': 1, 'e(2': 1, '(20': 1, '21,': 1, ', 1': 2, ' 12': 1, '12,': 1, '2, ': 1, ', d': 1, 'ay,': 1, 'y, ': 1, ', 0': 3, ' 0,': 2, '0, ': 2, ' 1,': 1, ', t': 1, ' tz': 1, 'tzi': 1, 'zin': 1, 'fo=': 1, 'o=Z': 1, '=Zo': 1, 'fo(': 1, 'o(""': 1, '(""E': 1, '""ES': 1, 'EST': 1, 'ST""': 1, 'T"")': 1, '""))': 1, 'loc': 3, 'oca': 3, 'cal': 3, 'al ': 2, 'l =': 2, 'me.': 2, 'e.f': 1, '.fr': 1, 'omt': 1, 'mti': 1, 'mes': 2, 'sta': 6, 'tam': 2, 'amp': 2, 'mp(': 2, 'p(t': 1, '(ta': 1, 'st.': 1, 't.t': 1, '.ti': 1, 'p()': 3, '())': 5, '  w': 4, ' wh': 1, 'whi': 1, 'hil': 1, 'e (': 1, ' (n': 1, '(no': 1, 'now': 4, 'ow ': 1, 'w :': 1, ' :=': 1, ':= ': 1, 'e.n': 1, '.no': 1, 'ow(': 1, 'w()': 1, ')) ': 1, ') <': 1, ' < ': 1, '< t': 1, 'al:': 1, 'l:\n': 1, ' di': 2, 'dif': 3, 'iff': 3, 'ff ': 1, 'f =': 1, '= t': 1, 'l -': 1, ' - ': 1, '- n': 1, 'ow\n': 1, 'w\n ': 1, '  s': 4, 'nds': 4, 'ds ': 2, 's =': 1, '= m': 1, ' ma': 1, 'max': 1, 'ax(': 1, 'x(d': 1, '(di': 1, 'ff.': 2, 'f.d': 1, '.da': 1, 'ays': 1, 'ys ': 1, 's *': 1, ' * ': 1, '* 8': 1, ' 86': 1, '864': 1, '640': 1, '400': 1, '00 ': 1, '0 +': 1, ' + ': 8, '+ d': 3, 'f.s': 1, '.se': 1, 'ds,': 1, 's, ': 1, ' 0)': 1, '0)\n': 1, '  p': 10, ' pr': 10, 'pri': 9, 'nt(': 9, 't(f': 1, 'f""\\': 1, '""\\r': 2, '\\r\\': 2, 'r\\x': 2, '\\x1': 2, 'x1b': 2, '1b[': 2, 'b[K': 2, '[K{': 1, 'K{s': 1, '{se': 1, 'ds}': 1, 's} ': 1, '} s': 1, 's u': 1, ' un': 1, 'unt': 1, 'nti': 3, 'il ': 1, 'l p': 1, 'pro': 1, 'rob': 1, 'obl': 1, 'ble': 1, 'lem': 1, 'em ': 1, 'm o': 1, ' op': 1, 'ens': 1, 'ns.': 1, 's. ': 1, '. W': 1, ' Wa': 1, 'Wai': 1, 'ait': 1, 'iti': 1, 'tin': 3, 'ng.': 1, 'g..': 1, '...': 1, '..""': 1, '."",': 1, '"", ': 2, ', e': 2, ' en': 2, 'end': 2, 'nd=': 2, 'd=""': 2, '=""""': 2, '"""")': 2, 'ep(': 3, 'p(1': 2, '(1)': 2, '1)\n': 2, 't(""': 1, '(""\\': 1, '[K""': 1, 'K"",': 1, ' fo': 3, 'for': 3, 'or ': 5, 'r _': 2, ' _ ': 2, 'e(3': 2, '(3)': 2, '3):': 2, '):\n': 6, ' wi': 5, 'h r': 2, 'ts.': 2, 's.g': 1, '.ge': 1, 't(D': 1, '(DA': 1, 'RL.': 2, 'L.s': 2, '.su': 2, 'bst': 2, 'sti': 2, 'tit': 2, 'itu': 2, 'tut': 2, 'ute': 2, 'e(d': 3, 'y=d': 2, '=da': 2, 'ay)': 3, 'y),': 2, '), ': 1, ', c': 1, 'es=': 2, 's=_': 2, '=_C': 2, 'ES)': 1, 'S) ': 1, 's r': 2, 'esp': 18, 'spo': 18, 'pon': 18, 'nse': 18, 'se:': 5, 'ata': 8, 'ta ': 2, 'a =': 2, '= r': 2, 'se.': 5, 'ont': 4, 'nte': 2, 'ten': 2, 'nt\n': 2, 't\n ': 3, 'f n': 2, 'e.o': 2, '.ok': 2, 'ok:': 2, 'k:\n': 2, 't(F': 6, '(Fo': 6, 're.': 7, 'e.R': 4, '.RE': 4, 'RED': 4, 'ED ': 4, 'D +': 4, 'ta.': 3, 'a.d': 2, '.de': 2, 'dec': 2, 'de(': 2, '(""u': 2, '""ut': 2, 'utf': 2, 'tf-': 2, 'f-8': 2, '-8""': 2, '8"")': 2, '"").': 2, ').s': 2, '.st': 6, 'rip': 2, 'ip(': 2, 'p(5': 1, '(5)': 1, '5)\n': 1, '  c': 3, 'inu': 2, 'nue': 2, 'ue\n': 2, '  b': 2, ' br': 2, 'bre': 2, 'rea': 2, 'eak': 2, 'ak\n': 2, 'k\n ': 2, '  e': 6, ' el': 6, 'els': 3, 'e C': 2, ' Co': 2, 'Con': 2, 'onn': 2, 'nne': 2, 'nec': 2, 'ect': 2, 'cti': 2, 'onE': 2, 'nEr': 2, 'r(""': 2, '(""D': 1, '""Do': 1, 'd f': 1, ' fa': 1, 'fai': 2, 'ail': 3, 'led': 2, 'ed!': 1, 'd!""': 1, '!"")': 1, 't(\n': 2, '(\n ': 2, '  F': 1, 'e.G': 2, '.GR': 2, 'GRE': 2, 'REE': 2, 'EEN': 2, 'EN\n': 1, 'N\n ': 1, '  +': 1, '+ f': 1, ' f""': 1, 'f""G': 1, '""Go': 1, 'Got': 1, 't w': 1, 'h {': 1, ' {l': 2, '{le': 2, 'len': 2, 'n(d': 2, 'ta)': 2, 'a)}': 1, ')} ': 2, '} c': 1, ' ch': 1, 'cha': 1, 'har': 1, 'ara': 1, 'rac': 1, 'act': 1, 'cte': 1, 'ers': 1, 'rs ': 1, 's a': 1, 'd {': 1, 'a.s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'itl': 1, 'tli': 1, 'lin': 2, 'ine': 2, 'nes': 2, 'es(': 1, 's()': 1, '))}': 1, '} l': 1, ' li': 1, 's""\n': 1, '  )': 2, ' )\n': 1, 'f i': 1, 'h i': 2, 's N': 1, 'h =': 1, '= g': 1, 'h(d': 1, 'y)\n': 1, 'th.': 1, 'h.o': 1, '(""w': 1, '""wb': 1, 'wb""': 1, 'b"")': 1, 't_f': 2, '_fp': 2, 'fp:': 1, 'p:\n': 1, 'fp.': 1, 'p.w': 1, '.wr': 1, 'a)\n': 1, 'f s': 1, 'it_': 1, 't_o': 1, '_ou': 1, 'out': 1, 'utp': 1, 'tpu': 1, ', p': 1, 'art': 11, 'rt:': 1, ': L': 1, 'l[1': 1, '[1,': 1, ' 2]': 1, '2],': 1, '], ': 1, ', a': 1, 'er:': 1, 'r: ': 1, ': s': 2, 'tr ': 3, 'r |': 2, ' | ': 2, '| i': 2, 'nt)': 2, 't) ': 1, '  U': 1, ' Up': 1, 'Upl': 1, 'plo': 1, ' so': 1, 'olu': 1, 'lut': 1, 'on ': 2, 'n t': 1, 'e\n\n': 1, 't  ': 1, ' 2)': 1, '2) ': 1, ': W': 1, ' Wh': 1, 'Whe': 1, 'het': 1, 'eth': 1, 'the': 3, 'her': 1, ' th': 2, 'mis': 1, 'sio': 1, 'n i': 1, 'r p': 1, 't 1': 2, ' 1 ': 2, '1 o': 2, ' or': 2, 'r 2': 2, ' 2\n': 1, '2\n ': 1, '  a': 1, 'r (': 1, ' (s': 2, '(st': 2, 't):': 1, ': A': 1, ' An': 1, 'Ans': 1, 'itt': 1, 'tte': 1, 'ted': 1, 'ed\n': 1, 'd\n\n': 1, '  R': 1, ' Re': 1, 'Ret': 1, 'etu': 1, 'urn': 1, 'rns': 1, 'ns:': 1, 'tr)': 1, 'r):': 1, ': S': 1, ' Su': 1, 'Suc': 1, 'ucc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss/': 1, 's/f': 1, '/fa': 1, 'ilu': 1, 'lur': 1, 're ': 1, 'ng,': 1, 'g, ': 1, ', w': 1, 'h c': 1, 'ori': 1, 'ng\n': 1, 'g\n ': 1, 'f p': 1, 't n': 1, ' _L': 1, '""{p': 1, '{pa': 1, 'rt=': 1, 't=}': 1, ' 2""': 1, '2"")': 1, 's.p': 1, '.po': 1, 'pos': 1, 'ost': 1, 'st(': 1, ' AN': 1, '),\n': 1, ',\n ': 3, '  {': 1, ' {""': 1, '{""l': 1, '""le': 1, 'lev': 1, 'eve': 1, 'vel': 1, 'el""': 1, 'l"":': 1, '"": ': 2, ': p': 1, 'rt,': 1, ', ""': 2, ' ""a': 1, '""an': 1, 'r"":': 1, ': a': 1, 'er}': 1, 'r},': 1, '},\n': 1, 'ES,': 1, 'S,\n': 1, ' ) ': 1, '(""F': 1, '""Fa': 1, 'Fai': 1, 'ed ': 1, 'd t': 1, 'o s': 1, 'e.""': 1, '."")': 1, '  h': 1, ' ht': 2, 'htm': 3, 'tml': 3, 'ml ': 1, '= B': 1, 'up(': 1, 'p(d': 1, 'ta,': 1, 'a, ': 1, ' ""h': 1, 'l.p': 1, 'ars': 1, 'rse': 1, 'ser': 1, 'se_': 10, 'e_t': 10, '_te': 10, 'tex': 12, 'xt:': 2, 'r =': 1, '= h': 1, 'l.a': 1, '.ar': 1, 'rti': 1, 'tic': 1, 'icl': 1, 'cle': 1, 'le.': 1, 'e.p': 1, '.p.': 1, 'p.t': 1, '.te': 1, 'xt\n': 1, 'f r': 4, 'xt.': 4, 't.s': 4, 'rts': 4, 'tsw': 4, 'swi': 4, 'h(""': 4, '(""Y': 2, '""Yo': 2, 'You': 2, 'ou ': 2, 'u d': 1, 'don': 1, ""on'"": 1, ""n't"": 1, '\'t""': 1, '""):': 4, 'e.Y': 1, '.YE': 1, 'YEL': 1, 'ELL': 1, 'LLO': 1, 'LOW': 1, 'OW ': 1, 'W +': 1, '+ r': 4, 'xt)': 4, 't)\n': 4, 'eli': 3, 'lif': 3, '(""T': 2, '""Th': 2, 'Tha': 2, 'hat': 2, ""at'"": 2, ""t's"": 2, ""'s "": 2, 's t': 1, 'he""': 1, 'e"")': 2, 'EN ': 1, 'N +': 1, 'ot""': 1, 'u g': 1, ' ga': 1, 'gav': 1, 'ave': 1, 've""': 1, 'f""U': 1, '""Un': 1, 'Unk': 1, 'nkn': 1, 'kno': 1, 'wn ': 1, ' te': 1, ': {': 1, ' {r': 1, '{re': 1, 'xt}': 1, 't}""': 1, '}"")': 1}"
Mushinako,run.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 4, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 2, 'from': 7, '__future__': 1, 'import': 10, 'annotations': 1, 'argparse': 1, 'shutil': 1, 'webbrowser': 1, 'importlib': 1, 'import_module': 1, 'pathlib': 1, 'path': 1, 'typing': 1, 'type_checking': 1, 'colorama': 1, 'fore,': 1, 'init': 1, 'aoc_io': 1, 'download_input,': 1, 'submit_output': 1, 'if': 10, 'type_checking:': 1, '.utils': 1, 'solutionabstract': 1, 'init(autoreset=true)': 1, '_preparation_commands': 2, '=': 17, '{""e"",': 1, '""er"",': 1, '""prepare""}': 1, '_download_commands': 2, '{""d"",': 1, '""dl"",': 1, '""download""}': 1, '_print_commands': 2, '{""p"",': 1, '""pr"",': 1, '""print""}': 1, '_submit_commands': 2, '{""s"",': 1, '""sub"",': 1, '""submit""}': 1, '_all_commands': 1, '(': 1, '|': 4, ')': 1, 'def': 2, '_main()': 2, '->': 2, 'none:': 3, 'parser': 1, 'argparse.argumentparser(description=""aoc': 1, '2021': 1, 'day': 1, '01"")': 1, 'parser.add_argument(""command"",': 1, 'choices=_all_commands)': 1, 'parser.add_argument(""day"",': 1, 'type=int,': 2, 'choices=range(1,': 1, '26))': 1, 'parser.add_argument(""part"",': 1, 'choices=(1,': 1, '2),': 1, 'nargs=""?"")': 1, 'args': 1, 'parser.parse_args()': 1, 'prepare': 1, 'args.command': 4, 'in': 6, '_preparation_commands:': 1, 'parent_dir': 3, 'path(__file__).resolve().parent': 1, 'target_dir': 1, '/': 2, 'f""day_{args.day:>02}""': 1, 'not': 2, 'target_dir.exists():': 1, 'origin_dir': 1, '""day_xx""': 1, 'shutil.copytree(origin_dir,': 1, 'target_dir)': 1, 'for': 1, 'subpath': 1, 'target_dir.iterdir():': 1, 'subpath.suffix': 1, '{"".md"",': 1, '"".py""}:': 1, 'continue': 1, 'with': 2, 'subpath.open(""r"")': 1, 'as': 2, 'f:': 2, 'data': 2, 'f.read()': 1, 'data.replace(""xx"",': 1, 'f""{args.day:>02}"").replace(""-1"",': 1, 'str(args.day))': 1, 'subpath.open(""w"")': 1, 'f.write(data)': 1, 'webbrowser.open(""https://adventofcode.com/2021"")': 1, 'download_input(day=args.day)': 2, 'return': 5, 'download': 1, 'input': 1, '_download_commands:': 1, 'run': 1, 'and': 1, 'get': 1, 'solution': 5, 'args.part': 1, 'is': 2, 'raise': 2, 'valueerror(""no': 1, 'part': 5, 'number': 2, 'provided."")': 1, '_get_solution(args.day,': 1, 'args.part)': 1, 'print(fore.red': 1, '+': 3, '""no': 1, 'response': 1, 'got.': 1, 'this': 1, 'may': 1, 'need': 1, 'manual': 1, 'processing."")': 1, '_print_commands:': 1, 'print(fore.green': 2, 'f""got': 2, '{solution!r}"")': 2, 'elif': 2, '_submit_commands:': 1, 'submit_output(day=args.day,': 1, 'part=args.part,': 1, 'answer=solution)': 1, '_get_solution(day:': 1, 'int,': 1, 'part:': 1, 'int)': 1, 'str': 1, 'int:': 1, 'dir_name': 1, 'f""day_{day:>02}""': 1, 'solution_module': 1, 'import_module(f""{dir_name}.solution"")': 1, 'solutionclass:': 1, 'type[solutionabstract]': 1, 'getattr(solution_module,': 1, '""solution"")': 1, 'solution_obj': 1, 'solutionclass()': 1, '==': 3, '1:': 1, 'solution_obj.part_1()': 1, '2:': 1, 'solution_obj.part_2()': 1, 'else:': 1, 'valueerror(f""unknown': 1, '{part}."")': 1, '__name__': 1, '""__main__"":': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 3, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 2, ': r': 1, ' re': 7, 'rep': 5, 'epo': 1, 'por': 14, 'ort': 14, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 2, 'sin': 2, 'ing': 3, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 4, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 1, 'lse': 2, 'se\n': 2, 'e\n""': 1, '\n""""': 1, '""""""': 8, '""""\n': 2, '""\n\n': 1, '\n\nf': 3, '\nfr': 6, 'fro': 7, 'rom': 7, 'om ': 7, 'm _': 1, ' __': 2, '__f': 2, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 6, 'ure': 1, 're_': 1, 'e__': 3, '__ ': 2, '_ i': 1, ' im': 10, 'imp': 13, 'mpo': 13, 'rt ': 16, 't a': 2, ' an': 3, 'ann': 1, 'nno': 1, 'not': 3, 'ota': 1, 'tat': 2, 'ati': 1, 'tio': 23, 'ion': 23, 'ons': 2, 'ns\n': 1, 's\n\n': 1, '\n\ni': 4, '\nim': 3, ' ar': 9, 'arg': 26, 'rgp': 2, 'gpa': 2, 'par': 28, 'ars': 9, 'rse': 9, 'e\ni': 1, 't s': 4, ' sh': 2, 'shu': 2, 'hut': 2, 'uti': 24, 'til': 3, 'il\n': 1, 'l\ni': 1, 't w': 1, ' we': 2, 'web': 2, 'ebb': 2, 'bbr': 2, 'bro': 2, 'row': 2, 'ows': 2, 'wse': 2, 'ser': 8, 'er\n': 1, 'r\nf': 1, 'm i': 1, 'rtl': 1, 'tli': 1, 'lib': 2, 'ib ': 2, 'b i': 2, 't i': 3, 'rt_': 4, 't_m': 2, '_mo': 4, 'mod': 4, 'odu': 4, 'dul': 4, 'ule': 4, 'le\n': 1, 'e\nf': 1, 'm p': 1, ' pa': 16, 'pat': 5, 'ath': 7, 'thl': 1, 'hli': 1, 't P': 1, ' Pa': 2, 'Pat': 2, 'th\n': 1, 'h\nf': 1, 'm t': 1, ' ty': 4, 'typ': 4, 'ypi': 1, 'pin': 1, 'ng ': 1, 'g i': 1, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm c': 1, ' co': 2, 'col': 1, 'olo': 1, 'lor': 1, 'ora': 1, 'ram': 1, 'ama': 1, 'ma ': 1, 'a i': 1, 't F': 1, ' Fo': 1, 'For': 4, 'ore': 5, 're,': 1, 'e, ': 2, ', i': 1, ' in': 11, 'ini': 2, 'nit': 2, 'it\n': 1, 't\n\n': 3, 'm a': 1, ' ao': 1, 'aoc': 1, 'oc_': 1, 'c_i': 1, '_io': 1, 'io ': 1, 'o i': 1, 't d': 1, ' do': 3, 'dow': 4, 'own': 6, 'wnl': 5, 'nlo': 5, 'loa': 5, 'oad': 5, 'ad_': 3, 'd_i': 3, '_in': 3, 'inp': 4, 'npu': 4, 'put': 6, 'ut,': 1, 't, ': 5, ', s': 2, ' su': 6, 'sub': 8, 'ubm': 3, 'bmi': 3, 'mit': 3, 'it_': 2, 't_o': 2, '_ou': 2, 'out': 2, 'utp': 2, 'tpu': 2, 'ut\n': 2, '\nif': 2, 'if ': 12, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 18, '\n  ': 53, '   ': 262, '  f': 3, ' fr': 1, 'm .': 1, ' .u': 1, '.ut': 1, 'ils': 1, 'ls ': 1, 's i': 1, 't S': 1, ' So': 3, 'Sol': 5, 'olu': 21, 'lut': 21, 'onA': 2, 'nAb': 2, 'Abs': 2, 'bst': 2, 'str': 4, 'tra': 2, 'rac': 2, 'act': 2, 'ct\n': 1, '\nin': 1, 'it(': 1, 't(a': 1, '(au': 1, 'aut': 1, 'uto': 1, 'tor': 1, 'res': 3, 'ese': 1, 'set': 1, 'et=': 1, 't=T': 1, '=Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e)\n': 1, ')\n\n': 5, '\n\n_': 1, '\n_P': 2, '_PR': 6, 'PRE': 3, 'REP': 3, 'EPA': 3, 'PAR': 3, 'ARA': 3, 'RAT': 3, 'ATI': 3, 'TIO': 3, 'ION': 3, 'ON_': 3, 'N_C': 3, '_CO': 14, 'COM': 14, 'OMM': 14, 'MMA': 14, 'MAN': 14, 'AND': 14, 'NDS': 14, 'DS ': 8, 'S =': 5, ' = ': 17, '= {': 4, ' {""': 5, '{""e': 1, '""e""': 1, 'e"",': 1, '"", ': 14, ', ""': 10, ' ""e': 1, '""er': 1, 'er""': 1, 'r"",': 2, ' ""p': 3, '""pr': 3, 'pre': 1, 'epa': 2, 'are': 6, 're""': 1, 'e""}': 1, '""}\n': 4, '}\n_': 4, '\n_D': 1, '_DO': 3, 'DOW': 3, 'OWN': 3, 'WNL': 3, 'NLO': 3, 'LOA': 3, 'OAD': 3, 'AD_': 3, 'D_C': 3, '{""d': 1, '""d""': 1, 'd"",': 3, ' ""d': 3, '""dl': 1, 'dl""': 1, 'l"",': 1, '""do': 1, 'ad""': 1, 'd""}': 1, 'PRI': 3, 'RIN': 3, 'INT': 3, 'NT_': 3, 'T_C': 6, '{""p': 1, '""p""': 1, 'p"",': 1, 'pr""': 1, 'pri': 4, 'rin': 4, 'int': 9, 'nt""': 1, 't""}': 2, '\n_S': 1, '_SU': 3, 'SUB': 3, 'UBM': 3, 'BMI': 3, 'MIT': 3, 'IT_': 3, '{""s': 1, '""s""': 1, 's"",': 1, ' ""s': 2, '""su': 2, 'ub""': 1, 'b"",': 1, 'it""': 1, '\n_A': 1, '_AL': 2, 'ALL': 2, 'LL_': 2, 'L_C': 2, '= (': 1, ' (\n': 1, '(\n ': 1, '  _': 2, ' _P': 4, 'S |': 3, ' | ': 4, '| _': 3, ' _D': 2, ' _S': 2, 'DS\n': 1, 'S\n)': 1, '\n)\n': 1, '\n\n\n': 3, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f _': 3, ' _m': 2, '_ma': 3, 'mai': 3, 'ain': 3, 'in(': 2, 'n()': 2, '() ': 1, ') -': 2, ' ->': 2, '-> ': 2, '> N': 1, ' No': 3, 'Non': 3, 'one': 3, 'ne:': 3, 'e:\n': 4, '  p': 8, 'er ': 3, 'r =': 4, '= a': 1, 'se.': 1, 'e.A': 1, '.Ar': 1, 'Arg': 1, 'rgu': 4, 'gum': 4, 'ume': 4, 'men': 4, 'ent': 9, 'ntP': 1, 'tPa': 1, 'Par': 1, 'er(': 1, 'r(d': 1, '(de': 1, 'des': 1, 'esc': 1, 'scr': 1, 'cri': 1, 'rip': 1, 'ipt': 1, 'pti': 1, 'on=': 1, 'n=""': 1, '=""A': 1, '""Ao': 1, 'AoC': 1, 'oC ': 1, 'C 2': 1, ' 20': 1, '202': 2, '021': 2, '21 ': 1, '1 d': 1, ' da': 4, 'day': 17, 'ay ': 2, 'y 0': 1, ' 01': 1, '01""': 1, '1"")': 2, '"")\n': 10, ')\n ': 21, 'er.': 5, 'r.a': 3, '.ad': 3, 'add': 3, 'dd_': 3, 'd_a': 3, '_ar': 4, 'nt(': 6, 't(""': 3, '(""c': 1, '""co': 1, 'com': 6, 'omm': 5, 'mma': 5, 'man': 6, 'and': 6, 'nd""': 1, ', c': 3, ' ch': 3, 'cho': 3, 'hoi': 3, 'oic': 3, 'ice': 3, 'ces': 4, 'es=': 3, 's=_': 1, '=_A': 1, 'DS)': 1, 'S)\n': 1, '(""d': 1, '""da': 4, 'ay""': 1, 'y"",': 1, ', t': 3, 'pe=': 2, 'e=i': 2, '=in': 2, 'nt,': 3, 's=r': 1, '=ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(1': 1, '(1,': 2, '1, ': 2, ', 2': 2, ' 26': 1, '26)': 1, '6))': 1, '))\n': 2, '(""p': 1, '""pa': 1, 'art': 14, 'rt""': 1, 't"",': 1, 's=(': 1, '=(1': 1, ' 2)': 1, '2),': 1, '), ': 1, ', n': 1, ' na': 1, 'nar': 1, 'rgs': 17, 'gs=': 1, 's=""': 1, '=""?': 1, '""?""': 1, '?"")': 1, '  a': 1, 'gs ': 1, 's =': 1, '= p': 3, 'r.p': 1, '.pa': 7, 'se_': 1, 'e_a': 1, 'gs(': 1, 's()': 3, '()\n': 5, '\n\n ': 3, '  #': 3, ' # ': 3, '# P': 1, ' Pr': 1, 'Pre': 1, 're\n': 1, 'e\n ': 2, '  i': 8, ' if': 8, 'f a': 5, 'gs.': 14, 's.c': 4, '.co': 6, 'nd ': 5, 'd i': 5, 'in ': 6, 'n _': 4, 'DS:': 4, 'S:\n': 4, 'ren': 4, 'nt_': 3, 't_d': 7, '_di': 9, 'dir': 12, 'ir ': 5, '= P': 1, 'th(': 1, 'h(_': 1, '(__': 1, '_fi': 1, 'fil': 1, 'ile': 1, 'le_': 1, '__)': 1, '_).': 1, ').r': 2, '.re': 4, 'eso': 1, 'sol': 17, 'olv': 1, 'lve': 1, 've(': 1, 'e()': 1, '().': 1, ').p': 1, 'nt\n': 1, 't\n ': 2, '  t': 1, ' ta': 4, 'tar': 4, 'rge': 4, 'get': 8, 'et_': 6, 'r /': 2, ' / ': 2, '/ f': 1, ' f""': 5, 'f""d': 2, 'ay_': 3, 'y_{': 2, '_{a': 1, '{ar': 2, 's.d': 7, '.da': 7, 'ay:': 4, 'y:>': 3, ':>0': 3, '>02': 3, '02}': 3, '2}""': 3, '}""\n': 2, '""\n ': 4, 'f n': 1, ' no': 2, 'ot ': 4, 't t': 1, 'ir.': 2, 'r.e': 1, '.ex': 1, 'exi': 1, 'xis': 1, 'ist': 1, 'sts': 1, 'ts(': 1, '():': 2, '):\n': 2, '  o': 1, ' or': 1, 'ori': 2, 'igi': 2, 'gin': 2, 'in_': 3, 'n_d': 2, '/ ""': 1, 'y_x': 1, '_xx': 1, 'xx""': 2, 'x""\n': 1, '  s': 5, 'il.': 1, 'l.c': 1, 'cop': 1, 'opy': 1, 'pyt': 1, 'ytr': 1, 'tre': 1, 'ree': 1, 'ee(': 1, 'e(o': 1, '(or': 1, 'ir,': 1, 'r, ': 1, 'ir)': 1, 'r)\n': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r s': 1, 'ubp': 4, 'bpa': 4, 'th ': 3, 'h i': 1, 'n t': 1, 'r.i': 1, '.it': 1, 'ite': 2, 'ter': 1, 'erd': 1, 'rdi': 1, 'ir(': 1, 'r()': 1, 'f s': 2, 'th.': 3, 'h.s': 1, '.su': 1, 'suf': 1, 'uff': 1, 'ffi': 1, 'fix': 1, 'ix ': 1, 'x n': 1, 'n {': 3, '{"".': 1, '"".m': 1, '.md': 1, 'md""': 1, ' "".': 1, '"".p': 1, '.py': 1, 'py""': 1, 'y""}': 1, '""}:': 1, '}:\n': 1, '  c': 1, 'con': 1, 'ont': 1, 'nti': 1, 'tin': 1, 'inu': 1, 'nue': 1, 'ue\n': 1, '  w': 3, ' wi': 2, 'wit': 2, 'ith': 2, 'h s': 2, 'h.o': 2, '.op': 3, 'ope': 3, 'pen': 3, 'en(': 3, 'n(""': 3, '(""r': 1, '""r""': 1, 'r"")': 1, '"") ': 2, ') a': 2, ' as': 2, 'as ': 2, 's f': 2, ' f:': 2, 'f:\n': 2, '  d': 5, 'dat': 4, 'ata': 4, 'ta ': 2, 'a =': 2, '= f': 2, ' f.': 2, 'f.r': 1, 'rea': 1, 'ead': 1, 'ad(': 1, 'd()': 1, '= d': 1, 'ta.': 1, 'a.r': 1, 'epl': 2, 'pla': 2, 'lac': 2, 'ace': 2, 'ce(': 2, 'e(""': 2, '(""x': 1, '""xx': 1, 'x"",': 1, ', f': 1, 'f""{': 2, '""{a': 1, '}"")': 3, '"").': 1, '(""-': 1, '""-1': 1, '-1""': 1, '1"",': 1, ' st': 2, 'tr(': 2, 'r(a': 1, '(ar': 2, 'ay)': 3, 'y))': 1, '(""w': 1, '""w""': 1, 'w"")': 1, 'f.w': 1, '.wr': 1, 'wri': 1, 'rit': 1, 'te(': 1, 'e(d': 1, '(da': 5, 'ta)': 1, 'a)\n': 1, 'r.o': 1, '(""h': 1, '""ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//a': 1, '/ad': 1, 'adv': 1, 'dve': 1, 'ven': 1, 'nto': 1, 'tof': 1, 'ofc': 1, 'fco': 1, 'cod': 1, 'ode': 1, 'de.': 1, 'e.c': 1, 'om/': 1, 'm/2': 1, '/20': 1, '21""': 1, 'ut(': 3, 't(d': 3, 'ay=': 3, 'y=a': 3, '=ar': 4, 'y)\n': 2, '  r': 7, 'ret': 5, 'etu': 5, 'urn': 5, 'rn\n': 3, 'n\n\n': 2, '# D': 1, ' Do': 1, 'Dow': 1, 'ad ': 1, '# R': 1, ' Ru': 1, 'Run': 1, 'un ': 1, 'n a': 1, 'd g': 1, ' ge': 2, 'et ': 1, ' so': 9, 'on\n': 1, 'n\n ': 2, 's.p': 3, ' is': 2, 'is ': 3, 's N': 2, ' ra': 2, 'rai': 2, 'ais': 2, 'ise': 2, 'se ': 3, 'e V': 2, ' Va': 2, 'Val': 2, 'alu': 2, 'lue': 2, 'ueE': 2, 'eEr': 2, 'Err': 2, 'rro': 2, 'ror': 2, 'or(': 2, 'r(""': 1, '(""N': 1, '""No': 2, 'No ': 2, 'o p': 1, 't n': 2, ' nu': 2, 'num': 2, 'umb': 2, 'mbe': 2, 'ber': 2, 'r p': 1, ' pr': 5, 'pro': 2, 'rov': 1, 'ovi': 1, 'vid': 1, 'ide': 1, 'ded': 1, 'ed.': 1, 'd.""': 1, '."")': 3, 'on ': 4, 'n =': 1, '= _': 1, ' _g': 2, '_ge': 2, 't_s': 2, '_so': 2, 'on(': 2, 'n(a': 1, 'ay,': 2, 'y, ': 2, ', a': 2, 'rt)': 1, 't)\n': 1, 'n i': 1, 't(F': 3, '(Fo': 3, 're.': 3, 'e.R': 1, '.RE': 1, 'RED': 1, 'ED ': 1, 'D +': 1, ' + ': 3, '+ ""': 1, ' ""N': 1, 'o r': 1, 'esp': 1, 'spo': 1, 'pon': 1, 'nse': 1, 'e g': 1, ' go': 1, 'got': 1, 'ot.': 1, 't. ': 1, '. T': 1, ' Th': 1, 'Thi': 1, 'his': 1, 's p': 1, 't m': 1, ' ma': 2, 'may': 1, 'y n': 1, ' ne': 1, 'nee': 1, 'eed': 1, 'ed ': 1, 'd m': 1, 'anu': 1, 'nua': 1, 'ual': 1, 'al ': 1, 'l p': 1, 'roc': 1, 'oce': 1, 'ess': 1, 'ng.': 1, 'g.""': 1, 'e.G': 2, '.GR': 2, 'GRE': 2, 'REE': 2, 'EEN': 2, 'EN ': 2, 'N +': 2, '+ f': 2, 'f""G': 2, '""Go': 2, 'Got': 2, ' {s': 2, '{so': 2, 'on!': 2, 'n!r': 2, '!r}': 2, 'r}""': 2, '  e': 3, ' el': 3, 'eli': 2, 'lif': 2, ', p': 2, 'rt=': 1, 't=a': 1, 'rt,': 1, 'ans': 1, 'nsw': 1, 'swe': 1, 'wer': 1, 'er=': 1, 'r=s': 1, '=so': 1, 'on)': 1, 'n)\n': 1, 'n(d': 1, 'y: ': 1, ': i': 2, 'rt:': 1, 'nt)': 1, 't) ': 1, '> s': 1, 'tr ': 1, 'r |': 1, '| i': 1, 'nt:': 1, 't:\n': 1, '  ""': 1, ' """"': 1, ' di': 1, 'ir_': 2, 'r_n': 2, '_na': 3, 'nam': 3, 'ame': 3, 'me ': 1, 'e =': 2, '_{d': 1, '{da': 1, 'on_': 5, 'n_m': 2, 'le ': 1, '= i': 1, 'le(': 1, 'e(f': 1, '(f""': 2, '""{d': 1, '{di': 1, 'me}': 1, 'e}.': 1, '}.s': 1, '.so': 1, 'on""': 2, 'n"")': 2, '  S': 1, 'onC': 2, 'nCl': 2, 'Cla': 2, 'las': 2, 'ass': 2, 'ss:': 1, 's: ': 1, ': t': 1, 'pe[': 1, 'e[S': 1, '[So': 1, 'ct]': 1, 't] ': 1, '] =': 1, '= g': 1, 'eta': 1, 'att': 1, 'ttr': 1, 'r(s': 1, '(so': 1, 'le,': 1, ' ""S': 1, '""So': 1, 'n_o': 3, '_ob': 3, 'obj': 3, 'bj ': 1, 'j =': 1, '= S': 1, 'ss(': 1, 'f p': 2, 't =': 2, ' ==': 3, '== ': 3, '= 1': 1, ' 1:': 1, '1:\n': 1, 'rn ': 2, 'n s': 2, 'bj.': 2, 'j.p': 2, 't_1': 1, '_1(': 1, '1()': 1, '= 2': 1, ' 2:': 1, '2:\n': 1, 't_2': 1, '_2(': 1, '2()': 1, 'els': 1, 'se:': 1, 'r(f': 1, 'f""U': 1, '""Un': 1, 'Unk': 1, 'nkn': 1, 'kno': 1, 'now': 1, 'wn ': 1, 'n p': 1, 'r {': 1, ' {p': 1, '{pa': 1, 'rt}': 1, 't}.': 1, '}.""': 1, '__n': 1, 'me_': 1, '_ =': 1, '= ""': 1, ' ""_': 1, '""__': 1, '__m': 1, 'n__': 1, '__""': 1, '_"":': 1, '"":\n': 1}"
Mushinako,solution1.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 1, 'from': 3, '__future__': 1, 'import': 3, 'annotations': 1, 'typing': 1, 'type_checking': 1, 'utils': 1, 'solutionabstract': 1, 'if': 1, 'type_checking:': 1, '_data': 2, '=': 2, 'list[int]': 1, 'class': 1, 'solution(solutionabstract):': 1, 'day': 4, '1': 2, 'data:': 1, '@staticmethod': 1, 'def': 3, '_process_data(raw_data:': 1, 'list[str])': 1, '->': 3, '_data:': 1, '""""""': 6, 'process': 1, '01': 3, 'data.': 1, 'return': 3, '[int(line)': 1, 'for': 3, 'line': 1, 'in': 3, 'raw_data]': 1, 'part_1(self)': 1, 'int:': 2, 'part': 2, 'solution.': 2, 'sum(self.data[i': 2, '+': 2, '1]': 1, '>': 2, 'self.data[i]': 2, 'i': 2, 'range(len(self.data)': 2, '-': 2, '1))': 1, 'part_2(self)': 1, '2': 1, '3]': 1, '3))': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 1, ': r': 1, ' re': 4, 'rep': 1, 'epo': 1, 'por': 4, 'ort': 4, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 1, 'ing': 2, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 10, '""""\n': 7, '""\n\n': 1, '\n\nf': 3, '\nfr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm _': 1, ' __': 1, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 4, 'ure': 1, 're_': 1, 'e__': 1, '__ ': 1, '_ i': 1, ' im': 3, 'imp': 3, 'mpo': 3, 'rt ': 5, 't a': 1, ' an': 1, 'ann': 1, 'nno': 1, 'not': 1, 'ota': 1, 'tat': 2, 'ati': 2, 'tio': 6, 'ion': 6, 'ons': 1, 'ns\n': 1, 's\n\n': 1, 'm t': 1, ' ty': 1, 'typ': 1, 'ypi': 1, 'pin': 1, 'ng ': 1, 'g i': 1, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm u': 1, ' ut': 1, 'uti': 6, 'til': 1, 'ils': 1, 'ls ': 1, 's i': 1, 't S': 1, ' So': 2, 'Sol': 3, 'olu': 5, 'lut': 5, 'onA': 2, 'nAb': 2, 'Abs': 2, 'bst': 2, 'str': 3, 'tra': 2, 'rac': 2, 'act': 2, 'ct\n': 1, 't\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 5, '\n  ': 19, '   ': 86, '  _': 1, ' _D': 3, '_Da': 3, 'Dat': 3, 'ata': 14, 'ta ': 1, 'a =': 1, ' = ': 2, '= l': 1, ' li': 3, 'lis': 2, 'ist': 2, 'st[': 2, 't[i': 1, '[in': 2, 'int': 4, 'nt]': 1, 't]\n': 1, ']\n\n': 2, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 2, 's S': 1, 'on(': 1, 'n(S': 1, '(So': 1, 'ct)': 1, 't):': 1, '):\n': 1, '  d': 5, ' da': 4, 'day': 2, 'ay ': 4, 'y =': 1, '= 1': 1, ' 1\n': 1, '1\n ': 1, 'dat': 11, 'ta:': 3, 'a: ': 2, ': _': 1, 'ta\n': 1, 'a\n\n': 1, '\n\n ': 3, '  @': 1, ' @s': 1, '@st': 1, 'sta': 1, 'tic': 1, 'icm': 1, 'cme': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od\n': 1, 'd\n ': 1, ' de': 3, 'def': 3, 'ef ': 3, 'f _': 1, ' _p': 1, '_pr': 1, 'pro': 1, 'roc': 2, 'oce': 2, 'ces': 2, 'ess': 2, 'ss_': 1, 's_d': 1, '_da': 3, 'ta(': 1, 'a(r': 1, '(ra': 1, 'raw': 2, 'aw_': 2, 'w_d': 2, ': l': 1, 't[s': 1, '[st': 1, 'tr]': 1, 'r])': 1, ']) ': 1, ') -': 5, ' ->': 3, '-> ': 3, '> _': 1, 'a:\n': 1, '  ""': 6, ' """"': 6, '""\n ': 6, '  P': 1, ' Pr': 1, 'Pro': 1, 's d': 1, 'y 0': 3, ' 01': 3, '01 ': 3, '1 d': 1, 'ta.': 1, 'a.\n': 1, '.\n ': 3, '  r': 3, 'ret': 3, 'etu': 3, 'urn': 3, 'rn ': 3, 'n [': 1, ' [i': 1, 'nt(': 1, 't(l': 1, '(li': 1, 'lin': 2, 'ine': 2, 'ne)': 1, 'e) ': 1, ') f': 1, ' fo': 3, 'for': 3, 'or ': 3, 'r l': 1, 'ne ': 1, 'e i': 1, ' in': 5, 'in ': 3, 'n r': 3, ' ra': 3, 'ta]': 1, 'a]\n': 1, 'f p': 2, ' pa': 4, 'par': 4, 'art': 4, 'rt_': 2, 't_1': 1, '_1(': 1, '1(s': 1, '(se': 6, 'sel': 8, 'elf': 8, 'lf)': 2, 'f) ': 2, '> i': 2, 'nt:': 2, 't:\n': 2, '  D': 2, ' Da': 2, 'Day': 2, '1 p': 2, 't 1': 1, ' 1 ': 1, '1 s': 1, ' so': 2, 'sol': 2, 'on.': 2, 'n.\n': 2, 'n s': 2, ' su': 2, 'sum': 2, 'um(': 2, 'm(s': 2, 'lf.': 6, 'f.d': 6, '.da': 6, 'ta[': 4, 'a[i': 4, '[i ': 2, 'i +': 2, ' + ': 2, '+ 1': 1, ' 1]': 1, '1] ': 1, '] >': 2, ' > ': 2, '> s': 2, ' se': 2, '[i]': 2, 'i] ': 2, '] f': 2, 'r i': 2, ' i ': 2, 'i i': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(l': 2, '(le': 2, 'len': 2, 'en(': 2, 'n(s': 2, 'ta)': 2, 'a) ': 2, ' - ': 2, '- 1': 1, ' 1)': 1, '1))': 1, '))\n': 1, ')\n\n': 1, 't_2': 1, '_2(': 1, '2(s': 1, 't 2': 1, ' 2 ': 1, '2 s': 1, '+ 3': 1, ' 3]': 1, '3] ': 1, '- 3': 1, ' 3)': 1, '3))': 1}"
Mushinako,solution10.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 3, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 1, 'from': 4, '__future__': 1, 'import': 4, 'annotations': 1, 'statistics': 1, 'median': 1, 'typing': 1, 'type_checking': 1, 'utils': 1, 'solutionabstract': 1, 'if': 5, 'type_checking:': 1, '_data': 2, '=': 15, 'list[str]': 3, 'class': 1, 'solution(solutionabstract):': 1, 'day': 4, '10': 4, 'data:': 1, '@staticmethod': 1, 'def': 3, '_process_data(raw_data:': 1, 'list[str])': 1, '->': 3, '_data:': 1, '""""""': 6, 'process': 1, 'data.': 1, 'return': 3, 'raw_data': 1, 'part_1(self)': 1, 'int:': 2, 'part': 2, '1': 1, 'solution.': 2, 'pair_map': 2, '{""("":': 3, '"")"",': 2, '""["":': 3, '""]"",': 2, '""{"":': 3, '""}"",': 2, '""<"":': 3, '"">""}': 2, 'score_map': 2, '{"")"":': 1, '3,': 2, '""]"":': 1, '57,': 1, '""}"":': 1, '1197,': 1, '"">"":': 1, '25137}': 1, 'sum_': 3, '0': 2, 'for': 5, 'line': 3, 'in': 7, 'self.data:': 2, 'stack:': 2, '[]': 3, 'char': 7, 'line:': 2, 'pair_map:': 2, 'stack.append(char)': 2, 'else:': 3, 'last_open': 2, 'stack.pop()': 2, 'correct_char': 2, 'pair_map[last_open]': 2, '!=': 2, 'correct_char:': 2, '+=': 2, 'score_map[char]': 2, 'break': 2, 'part_2(self)': 1, '2': 1, '1,': 1, '2,': 1, '4}': 1, 'scores:': 1, 'list[int]': 1, 'broken': 2, 'all': 1, 'checked,': 1, 'no': 1, 'sub_total': 3, 'reversed(stack):': 1, '*=': 1, '5': 1, 'scores.append(sub_total)': 1, 'int(median(scores))': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 1, ': r': 1, ' re': 5, 'rep': 1, 'epo': 1, 'por': 5, 'ort': 5, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 1, 'ing': 2, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 1, 'lse': 4, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 10, '""""\n': 7, '""\n\n': 1, '\n\nf': 3, '\nfr': 4, 'fro': 4, 'rom': 4, 'om ': 4, 'm _': 1, ' __': 1, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 4, 'ure': 1, 're_': 5, 'e__': 1, '__ ': 1, '_ i': 1, ' im': 4, 'imp': 4, 'mpo': 4, 'rt ': 6, 't a': 1, ' an': 1, 'ann': 1, 'nno': 1, 'not': 1, 'ota': 5, 'tat': 3, 'ati': 3, 'tio': 6, 'ion': 6, 'ons': 1, 'ns\n': 1, 's\n\n': 1, 'm s': 1, ' st': 7, 'sta': 9, 'tis': 1, 'ist': 6, 'sti': 1, 'tic': 2, 'ics': 1, 'cs ': 1, 's i': 2, 't m': 1, ' me': 1, 'med': 2, 'edi': 2, 'dia': 2, 'ian': 2, 'an\n': 1, 'n\nf': 1, 'm t': 1, ' ty': 1, 'typ': 1, 'ypi': 1, 'pin': 1, 'ng ': 1, 'g i': 1, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm u': 1, ' ut': 1, 'uti': 6, 'til': 1, 'ils': 1, 'ls ': 1, 't S': 1, ' So': 2, 'Sol': 3, 'olu': 5, 'lut': 5, 'onA': 2, 'nAb': 2, 'Abs': 2, 'bst': 2, 'str': 6, 'tra': 2, 'rac': 2, 'act': 2, 'ct\n': 1, 't\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 5, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 17, '\n  ': 54, '   ': 560, '  _': 1, ' _D': 3, '_Da': 3, 'Dat': 3, 'ata': 10, 'ta ': 1, 'a =': 1, ' = ': 15, '= l': 1, ' li': 10, 'lis': 5, 'st[': 5, 't[s': 4, '[st': 4, 'tr]': 4, 'r]\n': 3, ']\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 5, 'ass': 1, 'ss ': 2, 's S': 1, 'on(': 1, 'n(S': 1, '(So': 1, 'ct)': 1, 't):': 1, '):\n': 2, '  d': 5, ' da': 4, 'day': 2, 'ay ': 4, 'y =': 1, '= 1': 1, ' 10': 4, '10\n': 1, '0\n ': 3, 'dat': 7, 'ta:': 5, 'a: ': 2, ': _': 1, 'ta\n': 2, 'a\n\n': 2, '\n\n ': 3, '  @': 1, ' @s': 1, '@st': 1, 'icm': 1, 'cme': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od\n': 1, 'd\n ': 1, ' de': 3, 'def': 3, 'ef ': 3, 'f _': 1, ' _p': 1, '_pr': 1, 'pro': 1, 'roc': 2, 'oce': 2, 'ces': 2, 'ess': 2, 'ss_': 1, 's_d': 1, '_da': 3, 'ta(': 1, 'a(r': 1, '(ra': 1, 'raw': 2, 'aw_': 2, 'w_d': 2, ': l': 4, 'r])': 1, ']) ': 1, ') -': 3, ' ->': 3, '-> ': 3, '> _': 1, 'a:\n': 3, '  ""': 6, ' """"': 6, '""\n ': 6, '  P': 1, ' Pr': 1, 'Pro': 1, 's d': 1, 'y 1': 3, '10 ': 3, '0 d': 1, 'ta.': 1, 'a.\n': 1, '.\n ': 3, '  r': 3, 'ret': 3, 'etu': 3, 'urn': 3, 'rn ': 3, 'n r': 2, ' ra': 1, 'f p': 2, ' pa': 10, 'par': 4, 'art': 4, 'rt_': 2, 't_1': 1, '_1(': 1, '1(s': 1, '(se': 2, 'sel': 4, 'elf': 4, 'lf)': 2, 'f) ': 2, '> i': 2, ' in': 10, 'int': 4, 'nt:': 2, 't:\n': 2, '  D': 2, ' Da': 2, 'Day': 2, '0 p': 2, 't 1': 1, ' 1 ': 1, '1 s': 1, ' so': 2, 'sol': 2, 'on.': 2, 'n.\n': 2, '  p': 2, 'pai': 6, 'air': 6, 'ir_': 6, 'r_m': 6, '_ma': 10, 'map': 10, 'ap ': 4, 'p =': 4, '= {': 4, ' {""': 4, '{""(': 3, '""(""': 3, '("":': 3, '"": ': 16, ': ""': 8, ' "")': 2, '"")""': 3, ')"",': 2, '"", ': 6, ', ""': 12, ' ""[': 3, '""[""': 3, '["":': 3, ' ""]': 3, '""]""': 3, ']"",': 2, ' ""{': 3, '""{""': 3, '{"":': 3, ' ""}': 3, '""}""': 3, '}"",': 2, ' ""<': 3, '""<""': 3, '<"":': 3, ' "">': 3, '"">""': 3, '>""}': 2, '""}\n': 2, '}\n ': 4, '  s': 13, ' sc': 6, 'sco': 7, 'cor': 11, 'ore': 7, 'e_m': 4, '{"")': 1, ')"":': 1, ': 3': 2, ' 3,': 2, '3, ': 2, ']"":': 1, ': 5': 1, ' 57': 1, '57,': 1, '7, ': 2, '}"":': 1, ': 1': 2, ' 11': 1, '119': 1, '197': 1, '97,': 1, '>"":': 1, ': 2': 2, ' 25': 1, '251': 1, '513': 1, '137': 1, '37}': 1, '7}\n': 1, ' su': 6, 'sum': 3, 'um_': 3, 'm_ ': 2, '_ =': 1, '= 0': 2, ' 0\n': 2, '  f': 5, ' fo': 5, 'for': 5, 'or ': 5, 'r l': 2, 'lin': 5, 'ine': 5, 'ne ': 2, 'e i': 2, 'in ': 7, 'n s': 3, ' se': 2, 'lf.': 2, 'f.d': 2, '.da': 2, 'tac': 7, 'ack': 7, 'ck:': 2, 'k: ': 2, 'r] ': 2, '] =': 3, '= [': 3, ' []': 3, '[]\n': 3, ']\n ': 7, 'r c': 3, ' ch': 8, 'cha': 15, 'har': 15, 'ar ': 9, 'r i': 5, 'n l': 3, 'ne:': 2, 'e:\n': 5, '  i': 4, ' if': 4, 'f c': 4, 'n p': 2, 'ap:': 2, 'p:\n': 2, 'ck.': 4, 'k.a': 2, '.ap': 3, 'app': 3, 'ppe': 3, 'pen': 7, 'end': 3, 'nd(': 3, 'd(c': 2, '(ch': 2, 'ar)': 2, 'r)\n': 2, ')\n ': 5, '  e': 3, ' el': 3, 'els': 3, 'se:': 3, '  l': 2, ' la': 2, 'ast': 4, 'st_': 4, 't_o': 4, '_op': 4, 'ope': 4, 'en ': 3, 'n =': 2, '= s': 4, 'k.p': 2, '.po': 2, 'pop': 2, 'op(': 2, 'p()': 2, '()\n': 2, '  c': 2, ' co': 4, 'orr': 4, 'rre': 4, 'rec': 4, 'ect': 4, 'ct_': 4, 't_c': 4, '_ch': 4, 'r =': 2, '= p': 2, 'ap[': 4, 'p[l': 2, '[la': 2, 'en]': 2, 'n]\n': 2, 'r !': 2, ' !=': 2, '!= ': 2, '= c': 2, 'ar:': 2, 'r:\n': 2, '_ +': 1, ' +=': 2, '+= ': 2, 'p[c': 2, '[ch': 2, 'ar]': 2, '  b': 2, ' br': 3, 'bre': 2, 'rea': 2, 'eak': 2, 'ak\n': 2, 'k\n ': 2, 'm_\n': 1, '_\n\n': 1, 't_2': 1, '_2(': 1, '2(s': 1, 't 2': 1, ' 2 ': 1, '2 s': 1, ' 1,': 1, '1, ': 1, ' 2,': 1, '2, ': 1, ': 4': 1, ' 4}': 1, '4}\n': 1, 'res': 3, 'es:': 1, 's: ': 1, 't[i': 1, '[in': 1, 'nt]': 1, 't] ': 1, '  #': 2, ' # ': 2, '# B': 1, ' Br': 1, 'Bro': 1, 'rok': 2, 'oke': 2, 'ken': 2, 'ne\n': 1, 'e\n ': 1, '# A': 1, ' Al': 1, 'All': 1, 'll ': 1, 'l c': 1, 'che': 1, 'hec': 1, 'eck': 1, 'cke': 1, 'ked': 1, 'ed,': 1, 'd, ': 1, ', n': 1, ' no': 1, 'no ': 1, 'o b': 1, 'bro': 1, 'en\n': 1, 'n\n ': 1, 'sub': 4, 'ub_': 4, 'b_t': 4, '_to': 4, 'tot': 4, 'tal': 4, 'al ': 3, 'l =': 1, 'rev': 1, 'eve': 1, 'ver': 1, 'ers': 1, 'rse': 1, 'sed': 1, 'ed(': 1, 'd(s': 2, '(st': 1, 'ck)': 1, 'k):': 1, 'l *': 1, ' *=': 1, '*= ': 1, '= 5': 1, ' 5\n': 1, '5\n ': 1, 'l +': 1, 'es.': 1, 's.a': 1, '(su': 1, 'al)': 1, 'l)\n': 1, 'n i': 1, 'nt(': 1, 't(m': 1, '(me': 1, 'an(': 1, 'n(s': 1, '(sc': 1, 'es)': 1, 's))': 1}"
Mushinako,solution11.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 2, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 5, 'from': 4, '__future__': 1, 'import': 4, 'annotations': 1, 'itertools': 1, 'count': 1, 'typing': 1, 'type_checking': 1, 'utils': 1, 'solutionabstract': 1, 'if': 9, 'type_checking:': 1, '_coord': 1, '=': 21, 'tuple[int,': 4, 'int]': 1, '_data': 2, 'list[list[int]]': 1, 'class': 1, 'solution(solutionabstract):': 1, 'day': 4, '11': 4, 'data:': 1, 'def': 8, '__init__(self)': 1, '->': 8, 'none:': 1, 'super().__init__()': 1, 'self.height': 3, 'len(self.data)': 1, 'self.width': 3, 'len(self.data[0])': 1, '@staticmethod': 1, '_process_data(raw_data:': 1, 'list[str])': 1, '_data:': 1, '""""""': 6, 'process': 1, 'data.': 1, 'return': 7, '[[int(n)': 1, 'for': 14, 'n': 4, 'in': 15, 'line]': 1, 'line': 1, 'raw_data]': 1, 'part_1(self)': 1, 'int:': 2, 'part': 2, '1': 6, 'solution.': 2, 'sum(self._run_step()[0]': 1, '_': 1, 'range(100))': 1, 'part_2(self)': 1, '2': 1, 'size': 1, '*': 1, 'make': 1, 'linter': 1, 'happy': 1, '0': 4, 'count(1):': 1, 'flashed': 2, 'self._run_step()[1]': 1, 'len(flashed)': 1, '==': 1, 'size:': 1, 'break': 1, '_get_affected_cells(self,': 1, 'i:': 1, 'int,': 1, 'j:': 1, 'int)': 1, 'set[_coord]:': 1, 'affected_rows:': 1, 'set[int]': 2, '{i}': 1, 'i': 4, '>': 2, '0:': 2, 'affected_rows.add(i': 2, '-': 4, '1)': 4, '<': 2, '1:': 2, '+': 2, 'affected_cols:': 1, '{j}': 1, 'j': 6, 'affected_cols.add(j': 2, 'affected_cells:': 4, 'set[_coord]': 5, '{': 1, '(ai,': 1, 'aj)': 1, 'ai': 1, 'affected_rows': 1, 'aj': 3, 'affected_cols': 1, '}': 1, 'affected_cells.remove((i,': 1, 'j))': 3, 'affected_cells': 7, '_initial_flash(self)': 1, 'set[_coord],': 2, 'set[_coord]]:': 3, 'counter': 5, 'flashed:': 4, 'set()': 3, 'all_affected_cells:': 3, 'range(self.height):': 2, 'range(self.width):': 2, 'self.data[i][j]': 4, '<=': 2, '9:': 2, 'continue': 3, 'flashed.add((i,': 2, '+=': 6, 'self._get_affected_cells(i,': 2, 'j)': 3, 'ai,': 2, 'self.data[ai][aj]': 2, 'all_affected_cells': 2, '|=': 2, 'counter,': 4, 'flashed,': 2, '_chain_flash(': 1, 'self,': 1, ')': 1, 'new_affected_cells:': 1, 'i,': 2, '(i,': 1, 'new_affected_cells': 2, '_run_step(self)': 1, 'self._initial_flash()': 1, 'while': 1, 'event_counter,': 1, 'self._chain_flash(flashed,': 1, 'affected_cells)': 1, 'event_counter': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 6, 'ght': 6, 'ht:': 1, 't: ': 1, ': r': 1, ' re': 8, 'rep': 1, 'epo': 1, 'por': 5, 'ort': 5, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 1, 'ing': 2, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 26, '""""\n': 11, '""\n\n': 1, '\n\nf': 3, '\nfr': 4, 'fro': 4, 'rom': 4, 'om ': 4, 'm _': 1, ' __': 2, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 8, 'ure': 1, 're_': 1, 'e__': 1, '__ ': 1, '_ i': 2, ' im': 4, 'imp': 4, 'mpo': 4, 'rt ': 6, 't a': 1, ' an': 1, 'ann': 1, 'nno': 1, 'not': 1, 'ota': 1, 'tat': 2, 'ati': 2, 'tio': 6, 'ion': 6, 'ons': 1, 'ns\n': 1, 's\n\n': 4, 'm i': 1, ' it': 1, 'ite': 1, 'ter': 13, 'ert': 1, 'rto': 1, 'too': 1, 'ool': 1, 'ols': 5, 'ls ': 8, 's i': 2, 't c': 1, ' co': 14, 'cou': 13, 'oun': 13, 'unt': 13, 'nt\n': 1, 't\nf': 1, 'm t': 1, ' ty': 1, 'typ': 1, 'ypi': 1, 'pin': 1, 'ng ': 1, 'g i': 1, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm u': 1, ' ut': 1, 'uti': 6, 'til': 1, 'ils': 1, 't S': 1, ' So': 2, 'Sol': 3, 'olu': 5, 'lut': 5, 'onA': 2, 'nAb': 2, 'Abs': 2, 'bst': 2, 'str': 3, 'tra': 2, 'rac': 2, 'act': 2, 'ct\n': 1, 't\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 9, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 28, '\n  ': 94, '   ': 696, '  _': 2, ' _C': 1, '_Co': 12, 'Coo': 12, 'oor': 12, 'ord': 12, 'rd ': 1, 'd =': 2, ' = ': 21, '= t': 1, ' tu': 4, 'tup': 4, 'upl': 4, 'ple': 4, 'le[': 4, 'e[i': 4, '[in': 8, 'int': 14, 'nt,': 5, 't, ': 5, ', i': 2, ' in': 20, 'nt]': 4, 't]\n': 1, ']\n ': 3, ' _D': 3, '_Da': 3, 'Dat': 3, 'ata': 16, 'ta ': 1, 'a =': 1, '= l': 3, ' li': 5, 'lis': 3, 'ist': 3, 'st[': 3, 't[l': 1, '[li': 1, 't[i': 3, 't]]': 1, ']]\n': 1, ']\n\n': 2, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 17, 'ass': 1, 'ss ': 2, 's S': 1, 'on(': 1, 'n(S': 1, '(So': 1, 'ct)': 1, 't):': 3, '):\n': 6, '  d': 10, ' da': 4, 'day': 2, 'ay ': 4, 'y =': 1, '= 1': 6, ' 11': 4, '11\n': 1, '1\n ': 6, 'dat': 13, 'ta:': 3, 'a: ': 2, ': _': 1, 'ta\n': 1, 'a\n\n': 1, '\n\n ': 8, ' de': 8, 'def': 8, 'ef ': 8, 'f _': 6, '__i': 2, '_in': 4, 'ini': 4, 'nit': 4, 'it_': 2, 't__': 2, '__(': 2, '_(s': 1, '(se': 13, 'sel': 31, 'elf': 31, 'lf)': 5, 'f) ': 5, ') -': 8, ' ->': 8, '-> ': 8, '> N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne:': 1, 'e:\n': 2, '  s': 9, ' su': 2, 'sup': 1, 'upe': 1, 'per': 1, 'er(': 1, 'r()': 1, '().': 1, ')._': 1, '.__': 1, '_()': 1, '()\n': 5, ')\n ': 16, ' se': 34, 'lf.': 24, 'f.h': 5, '.he': 5, 'hei': 5, 'eig': 5, 'ht ': 2, 't =': 1, ' le': 3, 'len': 3, 'en(': 3, 'n(s': 2, 'f.d': 8, '.da': 8, 'ta)': 1, 'a)\n': 1, 'f.w': 5, '.wi': 5, 'wid': 5, 'idt': 5, 'dth': 5, 'th ': 3, 'h =': 1, 'ta[': 7, 'a[0': 1, '[0]': 2, '0])': 1, '])\n': 1, ')\n\n': 2, '  @': 1, ' @s': 1, '@st': 1, 'sta': 1, 'tic': 1, 'icm': 1, 'cme': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od\n': 1, 'd\n ': 1, ' _p': 1, '_pr': 1, 'pro': 1, 'roc': 2, 'oce': 2, 'ces': 2, 'ess': 2, 'ss_': 1, 's_d': 1, '_da': 3, 'ta(': 1, 'a(r': 1, '(ra': 1, 'raw': 2, 'aw_': 2, 'w_d': 2, ': l': 1, 't[s': 1, '[st': 1, 'tr]': 1, 'r])': 1, ']) ': 1, '> _': 1, 'a:\n': 1, '  ""': 10, ' """"': 10, '""\n ': 10, '  P': 1, ' Pr': 1, 'Pro': 1, 's d': 1, 'y 1': 3, '11 ': 3, '1 d': 1, 'ta.': 1, 'a.\n': 1, '.\n ': 3, '  r': 7, 'ret': 7, 'etu': 7, 'urn': 7, 'rn ': 7, 'n [': 1, ' [[': 1, '[[i': 1, 'nt(': 2, 't(n': 1, '(n)': 1, 'n) ': 1, ') f': 2, ' fo': 14, 'for': 14, 'or ': 14, 'r n': 2, ' n ': 3, 'n i': 2, 'in ': 15, 'n l': 1, 'lin': 3, 'ine': 2, 'ne]': 1, 'e] ': 1, '] f': 2, 'r l': 1, 'ne ': 1, 'e i': 1, 'n r': 6, ' ra': 6, 'ta]': 1, 'a]\n': 1, 'f p': 2, ' pa': 4, 'par': 4, 'art': 4, 'rt_': 2, 't_1': 1, '_1(': 1, '1(s': 1, '> i': 2, 'nt:': 2, 't:\n': 2, '  D': 2, ' Da': 2, 'Day': 2, '1 p': 2, 't 1': 1, ' 1 ': 1, '1 s': 1, ' so': 2, 'sol': 2, 'on.': 2, 'n.\n': 2, 'n s': 1, 'sum': 1, 'um(': 1, 'm(s': 1, 'f._': 6, '._r': 2, '_ru': 3, 'run': 3, 'un_': 3, 'n_s': 3, '_st': 3, 'ste': 3, 'tep': 3, 'ep(': 3, 'p()': 2, '()[': 2, ')[0': 1, '0] ': 1, 'r _': 1, ' _ ': 1, 'ran': 5, 'ang': 5, 'nge': 5, 'ge(': 5, 'e(1': 1, '(10': 1, '100': 1, '00)': 1, '0))': 1, '))\n': 4, 't_2': 1, '_2(': 1, '2(s': 1, 't 2': 1, ' 2 ': 1, '2 s': 1, ' si': 2, 'siz': 2, 'ize': 2, 'ze ': 1, 'e =': 1, '= s': 10, 'h *': 1, ' * ': 1, '* s': 1, 'ht\n': 1, 't\n ': 1, '  #': 1, ' # ': 1, '# M': 1, ' Ma': 1, 'Mak': 1, 'ake': 1, 'ke ': 1, 'e l': 1, 'nte': 12, 'er ': 6, 'r h': 1, ' ha': 1, 'hap': 1, 'app': 1, 'ppy': 1, 'py\n': 1, 'y\n ': 1, '  n': 3, 'n =': 1, '= 0': 4, ' 0\n': 4, '0\n ': 4, '  f': 13, 'n c': 4, 't(1': 1, '(1)': 1, '1):': 1, ' fl': 10, 'fla': 16, 'ash': 16, 'she': 12, 'hed': 12, 'ed ': 1, ')[1': 1, '[1]': 1, '1]\n': 1, '  i': 8, ' if': 8, 'f l': 1, 'n(f': 1, '(fl': 2, 'ed)': 1, 'd) ': 1, ') =': 1, ' ==': 1, '== ': 1, 'ze:': 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n ': 1, 'n n': 1, ' n\n': 1, 'n\n\n': 1, ' _g': 1, '_ge': 3, 'get': 3, 'et_': 3, 't_a': 3, '_af': 11, 'aff': 32, 'ffe': 32, 'fec': 32, 'ect': 32, 'cte': 32, 'ted': 32, 'ed_': 32, 'd_c': 28, '_ce': 24, 'cel': 24, 'ell': 24, 'lls': 24, 'ls(': 3, 's(s': 1, 'lf,': 2, 'f, ': 2, ' i:': 1, 'i: ': 1, ': i': 2, ', j': 9, ' j:': 1, 'j: ': 1, 'nt)': 1, 't) ': 1, '> s': 1, 'set': 16, 'et[': 13, 't[_': 11, '[_C': 11, 'rd]': 11, 'd]:': 1, ']:\n': 4, '  a': 12, ' af': 21, 'd_r': 4, '_ro': 4, 'row': 4, 'ows': 4, 'ws:': 1, 's: ': 6, ': s': 8, 't] ': 2, '] =': 7, '= {': 3, ' {i': 1, '{i}': 1, 'i}\n': 1, '}\n ': 3, 'f i': 2, ' i ': 4, 'i >': 1, ' > ': 2, '> 0': 2, ' 0:': 2, '0:\n': 2, 'ws.': 2, 's.a': 4, '.ad': 6, 'add': 6, 'dd(': 6, 'd(i': 2, '(i ': 2, 'i -': 1, ' - ': 4, '- 1': 4, ' 1)': 4, '1)\n': 4, 'i <': 1, ' < ': 2, '< s': 2, 't -': 1, ' 1:': 2, '1:\n': 2, 'i +': 1, ' + ': 2, '+ 1': 2, '_co': 6, 'col': 4, 'ls:': 9, ' {j': 1, '{j}': 1, 'j}\n': 1, 'f j': 2, ' j ': 6, 'j >': 1, 'ls.': 3, 'd(j': 2, '(j ': 2, 'j -': 1, 'j <': 1, 'h -': 1, 'j +': 1, 'd] ': 4, ' {\n': 1, '{\n ': 1, '  (': 1, ' (a': 1, '(ai': 1, 'ai,': 3, 'i, ': 11, ', a': 8, ' aj': 4, 'aj)': 1, 'j) ': 2, 'r a': 4, ' ai': 3, 'ai ': 1, 'i i': 3, 'n a': 6, 'ws ': 1, 's f': 1, 'aj ': 3, 'j i': 7, 'ls\n': 6, 's\n ': 3, '  }': 1, ' }\n': 1, 's.r': 1, '.re': 1, 'rem': 1, 'emo': 1, 'mov': 1, 'ove': 1, 've(': 1, 'e((': 1, '((i': 3, '(i,': 6, ' j)': 6, 'j))': 3, ' _i': 1, 'iti': 2, 'tia': 2, 'ial': 2, 'al_': 2, 'l_f': 2, '_fl': 4, 'sh(': 4, 'h(s': 1, '> t': 3, ', s': 4, 'd],': 2, '], ': 2, 'd]]': 3, ']]:': 3, '  c': 9, 'r =': 2, 'ed:': 4, 'd: ': 2, 'et(': 3, 't()': 3, ' al': 5, 'all': 5, 'll_': 5, 'l_a': 5, 'r i': 4, 'e(s': 4, 'ht)': 2, 'r j': 2, 'th)': 2, 'h):': 2, 'f s': 2, 'a[i': 4, '[i]': 4, 'i][': 6, '][j': 4, '[j]': 4, 'j] ': 6, '] <': 2, ' <=': 2, '<= ': 2, '= 9': 2, ' 9:': 2, '9:\n': 2, 'con': 3, 'ont': 3, 'nti': 3, 'tin': 3, 'inu': 3, 'nue': 3, 'ue\n': 3, 'e\n ': 3, 'ed.': 2, 'd.a': 2, 'd((': 2, 'r +': 3, ' +=': 6, '+= ': 6, ' 1\n': 5, 's =': 4, '._g': 2, 's(i': 2, 'j)\n': 2, 's:\n': 4, 'a[a': 2, '[ai': 2, 'ai]': 2, '][a': 2, '[aj': 2, 'aj]': 2, '] +': 3, 's |': 2, ' |=': 2, '|= ': 2, '= a': 2, 'er,': 5, 'r, ': 5, ', f': 4, 'ed,': 3, 'd, ': 3, ' _c': 1, '_ch': 2, 'cha': 2, 'hai': 2, 'ain': 2, 'in_': 2, 'n_f': 2, 'h(\n': 1, '(\n ': 1, 'd]\n': 1, '  )': 1, ' ) ': 1, ' ne': 3, 'new': 3, 'ew_': 3, 'w_a': 3, ' i,': 2, 'f (': 1, ' (i': 1, ') i': 1, 'n f': 2, 'd:\n': 2, ', n': 1, ' _r': 1, 'p(s': 1, '._i': 1, 'h()': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e a': 1, '  e': 1, ' ev': 2, 'eve': 2, 'ven': 2, 'ent': 2, 'nt_': 2, 't_c': 2, '._c': 1, 'h(f': 1, 'ls)': 1, 's)\n': 1, '= e': 1, 'er\n': 1, 'r\n ': 1}"
Mushinako,solution12.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 9, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 1, 'from': 7, '__future__': 1, 'import': 5, 'annotations': 1, 'functools': 1, 'cached_property': 1, 'typing': 2, 'type_checking': 1, 'utils': 1, 'solutionabstract': 1, 'if': 10, 'type_checking:': 1, 'optional': 1, '_data': 2, '=': 12, 'tuple[""_node"",': 1, '""_node""]': 1, 'class': 2, 'solution(solutionabstract):': 1, 'day': 4, '12': 4, 'data:': 1, 'def': 10, '__init__(self)': 1, '->': 10, 'none:': 4, 'super().__init__()': 1, 'self.start_node,': 1, 'self.end_node': 1, 'self.data': 1, '@staticmethod': 1, '_process_data(raw_data:': 1, 'list[str])': 1, '_data:': 1, '""""""': 10, 'process': 1, 'data.': 1, 'node_map:': 1, 'dict[str,': 1, '_node]': 1, '{}': 1, 'for': 5, 'line': 1, 'in': 5, 'raw_data:': 1, 'node1_name,': 1, 'node2_name': 1, 'line.split(""-"")': 1, '(node1': 1, ':=': 2, 'node_map.get(node1_name))': 1, 'is': 3, 'node1': 2, '_node(node1_name)': 1, 'node_map[node1_name]': 1, '(node2': 1, 'node_map.get(node2_name))': 1, 'node2': 2, '_node(node2_name)': 1, 'node_map[node2_name]': 1, 'node1.connections.append(node2)': 1, 'node2.connections.append(node1)': 1, 'return': 13, 'node_map[""start""],': 1, 'node_map[""end""]': 1, 'part_1(self)': 1, 'int:': 5, 'part': 4, '1': 3, 'solution.': 2, 'self._part_1_path_count(self.start_node,': 1, 'set())': 1, 'part_2(self)': 1, '2': 1, 'self._part_2_path_count(self.start_node,': 1, 'set(),': 1, 'false)': 1, '_part_1_path_count(self,': 1, 'node:': 2, '_node,': 2, 'visited_nodes:': 2, 'set[_node])': 1, 'recursion': 2, 'depth-first': 2, 'path-finder': 2, '1.': 1, 'found': 2, 'a': 2, 'path!': 2, 'node': 10, '==': 4, 'self.end_node:': 2, ""don't"": 2, 'allow': 2, 'small': 2, 'to': 2, 'be': 2, 'visited': 4, 'twice': 4, 'visited_nodes': 2, 'and': 2, 'not': 2, 'node.is_large:': 2, '0': 2, 'sum': 2, 'all': 2, 'path': 2, 'counts': 2, 'connected': 2, 'nodes': 2, 'sum(': 2, 'self._part_1_path_count(next_node,': 1, '{node,': 2, '*visited_nodes})': 1, 'next_node': 2, 'node.connections': 2, ')': 4, '_part_2_path_count(': 1, 'self,': 1, 'set[_node],': 1, 'small_visited_twice:': 2, 'bool': 1, '2.': 1, 'conditionally': 1, 'stop': 1, 'start': 1, 'or': 2, 'another': 1, 'self.start_node': 1, 'mark': 1, 'this': 1, 'as': 1, 'small_visited_twice': 2, 'true': 1, 'self._part_2_path_count(': 1, 'next_node,': 1, '*visited_nodes},': 1, '_node:': 1, '__init__(self,': 1, 'name:': 1, 'str)': 1, 'self.name': 2, 'name': 1, 'self.connections:': 1, 'list[_node]': 1, '[]': 1, '__eq__(self,': 1, 'o:': 1, 'object)': 1, 'bool:': 2, 'isinstance(o,': 1, '_node):': 1, 'o.name': 1, 'notimplemented': 1, '__hash__(self)': 1, 'hash(self.name)': 1, '@cached_property': 1, 'is_large(self)': 1, 'self.name.isupper()': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 1, ': r': 1, ' re': 14, 'rep': 1, 'epo': 1, 'por': 6, 'ort': 6, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 2, 'ing': 3, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 2, 'lse': 2, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 14, '""""\n': 11, '""\n\n': 1, '\n\nf': 3, '\nfr': 4, 'fro': 7, 'rom': 7, 'om ': 7, 'm _': 1, ' __': 5, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 14, 'ure': 1, 're_': 1, 'e__': 1, '__ ': 1, '_ i': 1, ' im': 5, 'imp': 5, 'mpo': 5, 'rt ': 10, 't a': 3, ' an': 4, 'ann': 1, 'nno': 1, 'not': 4, 'ota': 1, 'tat': 2, 'ati': 2, 'tio': 13, 'ion': 15, 'ons': 6, 'ns\n': 3, 's\n\n': 1, 'm f': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cto': 1, 'too': 1, 'ool': 4, 'ols': 1, 'ls ': 2, 's i': 2, 't c': 1, ' ca': 1, 'cac': 2, 'ach': 2, 'che': 2, 'hed': 2, 'ed_': 12, 'd_p': 2, '_pr': 3, 'pro': 3, 'rop': 2, 'ope': 2, 'per': 4, 'ert': 2, 'rty': 2, 'ty\n': 2, 'y\nf': 1, 'm t': 2, ' ty': 2, 'typ': 2, 'ypi': 2, 'pin': 2, 'ng ': 2, 'g i': 2, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm u': 1, ' ut': 1, 'uti': 6, 'til': 1, 'ils': 1, 't S': 1, ' So': 2, 'Sol': 3, 'olu': 5, 'lut': 5, 'onA': 2, 'nAb': 2, 'Abs': 2, 'bst': 2, 'str': 5, 'tra': 2, 'rac': 2, 'act': 2, 'ct\n': 1, 't\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 10, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 22, '\n  ': 84, '   ': 556, '  f': 4, ' fr': 3, 't O': 1, ' Op': 1, 'Opt': 1, 'pti': 1, 'ona': 2, 'nal': 2, 'al\n': 1, 'l\n\n': 1, '\n\n ': 10, '  _': 1, ' _D': 3, '_Da': 3, 'Dat': 3, 'ata': 9, 'ta ': 1, 'a =': 1, ' = ': 12, '= t': 1, ' tu': 1, 'tup': 1, 'upl': 1, 'ple': 2, 'le[': 1, 'e[""': 1, '[""_': 1, '""_N': 2, '_No': 12, 'Nod': 12, 'ode': 74, 'de""': 2, 'e"",': 1, '"", ': 1, ', ""': 1, ' ""_': 1, 'e""]': 1, '""]\n': 2, ']\n\n': 3, '\n\n\n': 2, '\n\nc': 2, '\ncl': 2, 'cla': 2, 'las': 2, 'ass': 2, 'ss ': 3, 's S': 1, 'on(': 1, 'n(S': 1, '(So': 1, 'ct)': 2, 't):': 1, '):\n': 2, '  d': 12, ' da': 4, 'day': 2, 'ay ': 4, 'y =': 1, '= 1': 1, ' 12': 4, '12\n': 1, '2\n ': 2, 'dat': 6, 'ta:': 4, 'a: ': 2, ': _': 3, 'ta\n': 2, 'a\n\n': 2, ' de': 12, 'def': 10, 'ef ': 10, 'f _': 7, '__i': 3, '_in': 3, 'ini': 3, 'nit': 3, 'it_': 3, 't__': 3, '__(': 5, '_(s': 4, '(se': 11, 'sel': 26, 'elf': 26, 'lf)': 5, 'f) ': 5, ') -': 10, ' ->': 10, '-> ': 10, '> N': 2, ' No': 5, 'Non': 4, 'one': 4, 'ne:': 4, 'e:\n': 10, '  s': 8, ' su': 3, 'sup': 2, 'upe': 1, 'er(': 2, 'r()': 2, '().': 1, ')._': 1, '.__': 1, '_()': 1, '()\n': 1, ')\n ': 8, ' se': 19, 'lf.': 17, 'f.s': 4, '.st': 4, 'sta': 8, 'tar': 6, 'art': 18, 'rt_': 12, 't_n': 8, '_no': 17, 'nod': 62, 'de,': 9, 'e, ': 10, ', s': 5, 'f.e': 3, '.en': 3, 'end': 6, 'nd_': 3, 'd_n': 9, 'de ': 14, 'e =': 8, '= s': 4, 'f.d': 1, '.da': 1, '  @': 2, ' @s': 1, '@st': 1, 'tic': 1, 'icm': 1, 'cme': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od\n': 1, 'd\n ': 1, ' _p': 3, 'roc': 2, 'oce': 2, 'ces': 2, 'ess': 2, 'ss_': 1, 's_d': 1, '_da': 3, 'ta(': 1, 'a(r': 1, '(ra': 1, 'raw': 2, 'aw_': 2, 'w_d': 2, ': l': 2, ' li': 4, 'lis': 2, 'ist': 2, 'st[': 2, 't[s': 2, '[st': 2, 'tr]': 1, 'r])': 1, ']) ': 2, '> _': 1, 'a:\n': 2, '  ""': 10, ' """"': 10, '""\n ': 10, '  P': 1, ' Pr': 1, 'Pro': 1, 's d': 1, 'y 1': 3, '12 ': 3, '2 d': 1, 'ta.': 1, 'a.\n': 1, '.\n ': 5, '  n': 9, ' no': 35, 'de_': 7, 'e_m': 7, '_ma': 7, 'map': 7, 'ap:': 1, 'p: ': 1, ': d': 1, ' di': 1, 'dic': 1, 'ict': 1, 'ct[': 1, 'tr,': 1, 'r, ': 1, ', _': 2, ' _N': 7, 'de]': 4, 'e] ': 4, '] =': 4, '= {': 1, ' {}': 1, '{}\n': 1, '}\n ': 1, ' fo': 5, 'for': 5, 'or ': 7, 'r l': 1, 'lin': 2, 'ine': 2, 'ne ': 1, 'e i': 6, ' in': 10, 'in ': 5, 'n r': 1, ' ra': 1, 'de1': 9, 'e1_': 4, '1_n': 4, '_na': 8, 'nam': 15, 'ame': 15, 'me,': 1, ', n': 5, 'de2': 9, 'e2_': 4, '2_n': 4, 'me ': 3, '= l': 1, 'ne.': 1, 'e.s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, 't(""': 1, '(""-': 1, '""-""': 1, '-"")': 1, '"")\n': 1, '  i': 8, ' if': 9, 'f (': 2, ' (n': 2, '(no': 8, 'e1 ': 2, '1 :': 1, ' :=': 2, ':= ': 2, '= n': 5, 'ap.': 2, 'p.g': 2, '.ge': 2, 'get': 2, 'et(': 4, 't(n': 3, 'me)': 5, 'e))': 2, ')) ': 2, ') i': 2, ' is': 5, 'is ': 4, 's N': 2, '1 =': 1, '= _': 2, 'de(': 2, 'e(n': 2, 'e)\n': 4, 'ap[': 4, 'p[n': 2, '[no': 2, 'me]': 2, 'e1\n': 1, '1\n ': 3, 'e2 ': 2, '2 :': 1, '2 =': 1, 'e2\n': 1, 'e1.': 1, '1.c': 1, '.co': 5, 'con': 7, 'onn': 7, 'nne': 7, 'nec': 7, 'ect': 8, 'cti': 5, 'ns.': 2, 's.a': 2, '.ap': 2, 'app': 2, 'ppe': 3, 'pen': 2, 'nd(': 2, 'd(n': 2, 'e2)': 1, '2)\n': 1, 'e2.': 1, '2.c': 1, 'e1)': 1, '1)\n': 1, '  r': 13, 'ret': 13, 'etu': 13, 'urn': 13, 'rn ': 13, 'n n': 3, 'p[""': 2, '[""s': 1, '""st': 1, 'rt""': 1, 't""]': 1, '""],': 1, '], ': 2, '[""e': 1, '""en': 1, 'nd""': 1, 'd""]': 1, 'f p': 2, ' pa': 12, 'par': 12, 't_1': 4, '_1(': 1, '1(s': 1, '> i': 5, 'int': 5, 'nt:': 5, 't:\n': 5, '  D': 2, ' Da': 2, 'Day': 2, '2 p': 2, 't 1': 2, ' 1 ': 1, '1 s': 1, ' so': 2, 'sol': 2, 'on.': 2, 'n.\n': 2, 'n s': 6, 'f._': 4, '._p': 4, '_pa': 12, '_1_': 3, '1_p': 3, 'pat': 12, 'ath': 12, 'th_': 6, 'h_c': 6, '_co': 6, 'cou': 8, 'oun': 10, 'unt': 8, 'nt(': 6, 't(s': 3, 'set': 4, 't()': 2, '())': 1, '))\n': 1, ')\n\n': 5, 't_2': 4, '_2(': 1, '2(s': 1, 't 2': 2, ' 2 ': 1, '2 s': 1, '_2_': 3, '2_p': 3, '(),': 1, '), ': 1, ', F': 1, ' Fa': 1, 'Fal': 1, 'se)': 1, 'lf,': 4, 'f, ': 4, 'de:': 5, 'e: ': 4, ', v': 2, ' vi': 8, 'vis': 14, 'isi': 15, 'sit': 14, 'ite': 14, 'ted': 17, 'des': 8, 'es:': 2, 's: ': 3, ': s': 3, 'et[': 2, 't[_': 3, '[_N': 3, 'e])': 1, '  R': 2, ' Re': 2, 'Rec': 2, 'ecu': 2, 'cur': 2, 'urs': 2, 'rsi': 2, 'sio': 2, 'on ': 2, 'n d': 2, 'dep': 2, 'ept': 2, 'pth': 2, 'th-': 4, 'h-f': 4, '-fi': 4, 'fir': 2, 'irs': 2, 'rst': 2, 'st ': 2, 't p': 2, 'fin': 2, 'ind': 2, 'nde': 2, 'der': 2, 'er ': 3, 'r f': 2, 'r p': 2, ' 1.': 1, '1.\n': 1, '  #': 8, ' # ': 8, '# F': 2, ' Fo': 2, 'Fou': 2, 'und': 2, 'nd ': 4, 'd a': 2, ' a ': 2, 'a p': 2, 'th!': 2, 'h!\n': 2, '!\n ': 2, 'f n': 5, ' ==': 4, '== ': 4, 'n 1': 2, ' 1\n': 2, '# D': 1, ' Do': 1, 'Don': 1, ""on'"": 2, ""n't"": 2, ""'t "": 2, ' al': 4, 'all': 11, 'llo': 2, 'low': 2, 'ow ': 2, 'w s': 2, ' sm': 6, 'sma': 6, 'mal': 6, 'll ': 4, 'l n': 2, 'e t': 2, ' to': 2, 'to ': 2, 'o b': 2, ' be': 2, 'be ': 2, 'e v': 2, 'ed ': 6, 'd t': 4, ' tw': 4, 'twi': 8, 'wic': 8, 'ice': 8, 'ce\n': 5, 'e\n ': 8, 'n v': 2, 'es ': 2, 's a': 2, 'and': 2, 'd n': 4, 'ot ': 2, 't n': 3, 'de.': 4, 'e.i': 3, '.is': 3, 'is_': 3, 's_l': 3, '_la': 3, 'lar': 3, 'arg': 3, 'rge': 3, 'ge:': 2, 'n 0': 2, ' 0\n': 2, '0\n ': 2, '# S': 3, ' Su': 2, 'Sum': 2, 'um ': 2, 'm a': 2, 'l p': 2, 'th ': 2, 'h c': 2, ' co': 4, 'nts': 2, 'ts ': 2, 's f': 2, 'm c': 2, 'cte': 2, 'es\n': 2, 's\n ': 4, 'sum': 2, 'um(': 2, 'm(\n': 2, '(\n ': 4, '(ne': 1, 'nex': 4, 'ext': 4, 'xt_': 4, ', {': 2, ' {n': 2, '{no': 2, ', *': 2, ' *v': 2, '*vi': 2, 'es}': 2, 's})': 1, '})\n': 1, 'r n': 3, ' ne': 3, 'e.c': 2, '  )': 4, ' )\n': 3, 't(\n': 2, 'e],': 1, 'll_': 4, 'l_v': 4, '_vi': 4, 'd_t': 4, '_tw': 4, 'ce:': 2, ': b': 1, ' bo': 3, 'boo': 3, 'ol\n': 1, 'l\n ': 1, ' ) ': 1, ' 2.': 1, '2.\n': 1, '# C': 1, ' Co': 1, 'Con': 1, 'ond': 1, 'ndi': 1, 'dit': 1, 'iti': 1, 'lly': 1, 'ly ': 1, 'y d': 1, ' do': 1, 'don': 1, ' St': 1, 'Sto': 1, 'top': 1, 'op ': 1, 'p i': 1, 'f s': 1, ' st': 2, 'e o': 2, ' or': 2, 'r a': 1, 'ano': 1, 'oth': 1, 'the': 1, 'her': 1, 's v': 2, 'r s': 1, '# M': 1, ' Ma': 1, 'Mar': 1, 'ark': 1, 'rk ': 1, 'k t': 1, ' th': 1, 'thi': 1, 'his': 1, 's n': 1, 'e a': 1, ' as': 1, 'as ': 1, 'ce ': 1, '= T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1, 's},': 1, '}, ': 1, 's _': 1, ' na': 2, 'me:': 1, 'tr)': 1, 'r) ': 1, 'f.n': 4, '.na': 5, 'me\n': 2, 'f.c': 1, 'ns:': 1, '= [': 1, ' []': 1, '[]\n': 1, '__e': 1, '_eq': 1, 'eq_': 1, 'q__': 1, ', o': 1, ' o:': 1, 'o: ': 1, ': o': 1, ' ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 't) ': 1, '> b': 2, 'ol:': 2, 'l:\n': 2, 'f i': 2, 'ins': 1, 'nst': 1, 'tan': 1, 'anc': 1, 'nce': 1, 'ce(': 1, 'e(o': 1, '(o,': 1, 'o, ': 1, 'de)': 1, 'e):': 1, '= o': 1, ' o.': 1, 'o.n': 1, 'n N': 1, 'Not': 1, 'otI': 1, 'tIm': 1, 'Imp': 1, 'mpl': 1, 'lem': 1, 'eme': 1, 'men': 1, 'ent': 1, 'nte': 1, 'ed\n': 1, 'd\n\n': 1, '__h': 1, '_ha': 1, 'has': 2, 'ash': 2, 'sh_': 1, 'h__': 1, 'n h': 1, ' ha': 1, 'sh(': 1, 'h(s': 1, ' @c': 1, '@ca': 1, 'y\n ': 1, 'ge(': 1, 'e(s': 1, 'me.': 1, 'isu': 1, 'upp': 1}"
Mushinako,solution13.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 3, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 1, 'from': 3, '__future__': 1, 'import': 3, 'annotations': 1, 'typing': 1, 'type_checking': 1, 'utils': 1, 'solutionabstract': 1, 'if': 5, 'type_checking:': 1, '_coord': 1, '=': 18, 'tuple[int,': 1, 'int]': 2, '_fold': 1, 'tuple[str,': 1, '_data': 2, 'tuple[set[_coord],': 1, 'list[_fold]]': 1, 'class': 1, 'solution(solutionabstract):': 1, 'day': 4, '13': 4, 'data:': 1, 'def': 5, '__init__(self)': 1, '->': 5, 'none:': 2, 'super().__init__()': 1, 'self.dots,': 1, 'self.folds': 1, 'self.data': 1, '@staticmethod': 2, '_process_data(raw_data:': 1, 'list[str])': 1, '_data:': 1, '""""""': 8, 'process': 1, 'data.': 1, 'dots:': 3, 'set[_coord]': 2, 'set()': 2, 'make': 2, 'linter': 1, 'happy': 1, 'i': 1, '0': 1, 'for': 7, 'i,': 1, 'line': 2, 'in': 7, 'enumerate(raw_data):': 1, 'not': 1, 'line:': 1, 'break': 2, 'try:': 1, 'x_str,': 1, 'y_str': 1, 'line.split("","")': 1, 'except': 1, 'valueerror:': 1, 'dots.add((int(x_str),': 1, 'int(y_str)))': 1, 'folds:': 1, 'list[_fold]': 1, '[]': 1, 'raw_data[i:]:': 1, 'axis_str,': 1, 'index_str': 1, 'line.split(""="")': 1, 'folds.append((axis_str[-1],': 1, 'int(index_str)))': 1, 'return': 3, 'dots,': 1, 'folds': 1, 'part_1(self)': 1, 'int:': 1, 'part': 2, '1': 1, 'solution.': 2, 'axis,': 4, 'index': 6, 'self.folds[0]': 1, 'dots': 3, 'self._fold_paper(self.dots,': 1, 'index)': 2, 'len(dots)': 1, 'part_2(self)': 1, '2': 3, 'self.dots': 1, 'self.folds:': 1, 'self._fold_paper(dots,': 1, 'visual': 1, 'max_x,': 1, 'max_y': 1, 'map(max,': 1, 'zip(*dots))': 1, 'board:': 1, 'list[list[str]]': 1, '[[""': 1, '""]': 1, '*': 3, '(max_x': 1, '+': 2, '1)': 1, '_': 1, 'range(max_y': 1, '1)]': 1, 'x,': 3, 'y': 4, 'board[y][x]': 1, '""â\x96\x88""': 1, 'print(""\\n"".join("""".join(row)': 1, 'row': 1, 'board))': 1, '_fold_paper(dots:': 1, 'set[_coord],': 1, 'axis:': 1, 'str,': 1, 'index:': 1, 'int)': 1, 'set[_coord]:': 1, 'fold': 1, 'the': 1, 'paper': 1, 'once.': 1, 'new_dots:': 1, 'axis': 1, '==': 1, '""x"":': 1, 'new_dots.add((x': 1, 'x': 1, '<': 2, 'else': 2, '-': 2, 'y))': 2, 'else:': 1, 'new_dots.add((x,': 1, 'new_dots': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 1, ': r': 1, ' re': 4, 'rep': 1, 'epo': 1, 'por': 4, 'ort': 4, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 1, 'ing': 2, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 1, 'lse': 4, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 12, '""""\n': 9, '""\n\n': 1, '\n\nf': 3, '\nfr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm _': 1, ' __': 2, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 4, 'ure': 1, 're_': 1, 'e__': 1, '__ ': 1, '_ i': 2, ' im': 3, 'imp': 3, 'mpo': 3, 'rt ': 5, 't a': 1, ' an': 1, 'ann': 1, 'nno': 1, 'not': 2, 'ota': 1, 'tat': 3, 'ati': 3, 'tio': 6, 'ion': 6, 'ons': 1, 'ns\n': 1, 's\n\n': 2, 'm t': 1, ' ty': 1, 'typ': 1, 'ypi': 1, 'pin': 1, 'ng ': 1, 'g i': 1, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm u': 1, ' ut': 1, 'uti': 6, 'til': 1, 'ils': 1, 'ls ': 1, 's i': 1, 't S': 1, ' So': 2, 'Sol': 3, 'olu': 5, 'lut': 5, 'onA': 2, 'nAb': 2, 'Abs': 2, 'bst': 2, 'str': 14, 'tra': 2, 'rac': 2, 'act': 2, 'ct\n': 1, 't\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 5, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 17, '\n  ': 61, '   ': 398, '  _': 3, ' _C': 1, '_Co': 6, 'Coo': 6, 'oor': 6, 'ord': 6, 'rd ': 1, 'd =': 2, ' = ': 18, '= t': 3, ' tu': 3, 'tup': 3, 'upl': 3, 'ple': 3, 'le[': 3, 'e[i': 1, '[in': 1, 'int': 10, 'nt,': 1, 't, ': 1, ', i': 10, ' in': 23, 'nt]': 2, 't]\n': 2, ']\n ': 5, ' _F': 1, '_Fo': 3, 'Fol': 4, 'old': 13, 'ld ': 2, 'e[s': 2, '[st': 3, 'tr,': 4, 'r, ': 4, ' _D': 3, '_Da': 3, 'Dat': 3, 'ata': 10, 'ta ': 1, 'a =': 1, '[se': 1, 'set': 7, 'et[': 5, 't[_': 7, '[_C': 5, 'rd]': 5, 'd],': 2, '], ': 3, ', l': 2, ' li': 10, 'lis': 5, 'ist': 5, 'st[': 5, '[_F': 2, 'ld]': 2, 'd]]': 1, ']]\n': 1, ']\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 2, 's S': 1, 'on(': 1, 'n(S': 1, '(So': 1, 'ct)': 1, 't):': 1, '):\n': 2, '  d': 12, ' da': 4, 'day': 2, 'ay ': 4, 'y =': 2, '= 1': 1, ' 13': 4, '13\n': 1, '3\n ': 1, 'dat': 7, 'ta:': 3, 'a: ': 2, ': _': 1, 'ta\n': 2, 'a\n\n': 2, '\n\n ': 5, ' de': 5, 'def': 5, 'ef ': 5, 'f _': 3, '__i': 2, '_in': 2, 'ini': 2, 'nit': 2, 'it_': 2, 't__': 2, '__(': 2, '_(s': 1, '(se': 4, 'sel': 12, 'elf': 12, 'lf)': 3, 'f) ': 3, ') -': 5, ' ->': 5, '-> ': 5, '> N': 2, ' No': 2, 'Non': 2, 'one': 2, 'ne:': 3, 'e:\n': 4, '  s': 2, ' su': 1, 'sup': 1, 'upe': 1, 'per': 5, 'er(': 4, 'r()': 1, '().': 1, ')._': 1, '.__': 1, '_()': 1, '()\n': 3, ')\n ': 12, ' se': 14, 'lf.': 9, 'f.d': 4, '.do': 3, 'dot': 19, 'ots': 19, 'ts,': 4, 's, ': 8, ', s': 1, 'f.f': 3, '.fo': 3, 'fol': 9, 'lds': 6, 'ds ': 1, 's =': 5, '= s': 7, '.da': 1, '  @': 2, ' @s': 2, '@st': 2, 'sta': 2, 'tic': 2, 'icm': 2, 'cme': 2, 'met': 2, 'eth': 2, 'tho': 2, 'hod': 2, 'od\n': 2, 'd\n ': 2, ' _p': 1, '_pr': 1, 'pro': 1, 'roc': 2, 'oce': 2, 'ces': 2, 'ess': 2, 'ss_': 1, 's_d': 1, '_da': 4, 'ta(': 1, 'a(r': 1, '(ra': 2, 'raw': 3, 'aw_': 3, 'w_d': 7, ': l': 3, 't[s': 2, 'tr]': 2, 'r])': 1, ']) ': 1, '> _': 1, 'a:\n': 1, '  ""': 8, ' """"': 8, '""\n ': 9, '  P': 1, ' Pr': 1, 'Pro': 1, 's d': 1, 'y 1': 3, '13 ': 3, '3 d': 1, 'ta.': 1, 'a.\n': 1, '.\n ': 4, ' do': 8, 'ts:': 5, 's: ': 5, ': s': 4, 'd] ': 3, '] =': 5, 'et(': 2, 't()': 2, '  #': 2, ' # ': 2, '# M': 2, ' Ma': 2, 'Mak': 2, 'ake': 2, 'ke ': 2, 'e l': 1, 'lin': 6, 'nte': 1, 'ter': 1, 'er ': 2, 'r h': 1, ' ha': 1, 'hap': 1, 'app': 2, 'ppy': 1, 'py\n': 1, 'y\n ': 1, '  i': 3, ' i ': 1, 'i =': 1, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  f': 7, ' fo': 10, 'for': 7, 'or ': 7, 'r i': 1, ' i,': 1, 'i, ': 1, 'ine': 5, 'ne ': 2, 'e i': 2, 'in ': 7, 'n e': 1, ' en': 1, 'enu': 1, 'num': 1, 'ume': 1, 'mer': 1, 'era': 1, 'rat': 1, 'ate': 1, 'te(': 1, 'e(r': 1, 'ta)': 1, 'a):': 1, ' if': 4, 'f n': 1, ' no': 1, 'ot ': 1, 't l': 1, '  b': 4, ' br': 2, 'bre': 2, 'rea': 2, 'eak': 2, 'ak\n': 2, 'k\n ': 2, '  t': 1, ' tr': 1, 'try': 1, 'ry:': 1, 'y:\n': 1, '  x': 1, ' x_': 1, 'x_s': 4, '_st': 8, ', y': 5, ' y_': 1, 'y_s': 2, 'tr ': 2, 'r =': 2, '= l': 2, 'ne.': 2, 'e.s': 2, '.sp': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'it(': 2, 't(""': 3, '("",': 1, '"",""': 1, ',"")': 1, '"")\n': 2, '  e': 2, ' ex': 1, 'exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pt ': 1, 't V': 1, ' Va': 1, 'Val': 1, 'alu': 1, 'lue': 1, 'ueE': 1, 'eEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or:': 1, 'r:\n': 1, 'ts.': 3, 's.a': 4, '.ad': 3, 'add': 3, 'dd(': 3, 'd((': 4, '((i': 1, '(in': 2, 'nt(': 4, 't(x': 1, '(x_': 1, 'tr)': 3, 'r),': 1, '), ': 1, 't(y': 1, '(y_': 1, 'r))': 2, ')))': 2, '))\n': 6, 'ds:': 2, '= [': 2, ' []': 1, '[]\n': 1, 'r l': 1, 'n r': 2, ' ra': 2, 'ta[': 1, 'a[i': 1, '[i:': 1, 'i:]': 1, ':]:': 1, ']:\n': 2, '  a': 2, ' ax': 7, 'axi': 8, 'xis': 8, 'is_': 2, 's_s': 2, 'ind': 11, 'nde': 11, 'dex': 11, 'ex_': 2, '(""=': 1, '""=""': 1, '="")': 1, 'ds.': 1, '.ap': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, '((a': 1, '(ax': 1, 'tr[': 1, 'r[-': 1, '[-1': 1, '-1]': 1, '1],': 1, 't(i': 1, '  r': 3, 'ret': 3, 'etu': 3, 'urn': 3, 'rn ': 3, 'n d': 3, ', f': 1, 'ds\n': 1, 'f p': 2, ' pa': 5, 'par': 4, 'art': 4, 'rt_': 2, 't_1': 1, '_1(': 1, '1(s': 1, '> i': 1, 'nt:': 1, 't:\n': 1, '  D': 2, ' Da': 2, 'Day': 2, '3 p': 2, 't 1': 1, ' 1 ': 1, '1 s': 1, ' so': 2, 'sol': 2, 'on.': 2, 'n.\n': 2, 'is,': 4, 'ex ': 6, 'x =': 1, 'ds[': 1, 's[0': 1, '[0]': 1, '0]\n': 1, 'ts ': 3, 'f._': 2, '._f': 2, '_fo': 3, 'ld_': 3, 'd_p': 3, '_pa': 3, 'pap': 4, 'ape': 4, 'r(s': 1, ', a': 3, 'ex)': 2, 'x)\n': 2, 'n l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(d': 1, '(do': 3, 'ts)': 2, 's)\n': 1, ')\n\n': 2, 't_2': 1, '_2(': 1, '2(s': 1, 't 2': 1, ' 2 ': 3, '2 s': 1, 'ts\n': 1, 's\n ': 1, 'r a': 1, 'x i': 2, 'n s': 1, 's:\n': 3, 'r(d': 2, 'e v': 1, ' vi': 1, 'vis': 1, 'isu': 1, 'sua': 1, 'ual': 1, 'al\n': 1, 'l\n ': 1, '  m': 1, ' ma': 3, 'max': 5, 'ax_': 4, 'x_x': 2, '_x,': 1, 'x, ': 6, ', m': 1, 'x_y': 2, '_y ': 2, '= m': 1, 'map': 1, 'ap(': 1, 'p(m': 1, '(ma': 3, 'ax,': 1, ', z': 1, ' zi': 1, 'zip': 1, 'ip(': 1, 'p(*': 1, '(*d': 1, '*do': 1, 's))': 1, ' bo': 3, 'boa': 3, 'oar': 3, 'ard': 3, 'rd:': 1, 'd: ': 1, 't[l': 1, '[li': 1, 'r]]': 1, ']] ': 1, ' [[': 1, '[[""': 1, '["" ': 1, '"" ""': 1, ' ""]': 1, '""] ': 1, '] *': 1, ' * ': 3, '* (': 1, ' (m': 1, '_x ': 1, 'x +': 1, ' + ': 2, '+ 1': 2, ' 1)': 2, '1) ': 1, ') f': 2, 'r _': 1, ' _ ': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(m': 1, 'y +': 1, '1)]': 1, ')]\n': 1, 'r x': 2, ' x,': 3, ' y ': 4, 'y i': 3, 'rd[': 1, 'd[y': 1, '[y]': 1, 'y][': 1, '][x': 1, '[x]': 1, 'x] ': 1, '= ""': 2, ' ""â': 1, '""â\x96': 1, 'â\x96\x88': 1, '\x96\x88""': 1, '\x88""\n': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, '(""\\': 1, '""\\n': 1, '\\n""': 1, 'n"".': 1, '"".j': 2, '.jo': 2, 'joi': 2, 'oin': 2, 'in(': 2, 'n(""': 1, '(""""': 1, '"""".': 1, 'n(r': 1, '(ro': 1, 'row': 2, 'ow)': 1, 'w) ': 1, 'r r': 1, ' ro': 1, 'ow ': 1, 'w i': 1, 'n b': 1, 'rd)': 1, 'd))': 1, ' _f': 1, 'is:': 1, ' st': 1, 'ex:': 1, 'x: ': 1, ': i': 1, 'nt)': 1, 't) ': 1, '> s': 1, 'd]:': 1, '  F': 1, ' Fo': 1, 'd t': 1, ' th': 1, 'the': 1, 'he ': 1, 'e p': 1, 'r o': 1, ' on': 1, 'onc': 1, 'nce': 1, 'ce.': 1, 'e.\n': 1, '  n': 3, ' ne': 4, 'new': 4, 'ew_': 4, '_do': 4, 'f a': 1, 'is ': 1, ' ==': 1, '== ': 1, ' ""x': 1, '""x""': 1, 'x"":': 1, '"":\n': 1, '((x': 2, '(x ': 1, 'f x': 1, ' x ': 1, 'x <': 1, ' < ': 2, '< i': 2, 'x e': 2, ' el': 3, 'els': 3, 'se ': 2, 'e 2': 2, '2 *': 2, '* i': 2, 'x -': 2, ' - ': 2, '- x': 1, ' y)': 2, 'y))': 2, 'se:': 1, '(x,': 1, 'f y': 1, 'y <': 1, '- y': 1, 'n n': 1}"
Mushinako,solution14.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 11, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 1, 'from': 6, '__future__': 1, 'import': 5, 'annotations': 1, 'collections': 1, 'counter': 1, 'operator': 1, 'itemgetter': 1, 'typing': 1, 'type_checking': 1, 'utils': 1, 'solutionabstract': 1, 'if': 4, 'type_checking:': 1, '_data': 2, '=': 15, 'tuple[str,': 1, 'dict[str,': 6, 'str]]': 1, 'class': 1, 'solution(solutionabstract):': 1, 'day': 4, '14': 4, 'data:': 1, 'def': 7, '__init__(self)': 1, '->': 8, 'none:': 1, 'super().__init__()': 1, 'self.template,': 1, 'self.rules': 1, 'self.data': 1, '@staticmethod': 1, '_process_data(raw_data:': 1, 'list[str])': 1, '_data:': 1, '""""""': 12, 'process': 1, 'data.': 1, 'template': 2, 'raw_data[0]': 1, 'rules:': 1, 'str]': 1, '{}': 1, 'for': 11, 'rule': 2, 'in': 11, 'raw_data[1:]:': 1, 'position,': 3, 'value': 2, 'rule.split(""->"")': 1, 'rules[position.strip()]': 1, 'value.strip()': 1, 'return': 6, 'template,': 1, 'rules': 1, 'part_1(self)': 1, 'int:': 3, 'part': 2, '1': 4, 'solution.': 3, 'self._solve(10)': 1, 'part_2(self)': 1, '2': 2, 'self._solve(40)': 1, '_solve(self,': 1, 'step_count:': 1, 'int)': 1, 'general': 1, 'record': 1, 'initial': 1, 'condition.': 1, 'map': 1, 'each': 2, 'to': 3, 'the': 5, 'number': 2, 'of': 6, 'occurrences': 1, 'counts': 2, '{position:': 2, '0': 3, 'position': 2, 'self.rules}': 1, 'i': 2, 'range(len(self.template)': 1, '-': 2, '1):': 1, 'counts[self.template[i': 1, ':': 1, '+': 3, '2]]': 1, '+=': 7, 'run': 2, 'required': 1, 'steps': 1, '_': 1, 'range(step_count):': 1, 'self._run_step(counts)': 1, 'get': 3, 'count': 12, 'character': 3, 'char_counts': 4, 'self._get_char_counts(counts)': 1, 'sort': 1, 'largest': 1, 'and': 4, 'smallest.': 1, 'reversed': 1, 'only': 1, 'mimic': 1, 'behavior': 1, '`collections.counter.most_common`': 1, 'counts_list': 1, 'sorted(char_counts.items(),': 1, 'key=itemgetter(1),': 1, 'reverse=true)': 1, 'counts_list[0][1]': 1, 'counts_list[-1][1]': 1, '_run_step(self,': 1, 'counts:': 1, 'int])': 2, 'int]:': 2, 'one': 1, 'step.': 1, '`ab': 1, 'c`': 1, 'means': 1, '`ab`': 2, 'becomes': 1, '`ac`': 2, '`cb`.': 1, 'we': 2, 'had': 1, '*n*': 3, 'groups': 3, 'before,': 1, 'should': 1, 'expect': 1, '`cb`': 1, 'new_counts': 2, 'counts}': 1, 'counts.items():': 1, 'self.rules.get(position)': 1, 'not': 3, 'value:': 1, 'continue': 1, 'new_counts[position[0]': 1, 'value]': 1, 'new_counts[value': 1, 'position[1]]': 1, '_get_char_counts(self,': 1, 'pair_counts:': 1, 'pair': 1, 'count.': 1, '{': 1, 'char:': 1, 'char': 1, '(set(self.template)': 1, '|': 1, 'set(self.rules.values()))': 1, '}': 1, 'pair_counts.items():': 1, 'char_counts[position[0]]': 1, 'char_counts[position[1]]': 1, 'add': 1, 'first': 1, 'last': 1, 'because': 1, ""they're"": 1, 'double': 1, 'counted': 1, 'char_counts[self.template[0]]': 1, 'char_counts[self.template[-1]]': 1, 'sanity': 1, 'check': 1, 'char,': 2, 'char_counts.items():': 1, '%': 1, '2:': 1, 'raise': 1, 'valueerror(f""{char!r}': 1, 'does': 1, 'have': 1, 'an': 1, 'even': 1, 'count:': 1, '{count}."")': 1, '{char:': 1, '//': 1, 'char_counts.items()}': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 3, ': r': 1, ' re': 9, 'rep': 1, 'epo': 1, 'por': 6, 'ort': 8, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 1, 'ing': 2, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 16, '""""\n': 13, '""\n\n': 1, '\n\nf': 3, '\nfr': 5, 'fro': 6, 'rom': 6, 'om ': 6, 'm _': 1, ' __': 2, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 7, 'ure': 1, 're_': 1, 'e__': 1, '__ ': 1, '_ i': 2, ' im': 5, 'imp': 5, 'mpo': 5, 'rt ': 8, 't a': 3, ' an': 6, 'ann': 1, 'nno': 1, 'not': 4, 'ota': 1, 'tat': 2, 'ati': 2, 'tio': 23, 'ion': 23, 'ons': 3, 'ns\n': 1, 's\n\n': 3, 'm c': 1, ' co': 27, 'col': 2, 'oll': 2, 'lle': 3, 'lec': 2, 'ect': 3, 'cti': 2, 'ns ': 2, 's i': 3, 't C': 1, ' Co': 1, 'Cou': 2, 'oun': 50, 'unt': 50, 'nte': 3, 'ter': 7, 'er\n': 3, 'r\nf': 2, 'm o': 1, ' op': 1, 'ope': 1, 'per': 2, 'era': 2, 'rat': 1, 'ato': 1, 'tor': 1, 'or ': 13, 'r i': 3, 't i': 5, ' it': 1, 'ite': 7, 'tem': 16, 'emg': 2, 'mge': 2, 'get': 6, 'ett': 2, 'tte': 2, 'm t': 1, ' ty': 1, 'typ': 1, 'ypi': 1, 'pin': 1, 'ng ': 1, 'g i': 1, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm u': 1, ' ut': 1, 'uti': 7, 'til': 1, 'ils': 1, 'ls ': 1, 't S': 1, ' So': 3, 'Sol': 3, 'olu': 6, 'lut': 6, 'onA': 2, 'nAb': 2, 'Abs': 2, 'bst': 2, 'str': 14, 'tra': 2, 'rac': 5, 'act': 5, 'ct\n': 1, 't\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 3, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 17, '\n  ': 78, '   ': 491, '  _': 1, ' _D': 3, '_Da': 3, 'Dat': 3, 'ata': 10, 'ta ': 1, 'a =': 1, ' = ': 15, '= t': 1, ' tu': 1, 'tup': 1, 'upl': 1, 'ple': 1, 'le[': 1, 'e[s': 1, '[st': 8, 'tr,': 7, 'r, ': 9, ', d': 1, ' di': 6, 'dic': 6, 'ict': 6, 'ct[': 6, 't[s': 7, ', s': 4, ' st': 5, 'tr]': 3, 'r]]': 1, ']]\n': 1, ']\n\n': 2, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 2, 'ass': 1, 'ss ': 2, 's S': 1, 'on(': 1, 'n(S': 1, '(So': 1, 'ct)': 1, 't):': 2, '):\n': 6, '  d': 9, ' da': 4, 'day': 2, 'ay ': 4, 'y =': 1, '= 1': 4, ' 14': 4, '14\n': 1, '4\n ': 1, 'dat': 7, 'ta:': 3, 'a: ': 2, ': _': 1, 'ta\n': 2, 'a\n\n': 2, '\n\n ': 7, ' de': 7, 'def': 7, 'ef ': 7, 'f _': 5, '__i': 2, '_in': 2, 'ini': 3, 'nit': 4, 'it_': 2, 't__': 2, '__(': 2, '_(s': 1, '(se': 10, 'sel': 21, 'elf': 21, 'lf)': 3, 'f) ': 3, ') -': 8, ' ->': 8, '-> ': 8, '> N': 1, ' No': 1, 'Non': 1, 'one': 2, 'ne:': 1, 'e:\n': 2, '  s': 2, ' su': 1, 'sup': 1, 'upe': 1, 'er(': 2, 'r()': 1, '().': 1, ')._': 1, '.__': 1, '_()': 1, '()\n': 2, ')\n ': 9, ' se': 10, 'lf.': 15, 'f.t': 6, '.te': 6, 'emp': 9, 'mpl': 9, 'pla': 9, 'lat': 9, 'ate': 9, 'te,': 2, 'e, ': 3, 'f.r': 4, '.ru': 4, 'rul': 10, 'ule': 10, 'les': 8, 'es ': 4, 's =': 7, '= s': 5, 'f.d': 1, '.da': 1, '  @': 1, ' @s': 1, '@st': 1, 'sta': 1, 'tic': 1, 'icm': 1, 'cme': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od\n': 1, 'd\n ': 2, ' _p': 1, '_pr': 1, 'pro': 1, 'roc': 2, 'oce': 2, 'ces': 3, 'ess': 2, 'ss_': 1, 's_d': 1, '_da': 4, 'ta(': 1, 'a(r': 1, '(ra': 1, 'raw': 3, 'aw_': 3, 'w_d': 3, ': l': 1, ' li': 1, 'lis': 4, 'ist': 4, 'st[': 3, 'r])': 1, ']) ': 3, '> _': 1, 'a:\n': 1, '  ""': 12, ' """"': 12, '""\n ': 12, '  P': 1, ' Pr': 1, 'Pro': 1, 's d': 1, 'y 1': 3, '14 ': 3, '4 d': 1, 'ta.': 1, 'a.\n': 1, '.\n ': 6, '  t': 2, ' te': 3, 'te ': 1, 'e =': 3, '= r': 2, ' ra': 5, 'ta[': 2, 'a[0': 1, '[0]': 5, '0]\n': 1, ']\n ': 1, '  r': 9, ' ru': 6, 'es:': 1, 's: ': 3, ': d': 3, 'r] ': 1, '] =': 2, '= {': 5, ' {}': 1, '{}\n': 1, '}\n ': 5, '  f': 6, ' fo': 11, 'for': 12, 'r r': 1, 'le ': 3, 'e i': 1, ' in': 20, 'in ': 11, 'n r': 4, 'a[1': 1, '[1:': 1, '1:]': 1, ':]:': 1, ']:\n': 3, '  p': 1, ' po': 6, 'pos': 13, 'osi': 13, 'sit': 13, 'iti': 15, 'on,': 3, 'n, ': 3, ', v': 1, ' va': 5, 'val': 7, 'alu': 8, 'lue': 8, 'ue ': 3, 'le.': 1, 'e.s': 2, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, 't(""': 1, '(""-': 1, '""->': 1, '->""': 1, '>"")': 1, '"")\n': 2, 'es[': 1, 's[p': 4, '[po': 4, 'on.': 5, 'n.s': 1, '.st': 2, 'tri': 2, 'rip': 2, 'ip(': 2, 'p()': 2, '()]': 1, ')] ': 1, '= v': 1, 'ue.': 1, 'ret': 6, 'etu': 6, 'urn': 6, 'rn ': 6, 'n t': 2, ', r': 2, 'es\n': 1, 'f p': 2, ' pa': 7, 'par': 4, 'art': 4, 'rt_': 2, 't_1': 1, '_1(': 1, '1(s': 1, '> i': 3, 'int': 8, 'nt:': 5, 't:\n': 3, '  D': 2, ' Da': 2, 'Day': 2, '4 p': 2, 't 1': 1, ' 1 ': 1, '1 s': 1, ' so': 4, 'sol': 6, 'n.\n': 3, 'n s': 3, 'f._': 4, '._s': 2, '_so': 3, 'olv': 3, 'lve': 3, 've(': 3, 'e(1': 1, '(10': 1, '10)': 1, '0)\n': 2, ')\n\n': 2, 't_2': 1, '_2(': 1, '2(s': 1, 't 2': 1, ' 2 ': 2, '2 s': 1, 'e(4': 1, '(40': 1, '40)': 1, ' _s': 1, 'e(s': 2, 'lf,': 3, 'f, ': 3, 'ste': 6, 'tep': 6, 'ep_': 2, 'p_c': 2, '_co': 22, 'cou': 48, ': i': 2, 'nt)': 2, 't) ': 1, '  G': 2, ' Ge': 3, 'Gen': 1, 'ene': 1, 'ner': 1, 'ral': 1, 'al ': 2, 'l s': 1, '  #': 10, ' # ': 10, '# R': 2, ' Re': 2, 'Rec': 1, 'eco': 2, 'cor': 1, 'ord': 1, 'rd ': 1, 'd i': 1, 'tia': 1, 'ial': 1, 'l c': 1, 'con': 2, 'ond': 1, 'ndi': 1, 'dit': 1, 'n. ': 1, '. M': 1, ' Ma': 1, 'Map': 1, 'ap ': 1, 'p e': 1, ' ea': 2, 'eac': 2, 'ach': 2, 'ch ': 2, 'h r': 1, 'e t': 2, ' to': 3, 'to ': 3, 'o t': 1, ' th': 6, 'the': 6, 'he ': 4, 'e n': 2, ' nu': 2, 'num': 2, 'umb': 2, 'mbe': 2, 'ber': 2, 'er ': 4, 'r o': 3, ' of': 6, 'of ': 5, 'f o': 1, ' oc': 1, 'occ': 1, 'ccu': 1, 'cur': 1, 'urr': 1, 'rre': 1, 'ren': 1, 'enc': 1, 'nce': 1, 'he\n': 1, 'e\n ': 3, '#  ': 3, 'te\n': 1, '  c': 13, 'nts': 30, 'ts ': 6, ' {p': 2, '{po': 2, 'on:': 2, 'n: ': 2, ': 0': 3, ' 0 ': 3, '0 f': 3, 'r p': 4, 'on ': 2, 'n i': 2, 'es}': 1, 's}\n': 2, ' i ': 2, 'i i': 1, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(l': 1, '(le': 1, 'len': 1, 'en(': 1, 'n(s': 1, 'te)': 2, 'e) ': 2, ' - ': 2, '- 1': 1, ' 1)': 1, '1):': 1, 'ts[': 7, 's[s': 3, '[se': 3, 'te[': 3, 'e[i': 1, '[i ': 1, 'i :': 1, ' : ': 1, 'i +': 1, ' + ': 3, '+ 2': 1, ' 2]': 1, '2]]': 1, ']] ': 6, '] +': 8, ' +=': 7, '+= ': 7, ' 1\n': 3, '1\n ': 3, ' Ru': 2, 'Run': 2, 'un ': 2, 'req': 1, 'equ': 1, 'qui': 1, 'uir': 1, 'ire': 1, 'red': 1, 'ed ': 2, 'd n': 1, 'f s': 1, 'eps': 1, 'ps\n': 1, 's\n ': 1, 'r _': 1, ' _ ': 1, '(st': 1, '._r': 1, '_ru': 2, 'run': 2, 'un_': 2, 'n_s': 2, '_st': 2, 'ep(': 2, 'p(c': 1, '(co': 2, 'ts)': 2, 's)\n': 2, '# G': 1, 'Get': 2, 'et ': 3, 't c': 3, 'nt ': 8, 't f': 2, 'r e': 1, 'h c': 1, ' ch': 18, 'cha': 22, 'har': 22, 'ara': 3, 'cte': 3, 'r\n ': 1, 'ar_': 13, 'r_c': 15, '._g': 1, '_ge': 2, 'et_': 2, 't_c': 3, '_ch': 2, 'ts(': 2, 's(c': 1, '# S': 2, 'Sor': 1, 't t': 2, 'o g': 1, ' ge': 1, 'e l': 1, ' la': 2, 'lar': 1, 'arg': 1, 'rge': 1, 'ges': 1, 'est': 2, 'st ': 4, 'and': 4, 'nd ': 4, 'd s': 1, ' sm': 1, 'sma': 1, 'mal': 1, 'all': 1, 'st.': 1, 't. ': 1, '. R': 1, 'Rev': 1, 'eve': 3, 'ver': 2, 'ers': 2, 'rse': 2, 'sed': 1, 'd o': 1, ' on': 2, 'onl': 1, 'nly': 1, 'ly ': 1, 'y t': 1, 'o m': 1, ' mi': 1, 'mim': 1, 'imi': 1, 'mic': 1, 'ic ': 1, 'c t': 1, 'e b': 1, ' be': 4, 'beh': 1, 'eha': 1, 'hav': 2, 'avi': 1, 'vio': 1, 'ior': 1, 'of\n': 1, 'f\n ': 1, '  `': 1, ' `c': 1, '`co': 1, 'ns.': 1, 's.C': 1, '.Co': 1, 'er.': 1, 'r.m': 1, '.mo': 1, 'mos': 1, 'ost': 1, 'st_': 1, 'com': 2, 'omm': 1, 'mmo': 1, 'mon': 1, 'on`': 1, 'n`\n': 1, '`\n ': 3, 'ts_': 3, 's_l': 3, '_li': 3, 't =': 1, 'sor': 1, 'rte': 1, 'ted': 2, 'ed(': 1, 'd(c': 1, '(ch': 1, 'ts.': 5, 's.i': 5, '.it': 5, 'ems': 5, 'ms(': 5, 's()': 6, '(),': 1, '), ': 2, ', k': 1, ' ke': 1, 'key': 1, 'ey=': 1, 'y=i': 1, '=it': 1, 'r(1': 1, '(1)': 1, '1),': 1, 'rev': 1, 'se=': 1, 'e=T': 1, '=Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e)\n': 1, 'n c': 7, 't[0': 1, '0][': 1, '][1': 2, '[1]': 4, '1] ': 1, '] -': 1, '- c': 1, 't[-': 1, '[-1': 2, '-1]': 2, '1][': 1, '1]\n': 1, ' _r': 1, 'p(s': 1, ', c': 5, 'ts:': 2, ', i': 4, 'nt]': 4, 't])': 2, '> d': 2, 't]:': 2, '  R': 1, 'n o': 1, 'ne ': 1, 'e s': 2, 'ep.': 1, 'p.\n': 1, '# `': 1, ' `A': 5, '`AB': 3, 'AB ': 1, 'B -': 1, '> C': 1, ' C`': 1, 'C` ': 3, '` m': 1, ' me': 1, 'mea': 1, 'ean': 1, 'ans': 1, 's `': 2, 'AB`': 2, 'B` ': 1, '` b': 1, 'bec': 2, 'ome': 1, 'mes': 1, '`AC': 2, 'AC`': 2, '` a': 2, 'd `': 1, ' `C': 2, '`CB': 2, 'CB`': 2, 'B`.': 1, '`. ': 1, '. I': 1, ' If': 1, 'If ': 1, 'f w': 1, ' we': 2, 'we ': 2, 'e h': 1, ' ha': 2, 'had': 1, 'ad ': 1, 'd *': 2, ' *n': 3, '*n*': 3, 'n* ': 3, '* g': 3, ' gr': 3, 'gro': 3, 'rou': 3, 'oup': 3, 'ups': 3, 'ps ': 3, 's o': 3, 'f `': 3, 'B`\n': 2, '  b': 1, 'bef': 1, 'efo': 1, 'ore': 1, 're,': 1, ', w': 1, ' sh': 1, 'sho': 1, 'hou': 1, 'oul': 1, 'uld': 1, 'ld ': 1, 'd e': 1, ' ex': 1, 'exp': 1, 'xpe': 1, 'pec': 1, 'ct ': 1, 't *': 1, '  n': 3, ' ne': 4, 'new': 4, 'ew_': 4, 'w_c': 4, 'ts}': 1, '():': 3, '  v': 1, 'es.': 2, 's.g': 1, '.ge': 1, 'et(': 3, 't(p': 1, '(po': 1, 'on)': 1, 'n)\n': 1, '  i': 2, ' if': 2, 'f n': 1, ' no': 3, 'ot ': 3, 't v': 1, 'ue:': 1, 'ont': 1, 'nti': 1, 'tin': 1, 'inu': 1, 'nue': 1, 'ue\n': 1, 'on[': 4, 'n[0': 2, '0] ': 1, '+ v': 1, 'ue]': 1, 'e] ': 1, '= c': 4, 'nt\n': 4, 't\n ': 4, 's[v': 1, '[va': 1, 'e +': 1, '+ p': 1, 'n[1': 2, '1]]': 3, 'n n': 1, 'ts\n': 1, ' _g': 1, 's(s': 1, ', p': 1, 'pai': 3, 'air': 3, 'ir_': 2, 'r c': 5, ' fr': 1, 'm p': 1, 'ir ': 1, 'nt.': 1, 't.\n': 1, ' {\n': 1, '{\n ': 1, 'ar:': 2, 'r: ': 2, 'ar ': 1, 'n (': 1, ' (s': 1, 'set': 2, 't(s': 2, ') |': 1, ' | ': 1, '| s': 1, 's.v': 1, '.va': 1, 'ues': 1, 'es(': 1, '())': 1, ')))': 1, '))\n': 1, '  }': 1, ' }\n': 1, 'n p': 1, '0]]': 2, '# A': 1, ' Ad': 1, 'Add': 1, 'dd ': 1, 'd t': 1, 'e f': 1, ' fi': 1, 'fir': 1, 'irs': 1, 'rst': 1, 'd l': 1, 'ast': 1, 'r b': 1, 'eca': 1, 'cau': 1, 'aus': 1, 'use': 1, 'se ': 2, 'hey': 1, ""ey'"": 1, ""y'r"": 1, ""'re"": 1, 're ': 1, 't d': 1, ' do': 2, 'dou': 1, 'oub': 1, 'ubl': 1, 'ble': 1, 'e c': 1, 'ed\n': 1, 'e[0': 1, 'e[-': 1, ' Sa': 1, 'San': 1, 'ani': 1, 'ity': 1, 'ty ': 1, 'y c': 1, 'che': 1, 'hec': 1, 'eck': 1, 'ck\n': 1, 'k\n ': 1, 'ar,': 2, 'f c': 1, 't %': 1, ' % ': 1, '% 2': 1, ' 2:': 1, '2:\n': 1, 'rai': 1, 'ais': 1, 'ise': 1, 'e V': 1, ' Va': 1, 'Val': 1, 'ueE': 1, 'eEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or(': 1, 'r(f': 1, '(f""': 1, 'f""{': 1, '""{c': 1, '{ch': 2, 'ar!': 1, 'r!r': 1, '!r}': 1, 'r} ': 1, '} d': 1, 'doe': 1, 'oes': 1, 's n': 1, 't h': 1, 'ave': 1, 've ': 1, 'e a': 1, 'an ': 1, 'n e': 1, ' ev': 1, 'ven': 1, 'en ': 1, ': {': 1, ' {c': 2, '{co': 1, 'nt}': 1, 't}.': 1, '}.""': 1, '."")': 1, ': c': 1, 't /': 1, ' //': 1, '// ': 1, '/ 2': 1, '2 f': 1, '()}': 1, ')}\n': 1}"
Mushinako,solution15.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 1, 'from': 3, '__future__': 1, 'import': 3, 'annotations': 1, 'typing': 1, 'type_checking': 1, 'utils': 1, 'solutionabstract': 1, 'if': 1, 'type_checking:': 1, '_data': 2, '=': 2, 'type(none)': 1, 'class': 1, 'solution(solutionabstract):': 1, 'day': 4, '-1': 1, 'data:': 1, '@staticmethod': 1, 'def': 3, '_process_data(raw_data:': 1, 'list[str])': 1, '->': 3, '_data:': 1, '""""""': 6, 'process': 1, 'xx': 3, 'data.': 1, 'part_1(self)': 1, '...:': 2, 'part': 2, '1': 1, 'solution.': 2, 'part_2(self)': 1, '2': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 1, ': r': 1, ' re': 1, 'rep': 1, 'epo': 1, 'por': 4, 'ort': 4, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 1, 'ing': 2, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 2, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 10, '""""\n': 6, '""\n\n': 3, '\n\nf': 3, '\nfr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm _': 1, ' __': 1, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 1, 'ure': 1, 're_': 1, 'e__': 1, '__ ': 1, '_ i': 1, ' im': 3, 'imp': 3, 'mpo': 3, 'rt ': 5, 't a': 1, ' an': 1, 'ann': 1, 'nno': 1, 'not': 1, 'ota': 1, 'tat': 2, 'ati': 2, 'tio': 6, 'ion': 6, 'ons': 1, 'ns\n': 1, 's\n\n': 1, 'm t': 1, ' ty': 2, 'typ': 2, 'ypi': 1, 'pin': 1, 'ng ': 1, 'g i': 1, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm u': 1, ' ut': 1, 'uti': 6, 'til': 1, 'ils': 1, 'ls ': 1, 's i': 1, 't S': 1, ' So': 2, 'Sol': 3, 'olu': 5, 'lut': 5, 'onA': 2, 'nAb': 2, 'Abs': 2, 'bst': 2, 'str': 3, 'tra': 2, 'rac': 2, 'act': 2, 'ct\n': 1, 't\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 5, '\n  ': 16, '   ': 68, '  _': 1, ' _D': 3, '_Da': 3, 'Dat': 3, 'ata': 7, 'ta ': 1, 'a =': 1, ' = ': 2, '= t': 1, 'pe(': 1, 'e(N': 1, '(No': 1, 'Non': 1, 'one': 1, 'ne)': 1, 'e)\n': 1, ')\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 2, 's S': 1, 'on(': 1, 'n(S': 1, '(So': 1, 'ct)': 1, 't):': 1, '):\n': 1, '  d': 5, ' da': 4, 'day': 2, 'ay ': 4, 'y =': 1, '= -': 1, ' -1': 1, '-1\n': 1, '1\n ': 1, 'dat': 4, 'ta:': 3, 'a: ': 2, ': _': 1, 'ta\n': 1, 'a\n\n': 1, '\n\n ': 3, '  @': 1, ' @s': 1, '@st': 1, 'sta': 1, 'tic': 1, 'icm': 1, 'cme': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od\n': 1, 'd\n ': 1, ' de': 3, 'def': 3, 'ef ': 3, 'f _': 1, ' _p': 1, '_pr': 1, 'pro': 1, 'roc': 2, 'oce': 2, 'ces': 2, 'ess': 2, 'ss_': 1, 's_d': 1, '_da': 2, 'ta(': 1, 'a(r': 1, '(ra': 1, 'raw': 1, 'aw_': 1, 'w_d': 1, ': l': 1, ' li': 1, 'lis': 1, 'ist': 1, 'st[': 1, 't[s': 1, '[st': 1, 'tr]': 1, 'r])': 1, ']) ': 1, ') -': 3, ' ->': 3, '-> ': 3, '> _': 1, 'a:\n': 1, '  ""': 6, ' """"': 6, '""\n ': 3, '  P': 1, ' Pr': 1, 'Pro': 1, 's d': 1, 'y x': 3, ' xx': 3, 'xx ': 3, 'x d': 1, 'ta.': 1, 'a.\n': 1, '.\n ': 3, 'f p': 2, ' pa': 4, 'par': 4, 'art': 4, 'rt_': 2, 't_1': 1, '_1(': 1, '1(s': 1, '(se': 2, 'sel': 2, 'elf': 2, 'lf)': 2, 'f) ': 2, '> .': 2, ' ..': 2, '...': 2, '..:': 2, '.:\n': 2, '  D': 2, ' Da': 2, 'Day': 2, 'x p': 2, 't 1': 1, ' 1 ': 1, '1 s': 1, ' so': 2, 'sol': 2, 'on.': 2, 'n.\n': 2, 't_2': 1, '_2(': 1, '2(s': 1, 't 2': 1, ' 2 ': 1, '2 s': 1}"
Mushinako,solution17.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 7, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 1, 'from': 5, '__future__': 1, 'import': 5, 'annotations': 1, 'collections': 1, 'defaultdict': 1, 'itertools': 1, 'count': 4, 'typing': 1, 'type_checking': 1, 'utils': 1, 'solutionabstract': 1, 'if': 9, 'type_checking:': 1, '_range': 1, '=': 17, 'tuple[int,': 1, 'int]': 1, '_data': 2, 'tuple[_range,': 1, '_range]': 1, 'class': 1, 'solution(solutionabstract):': 1, 'day': 4, '17': 4, 'data:': 1, '@staticmethod': 1, 'def': 3, '_process_data(raw_data:': 1, 'list[str])': 1, '->': 3, '_data:': 1, '""""""': 6, 'process': 1, 'data.': 1, '(raw_str,)': 1, 'raw_data': 1, 'data': 1, 'raw_str.removeprefix(""target': 1, 'area:"").strip()': 1, 'x_str,': 1, 'y_str': 1, 'data.split("","")': 1, 'x_coords': 1, 'x_str.strip().removeprefix(""x="").strip().split(""."")': 1, 'y_coords': 1, 'y_str.strip().removeprefix(""y="").strip().split(""."")': 1, 'return': 3, '(': 1, '(int(x_coords[0]),': 1, 'int(x_coords[-1])),': 1, 'absolute': 1, 'values': 1, 'are': 1, 'taken': 1, 'here': 1, 'to': 3, 'make': 1, 'it': 1, 'easier': 1, 'calculate': 1, '(abs(int(y_coords[-1])),': 1, 'abs(int(y_coords[0]))),': 1, ')': 1, 'part_1(self)': 1, 'int:': 2, 'part': 2, '1': 2, 'solution.': 2, 'y_depth': 2, 'self.data[1][1]': 1, '*': 2, '(y_depth': 1, '-': 4, '1)': 1, '//': 1, '2': 3, 'part_2(self)': 1, '(x_min,': 1, 'x_max),': 1, '(y_min,': 1, 'y_max)': 1, 'self.data': 1, '[will': 1, 'overshoot?][min': 1, 'step': 5, 'count]': 2, 'x_counts:': 1, 'dict[bool,': 1, 'defaultdict[int,': 2, 'set[int]]]': 1, '{': 1, 'true:': 1, 'defaultdict(set),': 2, 'false:': 1, '}': 1, 'for': 13, 'x_end': 3, 'in': 11, 'count(1):': 2, '>': 5, 'x_max:': 2, 'break': 4, 'x_acc': 4, '0': 2, 'x': 5, 'count(x_end):': 1, '+=': 2, '>=': 2, 'x_min:': 1, 'x_counts[x_end': 1, '1][x': 1, '+': 3, '1].add(x)': 1, '[min': 1, 'y_counts:': 1, 'set[int]]': 1, 'defaultdict(set)': 1, 'y_start': 4, 'y_max:': 2, 'y_acc': 4, 'y': 6, 'count(y_start):': 1, 'y_min:': 1, 'base_y_step': 1, 'y_counts[base_y_step].add(-y_start)': 1, 'y_counts[base_y_step': 1, '1].add(y_start)': 1, 'all_starts:': 1, 'set[tuple[int,': 1, 'int]]': 1, 'set()': 1, 'ones': 2, 'that': 2, ""won't"": 1, 'overshoot,': 2, 'as': 2, 'long': 1, 'the': 1, 'is': 1, 'no': 1, 'smaller': 1, 'than': 1, 'then': 1, ""it's"": 1, 'ok': 1, 'x_min_step,': 2, 'x_vecs': 4, 'x_counts[false].items():': 1, 'y_min_step,': 1, 'y_vecs': 2, 'y_counts.items():': 1, 'y_min_step': 1, '<': 1, 'x_min_step:': 1, 'continue': 2, 'all_starts': 2, '|=': 2, '{(x,': 2, 'y)': 2, 'y_vecs}': 2, 'will': 1, 'we': 1, 'need': 1, 'get': 1, 'exact': 1, 'x_counts[true].items():': 1, 'y_counts.get(x_min_step)': 1, 'not': 1, 'y_vecs:': 1, 'len(all_starts)': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 1, ': r': 1, ' re': 4, 'rep': 1, 'epo': 1, 'por': 6, 'ort': 6, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 1, 'ing': 2, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 3, 'lse': 3, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 10, '""""\n': 7, '""\n\n': 1, '\n\nf': 3, '\nfr': 5, 'fro': 5, 'rom': 5, 'om ': 5, 'm _': 1, ' __': 1, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 4, 'ure': 1, 're_': 1, 'e__': 1, '__ ': 1, '_ i': 1, ' im': 5, 'imp': 5, 'mpo': 5, 'rt ': 11, 't a': 2, ' an': 1, 'ann': 1, 'nno': 1, 'not': 2, 'ota': 1, 'tat': 2, 'ati': 2, 'tio': 7, 'ion': 7, 'ons': 2, 'ns\n': 1, 's\n\n': 1, 'm c': 1, ' co': 13, 'col': 1, 'oll': 1, 'lle': 2, 'lec': 1, 'ect': 1, 'cti': 1, 'ns ': 1, 's i': 6, 't d': 1, ' de': 9, 'def': 9, 'efa': 6, 'fau': 6, 'aul': 6, 'ult': 6, 'ltd': 6, 'tdi': 6, 'dic': 7, 'ict': 7, 'ct\n': 2, 't\nf': 2, 'm i': 1, ' it': 3, 'ite': 4, 'ter': 1, 'ert': 1, 'rto': 1, 'too': 1, 'ool': 2, 'ols': 1, 'ls ': 2, 't c': 1, 'cou': 19, 'oun': 19, 'unt': 19, 'nt\n': 2, 'm t': 1, ' ty': 1, 'typ': 1, 'ypi': 1, 'pin': 1, 'ng ': 2, 'g i': 1, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm u': 1, ' ut': 1, 'uti': 6, 'til': 1, 'ils': 1, 't S': 1, ' So': 2, 'Sol': 3, 'olu': 6, 'lut': 6, 'onA': 2, 'nAb': 2, 'Abs': 3, 'bst': 2, 'str': 14, 'tra': 2, 'rac': 2, 'act': 3, 't\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 9, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 20, '\n  ': 74, '   ': 645, '  _': 2, ' _R': 2, '_Ra': 3, 'Ran': 3, 'ang': 3, 'nge': 3, 'ge ': 1, 'e =': 1, ' = ': 17, '= t': 2, ' tu': 2, 'tup': 3, 'upl': 3, 'ple': 3, 'le[': 3, 'e[i': 2, '[in': 6, 'int': 14, 'nt,': 4, 't, ': 6, ', i': 3, ' in': 16, 'nt]': 6, 't]\n': 3, ']\n ': 4, ' _D': 3, '_Da': 3, 'Dat': 3, 'ata': 12, 'ta ': 2, 'a =': 2, 'e[_': 1, '[_R': 1, 'ge,': 1, 'e, ': 1, ', _': 1, 'ge]': 1, 'e]\n': 1, ']\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 2, 's S': 1, 'on(': 1, 'n(S': 1, '(So': 1, 'ct)': 1, 't):': 2, '):\n': 8, '  d': 6, ' da': 6, 'day': 2, 'ay ': 4, 'y =': 1, '= 1': 1, ' 17': 4, '17\n': 1, '7\n ': 1, 'dat': 9, 'ta:': 3, 'a: ': 2, ': _': 1, 'ta\n': 3, 'a\n\n': 2, '\n\n ': 7, '  @': 1, ' @s': 1, '@st': 1, 'sta': 12, 'tic': 1, 'icm': 1, 'cme': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od\n': 1, 'd\n ': 1, 'ef ': 3, 'f _': 1, ' _p': 1, '_pr': 1, 'pro': 1, 'roc': 2, 'oce': 2, 'ces': 2, 'ess': 2, 'ss_': 1, 's_d': 1, '_da': 3, 'ta(': 1, 'a(r': 1, '(ra': 2, 'raw': 4, 'aw_': 4, 'w_d': 2, ': l': 1, ' li': 1, 'lis': 1, 'ist': 1, 'st[': 1, 't[s': 1, '[st': 1, 'tr]': 1, 'r])': 1, ']) ': 1, ') -': 3, ' ->': 3, '-> ': 3, '> _': 1, 'a:\n': 1, '  ""': 6, ' """"': 6, '""\n ': 6, '  P': 1, ' Pr': 1, 'Pro': 1, 's d': 1, 'y 1': 3, '17 ': 3, '7 d': 1, 'ta.': 2, 'a.\n': 1, '.\n ': 3, '  (': 4, ' (r': 1, 'w_s': 2, '_st': 26, 'tr,': 2, 'r,)': 1, ',) ': 1, ') =': 2, '= r': 2, ' ra': 2, 'a\n ': 1, 'tr.': 3, 'r.r': 1, '.re': 3, 'rem': 3, 'emo': 3, 'mov': 3, 'ove': 6, 'vep': 3, 'epr': 3, 'pre': 3, 'ref': 3, 'efi': 3, 'fix': 3, 'ix(': 3, 'x(""': 3, '(""t': 1, '""ta': 1, 'tar': 12, 'arg': 1, 'rge': 1, 'get': 3, 'et ': 2, ' ar': 2, 'are': 2, 'rea': 5, 'ea:': 1, 'a:""': 1, ':"")': 1, '"").': 3, ').s': 5, '.st': 5, 'tri': 5, 'rip': 5, 'ip(': 5, 'p()': 5, '()\n': 2, ')\n ': 8, '  x': 7, ' x_': 25, 'x_s': 2, 'r, ': 1, ', y': 5, ' y_': 29, 'y_s': 12, 'tr ': 1, 'r =': 1, '= d': 2, 'a.s': 1, '.sp': 3, 'spl': 3, 'pli': 3, 'lit': 3, 'it(': 3, 't(""': 3, '("",': 1, '"",""': 1, ',"")': 1, '"")\n': 3, 'x_c': 7, '_co': 15, 'coo': 6, 'oor': 6, 'ord': 6, 'rds': 6, 'ds ': 2, 's =': 3, '= x': 3, 'r.s': 2, '().': 4, ').r': 2, '(""x': 1, '""x=': 1, 'x=""': 1, '="")': 2, '("".': 2, '"".""': 2, '."")': 2, '  y': 8, 'y_c': 8, '= y': 5, '(""y': 1, '""y=': 1, 'y=""': 1, '  r': 3, 'ret': 3, 'etu': 3, 'urn': 3, 'rn ': 3, 'n (': 1, ' (\n': 1, '(\n ': 1, ' (i': 1, '(in': 3, 'nt(': 8, 't(x': 4, '(x_': 5, 'ds[': 4, 's[0': 2, '[0]': 2, '0])': 2, ']),': 1, '), ': 3, 's[-': 2, '[-1': 2, '-1]': 2, '1])': 2, ']))': 3, ')),': 3, '),\n': 4, ',\n ': 4, '  #': 6, ' # ': 6, '# A': 1, ' Ab': 1, 'bso': 1, 'sol': 3, 'ute': 1, 'te ': 1, 'e v': 1, ' va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ues': 1, 'es ': 3, 's a': 1, 're ': 2, 'e t': 2, ' ta': 1, 'tak': 1, 'ake': 2, 'ken': 1, 'en ': 2, 'n h': 1, ' he': 1, 'her': 1, 'ere': 1, ' to': 3, 'to ': 3, 'o m': 1, ' ma': 1, 'mak': 1, 'ke ': 1, 'e i': 1, 'it ': 1, 't e': 2, ' ea': 1, 'eas': 1, 'asi': 1, 'sie': 1, 'ier': 1, 'er ': 2, 'r t': 2, 'o c': 1, ' ca': 1, 'cal': 1, 'alc': 1, 'lcu': 1, 'cul': 1, 'ula': 1, 'lat': 1, 'ate': 1, 'te\n': 1, 'e\n ': 3, ' (a': 1, '(ab': 1, 'abs': 2, 'bs(': 2, 's(i': 2, 't(y': 3, '(y_': 6, ', a': 2, ' ab': 1, ')))': 1, '  )': 1, ' )\n': 1, ')\n\n': 3, 'f p': 2, ' pa': 4, 'par': 4, 'art': 15, 'rt_': 2, 't_1': 1, '_1(': 1, '1(s': 1, '(se': 5, 'sel': 4, 'elf': 4, 'lf)': 2, 'f) ': 2, '> i': 2, 'nt:': 2, 't:\n': 2, '  D': 2, ' Da': 2, 'Day': 2, '7 p': 2, 't 1': 1, ' 1 ': 1, '1 s': 1, ' so': 2, 'on.': 2, 'n.\n': 2, 'y_d': 3, '_de': 3, 'dep': 3, 'ept': 3, 'pth': 3, 'th ': 3, 'h =': 1, '= s': 3, ' se': 6, 'lf.': 2, 'f.d': 2, '.da': 2, 'ta[': 1, 'a[1': 1, '[1]': 2, '1][': 2, '][1': 1, '1]\n': 1, 'n y': 4, 'h *': 1, ' * ': 2, '* (': 1, ' (y': 2, 'h -': 1, ' - ': 4, '- 1': 2, ' 1)': 1, '1) ': 1, ') /': 1, ' //': 1, '// ': 1, '/ 2': 1, ' 2\n': 1, '2\n\n': 1, 't_2': 1, '_2(': 1, '2(s': 1, 't 2': 1, ' 2 ': 2, '2 s': 1, ' (x': 1, 'x_m': 9, '_mi': 10, 'min': 10, 'in,': 2, 'n, ': 2, ', x': 3, '_ma': 6, 'max': 6, 'ax)': 2, 'x),': 1, ', (': 1, 'y_m': 7, 'x) ': 1, '# [': 2, ' [W': 1, '[Wi': 1, 'Wil': 1, 'ill': 2, 'll ': 2, 'l o': 2, ' ov': 3, 'ver': 3, 'ers': 3, 'rsh': 3, 'sho': 3, 'hoo': 3, 'oot': 3, 'ot?': 1, 't?]': 1, '?][': 1, '][M': 1, '[Mi': 2, 'Min': 2, 'in ': 13, 'n s': 2, ' st': 5, 'ste': 14, 'tep': 14, 'ep ': 8, 'p c': 5, 'nts': 9, 'ts:': 3, 's: ': 3, ': d': 4, ' di': 1, 'ct[': 3, 't[b': 1, '[bo': 1, 'boo': 1, 'ol,': 1, 'l, ': 1, ', d': 1, 't[i': 4, ', s': 2, 'set': 7, 'et[': 3, 't]]': 3, ']]]': 1, ']] ': 3, '] =': 3, '= {': 3, ' {\n': 1, '{\n ': 1, '  T': 1, ' Tr': 1, 'Tru': 2, 'rue': 2, 'ue:': 1, 'e: ': 2, 'ct(': 3, 't(s': 3, 'et)': 3, 't),': 2, '  F': 1, ' Fa': 1, 'Fal': 2, 'se:': 1, '  }': 1, ' }\n': 1, '}\n ': 2, '  f': 7, ' fo': 11, 'for': 11, 'or ': 13, 'r x': 6, 'x_e': 5, '_en': 5, 'end': 5, 'nd ': 4, 'd i': 1, 'n c': 4, 't(1': 2, '(1)': 2, '1):': 2, '  i': 8, ' if': 8, 'f x': 3, 'd >': 2, ' > ': 5, '> x': 2, 'ax:': 4, 'x:\n': 4, '  b': 5, ' br': 4, 'bre': 4, 'eak': 4, 'ak\n': 4, 'k\n ': 4, 'x_a': 4, '_ac': 8, 'acc': 8, 'cc ': 8, 'c =': 2, '= 0': 2, ' 0\n': 2, '0\n ': 2, ' x ': 4, 'x i': 3, 'nd)': 1, 'd):': 1, 'c +': 2, ' +=': 2, '+= ': 2, ' x\n': 1, 'x\n ': 1, 'c >': 4, ' >=': 2, '>= ': 2, 'in:': 2, 'n:\n': 2, 'ts[': 5, 's[x': 1, '[x_': 1, '> 1': 1, ' 1]': 3, '][x': 1, '[x ': 1, 'x -': 1, '- x': 1, 'd +': 1, ' + ': 3, '+ 1': 2, '1].': 2, '].a': 3, '.ad': 3, 'add': 3, 'dd(': 3, 'd(x': 1, '(x)': 1, 'x)\n': 1, ' [M': 1, 't)\n': 3, 'r y': 5, 't i': 2, 'f y': 4, 't >': 1, '> y': 2, 'y_a': 4, ' y ': 5, 'y i': 3, 'rt)': 3, ' y\n': 1, 'y\n ': 1, ' ba': 1, 'bas': 3, 'ase': 3, 'se_': 3, 'e_y': 3, '_y_': 3, 'p =': 1, 'y -': 1, '- y': 1, 't +': 1, ' 1\n': 1, '1\n ': 1, 's[b': 2, '[ba': 2, 'ep]': 1, 'p].': 1, 'd(-': 1, '(-y': 1, '-y_': 1, 'p +': 1, '+ y': 1, 't *': 1, '* 2': 1, '2 -': 1, 'd(y': 1, '  a': 3, ' al': 3, 'all': 5, 'll_': 4, 'l_s': 4, 'rts': 4, ': s': 1, 't[t': 1, '[tu': 1, 'et(': 2, 't()': 1, '# F': 2, ' Fo': 2, 'For': 2, 'r o': 2, ' on': 2, 'one': 2, 'nes': 2, 's t': 3, ' th': 5, 'tha': 3, 'hat': 2, 'at ': 2, 't w': 2, ' wo': 1, 'won': 1, ""on'"": 1, ""n't"": 1, ""'t "": 1, 't o': 1, 'ot,': 2, ' as': 2, 'as ': 2, 's l': 1, ' lo': 1, 'lon': 1, 'ong': 1, 'g a': 1, 'the': 2, 'he ': 1, 'e y': 1, 'y s': 1, 'nt ': 2, ' is': 1, 'is ': 1, 's n': 1, ' no': 2, 'no ': 1, 'o s': 1, ' sm': 1, 'sma': 1, 'mal': 1, 'ler': 1, 'han': 1, 'an\n': 1, 'n\n ': 1, '#  ': 1, 'x s': 1, 't t': 1, 'hen': 1, 'n i': 1, ""it'"": 1, ""t's"": 1, ""'s "": 1, 's O': 1, ' OK': 1, 'OK\n': 1, 'K\n ': 1, 'in_': 6, 'n_s': 6, 'ep,': 3, 'p, ': 3, 'x_v': 4, '_ve': 9, 'vec': 9, 'ecs': 9, 'cs ': 6, 'n x': 4, 's[F': 1, '[Fa': 1, 'se]': 1, 'e].': 2, '].i': 2, '.it': 3, 'tem': 3, 'ems': 3, 'ms(': 3, 's()': 3, '():': 3, 'y_v': 5, 'ts.': 2, 's.i': 1, 'p <': 1, ' < ': 1, '< x': 1, 'ep:': 1, 'p:\n': 1, '  c': 2, 'con': 2, 'ont': 2, 'nti': 2, 'tin': 2, 'inu': 2, 'nue': 2, 'ue\n': 2, 'ts ': 2, 's |': 2, ' |=': 2, '|= ': 2, ' {(': 2, '{(x': 2, '(x,': 2, 'x, ': 2, ' y)': 2, 'y) ': 2, ') f': 2, 's f': 2, 'cs}': 2, 's}\n': 2, ' wi': 1, 'wil': 1, ', w': 1, ' we': 1, 'we ': 1, 'e n': 1, ' ne': 1, 'nee': 1, 'eed': 1, 'ed ': 1, 'd t': 1, 'o g': 1, ' ge': 1, ' ex': 1, 'exa': 1, 'xac': 1, 'ct ': 1, 't s': 1, 't\n ': 1, 's[T': 1, '[Tr': 1, 'ue]': 1, 's.g': 1, '.ge': 1, 'ep)': 1, 'p)\n': 1, 'f n': 1, 'ot ': 1, 't y': 1, 'cs:': 1, 's:\n': 1, '}\n\n': 1, 'n l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(a': 1, '(al': 1, 'ts)': 1}"
Mushinako,solution2.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 1, 'from': 3, '__future__': 1, 'import': 3, 'annotations': 1, 'typing': 1, 'type_checking': 1, 'utils': 1, 'solutionabstract': 1, 'if': 7, 'type_checking:': 1, '_instruction': 1, '=': 10, 'tuple[str,': 1, 'int]': 1, '_data': 3, 'list[_instruction]': 1, 'class': 1, 'solution(solutionabstract):': 1, 'day': 4, '2': 2, 'data:': 2, '@staticmethod': 1, 'def': 3, '_process_data(raw_data:': 1, 'list[str])': 1, '->': 3, '_data:': 1, '""""""': 6, 'process': 1, '02': 3, 'data.': 1, '[]': 1, 'for': 3, 'line': 1, 'in': 3, 'raw_data:': 1, 'a,': 1, 'b': 1, 'line.split()': 1, 'data.append((a.lower(),': 1, 'int(b)))': 1, 'return': 3, 'data': 1, 'part_1(self)': 1, 'int:': 2, 'part': 2, '1': 1, 'solution.': 2, 'hori': 6, 'depth': 7, '0': 2, 'direction,': 2, 'distance': 9, 'self.data:': 2, 'direction': 6, '==': 6, '""forward"":': 2, '+=': 5, 'continue': 6, '""down"":': 2, '""up"":': 2, '-=': 2, '*': 3, 'part_2(self)': 1, 'aim': 4}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 1, ': r': 1, ' re': 4, 'rep': 1, 'epo': 1, 'por': 4, 'ort': 4, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 1, 'ing': 2, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 10, '""""\n': 7, '""\n\n': 1, '\n\nf': 3, '\nfr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm _': 1, ' __': 1, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 4, 'ure': 1, 're_': 1, 'e__': 1, '__ ': 1, '_ i': 1, ' im': 3, 'imp': 3, 'mpo': 3, 'rt ': 5, 't a': 1, ' an': 1, 'ann': 1, 'nno': 1, 'not': 1, 'ota': 1, 'tat': 2, 'ati': 2, 'tio': 16, 'ion': 16, 'ons': 1, 'ns\n': 1, 's\n\n': 1, 'm t': 1, ' ty': 1, 'typ': 1, 'ypi': 1, 'pin': 1, 'ng ': 1, 'g i': 1, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm u': 1, ' ut': 1, 'uti': 6, 'til': 1, 'ils': 1, 'ls ': 1, 's i': 1, 't S': 1, ' So': 2, 'Sol': 3, 'olu': 5, 'lut': 5, 'onA': 2, 'nAb': 2, 'Abs': 2, 'bst': 2, 'str': 6, 'tra': 2, 'rac': 2, 'act': 2, 'ct\n': 1, 't\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 7, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 14, '\n  ': 47, '   ': 386, '  _': 2, ' _I': 1, '_In': 2, 'Ins': 2, 'nst': 2, 'tru': 2, 'ruc': 2, 'uct': 2, 'cti': 10, 'on ': 7, 'n =': 7, ' = ': 10, '= t': 1, ' tu': 1, 'tup': 1, 'upl': 1, 'ple': 1, 'le[': 1, 'e[s': 1, '[st': 2, 'tr,': 1, 'r, ': 1, ', i': 2, ' in': 7, 'int': 4, 'nt]': 1, 't]\n': 1, ']\n ': 2, ' _D': 4, '_Da': 4, 'Dat': 4, 'ata': 14, 'ta ': 2, 'a =': 2, '= l': 2, ' li': 4, 'lis': 2, 'ist': 11, 'st[': 2, 't[_': 1, '[_I': 1, 'on]': 1, 'n]\n': 1, ']\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 2, 's S': 1, 'on(': 1, 'n(S': 1, '(So': 1, 'ct)': 1, 't):': 1, '):\n': 1, '  d': 10, ' da': 7, 'day': 2, 'ay ': 4, 'y =': 1, '= 2': 1, ' 2\n': 1, '2\n ': 1, 'dat': 10, 'ta:': 7, 'a: ': 3, ': _': 2, 'ta\n': 2, 'a\n\n': 2, '\n\n ': 3, '  @': 1, ' @s': 1, '@st': 1, 'sta': 10, 'tic': 1, 'icm': 1, 'cme': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od\n': 1, 'd\n ': 1, ' de': 10, 'def': 3, 'ef ': 3, 'f _': 1, ' _p': 1, '_pr': 1, 'pro': 1, 'roc': 2, 'oce': 2, 'ces': 2, 'ess': 2, 'ss_': 1, 's_d': 1, '_da': 3, 'ta(': 1, 'a(r': 1, '(ra': 1, 'raw': 2, 'aw_': 2, 'w_d': 2, ': l': 1, 't[s': 1, 'tr]': 1, 'r])': 1, ']) ': 1, ') -': 3, ' ->': 3, '-> ': 3, '> _': 1, 'a:\n': 4, '  ""': 6, ' """"': 6, '""\n ': 6, '  P': 1, ' Pr': 1, 'Pro': 1, 's d': 1, 'y 0': 3, ' 02': 3, '02 ': 3, '2 d': 1, 'ta.': 2, 'a.\n': 1, '.\n ': 3, '= [': 1, ' []': 1, '[]\n': 1, '  f': 3, ' fo': 3, 'for': 5, 'or ': 3, 'r l': 1, 'lin': 2, 'ine': 2, 'ne ': 1, 'e i': 3, 'in ': 3, 'n r': 1, ' ra': 1, '  a': 3, ' a,': 1, 'a, ': 1, ', b': 1, ' b ': 1, 'b =': 1, 'ne.': 1, 'e.s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, 't()': 1, '()\n': 1, ')\n ': 2, 'a.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd((': 1, '((a': 1, '(a.': 1, 'a.l': 1, '.lo': 1, 'low': 1, 'owe': 1, 'wer': 1, 'er(': 1, 'r()': 1, '(),': 1, '), ': 1, 'nt(': 1, 't(b': 1, '(b)': 1, 'b))': 1, ')))': 1, '))\n': 1, '  r': 3, 'ret': 3, 'etu': 3, 'urn': 3, 'rn ': 3, 'n d': 1, 'f p': 2, ' pa': 4, 'par': 4, 'art': 4, 'rt_': 2, 't_1': 1, '_1(': 1, '1(s': 1, '(se': 2, 'sel': 4, 'elf': 4, 'lf)': 2, 'f) ': 2, '> i': 2, 'nt:': 2, 't:\n': 2, '  D': 2, ' Da': 2, 'Day': 2, '2 p': 2, 't 1': 1, ' 1 ': 1, '1 s': 1, ' so': 2, 'sol': 2, 'on.': 2, 'n.\n': 2, '  h': 4, ' ho': 6, 'hor': 6, 'ori': 6, 'ri ': 6, 'i =': 2, '= d': 8, 'dep': 7, 'ept': 7, 'pth': 7, 'th ': 5, 'h =': 2, '= 0': 2, ' 0\n': 2, '0\n ': 2, 'r d': 2, ' di': 17, 'dir': 8, 'ire': 8, 'rec': 8, 'ect': 8, 'on,': 2, 'n, ': 2, ', d': 2, 'dis': 9, 'tan': 9, 'anc': 9, 'nce': 9, 'ce ': 2, 'n s': 2, ' se': 2, 'lf.': 2, 'f.d': 2, '.da': 2, '  i': 6, ' if': 6, 'f d': 6, ' ==': 6, '== ': 6, '= ""': 6, ' ""f': 2, '""fo': 2, 'orw': 2, 'rwa': 2, 'war': 2, 'ard': 2, 'rd""': 2, 'd"":': 2, '"":\n': 6, 'i +': 2, ' +=': 5, '+= ': 5, 'ce\n': 7, 'e\n ': 13, '  c': 6, ' co': 6, 'con': 6, 'ont': 6, 'nti': 6, 'tin': 6, 'inu': 6, 'nue': 6, 'ue\n': 6, ' ""d': 2, '""do': 2, 'dow': 2, 'own': 2, 'wn""': 2, 'n"":': 2, 'h +': 2, ' ""u': 2, '""up': 2, 'up""': 2, 'p"":': 2, 'h -': 1, ' -=': 2, '-= ': 2, 'n h': 2, 'i *': 2, ' * ': 3, '* d': 3, 'th\n': 1, 'h\n\n': 1, 't_2': 1, '_2(': 1, '2(s': 1, 't 2': 1, ' 2 ': 1, '2 s': 1, '= a': 2, ' ai': 4, 'aim': 4, 'im ': 4, 'm =': 1, 'm *': 1, 'm +': 1, 'm -': 1}"
Mushinako,solution25.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 2, 'from': 5, '__future__': 1, 'import': 5, 'annotations': 1, 'typing': 2, 'type_checking': 1, 'colorama': 1, 'fore,': 1, 'init': 1, 'utils': 1, 'solutionabstract': 1, 'if': 6, 'type_checking:': 1, 'optional': 1, '_coord': 1, '=': 26, 'tuple[int,': 1, 'int]': 1, '_data': 2, 'list[list[str]]': 1, 'init(autoreset=true)': 1, '_colors': 1, '[fore.red,': 1, 'fore.yellow,': 1, 'fore.green,': 1, 'fore.cyan,': 1, 'fore.blue,': 1, 'fore.magenta]': 1, 'class': 1, 'solution(solutionabstract):': 1, 'day': 4, '25': 4, 'data:': 1, '@staticmethod': 2, 'def': 4, '_process_data(raw_data:': 1, 'list[str])': 1, '->': 4, '_data:': 1, '""""""': 6, 'process': 1, 'data.': 1, 'return': 2, '[list(row)': 1, 'for': 11, 'row': 3, 'in': 11, 'raw_data]': 1, 'part_1(self)': 1, 'int:': 1, 'part': 2, '1': 2, 'solution.': 2, 'count': 3, '0': 1, 'data': 1, '[row.copy()': 1, 'self.data]': 1, 'height': 2, 'len(data)': 1, 'width': 2, 'len(data[0])': 1, 'while': 1, 'true:': 1, 'move_east:': 2, 'dict[_coord,': 2, '_coord]': 2, '{}': 2, 'south_movers:': 2, 'list[_coord]': 1, '[]': 1, 'y,': 2, 'enumerate(data):': 1, 'x,': 1, 'cell': 3, 'enumerate(row):': 1, '==': 4, '""v"":': 1, 'south_movers.append((y,': 1, 'x))': 1, 'continue': 1, '"">"":': 1, 'new_x': 1, '(x': 1, '+': 4, '1)': 2, '%': 2, 'data[y][new_x]': 1, '""."":': 2, 'move_east[(y,': 1, 'x)]': 2, '(y,': 5, 'new_x)': 1, 'x)': 5, 'data[y][x]': 4, '"".""': 2, 'move_east.values():': 1, '"">""': 1, 'move_south:': 3, 'x': 1, 'new_y': 1, '(y': 1, 'data[new_y][x]': 1, 'move_south[(y,': 1, '(new_y,': 1, 'move_south.values():': 1, '""v""': 1, '+=': 1, 'not': 2, 'move_east': 1, 'and': 1, 'part_2(self)': 1, 'none:': 2, '2': 1, 'self._print_rainbow(""merry': 1, 'chirstmas!"")': 1, '_print_rainbow(': 1, 'text:': 1, 'str,': 1, '*,': 1, 'sep:': 1, 'optional[str]': 2, 'none,': 2, 'end:': 1, 'flush:': 1, 'bool': 1, 'false,': 1, ')': 1, 'length': 2, 'len(text)': 1, 'colors_length': 2, 'len(_colors)': 1, 'positions': 1, '[i': 1, '*': 1, '//': 1, 'i': 1, 'range(colors_length)]': 1, 'color,': 1, 'position': 1, 'reversed(list(zip(_colors,': 1, 'positions))):': 1, 'text': 1, 'text[:position]': 1, 'color': 1, 'text[position:]': 1, 'print(text,': 1, 'sep=sep,': 1, 'end=end,': 1, 'flush=flush)': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 3, 'ght': 3, 'ht:': 1, 't: ': 3, ': r': 1, ' re': 4, 'rep': 1, 'epo': 1, 'por': 6, 'ort': 6, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 1, 'ing': 3, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 2, 'lse': 2, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 14, '""""\n': 8, '""\n\n': 1, '\n\nf': 4, '\nfr': 4, 'fro': 5, 'rom': 5, 'om ': 5, 'm _': 1, ' __': 1, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 3, 'ure': 1, 're_': 1, 'e__': 1, '__ ': 1, '_ i': 1, ' im': 5, 'imp': 5, 'mpo': 5, 'rt ': 7, 't a': 2, ' an': 2, 'ann': 1, 'nno': 1, 'not': 3, 'ota': 1, 'tat': 3, 'ati': 3, 'tio': 14, 'ion': 14, 'ons': 3, 'ns\n': 1, 's\n\n': 1, 'm t': 2, ' ty': 2, 'typ': 2, 'ypi': 2, 'pin': 2, 'ng ': 2, 'g i': 2, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm c': 1, ' co': 9, 'col': 6, 'olo': 6, 'lor': 6, 'ora': 1, 'ram': 1, 'ama': 1, 'ma ': 1, 'a i': 1, 't F': 1, ' Fo': 6, 'For': 7, 'ore': 8, 're,': 1, 'e, ': 1, ', i': 2, ' in': 14, 'ini': 2, 'nit': 2, 'it\n': 1, 't\n\n': 3, 'm u': 1, ' ut': 1, 'uti': 6, 'til': 1, 'ils': 1, 'ls ': 1, 's i': 1, 't S': 1, ' So': 2, 'Sol': 3, 'olu': 5, 'lut': 5, 'onA': 2, 'nAb': 2, 'Abs': 2, 'bst': 2, 'str': 7, 'tra': 2, 'rac': 2, 'act': 2, 'ct\n': 1, '\n\ni': 2, '\nif': 1, 'if ': 6, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 20, '\n  ': 67, '   ': 586, '  f': 10, ' fr': 1, 't O': 1, ' Op': 3, 'Opt': 3, 'pti': 3, 'ona': 3, 'nal': 3, 'al\n': 1, 'l\n\n': 1, '\n\n ': 5, '  _': 2, ' _C': 3, '_Co': 6, 'Coo': 6, 'oor': 6, 'ord': 6, 'rd ': 1, 'd =': 1, ' = ': 26, '= t': 2, ' tu': 1, 'tup': 1, 'upl': 1, 'ple': 1, 'le[': 1, 'e[i': 1, '[in': 1, 'int': 6, 'nt,': 1, 't, ': 2, 'nt]': 1, 't]\n': 1, ']\n ': 5, ' _D': 3, '_Da': 3, 'Dat': 3, 'ata': 19, 'ta ': 2, 'a =': 2, '= l': 5, ' li': 3, 'lis': 6, 'ist': 6, 'st[': 5, 't[l': 1, '[li': 2, 't[s': 2, '[st': 4, 'tr]': 4, 'r]]': 1, ']]\n': 1, ']\n\n': 3, '\nin': 1, 'it(': 1, 't(a': 1, '(au': 1, 'aut': 1, 'uto': 1, 'tor': 1, 'res': 1, 'ese': 1, 'set': 1, 'et=': 1, 't=T': 1, '=Tr': 1, 'Tru': 2, 'rue': 2, 'ue)': 1, 'e)\n': 1, ')\n_': 1, '\n_C': 1, '_CO': 3, 'COL': 3, 'OLO': 3, 'LOR': 3, 'ORS': 3, 'RS ': 1, 'S =': 1, '= [': 4, ' [F': 1, '[Fo': 1, 're.': 6, 'e.R': 1, '.RE': 1, 'RED': 1, 'ED,': 1, 'D, ': 1, ', F': 5, 'e.Y': 1, '.YE': 1, 'YEL': 1, 'ELL': 1, 'LLO': 1, 'LOW': 1, 'OW,': 1, 'W, ': 1, 'e.G': 1, '.GR': 1, 'GRE': 1, 'REE': 1, 'EEN': 1, 'EN,': 1, 'N, ': 2, 'e.C': 1, '.CY': 1, 'CYA': 1, 'YAN': 1, 'AN,': 1, 'e.B': 1, '.BL': 1, 'BLU': 1, 'LUE': 1, 'UE,': 1, 'E, ': 1, 'e.M': 1, '.MA': 1, 'MAG': 1, 'AGE': 1, 'GEN': 1, 'ENT': 1, 'NTA': 1, 'TA]': 1, 'A]\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 2, 's S': 1, 'on(': 1, 'n(S': 1, '(So': 1, 'ct)': 1, 't):': 1, '):\n': 6, '  d': 11, ' da': 11, 'day': 2, 'ay ': 4, 'y =': 2, '= 2': 1, ' 25': 4, '25\n': 1, '5\n ': 1, 'dat': 16, 'ta:': 3, 'a: ': 2, ': _': 1, 'ta\n': 1, 'a\n\n': 1, '  @': 2, ' @s': 2, '@st': 2, 'sta': 2, 'tic': 2, 'icm': 2, 'cme': 2, 'met': 2, 'eth': 2, 'tho': 2, 'hod': 2, 'od\n': 2, 'd\n ': 2, ' de': 4, 'def': 4, 'ef ': 4, 'f _': 2, ' _p': 2, '_pr': 3, 'pro': 1, 'roc': 2, 'oce': 2, 'ces': 2, 'ess': 2, 'ss_': 1, 's_d': 1, '_da': 3, 'ta(': 1, 'a(r': 1, '(ra': 1, 'raw': 2, 'aw_': 2, 'w_d': 2, ': l': 2, 'r])': 1, ']) ': 1, ') -': 4, ' ->': 4, '-> ': 4, '> _': 1, 'a:\n': 1, '  ""': 7, ' """"': 7, '""\n ': 11, '  P': 1, ' Pr': 1, 'Pro': 1, 's d': 1, 'y 2': 3, '25 ': 3, '5 d': 1, 'ta.': 1, 'a.\n': 1, '.\n ': 3, '  r': 2, 'ret': 2, 'etu': 2, 'urn': 2, 'rn ': 2, 'n [': 1, ' [l': 1, 'st(': 2, 't(r': 1, '(ro': 2, 'row': 6, 'ow)': 2, 'w) ': 1, ') f': 2, ' fo': 11, 'for': 11, 'or ': 12, 'r r': 2, ' ro': 3, 'ow ': 3, 'w i': 3, 'in ': 11, 'n r': 3, ' ra': 2, 'ta]': 2, 'a]\n': 2, 'f p': 2, ' pa': 4, 'par': 4, 'art': 4, 'rt_': 2, 't_1': 1, '_1(': 1, '1(s': 1, '(se': 2, 'sel': 4, 'elf': 4, 'lf)': 2, 'f) ': 2, '> i': 1, 'nt:': 1, 't:\n': 2, '  D': 2, ' Da': 2, 'Day': 2, '5 p': 2, 't 1': 1, ' 1 ': 1, '1 s': 1, ' so': 5, 'sol': 2, 'on.': 2, 'n.\n': 2, '  c': 4, 'cou': 3, 'oun': 3, 'unt': 3, 'nt ': 2, 't =': 3, '= 0': 1, ' 0\n': 1, '0\n ': 1, ' [r': 1, '[ro': 1, 'ow.': 1, 'w.c': 1, '.co': 1, 'cop': 1, 'opy': 1, 'py(': 1, 'y()': 1, '() ': 1, 'n s': 2, ' se': 4, 'lf.': 2, 'f.d': 1, '.da': 1, '  h': 1, ' he': 2, 'hei': 2, 'eig': 2, 'ht ': 1, ' le': 6, 'len': 9, 'en(': 4, 'n(d': 2, '(da': 3, 'ta)': 2, 'a)\n': 1, ')\n ': 7, '  w': 2, ' wi': 2, 'wid': 2, 'idt': 2, 'dth': 2, 'th ': 5, 'h =': 3, 'ta[': 7, 'a[0': 1, '[0]': 1, '0])': 1, '])\n': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e T': 1, ' Tr': 1, 'ue:': 1, 'e:\n': 3, '  m': 4, ' mo': 10, 'mov': 13, 'ove': 13, 've_': 10, 'e_e': 5, '_ea': 5, 'eas': 5, 'ast': 5, 'st:': 2, ': d': 2, ' di': 2, 'dic': 2, 'ict': 2, 'ct[': 2, 't[_': 3, '[_C': 3, 'rd,': 2, 'd, ': 3, ', _': 2, 'rd]': 3, 'd] ': 3, '] =': 13, '= {': 2, ' {}': 2, '{}\n': 2, '}\n ': 2, '  s': 4, 'sou': 8, 'out': 8, 'uth': 8, 'th_': 3, 'h_m': 3, '_mo': 3, 'ver': 4, 'ers': 4, 'rs:': 2, 's: ': 1, ' []': 1, '[]\n': 1, 'r y': 2, ' y,': 2, 'y, ': 11, ', r': 1, 'n e': 2, ' en': 4, 'enu': 2, 'num': 2, 'ume': 2, 'mer': 2, 'era': 2, 'rat': 2, 'ate': 2, 'te(': 2, 'e(d': 1, 'a):': 1, 'r x': 1, ' x,': 1, 'x, ': 1, ', c': 1, ' ce': 3, 'cel': 3, 'ell': 3, 'll ': 3, 'l i': 1, 'e(r': 1, 'w):': 1, '  i': 5, ' if': 5, 'f c': 2, 'l =': 3, ' ==': 4, '== ': 4, '= ""': 8, ' ""v': 2, '""v""': 2, 'v"":': 1, '"":\n': 4, 'rs.': 1, 's.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 4, 'nd(': 1, 'd((': 1, '((y': 1, '(y,': 8, ', x': 9, ' x)': 8, 'x))': 1, '))\n': 1, 'con': 1, 'ont': 1, 'nti': 1, 'tin': 1, 'inu': 1, 'nue': 1, 'ue\n': 1, 'e\n ': 1, ' "">': 2, '"">""': 2, '>"":': 1, '  n': 2, ' ne': 3, 'new': 6, 'ew_': 6, 'w_x': 3, '_x ': 1, 'x =': 1, '= (': 4, ' (x': 1, '(x ': 1, 'x +': 1, ' + ': 4, '+ 1': 2, ' 1)': 2, '1) ': 2, ') %': 2, ' % ': 2, '% w': 1, 'th\n': 1, 'h\n ': 1, 'f d': 2, 'a[y': 5, '[y]': 5, 'y][': 6, '][n': 1, '[ne': 2, '_x]': 1, 'x] ': 6, ' "".': 4, '"".""': 4, '."":': 2, 't[(': 1, '[(y': 2, 'x)]': 2, ')] ': 2, ' (y': 6, ', n': 1, '_x)': 1, 'x)\n': 2, 'r (': 4, 'x) ': 4, ') i': 4, 'n m': 4, '][x': 5, '[x]': 5, '.""\n': 2, 'st.': 1, 't.v': 1, '.va': 2, 'val': 2, 'alu': 2, 'lue': 2, 'ues': 2, 'es(': 2, 's()': 2, '():': 2, '>""\n': 1, 'e_s': 5, '_so': 5, 'th:': 3, 'h: ': 2, ' x ': 1, 'x i': 1, 's:\n': 1, 'w_y': 3, '_y ': 1, '(y ': 1, 'y +': 1, '% h': 1, 'ht\n': 1, 't\n ': 1, 'a[n': 1, '_y]': 1, 'th[': 1, 'h[(': 1, ' (n': 1, '(ne': 1, '_y,': 1, 'h:\n': 2, 'th.': 1, 'h.v': 1, 'v""\n': 1, 't +': 1, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 1, '1\n ': 1, 'f n': 1, ' no': 2, 'ot ': 2, 't m': 2, 'st ': 1, 'and': 1, 'nd ': 1, 'd n': 1, 'n c': 1, 'nt\n': 1, 't_2': 1, '_2(': 1, '2(s': 1, '> N': 2, ' No': 4, 'Non': 4, 'one': 4, 'ne:': 2, 't 2': 1, ' 2 ': 1, '2 s': 1, 'f._': 1, '._p': 1, 'pri': 3, 'rin': 3, 'nt_': 2, 't_r': 2, '_ra': 2, 'rai': 2, 'ain': 2, 'inb': 2, 'nbo': 2, 'bow': 2, 'ow(': 2, 'w(""': 1, '(""M': 1, '""Me': 1, 'Mer': 1, 'err': 1, 'rry': 1, 'ry ': 1, 'y C': 1, ' Ch': 1, 'Chi': 1, 'hir': 1, 'irs': 1, 'rst': 1, 'stm': 1, 'tma': 1, 'mas': 1, 'as!': 1, 's!""': 1, '!"")': 1, '"")\n': 1, ')\n\n': 1, 'w(\n': 1, '(\n ': 1, '  t': 2, ' te': 4, 'tex': 6, 'ext': 6, 'xt:': 1, ': s': 1, ' st': 1, 'tr,': 1, 'r,\n': 1, ',\n ': 5, '  *': 1, ' *,': 1, '*,\n': 1, 'sep': 3, 'ep:': 1, 'p: ': 1, ': O': 2, 'al[': 2, 'l[s': 2, 'r] ': 2, '= N': 2, 'ne,': 2, 'e,\n': 3, '  e': 1, 'nd:': 1, 'd: ': 1, ' fl': 2, 'flu': 3, 'lus': 3, 'ush': 3, 'sh:': 1, ': b': 1, ' bo': 1, 'boo': 1, 'ool': 1, 'ol ': 1, '= F': 1, ' Fa': 1, 'Fal': 1, 'se,': 1, '  )': 1, ' ) ': 1, '  l': 1, 'eng': 5, 'ngt': 5, 'gth': 5, 'n(t': 1, '(te': 2, 'xt)': 1, 't)\n': 1, 'ors': 3, 'rs_': 3, 's_l': 3, '_le': 3, 'n(_': 1, '(_C': 2, 'RS)': 1, 'S)\n': 1, '  p': 2, ' po': 3, 'pos': 5, 'osi': 5, 'sit': 5, 'iti': 5, 'ns ': 1, 's =': 1, ' [i': 1, '[i ': 1, 'i *': 1, ' * ': 1, '* l': 1, 'h /': 1, ' //': 1, '// ': 1, '/ c': 1, 'h f': 1, 'r i': 1, ' i ': 1, 'i i': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(c': 1, '(co': 1, 'th)': 1, 'h)]': 1, ')]\n': 1, 'r c': 1, 'or,': 1, 'r, ': 1, ', p': 2, 'on ': 1, 'n i': 1, 'rev': 1, 'eve': 1, 'rse': 1, 'sed': 1, 'ed(': 1, 'd(l': 1, '(li': 1, 't(z': 1, '(zi': 1, 'zip': 1, 'ip(': 1, 'p(_': 1, 'RS,': 1, 'S, ': 1, 'ns)': 1, 's))': 1, ')))': 1, ')):': 1, 'xt ': 1, 'xt[': 2, 't[:': 1, '[:p': 1, ':po': 1, 'on]': 1, 'n] ': 1, '] +': 1, '+ c': 1, 'r +': 1, '+ t': 1, 't[p': 1, '[po': 1, 'on:': 1, 'n:]': 1, ':]\n': 1, ' pr': 1, 'nt(': 1, 't(t': 1, 'xt,': 1, ', s': 1, 'ep=': 1, 'p=s': 1, '=se': 1, 'ep,': 1, 'p, ': 1, ', e': 1, 'nd=': 1, 'd=e': 1, '=en': 1, 'nd,': 1, ', f': 1, 'sh=': 1, 'h=f': 1, '=fl': 1, 'sh)': 1}"
Mushinako,solution3.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 6, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 1, 'from': 4, '__future__': 1, 'import': 4, 'annotations': 1, 'collections': 1, 'counter': 2, 'typing': 1, 'type_checking': 1, 'utils': 1, 'solutionabstract': 1, 'if': 5, 'type_checking:': 1, '_data': 2, '=': 15, 'list[str]': 1, 'class': 1, 'solution(solutionabstract):': 1, 'day': 4, '3': 1, 'data:': 1, '@staticmethod': 1, 'def': 3, '_process_data(raw_data:': 1, 'list[str])': 1, '->': 3, '_data:': 1, '""""""': 6, 'process': 1, '03': 3, 'data.': 1, 'return': 3, 'raw_data': 1, 'part_1(self)': 1, 'int:': 2, 'part': 2, '1': 1, 'solution.': 2, 'gamma_str': 2, '""""': 2, 'epsilon_str': 2, 'for': 7, 'digits': 1, 'in': 9, 'zip(*self.data):': 1, 'counter(digits)': 1, 'common_order': 1, 'counter.most_common()': 1, '+=': 2, 'common_order[0][0]': 1, 'common_order[-1][0]': 1, 'int(gamma_str,': 1, '2)': 4, '*': 2, 'int(epsilon_str,': 1, 'part_2(self)': 1, '2': 1, 'data': 3, 'is': 1, 'sorted': 1, 'decending': 1, 'order': 1, 'to': 3, 'make': 1, 'sure': 1, 'that': 1, ""1's"": 1, 'are': 1, 'always': 2, 'at': 1, 'the': 5, 'front': 1, 'and': 1, 'therefore': 1, 'will': 1, 'be': 1, 'returned': 1, 'as': 1, 'most': 1, 'common': 1, 'one': 1, 'case': 1, 'of': 1, 'a': 1, 'tie': 1, 'self.data.sort(reverse=true)': 1, 'length': 1, 'len(self.data[0])': 1, 'careful': 2, 'not': 2, 'modify': 2, 'original': 2, 'o2_values': 3, 'self.data': 2, 'i': 2, 'range(length):': 2, 'len(o2_values)': 1, '==': 4, '1:': 2, 'break': 2, 'o2_counter': 1, 'counter(d[i]': 2, 'd': 4, 'o2_values)': 1, 'most_common': 1, 'o2_counter.most_common(1)[0][0]': 1, '[d': 2, 'd[i]': 2, 'most_common]': 1, 'co2_values': 3, 'len(co2_values)': 1, 'co2_counter': 1, 'co2_values)': 1, 'least_common': 1, 'co2_counter.most_common()[-1][0]': 1, 'least_common]': 1, 'int(o2_values[0],': 1, 'int(co2_values[0],': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 3, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 1, ': r': 1, ' re': 5, 'rep': 1, 'epo': 1, 'por': 5, 'ort': 7, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 1, 'ing': 3, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 10, '""""\n': 9, '""\n\n': 1, '\n\nf': 3, '\nfr': 4, 'fro': 5, 'rom': 4, 'om ': 4, 'm _': 1, ' __': 1, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 5, 'ure': 2, 're_': 1, 'e__': 1, '__ ': 1, '_ i': 1, ' im': 4, 'imp': 4, 'mpo': 4, 'rt ': 6, 't a': 2, ' an': 2, 'ann': 1, 'nno': 1, 'not': 3, 'ota': 1, 'tat': 2, 'ati': 2, 'tio': 7, 'ion': 7, 'ons': 2, 'ns\n': 1, 's\n\n': 1, 'm c': 1, ' co': 13, 'col': 1, 'oll': 1, 'lle': 1, 'lec': 1, 'ect': 1, 'cti': 1, 'ns ': 1, 's i': 5, 't C': 1, ' Co': 4, 'Cou': 4, 'oun': 10, 'unt': 10, 'nte': 10, 'ter': 10, 'er\n': 1, 'r\nf': 1, 'm t': 1, ' ty': 1, 'typ': 1, 'ypi': 1, 'pin': 1, 'ng ': 2, 'g i': 1, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm u': 1, ' ut': 1, 'uti': 6, 'til': 1, 'ils': 1, 'ls ': 1, 't S': 1, ' So': 2, 'Sol': 3, 'olu': 5, 'lut': 5, 'onA': 2, 'nAb': 2, 'Abs': 2, 'bst': 2, 'str': 10, 'tra': 2, 'rac': 2, 'act': 2, 'ct\n': 1, 't\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 5, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 10, '\n  ': 47, '   ': 320, '  _': 1, ' _D': 3, '_Da': 3, 'Dat': 4, 'ata': 16, 'ta ': 2, 'a =': 1, ' = ': 15, '= l': 3, ' li': 2, 'lis': 2, 'ist': 2, 'st[': 2, 't[s': 2, '[st': 2, 'tr]': 2, 'r]\n': 1, ']\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 2, 's S': 1, 'on(': 4, 'n(S': 1, '(So': 1, 'ct)': 1, 't):': 1, '):\n': 4, '  d': 5, ' da': 6, 'day': 2, 'ay ': 4, 'y =': 1, '= 3': 1, ' 3\n': 1, '3\n ': 1, 'dat': 12, 'ta:': 3, 'a: ': 2, ': _': 1, 'ta\n': 6, 'a\n\n': 2, '\n\n ': 3, '  @': 1, ' @s': 1, '@st': 1, 'sta': 1, 'tic': 1, 'icm': 1, 'cme': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od\n': 1, 'd\n ': 1, ' de': 4, 'def': 3, 'ef ': 3, 'f _': 1, ' _p': 1, '_pr': 1, 'pro': 1, 'roc': 2, 'oce': 2, 'ces': 2, 'ess': 2, 'ss_': 1, 's_d': 1, '_da': 3, 'ta(': 1, 'a(r': 1, '(ra': 1, 'raw': 2, 'aw_': 2, 'w_d': 2, ': l': 1, 'r])': 1, ']) ': 1, ') -': 3, ' ->': 3, '-> ': 3, '> _': 1, 'a:\n': 1, '  ""': 6, ' """"': 8, '""\n ': 8, '  P': 1, ' Pr': 1, 'Pro': 1, 's d': 1, 'y 0': 3, ' 03': 3, '03 ': 3, '3 d': 1, 'ta.': 2, 'a.\n': 1, '.\n ': 3, '  r': 3, 'ret': 4, 'etu': 4, 'urn': 4, 'rn ': 3, 'n r': 3, ' ra': 3, 'f p': 2, ' pa': 4, 'par': 4, 'art': 4, 'rt_': 2, 't_1': 1, '_1(': 1, '1(s': 1, '(se': 3, 'sel': 7, 'elf': 7, 'lf)': 2, 'f) ': 2, '> i': 2, ' in': 15, 'int': 6, 'nt:': 2, 't:\n': 2, '  D': 2, ' Da': 3, 'Day': 2, '3 p': 2, 't 1': 2, ' 1 ': 1, '1 s': 1, ' so': 3, 'sol': 2, 'on.': 2, 'n.\n': 2, '  g': 2, ' ga': 2, 'gam': 3, 'amm': 3, 'mma': 3, 'ma_': 3, 'a_s': 3, '_st': 6, 'tr ': 4, 'r =': 6, '= ""': 2, '  e': 2, ' ep': 2, 'eps': 3, 'psi': 3, 'sil': 3, 'ilo': 3, 'lon': 3, 'on_': 6, 'n_s': 3, '  f': 4, ' fo': 7, 'for': 8, 'or ': 7, 'r d': 5, ' di': 1, 'dig': 2, 'igi': 4, 'git': 2, 'its': 2, 'ts ': 1, 'in ': 9, 'n z': 1, ' zi': 1, 'zip': 1, 'ip(': 1, 'p(*': 1, '(*s': 1, '*se': 1, 'lf.': 5, 'f.d': 5, '.da': 5, 'ta)': 1, 'a):': 1, '  c': 6, 'cou': 6, 'er ': 5, '= C': 3, 'er(': 3, 'r(d': 3, '(di': 1, 'ts)': 1, 's)\n': 3, ')\n ': 6, 'com': 11, 'omm': 11, 'mmo': 11, 'mon': 11, 'n_o': 3, '_or': 3, 'ord': 4, 'rde': 4, 'der': 4, '= c': 4, 'er.': 3, 'r.m': 3, '.mo': 3, 'mos': 6, 'ost': 6, 'st_': 7, 't_c': 7, '_co': 11, 'n()': 2, '()\n': 1, 'r +': 2, ' +=': 2, '+= ': 2, 'er[': 2, 'r[0': 1, '[0]': 9, '0][': 2, '][0': 4, '0]\n': 4, ']\n ': 6, 'r[-': 1, '[-1': 2, '-1]': 2, '1][': 2, 'n i': 2, 'nt(': 4, 't(g': 1, '(ga': 1, 'tr,': 2, 'r, ': 2, ', 2': 4, ' 2)': 4, '2) ': 2, ') *': 2, ' * ': 2, '* i': 2, 't(e': 1, '(ep': 1, '2)\n': 1, ')\n\n': 1, 't_2': 1, '_2(': 1, '2(s': 1, 't 2': 1, ' 2 ': 1, '2 s': 1, '  #': 5, ' # ': 5, '# D': 1, 'a i': 1, ' is': 1, 'is ': 1, 's s': 1, 'sor': 2, 'rte': 1, 'ted': 1, 'ed ': 2, 'd i': 5, 'n d': 1, 'dec': 1, 'ece': 1, 'cen': 1, 'end': 1, 'ndi': 1, 'din': 1, 'g o': 1, ' or': 3, 'r t': 1, ' to': 3, 'to ': 3, 'o m': 3, ' ma': 1, 'mak': 1, 'ake': 1, 'ke ': 1, 'e s': 1, ' su': 1, 'sur': 1, 're ': 3, 'e t': 1, ' th': 7, 'tha': 1, 'hat': 1, 'at ': 2, "" 1'"": 1, ""1's"": 1, ""'s "": 1, 's a': 2, ' ar': 1, 'are': 3, 'e a': 1, ' al': 2, 'alw': 2, 'lwa': 2, 'way': 2, 'ays': 2, 'ys ': 2, ' at': 1, 't t': 3, 'the': 6, 'he\n': 2, 'e\n ': 3, '#  ': 2, ' fr': 1, 'ron': 1, 'ont': 1, 'nt ': 1, 'and': 1, 'nd ': 1, 'd t': 1, 'her': 1, 'ere': 1, 'ref': 3, 'efo': 1, 'ore': 1, 'e w': 1, ' wi': 1, 'wil': 1, 'ill': 1, 'll ': 1, 'l a': 1, 's b': 1, ' be': 1, 'be ': 1, 'e r': 1, 'rne': 1, 'ned': 1, 'd a': 1, ' as': 1, 'as ': 1, 's t': 1, 'he ': 3, 'e m': 1, ' mo': 5, 'st ': 1, 't c': 1, 'on ': 3, 'n o': 3, ' on': 1, 'one': 1, 'ne ': 1, 'e i': 1, 'n t': 1, ' ca': 1, 'cas': 1, 'ase': 1, 'se ': 1, 'e o': 3, ' of': 1, 'of ': 1, 'f a': 1, ' a ': 1, 'a t': 1, ' ti': 1, 'tie': 1, 'ie\n': 1, '  s': 1, ' se': 3, 'a.s': 1, '.so': 1, 'rt(': 1, 't(r': 1, '(re': 1, 'rev': 1, 'eve': 1, 'ver': 1, 'ers': 1, 'rse': 1, 'se=': 1, 'e=T': 1, '=Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e)\n': 1, '  l': 2, ' le': 6, 'len': 6, 'eng': 3, 'ngt': 3, 'gth': 3, 'th ': 1, 'h =': 1, 'en(': 3, 'n(s': 1, 'ta[': 1, 'a[0': 1, '0])': 1, '])\n': 1, '# C': 2, ' Ca': 2, 'Car': 2, 'efu': 2, 'ful': 2, 'ul ': 2, 'l n': 2, ' no': 2, 'ot ': 2, 'mod': 2, 'odi': 2, 'dif': 2, 'ify': 2, 'fy ': 2, 'y t': 2, 'ori': 2, 'gin': 2, 'ina': 2, 'nal': 2, 'al ': 2, 'l d': 2, 'a\n ': 4, '  o': 3, ' o2': 6, 'o2_': 16, '2_v': 12, '_va': 12, 'val': 12, 'alu': 12, 'lue': 12, 'ues': 12, 'es ': 6, 's =': 4, '= s': 2, 'r i': 2, ' i ': 2, 'i i': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(l': 2, '(le': 2, 'th)': 2, 'h):': 2, '  i': 2, ' if': 4, 'f l': 2, 'n(o': 1, '(o2': 2, 'es)': 4, 's) ': 2, ') =': 2, ' ==': 4, '== ': 4, '= 1': 2, ' 1:': 2, '1:\n': 2, '  b': 2, ' br': 2, 'bre': 2, 'rea': 2, 'eak': 2, 'ak\n': 2, 'k\n ': 2, '2_c': 4, '(d[': 2, 'd[i': 4, '[i]': 4, 'i] ': 4, '] f': 2, ' d ': 4, '  m': 1, 'n =': 2, '= o': 1, 'n(1': 1, '(1)': 1, '1)[': 1, ')[0': 1, '= [': 2, ' [d': 2, '[d ': 2, 'd f': 2, 'f d': 2, ' d[': 2, '] =': 2, '= m': 1, 'on]': 2, 'n]\n': 2, 'co2': 8, 'n(c': 1, '(co': 2, 'n c': 2, 'lea': 2, 'eas': 2, 'ast': 2, '()[': 1, ')[-': 1, 't(o': 1, 'es[': 2, 's[0': 2, '0],': 2, '], ': 2, 't(c': 1}"
Mushinako,solution4.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 3, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 1, 'from': 3, '__future__': 1, 'import': 3, 'annotations': 1, 'typing': 1, 'type_checking': 1, 'utils': 1, 'solutionabstract': 1, 'if': 7, 'type_checking:': 1, '_numbers': 1, '=': 21, 'list[int]': 1, '_numberboard': 1, 'list[list[int]]': 1, '_selectedboard': 1, 'list[list[bool]]': 1, '_data': 2, 'tuple[_numbers,': 1, 'list[_numberboard]]': 1, 'class': 1, 'solution(solutionabstract):': 1, 'day': 4, '4': 1, 'data:': 1, '@staticmethod': 2, 'def': 4, '_process_data(raw_data:': 1, 'list[str])': 1, '->': 4, '_data:': 1, '""""""': 6, 'process': 1, '04': 3, 'data.': 1, 'numbers': 1, '[int(n)': 1, 'for': 24, 'n': 6, 'in': 24, 'raw_data[0].split("","")]': 1, 'lines': 1, 'raw_data[1:]': 1, 'boards:': 1, 'list[_numberboard]': 1, '[': 1, '[[int(n)': 1, 'lines[6': 1, '*': 5, 'board_count': 2, '+': 1, 'i].split()]': 1, 'i': 1, 'range(5)]': 3, 'range(len(lines)': 1, '//': 1, '6)': 1, ']': 1, 'return': 5, 'numbers,': 3, 'boards': 1, 'part_1(self)': 1, 'int:': 2, 'part': 2, '1': 1, 'solution.': 2, 'num_boards': 3, 'self.data': 2, 'sel_boards': 3, '[[[false]': 2, '5': 2, '_': 4, 'num_boards]': 2, 'numbers:': 2, 'b,': 4, 'num_board': 2, 'enumerate(num_boards):': 2, 'i,': 2, 'num_row': 2, 'enumerate(num_board):': 2, 'j,': 2, 'num_cell': 6, 'enumerate(num_row):': 2, '==': 2, 'n:': 2, 'sel_boards[b][i][j]': 2, 'true': 2, 'sel_board': 2, 'enumerate(sel_boards):': 2, 'self._check_bingo(sel_board):': 2, 'sum(': 2, 'num_row,': 2, 'sel_row': 2, 'zip(num_boards[b],': 1, 'sel_board)': 2, 'num_cell,': 2, 'sel_cell': 4, 'zip(num_row,': 2, 'sel_row)': 2, 'not': 2, ')': 2, 'make': 2, 'linter': 2, 'happy': 2, '0': 2, 'part_2(self)': 1, '2': 1, 'result': 3, 'new_board_nums:': 1, 'list[list[list[int]]]': 1, '[]': 2, 'new_boards:': 1, 'list[list[list[bool]]]': 1, 'board_num': 1, 'num_boards[b]': 1, 'zip(board_num,': 1, 'else:': 1, 'new_board_nums.append(board_num)': 1, 'new_boards.append(sel_board)': 1, 'new_board_nums': 1, 'new_boards': 1, '_check_bingo(board:': 1, '_selectedboard)': 1, 'bool:': 1, 'any(all(row)': 1, 'row': 1, 'board)': 1, 'or': 1, 'any(all(col)': 1, 'col': 1, 'zip(*board))': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 1, ': r': 1, ' re': 9, 'rep': 1, 'epo': 1, 'por': 4, 'ort': 4, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 1, 'ing': 5, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 3, 'lse': 4, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 10, '""""\n': 7, '""\n\n': 1, '\n\nf': 3, '\nfr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm _': 1, ' __': 1, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 6, 'ure': 1, 're_': 1, 'e__': 1, '__ ': 1, '_ i': 5, ' im': 3, 'imp': 3, 'mpo': 3, 'rt ': 5, 't a': 1, ' an': 3, 'ann': 1, 'nno': 1, 'not': 3, 'ota': 1, 'tat': 3, 'ati': 3, 'tio': 6, 'ion': 6, 'ons': 1, 'ns\n': 1, 's\n\n': 2, 'm t': 1, ' ty': 1, 'typ': 1, 'ypi': 1, 'pin': 1, 'ng ': 1, 'g i': 1, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm u': 1, ' ut': 1, 'uti': 6, 'til': 1, 'ils': 1, 'ls ': 1, 's i': 1, 't S': 1, ' So': 2, 'Sol': 3, 'olu': 5, 'lut': 5, 'onA': 2, 'nAb': 2, 'Abs': 2, 'bst': 2, 'str': 3, 'tra': 2, 'rac': 2, 'act': 2, 'ct\n': 1, 't\n\n': 2, '\n\ni': 1, '\nif': 1, 'if ': 7, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 21, '\n  ': 74, '   ': 780, '  _': 4, ' _N': 2, '_Nu': 5, 'Num': 5, 'umb': 11, 'mbe': 11, 'ber': 11, 'ers': 8, 'rs ': 2, 's =': 9, ' = ': 21, '= l': 3, ' li': 12, 'lis': 14, 'ist': 14, 'st[': 14, 't[i': 3, '[in': 5, 'int': 9, 'nt]': 3, 't]\n': 1, ']\n ': 12, 'erB': 3, 'rBo': 3, 'Boa': 5, 'oar': 48, 'ard': 48, 'rd ': 6, 'd =': 2, 't[l': 6, '[li': 6, 't]]': 2, ']]\n': 3, ' _S': 2, '_Se': 2, 'Sel': 2, 'ele': 2, 'lec': 2, 'ect': 2, 'cte': 2, 'ted': 2, 'edB': 2, 'dBo': 2, 't[b': 2, '[bo': 2, 'boo': 3, 'ool': 3, 'ol]': 2, 'l]]': 2, ' _D': 3, '_Da': 3, 'Dat': 3, 'ata': 11, 'ta ': 1, 'a =': 1, '= t': 1, ' tu': 1, 'tup': 1, 'upl': 1, 'ple': 1, 'le[': 1, 'e[_': 1, '[_N': 3, 'rs,': 4, 's, ': 4, ', l': 1, 't[_': 2, 'rd]': 2, 'd]]': 1, ']\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 2, 's S': 1, 'on(': 1, 'n(S': 1, '(So': 1, 'ct)': 1, 't):': 1, '):\n': 11, '  d': 6, ' da': 4, 'day': 2, 'ay ': 4, 'y =': 1, '= 4': 1, ' 4\n': 1, '4\n ': 1, 'dat': 8, 'ta:': 3, 'a: ': 2, ': _': 2, 'ta\n': 3, 'a\n\n': 1, '\n\n ': 4, '  @': 2, ' @s': 2, '@st': 2, 'sta': 2, 'tic': 2, 'icm': 2, 'cme': 2, 'met': 2, 'eth': 2, 'tho': 2, 'hod': 2, 'od\n': 2, 'd\n ': 2, ' de': 4, 'def': 4, 'ef ': 4, 'f _': 2, ' _p': 1, '_pr': 1, 'pro': 1, 'roc': 2, 'oce': 2, 'ces': 2, 'ess': 2, 'ss_': 1, 's_d': 1, '_da': 4, 'ta(': 1, 'a(r': 1, '(ra': 1, 'raw': 3, 'aw_': 3, 'w_d': 3, ': l': 4, 't[s': 1, '[st': 1, 'tr]': 1, 'r])': 1, ']) ': 1, ') -': 4, ' ->': 4, '-> ': 4, '> _': 1, 'a:\n': 1, '  ""': 6, ' """"': 6, '""\n ': 6, '  P': 1, ' Pr': 1, 'Pro': 1, 's d': 1, 'y 0': 3, ' 04': 3, '04 ': 3, '4 d': 1, 'ta.': 1, 'a.\n': 1, '.\n ': 3, '  n': 10, ' nu': 26, 'num': 49, '= [': 6, ' [i': 1, 'nt(': 2, 't(n': 2, '(n)': 2, 'n) ': 2, ') f': 4, ' fo': 24, 'for': 24, 'or ': 25, 'r n': 8, ' n ': 6, 'n i': 4, ' in': 26, 'in ': 24, 'n r': 6, ' ra': 6, 'ta[': 2, 'a[0': 1, '[0]': 1, '0].': 1, '].s': 2, '.sp': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'it(': 2, 't(""': 1, '("",': 1, '"",""': 1, ',"")': 1, '"")]': 1, ')]\n': 2, '  l': 1, 'lin': 5, 'ine': 3, 'nes': 3, 'es ': 1, '= r': 1, 'a[1': 1, '[1:': 1, '1:]': 1, ':]\n': 1, '  b': 2, ' bo': 7, 'boa': 43, 'rds': 21, 'ds:': 2, 's: ': 3, 'd] ': 1, '] =': 5, ' [\n': 1, '[\n ': 1, '  [': 1, ' [[': 3, '[[i': 1, 'n l': 1, 'es[': 1, 's[6': 1, '[6 ': 1, '6 *': 1, ' * ': 5, '* b': 1, 'rd_': 8, 'd_c': 2, '_co': 2, 'cou': 2, 'oun': 2, 'unt': 2, 'nt ': 2, 't +': 1, ' + ': 1, '+ i': 1, ' i]': 1, 'i].': 1, 't()': 1, '()]': 1, ')] ': 3, '] f': 3, 'r i': 3, ' i ': 1, 'i i': 1, 'ran': 4, 'ang': 4, 'nge': 4, 'ge(': 4, 'e(5': 3, '(5)': 3, '5)]': 3, '  f': 15, 'r b': 5, 't i': 1, 'e(l': 1, '(le': 1, 'len': 1, 'en(': 1, 'n(l': 1, '(li': 1, 'es)': 1, 's) ': 1, ') /': 1, ' //': 1, '// ': 1, '/ 6': 1, ' 6)': 1, '6)\n': 1, ')\n ': 9, '  ]': 1, ' ]\n': 1, '  r': 7, 'ret': 5, 'etu': 5, 'urn': 5, 'rn ': 5, 'n n': 6, ', b': 1, 'ds\n': 2, 'f p': 2, ' pa': 4, 'par': 4, 'art': 4, 'rt_': 2, 't_1': 1, '_1(': 1, '1(s': 1, '(se': 7, 'sel': 28, 'elf': 6, 'lf)': 2, 'f) ': 2, '> i': 2, 'nt:': 2, 't:\n': 2, '  D': 2, ' Da': 2, 'Day': 2, '4 p': 2, 't 1': 1, ' 1 ': 1, '1 s': 1, ' so': 2, 'sol': 2, 'on.': 2, 'n.\n': 2, ', n': 8, 'um_': 29, 'm_b': 13, '_bo': 33, 'ds ': 6, '= s': 2, ' se': 21, 'lf.': 4, 'f.d': 2, '.da': 2, 'a\n ': 2, '  s': 5, 'el_': 22, 'l_b': 14, '[[[': 2, '[[F': 2, '[Fa': 2, 'Fal': 2, 'se]': 2, 'e] ': 2, '] *': 2, '* 5': 2, ' 5 ': 2, '5 f': 2, 'r _': 4, ' _ ': 4, 'ds]': 2, 's]\n': 2, 'rs:': 2, 's:\n': 2, ' b,': 4, 'b, ': 4, 'd i': 4, 'n e': 8, ' en': 8, 'enu': 8, 'ume': 8, 'mer': 8, 'era': 8, 'rat': 8, 'ate': 8, 'te(': 8, 'e(n': 6, '(nu': 9, 'ds)': 4, 's):': 4, ' i,': 2, 'i, ': 2, 'm_r': 8, '_ro': 12, 'row': 14, 'ow ': 5, 'w i': 5, 'rd)': 10, 'd):': 4, 'r j': 2, ' j,': 2, 'j, ': 2, 'm_c': 8, '_ce': 12, 'cel': 12, 'ell': 12, 'll ': 6, 'l i': 5, 'ow)': 5, 'w):': 2, '  i': 6, ' if': 6, 'f n': 4, 'l =': 2, ' ==': 2, '== ': 2, '= n': 6, ' n:': 2, 'n:\n': 2, 'ds[': 4, 's[b': 4, '[b]': 4, 'b][': 2, '][i': 2, '[i]': 2, 'i][': 2, '][j': 2, '[j]': 2, 'j] ': 2, '= T': 2, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue\n': 2, 'e\n ': 2, ', s': 10, 'e(s': 2, 'f s': 2, 'f._': 2, '._c': 2, '_ch': 3, 'che': 3, 'hec': 3, 'eck': 3, 'ck_': 3, 'k_b': 3, '_bi': 3, 'bin': 3, 'ngo': 3, 'go(': 3, 'o(s': 2, 'n *': 2, '* s': 2, ' su': 2, 'sum': 2, 'um(': 2, 'm(\n': 2, '(\n ': 2, 'll\n': 4, 'l\n ': 4, 'ow,': 4, 'w, ': 4, 'l_r': 4, 'n z': 5, ' zi': 5, 'zip': 5, 'ip(': 5, 'p(n': 3, 'b],': 1, '], ': 1, 'd)\n': 3, 'll,': 2, 'l, ': 2, 'l_c': 4, 'w)\n': 2, ' no': 2, 'ot ': 2, 't s': 2, '  )': 2, ' )\n': 2, '  #': 2, ' # ': 2, '# M': 2, ' Ma': 2, 'Mak': 2, 'ake': 2, 'ke ': 2, 'e l': 2, 'nte': 2, 'ter': 2, 'er ': 2, 'r h': 2, ' ha': 2, 'hap': 2, 'app': 4, 'ppy': 2, 'py\n': 2, 'y\n ': 2, 'n 0': 1, ' 0\n': 2, '0\n\n': 1, 't_2': 1, '_2(': 1, '2(s': 1, 't 2': 1, ' 2 ': 1, '2 s': 1, 'res': 3, 'esu': 3, 'sul': 3, 'ult': 3, 'lt ': 2, 't =': 2, '= 0': 1, '0\n ': 1, ' ne': 6, 'new': 6, 'ew_': 6, 'w_b': 6, 'd_n': 6, '_nu': 6, 'ums': 3, 'ms:': 1, ']]]': 2, ']] ': 2, ' []': 2, '[]\n': 2, 'um ': 1, 'm =': 1, 'b]\n': 1, 'p(b': 1, '(bo': 3, 'um,': 1, 'm, ': 1, '  e': 1, ' el': 1, 'els': 1, 'se:': 1, 'e:\n': 1, 'ms.': 1, 's.a': 2, '.ap': 2, 'ppe': 2, 'pen': 2, 'end': 2, 'nd(': 2, 'd(b': 1, 'um)': 1, 'm)\n': 1, 'ds.': 1, 'd(s': 1, 'ms\n': 1, 's\n ': 2, 'lt\n': 1, ' _c': 1, 'o(b': 1, 'rd:': 1, 'd: ': 1, 'd) ': 2, '> b': 1, 'ol:': 1, 'l:\n': 1, 'n a': 1, 'any': 2, 'ny(': 2, 'y(a': 2, '(al': 2, 'all': 2, 'll(': 2, 'l(r': 1, '(ro': 1, 'w) ': 1, 'r r': 1, ' ro': 1, 'n b': 1, ') o': 1, ' or': 1, 'r a': 1, 'l(c': 1, '(co': 1, 'col': 2, 'ol)': 1, 'l) ': 1, 'r c': 1, ' co': 1, 'ol ': 1, 'p(*': 1, '(*b': 1, '*bo': 1, 'd))': 1}"
Mushinako,solution5.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 8, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 1, 'from': 4, '__future__': 1, 'import': 4, 'annotations': 1, 'collections': 1, 'defaultdict': 1, 'typing': 1, 'type_checking': 1, 'utils': 1, 'solutionabstract': 1, 'if': 10, 'type_checking:': 1, '_coord': 3, '=': 20, 'tuple[int,': 1, 'int]': 3, '_coordpair': 1, 'tuple[_coord,': 1, '_coord]': 1, '_data': 3, 'list[_coordpair]': 1, 'class': 1, 'solution(solutionabstract):': 1, 'day': 4, '5': 1, 'data:': 2, '@staticmethod': 1, 'def': 3, '_process_data(raw_data:': 1, 'list[str])': 1, '->': 3, '_data:': 1, '""""""': 6, 'process': 1, '05': 3, 'data.': 1, '[]': 1, 'for': 14, 'line': 1, 'in': 13, 'raw_data:': 1, 'c1_str,': 1, 'c2_str': 1, 'line.split(""->"")': 1, 'c1_nums': 1, '[int(n.strip())': 2, 'n': 6, 'c1_str.strip().split("","")]': 1, 'c1:': 1, 'c1_nums[0],': 1, 'c1_nums[1]': 1, 'c2_nums': 1, 'c2_str.strip().split("","")]': 1, 'c2:': 1, 'c2_nums[0],': 1, 'c2_nums[1]': 1, 'data.append((c1,': 1, 'c2))': 1, 'return': 3, 'data': 1, 'part_1(self)': 1, 'int:': 2, 'part': 2, '1': 7, 'solution.': 2, 'coord_count:': 2, 'defaultdict[_coord,': 2, 'defaultdict(lambda:': 2, '0)': 2, '(x1,': 2, 'y1),': 2, '(x2,': 2, 'y2)': 4, 'self.data:': 2, 'vertical': 2, 'x1': 7, '==': 6, 'x2:': 3, 'y': 2, 'range(min(y1,': 2, 'y2),': 2, 'max(y1,': 2, '+': 11, '1):': 6, 'coord_count[(x1,': 2, 'y)]': 2, '+=': 6, 'continue': 6, 'horizontal': 2, 'y1': 5, 'y2:': 4, 'x': 2, 'range(min(x1,': 2, 'x2),': 2, 'max(x1,': 2, 'x2)': 2, 'coord_count[(x,': 2, 'y1)]': 2, 'count_gt_1': 2, '[n': 2, 'coord_count.values()': 2, '>': 2, '1]': 2, 'len(count_gt_1)': 2, 'part_2(self)': 1, '2': 1, 'get': 1, ""coordinate's"": 1, 'relative': 1, 'positions': 1, 'diagonals': 1, '<': 1, 'big_x': 2, 'x2': 4, 'small_x': 4, 'start_y': 4, 'else:': 1, 'y2': 1, 'bottom-left': 1, 'to': 2, 'top-right': 1, '-': 5, 's': 2, 'range(big_x': 2, 'coord_count[(small_x': 2, 's,': 2, 's)]': 2, 'top-left': 1, 'bottom-right': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 3, 'igh': 3, 'ght': 3, 'ht:': 1, 't: ': 3, ': r': 1, ' re': 5, 'rep': 1, 'epo': 1, 'por': 5, 'ort': 5, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 1, 'ing': 2, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 2, 'lse': 2, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 10, '""""\n': 7, '""\n\n': 1, '\n\nf': 3, '\nfr': 4, 'fro': 4, 'rom': 4, 'om ': 4, 'm _': 1, ' __': 1, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 4, 'ure': 1, 're_': 1, 'e__': 1, '__ ': 1, '_ i': 1, ' im': 4, 'imp': 4, 'mpo': 4, 'rt ': 6, 't a': 1, ' an': 1, 'ann': 1, 'nno': 1, 'not': 1, 'ota': 1, 'tat': 2, 'ati': 3, 'tio': 8, 'ion': 8, 'ons': 3, 'ns\n': 1, 's\n\n': 1, 'm c': 1, ' co': 20, 'col': 1, 'oll': 1, 'lle': 1, 'lec': 1, 'ect': 1, 'cti': 1, 'ns ': 2, 's i': 4, 't d': 1, ' de': 8, 'def': 8, 'efa': 5, 'fau': 5, 'aul': 5, 'ult': 5, 'ltd': 5, 'tdi': 5, 'dic': 5, 'ict': 5, 'ct\n': 2, 't\nf': 1, 'm t': 1, ' ty': 1, 'typ': 1, 'ypi': 1, 'pin': 1, 'ng ': 1, 'g i': 1, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm u': 1, ' ut': 1, 'uti': 6, 'til': 1, 'ils': 1, 'ls ': 1, 't S': 1, ' So': 2, 'Sol': 3, 'olu': 5, 'lut': 5, 'onA': 2, 'nAb': 2, 'Abs': 2, 'bst': 2, 'str': 11, 'tra': 2, 'rac': 2, 'act': 2, 't\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 10, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 22, '\n  ': 74, '   ': 708, '  _': 3, ' _C': 5, '_Co': 9, 'Coo': 9, 'oor': 20, 'ord': 20, 'rd ': 3, 'd =': 3, ' = ': 20, '= t': 2, ' tu': 2, 'tup': 2, 'upl': 2, 'ple': 2, 'le[': 2, 'e[i': 1, '[in': 3, 'int': 8, 'nt,': 1, 't, ': 1, ', i': 3, ' in': 18, 'nt]': 3, 't]\n': 1, ']\n ': 9, 'rdP': 2, 'dPa': 2, 'Pai': 2, 'air': 2, 'ir ': 1, 'r =': 2, 'e[_': 1, '[_C': 4, 'rd,': 3, 'd, ': 3, ', _': 1, 'rd]': 1, 'd]\n': 1, ' _D': 4, '_Da': 4, 'Dat': 4, 'ata': 14, 'ta ': 2, 'a =': 2, '= l': 2, ' li': 4, 'lis': 2, 'ist': 2, 'st[': 2, 't[_': 3, 'ir]': 1, 'r]\n': 1, ']\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 2, 's S': 1, 'on(': 1, 'n(S': 1, '(So': 1, 'ct)': 1, 't):': 1, '):\n': 7, '  d': 7, ' da': 7, 'day': 2, 'ay ': 4, 'y =': 3, '= 5': 1, ' 5\n': 1, '5\n ': 1, 'dat': 10, 'ta:': 7, 'a: ': 5, ': _': 4, 'ta\n': 2, 'a\n\n': 2, '\n\n ': 3, '  @': 1, ' @s': 1, '@st': 1, 'sta': 5, 'tic': 3, 'icm': 1, 'cme': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od\n': 1, 'd\n ': 1, 'ef ': 3, 'f _': 1, ' _p': 1, '_pr': 1, 'pro': 1, 'roc': 2, 'oce': 2, 'ces': 2, 'ess': 2, 'ss_': 1, 's_d': 1, '_da': 3, 'ta(': 1, 'a(r': 1, '(ra': 1, 'raw': 2, 'aw_': 2, 'w_d': 2, ': l': 1, 't[s': 1, '[st': 1, 'tr]': 1, 'r])': 1, ']) ': 1, ') -': 3, ' ->': 3, '-> ': 3, '> _': 1, 'a:\n': 4, '  ""': 6, ' """"': 6, '""\n ': 6, '  P': 1, ' Pr': 1, 'Pro': 1, 's d': 1, 'y 0': 3, ' 05': 3, '05 ': 3, '5 d': 1, 'ta.': 2, 'a.\n': 1, '.\n ': 3, '= [': 5, ' []': 1, '[]\n': 1, '  f': 9, ' fo': 14, 'for': 14, 'or ': 14, 'r l': 1, 'lin': 2, 'ine': 2, 'ne ': 1, 'e i': 1, 'in ': 13, 'n r': 7, ' ra': 7, '  c': 21, ' c1': 6, 'c1_': 5, '1_s': 2, '_st': 4, 'tr,': 1, 'r, ': 1, ', c': 4, ' c2': 7, 'c2_': 5, '2_s': 2, 'tr ': 1, 'ne.': 1, 'e.s': 1, '.sp': 3, 'spl': 3, 'pli': 3, 'lit': 3, 'it(': 3, 't(""': 3, '(""-': 1, '""->': 1, '->""': 1, '>"")': 1, '"")\n': 1, ')\n ': 4, '1_n': 3, '_nu': 6, 'num': 6, 'ums': 6, 'ms ': 2, 's =': 2, ' [i': 2, 'nt(': 2, 't(n': 2, '(n.': 2, 'n.s': 2, '.st': 4, 'tri': 4, 'rip': 4, 'ip(': 4, 'p()': 4, '())': 2, ')) ': 2, ') f': 2, 'r n': 4, ' n ': 6, 'n i': 4, 'n c': 4, 'tr.': 2, 'r.s': 2, '().': 2, ').s': 2, '("",': 2, '"",""': 2, ',"")': 2, '"")]': 2, ')]\n': 2, 'c1:': 1, '1: ': 1, '= c': 2, 'ms[': 4, 's[0': 2, '[0]': 2, '0],': 2, '], ': 2, 's[1': 2, '[1]': 2, '1]\n': 4, '2_n': 3, 'c2:': 1, '2: ': 1, 'a.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd((': 1, '((c': 1, '(c1': 1, 'c1,': 1, '1, ': 13, 'c2)': 1, '2))': 1, '))\n': 1, '  r': 3, 'ret': 3, 'etu': 3, 'urn': 3, 'rn ': 3, 'n d': 1, 'f p': 2, ' pa': 4, 'par': 4, 'art': 8, 'rt_': 6, 't_1': 5, '_1(': 1, '1(s': 1, '(se': 2, 'sel': 4, 'elf': 4, 'lf)': 2, 'f) ': 2, '> i': 2, 'nt:': 4, 't:\n': 2, '  D': 2, ' Da': 2, 'Day': 2, '5 p': 2, 't 1': 1, ' 1 ': 1, '1 s': 1, ' so': 2, 'sol': 2, 'on.': 2, 'n.\n': 2, 'coo': 11, 'rd_': 10, 'd_c': 10, '_co': 10, 'cou': 14, 'oun': 14, 'unt': 14, ': d': 2, 'ct[': 2, 't] ': 2, '] =': 2, '= d': 2, 'ct(': 2, 't(l': 2, '(la': 2, 'lam': 2, 'amb': 2, 'mbd': 2, 'bda': 2, 'da:': 2, ': 0': 2, ' 0)': 2, '0)\n': 2, 'r (': 2, ' (x': 4, '(x1': 8, 'x1,': 8, ', y': 12, ' y1': 9, 'y1)': 4, '1),': 2, '), ': 6, ', (': 2, '(x2': 2, 'x2,': 2, '2, ': 2, ' y2': 11, 'y2)': 6, '2) ': 6, ') i': 4, 'n s': 2, ' se': 2, 'lf.': 2, 'f.d': 2, '.da': 2, '  #': 7, ' # ': 7, '# V': 2, ' Ve': 2, 'Ver': 2, 'ert': 2, 'rti': 2, 'ica': 2, 'cal': 2, 'al\n': 4, 'l\n ': 4, '  i': 7, ' if': 9, 'f x': 5, ' x1': 7, 'x1 ': 5, '1 =': 8, ' ==': 6, '== ': 6, '= x': 8, ' x2': 11, 'x2:': 3, '2:\n': 7, 'r y': 2, ' y ': 2, 'y i': 2, 'ran': 6, 'ang': 6, 'nge': 6, 'ge(': 6, 'e(m': 4, '(mi': 4, 'min': 4, 'in(': 4, 'n(y': 2, '(y1': 4, 'y1,': 4, '2),': 4, ', m': 4, ' ma': 4, 'max': 4, 'ax(': 4, 'x(y': 2, ') +': 4, ' + ': 11, '+ 1': 6, ' 1)': 6, '1):': 6, 'nt[': 6, 't[(': 6, '[(x': 4, ' y)': 2, 'y)]': 2, ')] ': 6, '] +': 6, ' +=': 6, '+= ': 6, '= 1': 6, ' 1\n': 6, '1\n ': 9, 'con': 6, 'ont': 8, 'nti': 6, 'tin': 6, 'inu': 6, 'nue': 6, 'ue\n': 6, 'e\n ': 6, '# H': 2, ' Ho': 2, 'Hor': 2, 'ori': 2, 'riz': 2, 'izo': 2, 'zon': 2, 'nta': 2, 'tal': 2, 'f y': 2, 'y1 ': 4, '= y': 4, 'y2:': 4, 'r x': 2, ' x ': 2, 'x i': 2, 'n(x': 2, ', x': 4, 'x2)': 4, 'x(x': 2, '(x,': 2, 'x, ': 2, '1)]': 2, 'nt_': 4, 't_g': 4, '_gt': 4, 'gt_': 4, '_1 ': 2, ' [n': 2, '[n ': 2, 'n f': 2, 'nt.': 2, 't.v': 2, '.va': 2, 'val': 2, 'alu': 2, 'lue': 2, 'ues': 2, 'es(': 2, 's()': 2, '() ': 2, 'f n': 2, 'n >': 2, ' > ': 2, '> 1': 2, ' 1]': 2, 'n l': 2, ' le': 2, 'len': 2, 'en(': 2, 'n(c': 2, '(co': 2, '_1)': 2, '1)\n': 1, ')\n\n': 1, 't_2': 1, '_2(': 1, '2(s': 1, 't 2': 1, ' 2 ': 1, '2 s': 1, '# G': 1, ' Ge': 1, 'Get': 1, 'et ': 1, 't c': 1, 'rdi': 1, 'din': 1, 'ina': 1, 'nat': 1, 'ate': 1, ""te'"": 1, ""e's"": 1, ""'s "": 1, 's r': 1, 'rel': 1, 'ela': 1, 'lat': 1, 'tiv': 1, 'ive': 1, 've ': 1, 'e p': 1, ' po': 1, 'pos': 1, 'osi': 1, 'sit': 1, 'iti': 1, 's f': 1, 'r d': 1, ' di': 1, 'dia': 1, 'iag': 1, 'ago': 1, 'gon': 1, 'ona': 1, 'nal': 1, 'ls\n': 1, 's\n ': 1, '1 <': 1, ' < ': 1, '< x': 1, '  b': 2, ' bi': 2, 'big': 4, 'ig_': 4, 'g_x': 4, '_x ': 10, 'x =': 4, 'x2\n': 2, '2\n ': 3, '  s': 4, ' sm': 4, 'sma': 6, 'mal': 6, 'all': 6, 'll_': 6, 'l_x': 6, 'x1\n': 2, ' st': 4, 'tar': 4, 't_y': 4, '_y ': 4, 'y1\n': 1, '  e': 1, ' el': 1, 'els': 1, 'se:': 1, 'e:\n': 1, 'y2\n': 1, '# B': 1, ' Bo': 1, 'Bot': 1, 'ott': 2, 'tto': 2, 'tom': 2, 'om-': 2, 'm-l': 1, '-le': 2, 'lef': 2, 'eft': 2, 'ft ': 2, 't t': 2, ' to': 3, 'to ': 2, 'o t': 1, 'top': 1, 'op-': 2, 'p-r': 1, '-ri': 2, 'ht\n': 2, 't\n ': 2, '1 -': 1, ' - ': 5, '- y': 2, 'x2 ': 2, '2 -': 1, 'r s': 2, ' s ': 2, 'e(b': 2, '(bi': 2, 'x -': 2, '- s': 3, 'x +': 4, '[(s': 2, '(sm': 2, '+ s': 3, ' s,': 2, 's, ': 2, ', s': 2, 'y +': 1, ' s)': 2, 's)]': 2, '# T': 1, ' To': 1, 'Top': 1, 'p-l': 1, 'o b': 1, ' bo': 1, 'bot': 1, 'm-r': 1, '1 +': 1, '+ y': 2, '2 +': 1, 'y -': 1}"
Mushinako,solution6.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 1, 'from': 3, '__future__': 1, 'import': 3, 'annotations': 1, 'typing': 1, 'type_checking': 1, 'utils': 1, 'solutionabstract': 1, 'if': 1, 'type_checking:': 1, '_data': 2, '=': 4, 'list[int]': 1, 'class': 1, 'solution(solutionabstract):': 1, 'day': 5, '6': 1, 'data:': 1, '@staticmethod': 1, 'def': 4, '_process_data(raw_data:': 1, 'list[str])': 1, '->': 4, '_data:': 1, '""""""': 8, 'process': 1, '06': 3, 'data.': 1, 'return': 4, '[int(x)': 1, 'for': 4, 'x': 1, 'in': 3, 'raw_data[0].split("","")]': 1, 'part_1(self)': 1, 'int:': 3, 'part': 2, '1': 2, 'solution.': 2, 'self._solution(80)': 1, 'part_2(self)': 1, '2': 1, 'self._solution(256)': 1, '_solution(self,': 1, 'round_count:': 1, 'int)': 1, 'general': 1, 'solution': 1, '06.': 1, 'counts': 1, '[0]': 1, '*': 1, '9': 1, 'd': 1, 'self.data:': 1, 'counts[d]': 1, '+=': 2, '_': 1, 'range(round_count):': 1, 'mature_count': 2, 'counts.pop(0)': 1, 'counts.append(mature_count)': 1, 'counts[6]': 1, 'sum(counts)': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 2, ': r': 1, ' re': 5, 'rep': 1, 'epo': 1, 'por': 4, 'ort': 4, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 1, 'ing': 2, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 12, '""""\n': 9, '""\n\n': 1, '\n\nf': 3, '\nfr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm _': 1, ' __': 1, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 8, 'ure': 4, 're_': 4, 'e__': 1, '__ ': 1, '_ i': 2, ' im': 3, 'imp': 3, 'mpo': 3, 'rt ': 5, 't a': 1, ' an': 1, 'ann': 1, 'nno': 1, 'not': 1, 'ota': 1, 'tat': 2, 'ati': 2, 'tio': 10, 'ion': 10, 'ons': 1, 'ns\n': 1, 's\n\n': 1, 'm t': 1, ' ty': 1, 'typ': 1, 'ypi': 1, 'pin': 1, 'ng ': 1, 'g i': 1, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm u': 1, ' ut': 1, 'uti': 10, 'til': 1, 'ils': 1, 'ls ': 1, 's i': 1, 't S': 1, ' So': 2, 'Sol': 3, 'olu': 9, 'lut': 9, 'onA': 2, 'nAb': 2, 'Abs': 2, 'bst': 2, 'str': 3, 'tra': 2, 'rac': 2, 'act': 2, 'ct\n': 1, 't\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 8, '\n  ': 31, '   ': 170, '  _': 1, ' _D': 3, '_Da': 3, 'Dat': 3, 'ata': 9, 'ta ': 1, 'a =': 1, ' = ': 4, '= l': 1, ' li': 2, 'lis': 2, 'ist': 2, 'st[': 2, 't[i': 1, '[in': 2, 'int': 6, 'nt]': 1, 't]\n': 1, ']\n\n': 2, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 2, 's S': 1, 'on(': 4, 'n(S': 1, '(So': 1, 'ct)': 1, 't):': 2, '):\n': 2, '  d': 6, ' da': 5, 'day': 3, 'ay ': 5, 'y =': 1, '= 6': 1, ' 6\n': 1, '6\n ': 1, 'dat': 6, 'ta:': 4, 'a: ': 2, ': _': 1, 'ta\n': 1, 'a\n\n': 1, '\n\n ': 4, '  @': 1, ' @s': 1, '@st': 1, 'sta': 1, 'tic': 1, 'icm': 1, 'cme': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od\n': 1, 'd\n ': 1, ' de': 4, 'def': 4, 'ef ': 4, 'f _': 2, ' _p': 1, '_pr': 1, 'pro': 1, 'roc': 2, 'oce': 2, 'ces': 2, 'ess': 2, 'ss_': 1, 's_d': 1, '_da': 3, 'ta(': 1, 'a(r': 1, '(ra': 1, 'raw': 2, 'aw_': 2, 'w_d': 2, ': l': 1, 't[s': 1, '[st': 1, 'tr]': 1, 'r])': 1, ']) ': 1, ') -': 4, ' ->': 4, '-> ': 4, '> _': 1, 'a:\n': 2, '  ""': 8, ' """"': 8, '""\n ': 8, '  P': 1, ' Pr': 1, 'Pro': 1, 's d': 1, 'y 0': 4, ' 06': 4, '06 ': 3, '6 d': 1, 'ta.': 1, 'a.\n': 1, '.\n ': 4, '  r': 4, 'ret': 4, 'etu': 4, 'urn': 4, 'rn ': 4, 'n [': 1, ' [i': 1, 'nt(': 1, 't(x': 1, '(x)': 1, 'x) ': 1, ') f': 1, ' fo': 4, 'for': 4, 'or ': 4, 'r x': 1, ' x ': 1, 'x i': 1, ' in': 7, 'in ': 3, 'n r': 2, ' ra': 2, 'ta[': 1, 'a[0': 1, '[0]': 2, '0].': 1, '].s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, 't(""': 1, '("",': 1, '"",""': 1, ',"")': 1, '"")]': 1, ')]\n': 1, 'f p': 2, ' pa': 4, 'par': 4, 'art': 4, 'rt_': 2, 't_1': 1, '_1(': 1, '1(s': 1, '(se': 3, 'sel': 6, 'elf': 6, 'lf)': 2, 'f) ': 2, '> i': 3, 'nt:': 4, 't:\n': 3, '  D': 2, ' Da': 2, 'Day': 2, '6 p': 2, 't 1': 1, ' 1 ': 1, '1 s': 1, ' so': 3, 'sol': 6, 'on.': 2, 'n.\n': 2, 'n s': 4, ' se': 3, 'lf.': 3, 'f._': 2, '._s': 2, '_so': 3, 'n(8': 1, '(80': 1, '80)': 1, '0)\n': 2, ')\n\n': 2, 't_2': 1, '_2(': 1, '2(s': 1, 't 2': 1, ' 2 ': 1, '2 s': 1, 'n(2': 1, '(25': 1, '256': 1, '56)': 1, '6)\n': 1, ' _s': 1, 'n(s': 1, 'lf,': 1, 'f, ': 1, ', r': 1, ' ro': 1, 'rou': 2, 'oun': 13, 'und': 2, 'nd_': 2, 'd_c': 2, '_co': 5, 'cou': 11, 'unt': 11, ': i': 1, 'nt)': 3, 't) ': 1, '  G': 1, ' Ge': 1, 'Gen': 1, 'ene': 1, 'ner': 1, 'era': 1, 'ral': 1, 'al ': 1, 'l s': 1, 'on ': 1, 'n f': 1, 'r d': 2, '06.': 1, '6.\n': 1, '  c': 4, ' co': 5, 'nts': 6, 'ts ': 1, 's =': 1, '= [': 1, ' [0': 1, '0] ': 1, '] *': 1, ' * ': 1, '* 9': 1, ' 9\n': 1, '9\n ': 1, '  f': 2, ' d ': 1, 'd i': 1, 'f.d': 1, '.da': 1, 'ts[': 2, 's[d': 1, '[d]': 1, 'd] ': 1, '] +': 2, ' +=': 2, '+= ': 2, '= 1': 1, ' 1\n': 1, '1\n ': 1, 'r _': 1, ' _ ': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(r': 1, '(ro': 1, '  m': 1, ' ma': 2, 'mat': 3, 'atu': 3, 'e_c': 3, 'nt ': 1, 't =': 1, '= c': 1, 'ts.': 2, 's.p': 1, '.po': 1, 'pop': 1, 'op(': 1, 'p(0': 1, '(0)': 1, ')\n ': 2, 's.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(m': 1, '(ma': 1, 't)\n': 1, 's[6': 1, '[6]': 1, '6] ': 1, '= m': 1, 'nt\n': 1, 't\n ': 1, ' su': 1, 'sum': 1, 'um(': 1, 'm(c': 1, '(co': 1, 'ts)': 1}"
Mushinako,solution7.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 1, 'from': 5, '__future__': 1, 'import': 5, 'annotations': 1, 'math': 1, 'inf': 2, 'statistics': 1, 'median': 1, 'typing': 1, 'type_checking': 1, 'utils': 1, 'solutionabstract': 1, 'if': 2, 'type_checking:': 1, '_data': 2, '=': 8, 'list[int]': 1, 'class': 1, 'solution(solutionabstract):': 1, 'day': 4, '7': 1, 'data:': 1, '@staticmethod': 1, 'def': 3, '_process_data(raw_data:': 1, 'list[str])': 1, '->': 3, '_data:': 1, '""""""': 6, 'process': 1, '07': 3, 'data.': 1, 'return': 3, '[int(x)': 1, 'for': 4, 'x': 1, 'in': 4, 'raw_data[0].split("","")]': 1, 'part_1(self)': 1, 'int:': 2, 'part': 2, '1': 1, 'solution.': 2, 'median_': 1, 'round(median(self.data))': 1, 'sum(abs(n': 2, '-': 3, 'median_)': 1, 'n': 2, 'self.data)': 2, 'part_2(self)': 1, '2': 2, 'min_': 1, 'min(self.data)': 1, 'max_': 1, 'max(self.data)': 1, 'min_fuel': 2, 't': 1, 'range(min_,': 1, 'max_):': 1, 'fuel': 3, 't)': 2, '*': 1, '(abs(n': 1, '+': 1, '1)': 1, '//': 1, '<': 1, 'min_fuel:': 1, 'int(min_fuel)': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 1, ': r': 1, ' re': 4, 'rep': 1, 'epo': 1, 'por': 6, 'ort': 6, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 1, 'ing': 2, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 10, '""""\n': 7, '""\n\n': 1, '\n\nf': 3, '\nfr': 5, 'fro': 5, 'rom': 5, 'om ': 5, 'm _': 1, ' __': 1, '__f': 1, '_fu': 5, 'fut': 1, 'utu': 1, 'tur': 4, 'ure': 1, 're_': 1, 'e__': 1, '__ ': 1, '_ i': 1, ' im': 5, 'imp': 5, 'mpo': 5, 'rt ': 7, 't a': 1, ' an': 1, 'ann': 1, 'nno': 1, 'not': 1, 'ota': 1, 'tat': 3, 'ati': 3, 'tio': 6, 'ion': 6, 'ons': 1, 'ns\n': 1, 's\n\n': 1, 'm m': 1, ' ma': 4, 'mat': 1, 'ath': 1, 'th ': 1, 'h i': 1, 't i': 2, ' in': 9, 'inf': 2, 'nf\n': 2, 'f\nf': 1, 'm s': 1, ' st': 1, 'sta': 2, 'tis': 1, 'ist': 3, 'sti': 1, 'tic': 2, 'ics': 1, 'cs ': 1, 's i': 2, 't m': 1, ' me': 3, 'med': 4, 'edi': 4, 'dia': 4, 'ian': 4, 'an\n': 1, 'n\nf': 1, 'm t': 1, ' ty': 1, 'typ': 1, 'ypi': 1, 'pin': 1, 'ng ': 1, 'g i': 1, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm u': 1, ' ut': 1, 'uti': 6, 'til': 1, 'ils': 1, 'ls ': 1, 't S': 1, ' So': 2, 'Sol': 3, 'olu': 5, 'lut': 5, 'onA': 2, 'nAb': 2, 'Abs': 2, 'bst': 2, 'str': 3, 'tra': 2, 'rac': 2, 'act': 2, 'ct\n': 1, 't\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 2, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 7, '\n  ': 27, '   ': 150, '  _': 1, ' _D': 3, '_Da': 3, 'Dat': 3, 'ata': 13, 'ta ': 1, 'a =': 1, ' = ': 8, '= l': 1, ' li': 2, 'lis': 2, 'st[': 2, 't[i': 1, '[in': 2, 'int': 5, 'nt]': 1, 't]\n': 1, ']\n\n': 2, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 2, 's S': 1, 'on(': 1, 'n(S': 1, '(So': 1, 'ct)': 1, 't):': 1, '):\n': 2, '  d': 5, ' da': 4, 'day': 2, 'ay ': 4, 'y =': 1, '= 7': 1, ' 7\n': 1, '7\n ': 1, 'dat': 10, 'ta:': 3, 'a: ': 2, ': _': 1, 'ta\n': 1, 'a\n\n': 1, '\n\n ': 3, '  @': 1, ' @s': 1, '@st': 1, 'icm': 1, 'cme': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od\n': 1, 'd\n ': 1, ' de': 3, 'def': 3, 'ef ': 3, 'f _': 1, ' _p': 1, '_pr': 1, 'pro': 1, 'roc': 2, 'oce': 2, 'ces': 2, 'ess': 2, 'ss_': 1, 's_d': 1, '_da': 3, 'ta(': 1, 'a(r': 1, '(ra': 1, 'raw': 2, 'aw_': 2, 'w_d': 2, ': l': 1, 't[s': 1, '[st': 1, 'tr]': 1, 'r])': 1, ']) ': 1, ') -': 3, ' ->': 3, '-> ': 3, '> _': 1, 'a:\n': 1, '  ""': 6, ' """"': 6, '""\n ': 6, '  P': 1, ' Pr': 1, 'Pro': 1, 's d': 1, 'y 0': 3, ' 07': 3, '07 ': 3, '7 d': 1, 'ta.': 1, 'a.\n': 1, '.\n ': 3, '  r': 3, 'ret': 3, 'etu': 3, 'urn': 3, 'rn ': 3, 'n [': 1, ' [i': 1, 'nt(': 2, 't(x': 1, '(x)': 1, 'x) ': 1, ') f': 2, ' fo': 4, 'for': 4, 'or ': 4, 'r x': 1, ' x ': 1, 'x i': 1, 'in ': 4, 'n r': 2, ' ra': 2, 'ta[': 1, 'a[0': 1, '[0]': 1, '0].': 1, '].s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, 't(""': 1, '("",': 1, '"",""': 1, ',"")': 1, '"")]': 1, ')]\n': 1, 'f p': 2, ' pa': 4, 'par': 4, 'art': 4, 'rt_': 2, 't_1': 1, '_1(': 1, '1(s': 1, '(se': 5, 'sel': 7, 'elf': 7, 'lf)': 2, 'f) ': 2, '> i': 2, 'nt:': 2, 't:\n': 2, '  D': 2, ' Da': 2, 'Day': 2, '7 p': 2, 't 1': 1, ' 1 ': 1, '1 s': 1, ' so': 2, 'sol': 2, 'on.': 2, 'n.\n': 2, '  m': 5, 'an_': 2, 'n_ ': 2, '_ =': 3, '= r': 1, ' ro': 1, 'rou': 1, 'oun': 1, 'und': 1, 'nd(': 1, 'd(m': 1, '(me': 1, 'an(': 1, 'n(s': 2, 'lf.': 5, 'f.d': 5, '.da': 5, 'ta)': 5, 'a))': 1, '))\n': 1, ')\n ': 4, 'n s': 3, ' su': 2, 'sum': 2, 'um(': 2, 'm(a': 2, '(ab': 3, 'abs': 3, 'bs(': 3, 's(n': 3, '(n ': 3, 'n -': 3, ' - ': 3, '- m': 1, 'n_)': 1, '_) ': 1, 'r n': 2, ' n ': 2, 'n i': 3, ' se': 2, 'a)\n': 4, ')\n\n': 1, 't_2': 1, '_2(': 1, '2(s': 1, 't 2': 1, ' 2 ': 2, '2 s': 1, ' mi': 5, 'min': 7, 'in_': 6, '= m': 2, 'in(': 1, 'max': 3, 'ax_': 2, 'x_ ': 1, 'ax(': 1, 'x(s': 1, 'n_f': 4, 'fue': 7, 'uel': 7, 'el ': 4, 'l =': 3, '= i': 1, 'f\n ': 1, '  f': 2, 'r t': 1, ' t ': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(m': 1, '(mi': 2, 'n_,': 1, '_, ': 1, ', m': 1, 'x_)': 1, '_):': 1, ' fu': 3, '= s': 1, '- t': 2, ' t)': 2, 't) ': 2, ') *': 1, ' * ': 1, '* (': 1, ' (a': 1, ') +': 1, ' + ': 1, '+ 1': 1, ' 1)': 1, '1) ': 1, ') /': 1, ' //': 1, '// ': 1, '/ 2': 1, '2 f': 1, '  i': 1, ' if': 1, 'f f': 1, 'l <': 1, ' < ': 1, '< m': 1, 'el:': 1, 'l:\n': 1, '= f': 1, 'el\n': 1, 'l\n ': 1, 't(m': 1, 'el)': 1}"
Mushinako,solution8.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 7, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 1, 'from': 3, '__future__': 1, 'import': 3, 'annotations': 1, 'typing': 1, 'type_checking': 1, 'utils': 1, 'solutionabstract': 1, 'if': 4, 'type_checking:': 1, '_digitsegments': 1, '=': 32, 'frozenset[str]': 1, '_testset': 1, 'tuple[list[_digitsegments],': 1, 'list[_digitsegments]]': 1, '_data': 3, 'list[_testset]': 1, 'class': 1, 'solution(solutionabstract):': 1, 'day': 4, '8': 2, 'data:': 2, '@staticmethod': 1, 'def': 3, '_process_data(raw_data:': 1, 'list[str])': 1, '->': 3, '_data:': 1, '""""""': 6, 'process': 1, '08': 3, 'data.': 1, '[]': 1, 'for': 11, 'line': 1, 'in': 12, 'raw_data:': 1, 'digits,': 2, 'value': 1, 'line.split(""|"")': 1, 'data.append(': 1, '(': 1, '[frozenset(d)': 1, 'd': 6, 'digits.strip().split()],': 1, '[frozenset(v)': 1, 'v': 3, 'value.strip().split()],': 1, ')': 2, 'return': 3, 'data': 1, 'part_1(self)': 1, 'int:': 2, 'part': 2, '1': 2, 'solution.': 2, 'sum(len(v)': 1, '{2,': 1, '3,': 3, '4,': 1, '7}': 1, '_,': 1, 'values': 2, 'self.data': 1, 'values)': 1, 'part_2(self)': 1, '2': 2, 'sum_': 3, '0': 3, 'self.data:': 1, 'digit_list:': 1, 'list[_digitsegments]': 1, '[frozenset()': 1, '_': 1, 'range(10)]': 1, 'digit_map:': 1, 'dict[_digitsegments,': 1, 'int]': 1, '{}': 1, 'seg_length_map:': 1, 'dict[int,': 1, 'set[_digitsegments]]': 1, '{': 1, '5:': 2, 'set(),': 2, '2,': 2, '5': 3, '6:': 1, '0,': 2, '6,': 2, '9': 3, '}': 1, 'identify': 3, 'the': 1, 'easy': 1, 'digits': 1, 'digits:': 1, 'len_': 5, 'len(d)': 1, '==': 8, '2:': 2, 'digit_list[1]': 1, 'digit_map[d]': 4, 'elif': 5, '3:': 1, 'digit_list[7]': 1, '7': 1, '4:': 2, 'digit_list[4]': 1, '4': 1, '7:': 1, 'digit_list[8]': 1, 'else:': 3, 'seg_length_map[len_].add(d)': 1, 'and': 2, 's6': 4, 'seg_length_map[6]:': 1, 'len(s6': 2, '&': 4, 'digit_list[1])': 2, '1:': 1, 'digit_list[6]': 1, 'digit_map[s6]': 3, '6': 1, 'digit_list[4])': 1, 'digit_list[9]': 1, 'digit_list[0]': 1, 's5': 4, 'seg_length_map[5]:': 1, 'len(s5': 2, 'digit_list[6])': 1, 'digit_list[5]': 1, 'digit_map[s5]': 3, 'digit_list[3]': 1, '3': 1, 'digit_list[2]': 1, 'sub_sum': 4, 'calculate': 1, 'sum': 1, 'values:': 1, '*=': 1, '10': 1, '+=': 2, 'digit_map[v]': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 2, ': r': 1, ' re': 4, 'rep': 1, 'epo': 1, 'por': 4, 'ort': 4, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 1, 'ing': 2, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 1, 'lse': 4, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 10, '""""\n': 7, '""\n\n': 1, '\n\nf': 3, '\nfr': 3, 'fro': 7, 'rom': 3, 'om ': 3, 'm _': 1, ' __': 1, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 4, 'ure': 1, 're_': 1, 'e__': 1, '__ ': 1, '_ i': 2, ' im': 3, 'imp': 3, 'mpo': 3, 'rt ': 5, 't a': 1, ' an': 3, 'ann': 1, 'nno': 1, 'not': 1, 'ota': 1, 'tat': 2, 'ati': 2, 'tio': 6, 'ion': 6, 'ons': 1, 'ns\n': 1, 's\n\n': 1, 'm t': 1, ' ty': 1, 'typ': 1, 'ypi': 1, 'pin': 1, 'ng ': 1, 'g i': 1, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm u': 1, ' ut': 1, 'uti': 6, 'til': 1, 'ils': 1, 'ls ': 1, 's i': 3, 't S': 1, ' So': 2, 'Sol': 3, 'olu': 5, 'lut': 5, 'onA': 2, 'nAb': 2, 'Abs': 2, 'bst': 2, 'str': 6, 'tra': 2, 'rac': 2, 'act': 2, 'ct\n': 1, 't\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 9, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 22, '\n  ': 83, '   ': 950, '  _': 3, ' _D': 5, '_Di': 6, 'Dig': 6, 'igi': 38, 'git': 38, 'itS': 6, 'tSe': 8, 'Seg': 6, 'egm': 6, 'gme': 6, 'men': 6, 'ent': 9, 'nts': 6, 'ts ': 1, 's =': 1, ' = ': 32, '= f': 1, ' fr': 1, 'roz': 4, 'oze': 4, 'zen': 4, 'ens': 4, 'nse': 4, 'set': 7, 'et[': 2, 't[s': 2, '[st': 2, 'tr]': 2, 'r]\n': 1, ']\n ': 5, ' _T': 1, '_Te': 2, 'Tes': 2, 'est': 2, 'stS': 2, 'Set': 2, 'et ': 1, 't =': 1, '= t': 1, ' tu': 1, 'tup': 1, 'upl': 1, 'ple': 1, 'le[': 1, 'e[l': 1, '[li': 1, 'lis': 20, 'ist': 20, 'st[': 19, 't[_': 6, '[_D': 5, 'ts]': 4, 's],': 1, '], ': 1, ', l': 1, ' li': 6, 's]]': 2, ']]\n': 1, '_Da': 4, 'Dat': 4, 'ata': 14, 'ta ': 3, 'a =': 2, '= l': 3, '[_T': 1, 'et]': 1, 't]\n': 1, ']\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 2, 's S': 1, 'on(': 1, 'n(S': 1, '(So': 1, 'ct)': 1, 't):': 1, '):\n': 1, '  d': 30, ' da': 7, 'day': 2, 'ay ': 4, 'y =': 1, '= 8': 2, ' 8\n': 2, '8\n ': 2, 'dat': 10, 'ta:': 6, 'a: ': 3, ': _': 2, 'ta\n': 2, 'a\n\n': 2, '\n\n ': 3, '  @': 1, ' @s': 1, '@st': 1, 'sta': 1, 'tic': 1, 'icm': 1, 'cme': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od\n': 1, 'd\n ': 5, ' de': 3, 'def': 3, 'ef ': 3, 'f _': 1, ' _p': 1, '_pr': 1, 'pro': 1, 'roc': 2, 'oce': 2, 'ces': 2, 'ess': 2, 'ss_': 1, 's_d': 1, '_da': 3, 'ta(': 1, 'a(r': 1, '(ra': 1, 'raw': 2, 'aw_': 2, 'w_d': 2, ': l': 2, 'r])': 1, ']) ': 5, ') -': 3, ' ->': 3, '-> ': 3, '> _': 1, 'a:\n': 3, '  ""': 6, ' """"': 6, '""\n ': 6, '  P': 1, ' Pr': 1, 'Pro': 1, 's d': 1, 'y 0': 4, ' 08': 3, '08 ': 3, '8 d': 1, 'ta.': 2, 'a.\n': 1, '.\n ': 3, '= [': 2, ' []': 1, '[]\n': 1, '  f': 6, ' fo': 11, 'for': 11, 'or ': 11, 'r l': 1, 'lin': 2, 'ine': 2, 'ne ': 1, 'e i': 1, ' in': 15, 'in ': 12, 'n r': 2, ' ra': 2, ' di': 34, 'dig': 32, 'its': 5, 'ts,': 3, 's, ': 3, ', v': 3, ' va': 6, 'val': 6, 'alu': 6, 'lue': 6, 'ue ': 1, 'e =': 1, 'ne.': 1, 'e.s': 2, '.sp': 3, 'spl': 3, 'pli': 3, 'lit': 3, 'it(': 3, 't(""': 1, '(""|': 1, '""|""': 1, '|"")': 1, '"")\n': 1, ')\n ': 5, 'a.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(\n': 1, '(\n ': 2, '  (': 1, ' (\n': 1, '  [': 2, ' [f': 3, '[fr': 3, 'et(': 5, 't(d': 1, '(d)': 3, 'd) ': 1, ') f': 3, 'r d': 3, ' d ': 2, 'd i': 2, 'n d': 3, 'ts.': 1, 's.s': 1, '.st': 2, 'tri': 2, 'rip': 2, 'ip(': 2, 'p()': 2, '().': 2, ').s': 2, 't()': 5, '()]': 2, ')],': 2, '],\n': 2, ',\n ': 2, 't(v': 1, '(v)': 2, 'v) ': 2, 'r v': 3, ' v ': 3, 'v i': 3, 'n v': 3, 'ue.': 1, '  )': 2, ' )\n': 2, '  r': 3, 'ret': 3, 'etu': 3, 'urn': 3, 'rn ': 3, 'f p': 2, ' pa': 4, 'par': 4, 'art': 4, 'rt_': 2, 't_1': 1, '_1(': 1, '1(s': 1, '(se': 2, 'sel': 4, 'elf': 4, 'lf)': 2, 'f) ': 2, '> i': 2, 'int': 4, 'nt:': 2, 't:\n': 2, '  D': 2, ' Da': 2, 'Day': 2, '8 p': 2, 't 1': 1, ' 1 ': 1, '1 s': 1, ' so': 2, 'sol': 2, 'on.': 2, 'n.\n': 2, 'n s': 6, ' su': 9, 'sum': 9, 'um(': 1, 'm(l': 1, '(le': 1, 'len': 16, 'en(': 6, 'n(v': 1, ') i': 1, 'n {': 1, ' {2': 1, '{2,': 1, '2, ': 3, ', 3': 3, ' 3,': 3, '3, ': 3, ', 4': 1, ' 4,': 1, '4, ': 1, ', 7': 1, ' 7}': 1, '7} ': 1, '} f': 1, 'r _': 2, ' _,': 1, '_, ': 1, 'ues': 4, 'es ': 2, ' se': 9, 'lf.': 2, 'f.d': 2, '.da': 2, 'a f': 1, 'es)': 1, 's)\n': 1, ')\n\n': 1, 't_2': 1, '_2(': 1, '2(s': 1, 't 2': 1, ' 2 ': 1, '2 s': 1, '  s': 7, 'um_': 3, 'm_ ': 2, '_ =': 6, '= 0': 3, ' 0\n': 3, '0\n ': 4, 'it_': 27, 't_l': 15, '_li': 15, 'st:': 1, 's] ': 1, '] =': 23, '() ': 1, ' _ ': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(1': 1, '(10': 1, '10)': 1, '0)]': 1, ')]\n': 1, 't_m': 12, '_ma': 16, 'map': 16, 'ap:': 2, 'p: ': 2, ': d': 2, 'dic': 2, 'ict': 2, 'ct[': 2, ', i': 1, 'nt]': 1, 't] ': 1, '= {': 2, ' {}': 1, '{}\n': 1, '}\n ': 2, 'seg': 4, 'eg_': 4, 'g_l': 4, '_le': 4, 'eng': 4, 'ngt': 4, 'gth': 4, 'th_': 4, 'h_m': 4, 't[i': 1, '[in': 1, 'nt,': 1, 't, ': 1, ', s': 1, ']] ': 1, ' {\n': 1, '{\n ': 1, '  5': 1, ' 5:': 2, '5: ': 1, ': s': 2, '(),': 2, '), ': 2, ',  ': 2, '  #': 6, ' # ': 6, '# 2': 1, ' 2,': 2, ', 5': 1, ' 5\n': 3, '5\n ': 6, '  6': 1, ' 6:': 1, '6: ': 1, '# 0': 1, ' 0,': 2, '0, ': 2, ', 6': 2, ' 6,': 2, '6, ': 2, ', 9': 1, ' 9\n': 3, '9\n ': 3, '  }': 1, ' }\n': 1, '# I': 3, ' Id': 3, 'Ide': 3, 'den': 3, 'nti': 3, 'tif': 3, 'ify': 3, 'fy ': 3, 'y t': 1, ' th': 1, 'the': 1, 'he ': 1, 'e e': 1, ' ea': 1, 'eas': 1, 'asy': 1, 'sy ': 1, 'y d': 1, 'ts\n': 1, 's\n ': 1, 'ts:': 1, 's:\n': 2, '  l': 1, ' le': 10, 'en_': 6, 'n_ ': 5, 'n(d': 1, 'd)\n': 2, '  i': 3, ' if': 3, 'f l': 8, ' ==': 8, '== ': 8, '= 2': 3, ' 2:': 2, '2:\n': 2, 't[1': 3, '[1]': 3, '1] ': 1, '= d': 5, ' d\n': 4, 'ap[': 14, 'p[d': 4, '[d]': 4, 'd] ': 4, '= 1': 3, ' 1\n': 1, '1\n ': 1, '  e': 8, ' el': 8, 'eli': 5, 'lif': 5, '= 3': 2, ' 3:': 1, '3:\n': 1, 't[7': 1, '[7]': 1, '7] ': 1, '= 7': 2, ' 7\n': 1, '7\n ': 1, '= 4': 3, ' 4:': 2, '4:\n': 2, 't[4': 2, '[4]': 2, '4] ': 1, ' 4\n': 1, '4\n ': 1, ' 7:': 1, '7:\n': 1, 't[8': 1, '[8]': 1, '8] ': 1, 'els': 3, 'se:': 3, 'e:\n': 3, 'p[l': 1, '[le': 1, 'n_]': 1, '_].': 1, '].a': 1, '.ad': 1, 'add': 1, 'dd(': 1, 'd(d': 1, ', a': 2, 'and': 2, 'nd ': 2, 'd 9': 1, 'r s': 2, ' s6': 4, 's6 ': 3, '6 i': 1, 'p[6': 1, '[6]': 3, '6]:': 1, ']:\n': 2, 'n(s': 4, '(s6': 2, '6 &': 2, ' & ': 4, '& d': 4, '1])': 2, ') =': 4, ' 1:': 1, '1:\n': 1, 't[6': 2, '6] ': 4, '= s': 7, 's6\n': 3, '6\n ': 4, 'p[s': 6, '[s6': 3, 's6]': 3, '= 6': 1, ' 6\n': 1, '4])': 1, 't[9': 1, '[9]': 1, '9] ': 1, '= 9': 1, 't[0': 1, '[0]': 1, '0] ': 1, 'y 2': 1, 'd 5': 1, ' s5': 4, 's5 ': 3, '5 i': 1, 'p[5': 1, '[5]': 2, '5]:': 1, '(s5': 2, '5 &': 2, '6])': 1, '= 5': 2, '5:\n': 1, 't[5': 1, '5] ': 4, 's5\n': 3, '[s5': 3, 's5]': 3, 't[3': 1, '[3]': 1, '3] ': 1, ' 3\n': 1, '3\n ': 1, 't[2': 1, '[2]': 1, '2] ': 1, ' 2\n': 1, '2\n ': 1, 'sub': 4, 'ub_': 4, 'b_s': 4, '_su': 4, 'um ': 3, 'm =': 1, '# C': 1, ' Ca': 1, 'Cal': 1, 'alc': 1, 'lcu': 1, 'cul': 1, 'ula': 1, 'lat': 1, 'ate': 1, 'te ': 1, 'e s': 1, 'um\n': 2, 'm\n ': 2, 'es:': 1, 'm *': 1, ' *=': 1, '*= ': 1, ' 10': 1, '10\n': 1, 'm +': 1, ' +=': 2, '+= ': 2, 'p[v': 1, '[v]': 1, 'v]\n': 1, '_ +': 1}"
Mushinako,solution9.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 8, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 1, 'from': 3, '__future__': 1, 'import': 3, 'annotations': 1, 'typing': 1, 'type_checking': 1, 'utils': 1, 'solutionabstract': 1, 'if': 15, 'type_checking:': 1, '_data': 2, '=': 13, 'list[list[int]]': 1, 'class': 1, 'solution(solutionabstract):': 1, 'day': 4, '9': 1, 'data:': 1, 'def': 4, '__init__(self)': 1, '->': 4, 'none:': 1, 'super().__init__()': 1, 'self.max_i': 3, 'len(self.data)': 1, '-': 8, '1': 7, 'self.max_j': 3, 'len(self.data[0])': 1, '@staticmethod': 1, '_process_data(raw_data:': 1, 'list[str])': 1, '_data:': 1, '""""""': 6, 'process': 1, '09': 3, 'data.': 1, 'return': 3, '[[int(n)': 1, 'for': 10, 'n': 1, 'in': 9, 'line]': 1, 'line': 1, 'raw_data]': 1, 'part_1(self)': 1, 'int:': 2, 'part': 2, 'solution.': 2, 'sum_': 3, '0': 5, 'i,': 2, 'row': 2, 'enumerate(self.data):': 2, 'j,': 2, 'cell': 11, 'enumerate(row):': 2, 'i': 4, '>': 6, 'and': 8, '>=': 8, 'self.data[i': 4, '1][j]:': 4, 'continue': 9, '<': 6, '+': 7, 'j': 4, 'self.data[i][j': 4, '1]:': 4, '+=': 2, 'part_2(self)': 1, '2': 1, 'get': 2, 'the': 3, 'low': 2, 'points': 1, 'low_point_coords:': 2, 'list[tuple[int,': 3, 'int]]': 5, '[]': 3, 'low_point_coords.append((i,': 1, 'j))': 1, 'calculate': 1, 'a': 1, 'basin': 2, 'size': 2, 'each': 1, 'point': 1, 'basin_sizes:': 1, 'list[int]': 1, 'li,': 1, 'lj': 1, 'point_count': 2, 'visited_coords:': 1, 'set[tuple[int,': 2, '{(li,': 1, 'lj)}': 1, 'round_visited_coords:': 3, '[(li,': 1, 'lj)]': 1, 'while': 1, 'expand': 1, 'outwards': 1, 'by': 1, 'this_round_coords:': 2, 'set()': 1, 'vci,': 1, 'vcj': 5, 'vci': 2, '0:': 2, 'this_round_coords.add((vci': 2, '1,': 2, 'vcj))': 2, 'self.max_i:': 1, 'this_round_coords.add((vci,': 2, '1))': 2, 'self.max_j:': 1, 'this_round_coords': 1, '-=': 1, 'visited_coords': 1, 'check': 1, 'we': 1, 'reached': 1, 'edges': 1, 'this_round_visited_coords:': 1, 'rci,': 1, 'rcj': 1, 'self.data[rci][rcj]': 1, '==': 1, '9:': 1, 'visited_coords.add((rci,': 1, 'rcj))': 2, 'this_round_visited_coords.append((rci,': 1, 'prepare': 1, 'next': 1, 'round': 1, 'round_visited_coords': 1, 'this_round_visited_coords': 1, 'finished': 1, 'calculation': 1, 'basin_sizes.append(point_count)': 1, '3': 1, 'largest': 1, 'sizes': 1, 'basin_sizes.sort(reverse=true)': 1, 'basin_sizes[0]': 1, '*': 2, 'basin_sizes[1]': 1, 'basin_sizes[2]': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 1, ': r': 1, ' re': 5, 'rep': 2, 'epo': 1, 'por': 4, 'ort': 5, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 9, 'ing': 2, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 10, '""""\n': 7, '""\n\n': 1, '\n\nf': 3, '\nfr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm _': 1, ' __': 2, '__f': 1, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 4, 'ure': 1, 're_': 1, 'e__': 1, '__ ': 1, '_ i': 1, ' im': 3, 'imp': 3, 'mpo': 3, 'rt ': 5, 't a': 1, ' an': 9, 'ann': 1, 'nno': 1, 'not': 1, 'ota': 1, 'tat': 2, 'ati': 3, 'tio': 7, 'ion': 7, 'ons': 1, 'ns\n': 1, 's\n\n': 1, 'm t': 1, ' ty': 1, 'typ': 1, 'ypi': 1, 'pin': 1, 'ng ': 1, 'g i': 1, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, 'm u': 1, ' ut': 1, 'uti': 6, 'til': 1, 'ils': 1, 'ls ': 1, 's i': 1, 't S': 1, ' So': 2, 'Sol': 3, 'olu': 5, 'lut': 5, 'onA': 2, 'nAb': 2, 'Abs': 2, 'bst': 2, 'str': 3, 'tra': 2, 'rac': 2, 'act': 2, 'ct\n': 1, 't\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 15, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 27, '\n  ': 81, '   ': 910, '  _': 1, ' _D': 3, '_Da': 3, 'Dat': 3, 'ata': 21, 'ta ': 1, 'a =': 1, ' = ': 13, '= l': 3, ' li': 9, 'lis': 7, 'ist': 7, 'st[': 7, 't[l': 1, '[li': 1, 't[i': 2, '[in': 8, 'int': 23, 'nt]': 7, 't]]': 6, ']]\n': 1, ']\n\n': 2, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 2, 's S': 1, 'on(': 1, 'n(S': 1, '(So': 1, 'ct)': 1, 't):': 1, '):\n': 5, '  d': 6, ' da': 4, 'day': 2, 'ay ': 4, 'y =': 1, '= 9': 2, ' 9\n': 1, '9\n ': 1, 'dat': 18, 'ta:': 3, 'a: ': 2, ': _': 1, 'ta\n': 1, 'a\n\n': 1, '\n\n ': 4, ' de': 4, 'def': 4, 'ef ': 4, 'f _': 2, '__i': 2, '_in': 2, 'ini': 3, 'nit': 2, 'it_': 2, 't__': 2, '__(': 2, '_(s': 1, '(se': 7, 'sel': 24, 'elf': 24, 'lf)': 3, 'f) ': 3, ') -': 6, ' ->': 4, '-> ': 4, '> N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne:': 1, 'e:\n': 1, '  s': 5, ' su': 4, 'sup': 1, 'upe': 1, 'per': 1, 'er(': 1, 'r()': 1, '().': 1, ')._': 1, '.__': 1, '_()': 1, '()\n': 2, ')\n ': 11, ' se': 20, 'lf.': 21, 'f.m': 8, '.ma': 8, 'max': 8, 'ax_': 8, 'x_i': 4, '_i ': 3, 'i =': 1, ' le': 2, 'len': 2, 'en(': 2, 'n(s': 2, 'f.d': 13, '.da': 13, 'ta)': 3, 'a) ': 1, ' - ': 8, '- 1': 8, ' 1\n': 6, '1\n ': 5, 'x_j': 4, '_j ': 3, 'j =': 1, 'ta[': 10, 'a[0': 1, '[0]': 2, '0])': 1, ']) ': 2, '1\n\n': 1, '  @': 1, ' @s': 1, '@st': 1, 'sta': 1, 'tic': 1, 'icm': 1, 'cme': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od\n': 1, 'd\n ': 2, ' _p': 1, '_pr': 1, 'pro': 1, 'roc': 2, 'oce': 2, 'ces': 2, 'ess': 2, 'ss_': 1, 's_d': 1, '_da': 3, 'ta(': 1, 'a(r': 1, '(ra': 1, 'raw': 2, 'aw_': 2, 'w_d': 2, ': l': 5, 't[s': 1, '[st': 1, 'tr]': 1, 'r])': 1, '> _': 1, 'a:\n': 1, '  ""': 6, ' """"': 6, '""\n ': 6, '  P': 1, ' Pr': 2, 'Pro': 1, 's d': 1, 'y 0': 3, ' 09': 3, '09 ': 3, '9 d': 1, 'ta.': 1, 'a.\n': 1, '.\n ': 3, '  r': 5, 'ret': 3, 'etu': 3, 'urn': 3, 'rn ': 3, 'n [': 1, ' [[': 1, '[[i': 1, 'nt(': 1, 't(n': 1, '(n)': 1, 'n) ': 1, ') f': 1, ' fo': 10, 'for': 10, 'or ': 10, 'r n': 1, ' n ': 1, 'n i': 1, ' in': 16, 'in ': 11, 'n l': 2, 'lin': 2, 'ine': 2, 'ne]': 1, 'e] ': 1, '] f': 1, 'r l': 2, 'ne ': 1, 'e i': 1, 'n r': 2, ' ra': 1, 'ta]': 1, 'a]\n': 1, 'f p': 2, ' pa': 4, 'par': 5, 'art': 4, 'rt_': 2, 't_1': 1, '_1(': 1, '1(s': 1, '> i': 2, 'nt:': 2, 't:\n': 2, '  D': 2, ' Da': 2, 'Day': 2, '9 p': 2, 't 1': 1, ' 1 ': 1, '1 s': 1, ' so': 2, 'sol': 2, 'on.': 2, 'n.\n': 2, 'sum': 3, 'um_': 3, 'm_ ': 2, '_ =': 1, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  f': 7, 'r i': 2, ' i,': 2, 'i, ': 12, ', r': 5, ' ro': 7, 'row': 4, 'ow ': 4, 'w i': 2, 'n e': 4, ' en': 4, 'enu': 4, 'num': 4, 'ume': 4, 'mer': 4, 'era': 4, 'rat': 4, 'ate': 5, 'te(': 4, 'e(s': 2, 'a):': 2, 'r j': 2, ' j,': 2, 'j, ': 2, ', c': 2, ' ce': 11, 'cel': 11, 'ell': 11, 'll ': 11, 'l i': 2, 'e(r': 2, '(ro': 2, 'ow)': 2, 'w):': 2, '  i': 13, ' if': 14, 'f i': 4, ' i ': 4, 'i >': 3, ' > ': 6, '> 0': 6, ' 0 ': 4, '0 a': 4, 'and': 9, 'nd ': 9, 'd c': 8, 'l >': 8, ' >=': 8, '>= ': 8, '= s': 9, 'a[i': 8, '[i ': 4, 'i -': 3, ' 1]': 8, '1][': 4, '][j': 8, '[j]': 4, 'j]:': 4, ']:\n': 8, '  c': 9, ' co': 9, 'con': 9, 'ont': 9, 'nti': 9, 'tin': 9, 'inu': 9, 'nue': 9, 'ue\n': 9, 'e\n ': 9, 'i <': 3, ' < ': 6, '< s': 6, 'i a': 2, 'i +': 3, ' + ': 7, '+ 1': 7, 'f j': 4, ' j ': 4, 'j >': 3, '[i]': 4, 'i][': 5, '[j ': 4, 'j -': 3, '1]:': 4, 'j <': 3, 'j a': 2, 'j +': 3, '_ +': 1, ' +=': 2, '+= ': 2, '= c': 1, 'l +': 1, 'n s': 3, 'm_\n': 1, '_\n\n': 1, 't_2': 1, '_2(': 1, '2(s': 1, 't 2': 1, ' 2 ': 1, '2 s': 1, '  #': 7, ' # ': 7, '# G': 2, ' Ge': 2, 'Get': 2, 'et ': 2, 't t': 2, ' th': 13, 'the': 3, 'he ': 3, 'e l': 1, ' lo': 5, 'low': 5, 'w p': 2, ' po': 4, 'poi': 8, 'oin': 8, 'nts': 1, 'ts\n': 1, 's\n ': 5, '  l': 2, 'ow_': 3, 'w_p': 3, '_po': 3, 'nt_': 6, 't_c': 6, '_co': 23, 'coo': 20, 'oor': 20, 'ord': 20, 'rds': 21, 'ds:': 9, 's: ': 6, 't[t': 5, '[tu': 5, 'tup': 5, 'upl': 5, 'ple': 5, 'le[': 5, 'e[i': 5, 'nt,': 5, 't, ': 5, ', i': 5, ']] ': 5, '] =': 7, '= [': 4, ' []': 3, '[]\n': 3, ']\n ': 4, 'ds.': 7, 's.a': 8, '.ap': 3, 'app': 3, 'ppe': 3, 'pen': 3, 'end': 3, 'nd(': 3, 'd((': 7, '((i': 1, '(i,': 1, ', j': 1, ' j)': 1, 'j))': 5, '))\n': 7, '# C': 2, ' Ca': 1, 'Cal': 1, 'alc': 2, 'lcu': 2, 'cul': 2, 'ula': 2, 'lat': 2, 'te ': 1, 'e a': 1, ' a ': 1, 'a b': 1, ' ba': 8, 'bas': 8, 'asi': 8, ' si': 3, 'siz': 9, 'ize': 9, 'ze ': 2, 'e f': 1, 'r e': 1, ' ea': 1, 'eac': 2, 'ach': 2, 'ch ': 1, 'h l': 1, 'nt\n': 1, 't\n ': 1, '  b': 3, 'in_': 6, 'n_s': 6, '_si': 6, 'zes': 7, 'es:': 1, 't] ': 1, 'li,': 3, ', l': 3, ' lj': 3, 'lj ': 1, 'j i': 3, 's:\n': 4, '  p': 2, 'cou': 3, 'oun': 18, 'unt': 3, 'nt ': 2, 't =': 1, '= 1': 2, '  v': 2, ' vi': 3, 'vis': 10, 'isi': 10, 'sit': 10, 'ite': 10, 'ted': 10, 'ed_': 10, 'd_c': 17, ': s': 2, 'set': 3, 'et[': 2, '= {': 1, ' {(': 1, '{(l': 1, '(li': 2, 'lj)': 2, 'j)}': 1, ')}\n': 1, '}\n ': 1, 'rou': 15, 'und': 15, 'nd_': 14, 'd_v': 7, '_vi': 7, ' [(': 1, '[(l': 1, 'j)]': 1, ')]\n': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e r': 2, '# E': 1, ' Ex': 1, 'Exp': 1, 'xpa': 1, 'pan': 1, 'd o': 1, ' ou': 1, 'out': 1, 'utw': 1, 'twa': 1, 'war': 1, 'ard': 1, 'ds ': 3, 's b': 1, ' by': 1, 'by ': 1, 'y 1': 1, '  t': 8, 'thi': 10, 'his': 10, 'is_': 10, 's_r': 10, '_ro': 10, 'et(': 1, 't()': 1, 'r v': 1, ' vc': 10, 'vci': 7, 'ci,': 6, ', v': 5, 'vcj': 7, 'cj ': 6, 'f v': 4, 'ci ': 4, ' 0:': 2, '0:\n': 2, '.ad': 5, 'add': 5, 'dd(': 5, '((v': 4, '(vc': 4, ' 1,': 2, '1, ': 2, 'cj)': 4, '_i:': 1, 'i:\n': 1, ' 1)': 2, '1))': 2, '_j:': 1, 'j:\n': 1, 's -': 1, ' -=': 1, '-= ': 1, '= v': 1, 'ds\n': 2, ' Ch': 1, 'Che': 1, 'hec': 1, 'eck': 1, 'ck ': 1, 'k i': 1, 'f w': 1, ' we': 1, 'we ': 1, 'rea': 1, 'che': 1, 'hed': 2, 'ed ': 2, 'd t': 1, 'e e': 1, ' ed': 1, 'edg': 1, 'dge': 1, 'ges': 2, 'es\n': 2, 'r r': 1, ' rc': 4, 'rci': 4, 'rcj': 4, 'n t': 1, 'f s': 1, 'a[r': 1, '[rc': 2, 'ci]': 1, '][r': 1, 'cj]': 1, 'j] ': 1, ' ==': 1, '== ': 1, ' 9:': 1, '9:\n': 1, 't +': 1, '((r': 2, '(rc': 2, '# P': 1, 'Pre': 1, 'epa': 1, 'are': 1, 're ': 1, 'e n': 1, ' ne': 1, 'nex': 1, 'ext': 1, 'xt ': 1, 't r': 1, 'nd\n': 1, 's =': 1, '= t': 1, '# F': 1, ' Fi': 1, 'Fin': 1, 'nis': 1, 'ish': 1, 'she': 1, 'd b': 1, 'e c': 1, ' ca': 1, 'cal': 1, 'on\n': 1, 'n\n ': 1, 'es.': 2, 'd(p': 1, '(po': 1, 'nt)': 1, 't)\n': 1, 'e 3': 1, ' 3 ': 1, '3 l': 1, ' la': 1, 'lar': 1, 'arg': 1, 'rge': 1, 'est': 1, 'st ': 1, 't s': 1, 's.s': 1, '.so': 1, 'sor': 1, 'rt(': 1, 't(r': 1, '(re': 1, 'rev': 1, 'eve': 1, 'ver': 1, 'ers': 1, 'rse': 1, 'se=': 1, 'e=T': 1, '=Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e)\n': 1, 'n b': 1, 'es[': 3, 's[0': 1, '0] ': 1, '] *': 2, ' * ': 2, '* b': 2, 's[1': 1, '[1]': 1, '1] ': 1, 's[2': 1, '[2]': 1}"
Mushinako,utils.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'pyright:': 1, 'reportmissingtypestubs=false': 1, '""""""""""""': 1, 'from': 5, '__future__': 1, 'import': 5, 'annotations': 1, 'abc': 1, 'abc,': 1, 'abstractmethod': 1, 'pathlib': 1, 'path': 4, 'typing': 2, 'type_checking': 1, 'if': 3, 'type_checking:': 1, 'any,': 1, 'classvar': 1, 'class': 1, 'solutionabstract(abc):': 1, 'day:': 1, 'classvar[int]': 1, '=': 4, '0': 1, 'def': 6, '__init__(self)': 1, '->': 6, 'none:': 1, 'raw_data': 1, 'self._get_raw_data()': 1, 'self.data': 1, 'self._process_data(raw_data)': 1, '_get_raw_data(self)': 1, 'list[str]:': 1, 'get_input_path(self.day)': 1, 'with': 1, 'path.open(""r"")': 1, 'as': 1, 'f:': 1, 'return': 2, '[d': 1, 'for': 1, 'line': 1, 'in': 2, 'f.readlines()': 1, '(d': 1, ':=': 1, 'line.strip())]': 1, '@staticmethod': 1, '@abstractmethod': 3, '_process_data(raw_data:': 1, 'list[str])': 1, 'any:': 3, '""""""': 8, 'process': 1, 'input': 3, 'data.': 1, 'raise': 4, 'notimplementederror()': 3, 'part_1(self)': 1, 'part': 2, '1': 1, 'solution.': 2, 'part_2(self)': 1, '2': 1, 'get_input_path(day:': 1, 'int)': 1, 'path:': 1, 'get': 1, 'the': 5, 'of': 3, 'file': 2, 'data': 2, 'is': 1, 'downloaded': 1, 'into.': 1, 'args:': 1, 'day': 4, '(1..25):': 1, 'aoc': 1, 'returns:': 1, '(pathlib.path):': 1, 'not': 1, 'range(1,': 1, '26):': 1, 'valueerror(f""invalid': 1, 'number': 1, '{day}."")': 1, 'path(__file__).resolve().parent': 1, '/': 2, 'f""day_{day:>02}""': 1, '""input.txt""': 1}","{'# p': 1, ' py': 1, 'pyr': 1, 'yri': 1, 'rig': 1, 'igh': 1, 'ght': 1, 'ht:': 1, 't: ': 1, ': r': 1, ' re': 3, 'rep': 1, 'epo': 1, 'por': 6, 'ort': 6, 'rtM': 1, 'tMi': 1, 'Mis': 1, 'iss': 1, 'ssi': 1, 'sin': 1, 'ing': 3, 'ngT': 1, 'gTy': 1, 'Typ': 1, 'ype': 1, 'peS': 1, 'eSt': 1, 'Stu': 1, 'tub': 1, 'ubs': 1, 'bs=': 1, 's=f': 1, '=fa': 1, 'fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'e\n""': 1, '\n""""': 1, '""""""': 12, '""""\n': 9, '""\n\n': 1, '\n\nf': 2, '\nfr': 4, 'fro': 5, 'rom': 5, 'om ': 5, 'm _': 1, ' __': 2, '__f': 2, '_fu': 1, 'fut': 1, 'utu': 1, 'tur': 4, 'ure': 1, 're_': 1, 'e__': 2, '__ ': 1, '_ i': 1, ' im': 5, 'imp': 5, 'mpo': 5, 'rt ': 7, 't a': 1, ' an': 1, 'ann': 1, 'nno': 1, 'not': 2, 'ota': 1, 'tat': 2, 'ati': 2, 'tio': 4, 'ion': 4, 'ons': 1, 'ns\n': 1, 's\n\n': 1, 'm a': 1, ' ab': 2, 'abc': 1, 'bc ': 1, 'c i': 1, 't A': 2, ' AB': 1, 'ABC': 2, 'BC,': 1, 'C, ': 1, ', a': 1, 'abs': 4, 'bst': 5, 'str': 8, 'tra': 5, 'rac': 5, 'act': 5, 'ctm': 4, 'tme': 4, 'met': 5, 'eth': 5, 'tho': 5, 'hod': 5, 'od\n': 5, 'd\nf': 1, 'm p': 1, ' pa': 6, 'pat': 7, 'ath': 12, 'thl': 2, 'hli': 2, 'lib': 2, 'ib ': 1, 'b i': 1, 't P': 1, ' Pa': 6, 'Pat': 5, 'th\n': 1, 'h\nf': 1, 'm t': 2, ' ty': 2, 'typ': 2, 'ypi': 2, 'pin': 2, 'ng ': 2, 'g i': 2, 't T': 1, ' TY': 2, 'TYP': 2, 'YPE': 2, 'PE_': 2, 'E_C': 2, '_CH': 2, 'CHE': 2, 'HEC': 2, 'ECK': 2, 'CKI': 2, 'KIN': 2, 'ING': 2, 'NG\n': 1, 'G\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 3, 'f T': 1, 'NG:': 1, 'G:\n': 1, ':\n ': 12, '\n  ': 38, '   ': 160, '  f': 1, ' fr': 1, ' An': 4, 'Any': 4, 'ny,': 1, 'y, ': 1, ', C': 1, ' Cl': 2, 'Cla': 2, 'las': 3, 'ass': 3, 'ssV': 2, 'sVa': 2, 'Var': 2, 'ar\n': 1, 'r\n\n': 1, '\n\n\n': 2, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'ss ': 2, 's S': 1, ' So': 1, 'Sol': 1, 'olu': 3, 'lut': 3, 'uti': 3, 'onA': 1, 'nAb': 1, 'Abs': 1, 'ct(': 1, 't(A': 1, '(AB': 1, 'BC)': 1, 'C):': 1, '):\n': 2, '  d': 7, ' da': 8, 'day': 10, 'ay:': 3, 'y: ': 2, ': C': 1, 'ar[': 1, 'r[i': 1, '[in': 1, 'int': 3, 'nt]': 1, 't] ': 1, '] =': 1, ' = ': 4, '= 0': 1, ' 0\n': 1, '0\n\n': 1, '\n\n ': 7, ' de': 5, 'def': 6, 'ef ': 6, 'f _': 3, '__i': 1, '_in': 3, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 5, 'sel': 8, 'elf': 8, 'lf)': 4, 'f) ': 4, ') -': 6, ' ->': 6, '-> ': 6, '> N': 1, ' No': 4, 'Non': 1, 'one': 1, 'ne:': 1, 'e:\n': 1, '  r': 7, ' ra': 6, 'raw': 5, 'aw_': 5, 'w_d': 5, '_da': 7, 'dat': 11, 'ata': 11, 'ta ': 4, 'a =': 2, '= s': 2, ' se': 3, 'lf.': 4, 'f._': 2, '._g': 1, '_ge': 2, 'get': 4, 'et_': 4, 't_r': 2, '_ra': 2, 'ta(': 4, 'a()': 1, '()\n': 4, ')\n ': 3, '  s': 1, 'f.d': 2, '.da': 2, '._p': 1, '_pr': 2, 'pro': 2, 'roc': 3, 'oce': 3, 'ces': 3, 'ess': 3, 'ss_': 2, 's_d': 2, 'a(r': 2, '(ra': 2, 'ta)': 1, 'a)\n': 1, ')\n\n': 4, ' _g': 1, 'a(s': 1, '> l': 1, ' li': 4, 'lis': 2, 'ist': 2, 'st[': 2, 't[s': 2, '[st': 2, 'tr]': 2, 'r]:': 1, ']:\n': 1, '  p': 1, 'th ': 4, 'h =': 1, '= g': 1, ' ge': 2, 't_i': 2, 'inp': 6, 'npu': 6, 'put': 6, 'ut_': 2, 't_p': 2, '_pa': 2, 'th(': 3, 'h(s': 1, 'ay)': 1, 'y)\n': 1, '  w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'h p': 1, 'th.': 1, 'h.o': 1, '.op': 1, 'ope': 1, 'pen': 1, 'en(': 1, 'n(""': 1, '(""r': 1, '""r""': 1, 'r"")': 1, '"") ': 1, ') a': 1, ' as': 1, 'as ': 1, 's f': 1, ' f:': 1, 'f:\n': 1, 'ret': 2, 'etu': 3, 'urn': 3, 'rn ': 2, 'n [': 1, ' [d': 1, '[d ': 1, 'd f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r l': 1, 'lin': 3, 'ine': 3, 'ne ': 1, 'e i': 3, ' in': 7, 'in ': 2, 'n f': 1, ' f.': 1, 'f.r': 1, '.re': 2, 'rea': 1, 'ead': 1, 'adl': 1, 'dli': 1, 'nes': 1, 'es(': 1, 's()': 1, '() ': 1, ') i': 1, ' if': 2, 'f (': 1, ' (d': 1, '(d ': 1, 'd :': 1, ' :=': 1, ':= ': 1, '= l': 1, 'ne.': 1, 'e.s': 1, '.st': 1, 'tri': 1, 'rip': 1, 'ip(': 1, 'p()': 1, '())': 1, '))]': 1, ')]\n': 1, ']\n\n': 1, '  @': 4, ' @s': 1, '@st': 1, 'sta': 1, 'tic': 1, 'icm': 1, 'cme': 1, 'd\n ': 4, ' @a': 3, '@ab': 3, ' _p': 1, 'ta:': 1, 'a: ': 1, ': l': 1, 'r])': 1, ']) ': 1, '> A': 3, 'ny:': 3, 'y:\n': 3, '  ""': 8, ' """"': 8, '""\n ': 8, '  P': 3, ' Pr': 1, 'Pro': 1, 's i': 1, 'ut ': 3, 't d': 3, 'ta.': 1, 'a.\n': 1, '.\n ': 3, 'rai': 4, 'ais': 4, 'ise': 4, 'se ': 4, 'e N': 3, 'Not': 3, 'otI': 3, 'tIm': 3, 'Imp': 3, 'mpl': 3, 'ple': 3, 'lem': 3, 'eme': 3, 'men': 3, 'ent': 4, 'nte': 3, 'ted': 3, 'edE': 3, 'dEr': 3, 'Err': 4, 'rro': 4, 'ror': 4, 'or(': 4, 'r()': 3, 'f p': 2, 'par': 3, 'art': 4, 'rt_': 2, 't_1': 1, '_1(': 1, '1(s': 1, 'Par': 2, 't 1': 1, ' 1 ': 1, '1 s': 1, ' so': 2, 'sol': 3, 'on.': 2, 'n.\n': 2, 't_2': 1, '_2(': 1, '2(s': 1, 't 2': 1, ' 2 ': 1, '2 s': 1, '\n\nd': 1, '\nde': 1, 'f g': 1, 'h(d': 1, '(da': 1, ': i': 1, 'nt)': 1, 't) ': 1, '> P': 1, 'th:': 1, 'h:\n': 1, '  G': 1, ' Ge': 1, 'Get': 1, 'et ': 1, 't t': 1, ' th': 4, 'the': 4, 'he ': 5, 'e p': 1, 'h o': 2, ' of': 3, 'of ': 3, 'f t': 2, 'e f': 1, ' fi': 2, 'fil': 3, 'ile': 3, 'le ': 1, 'e t': 1, 'a i': 1, ' is': 1, 'is ': 1, 's d': 1, ' do': 1, 'dow': 1, 'own': 1, 'wnl': 1, 'nlo': 1, 'loa': 1, 'oad': 1, 'ade': 1, 'ded': 1, 'ed ': 1, 'd i': 1, 'nto': 1, 'to.': 1, 'o.\n': 1, '.\n\n': 1, '  A': 1, ' Ar': 1, 'Arg': 1, 'rgs': 1, 'gs:': 1, 's:\n': 2, 'ay ': 4, 'y (': 1, ' (1': 1, '(1.': 1, '1..': 1, '..2': 1, '.25': 1, '25)': 1, '5):': 1, '): ': 2, ': T': 1, ' Th': 1, 'The': 1, 'e d': 1, 'y o': 1, 'f A': 1, ' AO': 1, 'AOC': 1, 'OC\n': 1, 'C\n\n': 1, '  R': 1, ' Re': 1, 'Ret': 1, 'rns': 1, 'ns:': 1, '  (': 1, ' (p': 1, '(pa': 1, 'ib.': 1, 'b.P': 1, '.Pa': 1, 'th)': 1, 'h):': 1, ': P': 1, 'a f': 1, 'le\n': 1, 'e\n ': 1, '  i': 1, 'f d': 1, 'y n': 2, ' no': 1, 'ot ': 1, 't i': 1, 'n r': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(1': 1, '(1,': 1, '1, ': 1, ', 2': 1, ' 26': 1, '26)': 1, '6):': 1, 'e V': 1, ' Va': 1, 'Val': 1, 'alu': 1, 'lue': 1, 'ueE': 1, 'eEr': 1, 'r(f': 1, '(f""': 1, 'f""I': 1, '""In': 1, 'Inv': 1, 'nva': 1, 'val': 1, 'ali': 1, 'lid': 1, 'id ': 1, 'd d': 1, ' nu': 1, 'num': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'er ': 1, 'r {': 1, ' {d': 1, '{da': 2, 'ay}': 1, 'y}.': 1, '}.""': 1, '."")': 1, '"")\n': 1, 'n P': 1, 'h(_': 1, '(__': 1, '_fi': 1, 'le_': 1, '__)': 1, '_).': 1, ').r': 1, 'res': 1, 'eso': 1, 'olv': 1, 'lve': 1, 've(': 1, 'e()': 1, '().': 1, ').p': 1, '.pa': 1, 'are': 1, 'ren': 1, 'nt ': 1, 't /': 1, ' / ': 2, '/ f': 1, ' f""': 1, 'f""d': 1, '""da': 1, 'ay_': 1, 'y_{': 1, '_{d': 1, 'y:>': 1, ':>0': 1, '>02': 1, '02}': 1, '2}""': 1, '}"" ': 1, '"" /': 1, '/ ""': 1, ' ""i': 1, '""in': 1, 'ut.': 1, 't.t': 1, '.tx': 1, 'txt': 1, 'xt""': 1}"
Nikhil Mahajan,append-sort.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'codejam': 1, '2021,': 1, 'round': 1, '1a:': 1, 'append': 1, 'sort': 1, 'def': 1, 'append_sort(n,': 2, 'l):': 1, 'cost': 4, '=': 8, '0': 2, 'for': 2, 'i': 1, 'in': 2, 'range(1,': 2, 'n):': 1, 'if': 1, 'l[i-1]': 1, '>=': 2, 'l[i]:': 1, 'a,': 1, 'b': 3, 'l[i-1],': 1, 'l[i]': 2, 'n': 4, 'while': 1, 'a': 1, '+': 2, '(10**n': 1, '-': 1, '1):': 2, '+=': 2, '1': 1, '*=': 1, '10': 1, 'max(b,': 1, 'a+1)': 1, 'return': 1, 'i/o': 1, 'code': 1, 'num_cases': 2, 'int(input())': 1, 'case': 1, 'int(input().strip())': 1, 'l': 1, 'list(map(int,': 1, 'input().split()))': 1, 'l)': 1, ""print('case"": 1, '#{}:': 1, ""{}'.format(case,"": 1, 'cost))': 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '021': 1, '21,': 1, '1, ': 3, ', R': 1, ' Ro': 1, 'Rou': 1, 'oun': 1, 'und': 1, 'nd ': 2, 'd 1': 1, ' 1A': 1, '1A:': 1, 'A: ': 1, ': A': 1, ' Ap': 1, 'App': 1, 'ppe': 3, 'pen': 3, 'end': 3, 'd S': 1, ' So': 1, 'Sor': 1, 'ort': 3, 'rt\n': 1, 't\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f a': 1, ' ap': 2, 'app': 2, 'nd_': 2, 'd_s': 2, '_so': 2, 'sor': 2, 'rt(': 2, 't(N': 2, '(N,': 2, 'N, ': 2, ', L': 3, ' L)': 2, 'L):': 1, '):\n': 4, ':\n ': 5, '\n  ': 15, '   ': 98, '  c': 3, ' co': 5, 'cos': 5, 'ost': 5, 'st ': 3, 't =': 2, ' = ': 8, '= 0': 2, ' 0\n': 2, '0\n\n': 2, '\n\n ': 4, '  f': 1, ' fo': 1, 'for': 3, 'or ': 2, 'r i': 1, ' i ': 1, 'i i': 1, ' in': 5, 'in ': 2, 'n r': 2, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(1': 2, '(1,': 2, ', N': 1, ' N)': 1, 'N):': 1, '  i': 1, ' if': 1, 'if ': 1, 'f L': 1, ' L[': 5, 'L[i': 5, '[i-': 2, 'i-1': 2, '-1]': 2, '1] ': 1, '] >': 1, ' >=': 2, '>= ': 2, '= L': 2, '[i]': 3, 'i]:': 1, ']:\n': 1, '  a': 1, ' a,': 1, 'a, ': 1, ', b': 1, ' b ': 3, 'b =': 1, '1],': 1, '], ': 1, 'i]\n': 1, ']\n\n': 1, '  n': 2, ' n ': 2, 'n =': 1, '0\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e a': 1, ' a ': 1, 'a >': 1, '= b': 1, 'b +': 1, ' + ': 2, '+ (': 1, ' (1': 1, '(10': 1, '10*': 1, '0**': 1, '**n': 1, '*n ': 1, 'n -': 1, ' - ': 1, '- 1': 1, ' 1)': 2, '1):': 2, 'n +': 1, ' +=': 2, '+= ': 2, '= 1': 2, ' 1\n': 1, '1\n ': 1, '  b': 1, 'b *': 1, ' *=': 1, '*= ': 1, ' 10': 1, '10\n': 1, '  L': 2, 'i] ': 1, '] =': 1, '= m': 1, ' ma': 1, 'max': 1, 'ax(': 1, 'x(b': 1, '(b,': 1, 'b, ': 1, ', a': 1, ' a+': 1, 'a+1': 1, '+1)': 1, '1)\n': 1, ')\n ': 4, 't +': 1, '= n': 1, ' n\n': 1, 'n\n\n': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n c': 1, 'st\n': 1, '\n\n\n': 1, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'num': 2, 'um_': 2, 'm_c': 2, '_ca': 2, 'cas': 4, 'ase': 5, 'ses': 2, 'es ': 2, 's =': 1, '= i': 2, 'int': 4, 'nt(': 3, 't(i': 2, '(in': 3, 'inp': 3, 'npu': 3, 'put': 3, 'ut(': 3, 't()': 4, '())': 3, '))\n': 3, ')\n\n': 1, '\n\nf': 1, '\nfo': 1, 'r c': 1, ' ca': 1, 'se ': 2, 'e i': 1, ', n': 1, ' nu': 1, 's +': 1, '+ 1': 1, '  N': 1, ' N ': 1, 'N =': 1, '().': 2, ').s': 2, '.st': 1, 'str': 1, 'tri': 1, 'rip': 1, 'ip(': 1, 'p()': 1, ' L ': 1, 'L =': 1, '= l': 1, ' li': 1, 'lis': 1, 'ist': 1, 'st(': 1, 't(m': 1, '(ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, 't, ': 1, ', i': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, ')))': 1, '= a': 1, 'L)\n': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, ""t('"": 1, ""('C"": 1, ""'Ca"": 1, 'Cas': 1, 'e #': 1, ' #{': 1, '#{}': 1, '{}:': 1, '}: ': 1, ': {': 1, ' {}': 1, ""{}'"": 1, ""}'."": 1, ""'.f"": 1, '.fo': 1, 'orm': 1, 'rma': 1, 'mat': 1, 'at(': 1, 't(c': 1, '(ca': 1, 'se,': 1, 'e, ': 1, ', c': 1, 'st)': 1, 't))': 1}"
Nikhil Mahajan,blindfolded-bullseye.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'codejam': 1, '2020,': 1, 'round': 1, '1b:': 1, 'blindfolded': 1, 'bullseye': 1, 'import': 2, 'sys': 1, 'from': 1, 'random': 1, 'randint': 1, 'class': 1, 'case:': 1, 'def': 5, '__init__(self):': 1, 'self.queries_left': 2, '=': 23, '300': 1, 'query(self,': 1, 'x,': 3, 'y):': 1, '-=': 1, '1': 4, 'print(""{}': 1, '{}"".format(x,': 1, 'y),': 1, 'flush=true)': 1, 'response': 3, 'input()': 1, 'if': 9, '==': 7, ""'wrong':"": 1, 'sys.exit()': 3, 'return': 10, 'binary_search_left(self,': 1, 'right,': 1, 'func):': 2, 'left': 6, '-10**9': 1, 'while': 3, '<': 2, 'right:': 2, 'm': 6, '(left': 2, '+': 7, 'right)': 2, '//': 4, '2': 2, 'f': 6, 'func(m)': 2, ""'hit':"": 2, 'right': 4, 'elif': 2, ""'miss':"": 3, 'else:': 2, 'none': 2, 'binary_search_right(self,': 1, 'left,': 1, '10**9': 1, '-': 1, 'solve(self):': 1, 'y': 2, '0,': 1, '0': 1, 'r': 6, 'self.query(x,': 6, 'y)': 2, 'randint(-10**9,': 2, '10**9),': 1, '10**9)': 1, ""'center':"": 2, 'x_low': 2, 'self.binary_search_left(x,': 1, 'lambda': 4, 'x:': 2, 'y))': 4, 'is': 4, 'none:': 4, 'x_high': 2, 'self.binary_search_right(x,': 1, 'y_low': 2, 'self.binary_search_left(y,': 1, 'y:': 2, 'y_high': 2, 'self.binary_search_right(y,': 1, 'self.query((x_low': 1, 'x_high)': 1, '2,': 1, '(y_low': 1, 'y_high)': 1, '2)': 1, '!=': 1, 'i/o': 1, 'code': 1, 'num_cases,': 1, 'a,': 1, 'b': 1, 'map(int,': 1, 'input().split())': 1, 'for': 1, '_': 1, 'in': 1, 'range(1,': 1, 'num_cases': 1, '1):': 1, 'case': 1, 'case()': 1, 'case.solve()': 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '020': 1, '20,': 1, '0, ': 2, ', R': 1, ' Ro': 1, 'Rou': 1, 'oun': 1, 'und': 1, 'nd ': 1, 'd 1': 1, ' 1B': 1, '1B:': 1, 'B: ': 1, ': B': 1, ' Bl': 1, 'Bli': 1, 'lin': 1, 'ind': 1, 'ndf': 1, 'dfo': 1, 'fol': 1, 'old': 1, 'lde': 1, 'ded': 1, 'ed ': 1, 'd B': 1, ' Bu': 1, 'Bul': 1, 'ull': 1, 'lls': 1, 'lse': 3, 'sey': 1, 'eye': 1, 'ye\n': 1, 'e\n\n': 2, '\n\ni': 1, '\nim': 1, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't s': 1, ' sy': 3, 'sys': 4, 'ys\n': 1, 's\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 2, 'm r': 1, ' ra': 5, 'ran': 5, 'and': 4, 'ndo': 1, 'dom': 1, 'm i': 1, ' im': 1, 't r': 1, 'ndi': 3, 'din': 3, 'int': 5, 'nt\n': 1, 't\n\n': 2, '\n\n\n': 2, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's C': 1, ' Ca': 2, 'Cas': 2, 'ase': 6, 'se:': 3, 'e:\n': 7, ':\n ': 23, '\n  ': 58, '   ': 444, '  d': 5, ' de': 5, 'def': 5, 'ef ': 5, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 5, 'sel': 18, 'elf': 18, 'lf)': 2, 'f):': 2, '):\n': 6, '  s': 4, ' se': 13, 'lf.': 13, 'f.q': 9, '.qu': 9, 'que': 10, 'uer': 10, 'eri': 2, 'rie': 2, 'ies': 2, 'es_': 2, 's_l': 2, '_le': 5, 'lef': 14, 'eft': 14, 'ft ': 9, 't =': 7, ' = ': 23, '= 3': 1, ' 30': 1, '300': 1, '00\n': 1, '0\n\n': 1, '\n\n ': 10, 'f q': 1, ' qu': 1, 'ery': 8, 'ry(': 8, 'y(s': 1, 'lf,': 3, 'f, ': 3, ', X': 1, ' X,': 1, 'X, ': 2, ', Y': 2, ' Y)': 2, 'Y):': 1, 't -': 2, ' -=': 1, '-= ': 1, '= 1': 2, ' 1\n': 4, '1\n ': 3, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 'nt(': 3, 't(""': 1, '(""{': 1, '""{}': 1, '{} ': 1, '} {': 1, ' {}': 1, '{}""': 1, '}"".': 1, '"".f': 1, '.fo': 1, 'for': 2, 'orm': 1, 'rma': 1, 'mat': 1, 'at(': 1, 't(X': 1, '(X,': 1, 'Y),': 1, '), ': 2, ', f': 3, ' fl': 1, 'flu': 1, 'lus': 1, 'ush': 1, 'sh=': 1, 'h=T': 1, '=Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e)\n': 1, ')\n ': 13, '  r': 17, ' re': 13, 'res': 3, 'esp': 3, 'spo': 3, 'pon': 3, 'ons': 3, 'nse': 3, 'se ': 3, 'e =': 3, '= i': 1, ' in': 3, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 6, '()\n': 5, '  i': 9, ' if': 9, 'if ': 11, 'f r': 3, ' ==': 7, '== ': 7, ""= '"": 8, "" 'W"": 1, ""'WR"": 1, 'WRO': 1, 'RON': 1, 'ONG': 1, ""NG'"": 1, ""G':"": 1, ""':\n"": 8, 'ys.': 3, 's.e': 3, '.ex': 3, 'exi': 3, 'xit': 3, 'it(': 4, 'ret': 10, 'etu': 10, 'tur': 10, 'urn': 10, 'rn ': 5, 'n r': 3, 'se\n': 1, 'f b': 2, ' bi': 2, 'bin': 6, 'ina': 6, 'nar': 6, 'ary': 6, 'ry_': 6, 'y_s': 6, '_se': 6, 'sea': 6, 'ear': 6, 'arc': 6, 'rch': 6, 'ch_': 6, 'h_l': 3, 'ft(': 3, 't(s': 2, ', r': 2, ' ri': 9, 'rig': 12, 'igh': 18, 'ght': 12, 'ht,': 1, 't, ': 3, ' fu': 4, 'fun': 4, 'unc': 4, 'nc)': 2, 'c):': 2, '  l': 3, ' le': 7, '= -': 1, ' -1': 1, '-10': 3, '10*': 6, '0**': 6, '**9': 6, '*9\n': 2, '9\n ': 2, '  w': 3, ' wh': 3, 'whi': 3, 'hil': 3, 'ile': 3, 'le ': 3, 'e l': 2, 't <': 2, ' < ': 2, '< r': 2, 'ht:': 2, 't:\n': 2, '  m': 2, ' m ': 4, 'm =': 2, '= (': 2, ' (l': 2, '(le': 2, 't +': 2, ' + ': 7, '+ r': 2, 'ht)': 2, 't) ': 2, ') /': 4, ' //': 4, '// ': 4, '/ 2': 4, ' 2\n': 2, '2\n ': 2, '  f': 2, ' f ': 6, 'f =': 6, '= f': 2, 'nc(': 2, 'c(m': 2, '(m)': 2, 'm)\n': 2, 'f f': 4, "" 'H"": 2, ""'HI"": 2, 'HIT': 2, ""IT'"": 2, ""T':"": 2, 'ht ': 4, '= m': 5, ' m\n': 2, 'm\n ': 2, '  e': 4, ' el': 4, 'eli': 2, 'lif': 2, "" 'M"": 3, ""'MI"": 3, 'MIS': 3, 'ISS': 3, ""SS'"": 3, ""S':"": 3, 'm +': 2, '+ 1': 3, 'els': 2, 'n N': 2, ' No': 6, 'Non': 6, 'one': 6, 'ne\n': 2, 'e\n ': 2, 'n l': 1, 'ft\n': 1, 'h_r': 3, '_ri': 3, 'ht(': 3, ', l': 5, 'ft,': 1, ' 10': 3, ' - ': 1, '- 1': 1, '1\n\n': 1, 'f s': 1, ' so': 1, 'sol': 2, 'olv': 2, 'lve': 2, 've(': 2, 'e(s': 1, '  x': 4, ' x,': 2, 'x, ': 10, ', y': 8, ' y ': 2, 'y =': 2, '= 0': 1, ' 0,': 1, ', 0': 1, ' 0\n': 1, '0\n ': 1, ' r ': 6, 'r =': 5, '= s': 7, 'y(x': 6, '(x,': 8, ' y)': 6, 'y)\n': 2, 'e r': 1, '= r': 1, 't(-': 2, '(-1': 2, '*9,': 2, '9, ': 2, ', 1': 2, '*9)': 2, '9),': 1, '9)\n': 1, ')\n\n': 4, "" 'C"": 2, ""'CE"": 2, 'CEN': 2, 'ENT': 2, 'NTE': 2, 'TER': 2, ""ER'"": 2, ""R':"": 2, 'rn\n': 5, 'n\n\n': 5, ' x_': 5, 'x_l': 3, '_lo': 6, 'low': 6, 'ow ': 6, 'w =': 2, 'f.b': 4, '.bi': 4, 't(x': 2, ' la': 4, 'lam': 4, 'amb': 4, 'mbd': 4, 'bda': 4, 'da ': 4, 'a x': 2, ' x:': 2, 'x: ': 2, ': s': 4, 'y))': 4, '))\n': 5, 'f x': 2, 'w i': 2, ' is': 4, 'is ': 4, 's N': 4, 'ne:': 4, 'x_h': 3, '_hi': 6, 'hig': 6, 'gh ': 4, 'h =': 2, 'h i': 2, '  y': 2, ' y_': 5, 'y_l': 3, 't(y': 2, '(y,': 2, 'y, ': 2, 'a y': 2, ' y:': 2, 'y: ': 2, 'f y': 2, 'y_h': 3, 'y((': 1, '((x': 1, '(x_': 1, 'w +': 2, '+ x': 1, 'gh)': 2, 'h) ': 2, ' 2,': 1, '2, ': 1, ', (': 1, ' (y': 1, '(y_': 1, '+ y': 1, ' 2)': 1, '2)\n': 1, 'r !': 1, ' !=': 1, '!= ': 1, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'num': 2, 'um_': 2, 'm_c': 2, '_ca': 2, 'cas': 4, 'ses': 2, 'es,': 1, 's, ': 1, ', A': 1, ' A,': 1, 'A, ': 1, ', B': 1, ' B ': 1, 'B =': 1, ' ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, '(in': 1, 'nt,': 1, ', i': 1, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, '())': 1, '\n\nf': 1, '\nfo': 1, 'or ': 1, 'r _': 1, ' _ ': 1, '_ i': 1, 'in ': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(1': 1, '(1,': 1, '1, ': 1, ', n': 1, ' nu': 1, 'es ': 1, 's +': 1, ' 1)': 1, '1):': 1, '  c': 2, ' ca': 2, '= C': 1, 'se(': 1, 'e()': 2, 'se.': 1, 'e.s': 1, '.so': 1, '\n\ns': 1, '\nsy': 1}"
Nikhil Mahajan,esab-atad.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 9, 'codejam': 1, '2020,': 1, 'qualification': 1, 'round:': 1, 'esab': 1, 'atad': 1, 'import': 1, 'sys': 1, 'class': 1, 'case:': 1, 'def': 8, '__init__(self,': 1, 'nbits):': 1, 'self.nbits': 4, '=': 18, 'nbits': 1, 'self.data': 4, ""['*']"": 1, '*': 1, 'self.complement_id': 4, 'none': 4, 'self.reverse_id': 4, 'query(self,': 1, 'i):': 2, 'print(str(i': 1, '+': 2, '1),': 1, 'flush=true)': 2, 'response': 3, 'input()': 2, 'if': 10, '==': 4, ""'n':"": 2, 'sys.exit()': 3, 'return': 1, 'query_pairs(self,': 1, 'reads': 1, 'i-th': 1, 'position': 1, 'from': 2, 'the': 2, 'beginning': 1, 'and': 5, 'end': 1, 'j': 1, '-': 2, 'i': 4, '1': 3, 'self.data[i]': 3, 'self.query(i)': 1, 'self.data[j]': 1, 'self.query(j)': 1, 'finds': 1, 'reference': 1, 'positions': 2, 'in': 6, 'data': 2, 'for': 4, 'configuration': 2, 'check': 2, 'is': 4, 'self.data[j]:': 2, '!=': 3, 'reverse(self):': 1, 'self.data[::-1]': 1, 'complement(self):': 1, 'flip': 2, ""{'0':"": 1, ""'1',"": 1, ""'1':"": 1, ""'0'}"": 1, '[flip[c]': 1, 'c': 3, 'else': 1, 'self.data]': 1, 'check_if_reversed(self):': 1, 'none:': 2, '_': 3, 'self.query(0)': 2, 'waste': 2, 'a': 2, 'query': 2, 'else:': 2, 'self.data[self.reverse_id]': 1, 'self.query(self.reverse_id):': 1, 'self.reverse()': 1, 'check_if_complemented(self):': 1, 'self.data[self.complement_id]': 1, 'self.query(self.complement_id):': 1, 'self.complement()': 1, 'solve(self):': 1, 'read_position': 5, '0': 1, 'read': 1, 'first': 1, '5': 2, 'last': 1, 'range(5):': 1, 'self.query_pairs(i)': 1, '+=': 2, 'while': 1, ""'*'"": 1, '<': 1, '//': 1, '2:': 1, 'use': 1, 'two': 1, 'queries': 2, 'to': 1, 'between': 1, 'every': 1, 'four': 1, 'paired': 1, '%': 1, '4': 1, '1:': 1, 'self.check_if_complemented()': 1, 'self.check_if_reversed()': 1, 'self.query_pairs(read_position)': 1, 'print("""".join(self.data),': 1, 'i/o': 1, 'code': 1, 'num_cases,': 1, 'num_bits': 1, 'map(int,': 1, 'input().split())': 1, 'range(1,': 1, 'num_cases': 1, '1):': 1, 'case': 1, 'case(num_bits)': 1, 'case.solve()': 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '020': 1, '20,': 1, '0, ': 1, ', Q': 1, ' Qu': 1, 'Qua': 1, 'ual': 1, 'ali': 1, 'lif': 1, 'ifi': 1, 'fic': 1, 'ica': 1, 'cat': 1, 'ati': 3, 'tio': 12, 'ion': 12, 'on ': 8, 'n R': 1, ' Ro': 1, 'Rou': 1, 'oun': 1, 'und': 1, 'nd:': 1, 'd: ': 1, ': E': 1, ' ES': 1, 'ESA': 1, 'SAb': 1, 'Ab ': 1, 'b A': 1, ' AT': 1, 'ATA': 1, 'TAd': 1, 'Ad\n': 1, 'd\n\n': 1, '\n\ni': 1, '\nim': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't s': 1, ' sy': 3, 'sys': 4, 'ys\n': 1, 's\n\n': 1, '\n\n\n': 2, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 2, 'ass': 1, 'ss ': 1, 's C': 1, ' Ca': 2, 'Cas': 2, 'ase': 6, 'se:': 3, 'e:\n': 5, ':\n ': 23, '\n  ': 57, '   ': 394, '  d': 8, ' de': 8, 'def': 8, 'ef ': 8, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 11, 'sel': 51, 'elf': 51, 'lf,': 3, 'f, ': 3, ', n': 3, ' nb': 2, 'nbi': 6, 'bit': 8, 'its': 8, 'ts)': 2, 's):': 1, '):\n': 12, '  s': 18, ' se': 38, 'lf.': 43, 'f.n': 4, '.nb': 4, 'ts ': 4, 's =': 2, ' = ': 18, '= n': 1, 'ts\n': 2, 's\n ': 4, 'f.d': 15, '.da': 15, 'dat': 17, 'ata': 17, 'ta ': 6, 'a =': 3, '= [': 2, "" ['"": 1, ""['*"": 1, ""'*'"": 2, ""*']"": 1, ""'] "": 1, '] *': 1, ' * ': 1, '* s': 1, 'f.c': 9, '.co': 7, 'com': 10, 'omp': 10, 'mpl': 10, 'ple': 10, 'lem': 10, 'eme': 10, 'men': 10, 'ent': 10, 'nt_': 6, 't_i': 6, '_id': 12, 'id ': 8, 'd =': 4, '= N': 2, ' No': 6, 'Non': 6, 'one': 6, 'ne\n': 2, 'e\n ': 1, 'f.r': 7, '.re': 7, 'rev': 10, 'eve': 11, 'ver': 11, 'ers': 10, 'rse': 10, 'se_': 6, 'e_i': 6, 'e\n\n': 2, '\n\n ': 12, 'f q': 2, ' qu': 6, 'que': 14, 'uer': 14, 'ery': 13, 'ry(': 7, 'y(s': 3, ', i': 3, ' i)': 2, 'i):': 2, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 2, 'int': 3, 'nt(': 4, 't(s': 2, '(st': 1, 'str': 1, 'tr(': 1, 'r(i': 1, '(i ': 1, 'i +': 1, ' + ': 2, '+ 1': 2, ' 1)': 2, '1),': 1, '), ': 2, ', f': 2, ' fl': 4, 'flu': 2, 'lus': 2, 'ush': 2, 'sh=': 2, 'h=T': 2, '=Tr': 2, 'Tru': 2, 'rue': 2, 'ue)': 2, 'e)\n': 2, ')\n ': 9, '  r': 5, ' re': 11, 'res': 3, 'esp': 3, 'spo': 3, 'pon': 3, 'ons': 5, 'nse': 3, 'se ': 5, 'e =': 3, '= i': 3, ' in': 9, 'inp': 3, 'npu': 3, 'put': 3, 'ut(': 3, 't()': 8, '()\n': 8, '  i': 9, ' if': 10, 'if ': 10, 'f r': 3, ' ==': 4, '== ': 4, ""= '"": 2, "" 'N"": 2, ""'N'"": 2, ""N':"": 2, ""':\n"": 2, 'ys.': 3, 's.e': 3, '.ex': 3, 'exi': 3, 'xit': 3, 'it(': 4, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n r': 3, 'se\n': 1, 'ry_': 3, 'y_p': 3, '_pa': 3, 'pai': 4, 'air': 4, 'irs': 4, 'rs(': 3, 's(s': 1, '  #': 7, ' # ': 7, '# R': 2, ' Re': 2, 'Rea': 2, 'ead': 8, 'ads': 1, 'ds ': 2, 's i': 2, ' i-': 1, 'i-t': 1, '-th': 1, 'th ': 1, 'h p': 1, ' po': 3, 'pos': 9, 'osi': 9, 'sit': 9, 'iti': 9, 'n f': 2, ' fr': 2, 'fro': 2, 'rom': 2, 'om ': 2, 'm t': 2, ' th': 2, 'the': 2, 'he ': 2, 'e b': 1, ' be': 1, 'beg': 1, 'egi': 1, 'gin': 1, 'inn': 1, 'nni': 1, 'nin': 1, 'ing': 1, 'ng ': 1, 'g a': 1, ' an': 5, 'and': 5, 'nd ': 5, 'd f': 2, 'e e': 1, ' en': 1, 'end': 1, 'nd\n': 1, 'd\n ': 1, '  j': 1, ' j ': 1, 'j =': 1, '= s': 10, 's -': 1, ' - ': 2, '- i': 1, ' i ': 2, 'i -': 1, '- 1': 1, ' 1\n': 3, '1\n ': 1, 'ta[': 9, 'a[i': 3, '[i]': 3, 'i] ': 3, '] =': 3, 'f.q': 8, '.qu': 8, 'y(i': 1, '(i)': 2, 'i)\n': 2, 'a[j': 3, '[j]': 3, 'j] ': 1, 'y(j': 1, '(j)': 1, 'j)\n': 1, ')\n\n': 7, '# F': 1, ' Fi': 1, 'Fin': 1, 'ind': 1, 'nds': 1, 's r': 1, 'ref': 1, 'efe': 1, 'fer': 1, 'ere': 1, 'ren': 1, 'enc': 1, 'nce': 1, 'ce ': 1, 'e p': 1, 'ns ': 1, 'in ': 6, 'n d': 1, ' da': 2, 'a f': 1, ' fo': 4, 'for': 4, 'or ': 4, 'r c': 2, ' co': 3, 'con': 2, 'onf': 2, 'nfi': 2, 'fig': 2, 'igu': 2, 'gur': 2, 'ura': 2, 'rat': 2, 'n c': 1, ' ch': 4, 'che': 6, 'hec': 6, 'eck': 6, 'ck\n': 1, 'k\n ': 1, 'f s': 7, 'd i': 4, ' is': 4, 'is ': 4, 's N': 4, 'ne ': 2, 'e a': 4, 'd s': 2, 'j]:': 2, ']:\n': 2, ' i\n': 2, 'i\n ': 1, '] !': 3, ' !=': 3, '!= ': 3, 'i\n\n': 1, 'se(': 3, 'e(s': 2, 'lf)': 5, 'f):': 5, 'a[:': 1, '[::': 1, '::-': 1, ':-1': 1, '-1]': 1, '1]\n': 1, ']\n\n': 2, 'f c': 4, '  f': 2, 'fli': 3, 'lip': 3, 'ip ': 2, 'p =': 1, '= {': 1, "" {'"": 1, ""{'0"": 1, ""'0'"": 2, ""0':"": 1, ""': "": 2, "": '"": 2, "" '1"": 2, ""'1'"": 2, ""1',"": 1, ""', "": 1, "", '"": 1, ""1':"": 1, "" '0"": 1, ""0'}"": 1, ""'}\n"": 1, '}\n ': 1, ' [f': 1, '[fl': 1, 'ip[': 1, 'p[c': 1, '[c]': 1, 'c] ': 1, '] i': 1, ' c ': 3, 'c i': 2, 'p e': 1, ' el': 3, 'els': 3, 'lse': 3, 'e c': 1, 'c f': 1, 'n s': 2, 'ta]': 1, 'a]\n': 1, 'ck_': 4, 'k_i': 4, '_if': 4, 'if_': 4, 'f_r': 2, '_re': 2, 'sed': 2, 'ed(': 4, 'd(s': 2, 'ne:': 2, '  _': 2, ' _ ': 3, '_ =': 2, 'y(0': 2, '(0)': 2, '0) ': 2, ')  ': 2, '# W': 2, ' Wa': 2, 'Was': 2, 'ast': 3, 'ste': 2, 'te ': 2, ' a ': 2, 'a q': 2, 'ry\n': 2, 'y\n ': 2, '  e': 2, 'a[s': 2, '[se': 2, 'id]': 2, 'd] ': 2, 'id)': 2, 'd):': 2, 'e()': 2, 'f_c': 2, '_co': 2, 'nte': 2, 'ted': 2, ' so': 1, 'sol': 2, 'olv': 2, 'lve': 2, 've(': 2, 'rea': 6, 'ad_': 6, 'd_p': 6, '_po': 6, 'n =': 1, '= 0': 1, ' 0\n': 1, '0\n\n': 1, 'ad ': 1, ' fi': 1, 'fir': 1, 'rst': 1, 'st ': 2, 't 5': 2, ' 5 ': 2, '5 a': 1, 'd l': 1, ' la': 1, '5 p': 1, 'ns\n': 1, 'r i': 1, 'i i': 1, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(5': 1, '(5)': 1, '5):': 1, 's(i': 1, 'n +': 2, ' +=': 2, '+= ': 2, '= 1': 3, '1\n\n': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, ""e '"": 1, "" '*"": 1, ""*' "": 1, ""' i"": 1, 'a a': 1, 'd r': 1, 'n <': 1, ' < ': 1, '< s': 1, 's /': 1, ' //': 1, '// ': 1, '/ 2': 1, ' 2:': 1, '2:\n': 1, '# U': 1, ' Us': 1, 'Use': 1, 'e t': 1, ' tw': 1, 'two': 1, 'wo ': 1, 'o q': 1, 'eri': 2, 'rie': 2, 'ies': 2, 'es ': 2, 's t': 1, ' to': 1, 'to ': 1, 'o c': 1, 'ck ': 1, 'k d': 1, 'a c': 1, 'on\n': 1, 'n\n ': 1, '# B': 1, ' Be': 1, 'Bet': 1, 'etw': 1, 'twe': 1, 'wee': 1, 'een': 1, 'en ': 1, 'n e': 1, ' ev': 1, 'ry ': 1, 'y f': 1, 'fou': 1, 'our': 1, 'ur ': 1, 'r p': 1, ' pa': 1, 'ire': 1, 'red': 1, 'ed ': 1, 'd q': 1, 'es\n': 1, 'n %': 1, ' % ': 1, '% 4': 1, ' 4 ': 1, '4 =': 1, ' 1:': 1, '1:\n': 1, '.ch': 2, 'd()': 2, 's(r': 1, '(re': 1, 'on)': 1, 'n)\n': 1, 't(""': 1, '(""""': 1, '"""".': 1, '"".j': 1, '.jo': 1, 'joi': 1, 'oin': 1, 'in(': 1, 'n(s': 1, 'ta)': 1, 'a),': 1, 'f i': 1, '() ': 1, ') =': 1, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'num': 4, 'um_': 4, 'm_c': 2, '_ca': 2, 'cas': 4, 'ses': 2, 'es,': 1, 's, ': 1, ' nu': 2, 'm_b': 2, '_bi': 2, '= m': 1, ' ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, '(in': 1, 'nt,': 1, 't, ': 1, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, '())': 1, '))\n': 1, '\n\nf': 1, '\nfo': 1, 'r _': 1, '_ i': 1, 'e(1': 1, '(1,': 1, '1, ': 1, 's +': 1, '1):': 1, '  c': 2, ' ca': 2, '= C': 1, 'e(n': 1, '(nu': 1, 's)\n': 1, 'se.': 1, 'e.s': 1, '.so': 1, '\n\ns': 1, '\nsy': 1}"
Nikhil Mahajan,expogo.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 6, 'codejam': 1, '2020,': 1, 'round': 1, '1b:': 1, 'expogo': 1, 'from': 1, 'functools': 1, 'import': 1, 'lru_cache': 1, '@lru_cache(maxsize=none)': 1, 'def': 1, 'solve(x,': 2, 'y):': 1, 'if': 12, 'x': 3, '==': 4, 'y': 5, '0:': 1, 'return': 7, 'true,': 5, ""''"": 1, '%': 3, '2': 2, '2:': 1, 'false,': 2, 'none': 2, '1:': 1, 'jump': 4, 'west': 1, '(x,': 4, 'y)': 5, '!=': 4, '(1,': 1, '0):': 2, 'possible,': 5, 'jumps': 9, '=': 7, 'solve((x': 2, '+': 7, '1)': 4, '//': 8, '2,': 4, '2)': 4, 'possible:': 5, ""'w'"": 1, 'east': 1, '(-1,': 1, '-': 2, ""'e'"": 1, 'else:': 2, 'south': 1, '(0,': 2, '1):': 2, 'solve(x': 2, '(y': 2, ""'s'"": 1, 'north': 1, '-1):': 1, ""'n'"": 1, 'i/o': 1, 'code': 1, 'num_cases': 2, 'int(input())': 1, 'for': 1, 'case': 1, 'in': 1, 'range(1,': 1, 'x,': 1, 'map(int,': 1, 'input().split())': 1, ""print('case"": 2, '#{}:': 2, ""{}'.format(case,"": 1, 'jumps))': 1, ""impossible'.format(case))"": 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '020': 1, '20,': 1, '0, ': 3, ', R': 1, ' Ro': 1, 'Rou': 1, 'oun': 1, 'und': 1, 'nd ': 1, 'd 1': 1, ' 1B': 1, '1B:': 1, 'B: ': 1, ': E': 1, ' Ex': 1, 'Exp': 1, 'xpo': 1, 'pog': 1, 'ogo': 1, 'go\n': 1, 'o\n\n': 1, '\n\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm f': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cto': 1, 'too': 1, 'ool': 1, 'ols': 1, 'ls ': 1, 's i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 2, 'rt ': 1, 't l': 1, ' lr': 1, 'lru': 2, 'ru_': 2, 'u_c': 2, '_ca': 4, 'cac': 2, 'ach': 2, 'che': 2, 'he\n': 1, 'e\n\n': 3, '\n\n\n': 2, '\n\n@': 1, '\n@l': 1, '@lr': 1, 'he(': 1, 'e(m': 1, '(ma': 1, 'max': 1, 'axs': 1, 'xsi': 1, 'siz': 1, 'ize': 1, 'ze=': 1, 'e=N': 1, '=No': 1, 'Non': 3, 'one': 3, 'ne)': 1, 'e)\n': 1, ')\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f s': 1, ' so': 6, 'sol': 6, 'olv': 6, 'lve': 6, 've(': 6, 'e(X': 4, '(X,': 6, 'X, ': 7, ', Y': 9, ' Y)': 6, 'Y):': 1, '):\n': 6, ':\n ': 16, '\n  ': 33, '   ': 226, '  i': 12, ' if': 12, 'if ': 12, 'f X': 3, ' X ': 3, 'X =': 1, ' ==': 4, '== ': 4, '= Y': 2, ' Y ': 5, 'Y =': 2, '= 0': 1, ' 0:': 1, '0:\n': 1, '  r': 7, ' re': 7, 'ret': 7, 'etu': 7, 'tur': 7, 'urn': 7, 'rn ': 7, 'n T': 5, ' Tr': 5, 'Tru': 5, 'rue': 5, 'ue,': 5, 'e, ': 13, "", '"": 5, "" ''"": 1, ""''\n"": 1, ""'\n\n"": 1, '\n\n ': 7, 'X %': 2, ' % ': 3, '% 2': 3, ' 2 ': 2, '2 =': 2, 'Y %': 1, ' 2:': 1, '2:\n': 1, 'n F': 2, ' Fa': 2, 'Fal': 2, 'als': 2, 'lse': 4, 'se,': 3, ', N': 2, ' No': 3, 'ne\n': 2, '= 1': 1, ' 1:': 1, '1:\n': 1, '  #': 4, ' # ': 4, '# J': 4, ' Ju': 4, 'Jum': 4, 'ump': 14, 'mp ': 4, 'p W': 1, ' We': 1, 'Wes': 1, 'est': 1, 'st\n': 2, 't\n ': 2, 'f (': 4, ' (X': 4, 'Y) ': 4, ') !': 4, ' !=': 4, '!= ': 4, '= (': 4, ' (1': 1, '(1,': 2, '1, ': 3, ', 0': 2, ' 0)': 2, '0):': 2, '  p': 7, ' po': 10, 'pos': 10, 'oss': 10, 'ssi': 10, 'sib': 10, 'ibl': 10, 'ble': 10, 'le,': 5, ', j': 6, ' ju': 10, 'jum': 10, 'mps': 10, 'ps ': 5, 's =': 6, ' = ': 7, '= s': 5, 'e((': 2, '((X': 2, '(X ': 4, 'X +': 1, ' + ': 7, '+ 1': 3, ' 1)': 6, '1) ': 4, ') /': 4, ' //': 8, '// ': 8, '/ 2': 8, ' 2,': 4, '2, ': 4, 'Y /': 2, ' 2)': 4, '2)\n': 4, ')\n ': 6, 'f p': 5, 'le:': 5, 'e:\n': 7, "" 'W"": 1, ""'W'"": 1, ""W' "": 1, ""' +"": 4, '+ j': 4, 'ps\n': 4, 's\n\n': 4, 'p E': 1, ' Ea': 1, 'Eas': 1, 'ast': 1, ' (-': 1, '(-1': 1, '-1,': 1, 'X -': 1, ' - ': 2, '- 1': 2, "" 'E"": 1, ""'E'"": 1, ""E' "": 1, '  e': 2, ' el': 2, 'els': 2, 'se:': 2, 'p S': 1, ' So': 1, 'Sou': 1, 'out': 1, 'uth': 1, 'th\n': 2, 'h\n ': 2, ' (0': 2, '(0,': 2, ', 1': 1, '1):': 3, 'X /': 2, ', (': 2, ' (Y': 2, '(Y ': 2, 'Y +': 1, "" 'S"": 1, ""'S'"": 1, ""S' "": 1, 'p N': 1, 'Nor': 1, 'rth': 1, ', -': 1, ' -1': 1, '-1)': 1, 'Y -': 1, "" 'N"": 1, ""'N'"": 1, ""N' "": 1, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'num': 2, 'um_': 2, 'm_c': 2, 'cas': 5, 'ase': 7, 'ses': 2, 'es ': 2, '= i': 1, ' in': 3, 'int': 4, 'nt(': 3, 't(i': 1, '(in': 2, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 3, '())': 2, '))\n': 3, ')\nf': 1, '\nfo': 1, 'for': 3, 'or ': 1, 'r c': 1, ' ca': 1, 'se ': 3, 'e i': 1, 'in ': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(1': 1, ', n': 1, ' nu': 1, 's +': 1, '  X': 1, ' X,': 1, '= m': 1, ' ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, 't, ': 1, ', i': 1, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, ')\n\n': 1, 'Y)\n': 1, ' pr': 2, 'pri': 2, 'rin': 2, ""t('"": 2, ""('C"": 2, ""'Ca"": 2, 'Cas': 2, 'e #': 2, ' #{': 2, '#{}': 2, '{}:': 2, '}: ': 2, ': {': 1, ' {}': 1, ""{}'"": 1, ""}'."": 1, ""'.f"": 2, '.fo': 2, 'orm': 2, 'rma': 2, 'mat': 2, 'at(': 2, 't(c': 2, '(ca': 2, 'ps)': 1, 's))': 1, ': I': 1, ' IM': 1, 'IMP': 1, 'MPO': 1, 'POS': 1, 'OSS': 1, 'SSI': 1, 'SIB': 1, 'IBL': 1, 'BLE': 1, ""LE'"": 1, ""E'."": 1, 'se)': 1, 'e))': 1}"
Nikhil Mahajan,hacked-exam.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'codejam': 1, '2021,': 1, 'round': 1, '1a:': 1, 'hacked': 1, 'exam': 1, 'from': 1, 'scipy.special': 1, 'import': 2, 'comb': 1, 'math': 1, 'def': 3, 'flip(q):': 1, 'return': 3, ""q.translate(str.maketrans('ft',"": 1, ""'tf'))"": 1, 'num_sequences(q,': 2, 't):': 1, 'n': 4, '=': 17, '1': 3, 'for': 8, 's': 8, 'in': 10, 'q:': 3, '*=': 1, 'comb(q[s],': 1, 't[s],': 1, 'exact=true)': 1, 'solve(answers,': 2, 'scores):': 1, 'q': 2, ""{'ttt':"": 3, '0,': 6, ""'ttf':"": 3, ""'tft':"": 3, ""'ftt':"": 3, '0}': 2, 'a,': 2, 'b,': 2, 'c': 4, 'zip(*answers):': 2, 'a': 2, '+': 9, 'b': 2, 'if': 4, 'q[s]': 1, '+=': 6, 'else:': 2, 'q[flip(s)]': 1, '[scores[0]': 1, '-': 7, ""q['ftt'],"": 1, 'scores[1]': 1, ""q['tft'],"": 1, 'scores[2]': 1, ""q['ttf']]"": 1, 'total': 3, '0': 1, 't1': 1, ""range(q['ttt']"": 1, '1):': 2, 't': 1, 't1,': 1, '(s[0]': 2, 's[1]': 1, '2*t1)': 3, '//': 5, '2,': 2, 's[2]': 2, '(s[1]': 1, '2}': 1, 'num_seq': 3, 't)': 1, 'n:': 1, 'n[s]': 1, '*': 1, 't[s]': 1, 'numerator': 2, 'sum(max(n[s],': 1, 'total*q[s]': 2, 'n[s])': 1, 'q)': 1, 'g': 2, 'math.gcd(numerator,': 1, 'total)': 1, 'res': 3, '""""': 1, ""'t'"": 2, '2*n[s]': 1, '>': 2, 'else': 2, ""'f'"": 2, '2*n[flip(s)]': 1, 'total*q[flip(s)]': 1, 'res,': 3, 'g,': 1, 'i/o': 1, 'code': 1, 'num_cases': 2, 'int(input())': 1, 'case': 1, 'range(1,': 1, 'n,': 3, 'map(int,': 1, 'input().split())': 1, 'answers,': 1, 'scores': 1, '[],': 1, '[]': 1, '_': 1, 'range(n):': 1, 'answer,': 1, 'score': 1, 'input().split()': 1, 'answers.append(answer)': 1, 'scores.append(int(score))': 1, 'while': 1, 'len(scores)': 1, '<': 1, '3:': 1, 'answers.append(answers[-1])': 1, 'scores.append(scores[-1])': 1, 'd': 1, 'scores)': 1, 'print(""case': 1, '#{}:': 1, '{}': 1, '{}/{}"".format(case,': 1, 'd))': 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '021': 1, '21,': 1, '1, ': 2, ', R': 1, ' Ro': 1, 'Rou': 1, 'oun': 1, 'und': 1, 'nd ': 1, 'd 1': 1, ' 1A': 1, '1A:': 1, 'A: ': 1, ': H': 1, ' Ha': 1, 'Hac': 1, 'ack': 1, 'cke': 1, 'ked': 1, 'ed ': 1, 'd E': 1, ' Ex': 1, 'Exa': 1, 'xam': 1, 'am\n': 1, 'm\n\n': 1, '\n\nf': 2, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm s': 1, ' sc': 9, 'sci': 1, 'cip': 1, 'ipy': 1, 'py.': 1, 'y.s': 1, '.sp': 3, 'spe': 1, 'pec': 1, 'eci': 1, 'cia': 1, 'ial': 1, 'al ': 4, 'l i': 1, ' im': 1, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't c': 1, ' co': 2, 'com': 2, 'omb': 2, 'mb\n': 1, 'b\ni': 1, '\nim': 1, 't m': 1, ' ma': 3, 'mat': 3, 'ath': 2, 'th\n': 1, 'h\n\n': 1, '\n\n\n': 4, '\n\nd': 3, '\nde': 3, 'def': 3, 'ef ': 3, 'f f': 1, ' fl': 1, 'fli': 4, 'lip': 4, 'ip(': 6, 'p(q': 1, '(q)': 1, 'q):': 1, '):\n': 8, ':\n ': 15, '\n  ': 45, '   ': 221, '  r': 7, ' re': 9, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n q': 5, ' q.': 1, 'q.t': 1, '.tr': 1, 'tra': 2, 'ran': 5, 'ans': 12, 'nsl': 1, 'sla': 1, 'lat': 1, 'ate': 1, 'te(': 1, 'e(s': 1, '(st': 1, 'str': 1, 'tr.': 1, 'r.m': 1, '.ma': 1, 'mak': 1, 'ake': 1, 'ket': 1, 'etr': 1, 'ns(': 1, ""s('"": 1, ""('F"": 1, ""'FT"": 5, ""FT'"": 5, ""T',"": 1, ""', "": 1, "", '"": 7, "" 'T"": 9, ""'TF"": 5, ""TF'"": 5, ""F')"": 1, ""'))"": 1, '))\n': 4, ')\n\n': 6, 'f n': 1, ' nu': 8, 'num': 10, 'um_': 7, 'm_s': 5, '_se': 5, 'seq': 5, 'equ': 2, 'que': 2, 'uen': 2, 'enc': 2, 'nce': 2, 'ces': 2, 'es(': 2, 's(q': 2, '(q,': 2, 'q, ': 2, ', t': 6, ' t)': 2, 't):': 1, '  n': 6, ' n ': 3, 'n =': 2, ' = ': 17, '= 1': 3, ' 1\n': 3, '1\n ': 2, '  f': 6, ' fo': 7, 'for': 9, 'or ': 10, 'r s': 3, ' s ': 7, 's i': 5, ' in': 13, 'in ': 10, ' q:': 3, 'q:\n': 3, 'n *': 1, ' *=': 1, '*= ': 1, '= c': 1, 'mb(': 1, 'b(q': 1, '(q[': 2, 'q[s': 4, '[s]': 10, 's],': 3, '], ': 6, ' t[': 2, 't[s': 2, ', e': 1, ' ex': 1, 'exa': 1, 'xac': 1, 'act': 1, 'ct=': 1, 't=T': 1, '=Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e)\n': 1, ')\n ': 7, 'n n': 2, ' n\n': 1, 'n\n\n': 1, 'f s': 3, ' so': 2, 'sol': 2, 'olv': 2, 'lve': 2, 've(': 2, 'e(a': 2, '(an': 4, 'nsw': 10, 'swe': 10, 'wer': 10, 'ers': 8, 'rs,': 3, 's, ': 6, ', s': 6, 'sco': 12, 'cor': 12, 'ore': 12, 'res': 16, 'es)': 3, 's):': 3, '  q': 3, ' q ': 1, 'q =': 2, '= {': 3, "" {'"": 3, ""{'T"": 3, ""'TT"": 8, 'TTT': 4, ""TT'"": 8, ""T':"": 9, ""': "": 12, ': 0': 8, ' 0,': 6, '0, ': 6, 'TTF': 4, ""F':"": 3, 'TFT': 4, "" 'F"": 5, 'FTT': 4, ' 0}': 2, '0}\n': 2, '}\n\n': 2, '\n\n ': 11, 'r a': 2, ' a,': 2, 'a, ': 2, ', b': 2, ' b,': 2, 'b, ': 2, ', c': 2, ' c ': 2, 'c i': 2, 'n z': 2, ' zi': 2, 'zip': 2, 'p(*': 2, '(*a': 2, '*an': 2, 'rs)': 2, '  s': 4, 's =': 5, '= a': 2, ' a ': 2, 'a +': 2, ' + ': 9, '+ b': 2, ' b ': 2, 'b +': 2, '+ c': 2, ' c\n': 2, 'c\n ': 1, '  i': 2, ' if': 4, 'if ': 4, ' q[': 5, 's] ': 5, '] +': 7, ' +=': 6, '+= ': 6, '  e': 2, ' el': 4, 'els': 4, 'lse': 4, 'se:': 2, 'e:\n': 2, 'q[f': 2, '[fl': 3, 'p(s': 3, '(s)': 3, 's)]': 3, ')] ': 3, '1\n\n': 1, '  S': 1, ' S ': 1, 'S =': 1, '= [': 2, ' [s': 1, '[sc': 1, 'es[': 4, 's[0': 1, '[0]': 3, '0] ': 3, '] -': 7, ' - ': 7, '- q': 3, ""q['"": 4, ""['F"": 1, ""T']"": 3, ""'],"": 2, 's[1': 1, '[1]': 3, '1] ': 3, ""['T"": 3, 's[2': 1, '[2]': 3, '2] ': 3, ""F']"": 1, ""']]"": 1, ']]\n': 1, ']\n\n': 2, '  t': 3, ' to': 7, 'tot': 7, 'ota': 7, 'tal': 7, 'l =': 1, '= 0': 1, ' 0\n': 1, '0\n ': 1, '}\n ': 1, 'r t': 1, ' t1': 2, 't1 ': 1, '1 i': 1, 'n r': 4, ' ra': 3, 'ang': 3, 'nge': 3, 'ge(': 3, 'e(q': 1, ""'] "": 1, '+ 1': 2, ' 1)': 2, '1):': 2, ' t ': 1, 't =': 1, ': t': 1, 't1,': 1, '1,\n': 1, ',\n ': 3, ""  '"": 3, ': (': 3, ' (S': 3, '(S[': 3, 'S[0': 2, '+ S': 3, ' S[': 3, 'S[1': 2, '- 2': 3, ' 2*': 5, '2*t': 3, '*t1': 3, 't1)': 3, '1) ': 3, ') /': 3, ' //': 5, '// ': 5, '/ 2': 3, ' 2,': 2, '2,\n': 2, 'S[2': 2, ' 2}': 1, '2}\n': 1, 'eq ': 2, '= n': 3, 't)\n': 1, 'l +': 1, 'eq\n': 1, 'q\n ': 1, ' n:': 1, 'n:\n': 1, ' n[': 2, 'n[s': 4, 'q *': 1, ' * ': 1, '* t': 1, 's]\n': 1, 'ume': 3, 'mer': 3, 'era': 3, 'rat': 3, 'ato': 3, 'tor': 3, 'r =': 1, '= s': 2, ' su': 1, 'sum': 1, 'um(': 1, 'm(m': 1, '(ma': 1, 'max': 1, 'ax(': 1, 'x(n': 1, '(n[': 1, 'al*': 3, 'l*q': 3, '*q[': 3, '- n': 1, 's])': 1, ']) ': 1, ') f': 1, ' q)': 1, 'q)\n': 1, '  g': 1, ' g ': 1, 'g =': 1, '= m': 2, 'th.': 1, 'h.g': 1, '.gc': 1, 'gcd': 1, 'cd(': 1, 'd(n': 1, '(nu': 1, 'or,': 1, 'r, ': 2, 'al)': 1, 'l)\n': 1, 'es ': 6, '= ""': 1, ' """"': 1, '""""\n': 1, '""\n ': 1, 'c\n\n': 1, 's +': 3, ""= '"": 2, ""'T'"": 2, ""T' "": 1, ""' i"": 2, 'f 2': 2, '2*n': 2, '*n[': 2, '] >': 2, ' > ': 2, '> t': 2, '] e': 2, 'se ': 4, ""e '"": 2, ""'F'"": 2, ""F'\n"": 1, ""'\n "": 1, ""F' "": 1, 'n[f': 1, ""T'\n"": 1, ""'\n\n"": 1, 'es,': 3, ', n': 4, 'r /': 1, '/ g': 2, ' g,': 1, 'g, ': 1, 'l /': 1, ' g\n': 1, 'g\n\n': 1, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'm_c': 2, '_ca': 2, 'cas': 4, 'ase': 5, 'ses': 2, '= i': 2, 'int': 4, 'nt(': 3, 't(i': 1, '(in': 3, 'inp': 3, 'npu': 3, 'put': 3, 'ut(': 3, 't()': 5, '())': 2, '\nfo': 1, 'r c': 1, ' ca': 1, 'e i': 1, 'e(1': 1, '(1,': 1, '  N': 1, ' N,': 1, 'N, ': 1, ', Q': 1, ' Q ': 1, 'Q =': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, 't, ': 1, ', i': 1, '().': 2, ').s': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'it(': 2, '  a': 4, ' an': 4, ' []': 2, '[],': 1, ', [': 1, '[]\n': 1, ']\n ': 1, 'r _': 1, ' _ ': 1, '_ i': 1, 'e(N': 1, '(N)': 1, 'N):': 1, 'er,': 1, 're ': 1, 'e =': 1, '()\n': 1, 'rs.': 2, 's.a': 4, '.ap': 4, 'app': 4, 'ppe': 4, 'pen': 4, 'end': 4, 'nd(': 4, 'd(a': 2, 'er)': 1, 'r)\n': 1, 'es.': 2, 'd(i': 1, 't(s': 1, '(sc': 3, 're)': 1, 'e))': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(s': 1, 's) ': 1, ') <': 1, ' < ': 1, '< 3': 1, ' 3:': 1, '3:\n': 1, 'rs[': 1, 's[-': 2, '[-1': 2, '-1]': 2, '1])': 2, '])\n': 2, 'd(s': 1, ' n,': 2, 'n, ': 2, ', d': 2, ' d ': 1, 'd =': 1, 's)\n': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 't(""': 1, '(""C': 1, '""Ca': 1, 'Cas': 1, 'e #': 1, ' #{': 1, '#{}': 1, '{}:': 1, '}: ': 1, ': {': 1, ' {}': 2, '{} ': 1, '} {': 1, '{}/': 1, '}/{': 1, '/{}': 1, '{}""': 1, '}"".': 1, '"".f': 1, '.fo': 1, 'orm': 1, 'rma': 1, 'at(': 1, 't(c': 1, '(ca': 1, 'se,': 1, 'e, ': 1, ', r': 1, ' d)': 1, 'd))': 1}"
Nikhil Mahajan,incremental-house-of-pancakes.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 2, 'codejam': 1, '2020,': 1, 'round': 1, '2:': 1, 'incremental': 1, 'house': 1, 'of': 1, 'pancakes': 1, 'def': 4, 'binary_search(l,': 1, 'r,': 4, 'func):': 1, 'while': 1, 'l': 7, '<=': 4, 'r:': 3, 'm': 3, '=': 13, '(l': 1, '+': 13, 'r)': 2, '//': 2, '2': 3, 'if': 3, 'func(m):': 1, '1': 3, 'else:': 3, 'r': 5, '-': 3, 'return': 4, 'first_phase(a,': 1, 'b):': 1, '""""""assumes': 2, 'a': 5, '>': 2, 'b.""""""': 1, 'd': 1, 'b': 4, 'i': 2, 'binary_search(0,': 3, 'd,': 1, 'lambda': 3, 'x:': 3, 'x': 1, '*': 7, '(x': 1, '1)': 4, 'd)': 1, '-=': 3, '(i': 3, 'i,': 1, 'a,': 3, 'second_phase(a,': 1, 'b,': 2, 'i):': 1, 'goes': 1, 'first.""""""': 1, 'c1': 2, 'x)': 2, 'x*x': 2, 'a)': 1, 'c2': 1, '((i': 2, 'b)': 1, 'c1)': 1, 'c1*c1': 1, 'c2)': 1, 'c2*c2': 1, 'c1,': 3, 'c2,': 4, 'solve(l,': 1, 'r):': 1, 'i1,': 2, 'l,': 5, 'first_phase(l,': 1, 'first_phase(r,': 1, 'l)': 1, '>=': 1, 'second_phase(l,': 1, 'i1)': 2, 'second_phase(r,': 1, 'i1': 1, 'i/o': 1, 'code': 1, 'num_cases': 2, 'int(input())': 1, 'for': 1, 'case': 1, 'in': 1, 'range(1,': 1, '1):': 1, 'map(int,': 1, 'input().split())': 1, ""print('case"": 1, '#{}:': 1, '{}': 2, ""{}'.format(case,"": 1, '*solve(l,': 1, 'r)))': 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '020': 1, '20,': 1, '0, ': 4, ', R': 12, ' Ro': 1, 'Rou': 1, 'oun': 1, 'und': 1, 'nd ': 1, 'd 2': 1, ' 2:': 1, '2: ': 1, ': I': 1, ' In': 1, 'Inc': 1, 'ncr': 1, 'cre': 1, 'rem': 1, 'eme': 1, 'men': 1, 'ent': 1, 'nta': 1, 'tal': 1, 'al ': 1, 'l H': 1, ' Ho': 1, 'Hou': 1, 'ous': 1, 'use': 1, 'se ': 3, 'e o': 1, ' of': 1, 'of ': 1, 'f P': 1, ' Pa': 1, 'Pan': 1, 'anc': 1, 'nca': 1, 'cak': 1, 'ake': 1, 'kes': 1, 'es\n': 1, 's\n\n': 1, '\n\n\n': 5, '\n\nd': 4, '\nde': 4, 'def': 4, 'ef ': 4, 'f b': 1, ' bi': 4, 'bin': 4, 'ina': 4, 'nar': 4, 'ary': 4, 'ry_': 4, 'y_s': 4, '_se': 4, 'sea': 4, 'ear': 4, 'arc': 4, 'rch': 4, 'ch(': 4, 'h(L': 1, '(L,': 5, 'L, ': 10, ' R,': 4, 'R, ': 6, ', f': 1, ' fu': 2, 'fun': 2, 'unc': 2, 'nc)': 1, 'c):': 1, '):\n': 6, ':\n ': 12, '\n  ': 29, '   ': 102, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e L': 1, ' L ': 7, 'L <': 1, ' <=': 4, '<= ': 4, '= R': 2, ' R:': 3, 'R:\n': 3, '  m': 1, ' m ': 3, 'm =': 1, ' = ': 13, '= (': 3, ' (L': 1, '(L ': 1, 'L +': 1, ' + ': 13, '+ R': 1, ' R)': 4, 'R) ': 1, ') /': 2, ' //': 2, '// ': 2, '/ 2': 2, ' 2\n': 2, '2\n ': 3, '  i': 6, ' if': 3, 'if ': 3, 'f f': 2, 'nc(': 1, 'c(m': 1, '(m)': 1, 'm):': 1, '  L': 2, 'L =': 3, '= m': 3, 'm +': 1, '+ 1': 6, ' 1\n': 3, '1\n ': 3, '  e': 3, ' el': 3, 'els': 3, 'lse': 3, 'se:': 3, 'e:\n': 3, '  R': 1, ' R ': 4, 'R =': 4, 'm -': 1, ' - ': 3, '- 1': 2, '  r': 4, ' re': 4, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 4, 'n L': 1, 'L -': 1, '1\n\n': 1, ' fi': 4, 'fir': 4, 'irs': 4, 'rst': 4, 'st_': 3, 't_p': 3, '_ph': 6, 'pha': 6, 'has': 6, 'ase': 11, 'se(': 6, 'e(A': 2, '(A,': 2, 'A, ': 5, ', B': 5, ' B)': 2, 'B):': 1, '  ""': 2, ' """"': 2, '""""""': 4, '""""A': 2, '""As': 2, 'Ass': 2, 'ssu': 2, 'sum': 2, 'ume': 2, 'mes': 2, 'es ': 5, 's A': 2, ' A ': 5, 'A >': 1, ' > ': 2, '> B': 1, ' B.': 1, 'B.""': 1, '.""""': 2, '""""\n': 2, '""\n ': 2, '  D': 1, ' D ': 1, 'D =': 1, '= A': 2, 'A -': 3, '- B': 1, ' B\n': 3, 'B\n ': 1, ' i ': 2, 'i =': 1, '= b': 3, 'h(0': 3, '(0,': 3, ', D': 1, ' D,': 1, 'D, ': 1, ', l': 3, ' la': 3, 'lam': 3, 'amb': 3, 'mbd': 3, 'bda': 3, 'da ': 3, 'a x': 3, ' x:': 3, 'x: ': 3, ': x': 1, ' x ': 1, 'x *': 1, ' * ': 7, '* (': 2, ' (x': 1, '(x ': 1, 'x +': 1, ' 1)': 5, '1) ': 5, ') <': 1, '= 2': 1, ' 2 ': 1, '2 *': 1, '* D': 1, ' D)': 1, 'D)\n': 1, ')\n ': 6, '  A': 2, ' -=': 3, '-= ': 3, '= i': 2, 'i *': 3, ' (i': 3, '(i ': 5, 'i +': 3, 'n i': 2, ' i,': 1, 'i, ': 1, ', A': 3, ' A,': 3, 'B\n\n': 2, 'f s': 2, ' se': 3, 'sec': 3, 'eco': 3, 'con': 3, 'ond': 3, 'nd_': 3, 'd_p': 3, ' B,': 2, 'B, ': 2, ', i': 4, ' i)': 1, 'i):': 1, 'A g': 1, ' go': 1, 'goe': 1, 'oes': 1, 's f': 1, 'st.': 1, 't.""': 1, '  c': 4, ' c1': 7, 'c1 ': 2, '1 =': 1, ': (': 2, '* x': 2, ' x)': 2, 'x) ': 2, ') +': 4, '+ x': 2, ' x*': 2, 'x*x': 2, '*x ': 2, 'x <': 2, ' A)': 1, 'A)\n': 1, ' c2': 7, 'c2 ': 1, '2 =': 1, ' ((': 2, '((i': 2, ') *': 2, '= B': 1, 'B)\n': 1, '* c': 2, 'c1)': 1, '+ c': 4, 'c1*': 1, '1*c': 1, '*c1': 1, 'c1\n': 1, '  B': 1, ' B ': 1, 'B -': 1, 'c2)': 1, '2) ': 1, 'c2*': 1, '2*c': 1, '*c2': 1, 'c2\n': 1, 'n c': 1, 'c1,': 3, '1, ': 6, ', c': 3, 'c2,': 4, '2, ': 4, ' so': 1, 'sol': 2, 'olv': 2, 'lve': 2, 've(': 2, 'e(L': 4, 'R):': 1, 'f L': 2, 'L >': 2, '> R': 1, ' i1': 5, 'i1,': 2, ', L': 7, ' L,': 5, '= f': 2, 'R)\n': 1, 'e(R': 2, '(R,': 2, ' L)': 1, 'L)\n': 1, ')\n\n': 2, '\n\n ': 2, ' >=': 1, '>= ': 1, '= s': 2, 'i1)': 2, '1)\n': 2, 'i1 ': 1, '1 +': 2, ' R\n': 1, 'R\n\n': 1, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'num': 2, 'um_': 2, 'm_c': 2, '_ca': 2, 'cas': 4, 'ses': 2, 's =': 1, ' in': 3, 'int': 3, 'nt(': 2, 't(i': 1, '(in': 2, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 3, '())': 2, '))\n': 2, ')\nf': 1, '\nfo': 1, 'for': 2, 'or ': 1, 'r c': 1, ' ca': 1, 'e i': 1, 'in ': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(1': 1, '(1,': 1, ', n': 1, ' nu': 1, 's +': 1, '1):': 1, ' ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, 't, ': 1, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, ""t('"": 1, ""('C"": 1, ""'Ca"": 1, 'Cas': 1, 'e #': 1, ' #{': 1, '#{}': 1, '{}:': 1, '}: ': 1, ': {': 1, ' {}': 3, '{} ': 2, '} {': 2, ""{}'"": 1, ""}'."": 1, ""'.f"": 1, '.fo': 1, 'orm': 1, 'rma': 1, 'mat': 1, 'at(': 1, 't(c': 1, '(ca': 1, 'se,': 1, 'e, ': 1, ', *': 1, ' *s': 1, '*so': 1, 'R))': 1, ')))': 1}"
Nikhil Mahajan,indicium.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'codejam': 1, '2020,': 1, 'qualification': 1, 'round:': 1, 'indicium': 1, 'import': 1, 'numpy': 1, 'as': 1, 'np': 1, 'def': 2, 'get_diagonal(n,': 1, 'k):': 2, 'if': 5, 'k': 4, '%': 2, 'n': 6, '==': 5, '0:': 1, 'return': 4, '[k': 1, '//': 3, 'n]': 1, '*': 3, 'else:': 2, 'min_a': 1, '=': 9, 'max(1,': 1, '-((2*n': 1, '-': 8, 'k)': 3, '(n': 4, '2)))': 1, 'max_a': 2, 'min(n,': 1, '(k': 1, '2)': 2, '2))': 1, 'for': 10, 'a': 1, 'in': 14, 'range(min_a,': 1, '+': 9, '1):': 2, 'b': 2, 'range(1,': 3, 'n+1):': 2, 'c': 4, '2)*a': 1, 'and': 2, '(a': 2, 'b)': 1, 'is': 1, 'c):': 1, '[a]': 1, '[b,': 1, 'c]': 3, 'none': 1, 'generate_latin_square(n,': 2, 'm': 3, 'np.diag(get_diagonal(n,': 1, 'k))': 1, 'column_set': 1, '[set(c[c': 1, '>': 1, '0])': 1, 'm.t]': 1, 'values': 2, '[m[0,': 1, '0]]': 1, 'list(set([m[-1,': 1, '-1],': 1, 'm[-2,': 1, '-2]]))': 1, '+=': 1, 'list(set(range(1,': 1, '1))': 1, 'set(values))': 1, 'v': 4, 'values:': 1, 'r': 3, 'range(n):': 1, 'not': 2, 'm[r]:': 1, '[i': 1, 'i': 1, 'range(r,': 1, 'n)]:': 1, 'm[r,': 2, '0': 1, 'column_set[c]:': 1, 'column_set[c].add(v)': 1, 'break': 1, 'i/o': 1, 'code': 1, 'num_cases': 2, 'int(input())': 1, 'case': 1, 'n,': 1, 'map(int,': 1, 'input().split())': 1, '[n': 1, '1,': 1, '1]': 1, 'or': 1, '(n,': 1, '[(3,': 1, '5),': 1, '(3,': 1, '7)]:': 1, ""print('case"": 2, '#{}:': 2, ""impossible'.format(case))"": 1, ""possible'.format(case))"": 1, 'm:': 1, 'print(""': 1, '"".join(map(str,': 1, 'r)))': 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '020': 1, '20,': 1, '0, ': 2, ', Q': 1, ' Qu': 1, 'Qua': 1, 'ual': 1, 'ali': 1, 'lif': 1, 'ifi': 1, 'fic': 1, 'ica': 1, 'cat': 1, 'ati': 3, 'tio': 1, 'ion': 1, 'on ': 1, 'n R': 1, ' Ro': 1, 'Rou': 1, 'oun': 1, 'und': 1, 'nd:': 1, 'd: ': 1, ': I': 2, ' In': 1, 'Ind': 1, 'ndi': 1, 'dic': 1, 'ici': 1, 'ciu': 1, 'ium': 1, 'um\n': 1, 'm\n\n': 1, '\n\ni': 1, '\nim': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't n': 1, ' nu': 2, 'num': 3, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 1, 'as ': 1, 's n': 1, ' np': 2, 'np\n': 1, 'p\n\n': 1, '\n\n\n': 3, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f g': 2, ' ge': 3, 'get': 2, 'et_': 2, 't_d': 2, '_di': 2, 'dia': 3, 'iag': 3, 'ago': 2, 'gon': 2, 'ona': 2, 'nal': 2, 'al(': 2, 'l(N': 2, '(N,': 6, 'N, ': 7, ', K': 6, ' K)': 6, 'K):': 2, '):\n': 8, ':\n ': 17, '\n  ': 32, '   ': 260, '  i': 5, ' if': 5, 'if ': 5, 'f K': 2, ' K ': 4, 'K %': 1, ' % ': 2, '% N': 2, ' N ': 5, 'N =': 1, ' ==': 5, '== ': 5, '= 0': 2, ' 0:': 1, '0:\n': 1, '  r': 4, ' re': 4, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 4, 'n [': 4, ' [K': 1, '[K ': 1, 'K /': 1, ' //': 3, '// ': 3, '/ N': 1, ' N]': 1, 'N] ': 1, '] *': 1, ' * ': 3, '* N': 2, ' N\n': 1, 'N\n ': 1, '  e': 2, ' el': 2, 'els': 2, 'lse': 2, 'se:': 2, 'e:\n': 2, '  m': 2, ' mi': 2, 'min': 3, 'in_': 4, 'n_a': 2, '_a ': 3, 'a =': 4, ' = ': 9, '= m': 3, ' ma': 4, 'max': 3, 'ax(': 1, 'x(1': 1, '(1,': 5, '1, ': 7, ', -': 3, ' -(': 1, '-((': 1, '((2': 1, '(2*': 1, '2*N': 1, '*N ': 1, 'N -': 6, ' - ': 8, '- K': 1, 'K) ': 2, ') /': 2, '/ (': 2, ' (N': 5, '(N ': 4, '- 2': 5, ' 2)': 5, '2))': 2, ')))': 2, '))\n': 9, ')\n ': 8, 'ax_': 2, 'x_a': 2, 'in(': 2, 'n(N': 1, ', (': 2, ' (K': 1, '(K ': 1, 'K -': 1, '2) ': 2, '  f': 7, ' fo': 9, 'for': 12, 'or ': 11, 'r a': 1, ' a ': 1, 'a i': 1, ' in': 16, 'in ': 14, 'n r': 6, ' ra': 6, 'ran': 7, 'ang': 7, 'nge': 7, 'ge(': 7, 'e(m': 1, '(mi': 1, '_a,': 1, 'a, ': 1, ', m': 1, 'a +': 2, ' + ': 9, '+ 1': 4, ' 1)': 3, '1):': 4, 'r b': 1, ' b ': 2, 'b i': 1, 'e(1': 4, ', N': 4, ' N+': 2, 'N+1': 2, '+1)': 2, 'r c': 4, ' c ': 4, 'c i': 3, 'f (': 1, '2)*': 1, ')*a': 1, '*a ': 1, '+ b': 1, 'b +': 1, '+ c': 1, 'c =': 1, '= K': 1, 'K a': 1, ' an': 2, 'and': 2, 'nd ': 2, 'd (': 1, ' (a': 2, '(a ': 2, '= b': 1, ' b)': 1, 'b) ': 1, ') i': 2, ' is': 1, 'is ': 1, 's (': 1, '= c': 1, ' c)': 1, 'c):': 1, 'n (': 1, ') *': 1, '* [': 1, ' [a': 1, '[a]': 1, 'a] ': 1, '] +': 2, '+ [': 1, ' [b': 1, '[b,': 1, 'b, ': 1, ', c': 3, ' c]': 3, 'c]\n': 1, ']\n ': 2, 'n N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne\n': 1, 'e\n\n': 1, 'gen': 2, 'ene': 2, 'ner': 2, 'era': 2, 'rat': 2, 'ate': 2, 'te_': 2, 'e_l': 2, '_la': 2, 'lat': 2, 'tin': 2, 'n_s': 5, '_sq': 2, 'squ': 2, 'qua': 2, 'uar': 2, 'are': 2, 're(': 2, 'e(N': 3, '  M': 3, ' M ': 2, 'M =': 2, '= n': 1, 'np.': 1, 'p.d': 1, '.di': 1, 'ag(': 1, 'g(g': 1, '(ge': 1, 'K))': 1, '  c': 2, ' co': 3, 'col': 3, 'olu': 3, 'lum': 3, 'umn': 3, 'mn_': 3, '_se': 3, 'set': 7, 'et ': 1, 't =': 1, '= [': 2, ' [s': 1, '[se': 1, 'et(': 4, 't(c': 3, '(c[': 1, 'c[c': 1, '[c ': 1, 'c >': 1, ' > ': 1, '> 0': 1, ' 0]': 2, '0])': 1, ']) ': 1, ') f': 1, 'n M': 4, ' M.': 1, 'M.T': 1, '.T]': 1, 'T]\n': 1, '  v': 2, ' va': 3, 'val': 4, 'alu': 4, 'lue': 4, 'ues': 4, 'es ': 4, 's =': 2, ' [M': 1, '[M[': 2, 'M[0': 1, '[0,': 1, ', 0': 1, '0]]': 1, ']] ': 1, '+ l': 1, ' li': 2, 'lis': 2, 'ist': 2, 'st(': 2, 't(s': 2, '(se': 2, 't([': 1, '([M': 1, 'M[-': 2, '[-1': 1, '-1,': 1, ' -1': 1, '-1]': 1, '1],': 1, '], ': 1, ', M': 1, ' M[': 4, '[-2': 1, '-2,': 1, '2, ': 1, ' -2': 1, '-2]': 1, '2]]': 1, ']])': 1, ']))': 1, 's +': 2, ' +=': 1, '+= ': 1, '= l': 1, 't(r': 1, '(ra': 1, 'N +': 2, '1))': 1, ')) ': 1, ') -': 1, '- s': 1, ' se': 1, 't(v': 1, '(va': 1, 'es)': 1, 's))': 1, ')\n\n': 3, '\n\n ': 2, 'r v': 1, ' v ': 3, 'v i': 1, 'n v': 1, 'es:': 1, 's:\n': 1, 'r r': 2, ' r ': 3, 'r i': 3, '(N)': 1, 'N):': 1, 'f v': 1, 'v n': 2, ' no': 2, 'not': 2, 'ot ': 2, 't i': 2, 'M[r': 3, '[r]': 1, 'r]:': 1, ']:\n': 4, ' [i': 1, '[i ': 1, 'i %': 1, 'N f': 1, ' i ': 1, 'i i': 1, 'e(r': 1, '(r,': 1, 'r, ': 4, ', r': 2, 'r +': 1, '+ N': 1, ' N)': 1, 'N)]': 1, ')]:': 2, 'f M': 1, '[r,': 2, 'c] ': 2, '] =': 2, ' 0 ': 1, '0 a': 1, 'd v': 1, 'n c': 1, 'et[': 2, 't[c': 2, '[c]': 2, 'c]:': 1, '= v': 1, ' v\n': 1, 'v\n ': 1, 'c].': 1, '].a': 1, '.ad': 1, 'add': 1, 'dd(': 1, 'd(v': 1, '(v)': 1, 'v)\n': 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n ': 1, ' M\n': 1, 'M\n\n': 1, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'um_': 2, 'm_c': 2, '_ca': 2, 'cas': 5, 'ase': 7, 'ses': 2, '= i': 1, 'int': 5, 'nt(': 4, 't(i': 1, '(in': 2, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 3, '())': 2, '\n\nf': 1, '\nfo': 1, ' ca': 1, 'se ': 3, 'e i': 1, ', n': 1, '  N': 1, ' N,': 1, 'K =': 1, 'map': 2, 'ap(': 2, 'p(i': 1, 'nt,': 1, 't, ': 1, ', i': 1, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, 'K i': 1, ' [N': 1, '[N ': 1, ' 1,': 1, 'N *': 1, '- 1': 1, ' 1]': 1, '1] ': 1, '] o': 1, ' or': 1, 'r (': 1, ' [(': 1, '[(3': 1, '(3,': 2, '3, ': 2, ', 5': 1, ' 5)': 1, '5),': 1, '), ': 1, ' (3': 1, ', 7': 1, ' 7)': 1, '7)]': 1, '  p': 3, ' pr': 3, 'pri': 3, 'rin': 3, ""t('"": 2, ""('C"": 2, ""'Ca"": 2, 'Cas': 2, 'e #': 2, ' #{': 2, '#{}': 2, '{}:': 2, '}: ': 2, ' IM': 1, 'IMP': 1, 'MPO': 1, 'POS': 2, 'OSS': 2, 'SSI': 2, 'SIB': 2, 'IBL': 2, 'BLE': 2, ""LE'"": 2, ""E'."": 2, ""'.f"": 2, '.fo': 2, 'orm': 2, 'rma': 2, 'mat': 2, 'at(': 2, '(ca': 2, 'se)': 2, 'e))': 2, '= g': 1, 'K)\n': 1, ': P': 1, ' PO': 1, ' M:': 1, 'M:\n': 1, 't(""': 1, '("" ': 1, '"" ""': 1, ' "".': 1, '"".j': 1, '.jo': 1, 'joi': 1, 'oin': 1, 'n(m': 1, '(ma': 1, 'p(s': 1, '(st': 1, 'str': 1, 'tr,': 1, ' r)': 1, 'r))': 1}"
Nikhil Mahajan,join-the-ranks.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'codejam': 1, '2020,': 1, 'round': 1, '1b:': 1, 'join': 1, 'the': 1, 'ranks': 1, 'def': 1, 'solve(r,': 2, 's):': 1, 'deck': 3, '=': 12, 'list(range(1,': 1, 'r+1))': 1, '*': 5, 's': 6, 'num_shuffles': 1, '(r': 2, '-': 5, 'r': 2, '+': 6, '1)': 1, '//': 2, '2': 1, 'shuffles': 3, '[]': 1, 'for': 3, '_': 1, 'in': 3, 'range((r': 1, 'r)': 2, '2):': 1, 'a,': 3, 'first': 2, '0,': 2, 'deck[0]': 2, 'while': 4, 'deck[a]': 4, '==': 3, 'first:': 2, 'a': 4, '+=': 4, '1': 5, 'second': 1, 'second:': 2, 'b': 4, 'deck[b]': 1, '!=': 1, 'shuffles.append((a,': 2, 'a))': 2, 'deck[a:b]': 1, 'deck[:a]': 2, 'deck[b:]': 1, 'if': 1, '%': 1, '2:': 1, 'deck[a:]': 1, 'return': 1, 'num_shuffles,': 2, 'i/o': 1, 'code': 1, 'num_cases': 2, 'int(input())': 1, 'case': 1, 'range(1,': 1, '1):': 1, 'r,': 1, 'map(int,': 1, 'input().split())': 1, 's)': 1, ""print('case"": 1, '#{}:': 1, ""{}'.format(case,"": 1, 'num_shuffles))': 1, 'shuffles:': 1, ""print('{}"": 1, ""{}'.format(a,"": 1, 'b))': 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '020': 1, '20,': 1, '0, ': 3, ', R': 3, ' Ro': 1, 'Rou': 1, 'oun': 1, 'und': 1, 'nd ': 2, 'd 1': 1, ' 1B': 1, '1B:': 1, 'B: ': 1, ': J': 1, ' Jo': 1, 'Joi': 1, 'oin': 1, 'in ': 4, 'n t': 1, ' th': 1, 'the': 1, 'he ': 1, 'e R': 1, ' Ra': 1, 'Ran': 1, 'ank': 1, 'nks': 1, 'ks\n': 1, 's\n\n': 2, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f s': 1, ' so': 2, 'sol': 2, 'olv': 2, 'lve': 2, 've(': 2, 'e(R': 2, '(R,': 2, 'R, ': 3, ', S': 3, ' S)': 2, 'S):': 1, '):\n': 3, ':\n ': 9, '\n  ': 27, '   ': 138, '  d': 3, ' de': 15, 'dec': 15, 'eck': 15, 'ck ': 3, 'k =': 3, ' = ': 12, '= l': 1, ' li': 1, 'lis': 1, 'ist': 1, 'st(': 1, 't(r': 1, '(ra': 1, 'ran': 3, 'ang': 3, 'nge': 3, 'ge(': 3, 'e(1': 2, '(1,': 2, '1, ': 2, ' R+': 1, 'R+1': 1, '+1)': 1, '1))': 1, ')) ': 1, ') *': 1, ' * ': 5, '* S': 5, ' S\n': 1, 'S\n ': 1, '  n': 2, ' nu': 5, 'num': 6, 'um_': 6, 'm_s': 4, '_sh': 4, 'shu': 10, 'huf': 10, 'uff': 10, 'ffl': 10, 'fle': 10, 'les': 10, 'es ': 5, 's =': 4, '= (': 1, ' (R': 2, '(R ': 3, 'R *': 4, ' S ': 5, 'S -': 4, ' - ': 5, '- R': 3, ' R ': 2, 'R +': 1, ' + ': 6, '+ 1': 3, ' 1)': 2, '1) ': 1, ') /': 2, ' //': 2, '// ': 2, '/ 2': 2, ' 2\n': 1, '2\n\n': 1, '\n\n ': 8, '  s': 4, ' sh': 6, '= [': 1, ' []': 1, '[]\n': 1, ']\n ': 4, '  f': 2, ' fo': 2, 'for': 5, 'or ': 3, 'r _': 1, ' _ ': 1, '_ i': 1, ' in': 5, 'n r': 2, ' ra': 2, 'e((': 1, '((R': 1, ' R)': 2, 'R) ': 2, ' 2)': 1, '2):': 1, '  a': 5, ' a,': 3, 'a, ': 6, ', f': 2, ' fi': 4, 'fir': 4, 'irs': 4, 'rst': 4, 'st ': 2, 't =': 2, '= 0': 2, ' 0,': 2, ', d': 2, 'ck[': 12, 'k[0': 2, '[0]': 2, '0]\n': 2, '  w': 4, ' wh': 4, 'whi': 4, 'hil': 4, 'ile': 4, 'le ': 4, 'e d': 4, 'k[a': 6, '[a]': 4, 'a] ': 4, '] =': 3, ' ==': 3, '== ': 3, '= f': 2, 'st:': 2, 't:\n': 2, ' a ': 4, 'a +': 4, ' +=': 4, '+= ': 4, '= 1': 4, ' 1\n': 5, '1\n\n': 4, ' se': 3, 'sec': 3, 'eco': 3, 'con': 3, 'ond': 3, 'd =': 1, '= d': 3, 'a]\n': 2, '= s': 3, 'nd:': 2, 'd:\n': 2, '  b': 2, ' b ': 4, 'b =': 1, '= a': 1, '1\n ': 1, 'k[b': 2, '[b]': 1, 'b] ': 2, '] !': 1, ' !=': 1, '!= ': 1, 'b +': 1, 'es.': 2, 's.a': 2, '.ap': 2, 'app': 2, 'ppe': 2, 'pen': 2, 'end': 2, 'nd(': 2, 'd((': 2, '((a': 2, '(a,': 3, ', b': 3, 'b -': 1, '- a': 2, ' a)': 2, 'a))': 2, '))\n': 5, ')\n ': 4, '[a:': 2, 'a:b': 1, ':b]': 1, '] +': 3, '+ d': 3, 'k[:': 2, '[:a': 2, ':a]': 2, '[b:': 1, 'b:]': 1, ':]\n': 1, ']\n\n': 2, '  i': 1, ' if': 1, 'if ': 1, 'f (': 1, ') %': 1, ' % ': 1, '% 2': 1, ' 2:': 1, '2:\n': 1, 'a:]': 1, ':] ': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n n': 1, 'es,': 2, 's, ': 2, ', s': 2, 'es\n': 1, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'm_c': 2, '_ca': 2, 'cas': 4, 'ase': 5, 'ses': 2, '= i': 1, 'int': 4, 'nt(': 3, 't(i': 1, '(in': 2, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 3, '())': 2, ')\nf': 1, '\nfo': 1, 'r c': 1, ' ca': 1, 'se ': 2, 'e i': 1, ', n': 2, 's +': 1, '1):': 1, '  R': 1, ' R,': 1, 'S =': 1, '= m': 1, ' ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, 't, ': 1, ', i': 1, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, ')\n\n': 1, 'S)\n': 1, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 2, ""t('"": 2, ""('C"": 1, ""'Ca"": 1, 'Cas': 1, 'e #': 1, ' #{': 1, '#{}': 1, '{}:': 1, '}: ': 1, ': {': 1, ' {}': 2, ""{}'"": 2, ""}'."": 2, ""'.f"": 2, '.fo': 2, 'orm': 2, 'rma': 2, 'mat': 2, 'at(': 2, 't(c': 1, '(ca': 1, 'se,': 1, 'e, ': 1, 'es)': 1, 's))': 1, 'r a': 1, 'b i': 1, 'n s': 1, 'es:': 1, 's:\n': 1, ""('{"": 1, ""'{}"": 1, '{} ': 1, '} {': 1, 't(a': 1, ' b)': 1, 'b))': 1}"
Nikhil Mahajan,nesting-depth.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'codejam': 1, '2020,': 1, 'qualification': 1, 'round:': 1, 'nesting': 1, 'depth': 3, 'def': 1, 'nest(excess):': 1, 'if': 1, 'excess': 3, '>': 1, '0:': 2, 'return': 3, '*': 2, '""(""': 1, 'elif': 1, '<': 1, '-excess': 1, '"")""': 1, '""""': 2, 'i/o': 1, 'code': 1, 'num_cases': 2, '=': 5, 'int(input())': 1, 'for': 2, 'case': 1, 'in': 2, 'range(1,': 1, '+': 2, '1):': 1, 's': 1, 'list(map(int,': 1, 'input()))': 1, '0': 1, 'result': 3, 'd': 2, 's:': 1, '+=': 2, 'nest(d': 1, '-': 1, 'depth)': 1, 'str(d)': 1, 'nest(-depth)': 1, ""print('case"": 1, '#{}:': 1, ""{}'.format(case,"": 1, 'result))': 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '020': 1, '20,': 1, '0, ': 1, ', Q': 1, ' Qu': 1, 'Qua': 1, 'ual': 1, 'ali': 1, 'lif': 2, 'ifi': 1, 'fic': 1, 'ica': 1, 'cat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n R': 1, ' Ro': 1, 'Rou': 1, 'oun': 1, 'und': 1, 'nd:': 1, 'd: ': 1, ': N': 1, ' Ne': 1, 'Nes': 1, 'est': 4, 'sti': 1, 'tin': 1, 'ing': 1, 'ng ': 1, 'g D': 1, ' De': 1, 'Dep': 1, 'ept': 5, 'pth': 5, 'th\n': 1, 'h\n\n': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f n': 1, ' ne': 3, 'nes': 3, 'st(': 4, 't(e': 1, '(ex': 1, 'exc': 5, 'xce': 5, 'ces': 5, 'ess': 5, 'ss)': 1, 's):': 1, '):\n': 2, ':\n ': 5, '\n  ': 13, '   ': 42, '  i': 1, ' if': 1, 'if ': 2, 'f e': 2, ' ex': 3, 'ss ': 4, 's >': 1, ' > ': 1, '> 0': 1, ' 0:': 2, '0:\n': 2, '  r': 6, ' re': 7, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n e': 1, 's *': 2, ' * ': 2, '* ""': 2, ' ""(': 1, '""(""': 1, '(""\n': 1, '""\n ': 3, '  e': 1, ' el': 1, 'eli': 1, 's <': 1, ' < ': 1, '< 0': 1, 'n -': 1, ' -e': 1, '-ex': 1, ' "")': 1, '"")""': 1, ')""\n': 1, 'n ""': 1, ' """"': 2, '""""\n': 2, '""\n\n': 1, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'num': 2, 'um_': 2, 'm_c': 2, '_ca': 2, 'cas': 4, 'ase': 5, 'ses': 2, 'es ': 2, 's =': 1, ' = ': 5, '= i': 1, ' in': 4, 'int': 3, 'nt(': 2, 't(i': 1, '(in': 2, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 2, '())': 2, '))\n': 2, ')\nf': 1, '\nfo': 1, 'for': 3, 'or ': 2, 'r c': 1, ' ca': 1, 'se ': 2, 'e i': 1, 'in ': 2, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(1': 1, '(1,': 1, '1, ': 1, ', n': 1, ' nu': 1, 's +': 1, ' + ': 2, '+ 1': 1, ' 1)': 1, '1):': 1, '  S': 1, ' S ': 1, 'S =': 1, '= l': 1, ' li': 1, 'lis': 1, 'ist': 1, 't(m': 1, '(ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, 't, ': 1, ', i': 1, ')))': 1, ')\n\n': 2, '\n\n ': 2, '  d': 2, ' de': 3, 'dep': 4, 'th ': 2, 'h =': 2, '= 0': 1, ' 0\n': 1, '0\n ': 1, 'res': 4, 'esu': 4, 'sul': 4, 'ult': 4, 'lt ': 3, 't =': 1, '= ""': 1, '  f': 1, ' fo': 1, 'r d': 1, ' d ': 1, 'd i': 1, 'n S': 1, ' S:': 1, 'S:\n': 1, 't +': 2, ' +=': 2, '+= ': 2, '= n': 2, 't(d': 1, '(d ': 1, 'd -': 1, ' - ': 1, '- d': 1, 'th)': 2, 'h) ': 1, ') +': 1, '+ s': 1, ' st': 1, 'str': 1, 'tr(': 1, 'r(d': 1, '(d)': 1, 'd)\n': 1, ')\n ': 1, '= d': 1, ' d\n': 1, 'd\n ': 1, 't(-': 1, '(-d': 1, '-de': 1, 'h)\n': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, ""t('"": 1, ""('C"": 1, ""'Ca"": 1, 'Cas': 1, 'e #': 1, ' #{': 1, '#{}': 1, '{}:': 1, '}: ': 1, ': {': 1, ' {}': 1, ""{}'"": 1, ""}'."": 1, ""'.f"": 1, '.fo': 1, 'orm': 1, 'rma': 1, 'mat': 1, 'at(': 1, 't(c': 1, '(ca': 1, 'se,': 1, 'e, ': 1, ', r': 1, 'lt)': 1, 't))': 1}"
Nikhil Mahajan,overexcited-fan.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 2, 'codejam': 1, '2020,': 1, 'round': 1, '1c:': 1, 'overexcited': 1, 'fan': 1, 'def': 1, 'solve(x,': 1, 'y,': 2, 'moves):': 1, 't': 4, '=': 4, '0': 1, 'if': 3, 'abs(x)': 2, '+': 3, 'abs(y)': 2, '==': 5, 't:': 2, 'return': 3, 'for': 2, 'm': 6, 'in': 2, 'moves:': 1, '+=': 3, '1': 5, ""'n':"": 1, 'y': 2, 'elif': 3, ""'s':"": 1, '-=': 2, ""'e':"": 1, 'x': 2, ""'w':"": 1, '<=': 1, ""'impossible'"": 1, 'i/o': 1, 'code': 1, 'num_cases': 2, 'int(input())': 1, 'case': 1, 'range(1,': 1, '1):': 1, 'x,': 1, 'input().split()': 1, 'time_to_intercept': 1, 'solve(int(x),': 1, 'int(y),': 1, 'm)': 1, ""print('case"": 1, '#{}:': 1, ""{}'.format(case,"": 1, 'time_to_intercept))': 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '020': 1, '20,': 1, '0, ': 1, ', R': 1, ' Ro': 1, 'Rou': 1, 'oun': 1, 'und': 1, 'nd ': 1, 'd 1': 1, ' 1C': 1, '1C:': 1, 'C: ': 1, ': O': 1, ' Ov': 1, 'Ove': 1, 'ver': 1, 'ere': 1, 'rex': 1, 'exc': 1, 'xci': 1, 'cit': 1, 'ite': 1, 'ted': 1, 'ed ': 1, 'd F': 1, ' Fa': 1, 'Fan': 1, 'an\n': 1, 'n\n\n': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f s': 1, ' so': 2, 'sol': 2, 'olv': 2, 'lve': 2, 've(': 2, 'e(x': 1, '(x,': 1, 'x, ': 1, ', y': 1, ' y,': 1, 'y, ': 1, ', m': 1, ' mo': 2, 'mov': 2, 'ove': 2, 'ves': 2, 'es)': 1, 's):': 1, '):\n': 2, ':\n ': 9, '\n  ': 19, '   ': 106, '  t': 3, ' t ': 2, 't =': 2, ' = ': 4, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  i': 3, ' if': 3, 'if ': 6, 'f a': 2, ' ab': 4, 'abs': 4, 'bs(': 4, 's(x': 2, '(x)': 2, 'x) ': 2, ') +': 2, ' + ': 3, '+ a': 2, 's(y': 2, '(y)': 2, 'y) ': 2, ') =': 1, ' ==': 5, '== ': 5, '= t': 2, ' t:': 2, 't:\n': 2, '  r': 3, ' re': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n t': 2, ' t\n': 2, 't\n\n': 2, '\n\n ': 5, '  f': 1, ' fo': 1, 'for': 3, 'or ': 2, 'r m': 1, ' m ': 5, 'm i': 1, ' in': 5, 'in ': 2, 'n m': 1, 'es:': 1, 's:\n': 1, 't +': 1, ' +=': 3, '+= ': 3, '= 1': 5, ' 1\n': 5, '1\n\n': 2, 'f m': 4, 'm =': 4, ""= '"": 4, "" 'N"": 1, ""'N'"": 1, ""N':"": 1, ""':\n"": 4, '  y': 2, ' y ': 2, 'y +': 1, '1\n ': 3, '  e': 3, ' el': 3, 'eli': 3, 'lif': 3, "" 'S"": 1, ""'S'"": 1, ""S':"": 1, 'y -': 1, ' -=': 2, '-= ': 2, "" 'E"": 1, ""'E'"": 1, ""E':"": 1, '  x': 2, ' x ': 2, 'x +': 1, "" 'W"": 1, ""'W'"": 1, ""W':"": 1, 'x -': 1, ') <': 1, ' <=': 1, '<= ': 1, ""n '"": 1, "" 'I"": 1, ""'IM"": 1, 'IMP': 1, 'MPO': 1, 'POS': 1, 'OSS': 1, 'SSI': 1, 'SIB': 1, 'IBL': 1, 'BLE': 1, ""LE'"": 1, ""E'\n"": 1, ""'\n\n"": 1, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'num': 2, 'um_': 2, 'm_c': 2, '_ca': 2, 'cas': 4, 'ase': 5, 'ses': 2, 'es ': 2, 's =': 1, '= i': 2, 'int': 6, 'nt(': 4, 't(i': 1, '(in': 2, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 3, '())': 1, '))\n': 1, ')\nf': 1, '\nfo': 1, 'r c': 1, ' ca': 1, 'se ': 2, 'e i': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(1': 1, '(1,': 1, '1, ': 1, ', n': 1, ' nu': 1, 's +': 1, '+ 1': 1, ' 1)': 1, '1):': 1, '  X': 1, ' X,': 1, 'X, ': 1, ', Y': 1, ' Y,': 1, 'Y, ': 1, ', M': 2, ' M ': 1, 'M =': 1, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, '()\n': 1, ')\n\n': 1, ' ti': 2, 'tim': 2, 'ime': 2, 'me_': 2, 'e_t': 2, '_to': 2, 'to_': 2, 'o_i': 2, '_in': 2, 'nte': 2, 'ter': 2, 'erc': 2, 'rce': 2, 'cep': 2, 'ept': 2, 'pt ': 1, '= s': 1, 'e(i': 1, 't(X': 1, '(X)': 1, 'X),': 1, '), ': 2, ', i': 1, 't(Y': 1, '(Y)': 1, 'Y),': 1, ' M)': 1, 'M)\n': 1, ')\n ': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, ""t('"": 1, ""('C"": 1, ""'Ca"": 1, 'Cas': 1, 'e #': 1, ' #{': 1, '#{}': 1, '{}:': 1, '}: ': 1, ': {': 1, ' {}': 1, ""{}'"": 1, ""}'."": 1, ""'.f"": 1, '.fo': 1, 'orm': 1, 'rma': 1, 'mat': 1, 'at(': 1, 't(c': 1, '(ca': 1, 'se,': 1, 'e, ': 1, ', t': 1, 'pt)': 1, 't))': 1}"
Nikhil Mahajan,overrandomized.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'codejam': 1, '2020,': 1, 'round': 1, '1c:': 1, 'overrandomized': 1, 'from': 1, 'collections': 1, 'import': 1, 'counter': 1, 'def': 1, 'solve(responses):': 1, 'all_digits': 1, '=': 6, 'set().union(*responses)': 1, 'first_digits': 1, 'counter([r[0]': 1, 'for': 4, 'r': 1, 'in': 4, 'responses])': 1, 'nonzero': 2, ""''.join(d"": 1, 'd,': 1, 'c': 1, 'first_digits.most_common())': 1, 'return': 1, 'all_digits.difference(nonzero).pop()': 1, '+': 2, 'i/o': 1, 'code': 1, 'num_cases': 2, 'int(input())': 2, 'case': 1, 'range(1,': 1, '1):': 1, 'u': 1, 'responses': 1, '[input().split()[-1]': 1, '_': 1, 'range(10**4)]': 1, ""print('case"": 1, '#{}:': 1, ""{}'.format(case,"": 1, 'solve(responses)))': 1}","{'# C': 1, ' Co': 4, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '020': 1, '20,': 1, '0, ': 1, ', R': 1, ' Ro': 1, 'Rou': 1, 'oun': 3, 'und': 1, 'nd ': 1, 'd 1': 1, ' 1C': 1, '1C:': 1, 'C: ': 1, ': O': 1, ' Ov': 1, 'Ove': 1, 'ver': 1, 'err': 1, 'rra': 1, 'ran': 3, 'and': 1, 'ndo': 1, 'dom': 1, 'omi': 1, 'miz': 1, 'ize': 1, 'zed': 1, 'ed\n': 1, 'd\n\n': 1, '\n\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm c': 1, ' co': 1, 'col': 1, 'oll': 1, 'lle': 1, 'lec': 1, 'ect': 1, 'cti': 1, 'tio': 1, 'ion': 2, 'ons': 6, 'ns ': 1, 's i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't C': 1, 'Cou': 2, 'unt': 2, 'nte': 2, 'ter': 2, 'er\n': 1, 'r\n\n': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f s': 1, ' so': 2, 'sol': 2, 'olv': 2, 'lve': 2, 've(': 2, 'e(r': 2, '(re': 2, 'res': 5, 'esp': 5, 'spo': 5, 'pon': 5, 'nse': 5, 'ses': 7, 'es)': 3, 's):': 1, '):\n': 2, ':\n ': 2, '\n  ': 7, '   ': 14, '  a': 1, ' al': 2, 'all': 2, 'll_': 2, 'l_d': 2, '_di': 4, 'dig': 4, 'igi': 4, 'git': 4, 'its': 4, 'ts ': 2, 's =': 4, ' = ': 6, '= s': 1, ' se': 1, 'set': 1, 'et(': 1, 't()': 5, '().': 2, ').u': 1, '.un': 1, 'uni': 1, 'nio': 1, 'on(': 2, 'n(*': 1, '(*r': 1, '*re': 1, 's)\n': 1, ')\n ': 4, '  f': 1, ' fi': 2, 'fir': 2, 'irs': 2, 'rst': 2, 'st_': 3, 't_d': 2, '= C': 1, 'er(': 1, 'r([': 1, '([r': 1, '[r[': 1, 'r[0': 1, '[0]': 1, '0] ': 1, '] f': 2, ' fo': 3, 'for': 5, 'or ': 4, 'r r': 1, ' r ': 1, 'r i': 1, ' in': 6, 'in ': 4, 'n r': 3, ' re': 3, 'es]': 1, 's])': 1, '])\n': 1, '  n': 1, ' no': 2, 'non': 3, 'onz': 3, 'nze': 3, 'zer': 3, 'ero': 3, 'ro ': 1, 'o =': 1, ""= '"": 1, "" ''"": 1, ""''."": 1, ""'.j"": 1, '.jo': 1, 'joi': 1, 'oin': 1, 'in(': 1, 'n(d': 1, '(d ': 1, 'd f': 1, 'r d': 1, ' d,': 1, 'd, ': 1, ', c': 1, ' c ': 1, 'c i': 1, 'n f': 1, 'ts.': 2, 's.m': 1, '.mo': 1, 'mos': 1, 'ost': 1, 't_c': 1, '_co': 1, 'com': 1, 'omm': 1, 'mmo': 1, 'mon': 1, 'n()': 1, '())': 3, '))\n': 3, '  r': 2, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n a': 1, 's.d': 1, '.di': 1, 'dif': 1, 'iff': 1, 'ffe': 1, 'fer': 1, 'ere': 1, 'ren': 1, 'enc': 1, 'nce': 1, 'ce(': 1, 'e(n': 1, '(no': 1, 'ro)': 1, 'o).': 1, ').p': 1, '.po': 1, 'pop': 1, 'op(': 1, 'p()': 1, '() ': 1, ') +': 1, ' + ': 2, '+ n': 1, 'ro\n': 1, 'o\n\n': 1, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'num': 2, 'um_': 2, 'm_c': 2, '_ca': 2, 'cas': 4, 'ase': 5, 'es ': 3, '= i': 2, 'int': 3, 'nt(': 3, 't(i': 2, '(in': 2, 'inp': 3, 'npu': 3, 'put': 3, 'ut(': 3, ')\nf': 1, '\nfo': 1, 'r c': 1, ' ca': 1, 'se ': 2, 'e i': 1, ' ra': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(1': 2, '(1,': 1, '1, ': 1, ', n': 1, ' nu': 1, 's +': 1, '+ 1': 1, ' 1)': 1, '1):': 1, '  U': 1, ' U ': 1, 'U =': 1, '= [': 1, ' [i': 1, '[in': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, '()[': 1, ')[-': 1, '[-1': 1, '-1]': 1, '1] ': 1, 'r _': 1, ' _ ': 1, '_ i': 1, '(10': 1, '10*': 1, '0**': 1, '**4': 1, '*4)': 1, '4)]': 1, ')]\n': 1, ']\n ': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, ""t('"": 1, ""('C"": 1, ""'Ca"": 1, 'Cas': 1, 'e #': 1, ' #{': 1, '#{}': 1, '{}:': 1, '}: ': 1, ': {': 1, ' {}': 1, ""{}'"": 1, ""}'."": 1, ""'.f"": 1, '.fo': 1, 'orm': 1, 'rma': 1, 'mat': 1, 'at(': 1, 't(c': 1, '(ca': 1, 'se,': 1, 'e, ': 1, ', s': 1, 's))': 1, ')))': 1}"
Nikhil Mahajan,oversized-pancake-choppers.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 2, 'codejam': 1, '2020,': 1, 'round': 1, '1c:': 1, 'oversized': 1, 'pancake': 1, 'choppers': 1, 'from': 3, 'collections': 1, 'import': 3, 'defaultdict': 1, 'functools': 1, 'reduce': 1, 'math': 1, 'gcd': 1, 'def': 2, 'binary_search(l,': 1, 'r,': 1, 'func):': 1, 'while': 1, 'l': 3, '<=': 2, 'r:': 1, 'm': 3, '=': 12, '(l': 1, '+': 6, 'r)': 1, '//': 5, '2': 1, 'if': 4, 'func(m):': 1, '1': 6, 'else:': 1, 'r': 1, '-': 4, 'return': 3, 'solve(n,': 2, 'd,': 2, 'a):': 1, 'n': 1, '==': 2, 'or': 1, 'd': 6, '1:': 1, 'limit': 2, 'binary_search(1,': 1, 'a[-1],': 1, 'lambda': 1, 's:': 1, 'sum(a': 1, 's': 1, 'for': 4, 'a': 3, 'in': 4, 'a)': 1, '>=': 1, 'd)': 1, 'fully_usable_slices': 1, 'defaultdict(int)': 2, 'num_target_slices': 1, 'c': 4, 'range(1,': 2, '1):': 2, 'a:': 1, 'g': 1, 'gcd(a,': 1, 'c)': 1, 'size': 1, '(a': 1, 'g,': 1, 'g)': 1, 'size[0]': 1, '>': 1, '*': 3, 'size[1]:': 1, 'break': 1, 'num_target_slices[size]': 2, 'd:': 1, 'fully_usable_slices[size]': 1, '+=': 2, 'max(fully_usable_slices.values())': 1, 'i/o': 1, 'code': 1, 'num_cases': 2, 'int(input())': 1, 'case': 1, 'n,': 1, 'map(int,': 1, 'input().split())': 1, 'lcm': 2, 'reduce(lambda': 1, 'x,': 1, 'y:': 1, 'abs(x': 1, 'y)': 1, 'gcd(x,': 1, 'y),': 1, 'range(2,': 1, '1))': 1, 'sorted(map(lambda': 1, 'x:': 1, 'int(x),': 1, 'input().split()))': 1, ""print('case"": 1, '#{}:': 1, ""{}'.format(case,"": 1, 'a)))': 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '020': 1, '20,': 1, '0, ': 1, ', R': 2, ' Ro': 1, 'Rou': 1, 'oun': 1, 'und': 1, 'nd ': 1, 'd 1': 1, ' 1C': 1, '1C:': 1, 'C: ': 1, ': O': 1, ' Ov': 1, 'Ove': 1, 'ver': 1, 'ers': 2, 'rsi': 1, 'siz': 7, 'ize': 7, 'zed': 1, 'ed ': 1, 'd P': 1, ' Pa': 1, 'Pan': 1, 'anc': 1, 'nca': 1, 'cak': 1, 'ake': 1, 'ke ': 1, 'e C': 1, ' Ch': 1, 'Cho': 1, 'hop': 1, 'opp': 1, 'ppe': 1, 'per': 1, 'rs\n': 1, 's\n\n': 1, '\n\nf': 1, '\nfr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm c': 1, ' co': 1, 'col': 1, 'oll': 1, 'lle': 1, 'lec': 1, 'ect': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'ons': 1, 'ns ': 1, 's i': 2, ' im': 3, 'imp': 3, 'mpo': 3, 'por': 3, 'ort': 4, 'rt ': 3, 't d': 1, ' de': 3, 'def': 5, 'efa': 3, 'fau': 3, 'aul': 3, 'ult': 3, 'ltd': 3, 'tdi': 3, 'dic': 3, 'ict': 3, 'ct\n': 1, 't\nf': 1, 'm f': 1, ' fu': 5, 'fun': 3, 'unc': 3, 'nct': 1, 'cto': 1, 'too': 1, 'ool': 1, 'ols': 1, 'ls ': 1, 't r': 1, ' re': 5, 'red': 2, 'edu': 2, 'duc': 2, 'uce': 2, 'ce\n': 1, 'e\nf': 1, 'm m': 1, ' ma': 3, 'mat': 2, 'ath': 1, 'th ': 1, 'h i': 1, 't g': 1, ' gc': 3, 'gcd': 3, 'cd\n': 1, 'd\n\n': 1, '\n\n\n': 3, '\n\nd': 2, '\nde': 2, 'ef ': 2, 'f b': 1, ' bi': 2, 'bin': 2, 'ina': 2, 'nar': 2, 'ary': 2, 'ry_': 2, 'y_s': 2, '_se': 2, 'sea': 2, 'ear': 2, 'arc': 2, 'rch': 2, 'ch(': 2, 'h(L': 1, '(L,': 1, 'L, ': 1, ' R,': 1, 'R, ': 1, ', f': 1, 'nc)': 1, 'c):': 1, '):\n': 5, ':\n ': 11, '\n  ': 26, '   ': 156, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e L': 1, ' L ': 3, 'L <': 1, ' <=': 2, '<= ': 2, '= R': 1, ' R:': 1, 'R:\n': 1, '  m': 1, ' m ': 3, 'm =': 2, ' = ': 12, '= (': 2, ' (L': 1, '(L ': 1, 'L +': 1, ' + ': 6, '+ R': 1, ' R)': 1, 'R) ': 1, ') /': 2, ' //': 5, '// ': 5, '/ 2': 1, ' 2\n': 1, '2\n ': 1, '  i': 4, ' if': 4, 'if ': 4, 'f f': 1, 'nc(': 1, 'c(m': 1, '(m)': 1, 'm):': 1, '  L': 1, 'L =': 1, '= m': 3, 'm +': 1, '+ 1': 4, ' 1\n': 5, '1\n ': 3, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, '  R': 1, ' R ': 1, 'R =': 1, 'm -': 1, ' - ': 4, '- 1': 3, '  r': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n L': 1, 'L -': 1, '1\n\n': 2, 'f s': 2, ' so': 3, 'sol': 2, 'olv': 2, 'lve': 2, 've(': 2, 'e(N': 2, '(N,': 2, 'N, ': 3, ', D': 5, ' D,': 2, 'D, ': 2, ', A': 3, ' A)': 3, 'A):': 1, 'f N': 1, ' N ': 1, 'N =': 1, ' ==': 2, '== ': 2, '= 1': 3, ' 1 ': 1, '1 o': 1, ' or': 1, 'or ': 5, 'r D': 1, ' D ': 6, 'D =': 2, ' 1:': 1, '1:\n': 1, 'n D': 2, 'D -': 2, '\n\n ': 7, '  l': 2, ' li': 2, 'lim': 2, 'imi': 2, 'mit': 2, 'it ': 2, 't =': 1, '= b': 1, 'h(1': 1, '(1,': 3, '1, ': 3, ' A[': 1, 'A[-': 1, '[-1': 1, '-1]': 1, '1],': 1, '], ': 1, ', l': 1, ' la': 1, 'lam': 3, 'amb': 3, 'mbd': 3, 'bda': 3, 'da ': 3, 'a s': 1, ' s:': 1, 's: ': 1, ': s': 1, ' su': 1, 'sum': 1, 'um(': 1, 'm(a': 1, '(a ': 2, 'a /': 2, '/ s': 1, ' s ': 1, 's f': 1, ' fo': 3, 'for': 5, 'r a': 2, ' a ': 2, 'a i': 2, ' in': 8, 'in ': 4, 'n A': 2, 'A) ': 1, ') >': 1, ' >=': 1, '>= ': 1, '= D': 2, ' D)': 1, 'D)\n': 1, ')\n\n': 6, '  f': 4, 'ful': 3, 'ull': 3, 'lly': 3, 'ly_': 3, 'y_u': 3, '_us': 3, 'usa': 3, 'sab': 3, 'abl': 3, 'ble': 3, 'le_': 3, 'e_s': 3, '_sl': 6, 'sli': 6, 'lic': 6, 'ice': 6, 'ces': 6, 'es ': 4, 's =': 3, '= d': 2, 'ct(': 2, 't(i': 3, '(in': 4, 'int': 6, 'nt)': 2, 't)\n': 2, ')\n ': 3, '  n': 2, ' nu': 4, 'num': 5, 'um_': 5, 'm_t': 3, '_ta': 3, 'tar': 3, 'arg': 3, 'rge': 3, 'get': 3, 'et_': 3, 't_s': 3, 'r c': 2, ' c ': 3, 'c i': 1, 'n r': 2, ' ra': 3, 'ran': 3, 'ang': 3, 'nge': 3, 'ge(': 3, 'e(1': 2, 'D +': 2, ' 1)': 3, '1):': 2, ' A:': 1, 'A:\n': 1, '  g': 1, ' g ': 1, 'g =': 1, '= g': 1, 'cd(': 2, 'd(a': 1, '(a,': 1, 'a, ': 1, ', c': 2, ' c)': 1, 'c)\n': 1, '  s': 1, ' si': 3, 'ze ': 1, 'e =': 1, ' (a': 1, '/ g': 3, ' g,': 1, 'g, ': 1, 'c /': 1, ' g)': 1, 'g)\n': 1, 'ze[': 2, 'e[0': 1, '[0]': 1, '0] ': 1, '] >': 1, ' > ': 1, '> l': 1, 't *': 1, ' * ': 3, '* s': 1, 'e[1': 1, '[1]': 1, '1]:': 1, ']:\n': 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n ': 1, 'f n': 1, 'es[': 3, 's[s': 3, '[si': 3, 'ze]': 3, 'e] ': 3, '] +': 3, '+ c': 1, 'c <': 1, ' D:': 1, 'D:\n': 1, ' +=': 2, '+= ': 2, '= c': 1, ' c\n': 1, 'c\n\n': 1, '- m': 1, 'max': 1, 'ax(': 1, 'x(f': 1, '(fu': 1, 'es.': 1, 's.v': 1, '.va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ues': 1, 'es(': 1, 's()': 1, '())': 4, '))\n': 5, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'm_c': 2, '_ca': 2, 'cas': 4, 'ase': 5, 'ses': 2, '= i': 1, 'nt(': 3, 'inp': 3, 'npu': 3, 'put': 3, 'ut(': 3, 't()': 5, ')\nf': 1, '\nfo': 1, ' ca': 1, 'se ': 2, 'e i': 1, ', n': 1, 's +': 1, '  N': 1, ' N,': 1, 'map': 2, 'ap(': 2, 'p(i': 1, 'nt,': 1, 't, ': 1, ', i': 2, '().': 2, ').s': 2, '.sp': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'it(': 2, ' lc': 2, 'lcm': 2, 'cm ': 2, '= r': 1, 'ce(': 1, 'e(l': 1, '(la': 2, 'a x': 2, ' x,': 1, 'x, ': 2, ', y': 2, ' y:': 1, 'y: ': 1, ': a': 1, ' ab': 1, 'abs': 1, 'bs(': 1, 's(x': 1, '(x ': 1, 'x *': 1, '* y': 1, ' y)': 2, 'y) ': 1, 'd(x': 1, '(x,': 1, 'y),': 1, '), ': 2, ', r': 1, 'e(2': 1, '(2,': 1, '2, ': 1, '1))': 1, '  A': 1, ' A ': 1, 'A =': 1, '= s': 1, 'sor': 1, 'rte': 1, 'ted': 1, 'ed(': 1, 'd(m': 1, '(ma': 1, 'p(l': 1, ' x:': 1, 'x: ': 1, ': l': 1, 'm *': 1, '* i': 1, 't(x': 1, '(x)': 1, 'x),': 1, ')))': 2, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, ""t('"": 1, ""('C"": 1, ""'Ca"": 1, 'Cas': 1, 'e #': 1, ' #{': 1, '#{}': 1, '{}:': 1, '}: ': 1, ': {': 1, ' {}': 1, ""{}'"": 1, ""}'."": 1, ""'.f"": 1, '.fo': 1, 'orm': 1, 'rma': 1, 'at(': 1, 't(c': 1, '(ca': 1, 'se,': 1, 'e, ': 1, ', s': 1, 'A))': 1}"
Nikhil Mahajan,parenting-partnering-returns.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 2, 'codejam': 1, '2020,': 1, 'qualification': 1, 'round:': 1, 'parenting': 1, 'partnering': 1, 'returns': 1, 'from': 1, 'collections': 1, 'import': 1, 'namedtuple': 1, 'activity': 1, '=': 12, 'namedtuple(""activity"",': 1, '[""id"",': 1, '""start"",': 1, '""end""])': 1, 'i/o': 1, 'code': 1, 'num_cases': 2, 'int(input())': 2, 'for': 3, 'case': 1, 'in': 4, 'range(1,': 1, '+': 1, '1):': 1, 'n': 2, 'activities': 1, '[]': 1, 'i': 1, 'range(n):': 1, 'a,': 2, 'b': 1, 'map(int,': 1, 'input().split())': 1, 'activities.append(activity(i,': 1, 'b))': 1, 'activities.sort(key=lambda': 1, 'x:': 1, 'x.start)': 1, 'c,': 1, 'j': 3, '0,': 1, '0': 1, 'assignments': 1, ""['*']"": 1, '*': 1, 'a': 1, 'activities:': 1, 'if': 2, 'c': 2, '<=': 2, 'a.start:': 2, 'assignments[a.id]': 2, ""'c'"": 1, 'a.end': 2, 'elif': 1, ""'j'"": 1, 'else:': 2, 'break': 1, 'result': 1, '"""".join(assignments)': 1, ""'*'"": 1, 'result:': 1, ""print('case"": 2, '#{}:': 2, ""impossible'.format(case))"": 1, ""{}'.format(case,"": 1, 'result))': 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '020': 1, '20,': 1, '0, ': 2, ', Q': 1, ' Qu': 1, 'Qua': 1, 'ual': 1, 'ali': 1, 'lif': 2, 'ifi': 1, 'fic': 1, 'ica': 1, 'cat': 1, 'ati': 1, 'tio': 2, 'ion': 2, 'on ': 1, 'n R': 1, ' Ro': 1, 'Rou': 1, 'oun': 1, 'und': 1, 'nd:': 1, 'd: ': 1, ': P': 1, ' Pa': 2, 'Par': 2, 'are': 1, 'ren': 1, 'ent': 5, 'nti': 1, 'tin': 1, 'ing': 2, 'ng ': 2, 'g P': 1, 'art': 5, 'rtn': 1, 'tne': 1, 'ner': 1, 'eri': 1, 'rin': 3, 'g R': 1, ' Re': 1, 'Ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rns': 1, 'ns\n': 1, 's\n\n': 1, '\n\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm c': 1, ' co': 1, 'col': 1, 'oll': 1, 'lle': 1, 'lec': 1, 'ect': 1, 'cti': 8, 'ons': 1, 'ns ': 1, 's i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 2, 'rt ': 1, 't n': 1, ' na': 2, 'nam': 2, 'ame': 2, 'med': 2, 'edt': 2, 'dtu': 2, 'tup': 2, 'upl': 2, 'ple': 2, 'le\n': 1, 'e\n\n': 1, '\n\nA': 1, '\nAc': 1, 'Act': 3, 'tiv': 7, 'ivi': 7, 'vit': 7, 'ity': 3, 'ty ': 1, 'y =': 1, ' = ': 12, '= n': 1, 'le(': 1, 'e(""': 1, '(""A': 1, '""Ac': 1, 'ty""': 1, 'y"",': 1, '"", ': 3, ', [': 1, ' [""': 1, '[""i': 1, '""id': 1, 'id""': 1, 'd"",': 1, ', ""': 2, ' ""s': 1, '""st': 1, 'sta': 4, 'tar': 4, 'rt""': 1, 't"",': 1, ' ""e': 1, '""en': 1, 'end': 4, 'nd""': 1, 'd""]': 1, '""])': 1, '])\n': 1, ')\n\n': 4, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'num': 2, 'um_': 2, 'm_c': 2, '_ca': 2, 'cas': 5, 'ase': 7, 'ses': 2, 'es ': 3, 's =': 3, '= i': 2, ' in': 7, 'int': 5, 'nt(': 4, 't(i': 2, '(in': 3, 'inp': 3, 'npu': 3, 'put': 3, 'ut(': 3, 't()': 4, '())': 3, '))\n': 5, ')\nf': 1, '\nfo': 1, 'for': 5, 'or ': 3, 'r c': 1, ' ca': 1, 'se ': 3, 'e i': 1, 'in ': 4, 'n r': 3, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(1': 1, '(1,': 1, '1, ': 1, ', n': 1, ' nu': 1, 's +': 1, ' + ': 1, '+ 1': 1, ' 1)': 1, '1):': 1, '):\n': 2, ':\n ': 8, '\n  ': 22, '   ': 112, '  N': 1, ' N ': 1, 'N =': 1, '\n\n ': 4, '  a': 7, ' ac': 4, 'act': 4, 'iti': 4, 'tie': 4, 'ies': 4, '= [': 2, ' []': 1, '[]\n': 1, ']\n ': 1, '  f': 2, ' fo': 2, 'r i': 1, ' i ': 1, 'i i': 1, 'e(N': 1, '(N)': 1, 'N):': 1, ' a,': 2, 'a, ': 2, ', b': 2, ' b ': 1, 'b =': 1, '= m': 1, ' ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, 't, ': 1, ', i': 1, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, ')\n ': 3, 'es.': 2, 's.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'nd(': 1, 'd(A': 1, '(Ac': 1, 'ty(': 1, 'y(i': 1, '(i,': 1, 'i, ': 1, ', a': 1, ' b)': 1, 'b))': 1, 's.s': 1, '.so': 1, 'sor': 1, 'rt(': 1, 't(k': 1, '(ke': 1, 'key': 1, 'ey=': 1, 'y=l': 1, '=la': 1, 'lam': 1, 'amb': 1, 'mbd': 1, 'bda': 1, 'da ': 1, 'a x': 1, ' x:': 1, 'x: ': 1, ': x': 1, ' x.': 1, 'x.s': 1, '.st': 3, 'rt)': 1, 't)\n': 1, '  C': 2, ' C,': 1, 'C, ': 1, ', J': 1, ' J ': 3, 'J =': 2, '= 0': 1, ' 0,': 1, ', 0': 1, ' 0\n': 1, '0\n ': 1, ' as': 3, 'ass': 4, 'ssi': 4, 'sig': 4, 'ign': 4, 'gnm': 4, 'nme': 4, 'men': 4, 'nts': 4, 'ts ': 1, "" ['"": 1, ""['*"": 1, ""'*'"": 2, ""*']"": 1, ""'] "": 1, '] *': 1, ' * ': 1, '* N': 1, ' N\n': 1, 'N\n ': 1, 'r a': 1, ' a ': 1, 'a i': 1, 'n a': 1, 'es:': 1, 's:\n': 1, '  i': 2, ' if': 2, 'if ': 3, 'f C': 1, ' C ': 2, 'C <': 1, ' <=': 2, '<= ': 2, '= a': 4, ' a.': 4, 'a.s': 2, 'rt:': 2, 't:\n': 3, 'ts[': 2, 's[a': 2, '[a.': 2, 'a.i': 2, '.id': 2, 'id]': 2, 'd] ': 2, '] =': 2, ""= '"": 2, "" 'C"": 1, ""'C'"": 1, ""C'\n"": 1, ""'\n "": 2, 'C =': 1, 'a.e': 2, '.en': 2, 'nd\n': 2, 'd\n ': 2, '  e': 3, ' el': 3, 'eli': 1, 'f J': 1, 'J <': 1, "" 'J"": 1, ""'J'"": 1, ""J'\n"": 1, '  J': 1, 'els': 2, 'lse': 2, 'se:': 2, 'e:\n': 2, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n\n': 1, '  r': 1, ' re': 3, 'res': 3, 'esu': 3, 'sul': 3, 'ult': 3, 'lt ': 1, 't =': 1, '= ""': 1, ' """"': 1, '"""".': 1, '"".j': 1, '.jo': 1, 'joi': 1, 'oin': 1, 'in(': 1, 'n(a': 1, '(as': 1, 'ts)': 1, 's)\n': 1, ""f '"": 1, "" '*"": 1, ""*' "": 1, ""' i"": 1, 'lt:': 1, '  p': 2, ' pr': 2, 'pri': 2, ""t('"": 2, ""('C"": 2, ""'Ca"": 2, 'Cas': 2, 'e #': 2, ' #{': 2, '#{}': 2, '{}:': 2, '}: ': 2, ': I': 1, ' IM': 1, 'IMP': 1, 'MPO': 1, 'POS': 1, 'OSS': 1, 'SSI': 1, 'SIB': 1, 'IBL': 1, 'BLE': 1, ""LE'"": 1, ""E'."": 1, ""'.f"": 2, '.fo': 2, 'orm': 2, 'rma': 2, 'mat': 2, 'at(': 2, 't(c': 2, '(ca': 2, 'se)': 1, 'e))': 1, ': {': 1, ' {}': 1, ""{}'"": 1, ""}'."": 1, 'se,': 1, 'e, ': 1, ', r': 1, 'lt)': 1, 't))': 1}"
Nikhil Mahajan,pascal-walk.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'codejam': 1, '2020,': 1, 'round': 1, '1a:': 1, 'pascal': 1, 'walk': 8, 'def': 1, 'pascal_walk(n):': 1, 'rows': 1, '=': 9, '[b': 1, '==': 3, ""'1'"": 1, 'for': 7, 'b': 2, 'in': 7, 'format(n': 1, '-': 3, 'n.bit_length(),': 1, '""b"")][::-1]': 1, '[]': 1, 'walk_sum': 3, '0': 1, 'i,': 1, 'enumerate(rows,': 1, '1):': 2, 'row_walk': 3, '[(i,': 3, 'k)': 1, 'k': 2, 'range(1,': 2, 'i': 3, '+': 5, '1)]': 1, 'if': 3, 'and': 1, 'walk[-1][0]': 2, 'walk[-1][-1]:': 1, 'row_walk[::-1]': 1, 'b:': 1, '+=': 6, '2**(i': 1, '1)': 2, 'else:': 2, 'row_walk[:1]': 1, '1': 2, 'excess_rows': 1, 'range(walk[-1][0]': 1, '1,': 1, 'n': 2, 'walk_sum)': 1, 'walk[-1][-1]': 1, '1:': 1, 'excess_rows]': 2, 'i)': 1, 'return': 1, 'i/o': 1, 'code': 1, 'num_cases': 2, 'int(input())': 2, 'case': 1, 'result': 1, 'pascal_walk(n)': 1, ""print('case"": 1, ""#{}:'.format(case))"": 1, 'r,': 1, 'result:': 1, ""print('{}"": 1, ""{}'.format(r,"": 1, 'k))': 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '020': 1, '20,': 1, '0, ': 1, ', R': 1, ' Ro': 1, 'Rou': 1, 'oun': 1, 'und': 1, 'nd ': 2, 'd 1': 1, ' 1A': 1, '1A:': 1, 'A: ': 1, ': P': 1, ' Pa': 1, 'Pas': 1, 'asc': 3, 'sca': 3, 'cal': 3, 'al ': 1, 'l W': 1, ' Wa': 1, 'Wal': 1, 'alk': 24, 'lk\n': 3, 'k\n\n': 2, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f p': 1, ' pa': 2, 'pas': 2, 'al_': 2, 'l_w': 2, '_wa': 7, 'wal': 23, 'lk(': 2, 'k(N': 2, '(N)': 2, 'N):': 1, '):\n': 3, ':\n ': 9, '\n  ': 25, '   ': 138, '  r': 5, ' ro': 6, 'row': 10, 'ows': 5, 'ws ': 2, 's =': 3, ' = ': 9, '= [': 5, ' [b': 1, '[b ': 1, 'b =': 1, ' ==': 3, '== ': 3, ""= '"": 1, "" '1"": 1, ""'1'"": 1, ""1' "": 1, ""' f"": 1, ' fo': 7, 'for': 10, 'or ': 7, 'r b': 1, ' b ': 2, 'b i': 2, ' in': 9, 'in ': 7, 'n f': 1, 'orm': 3, 'rma': 3, 'mat': 3, 'at(': 3, 't(N': 1, '(N ': 1, 'N -': 2, ' - ': 3, '- N': 1, ' N.': 1, 'N.b': 1, '.bi': 1, 'bit': 1, 'it_': 1, 't_l': 1, '_le': 1, 'len': 1, 'eng': 1, 'ngt': 1, 'gth': 1, 'th(': 1, 'h()': 1, '(),': 1, '), ': 1, ', ""': 1, ' ""b': 1, '""b""': 1, 'b"")': 1, '"")]': 1, ')][': 1, '][:': 1, '[::': 2, '::-': 2, ':-1': 2, '-1]': 9, '1]\n': 3, ']\n ': 6, '  w': 9, ' wa': 15, 'lk ': 8, 'k =': 3, ' []': 1, '[]\n': 1, 'lk_': 4, 'k_s': 4, '_su': 4, 'sum': 4, 'um ': 3, 'm =': 1, '= 0': 1, ' 0\n': 1, '0\n\n': 1, '\n\n ': 4, '  f': 2, 'r i': 3, ' i,': 1, 'i, ': 4, ', b': 1, 'n e': 3, ' en': 1, 'enu': 1, 'num': 3, 'ume': 1, 'mer': 1, 'era': 1, 'rat': 1, 'ate': 1, 'te(': 1, 'e(r': 1, '(ro': 1, 'ws,': 1, 's, ': 1, ', 1': 2, ' 1)': 5, '1):': 2, 'ow_': 5, 'w_w': 5, ' [(': 3, '[(i': 3, '(i,': 3, ', k': 3, ' k)': 2, 'k) ': 1, ') f': 3, 'r k': 1, ' k ': 2, 'k i': 2, 'n r': 3, ' ra': 3, 'ran': 3, 'ang': 3, 'nge': 3, 'ge(': 3, 'e(1': 2, '(1,': 2, '1, ': 2, ', i': 2, ' i ': 3, 'i +': 1, ' + ': 5, '+ 1': 4, '1)]': 1, ')]\n': 1, '  i': 3, ' if': 3, 'if ': 3, 'f w': 2, 'k a': 1, ' an': 1, 'and': 1, 'd w': 1, 'lk[': 7, 'k[-': 5, '[-1': 7, '1][': 5, '][0': 3, '[0]': 3, '0] ': 3, '] =': 2, '= w': 1, '][-': 2, '1]:': 1, ']:\n': 1, '= r': 4, 'k[:': 2, 'f b': 1, ' b:': 1, 'b:\n': 1, 'k +': 4, ' +=': 6, '+= ': 6, 'k\n ': 1, 'm +': 2, '= 2': 1, ' 2*': 1, '2**': 1, '**(': 1, '*(i': 1, '(i ': 1, 'i -': 1, '- 1': 1, '1)\n': 1, ')\n ': 4, '  e': 3, ' el': 2, 'els': 2, 'lse': 2, 'se:': 2, 'e:\n': 2, '[:1': 1, ':1]': 1, '= 1': 2, ' 1\n': 1, '1\n\n': 1, ' ex': 3, 'exc': 3, 'xce': 3, 'ces': 3, 'ess': 3, 'ss_': 3, 's_r': 3, '_ro': 3, 'e(w': 1, '(wa': 1, '] +': 2, ' 1,': 1, '1,\n': 1, ',\n ': 1, ' 1 ': 1, '1 +': 1, '+ N': 1, ' N ': 2, '- w': 1, 'um)': 1, 'm)\n': 1, ')\n\n': 1, '1] ': 1, ' 1:': 1, '1:\n': 1, '1) ': 1, 'i i': 2, 'ws]': 2, 's]\n': 2, ' i)': 1, 'i) ': 1, ']\n\n': 1, ' re': 3, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n w': 1, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'um_': 2, 'm_c': 2, '_ca': 2, 'cas': 4, 'ase': 5, 'ses': 2, 'es ': 2, '= i': 2, 'int': 4, 'nt(': 4, 't(i': 2, '(in': 2, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 2, '())': 2, '))\n': 3, ')\nf': 1, '\nfo': 1, 'r c': 1, ' ca': 1, 'se ': 2, 'e i': 1, ', n': 1, ' nu': 1, 's +': 1, '  N': 1, 'N =': 1, 'res': 2, 'esu': 2, 'sul': 2, 'ult': 2, 'lt ': 1, 't =': 1, '= p': 1, 'N)\n': 1, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 2, ""t('"": 2, ""('C"": 1, ""'Ca"": 1, 'Cas': 1, 'e #': 1, ' #{': 1, '#{}': 1, '{}:': 1, ""}:'"": 1, "":'."": 1, ""'.f"": 2, '.fo': 2, 't(c': 1, '(ca': 1, 'se)': 1, 'e))': 1, 'r r': 1, ' r,': 1, 'r, ': 2, 'lt:': 1, 't:\n': 1, ""('{"": 1, ""'{}"": 1, '{} ': 1, '} {': 1, ' {}': 1, ""{}'"": 1, ""}'."": 1, 't(r': 1, '(r,': 1, 'k))': 1}"
Nikhil Mahajan,pattern-matching.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'codejam': 1, '2020,': 1, 'round': 1, '1a:': 1, 'pattern': 1, 'matching': 1, 'class': 1, 'pattern:': 1, 'def': 2, '__init__(self,': 1, 'fragments):': 1, 'self.prefix': 1, '=': 12, 'fragments[0]': 1, 'self.suffix': 1, 'fragments[-1]': 1, 'self.middle': 1, '"""".join(fragments[1:-1])': 1, 'match_patterns(patterns):': 1, 'prefix': 2, 'max((p.prefix': 1, 'for': 7, 'p': 5, 'in': 7, 'patterns),': 2, 'key=len)': 2, 'suffix': 2, 'max((p.suffix': 1, 'prefix_check': 2, 'all(prefix.startswith(p.prefix)': 1, 'patterns)': 3, 'suffix_check': 1, 'all(suffix.endswith(p.suffix)': 1, 'if': 1, 'and': 1, 'suffix_check:': 1, 'middle': 2, '"""".join(p.middle': 1, 'return': 2, '+': 3, ""'*'"": 1, 'i/o': 1, 'code': 1, 'num_cases': 2, 'int(input())': 2, 'case': 1, 'range(1,': 1, '1):': 1, 'n': 1, 'patterns': 1, ""[pattern(input().split('*'))"": 1, '_': 1, 'range(n)]': 1, 'result': 1, 'match_patterns(patterns)': 1, ""print('case"": 1, '#{}:': 1, ""{}'.format(case,"": 1, 'result))': 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '020': 1, '20,': 1, '0, ': 1, ', R': 1, ' Ro': 1, 'Rou': 1, 'oun': 1, 'und': 1, 'nd ': 2, 'd 1': 1, ' 1A': 1, '1A:': 1, 'A: ': 1, ': P': 1, ' Pa': 2, 'Pat': 3, 'att': 13, 'tte': 13, 'ter': 13, 'ern': 13, 'rn ': 3, 'n M': 1, ' Ma': 1, 'Mat': 1, 'atc': 3, 'tch': 3, 'chi': 1, 'hin': 1, 'ing': 1, 'ng\n': 1, 'g\n\n': 1, '\n\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's P': 1, 'rn:': 1, 'n:\n': 1, ':\n ': 5, '\n  ': 16, '   ': 52, '  d': 1, ' de': 1, 'def': 2, 'ef ': 2, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 1, 'sel': 4, 'elf': 4, 'lf,': 1, 'f, ': 1, ', f': 1, ' fr': 3, 'fra': 4, 'rag': 4, 'agm': 4, 'gme': 4, 'men': 4, 'ent': 4, 'nts': 4, 'ts)': 1, 's):': 2, '):\n': 3, '  s': 5, ' se': 3, 'lf.': 3, 'f.p': 1, '.pr': 3, 'pre': 8, 'ref': 8, 'efi': 8, 'fix': 16, 'ix ': 7, 'x =': 4, ' = ': 12, '= f': 2, 'ts[': 3, 's[0': 1, '[0]': 1, '0]\n': 1, ']\n ': 2, 'f.s': 1, '.su': 3, 'suf': 8, 'uff': 8, 'ffi': 8, 's[-': 1, '[-1': 1, '-1]': 2, '1]\n': 1, 'f.m': 1, '.mi': 2, 'mid': 4, 'idd': 4, 'ddl': 4, 'dle': 4, 'le ': 4, 'e =': 2, '= ""': 2, ' """"': 2, '"""".': 2, '"".j': 2, '.jo': 2, 'joi': 2, 'oin': 2, 'in(': 2, 'n(f': 1, '(fr': 1, 's[1': 1, '[1:': 1, '1:-': 1, ':-1': 1, '1])': 1, '])\n': 1, ')\n\n': 3, '\n\nd': 1, '\nde': 1, 'f m': 1, ' ma': 4, 'mat': 3, 'ch_': 2, 'h_p': 2, '_pa': 2, 'pat': 10, 'rns': 10, 'ns(': 2, 's(p': 2, '(pa': 2, 'ns)': 7, '  p': 4, ' pr': 5, '= m': 3, 'max': 2, 'ax(': 2, 'x((': 2, '((p': 2, '(p.': 5, 'p.p': 2, 'x f': 2, ' fo': 6, 'for': 8, 'or ': 7, 'r p': 5, ' p ': 5, 'p i': 5, ' in': 9, 'in ': 7, 'n p': 6, ' pa': 6, 's),': 2, '), ': 2, ', k': 2, ' ke': 2, 'key': 2, 'ey=': 2, 'y=l': 2, '=le': 2, 'len': 2, 'en)': 2, 'n)\n': 2, ')\n ': 5, ' su': 4, 'p.s': 2, '\n\n ': 3, 'ix_': 4, 'x_c': 4, '_ch': 4, 'che': 4, 'hec': 4, 'eck': 4, 'ck ': 3, 'k =': 2, '= a': 2, ' al': 2, 'all': 2, 'll(': 2, 'l(p': 1, '(pr': 1, 'ix.': 2, 'x.s': 1, '.st': 1, 'sta': 1, 'tar': 1, 'art': 1, 'rts': 1, 'tsw': 1, 'swi': 2, 'wit': 2, 'ith': 2, 'th(': 2, 'h(p': 2, 'ix)': 2, 'x) ': 2, ') f': 3, 's)\n': 4, 'l(s': 1, '(su': 1, 'x.e': 1, '.en': 1, 'end': 1, 'nds': 1, 'dsw': 1, '  i': 1, ' if': 1, 'if ': 1, 'f p': 1, 'k a': 1, ' an': 1, 'and': 1, 'd s': 1, 'ck:': 1, 'k:\n': 1, '  m': 1, ' mi': 2, 'n(p': 1, 'p.m': 1, 'e f': 1, '  r': 3, ' re': 4, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'x +': 1, ' + ': 3, '+ m': 1, 'e +': 1, '+ s': 1, 'ix\n': 1, 'x\n ': 1, ""n '"": 1, "" '*"": 1, ""'*'"": 2, ""*'\n"": 1, ""'\n\n"": 1, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'num': 2, 'um_': 2, 'm_c': 2, '_ca': 2, 'cas': 4, 'ase': 5, 'ses': 2, 'es ': 2, 's =': 2, '= i': 2, 'int': 3, 'nt(': 3, 't(i': 2, '(in': 3, 'inp': 3, 'npu': 3, 'put': 3, 'ut(': 3, 't()': 3, '())': 2, '))\n': 2, ')\nf': 1, '\nfo': 1, 'r c': 1, ' ca': 1, 'se ': 2, 'e i': 1, 'n r': 2, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(1': 1, '(1,': 1, '1, ': 1, ', n': 1, ' nu': 1, 's +': 1, '+ 1': 1, ' 1)': 1, '1):': 1, '  N': 1, ' N ': 1, 'N =': 1, 'ns ': 1, '= [': 1, ' [P': 1, '[Pa': 1, 'rn(': 1, 'n(i': 1, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, ""t('"": 2, ""('*"": 1, ""*')"": 1, ""'))"": 1, ')) ': 1, 'r _': 1, ' _ ': 1, '_ i': 1, 'e(N': 1, '(N)': 1, 'N)]': 1, ')]\n': 1, ']\n\n': 1, 'res': 2, 'esu': 2, 'sul': 2, 'ult': 2, 'lt ': 1, 't =': 1, 'pri': 1, 'rin': 1, ""('C"": 1, ""'Ca"": 1, 'Cas': 1, 'e #': 1, ' #{': 1, '#{}': 1, '{}:': 1, '}: ': 1, ': {': 1, ' {}': 1, ""{}'"": 1, ""}'."": 1, ""'.f"": 1, '.fo': 1, 'orm': 1, 'rma': 1, 'at(': 1, 't(c': 1, '(ca': 1, 'se,': 1, 'e, ': 1, ', r': 1, 'lt)': 1, 't))': 1}"
Nikhil Mahajan,prime-time.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'codejam': 1, '2021,': 1, 'round': 1, '1a:': 1, 'prime': 1, 'time': 1, 'from': 1, 'collections': 1, 'import': 1, 'counter': 1, 'def': 2, 'factor_sum(n,': 1, 'deck):': 1, 's': 3, '=': 8, '0': 2, 'for': 6, 'p': 3, 'in': 6, 'deck:': 1, '_': 2, 'range(deck[p]):': 1, 'if': 3, 'n': 5, '%': 1, 'p:': 1, 'break': 1, '//=': 1, '+=': 2, '==': 2, '1:': 1, 'return': 4, 'none': 1, 'solve(deck):': 1, 'total': 3, 'sum(k': 1, '*': 1, 'deck[k]': 1, 'k': 1, 'deck)': 2, 'i': 3, 'range(total,': 1, 'max(2,': 1, '-': 1, '4000),': 1, '-1):': 1, 'group_sum': 2, 'factor_sum(i,': 1, 'and': 1, '+': 2, 'group_sum:': 1, 'i/o': 1, 'code': 1, 'num_cases': 2, 'int(input())': 1, 'case': 1, 'range(1,': 1, '1):': 1, 'm': 1, 'int(input().strip())': 1, 'deck': 1, 'counter()': 1, 'range(m):': 1, 'p,': 1, 'map(int,': 1, 'input().split())': 1, 'deck[p]': 1, 'res': 1, 'solve(deck)': 1, ""print('case"": 1, '#{}:': 1, ""{}'.format(case,"": 1, 'res))': 1}","{'# C': 1, ' Co': 4, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '021': 1, '21,': 1, '1, ': 2, ', R': 1, ' Ro': 1, 'Rou': 1, 'oun': 3, 'und': 1, 'nd ': 2, 'd 1': 1, ' 1A': 1, '1A:': 1, 'A: ': 1, ': P': 1, ' Pr': 1, 'Pri': 1, 'rim': 1, 'ime': 2, 'me ': 1, 'e T': 1, ' Ti': 1, 'Tim': 1, 'me\n': 1, 'e\n\n': 2, '\n\nf': 2, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm c': 1, ' co': 1, 'col': 1, 'oll': 1, 'lle': 1, 'lec': 1, 'ect': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'ons': 1, 'ns ': 1, 's i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't C': 1, 'Cou': 2, 'unt': 2, 'nte': 2, 'ter': 2, 'er\n': 1, 'r\n\n': 1, '\n\n\n': 3, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f f': 1, ' fa': 2, 'fac': 2, 'act': 2, 'cto': 2, 'tor': 2, 'or_': 2, 'r_s': 2, '_su': 5, 'sum': 6, 'um(': 3, 'm(n': 1, '(n,': 1, 'n, ': 1, ', d': 2, ' de': 7, 'dec': 10, 'eck': 10, 'ck)': 5, 'k):': 2, '):\n': 6, ':\n ': 10, '\n  ': 23, '   ': 122, '  s': 2, ' s ': 2, 's =': 3, ' = ': 8, '= 0': 1, ' 0\n': 2, '0\n ': 1, '  f': 4, ' fo': 5, 'for': 7, 'or ': 6, 'r p': 1, ' p ': 1, 'p i': 1, ' in': 9, 'in ': 6, 'n d': 2, 'ck:': 1, 'k:\n': 1, 'r _': 2, ' _ ': 2, '_ i': 2, 'n r': 4, ' ra': 4, 'ran': 4, 'ang': 4, 'nge': 4, 'ge(': 4, 'e(d': 3, '(de': 3, 'ck[': 3, 'k[p': 1, '[p]': 1, 'p])': 1, ']):': 1, '  i': 3, ' if': 3, 'if ': 3, 'f n': 2, ' n ': 3, 'n %': 1, ' % ': 1, '% p': 1, ' p:': 1, 'p:\n': 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n ': 1, '  n': 1, 'n /': 1, ' //': 1, '//=': 1, '/= ': 1, '= p': 2, ' p\n': 2, 'p\n ': 1, 's +': 2, ' +=': 2, '+= ': 2, 'p\n\n': 1, '\n\n ': 5, 'n =': 1, ' ==': 2, '== ': 2, '= 1': 1, ' 1:': 1, '1:\n': 1, '  r': 5, ' re': 6, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 4, 'n s': 1, ' s\n': 1, 's\n ': 1, 'n N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne\n': 1, 'f s': 1, ' so': 2, 'sol': 2, 'olv': 2, 'lve': 2, 've(': 2, '  t': 1, ' to': 3, 'tot': 4, 'ota': 4, 'tal': 4, 'al ': 3, 'l =': 2, '= s': 2, ' su': 1, 'm(k': 1, '(k ': 1, 'k *': 1, ' * ': 1, '* d': 1, 'k[k': 1, '[k]': 1, 'k] ': 1, '] f': 1, 'r k': 1, ' k ': 1, 'k i': 1, 'k)\n': 3, ')\n\n': 3, 'r i': 1, ' i ': 2, 'i i': 1, 'e(t': 1, '(to': 1, 'al,': 1, 'l, ': 1, ', m': 1, ' ma': 2, 'max': 1, 'ax(': 1, 'x(2': 1, '(2,': 1, '2, ': 1, ', t': 1, 'l -': 1, ' - ': 1, '- 4': 1, ' 40': 1, '400': 1, '000': 1, '00)': 1, '0),': 1, '), ': 1, ', -': 1, ' -1': 1, '-1)': 1, '1):': 2, '  g': 1, ' gr': 3, 'gro': 3, 'rou': 3, 'oup': 3, 'up_': 3, 'p_s': 3, 'um ': 2, 'm =': 1, '= f': 1, 'm(i': 1, '(i,': 1, 'i, ': 1, ')\n ': 4, 'f g': 1, 'm a': 1, ' an': 1, 'and': 1, 'd t': 1, '= i': 3, 'i +': 1, ' + ': 2, '+ g': 1, 'um:': 1, 'm:\n': 1, 'n i': 1, ' i\n': 1, 'i\n\n': 1, 'n 0': 1, '0\n\n': 1, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'num': 2, 'um_': 2, 'm_c': 2, '_ca': 2, 'cas': 4, 'ase': 5, 'ses': 2, 'es ': 3, 'int': 4, 'nt(': 3, 't(i': 2, '(in': 3, 'inp': 3, 'npu': 3, 'put': 3, 'ut(': 3, 't()': 4, '())': 3, '))\n': 3, '\nfo': 1, 'r c': 1, ' ca': 1, 'se ': 2, 'e i': 1, 'e(1': 1, '(1,': 1, ', n': 1, ' nu': 1, '+ 1': 1, ' 1)': 1, '  M': 1, ' M ': 1, 'M =': 1, '().': 2, ').s': 2, '.st': 1, 'str': 1, 'tri': 1, 'rip': 1, 'ip(': 1, 'p()': 1, '  d': 2, 'ck ': 1, 'k =': 1, '= C': 1, 'er(': 1, 'r()': 1, '()\n': 1, 'e(M': 1, '(M)': 1, 'M):': 1, '  P': 1, ' P,': 1, 'P, ': 1, ', N': 1, ' N ': 1, 'N =': 1, '= m': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, 't, ': 1, ', i': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, 'k[P': 1, '[P]': 1, 'P] ': 1, '] +': 1, '= N': 1, ' N\n': 1, 'N\n\n': 1, 'res': 2, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, ""t('"": 1, ""('C"": 1, ""'Ca"": 1, 'Cas': 1, 'e #': 1, ' #{': 1, '#{}': 1, '{}:': 1, '}: ': 1, ': {': 1, ' {}': 1, ""{}'"": 1, ""}'."": 1, ""'.f"": 1, '.fo': 1, 'orm': 1, 'rma': 1, 'mat': 1, 'at(': 1, 't(c': 1, '(ca': 1, 'se,': 1, 'e, ': 1, ', r': 1, 'es)': 1, 's))': 1}"
Nikhil Mahajan,security-update.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 2, 'codejam': 1, '2020,': 1, 'round': 1, '2:': 1, 'security': 1, 'update': 1, 'from': 1, 'collections': 1, 'import': 1, 'namedtuple': 1, 'node': 1, '=': 20, 'namedtuple(""node"",': 1, '[""i"",': 1, '""r"",': 1, '""t""])': 1, 'def': 1, 'solve(num_nodes,': 2, 'num_edges,': 2, 'nodes,': 2, 'edges):': 1, 'r,': 1, 't': 1, '[],': 1, '[]': 1, 'for': 4, 'i,': 2, 'x': 2, 'in': 4, 'enumerate(nodes,': 1, '1):': 2, 'if': 5, '<': 1, '0:': 2, 'r.append(node(i,': 1, '-x,': 1, 'none))': 1, 'else:': 4, 't.append(node(i,': 1, 'none,': 1, 'x))': 1, 'r.sort(key=lambda': 1, 'x:': 3, 'x.r)': 1, 't.sort(key=lambda': 1, 'x.t)': 1, 'latency': 1, '[0]': 1, '*': 2, 'num_nodes': 1, 'last': 5, 'node(0,': 1, '0,': 1, '0)': 1, 'n': 2, '1': 2, 'while': 1, 'r': 2, 'or': 1, 't:': 1, 'and': 1, 'r[0].r': 1, '<=': 1, 'n:': 1, 'curr': 2, 'r.pop(0)': 1, 'curr.r': 1, '==': 2, 'last.r:': 1, 'node(curr.i,': 4, 'curr.r,': 2, 'last.t)': 1, 'last.t': 2, '+': 2, '1)': 1, 't.pop(0)': 1, 'curr.t': 1, 'last.t:': 1, 'last.r,': 1, 'curr.t)': 2, 'n,': 1, 'latency[last.i]': 1, '+=': 1, 'edge_latency': 3, '[1]': 1, 'num_edges': 2, '(j,': 1, 'k)': 1, 'enumerate(edges):': 1, 'dt': 3, 'abs(latency[j]': 1, '-': 2, 'latency[k])': 1, '>': 1, 'edge_latency[i]': 1, 'return': 1, 'i/o': 1, 'code': 1, 'num_cases': 2, 'int(input())': 1, 'case': 1, 'range(1,': 1, 'num_nodes,': 1, 'map(int,': 1, 'input().split())': 1, 'nodes': 1, 'list(map(int,': 1, 'input().split()))': 2, 'edges': 1, '[tuple(map(lambda': 1, 'int(x)': 1, '1,': 1, '_': 1, 'range(num_edges)]': 1, 'edges)': 1, ""print('case"": 1, '#{}:': 1, ""{}'.format(case,"": 1, '""': 1, '"".join(map(str,': 1, 'edge_latency))))': 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 19, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '020': 1, '20,': 1, '0, ': 3, ', R': 1, ' Ro': 1, 'Rou': 1, 'oun': 1, 'und': 1, 'nd ': 2, 'd 2': 1, ' 2:': 1, '2: ': 1, ': S': 1, ' Se': 1, 'Sec': 1, 'ecu': 1, 'cur': 13, 'uri': 1, 'rit': 1, 'ity': 1, 'ty ': 1, 'y U': 1, ' Up': 1, 'Upd': 1, 'pda': 1, 'dat': 1, 'ate': 12, 'te\n': 1, 'e\n\n': 2, '\n\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm c': 1, ' co': 1, 'col': 1, 'oll': 1, 'lle': 1, 'lec': 1, 'ect': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'ons': 1, 'ns ': 1, 's i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 3, 'rt ': 1, 't n': 1, ' na': 2, 'nam': 2, 'ame': 2, 'med': 2, 'edt': 2, 'dtu': 2, 'tup': 3, 'upl': 3, 'ple': 3, 'le\n': 1, '\n\nN': 1, '\nNo': 1, 'Nod': 9, 'de ': 1, 'e =': 1, ' = ': 20, '= n': 1, 'le(': 2, 'e(""': 1, '(""N': 1, '""No': 1, 'de""': 1, 'e"",': 1, '"", ': 3, ', [': 2, ' [""': 1, '[""i': 1, '""i""': 1, 'i"",': 1, ', ""': 3, ' ""R': 1, '""R""': 1, 'R"",': 1, ' ""T': 1, '""T""': 1, 'T""]': 1, '""])': 1, '])\n': 2, ')\n\n': 4, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f s': 1, ' so': 2, 'sol': 2, 'olv': 2, 'lve': 2, 've(': 2, 'e(n': 4, '(nu': 3, 'num': 13, 'um_': 11, 'm_n': 4, '_no': 4, 'nod': 8, 'des': 8, 'es,': 8, 's, ': 8, ', n': 6, ' nu': 7, 'm_e': 5, '_ed': 5, 'edg': 14, 'dge': 14, 'ges': 9, ' no': 3, ', e': 3, ' ed': 8, 'es)': 4, 's):': 2, '):\n': 4, ':\n ': 14, '\n  ': 38, '   ': 237, '  R': 3, ' R,': 1, 'R, ': 4, ', T': 1, ' T ': 1, 'T =': 2, '= [': 4, ' []': 2, '[],': 1, '], ': 1, '[]\n': 1, ']\n ': 1, '  f': 3, ' fo': 3, 'for': 5, 'or ': 5, 'r i': 2, ' i,': 2, 'i, ': 8, ', x': 2, ' x ': 2, 'x i': 1, ' in': 9, 'in ': 4, 'n e': 3, ' en': 2, 'enu': 2, 'ume': 2, 'mer': 2, 'era': 2, 'rat': 2, 'te(': 2, '(no': 1, ', 1': 1, ' 1)': 3, '1):': 2, '  i': 5, ' if': 5, 'if ': 5, 'f x': 1, 'x <': 1, ' < ': 1, '< 0': 1, ' 0:': 2, '0:\n': 2, ' R.': 3, 'R.a': 1, '.ap': 2, 'app': 2, 'ppe': 2, 'pen': 2, 'end': 2, 'nd(': 2, 'd(N': 2, '(No': 2, 'de(': 7, 'e(i': 2, '(i,': 2, ', -': 1, ' -x': 1, '-x,': 1, 'x, ': 1, ', N': 3, ' No': 7, 'Non': 2, 'one': 2, 'ne)': 1, 'e))': 1, '))\n': 6, ')\n ': 13, '  e': 8, ' el': 4, 'els': 4, 'lse': 4, 'se:': 4, 'e:\n': 4, '  T': 2, ' T.': 3, 'T.a': 1, 'ne,': 1, 'e, ': 2, ' x)': 1, 'x))': 1, '\n\n ': 6, 'R.s': 1, '.so': 2, 'sor': 2, 'rt(': 2, 't(k': 2, '(ke': 2, 'key': 2, 'ey=': 2, 'y=l': 2, '=la': 2, 'lam': 3, 'amb': 3, 'mbd': 3, 'bda': 3, 'da ': 3, 'a x': 3, ' x:': 3, 'x: ': 3, ': x': 2, ' x.': 2, 'x.R': 1, '.R)': 1, 'R)\n': 1, 'T.s': 1, 'x.T': 1, '.T)': 4, 'T)\n': 4, '  l': 7, ' la': 14, 'lat': 9, 'ten': 9, 'enc': 9, 'ncy': 9, 'cy ': 3, 'y =': 3, ' [0': 1, '[0]': 2, '0] ': 1, '] *': 2, ' * ': 2, '* n': 2, 'es\n': 2, 's\n ': 2, 'las': 12, 'ast': 12, 'st ': 5, 't =': 6, '= N': 6, 'e(0': 1, '(0,': 1, ', 0': 2, ' 0,': 1, ' 0)': 1, '0)\n': 3, '  N': 2, ' N ': 2, 'N =': 1, '= 1': 2, ' 1\n': 2, '1\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e R': 1, ' R ': 2, 'R o': 1, ' or': 1, 'r T': 1, ' T:': 1, 'T:\n': 2, 'f R': 1, 'R a': 1, ' an': 1, 'and': 1, 'd R': 1, ' R[': 1, 'R[0': 1, '0].': 1, '].R': 1, '.R ': 2, 'R <': 1, ' <=': 1, '<= ': 1, ' N:': 1, 'N:\n': 1, '  c': 2, ' cu': 8, 'urr': 12, 'rr ': 2, 'r =': 2, '= R': 1, 'R.p': 1, '.po': 2, 'pop': 2, 'op(': 2, 'p(0': 2, '(0)': 2, 'f c': 2, 'rr.': 10, 'r.R': 3, 'R =': 1, ' ==': 2, '== ': 2, '= l': 4, 'st.': 7, 't.R': 2, '.R:': 1, 'R:\n': 1, 'e(c': 4, '(cu': 4, 'r.i': 4, '.i,': 4, ', c': 4, '.R,': 3, ', l': 3, 't.T': 4, '.T ': 2, 'T +': 1, ' + ': 2, '+ 1': 2, '1)\n': 1, '= T': 1, 'T.p': 1, 'r.T': 3, '.T:': 1, ' N,': 1, 'N, ': 1, 'cy[': 4, 'y[l': 1, '[la': 1, 't.i': 1, '.i]': 1, 'i] ': 2, '] =': 2, '.T\n': 1, 'T\n ': 1, 'N +': 1, ' +=': 1, '+= ': 1, '1\n\n': 1, 'ge_': 5, 'e_l': 5, '_la': 5, ' [1': 1, '[1]': 1, '1] ': 1, ', (': 1, ' (j': 1, '(j,': 1, 'j, ': 1, ', k': 1, ' k)': 1, 'k) ': 1, ') i': 1, 'e(e': 1, '(ed': 1, '  d': 1, ' dt': 3, 'dt ': 2, '= a': 1, ' ab': 1, 'abs': 1, 'bs(': 1, 's(l': 1, '(la': 2, 'y[j': 1, '[j]': 1, 'j] ': 1, '] -': 1, ' - ': 2, '- l': 1, 'y[k': 1, '[k]': 1, 'k])': 1, 'f d': 1, 't >': 1, ' > ': 1, '> 0': 1, 'y[i': 1, '[i]': 1, '= d': 1, 'dt\n': 1, 't\n\n': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'cy\n': 1, 'y\n\n': 1, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'm_c': 2, '_ca': 2, 'cas': 4, 'ase': 5, 'ses': 2, 'es ': 5, 's =': 4, '= i': 1, 'int': 5, 'nt(': 3, 't(i': 1, '(in': 3, 'inp': 4, 'npu': 4, 'put': 4, 'ut(': 4, 't()': 7, '())': 4, ')\nf': 1, '\nfo': 1, 'r c': 1, ' ca': 1, 'se ': 2, 'e i': 1, 'n r': 2, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(1': 1, '(1,': 1, '1, ': 2, 's +': 1, '  n': 2, '= m': 1, ' ma': 1, 'map': 4, 'ap(': 4, 'p(i': 2, 'nt,': 2, 't, ': 2, ', i': 3, '().': 3, ').s': 3, '.sp': 3, 'spl': 3, 'pli': 3, 'lit': 3, 'it(': 3, ' li': 1, 'lis': 1, 'ist': 1, 'st(': 1, 't(m': 1, '(ma': 3, ')))': 4, ' [t': 1, '[tu': 1, 'e(m': 1, 'p(l': 1, ': i': 1, 't(x': 1, '(x)': 1, 'x) ': 1, ') -': 1, '- 1': 1, ' 1,': 1, 'r _': 1, ' _ ': 1, '_ i': 1, 's)]': 1, ')]\n': 1, ']\n\n': 1, '= s': 1, 's)\n': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, ""t('"": 1, ""('C"": 1, ""'Ca"": 1, 'Cas': 1, 'e #': 1, ' #{': 1, '#{}': 1, '{}:': 1, '}: ': 1, ': {': 1, ' {}': 1, ""{}'"": 1, ""}'."": 1, ""'.f"": 1, '.fo': 1, 'orm': 1, 'rma': 1, 'mat': 1, 'at(': 1, 't(c': 1, '(ca': 1, 'se,': 1, ' "" ': 1, '"" ""': 1, ' "".': 1, '"".j': 1, '.jo': 1, 'joi': 1, 'oin': 1, 'in(': 1, 'n(m': 1, 'p(s': 1, '(st': 1, 'str': 1, 'tr,': 1, 'r, ': 1, 'cy)': 1, 'y))': 1}"
Nikhil Mahajan,square-dance.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'codejam': 1, '2020,': 1, 'round': 1, '1a:': 1, 'square': 1, 'dance': 1, 'import': 1, 'itertools': 1, 'class': 1, 'dancer:': 1, 'north': 1, '=': 29, 'south': 1, 'east': 1, 'west': 1, 'none': 1, 'def': 7, '__init__(self,': 1, 'skill):': 1, 'self.skill': 2, 'skill': 1, 'self._eliminated': 3, 'false': 1, '@property': 2, 'neighbors(self):': 1, 'all_compass': 2, '[self.north,': 1, 'self.south,': 1, 'self.east,': 1, 'self.west]': 1, 'return': 5, 'set(n': 1, 'for': 13, 'n': 3, 'in': 14, 'if': 12, 'is': 5, 'not': 6, 'none)': 1, 'eliminated(self):': 1, 'self.neighbors': 1, 'n:': 1, 'len(n)': 1, '*': 1, '<': 3, 'sum(i.skill': 1, 'i': 5, 'n)': 1, 'reassign_neighbors(self):': 1, 'self.west': 2, 'none:': 4, 'self.west.east': 1, 'self.east': 2, 'self.east.west': 1, 'self.north': 2, 'self.north.south': 1, 'self.south': 2, 'self.south.north': 1, 'resolve_round(dancers):': 1, 'eliminated': 1, 'set(d': 2, 'd': 7, 'dancers': 2, 'd.eliminated)': 1, 'eliminated:': 2, 'd.reassign_neighbors()': 1, 'candidates': 6, 'set().union(*[d.neighbors': 1, 'eliminated])': 1, 'eliminated)': 2, 'eliminated,': 3, 'get_interest_level(dancers):': 1, 'interest': 4, 'sum(d.skill': 2, 'dancers)': 1, 'result': 4, 'resolve_round(dancers)': 1, 'while': 1, '-=': 1, '+=': 1, 'resolve_round(candidates)': 1, 'preprocess(r,': 2, 'c):': 1, 'stage': 1, '[[dancer(int(s))': 1, 'j,': 1, 's': 1, 'enumerate(input().split())]': 1, 'range(r)]': 1, 'range(r):': 1, 'j': 3, 'range(c):': 1, '>': 2, '0:': 2, 'stage[i][j].north': 1, 'stage[i': 2, '-': 4, '1][j]': 2, 'r': 1, '1:': 2, 'stage[i][j].south': 1, '+': 3, 'stage[i][j].west': 1, 'stage[i][j': 2, '1]': 2, 'c': 2, 'stage[i][j].east': 1, 'set(itertools.chain.from_iterable(stage))': 1, 'i/o': 1, 'code': 1, 'num_cases': 2, 'int(input())': 1, 'case': 1, 'range(1,': 1, '1):': 1, 'r,': 1, 'map(int,': 1, 'input().split())': 1, 'c)': 1, 'get_interest_level(dancers)': 1, ""print('case"": 1, '#{}:': 1, ""{}'.format(case,"": 1, 'result))': 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '020': 1, '20,': 1, '0, ': 1, ', R': 1, ' Ro': 1, 'Rou': 1, 'oun': 4, 'und': 4, 'nd ': 1, 'd 1': 1, ' 1A': 1, '1A:': 1, 'A: ': 1, ': S': 1, ' Sq': 1, 'Squ': 1, 'qua': 1, 'uar': 1, 'are': 1, 're ': 1, 'e D': 1, ' Da': 2, 'Dan': 3, 'anc': 10, 'nce': 10, 'ce\n': 1, 'e\n\n': 3, '\n\ni': 1, '\nim': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 8, 'rt ': 1, 't i': 4, ' it': 1, 'ite': 3, 'ter': 9, 'ert': 4, 'rto': 2, 'too': 2, 'ool': 2, 'ols': 2, 'ls\n': 1, 's\n\n': 2, '\n\n\n': 5, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 5, 'ss ': 3, 's D': 1, 'cer': 9, 'er:': 1, 'r:\n': 1, ':\n ': 22, '\n  ': 54, '   ': 301, '  n': 2, ' no': 7, 'nor': 7, 'rth': 7, 'th ': 8, 'h =': 6, ' = ': 29, '= s': 16, ' so': 1, 'sou': 7, 'out': 7, 'uth': 7, '= e': 1, ' ea': 1, 'eas': 9, 'ast': 7, 'st ': 10, 't =': 9, '= w': 1, ' we': 1, 'wes': 7, 'est': 13, '= N': 1, ' No': 6, 'Non': 6, 'one': 6, 'ne\n': 1, '\n\n ': 10, '  d': 6, ' de': 4, 'def': 7, 'ef ': 7, 'f _': 1, ' __': 1, '__i': 1, '_in': 3, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 4, 'sel': 26, 'elf': 26, 'lf,': 1, 'f, ': 1, ', s': 5, ' sk': 2, 'ski': 7, 'kil': 7, 'ill': 7, 'll)': 1, 'l):': 1, '):\n': 10, '  s': 12, ' se': 26, 'lf.': 22, 'f.s': 6, '.sk': 5, 'll ': 5, 'l =': 1, 'll\n': 1, 'l\n ': 1, 'f._': 3, '._e': 3, '_el': 3, 'eli': 14, 'lim': 14, 'imi': 14, 'min': 14, 'ina': 14, 'nat': 14, 'ate': 22, 'ted': 14, 'ed ': 3, 'd =': 3, '= F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, '  @': 2, ' @p': 2, '@pr': 2, 'pro': 4, 'rop': 2, 'ope': 2, 'per': 2, 'rty': 2, 'ty\n': 2, 'y\n ': 2, 'f n': 3, ' ne': 1, 'nei': 5, 'eig': 5, 'igh': 5, 'ghb': 5, 'hbo': 5, 'bor': 5, 'ors': 5, 'rs(': 3, 's(s': 2, 'lf)': 3, 'f):': 3, '  a': 1, ' al': 2, 'all': 2, 'll_': 2, 'l_c': 2, '_co': 2, 'com': 2, 'omp': 2, 'mpa': 2, 'pas': 2, 's =': 7, '= [': 2, ' [s': 1, '[se': 1, 'f.n': 5, '.no': 6, 'th,': 2, 'h, ': 2, '.so': 6, 'f.e': 4, '.ea': 6, 'st,': 1, 't, ': 2, 'f.w': 4, '.we': 6, 'st]': 1, 't]\n': 1, ']\n ': 5, '  r': 8, ' re': 14, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 5, 'n s': 3, 'set': 5, 'et(': 5, 't(n': 1, '(n ': 1, 'n f': 1, ' fo': 12, 'for': 14, 'or ': 13, 'r n': 1, ' n ': 3, 'n i': 2, ' in': 20, 'in ': 14, 'n a': 1, 's i': 4, ' if': 12, 'if ': 12, ' is': 5, 'is ': 5, 's n': 5, 'not': 6, 'ot ': 6, 't N': 5, 'ne)': 1, 'e)\n': 1, ')\n\n': 6, 'f e': 1, ' el': 10, 'ed(': 1, 'd(s': 1, 'n =': 1, '.ne': 2, 'rs\n': 1, 's\n ': 1, '  i': 11, ' n:': 1, 'n:\n': 1, '= l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(n': 1, '(n)': 1, 'n) ': 1, ') *': 1, ' * ': 1, '* s': 1, 'l <': 1, ' < ': 3, '< s': 1, ' su': 3, 'sum': 3, 'um(': 3, 'm(i': 1, '(i.': 1, 'i.s': 1, 'l f': 3, 'r i': 3, ' i ': 5, 'i i': 3, 'n n': 1, ' n)': 1, 'n)\n': 1, ')\n ': 8, 'ed\n': 1, 'd\n\n': 1, 'f r': 2, 'rea': 2, 'ssi': 2, 'sig': 2, 'ign': 2, 'gn_': 2, 'n_n': 2, '_ne': 2, 'f s': 4, 'ne:': 4, 'e:\n': 4, 'st.': 2, 't.e': 1, 'st\n': 4, 't\n ': 4, 't.w': 1, 'h i': 2, 'th.': 2, 'h.s': 1, 'th\n': 2, 'h\n ': 1, 'h.n': 1, 'h\n\n': 1, '\n\nd': 3, '\nde': 3, 'res': 14, 'eso': 3, 'sol': 3, 'olv': 3, 'lve': 3, 've_': 3, 'e_r': 3, '_ro': 3, 'rou': 3, 'nd(': 3, 'd(d': 2, '(da': 4, 'dan': 7, 'ers': 7, 'rs)': 5, 's):': 2, '  e': 3, 't(d': 2, '(d ': 2, 'd f': 2, 'r d': 6, ' d ': 7, 'd i': 6, 'n d': 2, ' da': 3, 'rs ': 3, 'f d': 2, ' d.': 2, 'd.e': 1, '.el': 1, 'ed)': 3, 'd)\n': 3, '  f': 4, 'n e': 6, 'ed:': 2, 'd:\n': 2, 'd.r': 1, '.re': 1, 's()': 1, '()\n': 1, '  c': 2, ' ca': 7, 'can': 7, 'and': 7, 'ndi': 7, 'did': 7, 'ida': 7, 'dat': 7, 'tes': 7, 'es ': 7, 't()': 6, '().': 3, ').u': 1, '.un': 1, 'uni': 1, 'nio': 1, 'ion': 1, 'on(': 1, 'n(*': 1, '(*[': 1, '*[d': 1, '[d.': 1, 'd.n': 1, 's f': 1, 'ed]': 1, 'd])': 1, '])\n': 1, 'n c': 1, 'd n': 1, 'ed,': 3, 'd, ': 3, ', c': 3, 'es\n': 1, 'f g': 1, ' ge': 2, 'get': 2, 'et_': 2, 't_i': 2, 'int': 10, 'nte': 6, 'ere': 6, 'st_': 2, 't_l': 2, '_le': 2, 'lev': 2, 'eve': 2, 'vel': 2, 'el(': 2, 'l(d': 2, 'm(d': 2, '(d.': 2, 'd.s': 2, 's)\n': 4, 'esu': 5, 'sul': 5, 'ult': 5, 'lt ': 3, '= i': 3, '= r': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e e': 1, 't -': 1, ' -=': 1, '-= ': 1, 't +': 1, ' +=': 1, '+= ': 1, 'd(c': 1, '(ca': 2, 'es)': 1, 'n r': 5, 'lt\n': 1, 't\n\n': 1, 'f p': 1, ' pr': 3, 'pre': 2, 'rep': 2, 'epr': 2, 'roc': 2, 'oce': 2, 'ces': 2, 'ess': 2, 'ss(': 2, 's(R': 2, '(R,': 2, 'R, ': 3, ', C': 3, ' C)': 2, 'C):': 2, ' st': 9, 'sta': 10, 'tag': 10, 'age': 10, 'ge ': 1, 'e =': 1, ' [[': 1, '[[D': 1, '[Da': 1, 'er(': 1, 'r(i': 1, '(in': 4, 'nt(': 3, 't(s': 1, '(s)': 1, 's))': 1, ')) ': 1, ') f': 1, 'r j': 2, ' j,': 1, 'j, ': 1, ' s ': 1, ' en': 1, 'enu': 1, 'num': 3, 'ume': 1, 'mer': 1, 'era': 2, 'rat': 1, 'te(': 1, 'e(i': 1, 'inp': 3, 'npu': 3, 'put': 3, 'ut(': 3, ').s': 2, '.sp': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'it(': 2, '())': 3, '))]': 1, ')]\n': 2, ' ra': 4, 'ran': 4, 'ang': 4, 'nge': 4, 'ge(': 4, 'e(R': 2, '(R)': 2, 'R)]': 1, ']\n\n': 2, 'R):': 1, ' j ': 3, 'j i': 1, 'e(C': 1, '(C)': 1, 'f i': 2, 'i >': 1, ' > ': 2, '> 0': 2, ' 0:': 2, '0:\n': 2, 'ge[': 8, 'e[i': 8, '[i]': 6, 'i][': 6, '][j': 8, '[j]': 6, 'j].': 4, '].n': 1, '[i ': 2, 'i -': 1, ' - ': 4, '- 1': 4, ' 1]': 4, '1][': 2, 'j]\n': 2, 'i <': 1, '< R': 1, ' R ': 1, 'R -': 1, ' 1:': 2, '1:\n': 2, '].s': 1, 'i +': 1, ' + ': 3, '+ 1': 3, 'f j': 2, 'j >': 1, '].w': 1, '[j ': 2, 'j -': 1, '1]\n': 2, 'j <': 1, '< C': 1, ' C ': 2, 'C -': 1, '].e': 1, 'j +': 1, 't(i': 2, '(it': 1, 'ls.': 1, 's.c': 1, '.ch': 1, 'cha': 1, 'hai': 1, 'ain': 1, 'in.': 1, 'n.f': 1, '.fr': 1, 'fro': 1, 'rom': 1, 'om_': 1, 'm_i': 1, '_it': 1, 'rab': 1, 'abl': 1, 'ble': 1, 'le(': 1, 'e(s': 1, '(st': 1, 'ge)': 1, 'e))': 1, '))\n': 3, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'um_': 2, 'm_c': 2, '_ca': 2, 'cas': 4, 'ase': 5, 'ses': 2, ')\nf': 1, '\nfo': 1, 'r c': 1, 'se ': 2, 'e i': 1, 'e(1': 1, '(1,': 1, '1, ': 1, ', n': 1, ' nu': 1, 's +': 1, ' 1)': 1, '1):': 1, '  R': 1, ' R,': 1, 'C =': 1, '= m': 1, ' ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, ', i': 1, '= p': 1, 'C)\n': 1, '= g': 1, '  p': 1, 'pri': 1, 'rin': 1, ""t('"": 1, ""('C"": 1, ""'Ca"": 1, 'Cas': 1, 'e #': 1, ' #{': 1, '#{}': 1, '{}:': 1, '}: ': 1, ': {': 1, ' {}': 1, ""{}'"": 1, ""}'."": 1, ""'.f"": 1, '.fo': 1, 'orm': 1, 'rma': 1, 'mat': 1, 'at(': 1, 't(c': 1, 'se,': 1, 'e, ': 1, ', r': 1, 'lt)': 1, 't))': 1}"
Nikhil Mahajan,vestigium.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'codejam': 1, '2020,': 1, 'qualification': 1, 'round:': 1, 'vestigium': 1, 'import': 1, 'numpy': 1, 'as': 1, 'np': 1, 'i/o': 1, 'code': 1, 'num_cases': 2, '=': 6, 'int(input())': 2, 'for': 4, 'case': 1, 'in': 4, 'range(1,': 1, '+': 1, '1):': 1, 'n': 3, 'm': 1, 'np.array([list(map(int,': 1, 'input().split()))': 1, '_': 1, 'range(n)])': 1, 'k': 1, 'np.trace(m)': 1, 'r': 2, 'sum(len(set(r))': 1, '<': 2, 'm)': 1, 'c': 2, 'sum(len(set(c))': 1, 'm.t)': 1, ""print('case"": 1, '#{}:': 1, '{}': 2, ""{}'.format(case,"": 1, 'k,': 1, 'r,': 1, 'c))': 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '020': 1, '20,': 1, '0, ': 1, ', Q': 1, ' Qu': 1, 'Qua': 1, 'ual': 1, 'ali': 1, 'lif': 1, 'ifi': 1, 'fic': 1, 'ica': 1, 'cat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n R': 1, ' Ro': 1, 'Rou': 1, 'oun': 1, 'und': 1, 'nd:': 1, 'd: ': 1, ': V': 1, ' Ve': 1, 'Ves': 1, 'est': 1, 'sti': 1, 'tig': 1, 'igi': 1, 'giu': 1, 'ium': 1, 'um\n': 1, 'm\n\n': 1, '\n\ni': 1, '\nim': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't n': 1, ' nu': 2, 'num': 3, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 1, 'as ': 1, 's n': 1, ' np': 3, 'np\n': 1, 'p\n\n': 1, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'um_': 2, 'm_c': 2, '_ca': 2, 'cas': 4, 'ase': 5, 'ses': 2, 'es ': 2, 's =': 1, ' = ': 6, '= i': 2, ' in': 7, 'int': 4, 'nt(': 3, 't(i': 2, '(in': 3, 'inp': 3, 'npu': 3, 'put': 3, 'ut(': 3, 't()': 4, '())': 3, '))\n': 2, ')\n\n': 2, '\n\nf': 1, '\nfo': 1, 'for': 5, 'or ': 4, 'r c': 2, ' ca': 1, 'se ': 2, 'e i': 1, 'in ': 4, 'n r': 2, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(1': 1, '(1,': 1, '1, ': 1, ', n': 1, 's +': 1, ' + ': 1, '+ 1': 1, ' 1)': 1, '1):': 1, '):\n': 1, ':\n ': 1, '\n  ': 6, '   ': 12, '  N': 1, ' N ': 3, 'N =': 1, ')\n ': 4, '  M': 1, ' M ': 1, 'M =': 1, '= n': 2, 'np.': 2, 'p.a': 1, '.ar': 1, 'arr': 1, 'rra': 1, 'ray': 1, 'ay(': 1, 'y([': 1, '([l': 1, '[li': 1, 'lis': 1, 'ist': 1, 'st(': 1, 't(m': 1, '(ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, 't, ': 1, ', i': 1, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, ')))': 1, ')) ': 3, ') f': 1, ' fo': 3, 'r _': 1, ' _ ': 1, '_ i': 1, 'e(N': 1, '(N)': 1, 'N)]': 1, ')])': 1, '])\n': 1, '\n\n ': 1, '  K': 1, ' K ': 1, 'K =': 1, 'p.t': 1, '.tr': 1, 'tra': 1, 'rac': 1, 'ace': 1, 'ce(': 1, 'e(M': 1, '(M)': 1, 'M)\n': 2, '  R': 1, ' R ': 1, 'R =': 1, '= s': 2, ' su': 2, 'sum': 2, 'um(': 2, 'm(l': 2, '(le': 2, 'len': 2, 'en(': 2, 'n(s': 2, '(se': 2, 'set': 2, 'et(': 2, 't(r': 1, '(r)': 1, 'r))': 1, ') <': 2, ' < ': 2, '< N': 2, 'N f': 2, 'r r': 1, ' r ': 1, 'r i': 1, 'n M': 2, ' M)': 1, '  C': 1, ' C ': 1, 'C =': 1, 't(c': 2, '(c)': 1, 'c))': 1, ' c ': 1, 'c i': 1, ' M.': 1, 'M.T': 1, '.T)': 1, 'T)\n': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, ""t('"": 1, ""('C"": 1, ""'Ca"": 1, 'Cas': 1, 'e #': 1, ' #{': 1, '#{}': 1, '{}:': 1, '}: ': 1, ': {': 1, ' {}': 3, '{} ': 2, '} {': 2, ""{}'"": 1, ""}'."": 1, ""'.f"": 1, '.fo': 1, 'orm': 1, 'rma': 1, 'mat': 1, 'at(': 1, '(ca': 1, 'se,': 1, 'e, ': 1, ', K': 1, ' K,': 1, 'K, ': 1, ', R': 1, ' R,': 1, 'R, ': 1, ', C': 1, ' C)': 1, 'C))': 1}"
Nikhil Mahajan,wormhole-in-one.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 3, 'codejam': 1, '2020,': 1, 'round': 1, '2:': 2, 'wormhole': 1, 'in': 8, 'one': 1, 'from': 3, 'math': 1, 'import': 3, 'gcd': 1, 'itertools': 1, 'permutations': 1, 'collections': 1, 'defaultdict,': 1, 'namedtuple': 1, 'position': 1, '=': 14, 'namedtuple(""position"",': 1, '[""x"",': 1, '""y""])': 1, 'def': 1, 'solve(n,': 2, 'holes):': 1, 'if': 4, 'n': 3, '<=': 1, '4:': 1, 'return': 2, 'directions': 2, 'set()': 1, 'for': 6, 'a,': 1, 'b': 1, 'permutations(holes,': 1, '2):': 1, 'dx,': 4, 'dy': 6, 'a.x': 1, '-': 3, 'b.x,': 1, 'a.y': 1, 'b.y': 1, 'g': 2, 'gcd(abs(dx),': 1, 'abs(dy))': 1, 'dx': 1, '//': 2, 'g,': 1, 'force': 1, 'to': 1, 'point': 1, 'the': 1, '1st': 1, 'and': 1, '4th': 1, 'quadrants': 1, '(dx,': 1, 'dy)': 1, '<': 1, '(-dx,': 1, '-dy):': 1, '-dx,': 1, '-dy': 1, 'directions.add((dx,': 1, 'dy))': 1, 'result': 3, '4': 1, 'directions:': 1, 'holes_per_line': 1, 'defaultdict(int)': 1, 'hole': 1, 'holes:': 1, 'holes_per_line[hole.x': 1, '*': 2, 'hole.y': 1, 'dx]': 1, '+=': 4, '1': 2, 'single,': 1, 'odd,': 1, 'even': 3, '0,': 2, '0': 1, 'num_holes': 5, 'holes_per_line.values():': 1, '==': 1, '1:': 1, 'single': 2, 'elif': 1, '%': 2, 'odd': 3, 'else:': 1, 'min(1,': 1, 'single)': 3, '2': 1, 'else': 1, 'min(2,': 1, 'max(result,': 1, '+': 3, 'i/o': 1, 'code': 1, 'num_cases': 2, 'int(input())': 2, 'case': 1, 'range(1,': 1, '1):': 1, 'holes': 1, '[position(*map(int,': 1, 'input().split()))': 1, '_': 1, 'range(n)]': 1, ""print('case"": 1, '#{}:': 1, ""{}'.format(case,"": 1, 'holes)))': 1}","{'# C': 1, ' Co': 2, 'Cod': 2, 'ode': 2, 'dej': 1, 'eja': 1, 'jam': 1, 'am ': 1, 'm 2': 1, ' 20': 1, '202': 1, '020': 1, '20,': 1, '0, ': 3, ', R': 1, ' Ro': 1, 'Rou': 1, 'oun': 1, 'und': 1, 'nd ': 2, 'd 2': 1, ' 2:': 2, '2: ': 1, ': W': 1, ' Wo': 1, 'Wor': 1, 'orm': 2, 'rmh': 1, 'mho': 1, 'hol': 17, 'ole': 17, 'le ': 4, 'e i': 3, ' in': 11, 'in ': 8, 'n O': 1, ' On': 1, 'One': 1, 'ne\n': 1, 'e\n\n': 2, '\n\nf': 1, '\nfr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm m': 1, ' ma': 2, 'mat': 2, 'ath': 1, 'th ': 2, 'h i': 1, ' im': 3, 'imp': 3, 'mpo': 3, 'por': 3, 'ort': 3, 'rt ': 3, 't g': 1, ' gc': 2, 'gcd': 2, 'cd\n': 1, 'd\nf': 1, 'm i': 1, ' it': 1, 'ite': 1, 'ter': 1, 'ert': 1, 'rto': 1, 'too': 1, 'ool': 1, 'ols': 1, 'ls ': 1, 's i': 3, 't p': 1, ' pe': 2, 'per': 5, 'erm': 2, 'rmu': 2, 'mut': 2, 'uta': 2, 'tat': 2, 'ati': 2, 'tio': 10, 'ion': 10, 'ons': 7, 'ns\n': 1, 's\nf': 1, 'm c': 1, ' co': 1, 'col': 1, 'oll': 1, 'lle': 1, 'lec': 1, 'ect': 5, 'cti': 5, 'ns ': 3, 't d': 1, ' de': 2, 'def': 3, 'efa': 2, 'fau': 2, 'aul': 2, 'ult': 6, 'ltd': 2, 'tdi': 2, 'dic': 2, 'ict': 2, 'ct,': 1, 't, ': 3, ', n': 2, ' na': 2, 'nam': 2, 'ame': 2, 'med': 2, 'edt': 2, 'dtu': 2, 'tup': 2, 'upl': 2, 'ple': 2, 'le\n': 1, '\n\nP': 1, '\nPo': 1, 'Pos': 3, 'osi': 3, 'sit': 3, 'iti': 3, 'on ': 1, 'n =': 2, ' = ': 14, '= n': 3, 'le(': 1, 'e(""': 1, '(""P': 1, '""Po': 1, 'on""': 1, 'n"",': 1, '"", ': 2, ', [': 1, ' [""': 1, '[""x': 1, '""x""': 1, 'x"",': 1, ', ""': 1, ' ""y': 1, '""y""': 1, 'y""]': 1, '""])': 1, '])\n': 1, ')\n\n': 3, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'ef ': 1, 'f s': 1, ' so': 2, 'sol': 2, 'olv': 2, 'lve': 2, 've(': 2, 'e(N': 3, '(N,': 2, 'N, ': 2, ', h': 2, ' ho': 9, 'les': 13, 'es)': 2, 's):': 1, '):\n': 5, ':\n ': 11, '\n  ': 30, '   ': 188, '  i': 3, ' if': 4, 'if ': 5, 'f N': 1, ' N ': 2, 'N <': 1, ' <=': 1, '<= ': 1, '= 4': 2, ' 4:': 1, '4:\n': 1, '  r': 4, ' re': 5, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n N': 1, ' N\n': 1, 'N\n\n': 1, '\n\n ': 8, '  d': 5, ' di': 4, 'dir': 4, 'ire': 4, 'rec': 4, 's =': 4, '= s': 1, ' se': 1, 'set': 1, 'et(': 1, 't()': 5, '()\n': 1, ')\n ': 5, '  f': 4, ' fo': 5, 'for': 7, 'or ': 6, 'r a': 1, ' a,': 1, 'a, ': 1, ', b': 1, ' b ': 1, 'b i': 1, 'n p': 1, 'ns(': 1, 's(h': 1, '(ho': 1, 'es,': 1, 's, ': 1, ', 2': 1, ' 2)': 1, '2):': 1, ' dx': 6, 'dx,': 8, 'x, ': 9, ', d': 7, ' dy': 8, 'dy ': 6, 'y =': 3, '= a': 1, ' a.': 2, 'a.x': 1, '.x ': 2, 'x -': 1, ' - ': 3, '- b': 2, ' b.': 2, 'b.x': 1, '.x,': 1, ', a': 2, 'a.y': 1, '.y ': 2, 'y -': 2, 'b.y': 1, '.y\n': 1, 'y\n ': 1, '  g': 1, ' g ': 1, 'g =': 1, '= g': 1, 'cd(': 1, 'd(a': 1, '(ab': 1, 'abs': 2, 'bs(': 2, 's(d': 2, '(dx': 3, 'dx)': 1, 'x),': 1, '), ': 1, ' ab': 1, '(dy': 1, 'dy)': 4, 'y))': 2, '))\n': 4, '= d': 2, 'dx ': 1, 'x /': 1, ' //': 2, '// ': 2, '/ g': 2, ' g,': 1, 'g, ': 1, 'y /': 1, ' g\n': 1, 'g\n\n': 1, '  #': 1, ' # ': 1, '# F': 1, ' Fo': 1, 'For': 1, 'orc': 1, 'rce': 1, 'ce ': 1, 'e d': 1, 's t': 1, ' to': 1, 'to ': 1, 'o p': 1, ' po': 1, 'poi': 1, 'oin': 1, 'int': 6, 'nt ': 1, 't i': 1, 'n t': 1, ' th': 1, 'the': 1, 'he ': 1, 'e 1': 1, ' 1s': 1, '1st': 1, 'st ': 1, 't a': 1, ' an': 1, 'and': 1, 'd 4': 1, ' 4t': 1, '4th': 1, 'h q': 1, ' qu': 1, 'qua': 1, 'uad': 1, 'adr': 1, 'dra': 1, 'ran': 3, 'ant': 1, 'nts': 1, 'ts\n': 1, 's\n ': 2, 'f (': 1, ' (d': 1, 'y) ': 1, ') <': 1, ' < ': 1, '< (': 1, ' (-': 1, '(-d': 1, '-dx': 2, ', -': 2, ' -d': 3, '-dy': 2, 'y):': 1, '= -': 1, 'dy\n': 1, 'y\n\n': 1, 'ns.': 1, 's.a': 1, '.ad': 1, 'add': 1, 'dd(': 1, 'd((': 1, '((d': 1, 'res': 4, 'esu': 4, 'sul': 4, 'lt ': 2, 't =': 2, ' 4\n': 1, '4\n ': 1, 'r d': 1, 'y i': 1, 'n d': 1, 'ns:': 1, 's:\n': 2, '  h': 3, 'es_': 3, 's_p': 3, '_pe': 3, 'er_': 3, 'r_l': 3, '_li': 3, 'lin': 3, 'ine': 3, 'ne ': 1, 'e =': 2, 'ct(': 1, 't(i': 3, '(in': 4, 'nt)': 1, 't)\n': 1, 'r h': 1, 'n h': 2, 'es:': 1, 'ne[': 1, 'e[h': 1, '[ho': 1, 'le.': 2, 'e.x': 1, 'x *': 1, ' * ': 2, '* d': 2, '- h': 1, 'e.y': 1, 'y *': 1, 'dx]': 1, 'x] ': 1, '] +': 1, ' +=': 4, '+= ': 4, '= 1': 3, ' 1\n': 2, '1\n\n': 1, '  s': 3, ' si': 6, 'sin': 6, 'ing': 6, 'ngl': 6, 'gle': 6, 'le,': 1, 'e, ': 2, ', o': 2, ' od': 4, 'odd': 4, 'dd,': 1, 'd, ': 1, ', e': 1, ' ev': 3, 'eve': 3, 'ven': 3, 'en ': 3, '= 0': 1, ' 0,': 2, ', 0': 2, ' 0\n': 1, '0\n ': 1, 'r n': 1, ' nu': 6, 'num': 7, 'um_': 7, 'm_h': 5, '_ho': 5, 'es ': 6, 'ne.': 1, 'e.v': 1, '.va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ues': 1, 'es(': 1, 's()': 1, '():': 1, 'f n': 2, ' ==': 1, '== ': 1, ' 1:': 1, '1:\n': 1, 'e +': 1, '1\n ': 1, '  e': 3, ' el': 3, 'eli': 1, 'lif': 1, 's %': 1, ' % ': 2, '% 2': 2, '2:\n': 1, '  o': 1, 'dd ': 3, 'd +': 2, 'es\n': 2, 'els': 2, 'lse': 2, 'se:': 1, 'e:\n': 1, 'n +': 2, 's\n\n': 1, '= m': 2, ' mi': 2, 'min': 2, 'in(': 2, 'n(1': 1, '(1,': 2, '1, ': 2, ', s': 3, 'le)': 3, 'e) ': 1, ') i': 1, 'f o': 1, 'd %': 1, ' 2 ': 1, '2 e': 1, 'se ': 3, 'e m': 1, 'n(2': 1, '(2,': 1, '2, ': 1, 'e)\n': 2, 'max': 1, 'ax(': 1, 'x(r': 1, '(re': 1, 'lt,': 1, ' + ': 3, '+ e': 1, '+ s': 1, 'n r': 3, 'lt\n': 1, 't\n\n': 1, '\n\n#': 1, '\n# ': 1, '# I': 1, ' I/': 1, 'I/O': 1, '/O ': 1, 'O C': 1, 'de\n': 1, 'e\nn': 1, '\nnu': 1, 'm_c': 2, '_ca': 2, 'cas': 4, 'ase': 5, 'ses': 2, '= i': 2, 'nt(': 3, 'inp': 3, 'npu': 3, 'put': 3, 'ut(': 3, '())': 3, ')\nf': 1, '\nfo': 1, 'r c': 1, ' ca': 1, ' ra': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'e(1': 1, 's +': 1, '+ 1': 1, ' 1)': 1, '1):': 1, '  N': 1, 'N =': 1, '= [': 1, ' [P': 1, '[Po': 1, 'on(': 1, 'n(*': 1, '(*m': 1, '*ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, ', i': 1, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, ')))': 2, ')) ': 1, ') f': 1, 'r _': 1, ' _ ': 1, '_ i': 1, '(N)': 1, 'N)]': 1, ')]\n': 1, ']\n\n': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, ""t('"": 1, ""('C"": 1, ""'Ca"": 1, 'Cas': 1, 'e #': 1, ' #{': 1, '#{}': 1, '{}:': 1, '}: ': 1, ': {': 1, ' {}': 1, ""{}'"": 1, ""}'."": 1, ""'.f"": 1, '.fo': 1, 'rma': 1, 'at(': 1, 't(c': 1, '(ca': 1, 'se,': 1, 's))': 1}"
phitronio,abstract.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'from': 1, 'abc': 1, 'import': 1, 'abc,': 1, 'abstractmethod': 1, '#': 1, 'abstract': 1, 'base': 1, 'class': 4, 'animal(abc):': 1, '@abstractmethod': 2, '#enforce': 1, 'all': 1, 'derived': 1, 'to': 1, 'have': 1, 'a': 1, 'eat': 1, 'method': 1, 'def': 5, 'eat(self):': 2, ""print('i"": 1, 'need': 1, ""food')"": 1, 'move(self):': 2, 'pass': 1, 'monkey(animal):': 1, '__init__(self,': 1, 'name)': 1, '->': 1, 'none:': 1, 'self.category': 1, '=': 3, ""'monkey'"": 1, 'self.name': 1, 'name': 1, 'super().__init__()': 1, ""print('hey"": 1, 'na': 1, 'nana,': 1, 'i': 1, 'am': 1, 'eating': 1, ""banana')"": 1, ""print('hanging"": 1, 'on': 1, 'the': 1, ""branches')"": 1, 'layka': 1, ""monkey('lucky')"": 1, 'layka.eat()': 1}","{'fro': 1, 'rom': 1, 'om ': 1, 'm a': 1, ' ab': 3, 'abc': 1, 'bc ': 1, 'c i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't A': 1, ' AB': 1, 'ABC': 2, 'BC,': 1, 'C, ': 1, ', a': 1, 'abs': 4, 'bst': 4, 'str': 4, 'tra': 4, 'rac': 4, 'act': 4, 'ctm': 3, 'tme': 3, 'met': 4, 'eth': 4, 'tho': 4, 'hod': 4, 'od\n': 3, 'd\n#': 1, '\n# ': 1, '# a': 1, 'ct ': 1, 't b': 1, ' ba': 2, 'bas': 1, 'ase': 1, 'se ': 1, 'e c': 1, ' cl': 2, 'cla': 4, 'las': 4, 'ass': 5, 'ss\n': 2, 's\nc': 1, '\ncl': 2, 'ss ': 3, 's A': 1, ' An': 1, 'Ani': 2, 'nim': 2, 'ima': 2, 'mal': 2, 'al(': 1, 'l(A': 1, '(AB': 1, 'BC)': 1, 'C):': 1, '):\n': 6, ':\n ': 7, '\n  ': 15, '   ': 58, '  @': 2, ' @a': 2, '@ab': 2, 'od ': 1, 'd #': 1, ' #e': 1, '#en': 1, 'enf': 1, 'nfo': 1, 'for': 1, 'orc': 1, 'rce': 1, 'ce ': 1, 'e a': 2, ' al': 1, 'all': 1, 'll ': 1, 'l d': 1, ' de': 6, 'der': 1, 'eri': 1, 'riv': 1, 'ive': 1, 'ved': 1, 'ed ': 2, 'd c': 1, 's t': 1, ' to': 1, 'to ': 1, 'o h': 1, ' ha': 1, 'hav': 1, 'ave': 1, 've ': 1, ' a ': 1, 'a e': 1, ' ea': 4, 'eat': 5, 'at ': 1, 't m': 1, ' me': 1, 'd\n ': 2, '  d': 5, 'def': 5, 'ef ': 5, 'f e': 2, 'at(': 3, 't(s': 2, '(se': 5, 'sel': 7, 'elf': 7, 'lf)': 4, 'f):': 4, '  p': 4, ' pr': 3, 'pri': 3, 'rin': 3, 'int': 3, 'nt(': 3, ""t('"": 3, ""('I"": 1, ""'I "": 1, 'I n': 1, ' ne': 1, 'nee': 1, 'eed': 1, 'd f': 1, ' fo': 1, 'foo': 1, 'ood': 1, ""od'"": 1, ""d')"": 1, ""')\n"": 4, ')\n ': 2, '  \n': 1, ' \n ': 1, 'f m': 2, ' mo': 2, 'mov': 2, 'ove': 2, 've(': 2, 'e(s': 2, ' pa': 1, 'pas': 1, 's\n\n': 1, '\n\nc': 1, 's M': 1, ' Mo': 2, 'Mon': 3, 'onk': 3, 'nke': 3, 'key': 3, 'ey(': 2, 'y(A': 1, '(An': 1, 'al)': 1, 'l):': 1, 'f _': 1, ' __': 1, '__i': 2, '_in': 2, 'ini': 2, 'nit': 2, 'it_': 2, 't__': 2, '__(': 2, '_(s': 1, 'lf,': 1, 'f, ': 1, ', n': 1, ' na': 4, 'nam': 3, 'ame': 3, 'me)': 1, 'e) ': 1, ') -': 1, ' ->': 1, '-> ': 1, '> N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne:': 1, 'e:\n': 1, '  s': 3, ' se': 2, 'lf.': 2, 'f.c': 1, '.ca': 1, 'cat': 1, 'ate': 1, 'teg': 1, 'ego': 1, 'gor': 1, 'ory': 1, 'ry ': 1, 'y =': 1, ' = ': 3, ""= '"": 1, "" 'M"": 1, ""'Mo"": 1, ""ey'"": 1, ""y'\n"": 1, ""'\n "": 1, 'f.n': 1, '.na': 1, 'me ': 1, 'e =': 1, '= n': 1, 'me\n': 1, 'e\n ': 1, ' su': 1, 'sup': 1, 'upe': 1, 'per': 1, 'er(': 1, 'r()': 1, '().': 1, ')._': 1, '.__': 1, '_()': 1, '()\n': 2, ')\n\n': 2, '\n\n ': 1, ""('H"": 2, ""'He"": 1, 'Hey': 1, 'ey ': 1, 'y n': 1, 'na ': 1, 'a n': 1, 'nan': 2, 'ana': 3, 'na,': 1, 'a, ': 1, ', I': 1, ' I ': 1, 'I a': 1, ' am': 1, 'am ': 1, 'm e': 1, 'ati': 1, 'tin': 1, 'ing': 2, 'ng ': 2, 'g b': 1, 'ban': 1, ""na'"": 1, ""a')"": 1, ""'Ha"": 1, 'Han': 1, 'ang': 1, 'ngi': 1, 'gin': 1, 'g o': 1, ' on': 1, 'on ': 1, 'n t': 1, ' th': 1, 'the': 1, 'he ': 1, 'e b': 1, ' br': 1, 'bra': 1, 'ran': 1, 'anc': 1, 'nch': 1, 'che': 1, 'hes': 1, ""es'"": 1, ""s')"": 1, '\n\nl': 1, '\nla': 2, 'lay': 2, 'ayk': 2, 'yka': 2, 'ka ': 1, 'a =': 1, '= M': 1, ""y('"": 1, ""('l"": 1, ""'lu"": 1, 'luc': 1, 'uck': 1, 'cky': 1, ""ky'"": 1, ""y')"": 1, ')\nl': 1, 'ka.': 1, 'a.e': 1, '.ea': 1, 't()': 1}"
phitronio,composition.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'class': 3, 'engine:': 1, 'def': 5, '__init__(self)': 3, '->': 3, 'none:': 3, 'pass': 2, 'start(self):': 2, 'return': 1, '""engine': 1, 'started""': 1, 'driver:': 1, '#': 1, 'car': 1, '""has': 1, 'a""': 1, 'engine': 1, 'car:': 1, 'self.engine': 1, '=': 2, 'engine()': 1, 'self.driver': 1, 'driver()': 1, 'self.engine.start()': 1}","{'cla': 3, 'las': 3, 'ass': 5, 'ss ': 3, 's E': 1, ' En': 2, 'Eng': 3, 'ngi': 6, 'gin': 6, 'ine': 6, 'ne:': 4, 'e:\n': 4, ':\n ': 8, '\n  ': 12, '   ': 48, '  d': 5, ' de': 5, 'def': 5, 'ef ': 5, 'f _': 3, ' __': 3, '__i': 3, '_in': 3, 'ini': 3, 'nit': 3, 'it_': 3, 't__': 3, '__(': 3, '_(s': 3, '(se': 5, 'sel': 8, 'elf': 8, 'lf)': 5, 'f) ': 3, ') -': 3, ' ->': 3, '-> ': 3, '> N': 3, ' No': 3, 'Non': 3, 'one': 3, '  p': 2, ' pa': 2, 'pas': 2, 'ss\n': 2, 's\n\n': 2, '\n\n ': 1, 'f s': 2, ' st': 3, 'sta': 4, 'tar': 4, 'art': 4, 'rt(': 3, 't(s': 2, 'f):': 2, '):\n': 2, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n ""': 1, ' ""E': 1, '""En': 1, 'ne ': 2, 'e s': 1, 'rte': 1, 'ted': 1, 'ed""': 1, 'd""\n': 1, '""\n\n': 1, '\n\nc': 1, '\ncl': 2, 's D': 1, ' Dr': 2, 'Dri': 2, 'riv': 3, 'ive': 3, 'ver': 3, 'er:': 1, 'r:\n': 2, '\n\n#': 1, '\n# ': 1, '# c': 1, ' ca': 1, 'car': 1, 'ar ': 1, 'r ""': 1, ' ""h': 1, '""ha': 1, 'has': 1, 'as ': 1, 's a': 1, ' a""': 1, 'a"" ': 1, '"" e': 1, ' en': 1, 'eng': 3, 'ne\n': 1, 'e\nc': 1, 's C': 1, ' Ca': 1, 'Car': 1, 'ar:': 1, '  s': 3, ' se': 3, 'lf.': 3, 'f.e': 2, '.en': 2, 'e =': 1, ' = ': 2, '= E': 1, 'ne(': 1, 'e()': 1, '()\n': 3, ')\n ': 2, 'f.d': 1, '.dr': 1, 'dri': 1, 'er ': 1, 'r =': 1, '= D': 1, 'er(': 1, 'r()': 1, '  \n': 1, ' \n ': 1, 'ne.': 1, 'e.s': 1, '.st': 1, 't()': 1}"
phitronio,computer.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 4, 'inheritance': 1, 'vs': 1, 'composition': 1, 'class': 4, 'cpu:': 1, 'def': 4, '__init__(self,': 4, 'cores)': 1, '->': 4, 'none:': 4, 'self.cores': 1, '=': 7, 'cores': 1, 'ram:': 1, 'size)': 1, 'self.size': 1, 'size': 1, 'harddrive:': 1, 'capacity)': 1, 'self.capacity': 1, 'capacity': 1, 'computer': 3, 'has': 3, 'a': 3, 'cpu': 1, 'ram': 1, 'hard': 1, 'drive': 1, 'computer:': 1, 'cores,': 1, 'ram_size,': 1, 'hd_capacity)': 1, 'self.cpu': 1, 'cpu(cores)': 1, 'self.ram': 1, 'ram(ram_size)': 1, 'self.hard_disc': 1, 'harddrive(hd_capacity)': 1, 'mac': 1, 'computer(8,': 1, '16,': 1, '512)': 1}","{'# i': 1, ' in': 1, 'inh': 1, 'nhe': 1, 'her': 1, 'eri': 1, 'rit': 1, 'ita': 1, 'tan': 1, 'anc': 1, 'nce': 1, 'ce ': 1, 'e v': 1, ' vs': 1, 'vs ': 1, 's c': 1, ' co': 7, 'com': 4, 'omp': 6, 'mpo': 1, 'pos': 1, 'osi': 1, 'sit': 1, 'iti': 1, 'tio': 1, 'ion': 1, 'on\n': 1, 'n\nc': 1, '\ncl': 4, 'cla': 4, 'las': 4, 'ass': 4, 'ss ': 4, 's C': 2, ' CP': 2, 'CPU': 2, 'PU:': 1, 'U:\n': 1, ':\n ': 8, '\n  ': 10, '   ': 44, '  d': 4, ' de': 4, 'def': 4, 'ef ': 4, 'f _': 4, ' __': 4, '__i': 4, '_in': 4, 'ini': 4, 'nit': 4, 'it_': 4, 't__': 4, '__(': 4, '_(s': 4, '(se': 4, 'sel': 10, 'elf': 10, 'lf,': 4, 'f, ': 4, ', c': 3, 'cor': 5, 'ore': 5, 'res': 5, 'es)': 2, 's) ': 1, ') -': 4, ' ->': 4, '-> ': 4, '> N': 4, ' No': 4, 'Non': 4, 'one': 4, 'ne:': 4, 'e:\n': 5, '  s': 6, ' se': 6, 'lf.': 6, 'f.c': 3, '.co': 1, 'es ': 1, 's =': 1, ' = ': 7, '= c': 2, 'es\n': 1, 's\n\n': 1, '\n\nc': 2, 's R': 1, ' RA': 2, 'RAM': 2, 'AM:': 1, 'M:\n': 1, ', s': 1, ' si': 2, 'siz': 5, 'ize': 5, 'ze)': 2, 'e) ': 1, 'f.s': 1, '.si': 1, 'ze ': 1, 'e =': 1, '= s': 1, 'ze\n': 1, 'e\n\n': 1, 's H': 1, ' Ha': 2, 'Har': 2, 'ard': 4, 'rdD': 2, 'dDr': 2, 'Dri': 2, 'riv': 3, 'ive': 3, 've:': 1, ' ca': 2, 'cap': 5, 'apa': 5, 'pac': 5, 'aci': 5, 'cit': 5, 'ity': 5, 'ty)': 3, 'y) ': 2, '.ca': 1, 'ty ': 1, 'y =': 1, 'ty\n': 1, 'y\n\n': 1, '\n\n#': 1, '\n# ': 3, '# c': 3, 'mpu': 5, 'put': 5, 'ute': 5, 'ter': 5, 'er ': 3, 'r h': 3, ' ha': 4, 'has': 3, 'as ': 3, 's a': 3, ' a ': 3, 'a c': 1, ' cp': 1, 'cpu': 2, 'pu\n': 1, 'u\n#': 1, 'a r': 1, ' ra': 2, 'ram': 4, 'am\n': 1, 'm\n#': 1, 'a h': 1, 'har': 2, 'rd ': 1, 'd d': 1, ' dr': 1, 'dri': 1, 've\n': 1, 'e\nc': 1, ' Co': 2, 'Com': 2, 'er:': 1, 'r:\n': 1, 'es,': 1, 's, ': 1, ', r': 1, 'am_': 2, 'm_s': 2, '_si': 2, 'ze,': 1, 'e, ': 1, ', h': 1, ' hd': 1, 'hd_': 2, 'd_c': 2, '_ca': 2, '.cp': 1, 'pu ': 1, 'u =': 1, '= C': 2, 'PU(': 1, 'U(c': 1, '(co': 1, 's)\n': 1, ')\n ': 2, 'f.r': 1, '.ra': 1, 'am ': 1, 'm =': 1, '= R': 1, 'AM(': 1, 'M(r': 1, '(ra': 1, 'e)\n': 1, 'f.h': 1, '.ha': 1, 'rd_': 1, 'd_d': 1, '_di': 1, 'dis': 1, 'isc': 1, 'sc ': 1, 'c =': 2, '= H': 1, 've(': 1, 'e(h': 1, '(hd': 1, 'y)\n': 1, ')\n\n': 1, '\n\n\n': 1, '\n\nm': 1, '\nma': 1, 'mac': 1, 'ac ': 1, 'er(': 1, 'r(8': 1, '(8,': 1, '8, ': 1, ', 1': 1, ' 16': 1, '16,': 1, '6, ': 1, ', 5': 1, ' 51': 1, '512': 1, '12)': 1, '2)\n': 1}"
phitronio,decorator.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 2, 'math': 1, 'time': 2, 'def': 3, 'timer(func):': 1, 'inner(*args,': 1, '**kwargs):': 1, ""print('time"": 2, ""started')"": 1, 'start': 1, '=': 3, 'time.time()': 2, '#': 4, 'print(func)': 1, 'func(*args,': 1, '**kwargs)': 1, ""ended')"": 1, 'end': 1, ""print(f'total"": 1, ""taken{end-start}')"": 1, 'return': 1, 'inner': 1, 'timer()()': 1, '@timer': 1, 'get_factorial(n):': 1, ""print('factorial"": 1, ""starting')"": 1, 'result': 1, 'math.factorial(n)': 1, ""print(f'factorial"": 1, 'of': 1, '{n}': 1, 'is:': 1, ""{result}')"": 1, 'get_factorial(n=1200)': 1, 'vejailla': 1, 'way': 1, 'to': 1, 'decorate': 1, 'timer(get_factorial)()': 1}","{'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 3, 't m': 1, ' ma': 2, 'mat': 2, 'ath': 2, 'th\n': 1, 'h\ni': 1, '\nim': 1, 't t': 1, ' ti': 7, 'tim': 12, 'ime': 12, 'me\n': 1, 'e\nd': 1, '\nde': 2, 'def': 3, 'ef ': 3, 'f t': 1, 'mer': 4, 'er(': 4, 'r(f': 1, '(fu': 2, 'fun': 3, 'unc': 3, 'nc)': 2, 'c):': 1, '):\n': 3, ':\n ': 3, '\n  ': 12, '   ': 52, '  d': 1, ' de': 2, 'f i': 1, ' in': 2, 'inn': 2, 'nne': 2, 'ner': 2, 'r(*': 1, '(*a': 2, '*ar': 2, 'arg': 4, 'rgs': 4, 'gs,': 2, 's, ': 2, ', *': 2, ' **': 2, '**k': 2, '*kw': 2, 'kwa': 2, 'war': 2, 'gs)': 2, 's):': 1, '  p': 5, ' pr': 6, 'pri': 6, 'rin': 6, 'int': 6, 'nt(': 6, ""t('"": 3, ""('t"": 2, ""'ti"": 2, 'me ': 3, 'e s': 1, ' st': 3, 'sta': 4, 'tar': 4, 'art': 4, 'rte': 1, 'ted': 1, ""ed'"": 2, ""d')"": 2, ""')\n"": 5, ')\n ': 9, '  s': 1, 't =': 2, ' = ': 3, '= t': 2, 'me.': 2, 'e.t': 2, '.ti': 2, 'me(': 2, 'e()': 2, '()\n': 4, '  #': 1, ' # ': 1, '# p': 1, 't(f': 3, 'c)\n': 1, '  f': 1, ' fu': 1, 'nc(': 1, 'c(*': 1, 's)\n': 1, 'e e': 1, ' en': 2, 'end': 3, 'nde': 1, 'ded': 1, '  e': 1, 'nd ': 1, 'd =': 1, ""(f'"": 2, ""f't"": 1, ""'to"": 1, 'tot': 1, 'ota': 1, 'tal': 1, 'al ': 3, 'l t': 1, 'e t': 1, ' ta': 1, 'tak': 1, 'ake': 1, 'ken': 1, 'en{': 1, 'n{e': 1, '{en': 1, 'nd-': 1, 'd-s': 1, '-st': 1, 'rt}': 1, ""t}'"": 2, ""}')"": 2, '  r': 2, ' re': 2, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n i': 1, 'er\n': 2, 'r\n\n': 1, '\n\n#': 2, '\n# ': 3, '# t': 2, 'r()': 1, '()(': 1, ')()': 2, ')\n\n': 3, '\n\n@': 1, '\n@t': 1, '@ti': 1, 'r\nd': 1, 'f g': 1, ' ge': 1, 'get': 3, 'et_': 3, 't_f': 3, '_fa': 3, 'fac': 6, 'act': 6, 'cto': 6, 'tor': 6, 'ori': 6, 'ria': 6, 'ial': 6, 'al(': 3, 'l(n': 3, '(n)': 2, 'n):': 1, ""('f"": 1, ""'fa"": 2, 'l s': 1, 'rti': 1, 'tin': 1, 'ing': 1, ""ng'"": 1, ""g')"": 1, 'res': 2, 'esu': 2, 'sul': 2, 'ult': 2, 'lt ': 1, '= m': 1, 'th.': 1, 'h.f': 1, '.fa': 1, 'n)\n': 1, ""f'f"": 1, 'l o': 1, ' of': 1, 'of ': 1, 'f {': 1, ' {n': 1, '{n}': 1, 'n} ': 1, '} i': 1, ' is': 1, 'is:': 1, 's: ': 1, ': {': 1, ' {r': 1, '{re': 1, 'lt}': 1, '\n\ng': 1, '\nge': 1, '(n=': 1, 'n=1': 1, '=12': 1, '120': 1, '200': 1, '00)': 1, '0)\n': 1, '# v': 1, ' ve': 1, 'vej': 1, 'eja': 1, 'jai': 1, 'ail': 1, 'ill': 1, 'lla': 1, 'la ': 1, 'a w': 1, ' wa': 1, 'way': 1, 'ay ': 1, 'y t': 1, ' to': 1, 'to ': 1, 'o d': 1, 'dec': 1, 'eco': 1, 'cor': 1, 'ora': 1, 'rat': 1, 'ate': 1, 'te\n': 1, 'e\n#': 1, 'r(g': 1, '(ge': 1, 'al)': 1, 'l)(': 1}"
phitronio,encapsulation.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 7, 'encapsulation': 1, '-->': 1, 'hide': 1, 'details': 1, 'access': 1, 'modifier:': 1, 'public,': 1, 'protected,': 1, 'private': 2, 'class': 1, 'bank:': 1, 'def': 4, '__init__(self,': 1, 'holder_name,': 1, 'initial_deposit)': 1, '->': 1, 'none:': 1, 'self.holder_name': 1, '=': 6, 'holder_name': 1, 'public': 1, 'attribute': 1, 'self._branch': 1, ""'banani"": 1, ""11'"": 1, 'protected': 1, 'self.__balance': 5, 'initial_deposit': 1, 'deposit(self,': 1, 'amount):': 2, '+=': 1, 'amount': 4, 'get_balance(self):': 1, 'return': 3, 'withdraw(self,': 1, 'if': 1, '<': 1, 'self.__balance:': 1, '-': 1, 'else:': 1, ""f'forkia"": 1, 'taka': 1, ""nai'"": 1, 'rafsun': 1, ""bank('choooto"": 1, ""bro',"": 1, '10000)': 1, 'print(rafsun.holder_name)': 2, 'rafsun.holder_name': 1, ""'boro"": 1, ""vai'"": 1, 'rafsun.deposit(40000)': 1, 'print(rafsun.get_balance())': 1, 'print(rafsun._branch)': 1, 'print(dir(rafsun))': 1, 'print(rafsun._bank__balance)': 1}","{'# e': 1, ' en': 1, 'enc': 1, 'nca': 1, 'cap': 1, 'aps': 1, 'psu': 1, 'sul': 1, 'ula': 1, 'lat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n -': 1, ' --': 1, '-->': 1, '-> ': 2, '> h': 1, ' hi': 1, 'hid': 1, 'ide': 1, 'de ': 1, 'e d': 1, ' de': 6, 'det': 1, 'eta': 1, 'tai': 1, 'ail': 1, 'ils': 1, 'ls\n': 1, 's\n#': 1, '\n# ': 3, '# a': 1, ' ac': 1, 'acc': 1, 'cce': 1, 'ces': 1, 'ess': 1, 'ss ': 2, 's m': 1, ' mo': 1, 'mod': 1, 'odi': 1, 'dif': 1, 'ifi': 1, 'fie': 1, 'ier': 1, 'er:': 1, 'r: ': 1, ': p': 1, ' pu': 2, 'pub': 2, 'ubl': 2, 'bli': 2, 'lic': 2, 'ic,': 1, 'c, ': 1, ', p': 2, ' pr': 6, 'pro': 2, 'rot': 2, 'ote': 2, 'tec': 2, 'ect': 2, 'cte': 2, 'ted': 2, 'ed,': 1, 'd, ': 1, 'pri': 8, 'riv': 2, 'iva': 2, 'vat': 2, 'ate': 2, 'te\n': 3, 'e\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 's B': 1, ' Ba': 2, 'Ban': 3, 'ank': 3, 'nk:': 1, 'k:\n': 1, ':\n ': 7, '\n  ': 15, '   ': 82, '  d': 4, 'def': 4, 'ef ': 4, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 3, 'nit': 3, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 4, 'sel': 12, 'elf': 12, 'lf,': 3, 'f, ': 3, ', h': 1, ' ho': 2, 'hol': 6, 'old': 6, 'lde': 6, 'der': 6, 'er_': 6, 'r_n': 6, '_na': 6, 'nam': 6, 'ame': 6, 'me,': 1, 'e, ': 1, ', i': 1, ' in': 2, 'iti': 2, 'tia': 2, 'ial': 2, 'al_': 2, 'l_d': 2, '_de': 2, 'dep': 4, 'epo': 4, 'pos': 4, 'osi': 4, 'sit': 4, 'it)': 1, 't) ': 1, ') -': 1, ' ->': 1, '> N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne:': 1, 'e:\n': 3, '  s': 5, ' se': 8, 'lf.': 8, 'f.h': 1, '.ho': 4, 'me ': 3, 'e =': 4, ' = ': 6, '= h': 1, 'e #': 1, ' # ': 3, '# p': 5, 'ic ': 1, 'c a': 1, ' at': 1, 'att': 1, 'ttr': 1, 'tri': 1, 'rib': 1, 'ibu': 1, 'but': 1, 'ute': 1, 'e\n ': 2, 'f._': 7, '._b': 2, '_br': 2, 'bra': 2, 'ran': 2, 'anc': 11, 'nch': 2, 'ch ': 1, 'h =': 1, ""= '"": 2, "" 'b"": 2, ""'ba"": 1, 'ban': 1, 'ana': 1, 'nan': 1, 'ani': 1, 'ni ': 1, 'i 1': 1, ' 11': 1, ""11'"": 1, ""1' "": 1, ""' #"": 1, 'ed ': 1, 'd \n': 1, ' \n ': 2, '.__': 6, '__b': 7, '_ba': 9, 'bal': 9, 'ala': 9, 'lan': 9, 'nce': 9, 'ce ': 4, '= i': 1, 'it ': 1, 't #': 1, 'e\n\n': 1, '\n\n ': 2, 'f d': 1, 'it(': 2, 't(s': 1, ', a': 2, ' am': 6, 'amo': 6, 'mou': 6, 'oun': 6, 'unt': 6, 'nt)': 2, 't):': 2, '):\n': 3, 'e +': 1, ' +=': 1, '+= ': 1, '= a': 1, 'nt\n': 3, 't\n\n': 1, 'f g': 1, ' ge': 1, 'get': 2, 'et_': 2, 't_b': 2, 'ce(': 2, 'e(s': 1, 'lf)': 1, 'f):': 1, '  r': 3, ' re': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n s': 1, 'ce\n': 1, '  \n': 1, 'f w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'thd': 1, 'hdr': 1, 'dra': 1, 'raw': 1, 'aw(': 1, 'w(s': 1, '  i': 1, ' if': 1, 'if ': 1, 'f a': 1, 'nt ': 1, 't <': 1, ' < ': 1, '< s': 1, 'ce:': 1, '= s': 1, 'e -': 1, ' - ': 1, '- a': 1, 't\n ': 2, 'n a': 1, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'n f': 1, "" f'"": 1, ""f'F"": 1, ""'Fo"": 1, 'For': 1, 'ork': 1, 'rki': 1, 'kia': 1, 'ia ': 1, 'a t': 1, ' ta': 1, 'tak': 1, 'aka': 1, 'ka ': 1, 'a n': 1, ' na': 1, 'nai': 1, ""ai'"": 2, ""i'\n"": 2, ""'\n\n"": 1, '\n\nr': 1, '\nra': 3, 'raf': 9, 'afs': 9, 'fsu': 9, 'sun': 9, 'un ': 1, 'n =': 1, '= B': 1, 'nk(': 1, ""k('"": 1, ""('C"": 1, ""'Ch"": 1, 'Cho': 1, 'hoo': 1, 'ooo': 1, 'oot': 1, 'oto': 1, 'to ': 1, 'o b': 1, ' br': 1, 'bro': 1, ""ro'"": 1, ""o',"": 1, ""', "": 1, ', 1': 1, ' 10': 1, '100': 1, '000': 4, '00)': 2, '0)\n': 2, ')\n\n': 1, '\n\np': 1, '\npr': 4, 'rin': 6, 'int': 6, 'nt(': 6, 't(r': 5, '(ra': 6, 'un.': 7, 'n.h': 3, 'me)': 2, 'e)\n': 3, ')\nr': 1, ""'bo"": 1, 'bor': 1, 'oro': 1, 'ro ': 1, 'o v': 1, ' va': 1, 'vai': 1, ""'\nr"": 1, 'n.d': 1, '.de': 1, 't(4': 1, '(40': 1, '400': 1, ')\np': 3, 'n.g': 1, '.ge': 1, 'e()': 1, '())': 1, '))\n': 2, ')\n#': 2, 'n._': 2, 'ch)': 1, 'h)\n': 1, 't(d': 1, '(di': 1, 'dir': 1, 'ir(': 1, 'r(r': 1, 'un)': 1, 'n))': 1, '._B': 1, '_Ba': 1, 'nk_': 1, 'k__': 1, 'ce)': 1}"
phitronio,fleet_management.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'ena': 1, 'poribohon': 1, 'class': 5, 'company:': 1, 'def': 4, '__init__(self,': 2, 'name,': 2, 'address,': 1, ')': 1, '->': 3, 'none:': 3, 'self.name': 2, '=': 9, 'name': 2, 'self.bus': 1, '[]': 4, 'self.routes': 1, 'self.drivers': 1, '=[]': 2, 'self.counter': 1, 'self.manager': 1, 'self.supervisors=[]': 1, 'self.fare': 1, 'driver:': 1, 'license,': 1, 'age)': 1, 'self.license': 1, 'license': 1, 'self.age': 1, 'age': 1, 'counter:': 1, '__init__(self)': 1, 'pass': 4, 'purchase_a_ticket(self,': 1, 'start,': 1, 'destination):': 1, 'passenger:': 1, 'supervisor:': 1, 'red_mia': 1, ""driver('a',"": 1, ""'123',32)"": 1}","{'# E': 1, ' En': 1, 'Ena': 1, 'na ': 1, 'a P': 1, ' Po': 1, 'Por': 1, 'ori': 1, 'rib': 1, 'ibo': 1, 'boh': 1, 'oho': 1, 'hon': 1, 'on ': 1, 'n \n': 1, ' \n\n': 2, '\n\nc': 5, '\ncl': 5, 'cla': 5, 'las': 5, 'ass': 10, 'ss ': 5, 's C': 2, ' Co': 2, 'Com': 1, 'omp': 1, 'mpa': 1, 'pan': 1, 'any': 1, 'ny:': 1, 'y:\n': 1, ':\n ': 9, '\n  ': 20, '   ': 96, '  d': 4, ' de': 5, 'def': 4, 'ef ': 4, 'f _': 3, ' __': 3, '__i': 3, '_in': 3, 'ini': 3, 'nit': 3, 'it_': 3, 't__': 3, '__(': 3, '_(s': 3, '(se': 4, 'sel': 15, 'elf': 15, 'lf,': 3, 'f, ': 3, ', n': 2, ' na': 4, 'nam': 6, 'ame': 6, 'me,': 2, 'e, ': 3, ', a': 2, ' ad': 1, 'add': 1, 'ddr': 1, 'dre': 1, 'res': 1, 'ess': 1, 'ss,': 1, 's, ': 1, ', )': 1, ' ) ': 1, ') -': 3, ' ->': 3, '-> ': 3, '> N': 3, ' No': 3, 'Non': 3, 'one': 3, 'ne:': 3, 'e:\n': 3, '  s': 11, ' se': 11, 'lf.': 11, 'f.n': 2, '.na': 2, 'me ': 2, 'e =': 5, ' = ': 9, '= n': 2, 'me\n': 2, 'e\n ': 3, 'f.b': 1, '.bu': 1, 'bus': 1, 'us ': 1, 's =': 3, '= [': 4, ' []': 4, '[]\n': 7, ']\n ': 7, 'f.r': 1, '.ro': 1, 'rou': 1, 'out': 1, 'ute': 1, 'tes': 1, 'es ': 1, 'f.d': 1, '.dr': 1, 'dri': 1, 'riv': 3, 'ive': 3, 'ver': 3, 'ers': 1, 'rs ': 1, ' =[': 2, '=[]': 3, 'f.c': 1, '.co': 1, 'cou': 1, 'oun': 2, 'unt': 2, 'nte': 2, 'ter': 2, 'er ': 2, 'r =': 2, 'f.m': 1, '.ma': 1, 'man': 1, 'ana': 1, 'nag': 1, 'age': 4, 'ger': 2, 'f.s': 1, '.su': 1, 'sup': 1, 'upe': 2, 'per': 2, 'erv': 2, 'rvi': 2, 'vis': 2, 'iso': 2, 'sor': 2, 'ors': 1, 'rs=': 1, 's=[': 1, 'f.f': 1, '.fa': 1, 'far': 1, 'are': 1, 're ': 1, '  \n': 1, 's D': 1, ' Dr': 2, 'Dri': 2, 'er:': 3, 'r:\n': 4, ', l': 1, ' li': 2, 'lic': 3, 'ice': 3, 'cen': 3, 'ens': 3, 'nse': 3, 'se,': 1, ' ag': 2, 'ge)': 1, 'e) ': 1, 'f.l': 1, '.li': 1, 'se ': 1, '= l': 1, 'se\n': 1, 'f.a': 1, '.ag': 1, 'ge ': 1, '= a': 1, 'ge\n': 1, 'e\n\n': 1, 'Cou': 1, 'lf)': 1, 'f) ': 1, '  p': 4, ' pa': 4, 'pas': 4, 'ss\n': 4, 's\n ': 1, 'f p': 1, ' pu': 1, 'pur': 1, 'urc': 1, 'rch': 1, 'cha': 1, 'has': 1, 'ase': 1, 'se_': 1, 'e_a': 1, '_a_': 1, 'a_t': 1, '_ti': 1, 'tic': 1, 'ick': 1, 'cke': 1, 'ket': 1, 'et(': 1, 't(s': 1, ', s': 1, ' st': 1, 'sta': 1, 'tar': 1, 'art': 1, 'rt,': 1, 't, ': 1, ', d': 1, 'des': 1, 'est': 1, 'sti': 1, 'tin': 1, 'ina': 1, 'nat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'on)': 1, 'n):': 1, '):\n': 1, 's\n\n': 3, 's P': 1, ' Pa': 1, 'Pas': 1, 'sse': 1, 'sen': 1, 'eng': 1, 'nge': 1, 's S': 1, ' Su': 1, 'Sup': 1, 'or:': 1, '\n\nr': 1, '\nre': 1, 'red': 1, 'ed_': 1, 'd_m': 1, '_mi': 1, 'mia': 1, 'ia ': 1, 'a =': 1, '= D': 1, 'er(': 1, ""r('"": 1, ""('a"": 1, ""'a'"": 1, ""a',"": 1, ""', "": 1, "", '"": 1, "" '1"": 1, ""'12"": 1, '123': 1, ""23'"": 1, ""3',"": 1, ""',3"": 1, ',32': 1, '32)': 1, '2)\n': 1}"
phitronio,getting_ready.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 8, 'read': 1, 'only': 1, '-->': 3, 'you': 3, 'can': 3, 'not': 3, 'set': 3, 'the': 5, 'value.': 1, 'value': 7, 'be': 2, 'changed': 1, 'getter': 3, 'get': 2, 'a': 8, 'of': 6, 'property': 2, 'through': 2, 'method.': 2, 'most': 2, 'time,': 2, 'will': 2, 'private': 2, 'attribute.': 1, 'setter': 3, 'property.': 1, 'class': 1, 'user:': 1, 'def': 4, '__init__(self,': 1, 'name,': 1, 'age,': 1, 'money)': 1, '->': 1, 'none:': 1, 'self._name': 1, '=': 5, 'name': 1, 'self._age': 2, 'age': 1, 'self.__money': 3, 'money': 1, 'without': 1, 'any': 1, 'is': 1, 'readonly': 1, 'attribute': 1, '@property': 2, 'age(self):': 1, 'return': 3, 'salary(self):': 1, '@salary.setter': 1, 'salary(self,': 1, 'value):': 1, 'if': 1, '<': 1, '0:': 1, ""'salary"": 1, ""negative'"": 1, '+=': 1, 'samsu': 1, ""user('kopa',"": 1, '21,': 1, '12000)': 1, 'print(samsu.__money)': 1, 'print(samsu.age())': 1, 'print(samsu.age)': 1, 'print(samsu.salary)': 2, 'samsu.salary': 1, '4500': 1}","{'# r': 1, ' re': 5, 'rea': 2, 'ead': 2, 'ad ': 1, 'd o': 1, ' on': 1, 'onl': 2, 'nly': 2, 'ly ': 2, 'y -': 1, ' --': 3, '-->': 3, '-> ': 4, '> y': 1, ' yo': 3, 'you': 3, 'ou ': 3, 'u c': 1, ' ca': 3, 'can': 3, 'an ': 3, 'n n': 3, ' no': 3, 'not': 3, 'ot ': 3, 't s': 1, ' se': 12, 'set': 7, 'et ': 5, 't t': 3, ' th': 7, 'the': 5, 'he ': 5, 'e v': 3, ' va': 9, 'val': 9, 'alu': 9, 'lue': 9, 'ue.': 1, 'e. ': 1, '. v': 1, 'ue ': 6, 'e c': 2, 't b': 2, ' be': 2, 'be ': 2, ' ch': 1, 'cha': 1, 'han': 1, 'ang': 1, 'nge': 1, 'ged': 1, 'ed\n': 1, 'd\n#': 1, '\n# ': 4, '# g': 3, ' ge': 5, 'get': 5, 'ett': 7, 'tte': 7, 'ter': 7, 'er ': 5, 'r -': 2, '> g': 1, 't a': 3, ' a ': 8, 'a v': 2, 'e o': 4, ' of': 6, 'of ': 6, 'f a': 5, 'a p': 4, ' pr': 7, 'pro': 5, 'rop': 5, 'ope': 5, 'per': 5, 'ert': 5, 'rty': 5, 'ty ': 2, 'y t': 2, 'thr': 2, 'hro': 2, 'rou': 2, 'oug': 2, 'ugh': 2, 'gh ': 2, 'h a': 2, 'a m': 2, ' me': 2, 'met': 2, 'eth': 2, 'tho': 3, 'hod': 2, 'od.': 2, 'd. ': 2, '. M': 2, ' Mo': 2, 'Mos': 2, 'ost': 2, 'st ': 2, 't o': 2, 'f t': 2, 'e t': 2, ' ti': 2, 'tim': 2, 'ime': 2, 'me,': 3, 'e, ': 4, ', y': 2, 'u w': 2, ' wi': 3, 'wil': 2, 'ill': 2, 'll ': 2, 'l g': 1, 'pri': 7, 'riv': 2, 'iva': 2, 'vat': 2, 'ate': 2, 'te ': 2, 'e a': 1, ' at': 2, 'att': 2, 'ttr': 2, 'tri': 2, 'rib': 2, 'ibu': 2, 'but': 2, 'ute': 2, 'te.': 1, 'e.\n': 1, '.\n#': 1, '# s': 2, '> s': 1, 'l s': 1, 'e p': 1, 'ty.': 1, 'y.\n': 1, '.\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's U': 1, ' Us': 2, 'Use': 2, 'ser': 2, 'er:': 1, 'r:\n': 1, ':\n ': 6, '\n  ': 20, '   ': 76, '  d': 4, ' de': 4, 'def': 4, 'ef ': 4, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 4, 'sel': 10, 'elf': 10, 'lf,': 2, 'f, ': 2, ', n': 1, ' na': 2, 'nam': 3, 'ame': 3, ', a': 1, ' ag': 3, 'age': 7, 'ge,': 1, ', m': 1, ' mo': 2, 'mon': 6, 'one': 7, 'ney': 6, 'ey)': 2, 'y) ': 1, ') -': 1, ' ->': 1, '> N': 1, ' No': 1, 'Non': 1, 'ne:': 1, 'e:\n': 1, '  s': 4, 'lf.': 6, 'f._': 6, '._n': 1, '_na': 1, 'me ': 1, 'e =': 2, ' = ': 5, '= n': 1, 'me\n': 1, 'e\n ': 3, '._a': 2, '_ag': 2, 'ge ': 1, '= a': 1, 'ge\n': 2, '.__': 4, '__m': 4, '_mo': 4, 'ey ': 2, 'y =': 2, '= m': 1, 'ey\n': 2, 'y\n ': 4, '  \n': 2, ' \n ': 3, '  #': 3, ' # ': 3, 'r w': 1, 'wit': 1, 'ith': 1, 'hou': 1, 'out': 1, 'ut ': 1, ' an': 1, 'any': 1, 'ny ': 1, 'y s': 1, 'r i': 1, ' is': 1, 'is ': 1, 's r': 1, 'ado': 1, 'don': 1, 'y a': 1, 'te\n': 1, '  @': 3, ' @p': 2, '@pr': 2, 'ty\n': 2, 'ge(': 2, 'e(s': 1, 'lf)': 2, 'f):': 2, '):\n': 3, '  r': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n s': 2, 'e\n\n': 2, '\n\n ': 1, 'r \n': 1, 'f s': 2, ' sa': 2, 'sal': 7, 'ala': 7, 'lar': 7, 'ary': 7, 'ry(': 2, 'y(s': 2, 'er\n': 2, 'r\n ': 2, ' @s': 1, '@sa': 1, 'ry.': 1, 'y.s': 1, '.se': 1, ', v': 1, 'ue)': 1, 'e):': 1, '  i': 1, ' if': 1, 'if ': 1, 'f v': 1, 'e <': 1, ' < ': 1, '< 0': 1, ' 0:': 1, '0:\n': 1, ""n '"": 1, "" 's"": 1, ""'sa"": 1, 'ry ': 2, 'y c': 1, 'e n': 1, ' ne': 1, 'neg': 1, 'ega': 1, 'gat': 1, 'ati': 1, 'tiv': 1, 'ive': 1, ""ve'"": 1, ""e'\n"": 1, ""'\n "": 1, 'y +': 1, ' +=': 1, '+= ': 1, '= v': 1, 'ue\n': 1, '\n\ns': 1, '\nsa': 2, 'sam': 7, 'ams': 7, 'msu': 7, 'su ': 1, 'u =': 1, '= U': 1, 'er(': 1, ""r('"": 1, ""('K"": 1, ""'Ko"": 1, 'Kop': 1, 'opa': 1, ""pa'"": 1, ""a',"": 1, ""', "": 1, ', 2': 1, ' 21': 1, '21,': 1, '1, ': 1, ', 1': 1, ' 12': 1, '120': 1, '200': 1, '000': 1, '00)': 1, '0)\n': 1, ')\n\n': 1, '\n\n#': 1, '# p': 2, 'rin': 5, 'int': 5, 'nt(': 5, 't(s': 5, '(sa': 5, 'su.': 6, 'u._': 1, 'y)\n': 3, ')\n#': 1, 'u.a': 2, '.ag': 2, 'e()': 1, '())': 1, ')) ': 1, ') \n': 1, ' \np': 1, '\npr': 3, 'ge)': 1, 'e)\n': 1, ')\np': 1, 'u.s': 3, '.sa': 3, 'ry)': 2, ')\ns': 1, '= 4': 1, ' 45': 1, '450': 1, '500': 1, '00\n': 1, '0\np': 1}"
phitronio,ghorib.py,"[0.1304, 0.2033, 0.1306, 0.0757, 0.0095, 0.0968, 0.3493, 0.1598, 0.0399, 0.0669, 0.0504, 0.2585, 0.3612, 0.0552, 0.1984, 0.0932, 0.1159, 0.0605, 0.2925, 0.3197, 0.1163, 0.1891, 0.0208, 0.198, 0.1916, 0.0725]","[0.0425, 0.4343, 0.1629, 0.1523, 0.1582, 0.117, 0.2369, 0.0583, 0.1195, 0.1047, 0.0582, 0.285, 0.0547, 0.0969, 0.1697, 0.2841, 0.0087, 0.4232, 0.1347, 0.1646, 0.171, 0.1163, 0.0044, 0.0355, 0.0605, 0.1564, 0.1021, 0.1206, 0.0753, 0.1711, 0.0158, 0.0566, 0.0249, 0.0175, 0.1694, 0.2008, 0.1216, 0.2297, 0.1314, 0.1782, 0.0731, 0.2395, 0.0399, 0.0532, 0.1231, 0.2063]","[0.0718, 0.0256, 0.0647, 0.1901, 0.1869, 0.1697, 0.282, 0.3454, 0.1076, 0.0284, 0.2822, 0.1171, 0.2219, 0.0931, 0.0028, 0.0863, 0.0282, 0.0876, 0.1666, 0.0705, 0.1549, 0.136, 0.127, 0.1445, 0.1966, 0.0979, 0.0092, 0.0505, 0.0003, 0.0293, 0.0933, 0.1966]","[0.1636, 0.0683, 0.1786, 0.2766, 0.0812, 0.2095, 0.0903, 0.2449, 0.2352, 0.1178, 0.1229, 0.1556, 0.104, 0.1075, 0.0267, 0.1381, 0.0565, 0.0101, 0.1144, 0.2519, 0.2842, 0.0084, 0.0591, 0.0614, 0.2053, 0.1904, 0.0052, 0.0078, 0.2985, 0.1136, 0.0558]","{'class': 3, 'laptop:': 2, 'def': 9, '__init__(self,': 3, 'brand,': 3, 'price,': 3, 'color,': 3, 'memory)': 1, '->': 3, 'none:': 3, 'self.brand': 3, '=': 12, 'brand': 3, 'self.price': 3, 'price': 3, 'self.color': 3, 'color': 3, 'self.memory': 1, 'memory': 1, 'run(self):': 3, 'return': 4, ""f'running"": 1, ""{self.brand}'"": 1, 'coding(self):': 1, ""f'learning"": 1, 'python': 1, 'and': 1, ""practicing'"": 1, 'phone:': 1, 'dual_sim)': 1, 'self.dual_sim': 1, 'dual_sim': 1, ""f'phone"": 1, 'tipa': 1, 'tipi': 1, ""kore'"": 1, 'phone_call(self,': 1, 'number,': 1, 'text):': 1, ""f'sending"": 1, 'sms': 1, 'to:': 1, '{number}': 1, 'with:': 1, ""{text}'"": 1, 'camera:': 1, 'pixel)': 1, 'self.pixel': 1, 'pixel': 1, 'pass': 2, 'change_lens(self):': 1, '#': 1}","{'cla': 3, 'las': 3, 'ass': 5, 'ss ': 3, 's L': 1, ' La': 1, 'Lap': 1, 'apt': 2, 'pto': 2, 'top': 2, 'op:': 2, 'p:\n': 1, ':\n ': 12, '\n  ': 31, '   ': 134, '  d': 9, ' de': 9, 'def': 9, 'ef ': 9, 'f _': 3, ' __': 3, '__i': 3, '_in': 3, 'ini': 3, 'nit': 3, 'it_': 3, 't__': 3, '__(': 3, '_(s': 3, '(se': 9, 'sel': 22, 'elf': 22, 'lf,': 4, 'f, ': 4, ', b': 3, ' br': 6, 'bra': 10, 'ran': 10, 'and': 11, 'nd,': 3, 'd, ': 3, ', p': 4, ' pr': 7, 'pri': 9, 'ric': 9, 'ice': 9, 'ce,': 3, 'e, ': 3, ', c': 3, ' co': 7, 'col': 9, 'olo': 9, 'lor': 9, 'or,': 3, 'r, ': 4, ', m': 1, ' me': 2, 'mem': 3, 'emo': 3, 'mor': 3, 'ory': 3, 'ry)': 1, 'y) ': 1, ') -': 3, ' ->': 3, '-> ': 3, '> N': 3, ' No': 3, 'Non': 3, 'one': 6, 'ne:': 4, 'e:\n': 4, '  s': 12, ' se': 12, 'lf.': 13, 'f.b': 4, '.br': 4, 'nd ': 4, 'd =': 3, ' = ': 12, '= b': 3, 'nd\n': 3, 'd\n ': 3, 'f.p': 4, '.pr': 3, 'ce ': 3, 'e =': 3, '= p': 4, 'ce\n': 3, 'e\n ': 3, 'f.c': 3, '.co': 3, 'or ': 3, 'r =': 3, '= c': 3, 'or\n': 3, 'r\n ': 3, 'f.m': 1, '.me': 1, 'ry ': 1, 'y =': 1, '= m': 1, 'ry\n': 1, 'y\n\n': 1, '\n\n ': 3, 'f r': 3, ' ru': 3, 'run': 3, 'un(': 3, 'n(s': 3, 'lf)': 5, 'f):': 5, '):\n': 6, '  r': 4, ' re': 4, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 4, 'n f': 4, "" f'"": 4, ""f'R"": 1, ""'Ru"": 1, 'Run': 1, 'unn': 1, 'nni': 1, 'nin': 2, 'ing': 5, 'ng ': 3, 'g l': 1, ' la': 1, 'lap': 1, 'p: ': 1, ': {': 3, ' {s': 1, '{se': 1, 'nd}': 1, ""d}'"": 1, ""}'\n"": 2, ""'\n "": 3, '  \n': 4, ' \n ': 3, 'f c': 2, 'cod': 1, 'odi': 1, 'din': 2, 'ng(': 1, 'g(s': 1, ""f'l"": 1, ""'le"": 1, 'lea': 1, 'ear': 1, 'arn': 1, 'rni': 1, 'g p': 1, ' py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 4, 'on ': 1, 'n a': 1, ' an': 1, 'd p': 1, 'pra': 1, 'rac': 1, 'act': 1, 'cti': 1, 'tic': 1, 'ici': 1, 'cin': 1, ""ng'"": 1, ""g'\n"": 1, ' \nc': 1, '\ncl': 2, 's P': 1, ' Ph': 1, 'Pho': 1, ', d': 1, ' du': 2, 'dua': 3, 'ual': 3, 'al_': 3, 'l_s': 3, '_si': 3, 'sim': 3, 'im)': 1, 'm) ': 1, 'f.d': 1, '.du': 1, 'im ': 1, 'm =': 1, '= d': 1, 'im\n': 1, 'm\n ': 1, ""f'p"": 1, ""'ph"": 1, 'pho': 2, 'ne ': 1, 'e t': 1, ' ti': 2, 'tip': 2, 'ipa': 1, 'pa ': 1, 'a t': 1, 'ipi': 1, 'pi ': 1, 'i k': 1, ' ko': 1, 'kor': 1, 'ore': 1, ""re'"": 1, ""e'\n"": 1, 'f p': 1, ' ph': 1, 'ne_': 1, 'e_c': 1, '_ca': 1, 'cal': 1, 'all': 1, 'll(': 1, 'l(s': 1, ', n': 1, ' nu': 1, 'num': 2, 'umb': 2, 'mbe': 2, 'ber': 2, 'er,': 1, ', t': 1, ' te': 1, 'tex': 2, 'ext': 2, 'xt)': 1, 't):': 1, ""f'S"": 1, ""'Se"": 1, 'Sen': 1, 'end': 1, 'ndi': 1, 'g S': 1, ' SM': 1, 'SMS': 1, 'MS ': 1, 'S t': 1, ' to': 1, 'to:': 1, 'o: ': 1, ' {n': 1, '{nu': 1, 'er}': 1, 'r} ': 1, '} w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'th:': 1, 'h: ': 1, ' {t': 1, '{te': 1, 'xt}': 1, ""t}'"": 1, ""'\n\n"": 1, '\n\nc': 1, 's C': 1, ' Ca': 1, 'Cam': 1, 'ame': 1, 'mer': 1, 'era': 1, 'ra:': 1, 'a:\n': 1, ' pi': 2, 'pix': 3, 'ixe': 3, 'xel': 3, 'el)': 1, 'l) ': 1, '.pi': 1, 'el ': 1, 'l =': 1, 'el\n': 1, 'l\n\n': 1, '  p': 2, ' pa': 2, 'pas': 2, 'ss\n': 2, 's\n\n': 2, ' ch': 1, 'cha': 1, 'han': 1, 'ang': 1, 'nge': 1, 'ge_': 1, 'e_l': 1, '_le': 1, 'len': 1, 'ens': 1, 'ns(': 1, 's(s': 1, '\n\n\n': 1, '\n\n#': 1, '\n# ': 1, '# \n': 1}"
phitronio,inheritance.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 4, 'base': 1, 'class,': 4, 'parent': 1, 'common': 1, 'attribute': 2, '+': 2, 'functionality': 2, 'class': 6, 'derived': 1, 'child': 1, 'uncommon': 1, 'gadget:': 1, 'def': 9, '__init__(self,': 4, 'brand,': 2, 'price,': 3, 'color,': 3, 'origin)': 2, '->': 5, 'none:': 4, 'self.brand': 1, '=': 9, 'brand': 1, 'self.price': 1, 'price': 1, 'self.color': 1, 'color': 1, 'self.origin': 1, 'origin': 1, 'run(self):': 1, 'return': 4, ""f'running"": 1, 'laptop:': 2, ""{self.brand}'"": 1, 'memory,': 1, 'ssd)': 1, 'self.memory': 1, 'memory': 1, 'self.ssd': 1, 'ssd': 1, 'coding(self):': 1, ""f'learning"": 1, 'python': 1, 'and': 1, ""practicing'"": 1, 'phone(gadget):': 1, 'origin,': 1, 'dual_sim)': 1, 'self.dual_sim': 1, 'dual_sim': 1, 'super().__init__(brand,': 1, 'phone_call(self,': 1, 'number,': 1, 'text):': 1, ""f'sending"": 1, 'sms': 1, 'to:': 1, '{number}': 1, 'with:': 1, ""{text}'"": 1, '__repr__(self)': 1, 'str:': 1, ""f'phone:"": 1, '{self.brand}': 1, '{self.price}': 1, ""{self.dual_sim}'"": 1, 'camera:': 1, 'pixel)': 1, 'self.pixel': 1, 'pixel': 1, 'change_lens(self):': 1, 'pass': 1, 'inheritance': 1, 'my_phone': 1, ""phone('iphone',"": 1, '120000,': 1, ""'silver',"": 1, ""'china',"": 1, 'true)': 1, 'my_phone.phone_call()': 1, 'print(my_phone.brand)': 1, 'print(my_phone)': 1}","{'# b': 1, ' ba': 1, 'bas': 1, 'ase': 1, 'se ': 1, 'e c': 1, ' cl': 6, 'cla': 10, 'las': 10, 'ass': 11, 'ss,': 4, 's, ': 4, ', p': 5, ' pa': 2, 'par': 1, 'are': 1, 'ren': 1, 'ent': 1, 'nt ': 1, 't c': 1, ', c': 5, ' co': 6, 'com': 2, 'omm': 2, 'mmo': 2, 'mon': 2, 'on ': 3, 'n a': 3, ' at': 2, 'att': 2, 'ttr': 2, 'tri': 2, 'rib': 2, 'ibu': 2, 'but': 2, 'ute': 2, 'te ': 2, 'e +': 2, ' + ': 2, '+ f': 2, ' fu': 2, 'fun': 2, 'unc': 3, 'nct': 2, 'cti': 3, 'tio': 2, 'ion': 2, 'ona': 2, 'nal': 2, 'ali': 2, 'lit': 2, 'ity': 2, 'ty ': 2, 'y c': 2, 'ss\n': 2, 's\n#': 1, '\n# ': 3, '# d': 1, ' de': 10, 'der': 1, 'eri': 2, 'riv': 1, 'ive': 1, 'ved': 1, 'ed ': 1, 'd c': 2, ' ch': 2, 'chi': 2, 'hil': 1, 'ild': 1, 'ld ': 1, ', u': 1, ' un': 1, 'nco': 1, 'ss ': 5, 's \n': 1, ' \n\n': 1, '\n\nc': 3, '\ncl': 4, 's G': 1, ' Ga': 1, 'Gad': 2, 'adg': 2, 'dge': 2, 'get': 2, 'et:': 1, 't:\n': 1, ':\n ': 13, '\n  ': 27, '   ': 110, '  d': 9, 'def': 9, 'ef ': 9, 'f _': 5, ' __': 5, '__i': 5, '_in': 5, 'ini': 5, 'nit': 5, 'it_': 5, 't__': 5, '__(': 6, '_(s': 5, '(se': 9, 'sel': 21, 'elf': 21, 'lf,': 5, 'f, ': 5, ', b': 2, ' br': 3, 'bra': 8, 'ran': 8, 'and': 9, 'nd,': 3, 'd, ': 3, ' pr': 5, 'pri': 8, 'ric': 6, 'ice': 6, 'ce,': 3, 'e, ': 3, 'col': 5, 'olo': 5, 'lor': 5, 'or,': 3, 'r, ': 4, ', o': 3, ' or': 4, 'ori': 5, 'rig': 5, 'igi': 5, 'gin': 5, 'in)': 2, 'n) ': 1, ') -': 5, ' ->': 5, '-> ': 5, '> N': 4, ' No': 4, 'Non': 4, 'one': 14, 'ne:': 5, 'e:\n': 4, '  s': 9, ' se': 8, 'lf.': 12, 'f.b': 3, '.br': 4, 'nd ': 2, 'd =': 2, ' = ': 9, '= b': 1, 'nd\n': 1, 'd\n ': 1, 'f.p': 3, '.pr': 2, 'ce ': 1, 'e =': 2, '= p': 2, 'ce\n': 2, 'e\n ': 1, 'f.c': 1, '.co': 1, 'or ': 1, 'r =': 1, '= c': 1, 'or\n': 1, 'r\n ': 1, 'f.o': 1, '.or': 1, 'in ': 1, 'n =': 1, '= o': 1, 'in\n': 1, 'n\n ': 1, '  \n': 4, ' \n ': 3, 'f r': 1, ' ru': 1, 'run': 1, 'un(': 1, 'n(s': 1, 'lf)': 4, 'f):': 3, '):\n': 5, '  r': 4, ' re': 4, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 4, 'n f': 4, "" f'"": 4, ""f'R"": 1, ""'Ru"": 1, 'Run': 1, 'unn': 1, 'nni': 1, 'nin': 2, 'ing': 5, 'ng ': 3, 'g l': 1, ' la': 1, 'lap': 1, 'apt': 2, 'pto': 2, 'top': 2, 'op:': 2, 'p: ': 1, ': {': 4, ' {s': 4, '{se': 4, 'nd}': 2, ""d}'"": 1, ""}'\n"": 3, ""'\n\n"": 2, '\n\n\n': 2, 's L': 1, ' La': 1, 'Lap': 1, 'p:\n': 1, ', m': 1, ' me': 2, 'mem': 3, 'emo': 3, 'mor': 3, 'ory': 3, 'ry,': 1, 'y, ': 1, ', s': 1, ' ss': 2, 'ssd': 3, 'sd)': 1, 'd) ': 1, 'f.m': 1, '.me': 1, 'ry ': 1, 'y =': 1, '= m': 1, 'ry\n': 1, 'y\n ': 1, 'f.s': 1, '.ss': 1, 'sd ': 1, '= s': 1, 'sd\n': 1, 'd\n\n': 1, '\n\n ': 2, 'f c': 2, 'cod': 1, 'odi': 1, 'din': 2, 'ng(': 1, 'g(s': 1, ""f'l"": 1, ""'le"": 1, 'lea': 1, 'ear': 1, 'arn': 1, 'rni': 1, 'g p': 1, ' py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 11, ' an': 1, 'd p': 1, 'pra': 1, 'rac': 1, 'act': 1, 'tic': 1, 'ici': 1, 'cin': 1, ""ng'"": 1, ""g'\n"": 1, ""'\n "": 2, ' \nc': 1, 's P': 1, ' Ph': 2, 'Pho': 2, 'ne(': 2, 'e(G': 1, '(Ga': 1, 'et)': 1, 't):': 2, 'in,': 1, 'n, ': 1, ', d': 1, ' du': 2, 'dua': 4, 'ual': 4, 'al_': 4, 'l_s': 4, '_si': 4, 'sim': 4, 'im)': 1, 'm) ': 1, 'f.d': 2, '.du': 2, 'im ': 1, 'm =': 1, '= d': 1, 'im\n': 1, 'm\n ': 1, ' su': 1, 'sup': 1, 'upe': 1, 'per': 1, 'er(': 1, 'r()': 1, '().': 1, ')._': 1, '.__': 1, '_(b': 1, '(br': 1, 'n)\n': 1, ')\n ': 1, 'f p': 1, ' ph': 1, 'pho': 8, 'ne_': 2, 'e_c': 2, '_ca': 2, 'cal': 2, 'all': 2, 'll(': 2, 'l(s': 1, ', n': 1, ' nu': 1, 'num': 2, 'umb': 2, 'mbe': 2, 'ber': 2, 'er,': 1, ', t': 1, ' te': 1, 'tex': 2, 'ext': 2, 'xt)': 1, ""f'S"": 1, ""'Se"": 1, 'Sen': 1, 'end': 1, 'ndi': 1, 'g S': 1, ' SM': 1, 'SMS': 1, 'MS ': 1, 'S t': 1, ' to': 1, 'to:': 1, 'o: ': 1, ' {n': 1, '{nu': 1, 'er}': 1, 'r} ': 1, '} w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'th:': 1, 'h: ': 1, ' {t': 1, '{te': 1, 'xt}': 1, ""t}'"": 1, '__r': 1, '_re': 1, 'rep': 1, 'epr': 1, 'pr_': 1, 'r__': 1, 'f) ': 1, '> s': 1, ' st': 1, 'str': 1, 'tr:': 1, 'r:\n': 1, ""f'p"": 1, ""'ph"": 1, 'e: ': 1, 'd} ': 1, '} {': 2, 'ce}': 1, 'e} ': 1, 'im}': 1, ""m}'"": 1, 's C': 1, ' Ca': 1, 'Cam': 1, 'ame': 1, 'mer': 1, 'era': 1, 'ra:': 1, 'a:\n': 1, ' pi': 2, 'pix': 3, 'ixe': 3, 'xel': 3, 'el)': 1, 'l) ': 1, '.pi': 1, 'el ': 1, 'l =': 1, 'el\n': 1, 'l\n\n': 1, 'cha': 1, 'han': 1, 'ang': 1, 'nge': 1, 'ge_': 1, 'e_l': 1, '_le': 1, 'len': 1, 'ens': 1, 'ns(': 1, 's(s': 1, '  p': 1, 'pas': 1, 's\n\n': 1, '\n\n#': 1, '# i': 1, ' in': 1, 'inh': 1, 'nhe': 1, 'her': 1, 'rit': 1, 'ita': 1, 'tan': 1, 'anc': 1, 'nce': 1, 'e\nm': 1, '\nmy': 1, 'my_': 4, 'y_p': 4, '_ph': 4, 'ne ': 1, '= P': 1, ""e('"": 1, ""('i"": 1, ""'ip"": 1, 'iph': 1, ""ne'"": 1, ""e',"": 1, ""', "": 3, ', 1': 1, ' 12': 1, '120': 1, '200': 1, '000': 2, '00,': 1, '0, ': 1, "", '"": 2, "" 's"": 1, ""'si"": 1, 'sil': 1, 'ilv': 1, 'lve': 1, 'ver': 1, ""er'"": 1, ""r',"": 1, "" 'c"": 1, ""'ch"": 1, 'hin': 1, 'ina': 1, ""na'"": 1, ""a',"": 1, ', T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e)\n': 2, ')\n#': 1, '# m': 1, ' my': 1, 'ne.': 2, 'e.p': 1, '.ph': 1, 'l()': 1, '()\n': 1, ')\np': 2, '\npr': 2, 'rin': 2, 'int': 2, 'nt(': 2, 't(m': 2, '(my': 2, 'e.b': 1, 'nd)': 1, 'd)\n': 1, 'ne)': 1}"
phitronio,inner_fn.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 7, 'function': 1, 'is': 1, 'a': 1, 'first': 1, 'class': 1, 'object': 1, 'def': 5, 'double_decker():': 1, ""print('starting"": 1, 'the': 2, 'double': 1, ""decker')"": 1, 'inner_fun():': 1, ""print('inside"": 1, ""inner')"": 1, 'return': 2, '3000': 1, 'inner_fun': 1, 'print(double_decker())': 1, 'print(double_decker()())': 1, 'do_something(work):': 1, ""print('work"": 2, ""started')"": 1, 'print(work)': 1, 'work()': 1, ""ended')"": 1, 'do_something(2)': 1, ""do_something('ami"": 1, ""busy')"": 1, 'coding():': 1, ""print('coding"": 1, 'in': 2, ""python')"": 2, 'do_something(coding)': 1, 'sleeping():': 1, ""print('sleeping"": 1, 'and': 1, 'dreaming': 1, 'do_something(sleeping)': 1}","{'# f': 1, ' fu': 1, 'fun': 3, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n i': 2, ' is': 1, 'is ': 1, 's a': 1, ' a ': 1, 'a f': 1, ' fi': 1, 'fir': 1, 'irs': 1, 'rst': 1, 'st ': 1, 't c': 1, ' cl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's o': 1, ' ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 1, 'ct\n': 1, 't\nd': 1, '\nde': 4, 'def': 5, 'ef ': 5, 'f d': 2, ' do': 6, 'dou': 4, 'oub': 4, 'ubl': 4, 'ble': 4, 'le_': 3, 'e_d': 3, '_de': 3, 'dec': 4, 'eck': 4, 'cke': 4, 'ker': 4, 'er(': 3, 'r()': 3, '():': 4, '):\n': 5, ':\n ': 5, '\n  ': 11, '   ': 30, '  p': 6, ' pr': 9, 'pri': 9, 'rin': 9, 'int': 9, 'nt(': 9, ""t('"": 6, ""('s"": 2, ""'st"": 1, 'sta': 2, 'tar': 2, 'art': 2, 'rti': 1, 'tin': 1, 'ing': 13, 'ng ': 4, 'g t': 1, ' th': 2, 'the': 2, 'he ': 2, 'e d': 2, 'le ': 1, ' de': 2, ""er'"": 2, ""r')"": 2, ""')\n"": 7, ')\n ': 5, '  d': 1, 'f i': 1, ' in': 5, 'inn': 3, 'nne': 3, 'ner': 3, 'er_': 2, 'r_f': 2, '_fu': 2, 'un(': 1, 'n()': 1, ""('i"": 1, ""'in"": 1, 'ins': 1, 'nsi': 1, 'sid': 1, 'ide': 1, 'de ': 1, 'e t': 1, 'e i': 1, '  r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n 3': 1, ' 30': 1, '300': 1, '000': 1, '00\n': 1, '0\n ': 1, 'un\n': 1, 'n\n\n': 1, '\n\n#': 3, '\n# ': 5, '# p': 3, 't(d': 2, '(do': 2, '())': 2, '))\n': 2, ')\n#': 2, '()(': 1, ')()': 1, ')\n\n': 4, '\n\nd': 2, 'do_': 5, 'o_s': 5, '_so': 5, 'som': 5, 'ome': 5, 'met': 5, 'eth': 5, 'thi': 5, 'hin': 5, 'ng(': 7, 'g(w': 1, '(wo': 2, 'wor': 5, 'ork': 5, 'rk)': 2, 'k):': 1, ""('w"": 2, ""'wo"": 2, 'rk ': 2, 'k s': 1, ' st': 1, 'rte': 1, 'ted': 1, ""ed'"": 2, ""d')"": 2, '  #': 1, ' # ': 1, 't(w': 1, 'k)\n': 1, '  w': 1, ' wo': 1, 'rk(': 1, 'k()': 1, '()\n': 1, 'k e': 1, ' en': 1, 'end': 1, 'nde': 1, 'ded': 1, '# d': 3, 'g(2': 1, '(2)': 1, '2)\n': 1, ""g('"": 1, ""('a"": 1, ""'am"": 1, 'ami': 2, 'mi ': 1, 'i b': 1, ' bu': 1, 'bus': 1, 'usy': 1, ""sy'"": 1, ""y')"": 1, ')\nd': 2, 'f c': 1, ' co': 1, 'cod': 3, 'odi': 3, 'din': 3, 'g()': 2, ""('c"": 1, ""'co"": 1, 'g i': 2, 'in ': 2, 'n p': 2, ' py': 2, 'pyt': 2, 'yth': 2, 'tho': 2, 'hon': 2, ""on'"": 2, ""n')"": 2, 'g(c': 1, '(co': 1, 'ng)': 2, 'g)\n': 2, 'f s': 1, ' sl': 1, 'sle': 3, 'lee': 3, 'eep': 3, 'epi': 3, 'pin': 3, ""'sl"": 1, 'g a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd d': 1, ' dr': 1, 'dre': 1, 'rea': 1, 'eam': 1, 'min': 1, '\ndo': 1, 'g(s': 1, '(sl': 1}"
phitronio,menu.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'class': 5, 'food:': 1, 'def': 8, '__init__(self,': 4, 'name,': 4, 'price)': 4, '->': 5, 'none:': 5, 'self.name': 1, '=': 12, 'name': 1, 'self.price': 1, 'price': 1, 'self.cooking_time': 1, '15': 1, 'burger(food):': 1, 'price,': 3, 'meat,': 1, 'ingredients)': 1, 'super().__init__(name,': 3, 'self.meat': 1, 'meat': 1, 'self.ingredients': 1, 'ingredients': 1, 'pizza(food):': 1, 'size,': 1, 'toppings)': 1, 'self.size': 1, 'size': 1, 'self.toppings': 1, 'toppings': 1, 'drinks(food):': 1, 'iscold': 2, 'true)': 1, 'self.iscold': 1, '#': 1, 'composition': 1, 'menu:': 1, '__init__(self)': 1, 'self.pizzas': 1, '[]': 3, 'self.burgers': 1, 'self.drinks': 1, 'add_menu_item(self,': 1, 'item_type,': 1, 'item):': 1, 'if': 2, 'item_type': 3, '==': 3, ""'pizza':"": 1, 'self.pizzas.append(item)': 1, 'elif': 2, ""'burger':"": 1, 'self.burgers.append(item)': 1, ""'drinks':"": 1, 'self.drinks.append(item)': 1, 'remove_pizza(self,': 1, 'pizza):': 1, 'pizza': 2, 'in': 4, 'self.pizzas:': 2, 'self.pizzas.remove(pizza)': 1, 'show_menu(self):': 1, 'for': 3, ""print(f'name:"": 3, '{pizza.name}': 1, 'price:': 3, ""{pizza.price}')"": 1, 'burger': 1, 'self.burgers:': 1, '{burger.name}': 1, ""{burger.price}')"": 1, 'drink': 1, 'self.drinks:': 1, '{drink.name}': 1, ""{drink.price}')"": 1}","{'cla': 5, 'las': 5, 'ass': 5, 'ss ': 5, 's F': 1, ' Fo': 1, 'Foo': 4, 'ood': 4, 'od:': 1, 'd:\n': 1, ':\n ': 20, '\n  ': 36, '   ': 212, '  d': 8, ' de': 8, 'def': 8, 'ef ': 8, 'f _': 5, ' __': 5, '__i': 8, '_in': 8, 'ini': 8, 'nit': 8, 'it_': 8, 't__': 8, '__(': 8, '_(s': 5, '(se': 8, 'sel': 27, 'elf': 27, 'lf,': 6, 'f, ': 6, ', n': 4, ' na': 5, 'nam': 15, 'ame': 15, 'me,': 7, 'e, ': 12, ', p': 8, ' pr': 14, 'pri': 18, 'ric': 15, 'ice': 15, 'ce)': 4, 'e) ': 2, ') -': 5, ' ->': 5, '-> ': 5, '> N': 5, ' No': 5, 'Non': 5, 'one': 5, 'ne:': 5, 'e:\n': 5, '  s': 18, ' se': 19, 'lf.': 19, 'f.n': 1, '.na': 4, 'me ': 2, 'e =': 7, ' = ': 12, '= n': 1, 'me\n': 1, 'e\n ': 3, 'f.p': 6, '.pr': 4, 'ce ': 1, '= p': 1, 'ce\n': 1, 'f.c': 1, '.co': 1, 'coo': 1, 'ook': 1, 'oki': 1, 'kin': 1, 'ing': 7, 'ng_': 1, 'g_t': 1, '_ti': 1, 'tim': 1, 'ime': 1, '= 1': 1, ' 15': 1, '15\n': 1, '5\n\n': 1, '\n\nc': 3, '\ncl': 4, 's B': 1, ' Bu': 1, 'Bur': 1, 'urg': 8, 'rge': 8, 'ger': 8, 'er(': 4, 'r(F': 1, '(Fo': 3, 'od)': 3, 'd):': 3, '):\n': 6, 'ce,': 3, ', m': 1, ' me': 2, 'mea': 3, 'eat': 3, 'at,': 1, 't, ': 1, ', i': 4, ' in': 6, 'ngr': 3, 'gre': 3, 'red': 3, 'edi': 3, 'die': 3, 'ien': 3, 'ent': 3, 'nts': 3, 'ts)': 1, 's) ': 2, ' su': 3, 'sup': 3, 'upe': 3, 'per': 3, 'r()': 3, '().': 3, ')._': 3, '.__': 3, '_(n': 3, '(na': 3, 'e)\n': 3, ')\n ': 7, 'f.m': 1, '.me': 1, 'at ': 1, 't =': 1, '= m': 1, 'at\n': 1, 't\n ': 1, 'f.i': 2, '.in': 1, 'ts ': 1, 's =': 5, '= i': 2, 'ts\n': 1, 's\n\n': 2, '\n\n\n': 2, 's P': 1, ' Pi': 1, 'Piz': 1, 'izz': 14, 'zza': 14, 'za(': 2, 'a(F': 1, ', s': 1, ' si': 2, 'siz': 3, 'ize': 3, 'ze,': 1, ', t': 1, ' to': 2, 'top': 3, 'opp': 3, 'ppi': 3, 'pin': 3, 'ngs': 3, 'gs)': 1, 'f.s': 1, '.si': 1, 'ze ': 1, '= s': 1, 'ze\n': 1, 'f.t': 1, '.to': 1, 'gs ': 1, '= t': 1, 'gs\n': 1, 's D': 1, ' Dr': 1, 'Dri': 1, 'rin': 11, 'ink': 8, 'nks': 5, 'ks(': 1, 's(F': 1, ' is': 2, 'isC': 3, 'sCo': 3, 'Col': 3, 'old': 3, 'ld ': 2, 'd =': 2, '= T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, '.is': 1, 'ld\n': 1, 'd\n\n': 1, '\n\n#': 1, '\n# ': 1, '# c': 1, ' co': 1, 'com': 1, 'omp': 1, 'mpo': 1, 'pos': 1, 'osi': 1, 'sit': 1, 'iti': 1, 'tio': 1, 'ion': 1, 'on\n': 1, 'n\nc': 1, 's M': 1, ' Me': 1, 'Men': 1, 'enu': 3, 'nu:': 1, 'u:\n': 1, 'lf)': 2, 'f) ': 1, '.pi': 5, 'piz': 13, 'zas': 5, 'as ': 1, '= [': 3, ' []': 3, '[]\n': 3, ']\n ': 2, 'f.b': 3, '.bu': 3, 'bur': 7, 'ers': 3, 'rs ': 1, 'f.d': 3, '.dr': 3, 'dri': 7, 'ks ': 1, ']\n\n': 1, '\n\n ': 3, 'f a': 1, ' ad': 1, 'add': 1, 'dd_': 1, 'd_m': 1, '_me': 2, 'men': 2, 'nu_': 1, 'u_i': 1, '_it': 1, 'ite': 9, 'tem': 9, 'em(': 1, 'm(s': 1, ' it': 5, 'em_': 4, 'm_t': 4, '_ty': 4, 'typ': 4, 'ype': 4, 'pe,': 1, 'em)': 4, 'm):': 1, '  i': 2, ' if': 2, 'if ': 4, 'f i': 3, 'pe ': 3, ' ==': 3, '== ': 3, ""= '"": 3, "" 'p"": 1, ""'pi"": 1, ""za'"": 1, ""a':"": 1, ""':\n"": 3, 'as.': 2, 's.a': 3, '.ap': 3, 'app': 3, 'ppe': 3, 'pen': 3, 'end': 3, 'nd(': 3, 'd(i': 3, '(it': 3, 'm)\n': 3, '  e': 2, ' el': 2, 'eli': 2, 'lif': 2, "" 'b"": 1, ""'bu"": 1, ""er'"": 1, ""r':"": 1, 'rs.': 1, "" 'd"": 1, ""'dr"": 1, ""ks'"": 1, ""s':"": 1, 'ks.': 1, ')\n\n': 2, 'f r': 1, ' re': 1, 'rem': 2, 'emo': 2, 'mov': 2, 'ove': 2, 've_': 1, 'e_p': 1, '_pi': 1, 'a(s': 1, ' pi': 3, 'za)': 2, 'a):': 1, 'f p': 1, 'za ': 2, 'a i': 2, 'in ': 4, 'n s': 4, 'as:': 2, 's:\n': 4, 's.r': 1, '.re': 1, 've(': 1, 'e(p': 1, '(pi': 1, 'a)\n': 1, 'f s': 1, ' sh': 1, 'sho': 1, 'how': 1, 'ow_': 1, 'w_m': 1, 'nu(': 1, 'u(s': 1, 'f):': 1, '  f': 3, ' fo': 3, 'for': 3, 'or ': 3, 'r p': 1, '  p': 3, 'int': 3, 'nt(': 3, 't(f': 3, ""(f'"": 3, ""f'n"": 3, ""'na"": 3, 'me:': 3, 'e: ': 6, ': {': 6, ' {p': 2, '{pi': 2, 'za.': 2, 'a.n': 1, 'me}': 3, 'e} ': 3, '} p': 3, 'ce:': 3, 'a.p': 1, 'ce}': 3, ""e}'"": 3, ""}')"": 3, ""')\n"": 3, 'r b': 1, ' bu': 1, 'er ': 1, 'r i': 1, 'rs:': 1, ' {b': 2, '{bu': 2, 'er.': 2, 'r.n': 1, 'r.p': 1, 'r d': 1, ' dr': 1, 'nk ': 1, 'k i': 1, 'ks:': 1, ' {d': 2, '{dr': 2, 'nk.': 2, 'k.n': 1, 'k.p': 1}"
phitronio,muitiple_inheritance.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'class': 4, 'family:': 1, 'def': 4, '__init__(self,': 4, 'address)': 2, '->': 4, 'none:': 4, 'self.address': 1, '=': 4, 'address': 1, 'school:': 1, 'id,': 3, 'level)': 2, 'self.id': 1, 'id': 1, 'self.level': 1, 'level': 1, 'sports:': 1, 'game)': 3, 'self.game': 1, 'game': 1, 'student(family,': 1, 'school,': 1, 'sports):': 1, 'address,': 1, 'level,': 1, 'school.__init__(self,': 1, 'sports.__init__(self,': 1, 'family.__init__(self,': 1}","{'cla': 4, 'las': 4, 'ass': 4, 'ss ': 5, 's F': 1, ' Fa': 2, 'Fam': 3, 'ami': 3, 'mil': 3, 'ily': 3, 'ly:': 1, 'y:\n': 1, ':\n ': 8, '\n  ': 11, '   ': 50, '  d': 4, ' de': 4, 'def': 4, 'ef ': 4, 'f _': 4, ' __': 4, '__i': 7, '_in': 7, 'ini': 7, 'nit': 7, 'it_': 7, 't__': 7, '__(': 7, '_(s': 7, '(se': 7, 'sel': 11, 'elf': 11, 'lf,': 7, 'f, ': 7, ', a': 3, ' ad': 4, 'add': 5, 'ddr': 5, 'dre': 5, 'res': 5, 'ess': 5, 'ss)': 2, 's) ': 1, ') -': 4, ' ->': 4, '-> ': 4, '> N': 4, ' No': 4, 'Non': 4, 'one': 4, 'ne:': 4, 'e:\n': 4, '  s': 4, ' se': 4, 'lf.': 4, 'f.a': 1, '.ad': 1, 's =': 1, ' = ': 4, '= a': 1, 'ss\n': 1, 's\n\n': 1, '\n\nc': 3, '\ncl': 3, 's S': 3, ' Sc': 3, 'Sch': 3, 'cho': 3, 'hoo': 3, 'ool': 3, 'ol:': 1, 'l:\n': 1, ', i': 3, ' id': 4, 'id,': 3, 'd, ': 3, ', l': 3, ' le': 4, 'lev': 5, 'eve': 5, 'vel': 5, 'el)': 2, 'l) ': 1, 'f.i': 1, '.id': 1, 'id ': 1, 'd =': 1, '= i': 1, 'id\n': 1, 'd\n ': 1, 'f.l': 1, '.le': 1, 'el ': 1, 'l =': 1, '= l': 1, 'el\n': 1, 'l\n\n': 1, ' Sp': 3, 'Spo': 3, 'por': 3, 'ort': 3, 'rts': 3, 'ts:': 1, 's:\n': 1, ', g': 3, ' ga': 4, 'gam': 5, 'ame': 5, 'me)': 3, 'e) ': 2, 'f.g': 1, '.ga': 1, 'me ': 1, 'e =': 1, '= g': 1, 'me\n': 1, 'e\n\n': 1, ' St': 1, 'Stu': 1, 'tud': 1, 'ude': 1, 'den': 1, 'ent': 1, 'nt(': 1, 't(F': 1, '(Fa': 1, 'ly,': 1, 'y, ': 1, ', S': 2, 'ol,': 1, 'l, ': 2, 'ts)': 1, 's):': 1, '):\n': 1, 'ss,': 1, 's, ': 1, 'el,': 1, '  S': 2, 'ol.': 1, 'l._': 1, '.__': 3, 'l)\n': 1, ')\n ': 2, 'ts.': 1, 's._': 1, 'e)\n': 1, '  F': 1, 'ly.': 1, 'y._': 1, 's)\n': 1}"
phitronio,muiti_level_inheritance.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'class': 5, 'vehicle:': 1, 'def': 9, '__init__(self,': 5, 'name,': 5, 'price)': 3, '->': 8, 'none:': 5, 'self.name': 1, '=': 6, 'name': 1, 'self.price': 1, 'price': 1, '__repr__(self)': 3, 'str:': 3, 'return': 3, ""f'{self.name}"": 1, ""{self.price}'"": 1, 'move(self):': 1, 'pass': 1, 'bus(vehicle):': 1, 'price,': 6, 'seat)': 2, 'self.seat': 1, 'seat': 1, 'super().__init__(name,': 4, 'super().__repr__()': 2, 'truck(vehicle):': 1, 'weight)': 3, 'self.weight': 1, 'weight': 1, 'pickuptruck(truck):': 1, 'acbus(bus):': 1, 'seat,': 1, 'temperature)': 1, 'self.temperature': 1, 'temperature': 1, ""print(f'{self.seat}')"": 1, 'green_line': 1, ""acbus('green',"": 1, '5000000,': 1, '22,': 1, '16)': 1, 'print(green_line)': 1}","{'cla': 5, 'las': 5, 'ass': 6, 'ss ': 5, 's V': 1, ' Ve': 1, 'Veh': 3, 'ehi': 3, 'hic': 3, 'icl': 3, 'cle': 3, 'le:': 1, 'e:\n': 6, ':\n ': 14, '\n  ': 24, '   ': 104, '  d': 9, ' de': 9, 'def': 9, 'ef ': 9, 'f _': 8, ' __': 8, '__i': 9, '_in': 9, 'ini': 9, 'nit': 9, 'it_': 9, 't__': 9, '__(': 14, '_(s': 8, '(se': 9, 'sel': 17, 'elf': 17, 'lf,': 5, 'f, ': 5, ', n': 5, ' na': 6, 'nam': 12, 'ame': 12, 'me,': 9, 'e, ': 15, ', p': 9, ' pr': 11, 'pri': 14, 'ric': 12, 'ice': 12, 'ce)': 3, 'e) ': 2, ') -': 8, ' ->': 8, '-> ': 8, '> N': 5, ' No': 5, 'Non': 5, 'one': 5, 'ne:': 5, '  s': 9, ' se': 9, 'lf.': 8, 'f.n': 2, '.na': 2, 'me ': 1, 'e =': 4, ' = ': 6, '= n': 1, 'me\n': 1, 'e\n ': 2, 'f.p': 2, '.pr': 2, 'ce ': 1, '= p': 1, 'ce\n': 1, 'e\n\n': 1, '\n\n ': 2, '__r': 5, '_re': 5, 'rep': 5, 'epr': 5, 'pr_': 5, 'r__': 5, 'lf)': 4, 'f) ': 3, '> s': 3, ' st': 3, 'str': 3, 'tr:': 3, 'r:\n': 3, '  r': 3, ' re': 3, 'ret': 3, 'etu': 3, 'tur': 6, 'urn': 3, 'rn ': 3, 'n f': 1, "" f'"": 1, ""f'{"": 2, ""'{s"": 2, '{se': 3, 'me}': 1, 'e} ': 1, '} {': 1, ' {s': 1, 'ce}': 1, ""e}'"": 1, ""}'\n"": 1, ""'\n "": 1, '  \n': 1, ' \n ': 1, 'f m': 1, ' mo': 1, 'mov': 1, 'ove': 1, 've(': 1, 'e(s': 1, 'f):': 1, '):\n': 5, '  p': 2, ' pa': 1, 'pas': 1, 'ss\n': 1, 's\n\n': 1, '\n\nc': 4, '\ncl': 4, 's B': 1, ' Bu': 1, 'Bus': 4, 'us(': 3, 's(V': 1, '(Ve': 2, 'le)': 2, 'e):': 2, 'ce,': 6, ', s': 3, 'sea': 6, 'eat': 6, 'at)': 2, 't) ': 3, 'f.s': 2, '.se': 2, 'at ': 1, 't =': 2, '= s': 1, 'at\n': 1, 't\n ': 2, ' su': 6, 'sup': 6, 'upe': 6, 'per': 9, 'er(': 6, 'r()': 6, '().': 6, ')._': 6, '.__': 6, '_(n': 4, '(na': 4, 'e)\n': 3, ')\n\n': 5, 'n s': 2, '_()': 2, '()\n': 2, 's T': 1, ' Tr': 1, 'Tru': 3, 'ruc': 3, 'uck': 3, 'ck(': 2, 'k(V': 1, ', w': 3, ' we': 4, 'wei': 5, 'eig': 5, 'igh': 5, 'ght': 5, 'ht)': 3, 'f.w': 1, '.we': 1, 'ht ': 1, '= w': 1, 'ht\n': 1, 's P': 1, ' Pi': 1, 'Pic': 1, 'ick': 1, 'ckU': 1, 'kUp': 1, 'UpT': 1, 'pTr': 1, 'k(T': 1, '(Tr': 1, 'ck)': 1, 'k):': 1, 't)\n': 2, 's A': 1, ' AC': 2, 'ACB': 2, 'CBu': 2, 's(B': 1, '(Bu': 1, 'us)': 1, 's):': 1, 'at,': 1, 't, ': 1, ', t': 1, ' te': 2, 'tem': 3, 'emp': 3, 'mpe': 3, 'era': 3, 'rat': 3, 'atu': 3, 'ure': 3, 're)': 1, 'f.t': 1, '.te': 1, 're ': 1, '= t': 1, 're\n': 1, ')\n ': 2, 'rin': 2, 'int': 2, 'nt(': 2, 't(f': 1, ""(f'"": 1, 'at}': 1, ""t}'"": 1, ""}')"": 1, ""')\n"": 1, '\n\n\n': 1, '\n\ng': 1, '\ngr': 1, 'gre': 3, 'ree': 3, 'een': 3, 'en_': 2, 'n_l': 2, '_li': 2, 'lin': 2, 'ine': 2, 'ne ': 1, '= A': 1, ""s('"": 1, ""('g"": 1, ""'gr"": 1, ""en'"": 1, ""n',"": 1, ""', "": 1, ', 5': 1, ' 50': 1, '500': 1, '000': 4, '00,': 1, '0, ': 1, ', 2': 1, ' 22': 1, '22,': 1, '2, ': 1, ', 1': 1, ' 16': 1, '16)': 1, '6)\n': 1, ')\np': 1, '\npr': 1, 't(g': 1, '(gr': 1, 'ne)': 1}"
phitronio,override.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'class': 2, 'person:': 1, 'def': 10, '__init__(self,': 2, 'name,': 2, 'age,': 3, 'height,': 3, 'weight)': 2, '->': 2, 'none:': 2, 'self.name': 1, '=': 7, 'name': 1, 'self.age': 3, 'age': 1, 'self.height': 2, 'height': 1, 'self.weight': 2, 'weight': 1, 'eat(self):': 2, ""print('vat"": 1, 'mangso': 1, 'polau': 1, ""korma')"": 1, 'exercise(self):': 2, 'raise': 1, 'notimplementederror': 1, 'cricketer(person):': 1, 'weight,': 1, 'team)': 1, 'self.team': 1, 'team': 1, 'super().__init__(name,': 1, '#': 8, 'override': 1, ""print('vegetables')"": 1, ""print('gym"": 1, 'e': 1, 'poisa': 1, 'diya': 1, 'hudai': 1, 'gham': 1, ""jorai')"": 1, '+': 6, 'sign': 3, 'operator': 3, 'overload': 5, '__add__(self,': 1, 'other):': 3, 'return': 4, 'other.age': 2, '*': 3, '__mul__(self,': 1, 'other.weight': 1, 'len': 1, '__len__(self):': 1, '>': 3, '__gt__(self,': 1, 'sakib': 1, ""cricketer('sakib',"": 1, '38,': 1, '68,': 1, '91,': 1, ""'bd')"": 2, 'mushi': 1, ""cricketer('mushi',"": 1, '36,': 1, '65,': 1, '78,': 1, 'sakib.eat()': 1, 'sakib.exercise()': 1, 'plus': 1, 'print(45': 1, '63)': 1, 'print(': 1, ""'sakib'"": 1, ""'rakib')"": 1, 'print([12,': 1, '98]': 1, '[5,6,7,1,2])': 1, 'print(sakib': 3, 'mushi)': 3, 'print(len(sakib))': 1}","{'cla': 2, 'las': 2, 'ass': 2, 'ss ': 2, 's P': 1, ' Pe': 1, 'Per': 2, 'ers': 2, 'rso': 2, 'son': 2, 'on:': 1, 'n:\n': 1, ':\n ': 12, '\n  ': 33, '   ': 122, '  d': 10, ' de': 10, 'def': 10, 'ef ': 10, 'f _': 6, ' __': 6, '__i': 3, '_in': 3, 'ini': 3, 'nit': 3, 'it_': 3, 't__': 4, '__(': 7, '_(s': 6, '(se': 10, 'sel': 19, 'elf': 19, 'lf,': 5, 'f, ': 5, ', n': 2, ' na': 3, 'nam': 5, 'ame': 5, 'me,': 3, 'e, ': 6, ', a': 3, ' ag': 4, 'age': 9, 'ge,': 3, ', h': 3, ' he': 4, 'hei': 6, 'eig': 13, 'igh': 13, 'ght': 13, 'ht,': 4, 't, ': 4, ', w': 3, ' we': 4, 'wei': 7, 'ht)': 2, 't) ': 1, ') -': 2, ' ->': 2, '-> ': 2, '> N': 2, ' No': 3, 'Non': 2, 'one': 2, 'ne:': 2, 'e:\n': 2, '  s': 6, ' se': 9, 'lf.': 9, 'f.n': 1, '.na': 1, 'me ': 1, 'e =': 2, ' = ': 7, '= n': 1, 'me\n': 1, 'e\n ': 4, 'f.a': 3, '.ag': 5, 'ge ': 3, '= a': 1, 'ge\n': 3, 'f.h': 2, '.he': 2, 'ht ': 3, 't =': 2, '= h': 1, 'ht\n': 4, 't\n ': 3, 'f.w': 2, '.we': 3, '= w': 1, 't\n\n': 1, '\n\n ': 4, 'f e': 4, ' ea': 2, 'eat': 3, 'at(': 3, 't(s': 5, 'lf)': 5, 'f):': 5, '):\n': 9, '  p': 3, ' pr': 3, 'pri': 10, 'rin': 10, 'int': 10, 'nt(': 10, ""t('"": 3, ""('v"": 2, ""'va"": 1, 'vat': 1, 'at ': 1, 't m': 1, ' ma': 1, 'man': 1, 'ang': 1, 'ngs': 1, 'gso': 1, 'so ': 1, 'o p': 1, ' po': 2, 'pol': 1, 'ola': 1, 'lau': 1, 'au ': 1, 'u k': 1, ' ko': 1, 'kor': 1, 'orm': 1, 'rma': 1, ""ma'"": 1, ""a')"": 1, ""')\n"": 6, ')\n\n': 4, ' ex': 2, 'exe': 3, 'xer': 3, 'erc': 3, 'rci': 3, 'cis': 3, 'ise': 4, 'se(': 3, 'e(s': 2, '  r': 5, ' ra': 1, 'rai': 2, 'ais': 1, 'se ': 1, 'e N': 1, 'Not': 1, 'otI': 1, 'tIm': 1, 'Imp': 1, 'mpl': 1, 'ple': 1, 'lem': 1, 'eme': 1, 'men': 1, 'ent': 1, 'nte': 1, 'ted': 1, 'edE': 1, 'dEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or\n': 1, 'r\n\n': 1, '\n\nc': 1, '\ncl': 1, 's C': 1, ' Cr': 3, 'Cri': 3, 'ric': 3, 'ick': 3, 'cke': 3, 'ket': 3, 'ete': 3, 'ter': 3, 'er(': 4, 'r(P': 1, '(Pe': 1, 'on)': 1, 'n):': 1, ', t': 1, ' te': 2, 'tea': 3, 'eam': 3, 'am)': 1, 'm) ': 1, 'f.t': 1, '.te': 1, 'am ': 2, 'm =': 1, '= t': 1, 'am\n': 1, 'm\n ': 1, ' su': 1, 'sup': 1, 'upe': 1, 'per': 4, 'r()': 1, '().': 1, ')._': 1, '.__': 1, '_(n': 1, '(na': 1, 't)\n': 1, ')\n ': 1, '  \n': 4, ' \n ': 4, '  #': 5, ' # ': 5, '# o': 1, ' ov': 6, 'ove': 6, 'ver': 6, 'err': 1, 'rri': 1, 'rid': 1, 'ide': 1, 'de\n': 1, ""'ve"": 1, 'veg': 1, 'ege': 1, 'get': 1, 'eta': 1, 'tab': 1, 'abl': 1, 'ble': 1, 'les': 1, ""es'"": 1, ""s')"": 1, ""('g"": 1, ""'gy"": 1, 'gym': 1, 'ym ': 1, 'm e': 1, ' e ': 1, 'e p': 1, 'poi': 1, 'ois': 1, 'isa': 1, 'sa ': 1, 'a d': 1, ' di': 1, 'diy': 1, 'iya': 1, 'ya ': 1, 'a h': 1, ' hu': 1, 'hud': 1, 'uda': 1, 'dai': 1, 'ai ': 1, 'i g': 1, ' gh': 1, 'gha': 1, 'ham': 1, 'm j': 1, ' jo': 1, 'jor': 1, 'ora': 1, ""ai'"": 1, ""i')"": 1, '# +': 1, ' + ': 6, '+ s': 1, ' si': 3, 'sig': 3, 'ign': 3, 'gn ': 3, 'n o': 4, ' op': 3, 'ope': 3, 'era': 3, 'rat': 3, 'ato': 3, 'tor': 3, 'or ': 3, 'r o': 3, 'erl': 5, 'rlo': 5, 'loa': 5, 'oad': 5, 'ad\n': 5, 'd\n ': 4, '__a': 1, '_ad': 1, 'add': 1, 'dd_': 1, 'd__': 1, ', o': 3, ' ot': 6, 'oth': 6, 'the': 6, 'her': 6, 'er)': 3, 'r):': 3, ' re': 4, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 4, 'n s': 4, 'e +': 1, '+ o': 1, 'er.': 3, 'r.a': 2, '# *': 1, ' * ': 3, '* s': 1, '__m': 1, '_mu': 1, 'mul': 1, 'ul_': 1, 'l__': 1, 't *': 1, '* o': 1, 'r.w': 1, '# l': 1, ' le': 1, 'len': 3, 'en ': 1, '__l': 1, '_le': 1, 'en_': 1, 'n__': 1, '# >': 1, ' > ': 3, '> o': 2, '__g': 1, '_gt': 1, 'gt_': 1, 'e >': 1, 'e\n\n': 1, '\n\n\n': 1, '\n\ns': 1, '\nsa': 1, 'sak': 8, 'aki': 10, 'kib': 10, 'ib ': 4, 'b =': 1, '= C': 2, ""r('"": 2, ""('s"": 1, ""'sa"": 1, ""ib'"": 3, ""b',"": 1, ""', "": 2, ', 3': 2, ' 38': 1, '38,': 1, '8, ': 3, ', 6': 2, ' 68': 1, '68,': 1, ', 9': 2, ' 91': 1, '91,': 1, '1, ': 1, "", '"": 2, "" 'B"": 2, ""'BD"": 2, ""BD'"": 2, ""D')"": 2, ')\nm': 1, '\nmu': 1, 'mus': 5, 'ush': 5, 'shi': 5, 'hi ': 1, 'i =': 1, ""('m"": 1, ""'mu"": 1, ""hi'"": 1, ""i',"": 1, ' 36': 1, '36,': 1, '6, ': 1, ' 65': 1, '65,': 1, '5, ': 1, ', 7': 1, ' 78': 1, '78,': 1, ')\n#': 2, '\n# ': 3, '# s': 2, ' sa': 2, 'ib.': 2, 'b.e': 2, '.ea': 1, 't()': 1, '()\n': 2, '.ex': 1, 'e()': 1, '\n\n#': 1, '# p': 1, ' pl': 1, 'plu': 1, 'lus': 1, 'us ': 1, 's s': 1, 'd\np': 1, '\npr': 7, 't(4': 1, '(45': 1, '45 ': 1, '5 +': 1, '+ 6': 1, ' 63': 1, '63)': 1, '3)\n': 1, ')\np': 6, 't( ': 1, ""( '"": 1, "" 'S"": 1, ""'Sa"": 1, 'Sak': 1, ""b' "": 1, ""' +"": 1, ""+ '"": 1, "" 'R"": 1, ""'Ra"": 1, 'Rak': 1, ""b')"": 1, 't([': 1, '([1': 1, '[12': 1, '12,': 1, '2, ': 1, ' 98': 1, '98]': 1, '8] ': 1, '] +': 1, '+ [': 1, ' [5': 1, '[5,': 1, '5,6': 1, ',6,': 1, '6,7': 1, ',7,': 1, '7,1': 1, ',1,': 1, '1,2': 1, ',2]': 1, '2])': 1, '])\n': 1, '(sa': 4, 'b +': 1, '+ m': 1, ' mu': 3, 'hi)': 3, 'i)\n': 3, 'b *': 1, '* m': 1, 't(l': 1, '(le': 1, 'en(': 1, 'n(s': 1, 'ib)': 1, 'b))': 1, '))\n': 1, 'b >': 1, '> m': 1}"
phitronio,polymorpism.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'poly': 1, '-->': 2, 'many': 1, '(multiple)': 1, 'morph': 1, 'shape': 1, 'class': 4, 'animal:': 1, 'def': 8, '__init__(self,': 4, 'name)': 4, '->': 4, 'none:': 4, 'self.name': 1, '=': 6, 'name': 1, 'make_sound(self):': 4, ""print('animal"": 1, 'making': 1, 'some': 1, ""sound')"": 1, 'cat(animal):': 1, 'super().__init__(name)': 3, ""print('meow"": 1, ""meow')"": 1, 'dog(animal):': 1, ""print('gheu"": 1, ""gheu')"": 1, 'goat(animal):': 1, ""print('beh"": 1, 'beh': 1, ""beh')"": 1, 'don': 1, ""cat('real"": 1, ""don')"": 1, 'don.make_sound()': 1, 'shepard': 1, ""dog('local"": 1, ""shephard')"": 1, 'shepard.make_sound()': 1, 'mess': 1, ""goat('l"": 1, ""m')"": 1, 'mess.make_sound()': 1, 'less': 1, ""goat('gora"": 1, ""gori')"": 1, 'animals': 1, '[don,': 1, 'shepard,': 1, 'mess,': 1, 'less]': 1, 'for': 1, 'animal': 1, 'in': 1, 'animals:': 1, 'animal.make_sound()': 1}","{'# p': 1, ' po': 1, 'pol': 1, 'oly': 1, 'ly ': 1, 'y -': 1, ' --': 2, '-->': 2, '-> ': 6, '> m': 1, ' ma': 6, 'man': 1, 'any': 1, 'ny ': 1, 'y (': 1, ' (m': 1, '(mu': 1, 'mul': 1, 'ult': 1, 'lti': 1, 'tip': 1, 'ipl': 1, 'ple': 1, 'le)': 1, 'e)\n': 4, ')\n#': 1, '\n# ': 1, '# m': 1, ' mo': 1, 'mor': 1, 'orp': 1, 'rph': 1, 'ph ': 1, 'h -': 1, '> s': 1, ' sh': 2, 'sha': 1, 'hap': 1, 'ape': 1, 'pe\n': 1, 'e\n\n': 1, '\n\nc': 4, '\ncl': 4, 'cla': 4, 'las': 4, 'ass': 4, 'ss ': 6, 's  ': 1, '  A': 1, ' An': 1, 'Ani': 4, 'nim': 9, 'ima': 9, 'mal': 9, 'al:': 1, 'l:\n': 1, ':\n ': 13, '\n  ': 21, '   ': 74, '  d': 8, ' de': 8, 'def': 8, 'ef ': 8, 'f _': 4, ' __': 4, '__i': 7, '_in': 7, 'ini': 7, 'nit': 7, 'it_': 7, 't__': 7, '__(': 7, '_(s': 4, '(se': 8, 'sel': 9, 'elf': 9, 'lf,': 4, 'f, ': 4, ', n': 4, ' na': 5, 'nam': 9, 'ame': 9, 'me)': 7, 'e) ': 4, ') -': 4, ' ->': 4, '> N': 4, ' No': 4, 'Non': 4, 'one': 4, 'ne:': 4, 'e:\n': 4, '  s': 4, ' se': 1, 'lf.': 1, 'f.n': 1, '.na': 1, 'me ': 2, 'e =': 1, ' = ': 6, '= n': 1, 'me\n': 1, 'e\n ': 1, '  \n': 4, ' \n ': 3, 'f m': 4, 'mak': 9, 'ake': 8, 'ke_': 8, 'e_s': 8, '_so': 8, 'sou': 9, 'oun': 9, 'und': 9, 'nd(': 8, 'd(s': 4, 'lf)': 4, 'f):': 4, '):\n': 7, '  p': 4, ' pr': 4, 'pri': 4, 'rin': 4, 'int': 4, 'nt(': 4, ""t('"": 7, ""('a"": 1, ""'an"": 1, 'ani': 5, 'al ': 4, 'l m': 1, 'aki': 1, 'kin': 1, 'ing': 1, 'ng ': 1, 'g s': 1, ' so': 2, 'som': 1, 'ome': 1, 'e s': 1, ""nd'"": 1, ""d')"": 2, ""')\n"": 8, ')\n\n': 9, 's C': 1, ' Ca': 2, 'Cat': 2, 'at(': 5, 't(A': 2, '(An': 3, 'al)': 3, 'l):': 3, ' su': 3, 'sup': 3, 'upe': 3, 'per': 3, 'er(': 3, 'r()': 3, '().': 3, ')._': 3, '.__': 3, '_(n': 3, '(na': 3, ')\n ': 2, ""('m"": 1, ""'me"": 1, 'meo': 2, 'eow': 2, 'ow ': 1, 'w m': 1, ' me': 2, ""ow'"": 1, ""w')"": 1, 's D': 1, ' Do': 3, 'Dog': 2, 'og(': 2, 'g(A': 1, '\n\n ': 2, ""('g"": 2, ""'gh"": 1, 'ghe': 2, 'heu': 2, 'eu ': 1, 'u g': 1, ' gh': 1, ""eu'"": 1, ""u')"": 1, 's G': 1, ' Go': 3, 'Goa': 3, 'oat': 3, ""('b"": 1, ""'be"": 1, 'beh': 3, 'eh ': 2, 'h b': 2, ' be': 2, ""eh'"": 1, ""h')"": 1, ' \n\n': 1, '\n\nd': 1, '\ndo': 2, 'don': 3, 'on ': 1, 'n =': 1, '= C': 1, ""('R"": 1, ""'Re"": 1, 'Rea': 1, 'eal': 1, 'l D': 1, 'Don': 1, ""on'"": 1, ""n')"": 1, ')\nd': 1, 'on.': 1, 'n.m': 1, '.ma': 4, 'd()': 4, '()\n': 4, '\n\ns': 1, '\nsh': 2, 'she': 3, 'hep': 4, 'epa': 3, 'par': 3, 'ard': 4, 'rd ': 1, 'd =': 1, '= D': 1, ""g('"": 1, ""('L"": 2, ""'Lo"": 1, 'Loc': 1, 'oca': 1, 'cal': 1, 'l S': 1, ' Sh': 1, 'She': 1, 'eph': 1, 'pha': 1, 'har': 1, ""rd'"": 1, ')\ns': 1, 'rd.': 1, 'd.m': 1, '\n\nm': 1, '\nme': 2, 'mes': 3, 'ess': 5, 's =': 3, '= G': 2, ""'L "": 1, 'L M': 1, "" M'"": 1, ""M')"": 1, ')\nm': 1, 'ss.': 1, 's.m': 1, '\n\nl': 1, '\nle': 1, 'les': 2, ""'go"": 1, 'gor': 2, 'ora': 1, 'ra ': 1, 'a g': 1, ' go': 1, 'ori': 1, ""ri'"": 1, ""i')"": 1, '\n\na': 1, '\nan': 1, 'als': 2, 'ls ': 1, '= [': 1, ' [d': 1, '[do': 1, 'on,': 1, 'n, ': 1, ', s': 1, 'rd,': 1, 'd, ': 1, ', m': 1, 'ss,': 1, 's, ': 1, ', l': 1, ' le': 1, 'ss]': 1, 's]\n': 1, ']\nf': 1, '\nfo': 1, 'for': 1, 'or ': 1, 'r a': 1, ' an': 3, 'l i': 1, ' in': 1, 'in ': 1, 'n a': 1, 'ls:': 1, 's:\n': 1, '  a': 1, 'al.': 1, 'l.m': 1}"
phitronio,restaurant.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'class': 1, 'restaurant:': 1, 'def': 7, '__init__(self,': 1, 'name,': 1, 'rent,': 1, 'menu': 2, '=': 16, '[])': 1, '->': 1, 'none:': 3, 'self.name': 1, 'name': 1, 'self.orders': 1, '[]': 1, 'self.chef': 3, 'none': 3, 'self.server': 3, 'self.manager': 2, 'self.rent': 1, 'rent': 1, 'self.menu': 1, 'self.revenue': 2, '0': 5, 'self.expense': 3, 'self.balance': 4, 'self.profit': 1, 'add_employee(self,': 1, 'employee_type,': 1, 'employee):': 2, 'if': 6, 'employee_type': 3, '==': 3, ""'chef':"": 1, 'employee': 3, 'elif': 2, ""'server':"": 1, ""'manager':"": 1, 'add_order(self,': 1, 'order):': 1, 'self.orders.append(order)': 1, 'receive_payment(self,': 1, 'order,': 1, 'amount,': 2, 'customer):': 1, '#': 1, 'print(amount,': 1, 'order.bill)': 1, 'amount': 5, '>=': 1, 'order.bill:': 1, '+=': 4, 'order.bill': 3, 'customer.due_amount': 1, 'return': 1, '-': 1, 'else:': 2, ""print('############not"": 1, 'enough': 2, 'money.': 1, 'pay': 2, ""more#######')"": 1, 'pay_expense(self,': 1, 'description):': 1, '<': 2, 'self.balance:': 2, '-=': 2, ""print(f'expense"": 1, '{amount}': 1, 'for': 2, ""{description}')"": 1, ""print(f'not"": 1, 'money': 1, 'to': 1, ""{amount}')"": 1, 'pay_salary(self,': 1, ""print(f'paying"": 1, 'salary': 1, '{employee.name}': 1, 'salary:': 3, ""{employee.salary}')"": 1, 'employee.salary': 3, 'employee.receive_salary()': 1, 'show_employees(self):': 1, ""print(f'-----------showing"": 1, ""employees--------')"": 1, 'is': 2, 'not': 2, ""print(f'chef:"": 1, '{self.chef.name}': 1, 'with': 2, ""{self.chef.salary}')"": 1, ""print(f'server:"": 1, '{self.server.name}': 1, ""{self.server.salary}')"": 1}","{'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's R': 1, ' Re': 1, 'Res': 1, 'est': 1, 'sta': 1, 'tau': 1, 'aur': 1, 'ura': 1, 'ran': 1, 'ant': 1, 'nt:': 1, 't:\n': 1, ':\n ': 18, '\n  ': 51, '   ': 346, '  d': 7, ' de': 8, 'def': 7, 'ef ': 10, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 7, 'sel': 36, 'elf': 36, 'lf,': 6, 'f, ': 6, ', n': 1, ' na': 2, 'nam': 6, 'ame': 6, 'me,': 1, 'e, ': 2, ', r': 1, ' re': 4, 'ren': 3, 'ent': 4, 'nt,': 4, 't, ': 4, ', m': 1, ' me': 2, 'men': 4, 'enu': 5, 'nu ': 2, 'u =': 2, ' = ': 16, '= [': 2, ' []': 2, '[])': 1, ']) ': 1, ') -': 1, ' ->': 1, '-> ': 1, '> N': 1, ' No': 6, 'Non': 6, 'one': 8, 'ne:': 3, 'e:\n': 7, '  s': 21, ' se': 25, 'lf.': 29, 'f.n': 2, '.na': 4, 'me ': 1, 'e =': 7, '= n': 1, 'me\n': 1, 'e\n ': 6, 'f.o': 2, '.or': 2, 'ord': 11, 'rde': 11, 'der': 11, 'ers': 2, 'rs ': 1, 's =': 1, '[]\n': 1, ']\n ': 1, 'f.c': 5, '.ch': 5, 'che': 6, 'hef': 7, 'f =': 2, '= N': 3, 'ne\n': 3, 'f.s': 6, '.se': 5, 'ser': 6, 'erv': 7, 'rve': 7, 'ver': 7, 'er ': 5, 'r =': 4, 'f.m': 3, '.ma': 2, 'man': 3, 'ana': 3, 'nag': 3, 'age': 3, 'ger': 3, 'f.r': 3, '.re': 4, 'nt ': 5, 't =': 3, '= r': 1, 'nt\n': 3, 't\n ': 3, '.me': 1, '= m': 1, 'nu\n': 1, 'u\n ': 1, 'rev': 2, 'eve': 2, 'ven': 2, 'nue': 2, 'ue ': 2, '= 0': 5, ' 0\n': 5, '0\n ': 4, 'f.e': 3, '.ex': 3, 'exp': 4, 'xpe': 5, 'pen': 6, 'ens': 5, 'nse': 5, 'se ': 4, 'f.b': 6, '.ba': 6, 'bal': 6, 'ala': 18, 'lan': 6, 'anc': 6, 'nce': 6, 'ce ': 4, 'f.p': 1, '.pr': 1, 'pro': 1, 'rof': 1, 'ofi': 1, 'fit': 1, 'it ': 1, '0\n\n': 1, '\n\n ': 5, 'f a': 4, ' ad': 2, 'add': 2, 'dd_': 2, 'd_e': 1, '_em': 2, 'emp': 17, 'mpl': 17, 'plo': 17, 'loy': 17, 'oye': 17, 'yee': 17, 'ee(': 1, 'e(s': 2, ', e': 3, ' em': 13, 'ee_': 4, 'e_t': 4, '_ty': 4, 'typ': 4, 'ype': 4, 'pe,': 1, 'ee)': 2, 'e):': 2, '):\n': 6, '  i': 6, ' if': 6, 'if ': 8, 'f e': 4, 'pe ': 3, ' ==': 3, '== ': 3, ""= '"": 3, "" 'c"": 1, ""'ch"": 1, ""ef'"": 1, ""f':"": 1, ""':\n"": 3, '= e': 5, 'ee\n': 3, '  e': 5, ' el': 4, 'eli': 2, 'lif': 2, "" 's"": 1, ""'se"": 1, ""er'"": 2, ""r':"": 2, "" 'm"": 1, ""'ma"": 1, 'e\n\n': 1, 'd_o': 1, '_or': 1, 'er(': 1, 'r(s': 1, ', o': 3, ' or': 7, 'er)': 3, 'r):': 2, 'rs.': 1, 's.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'end': 1, 'nd(': 1, 'd(o': 1, '(or': 1, 'r)\n': 1, ')\n\n': 3, 'f r': 1, 'rec': 2, 'ece': 2, 'cei': 2, 'eiv': 2, 'ive': 2, 've_': 2, 'e_p': 1, '_pa': 1, 'pay': 4, 'aym': 1, 'yme': 1, 'nt(': 9, 't(s': 1, 'er,': 1, 'r, ': 1, ', a': 2, ' am': 7, 'amo': 11, 'mou': 11, 'oun': 11, 'unt': 11, ', c': 1, ' cu': 2, 'cus': 2, 'ust': 2, 'sto': 2, 'tom': 2, 'ome': 2, 'mer': 2, '  #': 1, ' # ': 1, '# p': 1, ' pr': 8, 'pri': 8, 'rin': 8, 'int': 8, 't(a': 1, '(am': 1, 'er.': 8, 'r.b': 5, '.bi': 5, 'bil': 5, 'ill': 5, 'll)': 1, 'l)\n': 1, ')\n ': 7, 't >': 1, ' >=': 1, '>= ': 1, '= o': 3, 'll:': 1, 'l:\n': 1, 'e +': 4, ' +=': 4, '+= ': 4, 'll\n': 3, 'l\n ': 3, '  c': 1, 'r.d': 1, '.du': 1, 'due': 1, 'ue_': 1, 'e_a': 1, '_am': 1, '  r': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n a': 1, 't -': 1, ' - ': 1, '- o': 1, 'els': 2, 'lse': 2, 'se:': 2, '  p': 7, ""t('"": 1, ""('#"": 1, ""'##"": 1, '###': 15, '##N': 1, '#No': 1, 'Not': 2, 'ot ': 4, 't E': 1, ' En': 1, 'Eno': 1, 'nou': 2, 'oug': 2, 'ugh': 2, 'gh ': 2, 'h m': 2, ' mo': 3, 'mon': 2, 'ney': 2, 'ey.': 1, 'y. ': 1, '. P': 1, ' Pa': 1, 'Pay': 2, 'ay ': 2, 'y m': 1, 'mor': 1, 'ore': 1, 're#': 1, 'e##': 1, ""##'"": 1, ""#')"": 1, ""')\n"": 7, '  \n': 2, ' \n ': 1, 'f p': 2, ' pa': 3, 'ay_': 2, 'y_e': 1, '_ex': 1, 'se(': 1, ', d': 1, 'des': 2, 'esc': 2, 'scr': 2, 'cri': 2, 'rip': 2, 'ipt': 2, 'pti': 2, 'tio': 2, 'ion': 2, 'on)': 1, 'n):': 1, 't <': 1, ' < ': 2, '< s': 2, 'ce:': 2, '= a': 2, 'e -': 2, ' -=': 2, '-= ': 2, 't(f': 6, ""(f'"": 6, ""f'E"": 1, ""'Ex"": 1, 'Exp': 1, 'e {': 1, ' {a': 2, '{am': 2, 'nt}': 2, 't} ': 1, '} f': 1, ' fo': 2, 'for': 2, 'or ': 2, 'r {': 2, ' {d': 1, '{de': 1, 'on}': 1, ""n}'"": 1, ""}')"": 5, ""f'N"": 1, ""'No"": 1, 't e': 1, ' en': 1, 'eno': 1, 'ey ': 1, 'y t': 1, ' to': 1, 'to ': 1, 'o p': 1, 'y {': 1, ""t}'"": 1, 'y_s': 1, '_sa': 2, 'sal': 12, 'lar': 12, 'ary': 12, 'ry(': 2, 'y(s': 1, ""f'P"": 1, ""'Pa"": 1, 'ayi': 1, 'yin': 1, 'ing': 1, 'ng ': 1, 'g s': 1, ' sa': 4, 'ry ': 2, 'y f': 1, ' {e': 2, '{em': 2, 'ee.': 6, 'e.n': 1, 'me}': 3, 'e} ': 3, '} s': 1, 'ry:': 3, 'y: ': 3, ': {': 5, 'e.s': 4, '.sa': 6, 'ry}': 3, ""y}'"": 3, 'y <': 1, 'ry\n': 2, 'y\n ': 2, 'e.r': 1, 'e_s': 1, 'y()': 1, '()\n': 1, 'f s': 3, ' sh': 1, 'sho': 1, 'how': 1, 'ow_': 1, 'w_e': 1, 'ees': 1, 'es(': 1, 's(s': 1, 'lf)': 1, 'f):': 1, ""f'-"": 1, ""'--"": 1, '---': 15, '--S': 1, '-SH': 1, 'SHO': 1, 'HOW': 1, 'OWI': 1, 'WIN': 1, 'ING': 1, 'NG ': 1, 'G E': 1, ' EM': 1, 'EMP': 1, 'MPL': 1, 'PLO': 1, 'LOY': 1, 'OYE': 1, 'YEE': 1, 'EES': 1, 'ES-': 1, 'S--': 1, ""--'"": 1, ""-')"": 1, 'f i': 1, ' is': 2, 'is ': 2, 's n': 2, ' no': 2, 'not': 2, 't N': 2, ""f'C"": 1, ""'Ch"": 1, 'Che': 1, 'ef:': 1, 'f: ': 1, ' {s': 4, '{se': 4, 'ef.': 2, '} w': 2, ' wi': 2, 'wit': 2, 'ith': 2, 'th ': 2, 'h s': 2, 'r i': 1, ""f'S"": 1, ""'Se"": 1, 'Ser': 1, 'er:': 1, 'r: ': 1, 'r.n': 1, 'r.s': 1}"
phitronio,shape.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'from': 1, 'math': 1, 'import': 1, 'pi': 2, 'class': 3, 'shape:': 1, 'def': 5, '__init__(self,': 3, 'name)': 1, '->': 3, 'none:': 3, 'self.name': 1, '=': 4, 'name': 1, 'rectangle(shape):': 1, 'name,': 2, 'length,': 1, 'width)': 1, 'self.length': 2, 'length': 1, 'self.width': 2, 'width': 1, 'super().__init__(name)': 2, 'area(self):': 2, 'return': 2, '*': 2, 'circle(shape):': 1, 'radius)': 1, 'self.radius': 1, 'radius': 1, 'self.radius*self.radius': 1}","{'fro': 1, 'rom': 1, 'om ': 1, 'm m': 1, ' ma': 1, 'mat': 1, 'ath': 1, 'th ': 4, 'h i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't p': 1, ' pi': 2, 'pi\n': 1, 'i\nc': 1, '\ncl': 3, 'cla': 3, 'las': 3, 'ass': 3, 'ss ': 3, 's S': 1, ' Sh': 1, 'Sha': 3, 'hap': 3, 'ape': 3, 'pe:': 1, 'e:\n': 4, ':\n ': 8, '\n  ': 15, '   ': 62, '  d': 5, ' de': 5, 'def': 5, 'ef ': 5, 'f _': 3, ' __': 3, '__i': 5, '_in': 5, 'ini': 5, 'nit': 5, 'it_': 5, 't__': 5, '__(': 5, '_(s': 3, '(se': 5, 'sel': 13, 'elf': 13, 'lf,': 3, 'f, ': 3, ', n': 3, ' na': 4, 'nam': 7, 'ame': 7, 'me)': 3, 'e) ': 1, ') -': 3, ' ->': 3, '-> ': 3, '> N': 3, ' No': 3, 'Non': 3, 'one': 3, 'ne:': 3, '  s': 6, ' se': 7, 'lf.': 8, 'f.n': 1, '.na': 1, 'me ': 1, 'e =': 1, ' = ': 4, '= n': 1, 'me\n': 1, 'e\n ': 1, '  \n': 2, ' \nc': 2, 's R': 1, ' Re': 1, 'Rec': 1, 'ect': 1, 'cta': 1, 'tan': 1, 'ang': 1, 'ngl': 1, 'gle': 1, 'le(': 2, 'e(S': 2, '(Sh': 2, 'pe)': 2, 'e):': 2, '):\n': 4, 'me,': 2, 'e, ': 2, ', l': 1, ' le': 2, 'len': 4, 'eng': 4, 'ngt': 4, 'gth': 4, 'th,': 1, 'h, ': 1, ', w': 1, ' wi': 2, 'wid': 4, 'idt': 4, 'dth': 4, 'th)': 1, 'h) ': 1, 'f.l': 2, '.le': 2, 'h =': 2, '= l': 1, 'th\n': 3, 'h\n ': 3, 'f.w': 2, '.wi': 2, '= w': 1, ' su': 2, 'sup': 2, 'upe': 2, 'per': 2, 'er(': 2, 'r()': 2, '().': 2, ')._': 2, '.__': 2, '_(n': 2, '(na': 2, 'e)\n': 2, ')\n\n': 2, '\n\n ': 2, 'f a': 2, ' ar': 2, 'are': 2, 'rea': 2, 'ea(': 2, 'a(s': 2, 'lf)': 2, 'f):': 2, '  r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n s': 1, 'h *': 1, ' * ': 2, '* s': 2, 's C': 1, ' Ci': 1, 'Cir': 1, 'irc': 1, 'rcl': 1, 'cle': 1, ', r': 1, ' ra': 2, 'rad': 5, 'adi': 5, 'diu': 5, 'ius': 5, 'us)': 1, 's) ': 1, 'f.r': 3, '.ra': 3, 'us ': 1, 's =': 1, '= r': 1, 'us\n': 2, 's\n ': 1, 'n p': 1, 'pi ': 1, 'i *': 1, 'us*': 1, 's*s': 1, '*se': 1}"
phitronio,singleton.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 3, 'singleton': 1, '-->': 1, 'one': 3, 'single': 1, 'instance': 2, 'if': 3, 'you': 2, 'want': 1, 'a': 1, 'new': 1, 'instance,': 2, 'will': 1, 'get': 1, 'the': 1, 'old': 1, '(already': 1, 'created': 1, ')': 1, 'class': 1, 'singleton:': 1, '__instance': 1, '=': 6, 'none': 1, 'def': 2, '__init__(self)': 1, '->': 1, 'none:': 3, 'singleton.__instance': 4, 'is': 3, 'self': 1, 'else:': 1, 'raise': 1, ""exception('this"": 1, 'singleton.': 1, 'already': 1, 'have': 1, 'an': 1, 'use': 1, 'that': 1, 'by': 1, 'calling': 1, 'get_instance': 1, ""method')"": 1, '@staticmethod': 1, 'get_instance():': 1, 'singleton()': 2, 'return': 1, 'first': 1, 'singleton.get_instance()': 3, 'second': 1, 'third': 1, 'print(first)': 1, 'print(second)': 1, 'print(third)': 1, 'last': 1}","{'# s': 1, ' si': 2, 'sin': 2, 'ing': 14, 'ngl': 13, 'gle': 13, 'let': 12, 'eto': 12, 'ton': 12, 'on ': 1, 'n -': 1, ' --': 1, '-->': 1, '-> ': 2, '> o': 1, ' on': 3, 'one': 7, 'ne ': 3, 'e s': 1, 'le ': 1, 'e i': 3, ' in': 4, 'ins': 14, 'nst': 14, 'sta': 15, 'tan': 14, 'anc': 14, 'nce': 14, 'ce\n': 3, 'e\n#': 1, '\n# ': 2, '# i': 1, ' if': 3, 'if ': 3, 'f y': 1, ' yo': 2, 'you': 2, 'ou ': 2, 'u w': 2, ' wa': 1, 'wan': 1, 'ant': 1, 'nt ': 1, 't a': 1, ' a ': 1, 'a n': 1, ' ne': 1, 'new': 1, 'ew ': 1, 'w i': 1, 'ce,': 2, 'e, ': 2, ', y': 1, ' wi': 1, 'wil': 1, 'ill': 1, 'll ': 1, 'l g': 1, ' ge': 3, 'get': 6, 'et ': 1, 't t': 1, ' th': 2, 'the': 1, 'he ': 1, 'e o': 1, ' ol': 1, 'old': 1, 'ld ': 1, 'd o': 1, 'e (': 1, ' (a': 1, '(al': 1, 'alr': 1, 'lre': 2, 'rea': 3, 'ead': 2, 'ady': 2, 'dy ': 2, 'y c': 2, ' cr': 1, 'cre': 1, 'eat': 1, 'ate': 1, 'ted': 1, 'ed ': 1, 'd )': 1, ' ) ': 1, ') i': 1, 'e\n\n': 2, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 2, 'ass': 1, 'ss ': 1, 's S': 2, ' Si': 11, 'Sin': 11, 'on:': 1, 'n:\n': 1, ':\n ': 6, '\n  ': 12, '   ': 64, '  _': 1, ' __': 2, '__i': 6, '_in': 11, 'ce ': 5, 'e =': 2, ' = ': 6, '= N': 1, ' No': 4, 'Non': 4, 'ne\n': 1, 'e\n ': 1, '  d': 2, ' de': 2, 'def': 2, 'ef ': 2, 'f _': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 2, 'sel': 2, 'elf': 2, 'lf)': 1, 'f) ': 1, ') -': 1, ' ->': 1, '> N': 1, 'ne:': 3, 'e:\n': 4, '  i': 2, 'f S': 2, 'on.': 8, 'n._': 4, '.__': 4, ' is': 3, 'is ': 4, 's N': 2, '  S': 2, '= s': 1, ' se': 1, 'lf\n': 1, 'f\n ': 1, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, '  r': 2, ' ra': 1, 'rai': 1, 'ais': 1, 'ise': 1, 'se ': 2, 'e E': 1, ' Ex': 1, 'Exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pti': 1, 'tio': 1, 'ion': 1, 'on(': 3, ""n('"": 1, ""('T"": 1, ""'Th"": 1, 'Thi': 1, 'his': 1, 's i': 1, 'n. ': 1, '. A': 1, ' Al': 1, 'Alr': 1, 'y h': 1, ' ha': 1, 'hav': 1, 'ave': 1, 've ': 1, 'e a': 1, ' an': 1, 'an ': 1, 'n i': 1, ', u': 1, ' us': 1, 'use': 1, 'e t': 1, 'tha': 1, 'hat': 1, 'at ': 1, 't o': 1, 'e b': 1, ' by': 1, 'by ': 1, ' ca': 1, 'cal': 1, 'all': 1, 'lli': 1, 'lin': 1, 'ng ': 1, 'g g': 1, 'et_': 5, 't_i': 5, 'e m': 1, ' me': 1, 'met': 2, 'eth': 2, 'tho': 2, 'hod': 2, ""od'"": 1, ""d')"": 1, ""')\n"": 1, ')\n ': 2, '  \n': 1, ' \n ': 1, '  @': 1, ' @s': 1, '@st': 1, 'tat': 1, 'ati': 1, 'tic': 1, 'icm': 1, 'cme': 1, 'od\n': 1, 'd\n ': 1, 'f g': 1, 'ce(': 4, 'e()': 4, '():': 1, '):\n': 1, 'n()': 2, '()\n': 5, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n S': 1, '\n\nf': 1, '\nfi': 1, 'fir': 2, 'irs': 2, 'rst': 2, 'st ': 2, 't =': 2, '= S': 4, 'n.g': 3, '.ge': 3, ')\ns': 1, '\nse': 1, 'sec': 2, 'eco': 2, 'con': 2, 'ond': 2, 'nd ': 1, 'd =': 2, ')\nt': 1, '\nth': 1, 'thi': 2, 'hir': 2, 'ird': 2, 'rd ': 1, ')\np': 3, '\npr': 3, 'pri': 3, 'rin': 3, 'int': 3, 'nt(': 3, 't(f': 1, '(fi': 1, 'st)': 1, 't)\n': 1, 't(s': 1, 'nd)': 1, 'd)\n': 2, 't(t': 1, '(th': 1, 'rd)': 1, ')\n\n': 1, '\n\n#': 1, '# l': 1, ' la': 1, 'ast': 1}"
phitronio,static.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 8, 'static': 3, 'attribute': 4, '(class': 1, 'attribute)': 1, 'method': 5, '@staticmethod': 2, 'class': 3, '@classmethod': 2, 'differences': 1, 'between': 1, 'and': 2, 'shopping:': 1, 'cart': 1, '=': 7, '[]': 1, '#class': 1, '#static': 2, 'origin': 1, ""'china'"": 1, 'def': 4, '__init__(self,': 1, 'name,': 1, 'location)': 1, '->': 1, 'none:': 1, 'self.name': 1, 'name': 1, 'instance': 1, 'self.location': 1, 'location': 1, 'purchase(self,': 1, 'item,': 1, 'price,': 1, 'amount):': 1, 'remaining': 1, 'amount': 1, '-': 1, 'price': 1, ""print(f'buying:"": 1, '{item}': 1, 'for': 1, 'price:': 1, '{price}': 1, 'remaining:': 1, ""{remaining}')"": 1, 'multiply(a,': 1, 'b):': 1, 'result': 1, 'a*b': 1, 'print(result)': 1, 'hudai_dekhi(self,': 1, 'item):': 1, 'print(self.name)': 1, ""print('hudai"": 1, 'dekhi': 1, 'kintu': 1, 'kinmu': 1, 'just': 1, 'ac': 1, 'er': 1, 'hawa': 1, 'khaite': 1, ""aschi',"": 1, 'item)': 1, 'basundara': 1, ""shopping('basu"": 1, 'en': 1, ""dhara',"": 1, ""'not"": 1, 'popular': 1, ""location')"": 1, ""basundara.purchase('lungi',"": 1, '500,': 1, '1000)': 1, ""basundara.hudai_dekhi('lungi')"": 1, 'shopping.purchase(2,': 1, '3,': 1, '3)': 1, ""shopping.hudai_dekhi('lungi')"": 1, 'shopping.multiply(4,6)': 1, 'basundara.multiply(6,9)': 1}","{'# s': 2, ' st': 3, 'sta': 8, 'tat': 7, 'ati': 11, 'tic': 7, 'ic ': 5, 'c a': 2, ' at': 5, 'att': 5, 'ttr': 5, 'tri': 5, 'rib': 5, 'ibu': 5, 'but': 5, 'ute': 5, 'te ': 3, 'e (': 1, ' (c': 1, '(cl': 1, 'cla': 7, 'las': 7, 'ass': 7, 'ss ': 5, 's a': 2, 'te)': 1, 'e)\n': 2, ')\n#': 3, '\n# ': 6, 'c m': 3, ' me': 5, 'met': 9, 'eth': 9, 'tho': 9, 'hod': 9, 'od ': 3, 'd @': 2, ' @s': 2, '@st': 2, 'icm': 2, 'cme': 2, 'od\n': 6, 'd\n#': 2, '# c': 1, ' cl': 2, 's m': 2, ' @c': 2, '@cl': 2, 'ssm': 2, 'sme': 2, '# d': 1, ' di': 1, 'dif': 1, 'iff': 1, 'ffe': 1, 'fer': 1, 'ere': 1, 'ren': 1, 'enc': 1, 'nce': 2, 'ces': 1, 'es ': 1, 's b': 1, ' be': 1, 'bet': 1, 'etw': 1, 'twe': 1, 'wee': 1, 'een': 1, 'en ': 2, 'n s': 1, 'd a': 1, ' an': 2, 'and': 2, 'nd ': 2, 'd c': 1, 'd\n\n': 1, '\n\nc': 1, '\ncl': 1, 's S': 1, ' Sh': 3, 'Sho': 5, 'hop': 5, 'opp': 5, 'ppi': 5, 'pin': 5, 'ing': 9, 'ng:': 3, 'g:\n': 1, ':\n ': 5, '\n  ': 18, '   ': 68, '  c': 1, ' ca': 1, 'car': 1, 'art': 1, 'rt ': 1, 't =': 2, ' = ': 7, '= [': 1, ' []': 1, '[] ': 1, '] #': 1, ' #c': 1, '#cl': 1, 'e #': 1, ' #s': 1, '#st': 2, 'te\n': 2, 'e\n ': 3, '  o': 1, ' or': 1, 'ori': 1, 'rig': 1, 'igi': 1, 'gin': 1, 'in ': 1, 'n =': 2, ""= '"": 1, "" 'c"": 1, ""'ch"": 1, 'chi': 2, 'hin': 1, 'ina': 1, ""na'"": 1, ""a'\n"": 1, ""'\n "": 1, '  \n': 2, ' \n ': 2, '  d': 4, ' de': 5, 'def': 4, 'ef ': 4, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 4, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 4, 'sel': 6, 'elf': 6, 'lf,': 3, 'f, ': 3, ', n': 1, ' na': 2, 'nam': 4, 'ame': 4, 'me,': 1, 'e, ': 2, ', l': 1, ' lo': 3, 'loc': 4, 'oca': 4, 'cat': 4, 'tio': 4, 'ion': 4, 'on)': 1, 'n) ': 1, ') -': 1, ' ->': 1, '-> ': 1, '> N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne:': 1, 'e:\n': 1, '  s': 2, ' se': 2, 'lf.': 3, 'f.n': 2, '.na': 2, 'me ': 2, 'e =': 1, '= n': 1, 'e  ': 1, '  #': 1, ' # ': 1, '# i': 1, ' in': 1, 'ins': 1, 'nst': 1, 'tan': 1, 'anc': 1, 'ce ': 1, 'e a': 2, 'f.l': 1, '.lo': 1, 'on ': 1, '= l': 1, 'on\n': 1, 'n\n ': 1, 'f p': 1, ' pu': 1, 'pur': 3, 'urc': 3, 'rch': 3, 'cha': 3, 'has': 3, 'ase': 3, 'se(': 3, 'e(s': 1, ', i': 3, ' it': 3, 'ite': 5, 'tem': 4, 'em,': 1, 'm, ': 1, ', p': 1, ' pr': 7, 'pri': 8, 'ric': 4, 'ice': 4, 'ce,': 1, ', a': 1, ' am': 2, 'amo': 2, 'mou': 2, 'oun': 2, 'unt': 2, 'nt)': 1, 't):': 1, '):\n': 3, '  r': 2, ' re': 3, 'rem': 3, 'ema': 3, 'mai': 3, 'ain': 3, 'nin': 3, 'ng ': 1, 'g =': 1, '= a': 2, 'nt ': 1, 't -': 1, ' - ': 1, '- p': 1, 'ce\n': 1, '  p': 4, 'rin': 4, 'int': 5, 'nt(': 4, 't(f': 1, ""(f'"": 1, ""f'b"": 1, ""'bu"": 1, 'buy': 1, 'uyi': 1, 'yin': 1, 'g: ': 2, ': {': 3, ' {i': 1, '{it': 1, 'em}': 1, 'm} ': 1, '} f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r p': 1, 'ce:': 1, 'e: ': 1, ' {p': 1, '{pr': 1, 'ce}': 1, 'e} ': 1, '} a': 1, 'd r': 1, ' {r': 1, '{re': 1, 'ng}': 1, ""g}'"": 1, ""}')"": 1, ""')\n"": 4, ')\n\n': 4, '\n\n ': 2, '  @': 2, 'd\n ': 2, 'f m': 1, ' mu': 1, 'mul': 3, 'ult': 5, 'lti': 3, 'tip': 3, 'ipl': 3, 'ply': 3, 'ly(': 3, 'y(a': 1, '(a,': 1, 'a, ': 1, ', b': 1, ' b)': 1, 'b):': 1, 'res': 2, 'esu': 2, 'sul': 2, 'lt ': 1, ' a*': 1, 'a*b': 1, '*b\n': 1, 'b\n ': 1, 't(r': 1, '(re': 1, 'lt)': 1, 't)\n': 1, 'f h': 1, ' hu': 1, 'hud': 4, 'uda': 4, 'dai': 4, 'ai_': 3, 'i_d': 3, '_de': 3, 'dek': 4, 'ekh': 4, 'khi': 4, 'hi(': 3, 'i(s': 1, 'em)': 2, 'm):': 1, 't(s': 1, 'me)': 1, ')\n ': 1, ""t('"": 1, ""('h"": 1, ""'hu"": 1, 'ai ': 1, 'i d': 1, 'hi ': 1, 'i k': 1, ' ki': 2, 'kin': 2, 'ntu': 1, 'tu ': 1, 'u k': 1, 'inm': 1, 'nmu': 1, 'mu ': 1, 'u j': 1, ' ju': 1, 'jus': 1, 'ust': 1, 'st ': 1, 't a': 1, ' ac': 1, 'ac ': 1, 'c e': 1, ' er': 1, 'er ': 1, 'r h': 1, ' ha': 1, 'haw': 1, 'awa': 1, 'wa ': 1, 'a k': 1, ' kh': 1, 'kha': 1, 'hai': 1, 'ait': 1, ' as': 1, 'asc': 1, 'sch': 1, ""hi'"": 1, ""i',"": 2, ""', "": 3, 'm)\n': 1, '\n\n\n': 1, '\n\nb': 1, '\nba': 2, 'bas': 5, 'asu': 5, 'sun': 4, 'und': 4, 'nda': 4, 'dar': 4, 'ara': 5, 'ra ': 1, 'a =': 1, '= S': 1, 'ng(': 1, ""g('"": 1, ""('b"": 1, ""'ba"": 1, 'su ': 1, 'u e': 1, ' en': 1, 'n d': 1, ' dh': 1, 'dha': 1, 'har': 1, ""ra'"": 1, ""a',"": 1, "", '"": 1, "" 'n"": 1, ""'no"": 1, 'not': 1, 'ot ': 1, 't p': 1, ' po': 1, 'pop': 1, 'opu': 1, 'pul': 1, 'ula': 1, 'lar': 1, 'ar ': 1, 'r l': 1, ""on'"": 1, ""n')"": 1, '# b': 2, ' ba': 2, 'ra.': 3, 'a.p': 1, '.pu': 2, ""e('"": 1, ""('l"": 2, ""'lu"": 2, 'lun': 2, 'ung': 3, 'ngi': 3, ""gi'"": 3, ', 5': 1, ' 50': 1, '500': 1, '00,': 1, '0, ': 1, ', 1': 1, ' 10': 1, '100': 1, '000': 1, '00)': 1, '0)\n': 1, ')\nb': 1, 'a.h': 1, '.hu': 2, ""i('"": 2, ""i')"": 2, '# S': 1, 'ng.': 3, 'g.p': 1, 'e(2': 1, '(2,': 1, '2, ': 1, ', 3': 2, ' 3,': 1, '3, ': 1, ' 3)': 1, '3)\n': 1, ')\nS': 1, '\nSh': 2, 'g.h': 1, ""('L"": 1, ""'Lu"": 1, 'Lun': 1, '\n\n#': 2, '\n#s': 1, 'd\nS': 1, 'g.m': 1, '.mu': 2, 'y(4': 1, '(4,': 1, '4,6': 1, ',6)': 1, '6) ': 1, ') \n': 1, ' \n\n': 1, 'a.m': 1, 'y(6': 1, '(6,': 1, '6,9': 1, ',9)': 1, '9)\n': 1}"
phitronio,summary.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'class': 2, 'book:': 1, 'def': 4, '__init__(self,': 2, 'name)': 1, '->': 2, 'none:': 2, 'self.name': 1, '=': 3, 'name': 1, 'read(self):': 2, 'raise': 1, 'notimplementederror': 1, 'physics(book):': 1, 'name,': 1, 'lab)': 1, 'self.lab': 1, 'lab': 1, 'super().__init__(name)': 1, ""print('reading"": 1, 'physics': 1, 'vector': 1, ""chapter')"": 1, 'topon': 1, ""physics('topon',"": 1, 'true)': 1, 'print(issubclass(physics,': 1, 'book))': 2, 'print(isinstance(topon,': 2, 'physics))': 1, 'topon.read()': 1}","{'cla': 3, 'las': 3, 'ass': 3, 'ss ': 2, 's B': 1, ' Bo': 3, 'Boo': 4, 'ook': 4, 'ok:': 1, 'k: ': 1, ': \n': 1, ' \n ': 2, '\n  ': 9, '   ': 38, '  d': 4, ' de': 4, 'def': 4, 'ef ': 4, 'f _': 2, ' __': 2, '__i': 3, '_in': 3, 'ini': 3, 'nit': 3, 'it_': 3, 't__': 3, '__(': 3, '_(s': 2, '(se': 4, 'sel': 6, 'elf': 6, 'lf,': 2, 'f, ': 2, ', n': 2, ' na': 3, 'nam': 5, 'ame': 5, 'me)': 2, 'e) ': 2, ') -': 2, ' ->': 2, '-> ': 2, '> N': 2, ' No': 3, 'Non': 2, 'one': 2, 'ne:': 2, 'e:\n': 2, ':\n ': 5, '  s': 3, ' se': 2, 'lf.': 2, 'f.n': 1, '.na': 1, 'me ': 1, 'e =': 1, ' = ': 3, '= n': 1, 'me\n': 1, 'e\n ': 1, 'f r': 2, ' re': 2, 'rea': 4, 'ead': 4, 'ad(': 3, 'd(s': 2, 'lf)': 2, 'f):': 2, '):\n': 3, '  r': 1, ' ra': 1, 'rai': 1, 'ais': 1, 'ise': 1, 'se ': 1, 'e N': 1, 'Not': 1, 'otI': 1, 'tIm': 1, 'Imp': 1, 'mpl': 1, 'ple': 1, 'lem': 1, 'eme': 1, 'men': 1, 'ent': 1, 'nte': 1, 'ted': 1, 'edE': 1, 'dEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or\n': 1, 'r\n\n': 1, '\n\nc': 1, '\ncl': 1, 's P': 1, ' Ph': 3, 'Phy': 4, 'hys': 5, 'ysi': 5, 'sic': 5, 'ics': 5, 'cs(': 2, 's(B': 1, '(Bo': 1, 'ok)': 3, 'k):': 1, 'me,': 1, 'e, ': 1, ', l': 1, ' la': 2, 'lab': 3, 'ab)': 1, 'b) ': 1, 'f.l': 1, '.la': 1, 'ab ': 1, 'b =': 1, '= l': 1, 'ab\n': 1, 'b\n ': 1, ' su': 1, 'sup': 1, 'upe': 1, 'per': 1, 'er(': 1, 'r()': 1, '().': 1, ')._': 1, '.__': 1, '_(n': 1, '(na': 1, ') \n': 1, '  p': 1, ' pr': 1, 'pri': 4, 'rin': 4, 'int': 4, 'nt(': 4, ""t('"": 1, ""('r"": 1, ""'re"": 1, 'adi': 1, 'din': 1, 'ing': 1, 'ng ': 1, 'g p': 1, ' ph': 1, 'phy': 1, 'cs ': 1, 's v': 1, ' ve': 1, 'vec': 1, 'ect': 1, 'cto': 1, 'tor': 1, 'or ': 1, 'r c': 1, ' ch': 1, 'cha': 1, 'hap': 1, 'apt': 1, 'pte': 1, 'ter': 1, ""er'"": 1, ""r')"": 1, ""')\n"": 1, ')\n\n': 3, '\n\nt': 2, '\nto': 2, 'top': 5, 'opo': 5, 'pon': 5, 'on ': 1, 'n =': 1, '= P': 1, ""s('"": 1, ""('t"": 1, ""'to"": 1, ""on'"": 1, ""n',"": 1, ""', "": 1, ', T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e)\n': 1, '\n\np': 1, '\npr': 3, 't(i': 3, '(is': 3, 'iss': 1, 'ssu': 1, 'sub': 1, 'ubc': 1, 'bcl': 1, 'ss(': 1, 's(P': 1, '(Ph': 1, 'cs,': 1, 's, ': 1, ', B': 2, 'k))': 2, '))\n': 3, ')\np': 2, 'isi': 2, 'sin': 2, 'ins': 2, 'nst': 2, 'sta': 2, 'tan': 2, 'anc': 2, 'nce': 2, 'ce(': 2, 'e(t': 2, '(to': 2, 'on,': 2, 'n, ': 2, ', P': 1, 'cs)': 1, 's))': 1, 'on.': 1, 'n.r': 1, '.re': 1, 'd()': 1, '()\n': 1}"
Samuel,0-add_integer.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, '""""""': 2, 'defines': 1, 'a': 3, 'function': 1, 'that': 1, 'calculates': 1, 'addition': 1, 'of': 2, 'two': 2, 'integers': 1, 'def': 1, 'add_integer(a,': 1, 'b=98):': 1, '""""""calculates': 1, 'sum': 1, 'integers""""""': 1, 'if': 4, 'not': 2, 'isinstance(a,': 2, '(int,': 2, 'float)):': 2, 'raise': 2, 'typeerror(""a': 1, 'must': 2, 'be': 2, 'an': 2, 'integer"")': 2, 'isinstance(b,': 2, 'typeerror(""b': 1, '=': 2, 'int(a)': 1, 'float)': 2, 'else': 2, 'b': 2, 'int(b)': 1, 'return': 1, '(a': 1, '+': 1, 'b)': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\n""': 1, '\n""""': 2, '""""""': 4, '""""\n': 3, '""\n ': 1, '\n  ': 10, '   ': 28, '  D': 1, ' De': 1, 'Def': 1, 'efi': 1, 'fin': 1, 'ine': 1, 'nes': 1, 'es ': 3, 's a': 2, ' a ': 2, 'a f': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 2, 'ion': 2, 'on ': 1, 'n t': 1, ' th': 1, 'tha': 1, 'hat': 1, 'at ': 1, 't c': 1, ' ca': 1, 'cal': 1, 'alc': 2, 'lcu': 2, 'cul': 2, 'ula': 2, 'lat': 2, 'ate': 2, 'tes': 2, ' ad': 2, 'add': 2, 'ddi': 1, 'dit': 1, 'iti': 1, 'on\n': 1, 'n\n ': 1, '  o': 1, ' of': 2, 'of ': 2, 'f t': 2, ' tw': 2, 'two': 2, 'wo ': 2, 'o i': 2, ' in': 6, 'int': 9, 'nte': 5, 'teg': 5, 'ege': 5, 'ger': 5, 'ers': 2, 'rs\n': 1, 's\n""': 1, '""\n\n': 2, '\n\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f a': 1, 'dd_': 1, 'd_i': 1, '_in': 1, 'er(': 1, 'r(a': 1, '(a,': 3, 'a, ': 3, ', b': 1, ' b=': 1, 'b=9': 1, '=98': 1, '98)': 1, '8):': 1, '):\n': 3, ':\n ': 3, '  ""': 1, ' """"': 1, '""""C': 1, '""Ca': 1, 'Cal': 1, 's s': 1, ' su': 1, 'sum': 1, 'um ': 1, 'm o': 1, 'rs""': 1, 's""""': 1, '\n\n ': 3, '  i': 2, ' if': 4, 'if ': 4, 'f n': 2, ' no': 2, 'not': 2, 'ot ': 2, 't i': 2, ' is': 4, 'isi': 4, 'sin': 4, 'ins': 4, 'nst': 4, 'sta': 4, 'tan': 4, 'anc': 4, 'nce': 4, 'ce(': 4, 'e(a': 2, ', (': 2, ' (i': 2, '(in': 2, 'nt,': 2, 't, ': 2, ', f': 4, ' fl': 4, 'flo': 4, 'loa': 4, 'oat': 4, 'at)': 4, 't))': 2, ')):': 2, '  r': 3, ' ra': 2, 'rai': 2, 'ais': 2, 'ise': 2, 'se ': 4, 'e T': 2, ' Ty': 2, 'Typ': 2, 'ype': 2, 'peE': 2, 'eEr': 2, 'Err': 2, 'rro': 2, 'ror': 2, 'or(': 2, 'r(""': 2, '(""a': 1, '""a ': 1, 'a m': 1, ' mu': 2, 'mus': 2, 'ust': 2, 'st ': 2, 't b': 2, ' be': 2, 'be ': 2, 'e a': 3, ' an': 2, 'an ': 2, 'n i': 2, 'er""': 2, 'r"")': 2, '"")\n': 2, ')\n ': 1, 'e(b': 2, '(b,': 2, 'b, ': 2, '(""b': 1, '""b ': 1, 'b m': 1, ')\n\n': 1, '  a': 1, 'a =': 1, ' = ': 2, '= i': 2, 'nt(': 2, 't(a': 1, '(a)': 1, 'a) ': 1, ') i': 2, 'f i': 2, 't) ': 2, ') e': 2, ' el': 2, 'els': 2, 'lse': 2, ' a\n': 1, 'a\n ': 1, '  b': 1, ' b ': 1, 'b =': 1, 't(b': 1, '(b)': 1, 'b) ': 1, 'e b': 1, ' b\n': 1, 'b\n\n': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n (': 1, ' (a': 1, '(a ': 1, 'a +': 1, ' + ': 1, '+ b': 1, ' b)': 1, 'b)\n': 1}"
Samuel,0-safe_print_list.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, 'def': 1, 'safe_print_list(my_list=[],': 1, 'x=0):': 1, 'i': 5, '=': 1, '0': 1, 'if': 1, 'x': 1, '==': 1, '0:': 1, 'print()': 3, 'return': 3, 'try:': 1, 'for': 1, 'in': 1, 'range(x):': 1, 'print(my_list[i],': 1, 'end="""")': 1, 'except': 1, 'indexerror:': 1, '+': 1, '1': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\n\n': 1, '\n\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f s': 1, ' sa': 1, 'saf': 1, 'afe': 1, 'fe_': 1, 'e_p': 1, '_pr': 1, 'pri': 5, 'rin': 5, 'int': 5, 'nt_': 1, 't_l': 1, '_li': 3, 'lis': 3, 'ist': 3, 'st(': 1, 't(m': 2, '(my': 2, 'my_': 2, 'y_l': 2, 'st=': 1, 't=[': 1, '=[]': 1, '[],': 1, '], ': 2, ', x': 1, ' x=': 1, 'x=0': 1, '=0)': 1, '0):': 1, '):\n': 2, ':\n ': 5, '\n  ': 12, '   ': 56, '  i': 2, ' i ': 3, 'i =': 1, ' = ': 1, '= 0': 2, ' 0\n': 1, '0\n ': 1, ' if': 1, 'if ': 1, 'f x': 1, ' x ': 1, 'x =': 1, ' ==': 1, '== ': 1, ' 0:': 1, '0:\n': 1, '  p': 4, ' pr': 4, 'nt(': 4, 't()': 3, '()\n': 3, ')\n ': 4, '  r': 3, ' re': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n i': 3, ' i\n': 2, 'i\n ': 2, '  t': 1, ' tr': 1, 'try': 1, 'ry:': 1, 'y:\n': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, 'i i': 1, ' in': 1, 'in ': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(x': 1, '(x)': 1, 'x):': 1, 'st[': 1, 't[i': 1, '[i]': 1, 'i],': 1, ', e': 1, ' en': 1, 'end': 1, 'nd=': 1, 'd=""': 1, '=""""': 1, '"""")': 1, '"")\n': 1, '  e': 1, ' ex': 1, 'exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pt ': 1, 't I': 1, ' In': 1, 'Ind': 1, 'nde': 1, 'dex': 1, 'exE': 1, 'xEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or:': 1, 'r:\n': 1, 'i +': 1, ' + ': 1, '+ 1': 1, ' 1\n': 1}"
Samuel,1-main.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, 'safe_print_integer': 1, '=': 7, ""__import__('1-safe_print_integer').safe_print_integer"": 1, 'value': 3, '89': 1, 'has_been_print': 3, 'safe_print_integer(value)': 3, 'if': 3, 'not': 6, 'has_been_print:': 3, 'print(""{}': 3, 'is': 3, 'an': 3, 'integer"".format(value))': 3, '-89': 1, '""school""': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\ns': 1, '\nsa': 1, 'saf': 6, 'afe': 6, 'fe_': 6, 'e_p': 6, '_pr': 12, 'pri': 15, 'rin': 15, 'int': 24, 'nt_': 6, 't_i': 6, '_in': 6, 'nte': 9, 'teg': 9, 'ege': 9, 'ger': 9, 'er ': 1, 'r =': 1, ' = ': 7, '= _': 1, ' __': 1, '__i': 1, '_im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt_': 1, 't__': 1, '__(': 1, ""_('"": 1, ""('1"": 1, ""'1-"": 1, '1-s': 1, '-sa': 1, ""er'"": 1, ""r')"": 1, ""')."": 1, ').s': 1, '.sa': 1, 'er\n': 1, 'r\n\n': 1, '\n\nv': 3, '\nva': 3, 'val': 9, 'alu': 9, 'lue': 9, 'ue ': 3, 'e =': 3, '= 8': 1, ' 89': 1, '89\n': 2, '9\nh': 2, '\nha': 3, 'has': 6, 'as_': 6, 's_b': 6, '_be': 6, 'bee': 6, 'een': 6, 'en_': 6, 'n_p': 6, 'nt ': 3, 't =': 3, '= s': 3, ' sa': 3, 'er(': 3, 'r(v': 3, '(va': 6, 'ue)': 6, 'e)\n': 3, ')\ni': 3, '\nif': 3, 'if ': 3, 'f n': 3, ' no': 6, 'not': 6, 'ot ': 6, 't h': 3, ' ha': 3, 'nt:': 3, 't:\n': 3, ':\n ': 3, '\n  ': 3, '   ': 6, '  p': 3, ' pr': 3, 'nt(': 3, 't(""': 3, '(""{': 3, '""{}': 3, '{} ': 3, '} i': 3, ' is': 3, 'is ': 3, 's n': 3, 't a': 3, ' an': 3, 'an ': 3, 'n i': 3, ' in': 3, 'er""': 3, 'r"".': 3, '"".f': 3, '.fo': 3, 'for': 3, 'orm': 3, 'rma': 3, 'mat': 3, 'at(': 3, 't(v': 3, 'e))': 3, '))\n': 3, ')\n\n': 2, '= -': 1, ' -8': 1, '-89': 1, '= ""': 1, ' ""S': 1, '""Sc': 1, 'Sch': 1, 'cho': 1, 'hoo': 1, 'ool': 1, 'ol""': 1, 'l""\n': 1, '""\nh': 1}"
Samuel,100-main.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, 'safe_print_integer_err': 1, '=': 7, '\\': 1, ""__import__('100-safe_print_integer_err').safe_print_integer_err"": 1, 'value': 3, '89': 1, 'has_been_print': 3, 'safe_print_integer_err(value)': 3, 'if': 3, 'not': 6, 'has_been_print:': 3, 'print(""{}': 3, 'is': 3, 'an': 3, 'integer"".format(value))': 3, '-89': 1, '""school""': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\ns': 1, '\nsa': 1, 'saf': 6, 'afe': 6, 'fe_': 6, 'e_p': 6, '_pr': 12, 'pri': 15, 'rin': 15, 'int': 24, 'nt_': 6, 't_i': 6, '_in': 6, 'nte': 9, 'teg': 9, 'ege': 9, 'ger': 9, 'er_': 6, 'r_e': 6, '_er': 6, 'err': 6, 'rr ': 1, 'r =': 1, ' = ': 7, '= \\': 1, ' \\\n': 1, '\\\n ': 1, '\n  ': 4, '   ': 8, '  _': 1, ' __': 1, '__i': 1, '_im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt_': 1, 't__': 1, '__(': 1, ""_('"": 1, ""('1"": 1, ""'10"": 1, '100': 1, '00-': 1, '0-s': 1, '-sa': 1, ""rr'"": 1, ""r')"": 1, ""')."": 1, ').s': 1, '.sa': 1, 'rr\n': 1, 'r\n\n': 1, '\n\nv': 3, '\nva': 3, 'val': 9, 'alu': 9, 'lue': 9, 'ue ': 3, 'e =': 3, '= 8': 1, ' 89': 1, '89\n': 2, '9\nh': 2, '\nha': 3, 'has': 6, 'as_': 6, 's_b': 6, '_be': 6, 'bee': 6, 'een': 6, 'en_': 6, 'n_p': 6, 'nt ': 3, 't =': 3, '= s': 3, ' sa': 3, 'rr(': 3, 'r(v': 3, '(va': 6, 'ue)': 6, 'e)\n': 3, ')\ni': 3, '\nif': 3, 'if ': 3, 'f n': 3, ' no': 6, 'not': 6, 'ot ': 6, 't h': 3, ' ha': 3, 'nt:': 3, 't:\n': 3, ':\n ': 3, '  p': 3, ' pr': 3, 'nt(': 3, 't(""': 3, '(""{': 3, '""{}': 3, '{} ': 3, '} i': 3, ' is': 3, 'is ': 3, 's n': 3, 't a': 3, ' an': 3, 'an ': 3, 'n i': 3, ' in': 3, 'er""': 3, 'r"".': 3, '"".f': 3, '.fo': 3, 'for': 3, 'orm': 3, 'rma': 3, 'mat': 3, 'at(': 3, 't(v': 3, 'e))': 3, '))\n': 3, ')\n\n': 2, '= -': 1, ' -8': 1, '-89': 1, '= ""': 1, ' ""S': 1, '""Sc': 1, 'Sch': 1, 'cho': 1, 'hoo': 1, 'ool': 1, 'ol""': 1, 'l""\n': 1, '""\nh': 1}"
Samuel,101-main.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, 'safe_function': 1, '=': 5, ""__import__('101-safe_function').safe_function"": 1, 'def': 2, 'my_div(a,': 1, 'b):': 1, 'return': 2, 'a': 1, '/': 1, 'b': 1, 'result': 3, 'safe_function(my_div,': 2, '10,': 2, '2)': 1, 'print(""result': 3, 'of': 3, 'my_div:': 2, '{}"".format(result))': 3, '0)': 1, 'print_list(my_list,': 1, 'len):': 1, 'i': 3, '0': 1, 'while': 1, '<': 1, 'len:': 1, 'print(my_list[i])': 1, '+=': 1, '1': 1, 'len': 1, 'safe_function(print_list,': 1, '[1,': 1, '2,': 1, '3,': 1, '4],': 1, '10)': 1, 'print_list:': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\ns': 1, '\nsa': 1, 'saf': 6, 'afe': 6, 'fe_': 6, 'e_f': 6, '_fu': 6, 'fun': 6, 'unc': 6, 'nct': 6, 'cti': 6, 'tio': 6, 'ion': 6, 'on ': 1, 'n =': 1, ' = ': 5, '= _': 1, ' __': 1, '__i': 1, '_im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt_': 1, 't__': 1, '__(': 1, ""_('"": 1, ""('1"": 1, ""'10"": 1, '101': 1, '01-': 1, '1-s': 1, '-sa': 1, ""on'"": 1, ""n')"": 1, ""')."": 1, ').s': 1, '.sa': 1, 'on\n': 1, 'n\n\n': 2, '\n\n\n': 2, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f m': 3, ' my': 3, 'my_': 7, 'y_d': 5, '_di': 5, 'div': 5, 'iv(': 1, 'v(a': 1, '(a,': 1, 'a, ': 1, ', b': 1, ' b)': 1, 'b):': 1, '):\n': 2, ':\n ': 3, '\n  ': 6, '   ': 20, '  r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n a': 1, ' a ': 1, 'a /': 1, ' / ': 1, '/ b': 1, ' b\n': 1, 'b\n\n': 1, '\n\nr': 3, '\nre': 3, 'res': 9, 'esu': 9, 'sul': 9, 'ult': 9, 'lt ': 6, 't =': 3, '= s': 3, ' sa': 3, 'on(': 3, 'n(m': 2, '(my': 4, 'iv,': 2, 'v, ': 2, ', 1': 3, ' 10': 3, '10,': 2, '0, ': 2, ', 2': 2, ' 2)': 1, '2)\n': 1, ')\np': 3, '\npr': 3, 'pri': 7, 'rin': 7, 'int': 7, 'nt(': 4, 't(""': 3, '(""r': 3, '""re': 3, 't o': 3, ' of': 3, 'of ': 3, 'iv:': 2, 'v: ': 2, ': {': 3, ' {}': 3, '{}""': 3, '}"".': 3, '"".f': 3, '.fo': 3, 'for': 3, 'orm': 3, 'rma': 3, 'mat': 3, 'at(': 3, 't(r': 3, '(re': 3, 'lt)': 3, 't))': 3, '))\n': 3, ')\n\n': 2, ', 0': 1, ' 0)': 1, '0)\n': 2, 'f p': 2, ' pr': 3, 'nt_': 3, 't_l': 3, '_li': 5, 'lis': 5, 'ist': 5, 'st(': 1, 't(m': 2, 'y_l': 2, 'st,': 2, 't, ': 2, ', l': 1, ' le': 3, 'len': 3, 'en)': 1, 'n):': 1, '  i': 2, ' i ': 3, 'i =': 1, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e i': 1, 'i <': 1, ' < ': 1, '< l': 1, 'en:': 1, 'n:\n': 1, '  p': 1, 'st[': 1, 't[i': 1, '[i]': 1, 'i])': 1, '])\n': 1, ')\n ': 1, 'i +': 1, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 1, '1\n ': 1, 'n l': 1, 'en\n': 1, 'n(p': 1, '(pr': 1, ', [': 1, ' [1': 1, '[1,': 1, '1, ': 1, ' 2,': 1, '2, ': 1, ', 3': 1, ' 3,': 1, '3, ': 1, ', 4': 1, ' 4]': 1, '4],': 1, '], ': 1, '10)': 1, 'st:': 1, 't: ': 1}"
Samuel,102-magic_calculation.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, 'def': 1, 'magic_calculation(a,': 1, 'b):': 1, 'result': 5, '=': 3, '0': 1, 'for': 1, 'i': 3, 'in': 1, 'range(1,': 1, '3):': 1, 'try:': 1, 'if': 1, '>': 1, 'a:': 1, 'raise': 1, 'exception(""too': 1, 'far"")': 1, 'else:': 1, '+': 2, '(a**b)': 1, '/': 1, 'except:': 1, 'b': 1, 'a': 1, 'break': 1, 'return': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f m': 1, ' ma': 1, 'mag': 1, 'agi': 1, 'gic': 1, 'ic_': 1, 'c_c': 1, '_ca': 1, 'cal': 1, 'alc': 1, 'lcu': 1, 'cul': 1, 'ula': 1, 'lat': 1, 'ati': 1, 'tio': 2, 'ion': 2, 'on(': 2, 'n(a': 1, '(a,': 1, 'a, ': 1, ', b': 1, ' b)': 1, 'b):': 1, '):\n': 2, ':\n ': 6, '\n  ': 11, '   ': 86, '  r': 5, ' re': 6, 'res': 5, 'esu': 5, 'sul': 5, 'ult': 5, 'lt ': 4, 't =': 3, ' = ': 3, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 2, 'i i': 1, ' in': 1, 'in ': 1, 'n r': 2, ' ra': 2, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(1': 1, '(1,': 1, '1, ': 1, ', 3': 1, ' 3)': 1, '3):': 1, '  t': 1, ' tr': 1, 'try': 1, 'ry:': 1, 'y:\n': 1, '  i': 1, ' if': 1, 'if ': 1, 'f i': 1, 'i >': 1, ' > ': 1, '> a': 1, ' a:': 1, 'a:\n': 1, 'rai': 1, 'ais': 1, 'ise': 1, 'se ': 1, 'e E': 1, ' Ex': 1, 'Exc': 1, 'xce': 2, 'cep': 2, 'ept': 2, 'pti': 1, 'n(""': 1, '(""T': 1, '""To': 1, 'Too': 1, 'oo ': 1, 'o f': 1, ' fa': 1, 'far': 1, 'ar""': 1, 'r"")': 1, '"")\n': 1, ')\n ': 1, '  e': 2, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, '= r': 1, 't +': 1, ' + ': 2, '+ (': 1, ' (a': 1, '(a*': 1, 'a**': 1, '**b': 1, '*b)': 1, 'b) ': 1, ') /': 1, ' / ': 1, '/ i': 1, ' i\n': 1, 'i\n ': 1, ' ex': 1, 'exc': 1, 'pt:': 1, 't:\n': 1, '= b': 1, ' b ': 1, 'b +': 1, '+ a': 1, ' a\n': 1, 'a\n ': 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n ': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'lt\n': 1}"
Samuel,2-matrix_divided.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, '""""""': 2, 'contain': 1, 'function': 1, 'that': 1, 'handles': 1, 'matrix': 6, 'division': 1, 'def': 1, 'matrix_divided(matrix,': 1, 'div):': 1, '""""""divides': 1, 'all': 1, 'elements': 1, 'of': 8, 'a': 5, 'matrix""""""': 1, 'if': 6, 'not': 4, 'isinstance(matrix,': 1, 'list):': 1, 'raise': 6, 'typeerror(': 3, '""matrix': 3, 'must': 5, 'be': 4, '(list': 3, 'lists)': 3, 'integers/floats"")': 3, 'all(isinstance(v,': 2, 'list)': 1, 'for': 4, 'v': 2, 'in': 4, 'matrix):': 1, '(int,': 2, 'float))': 1, 'row': 3, 'row):': 1, 'index,': 1, 'enumerate(matrix):': 1, 'len(row)': 1, '!=': 1, 'len(matrix[index': 1, '-': 1, '1]):': 1, 'typeerror(""each': 1, 'the': 2, 'have': 1, 'same': 1, 'size"")': 1, 'isinstance(div,': 1, 'float)):': 1, 'typeerror(""div': 1, 'number"")': 1, 'div': 1, '==': 1, '0:': 1, 'zerodivisionerror(""division': 1, 'by': 1, 'zero"")': 1, 'return': 1, 'list(map(lambda': 2, 'row:': 1, 'v:': 1, 'round(v/div,': 1, '2),': 1, 'row)),': 1, 'matrix))': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\n""': 1, '\n""""': 2, '""""""': 4, '""""\n': 3, '""\n ': 1, '\n  ': 20, '   ': 133, '  C': 1, ' Co': 1, 'Con': 1, 'ont': 1, 'nta': 1, 'tai': 1, 'ain': 1, 'in ': 5, 'n f': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 1, 'ion': 4, 'on ': 2, 'n t': 1, ' th': 3, 'tha': 1, 'hat': 1, 'at ': 1, 't h': 2, ' ha': 2, 'han': 1, 'and': 1, 'ndl': 1, 'dle': 1, 'les': 1, 'es ': 2, 's m': 1, ' ma': 10, 'mat': 17, 'atr': 17, 'tri': 17, 'rix': 17, 'ix ': 9, 'x d': 1, ' di': 3, 'div': 8, 'ivi': 5, 'vis': 3, 'isi': 7, 'sio': 3, 'on\n': 1, 'n\n""': 1, '""\n\n': 2, '\n\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f m': 1, 'ix_': 1, 'x_d': 1, '_di': 1, 'vid': 2, 'ide': 2, 'ded': 1, 'ed(': 1, 'd(m': 1, '(ma': 6, 'ix,': 2, 'x, ': 3, ', d': 1, 'iv)': 1, 'v):': 1, '):\n': 7, ':\n ': 9, '  ""': 4, ' """"': 1, '""""D': 1, '""Di': 1, 'Div': 2, 'des': 1, 's a': 1, ' al': 3, 'all': 3, 'll ': 1, 'l e': 1, ' el': 1, 'ele': 1, 'lem': 1, 'eme': 1, 'men': 1, 'ent': 1, 'nts': 1, 'ts ': 1, 's o': 1, ' of': 8, 'of ': 8, 'f a': 1, ' a ': 5, 'a m': 4, 'ix""': 1, 'x""""': 1, '\n\n ': 4, '  i': 6, ' if': 6, 'if ': 6, 'f n': 4, ' no': 4, 'not': 4, 'ot ': 4, 't i': 2, ' is': 2, 'sin': 4, 'ins': 4, 'nst': 4, 'sta': 4, 'tan': 4, 'anc': 4, 'nce': 4, 'ce(': 4, 'e(m': 2, ', l': 2, ' li': 7, 'lis': 10, 'ist': 10, 'st)': 2, 't):': 1, '  r': 8, ' ra': 6, 'rai': 6, 'ais': 6, 'ise': 6, 'se ': 6, 'e T': 5, ' Ty': 5, 'Typ': 5, 'ype': 5, 'peE': 5, 'eEr': 5, 'Err': 6, 'rro': 6, 'ror': 6, 'or(': 6, 'r(\n': 3, '(\n ': 3, ' ""m': 3, '""ma': 3, 'x m': 4, ' mu': 5, 'mus': 5, 'ust': 5, 'st ': 8, 't b': 4, ' be': 4, 'be ': 4, 'e a': 4, 'x (': 3, ' (l': 3, '(li': 3, 't o': 3, 'f l': 4, 'sts': 3, 'ts)': 3, 's) ': 3, ') o': 3, 'f i': 3, ' in': 8, 'int': 5, 'nte': 3, 'teg': 3, 'ege': 3, 'ger': 3, 'ers': 3, 'rs/': 3, 's/f': 3, '/fl': 3, 'flo': 5, 'loa': 5, 'oat': 5, 'ats': 3, 'ts""': 3, 's"")': 3, '"")\n': 6, ')\n ': 3, 't a': 2, 'll(': 2, 'l(i': 2, '(is': 2, 'e(v': 2, '(v,': 2, 'v, ': 4, 't) ': 1, ') f': 2, ' fo': 4, 'for': 4, 'or ': 4, 'r v': 2, ' v ': 2, 'v i': 2, 'n m': 2, 'ix)': 3, 'x):': 2, ', (': 2, ' (i': 2, '(in': 2, 'nt,': 2, 't, ': 2, ', f': 2, ' fl': 2, 'at)': 2, 't))': 2, ')) ': 1, 'r r': 1, ' ro': 7, 'row': 7, 'ow ': 3, 'w i': 2, 'x f': 1, 'n r': 1, 'ow)': 3, 'w):': 1, ')\n\n': 3, '  f': 1, 'r i': 1, 'ind': 2, 'nde': 2, 'dex': 2, 'ex,': 1, ', r': 2, 'n e': 1, ' en': 1, 'enu': 1, 'num': 2, 'ume': 1, 'mer': 1, 'era': 1, 'rat': 1, 'ate': 1, 'te(': 1, ' le': 2, 'len': 2, 'en(': 2, 'n(r': 1, '(ro': 1, 'w) ': 1, ') !': 1, ' !=': 1, '!= ': 1, '= l': 1, 'n(m': 1, 'ix[': 1, 'x[i': 1, '[in': 1, 'ex ': 1, 'x -': 1, ' - ': 1, '- 1': 1, ' 1]': 1, '1])': 1, ']):': 1, 'r(""': 3, '(""E': 1, '""Ea': 1, 'Eac': 1, 'ach': 1, 'ch ': 1, 'h r': 1, 'w o': 1, 'f t': 1, 'the': 2, 'he ': 2, 'e m': 1, 'hav': 1, 'ave': 1, 've ': 1, 'e t': 1, 'e s': 2, ' sa': 1, 'sam': 1, 'ame': 1, 'me ': 1, ' si': 1, 'siz': 1, 'ize': 1, 'ze""': 1, 'e"")': 1, 'e(d': 1, '(di': 1, 'iv,': 2, ')):': 1, '(""d': 2, '""di': 2, 'iv ': 2, 'v m': 1, 'a n': 1, ' nu': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'er""': 1, 'r"")': 1, 'f d': 1, 'v =': 1, ' ==': 1, '== ': 1, '= 0': 1, ' 0:': 1, '0:\n': 1, 'e Z': 1, ' Ze': 1, 'Zer': 1, 'ero': 2, 'roD': 1, 'oDi': 1, 'onE': 1, 'nEr': 1, 'n b': 1, ' by': 1, 'by ': 1, 'y z': 1, ' ze': 1, 'zer': 1, 'ro""': 1, 'o"")': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n l': 1, 'st(': 2, 't(m': 2, 'map': 2, 'ap(': 2, 'p(l': 2, '(la': 2, 'lam': 2, 'amb': 2, 'mbd': 2, 'bda': 2, 'da ': 2, 'a r': 1, 'ow:': 1, 'w: ': 1, ': l': 1, 'a v': 1, ' v:': 1, 'v:\n': 1, 'rou': 1, 'oun': 1, 'und': 1, 'nd(': 1, 'd(v': 1, '(v/': 1, 'v/d': 1, '/di': 1, ', 2': 1, ' 2)': 1, '2),': 1, '), ': 2, 'w))': 1, ')),': 1, ', m': 1, 'x))': 1, '))\n': 1}"
Samuel,3-say_my_name.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, '""""""': 2, 'contains': 1, 'a': 3, 'single': 1, 'function': 1, 'that': 1, 'prints': 1, 'out': 1, 'names': 1, 'def': 1, 'say_my_name(first_name,': 1, 'last_name=""""):': 1, '""""""prints': 1, 'my': 1, 'name': 2, 'is': 3, '<first': 1, 'name>': 1, '<last': 1, 'name>""""""': 1, 'if': 3, 'not': 2, 'isinstance(first_name,': 1, 'str):': 2, 'raise': 3, 'typeerror(""first_name': 1, 'must': 2, 'be': 2, 'string"")': 2, 'isinstance(last_name,': 1, 'typeerror(""last_name': 1, 'first_name': 1, '==': 1, '"""":': 1, 'valueerror(""first_name': 1, 'required"")': 1, 'print(""my': 1, '{}': 1, '{}"".format(first_name,': 1, 'last_name))': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\n""': 1, '\n""""': 2, '""""""': 4, '""""\n': 3, '""\n ': 1, '\n  ': 9, '   ': 30, '  C': 1, ' Co': 1, 'Con': 1, 'ont': 1, 'nta': 1, 'tai': 1, 'ain': 1, 'ins': 3, 'ns ': 1, 's a': 1, ' a ': 3, 'a s': 3, ' si': 1, 'sin': 3, 'ing': 3, 'ngl': 1, 'gle': 1, 'le ': 1, 'e f': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n t': 1, ' th': 1, 'tha': 1, 'hat': 1, 'at ': 1, 't p': 1, ' pr': 2, 'pri': 2, 'rin': 5, 'int': 3, 'nts': 2, 'ts ': 2, 's o': 1, ' ou': 1, 'out': 1, 'ut ': 1, 't n': 3, ' na': 5, 'nam': 16, 'ame': 16, 'mes': 1, 'es\n': 1, 's\n""': 1, '""\n\n': 2, '\n\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f s': 1, ' sa': 1, 'say': 1, 'ay_': 1, 'y_m': 1, '_my': 1, 'my_': 1, 'y_n': 1, '_na': 11, 'me(': 1, 'e(f': 2, '(fi': 3, 'fir': 7, 'irs': 7, 'rst': 7, 'st_': 10, 't_n': 10, 'me,': 4, 'e, ': 4, ', l': 2, ' la': 2, 'las': 5, 'ast': 5, 'me=': 1, 'e=""': 1, '=""""': 1, '"""")': 1, '""):': 1, '):\n': 3, ':\n ': 4, '  ""': 1, ' """"': 2, '""""P': 1, '""Pr': 1, 'Pri': 1, 's M': 1, ' My': 1, 'My ': 2, 'y n': 2, 'me ': 6, 'e i': 3, ' is': 5, 'is ': 3, 's <': 1, ' <f': 1, '<fi': 1, 'st ': 4, 'me>': 2, 'e> ': 1, '> <': 1, ' <l': 1, '<la': 1, 'e>""': 1, '>""""': 1, '\n\n ': 2, '  i': 3, ' if': 3, 'if ': 3, 'f n': 2, ' no': 2, 'not': 2, 'ot ': 2, 't i': 2, 'isi': 2, 'nst': 2, 'sta': 2, 'tan': 2, 'anc': 2, 'nce': 2, 'ce(': 2, ', s': 2, ' st': 4, 'str': 4, 'tr)': 2, 'r):': 2, '  r': 3, ' ra': 3, 'rai': 3, 'ais': 3, 'ise': 3, 'se ': 3, 'e T': 2, ' Ty': 2, 'Typ': 2, 'ype': 2, 'peE': 2, 'eEr': 3, 'Err': 3, 'rro': 3, 'ror': 3, 'or(': 3, 'r(""': 3, '(""f': 2, '""fi': 2, 'e m': 2, ' mu': 2, 'mus': 2, 'ust': 2, 't b': 2, ' be': 2, 'be ': 2, 'e a': 2, 'tri': 2, 'ng""': 2, 'g"")': 2, '"")\n': 3, ')\n ': 2, 'e(l': 1, '(la': 1, '(""l': 1, '""la': 1, 'f f': 1, ' fi': 1, 'e =': 1, ' ==': 1, '== ': 1, '= ""': 1, '"""":': 1, '"":\n': 1, 'e V': 1, ' Va': 1, 'Val': 1, 'alu': 1, 'lue': 1, 'ueE': 1, 's r': 1, ' re': 1, 'req': 1, 'equ': 1, 'qui': 1, 'uir': 1, 'ire': 1, 'red': 1, 'ed""': 1, 'd"")': 1, ')\n\n': 1, '  p': 1, 'nt(': 1, 't(""': 1, '(""M': 1, '""My': 1, 's {': 1, ' {}': 2, '{} ': 1, '} {': 1, '{}""': 1, '}"".': 1, '"".f': 1, '.fo': 1, 'for': 1, 'orm': 1, 'rma': 1, 'mat': 1, 'at(': 1, 't(f': 1, 'me)': 1, 'e))': 1, '))\n': 1}"
Samuel,4-list_division.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, 'def': 1, 'list_division(my_list_1,': 1, 'my_list_2,': 1, 'list_length):': 1, 'newlist': 2, '=': 5, '[]': 1, 'for': 1, 'i': 1, 'in': 1, 'range(list_length):': 1, 'try:': 1, 'div': 4, 'my_list_1[i]': 1, '/': 1, 'my_list_2[i]': 1, 'except': 3, 'typeerror:': 1, 'print(""wrong': 1, 'type"")': 1, '0': 3, 'zerodivisionerror:': 1, 'print(""division': 1, 'by': 1, '0"")': 1, 'indexerror:': 1, 'print(""out': 1, 'of': 1, 'range"")': 1, 'finally:': 1, 'newlist.append(div)': 1, 'return': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f l': 1, ' li': 2, 'lis': 10, 'ist': 10, 'st_': 7, 't_d': 1, '_di': 1, 'div': 7, 'ivi': 3, 'vis': 3, 'isi': 3, 'sio': 3, 'ion': 3, 'on(': 1, 'n(m': 1, '(my': 1, 'my_': 4, 'y_l': 4, '_li': 4, 't_1': 2, '_1,': 1, '1, ': 1, ', m': 1, ' my': 3, 't_2': 2, '_2,': 1, '2, ': 1, ', l': 1, 't_l': 2, '_le': 2, 'len': 2, 'eng': 2, 'ngt': 2, 'gth': 2, 'th)': 2, 'h):': 2, '):\n': 2, ':\n ': 7, '\n  ': 16, '   ': 116, '  n': 2, ' ne': 3, 'new': 3, 'ewl': 3, 'wli': 3, 'st ': 1, 't =': 1, ' = ': 5, '= [': 1, ' []': 1, '[]\n': 1, ']\n ': 2, '  f': 2, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, ' in': 1, 'in ': 1, 'n r': 1, ' ra': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 1, 'e(l': 1, '(li': 1, '  t': 1, ' tr': 1, 'try': 1, 'ry:': 1, 'y:\n': 2, '  d': 4, ' di': 4, 'iv ': 4, 'v =': 4, '= m': 1, '_1[': 1, '1[i': 1, '[i]': 2, 'i] ': 1, '] /': 1, ' / ': 1, '/ m': 1, '_2[': 1, '2[i': 1, 'i]\n': 1, '  e': 3, ' ex': 3, 'exc': 3, 'xce': 3, 'cep': 3, 'ept': 3, 'pt ': 3, 't T': 1, ' Ty': 1, 'Typ': 1, 'ype': 2, 'peE': 1, 'eEr': 1, 'Err': 3, 'rro': 3, 'ror': 3, 'or:': 3, 'r:\n': 3, '  p': 3, ' pr': 3, 'pri': 3, 'rin': 3, 'int': 3, 'nt(': 3, 't(""': 3, '(""w': 1, '""wr': 1, 'wro': 1, 'ron': 1, 'ong': 1, 'ng ': 1, 'g t': 1, ' ty': 1, 'typ': 1, 'pe""': 1, 'e"")': 2, '"")\n': 3, ')\n ': 4, '= 0': 3, ' 0\n': 3, '0\n ': 3, 't Z': 1, ' Ze': 1, 'Zer': 1, 'ero': 1, 'roD': 1, 'oDi': 1, 'Div': 1, 'onE': 1, 'nEr': 1, '(""d': 1, '""di': 1, 'on ': 1, 'n b': 1, ' by': 1, 'by ': 1, 'y 0': 1, ' 0""': 1, '0"")': 1, 't I': 1, ' In': 1, 'Ind': 1, 'nde': 1, 'dex': 1, 'exE': 1, 'xEr': 1, '(""o': 1, '""ou': 1, 'out': 1, 'ut ': 1, 't o': 1, ' of': 1, 'of ': 1, 'f r': 1, 'ge""': 1, ' fi': 1, 'fin': 1, 'ina': 1, 'nal': 1, 'all': 1, 'lly': 1, 'ly:': 1, 'st.': 1, 't.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(d': 1, '(di': 1, 'iv)': 1, 'v)\n': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n n': 1, 'st\n': 1}"
Samuel,4-print_square.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, '""""""': 2, 'contains': 1, 'a': 3, 'single': 1, 'function': 1, 'that': 1, 'prints': 1, 'square': 2, 'def': 1, 'print_square(size):': 1, '""""""prints': 1, 'with': 1, 'the': 1, 'character': 1, '`#`""""""': 1, 'if': 4, 'not': 1, 'isinstance(size,': 3, '(int,': 1, 'float)):': 1, 'raise': 3, 'typeerror(""size': 2, 'must': 3, 'be': 3, 'an': 2, 'integer"")': 2, 'float)': 2, 'and': 1, 'size': 4, '<': 2, '0:': 2, 'valueerror(""size': 1, '>=': 1, '0"")': 1, '=': 1, 'int(size)': 1, 'else': 1, 'for': 2, 'i': 1, 'in': 2, 'range(size):': 2, 'j': 1, 'print(""#"",': 1, 'end="""")': 1, 'print()': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\n""': 1, '\n""""': 2, '""""""': 4, '""""\n': 3, '""\n ': 1, '\n  ': 13, '   ': 54, '  C': 1, ' Co': 1, 'Con': 1, 'ont': 1, 'nta': 1, 'tai': 1, 'ain': 1, 'ins': 4, 'ns ': 1, 's a': 3, ' a ': 3, 'a s': 3, ' si': 5, 'sin': 4, 'ing': 1, 'ngl': 1, 'gle': 1, 'le ': 1, 'e f': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n t': 1, ' th': 2, 'tha': 1, 'hat': 1, 'at ': 1, 't p': 1, ' pr': 4, 'pri': 4, 'rin': 5, 'int': 9, 'nts': 2, 'ts ': 2, ' sq': 2, 'squ': 3, 'qua': 3, 'uar': 3, 'are': 3, 're\n': 1, 'e\n""': 1, '""\n\n': 2, '\n\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f p': 1, 'nt_': 1, 't_s': 1, '_sq': 1, 're(': 1, 'e(s': 6, '(si': 7, 'siz': 14, 'ize': 14, 'ze)': 4, 'e):': 3, '):\n': 4, ':\n ': 6, '  ""': 1, ' """"': 1, '""""P': 1, '""Pr': 1, 'Pri': 1, 're ': 1, 'e w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'th ': 1, 'h t': 1, 'the': 1, 'he ': 1, 'e c': 1, ' ch': 1, 'cha': 1, 'har': 1, 'ara': 1, 'rac': 1, 'act': 1, 'cte': 1, 'ter': 1, 'er ': 1, 'r `': 1, ' `#': 1, '`#`': 1, '#`""': 1, '`""""': 1, '\n\n ': 2, '  i': 3, ' if': 4, 'if ': 4, 'f n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't i': 1, ' is': 3, 'isi': 3, 'nst': 3, 'sta': 3, 'tan': 3, 'anc': 3, 'nce': 3, 'ce(': 3, 'ze,': 3, 'e, ': 3, ', (': 1, ' (i': 1, '(in': 1, 'nt,': 1, 't, ': 1, ', f': 3, ' fl': 3, 'flo': 3, 'loa': 3, 'oat': 3, 'at)': 3, 't))': 1, ')):': 1, '  r': 3, ' ra': 5, 'rai': 3, 'ais': 3, 'ise': 3, 'se ': 4, 'e T': 2, ' Ty': 2, 'Typ': 2, 'ype': 2, 'peE': 2, 'eEr': 3, 'Err': 3, 'rro': 3, 'ror': 3, 'or(': 3, 'r(""': 3, '(""s': 3, '""si': 3, 'ze ': 6, 'e m': 3, ' mu': 3, 'mus': 3, 'ust': 3, 'st ': 3, 't b': 3, ' be': 3, 'be ': 3, 'e a': 2, ' an': 3, 'an ': 2, 'n i': 2, ' in': 5, 'nte': 2, 'teg': 2, 'ege': 2, 'ger': 2, 'er""': 2, 'r"")': 2, '"")\n': 4, ')\n ': 3, 'f i': 2, 't) ': 2, ') a': 1, 'and': 1, 'nd ': 1, 'd s': 1, 'e <': 2, ' < ': 2, '< 0': 2, ' 0:': 2, '0:\n': 2, 'f s': 1, 'e V': 1, ' Va': 1, 'Val': 1, 'alu': 1, 'lue': 1, 'ueE': 1, 'e >': 1, ' >=': 1, '>= ': 1, '= 0': 1, ' 0""': 1, '0"")': 1, ')\n\n': 1, '  s': 1, 'e =': 1, ' = ': 1, '= i': 1, 'nt(': 3, 't(s': 1, 'e) ': 1, ') i': 1, ') e': 1, ' el': 1, 'els': 1, 'lse': 1, 'e s': 1, 'ze\n': 1, 'e\n ': 1, '  f': 2, ' fo': 2, 'for': 2, 'or ': 2, 'r i': 1, ' i ': 1, 'i i': 1, 'in ': 2, 'n r': 2, 'ran': 2, 'ang': 2, 'nge': 2, 'ge(': 2, 'r j': 1, ' j ': 1, 'j i': 1, '  p': 2, 't(""': 1, '(""#': 1, '""#""': 1, '#"",': 1, '"", ': 1, ', e': 1, ' en': 1, 'end': 1, 'nd=': 1, 'd=""': 1, '=""""': 1, '"""")': 1, 't()': 1, '()\n': 1}"
Samuel,5-text_indentation.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, '""""""': 4, 'contains': 1, 'a': 3, 'single': 1, 'function': 1, 'that': 1, 'handles': 1, 'text': 2, 'indenting': 1, 'def': 1, 'text_indentation(text):': 1, 'prints': 1, 'with': 1, '2': 1, 'new': 1, 'lines': 1, 'after': 1, 'each': 1, 'of': 1, 'these': 1, 'characters:': 1, '.,': 1, '?': 1, 'and': 2, ':': 1, 'if': 2, 'not': 1, 'isinstance(text,': 1, 'str):': 1, 'raise': 1, 'typeerror(""text': 1, 'must': 1, 'be': 1, 'string"")': 1, 'begin': 4, '=': 3, '0': 2, 'delimeters': 1, '[""."",': 1, '""?"",': 1, '"":""]': 1, 'for': 1, 'c': 2, 'in': 2, 'text:': 1, 'c.isspace()': 1, '==': 1, '0:': 1, 'continue': 2, 'elif': 1, 'delimeters:': 1, 'print(""{}\\n\\n"".format(c),': 1, 'end="""")': 2, 'else:': 1, 'print(""{}"".format(c),': 1, '+=': 1, '1': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\n""': 1, '\n""""': 2, '""""""': 4, '""""\n': 4, '""\n ': 3, '\n  ': 19, '   ': 110, '  C': 1, ' Co': 1, 'Con': 1, 'ont': 3, 'nta': 2, 'tai': 1, 'ain': 1, 'ins': 2, 'ns ': 1, 's a': 3, ' a ': 3, 'a s': 2, ' si': 1, 'sin': 2, 'ing': 3, 'ngl': 1, 'gle': 1, 'le ': 1, 'e f': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 2, 'ion': 2, 'on ': 1, 'n t': 2, ' th': 2, 'tha': 1, 'hat': 1, 'at ': 1, 't h': 1, ' ha': 1, 'han': 1, 'and': 3, 'ndl': 1, 'dle': 1, 'les': 1, 'es ': 2, 's t': 1, ' te': 4, 'tex': 7, 'ext': 7, 'xt ': 3, 't i': 2, ' in': 3, 'ind': 2, 'nde': 2, 'den': 2, 'ent': 2, 'nti': 3, 'tin': 3, 'ng\n': 1, 'g\n""': 1, '""\n\n': 1, '\n\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f t': 2, 'xt_': 1, 't_i': 1, '_in': 1, 'tat': 1, 'ati': 1, 'on(': 1, 'n(t': 1, '(te': 2, 'xt)': 1, 't):': 1, '):\n': 2, ':\n ': 7, '  ""': 2, ' """"': 2, '  p': 3, ' pr': 3, 'pri': 3, 'rin': 4, 'int': 3, 'nts': 1, 'ts ': 1, 'a t': 1, 't w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'th ': 1, 'h 2': 1, ' 2 ': 1, '2 n': 1, ' ne': 1, 'new': 1, 'ew ': 1, 'w l': 1, ' li': 1, 'lin': 1, 'ine': 1, 'nes': 1, ' af': 1, 'aft': 1, 'fte': 1, 'ter': 4, 'er ': 1, 'r e': 1, ' ea': 1, 'eac': 1, 'ach': 1, 'ch\n': 1, 'h\n ': 1, '  o': 1, ' of': 1, 'of ': 1, 'the': 1, 'hes': 1, 'ese': 1, 'se ': 2, 'e c': 1, ' ch': 1, 'cha': 1, 'har': 1, 'ara': 1, 'rac': 1, 'act': 1, 'cte': 1, 'ers': 3, 'rs:': 2, 's: ': 1, ': .': 1, ' .,': 1, '., ': 1, ', ?': 1, ' ? ': 1, '? a': 1, ' an': 2, 'nd ': 2, 'd :': 1, ' :\n': 1, '  i': 2, ' if': 2, 'if ': 3, 'f n': 1, ' no': 1, 'not': 1, 'ot ': 1, ' is': 1, 'isi': 1, 'nst': 1, 'sta': 1, 'tan': 1, 'anc': 1, 'nce': 1, 'ce(': 2, 'e(t': 1, 'xt,': 1, 't, ': 1, ', s': 1, ' st': 2, 'str': 2, 'tr)': 1, 'r):': 1, '  r': 1, ' ra': 1, 'rai': 1, 'ais': 1, 'ise': 1, 'e T': 1, ' Ty': 1, 'Typ': 1, 'ype': 1, 'peE': 1, 'eEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or(': 1, 'r(""': 1, '(""t': 1, '""te': 1, 't m': 1, ' mu': 1, 'mus': 1, 'ust': 1, 'st ': 1, 't b': 1, ' be': 5, 'be ': 1, 'e a': 1, 'tri': 1, 'ng""': 1, 'g"")': 1, '"")\n': 3, ')\n\n': 1, '\n\n ': 1, '  b': 3, 'beg': 4, 'egi': 4, 'gin': 4, 'in ': 6, 'n =': 3, ' = ': 3, '= 0': 3, ' 0\n': 2, '0\n ': 2, '  d': 1, ' de': 2, 'del': 2, 'eli': 3, 'lim': 2, 'ime': 2, 'met': 2, 'ete': 2, 'rs ': 1, 's =': 1, '= [': 1, ' [""': 1, '["".': 1, '"".""': 1, '."",': 1, '"", ': 2, ', ""': 2, ' ""?': 1, '""?""': 1, '?"",': 1, ' "":': 1, '"":""': 1, ':""]': 1, '""]\n': 1, ']\n ': 1, '  f': 1, ' fo': 1, 'for': 3, 'or ': 1, 'r c': 1, ' c ': 2, 'c i': 2, 'xt:': 1, 't:\n': 1, 'f c': 2, ' c.': 1, 'c.i': 1, '.is': 1, 'iss': 1, 'ssp': 1, 'spa': 1, 'pac': 1, 'ace': 1, 'e()': 1, '() ': 1, ') a': 1, 'd b': 1, ' ==': 1, '== ': 1, ' 0:': 1, '0:\n': 1, '  c': 2, ' co': 2, 'con': 2, 'inu': 2, 'nue': 2, 'ue\n': 2, 'e\n ': 2, '  e': 2, ' el': 2, 'lif': 1, 'n d': 1, 's:\n': 1, 'nt(': 2, 't(""': 2, '(""{': 2, '""{}': 2, '{}\\': 1, '}\\n': 1, '\\n\\': 1, 'n\\n': 1, '\\n""': 1, 'n"".': 1, '"".f': 2, '.fo': 2, 'orm': 2, 'rma': 2, 'mat': 2, 'at(': 2, 't(c': 2, '(c)': 2, 'c),': 2, '), ': 2, ', e': 2, ' en': 2, 'end': 2, 'nd=': 2, 'd=""': 2, '=""""': 2, '"""")': 2, ')\n ': 2, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, '{}""': 1, '}"".': 1, 'n +': 1, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 1}"
Samuel,6-max_integer.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, '""""""module': 1, 'to': 2, 'find': 2, 'the': 4, 'max': 2, 'integer': 2, 'in': 2, 'a': 2, 'list': 3, '""""""': 2, 'def': 1, 'max_integer(list=[]):': 1, '""""""function': 1, 'and': 1, 'return': 3, 'of': 1, 'integers': 1, 'if': 3, 'is': 1, 'empty,': 1, 'function': 1, 'returns': 1, 'none': 2, 'len(list)': 1, '==': 1, '0:': 1, 'result': 3, '=': 3, 'list[0]': 1, 'i': 3, '1': 2, 'while': 1, '<': 1, 'len(list):': 1, 'list[i]': 2, '>': 1, 'result:': 1, '+=': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\n""': 1, '\n""""': 2, '""""""': 4, '""""M': 1, '""Mo': 1, 'Mod': 1, 'odu': 1, 'dul': 1, 'ule': 1, 'le ': 2, 'e t': 1, ' to': 2, 'to ': 2, 'o f': 2, ' fi': 2, 'fin': 2, 'ind': 2, 'nd ': 3, 'd t': 1, ' th': 4, 'the': 4, 'he ': 4, 'e m': 2, ' ma': 3, 'max': 3, 'ax ': 2, 'x i': 2, ' in': 5, 'int': 4, 'nte': 4, 'teg': 4, 'ege': 4, 'ger': 4, 'er ': 2, 'r i': 2, 'in ': 2, 'n a': 2, ' a ': 2, 'a l': 2, ' li': 6, 'lis': 9, 'ist': 9, 'st\n': 1, 't\n""': 1, '""""\n': 2, '""\n\n': 1, '\n\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f m': 1, 'ax_': 1, 'x_i': 1, '_in': 1, 'er(': 1, 'r(l': 1, '(li': 3, 'st=': 1, 't=[': 1, '=[]': 1, '[])': 1, ']):': 1, '):\n': 2, ':\n ': 4, '\n  ': 12, '   ': 48, '  ""': 2, ' """"': 2, '""""F': 1, '""Fu': 1, 'Fun': 1, 'unc': 2, 'nct': 2, 'cti': 2, 'tio': 2, 'ion': 2, 'on ': 2, 'n t': 2, 'd a': 1, ' an': 1, 'and': 1, 'd r': 1, ' re': 8, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 3, 'st ': 2, 't o': 1, ' of': 1, 'of ': 1, 'f i': 1, 'ers': 1, 'rs\n': 1, 's\n ': 1, '  I': 1, ' If': 1, 'If ': 1, 'f t': 1, 'e l': 1, 't i': 1, ' is': 1, 'is ': 1, 's e': 1, ' em': 1, 'emp': 1, 'mpt': 1, 'pty': 1, 'ty,': 1, 'y, ': 1, ', t': 1, 'e f': 1, ' fu': 1, 'fun': 1, 'n r': 2, 'rns': 1, 'ns ': 1, 's N': 1, ' No': 2, 'Non': 2, 'one': 2, 'ne\n': 2, 'e\n ': 2, '""\n ': 1, '  i': 4, ' if': 2, 'if ': 2, 'f l': 2, ' le': 2, 'len': 2, 'en(': 2, 'n(l': 2, 'st)': 2, 't) ': 1, ') =': 1, ' ==': 1, '== ': 1, '= 0': 1, ' 0:': 1, '0:\n': 1, '  r': 4, 'n N': 1, 'res': 4, 'esu': 4, 'sul': 4, 'ult': 4, 'lt ': 2, 't =': 2, ' = ': 3, '= l': 2, 'st[': 3, 't[0': 1, '[0]': 1, '0]\n': 1, ']\n ': 2, ' i ': 3, 'i =': 1, '= 1': 2, ' 1\n': 2, '1\n ': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'e i': 1, 'i <': 1, ' < ': 1, '< l': 1, 't):': 1, 't[i': 2, '[i]': 2, 'i] ': 1, '] >': 1, ' > ': 1, '> r': 1, 'lt:': 1, 't:\n': 1, 'i]\n': 1, 'i +': 1, ' +=': 1, '+= ': 1, 'lt\n': 1}"
Samuel,6-max_integer_test.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, '""""""unittest': 1, 'for': 2, 'max_integer([..])': 1, '""""""': 1, 'import': 1, 'unittest': 1, 'max_integer': 2, '=': 1, ""__import__('6-max_integer').max_integer"": 1, 'class': 1, 'testmaxinteger(unittest.testcase):': 1, '""""""test': 3, 'cases': 1, 'function.""""""': 1, 'def': 2, 'test_int(self):': 1, 'valid': 1, 'integers.""""""': 1, 'self.assertequal(max_integer([10,': 1, '-20,': 1, '30,': 1, '-40]),': 1, '30)': 1, 'self.assertequal(max_integer([50]),': 1, '50)': 1, 'self.assertequal(max_integer([0,': 1, '-5,': 1, '-10]),': 1, '0)': 1, 'self.assertequal(max_integer([1,': 4, '2,': 4, '3,': 5, '4]),': 1, '4)': 3, '4,': 1, '2]),': 1, 'self.assertequal(max_integer([-2,': 1, '-6,': 1, '-8,': 1, '-4]),': 1, '-2)': 1, 'test_type(self):': 1, 'other': 1, 'compatible': 1, 'data': 1, 'types.""""""': 1, ""float('inf')]),"": 1, ""float('inf'))"": 1, ""float('nan')]),"": 1, '3)': 1, 'self.assertequal(max_integer(),': 1, 'none)': 1, 'self.assertequal(max_integer(""string""),': 1, ""'t')"": 1, 'self.assertequal(max_integer((1,': 1, '4)),': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'unittest.main()': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\n""': 1, '\n""""': 2, '""""""': 8, '""""U': 1, '""Un': 1, 'Uni': 1, 'nit': 4, 'itt': 4, 'tte': 4, 'tes': 6, 'est': 11, 'st ': 4, 't f': 1, ' fo': 2, 'for': 2, 'or ': 2, 'r m': 2, ' ma': 2, 'max': 16, 'ax_': 16, 'x_i': 16, '_in': 17, 'int': 18, 'nte': 18, 'teg': 18, 'ege': 18, 'ger': 18, 'er(': 13, 'r([': 9, '([.': 1, '[..': 1, '..]': 1, '.])': 1, '])\n': 1, ')\n""': 1, '""""\n': 4, '""\ni': 1, '\nim': 1, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 1, 't u': 1, ' un': 2, 'uni': 3, 'st\n': 1, 't\nm': 1, '\nma': 1, 'er ': 3, 'r =': 1, ' = ': 1, '= _': 1, ' __': 2, '__i': 1, '_im': 1, 'rt_': 1, 't__': 1, '__(': 1, ""_('"": 1, ""('6"": 1, ""'6-"": 1, '6-m': 1, '-ma': 1, ""er'"": 1, ""r')"": 1, ""')."": 1, ').m': 1, '.ma': 2, 'er\n': 1, 'r\n\n': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 12, 'ss ': 1, 's T': 1, ' Te': 1, 'Tes': 5, 'stM': 1, 'tMa': 1, 'Max': 1, 'axI': 1, 'xIn': 1, 'Int': 1, 'r(u': 1, '(un': 1, 'st.': 2, 't.T': 1, '.Te': 1, 'stC': 1, 'tCa': 1, 'Cas': 1, 'ase': 2, 'se)': 1, 'e):': 1, '):\n': 3, ':\n ': 4, '\n  ': 17, '   ': 86, '  ""': 3, ' """"': 3, '""""T': 3, '""Te': 3, 't c': 1, ' ca': 1, 'cas': 1, 'ses': 1, 'es ': 1, 's f': 1, 'r f': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'on.': 1, 'n.""': 1, '.""""': 3, '""\n\n': 1, '\n\n ': 2, '  d': 2, ' de': 2, 'def': 2, 'ef ': 2, 'f t': 2, ' te': 2, 'st_': 2, 't_i': 1, 'nt(': 1, 't(s': 1, '(se': 2, 'sel': 13, 'elf': 13, 'lf)': 2, 'f):': 2, 't v': 1, ' va': 1, 'val': 1, 'ali': 1, 'lid': 1, 'id ': 1, 'd i': 1, ' in': 1, 'ers': 1, 'rs.': 1, 's.""': 2, '""\n ': 2, '  s': 11, ' se': 11, 'lf.': 11, 'f.a': 11, '.as': 11, 'sse': 11, 'ser': 11, 'ert': 11, 'rtE': 11, 'tEq': 11, 'Equ': 11, 'qua': 11, 'ual': 11, 'al(': 11, 'l(m': 11, '(ma': 11, '([1': 5, '[10': 1, '10,': 1, '0, ': 4, ', -': 8, ' -2': 2, '-20': 1, '20,': 1, ', 3': 8, ' 30': 2, '30,': 1, ' -4': 2, '-40': 1, '40]': 1, '0])': 3, ']),': 8, '), ': 11, '30)': 1, '0)\n': 3, ')\n ': 9, '([5': 1, '[50': 1, '50]': 1, ', 5': 1, ' 50': 1, '50)': 1, '([0': 1, '[0,': 1, ' -5': 1, '-5,': 1, '5, ': 1, ' -1': 1, '-10': 1, '10]': 1, ', 0': 1, ' 0)': 1, '[1,': 4, '1, ': 5, ', 2': 5, ' 2,': 4, '2, ': 5, ' 3,': 5, '3, ': 5, ', 4': 6, ' 4]': 1, '4])': 2, ' 4)': 4, '4)\n': 3, ' 4,': 1, '4, ': 1, ' 2]': 1, '2])': 1, '([-': 1, '[-2': 1, '-2,': 1, ' -6': 1, '-6,': 1, '6, ': 1, ' -8': 1, '-8,': 1, '8, ': 1, '-4]': 1, '-2)': 1, '2)\n': 1, ')\n\n': 2, 't_t': 1, '_ty': 1, 'typ': 2, 'ype': 2, 'pe(': 1, 'e(s': 1, 't o': 1, ' ot': 1, 'oth': 1, 'the': 1, 'her': 1, 'r c': 1, ' co': 1, 'com': 1, 'omp': 1, 'mpa': 1, 'pat': 1, 'ati': 1, 'tib': 1, 'ibl': 1, 'ble': 1, 'le ': 1, 'e d': 1, ' da': 1, 'dat': 1, 'ata': 1, 'ta ': 1, 'a t': 1, ' ty': 1, 'pes': 1, 'es.': 1, ', f': 3, ' fl': 3, 'flo': 3, 'loa': 3, 'oat': 3, 'at(': 3, ""t('"": 3, ""('i"": 2, ""'in"": 2, 'inf': 2, ""nf'"": 2, ""f')"": 2, ""')]"": 2, ')])': 2, ""'))"": 1, '))\n': 1, ""('n"": 1, ""'na"": 1, 'nan': 1, ""an'"": 1, ""n')"": 1, ' 3)': 1, '3)\n': 1, 'r()': 1, '(),': 1, ', N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne)': 1, 'e)\n': 1, 'r(""': 1, '(""s': 1, '""st': 1, 'str': 1, 'tri': 1, 'rin': 1, 'ing': 1, 'ng""': 1, 'g"")': 1, '""),': 1, "", '"": 1, "" 't"": 1, ""'t'"": 1, ""t')"": 1, ""')\n"": 1, 'r((': 1, '((1': 1, '(1,': 1, '4))': 1, ')),': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 2, 'ain': 2, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  u': 1, 't.m': 1, 'in(': 1, 'n()': 1, '()\n': 1}"
Samuel,7-main.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, 'basegeometry': 1, '=': 2, ""__import__('7-base_geometry').basegeometry"": 1, 'bg': 1, 'basegeometry()': 1, 'bg.integer_validator(""my_int"",': 1, '12)': 1, 'bg.integer_validator(""width"",': 1, '89)': 1, 'try:': 3, 'bg.integer_validator(""name"",': 1, '""john"")': 1, 'except': 3, 'exception': 3, 'as': 3, 'e:': 3, 'print(""[{}]': 3, '{}"".format(e.__class__.__name__,': 3, 'e))': 3, 'bg.integer_validator(""age"",': 1, '0)': 1, 'bg.integer_validator(""distance"",': 1, '-4)': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\nB': 1, '\nBa': 1, 'Bas': 3, 'ase': 4, 'seG': 3, 'eGe': 3, 'Geo': 3, 'eom': 4, 'ome': 4, 'met': 4, 'etr': 4, 'try': 7, 'ry ': 1, 'y =': 1, ' = ': 2, '= _': 1, ' __': 1, '__i': 1, '_im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt_': 1, 't__': 1, '__(': 1, ""_('"": 1, ""('7"": 1, ""'7-"": 1, '7-b': 1, '-ba': 1, 'bas': 1, 'se_': 1, 'e_g': 1, '_ge': 1, 'geo': 1, ""ry'"": 1, ""y')"": 1, ""')."": 1, ').B': 1, '.Ba': 1, 'ry\n': 1, 'y\n\n': 1, '\n\nb': 2, '\nbg': 3, 'bg ': 1, 'g =': 1, '= B': 1, ' Ba': 1, 'ry(': 1, 'y()': 1, '()\n': 1, ')\n\n': 4, 'bg.': 5, 'g.i': 5, '.in': 5, 'int': 9, 'nte': 5, 'teg': 5, 'ege': 5, 'ger': 5, 'er_': 5, 'r_v': 5, '_va': 5, 'val': 5, 'ali': 5, 'lid': 5, 'ida': 5, 'dat': 5, 'ato': 5, 'tor': 5, 'or(': 5, 'r(""': 5, '(""m': 1, '""my': 1, 'my_': 1, 'y_i': 1, '_in': 1, 'nt""': 1, 't"",': 1, '"", ': 5, ', 1': 1, ' 12': 1, '12)': 1, '2)\n': 1, ')\nb': 1, '(""w': 1, '""wi': 1, 'wid': 1, 'idt': 1, 'dth': 1, 'th""': 1, 'h"",': 1, ', 8': 1, ' 89': 1, '89)': 1, '9)\n': 1, '\n\nt': 3, '\ntr': 3, 'ry:': 3, 'y:\n': 3, ':\n ': 6, '\n  ': 6, '   ': 12, '  b': 3, ' bg': 3, '(""n': 1, '""na': 1, 'nam': 4, 'ame': 4, 'me""': 1, 'e"",': 3, ', ""': 1, ' ""J': 1, '""Jo': 1, 'Joh': 1, 'ohn': 1, 'hn""': 1, 'n"")': 1, '"")\n': 1, ')\ne': 3, '\nex': 3, 'exc': 3, 'xce': 6, 'cep': 6, 'ept': 6, 'pt ': 3, 't E': 3, ' Ex': 3, 'Exc': 3, 'pti': 3, 'tio': 3, 'ion': 3, 'on ': 3, 'n a': 3, ' as': 3, 'as ': 3, 's e': 3, ' e:': 3, 'e:\n': 3, '  p': 3, ' pr': 3, 'pri': 3, 'rin': 3, 'nt(': 3, 't(""': 3, '(""[': 3, '""[{': 3, '[{}': 3, '{}]': 3, '}] ': 3, '] {': 3, ' {}': 3, '{}""': 3, '}"".': 3, '"".f': 3, '.fo': 3, 'for': 3, 'orm': 3, 'rma': 3, 'mat': 3, 'at(': 3, 't(e': 3, '(e.': 3, 'e._': 3, '.__': 6, '__c': 3, '_cl': 3, 'cla': 3, 'las': 3, 'ass': 3, 'ss_': 3, 's__': 3, '__.': 3, '_._': 3, '__n': 3, '_na': 3, 'me_': 3, 'e__': 3, '__,': 3, '_, ': 3, ', e': 3, ' e)': 3, 'e))': 3, '))\n': 3, '(""a': 1, '""ag': 1, 'age': 1, 'ge""': 1, ', 0': 1, ' 0)': 1, '0)\n': 1, '(""d': 1, '""di': 1, 'dis': 1, 'ist': 1, 'sta': 1, 'tan': 1, 'anc': 1, 'nce': 1, 'ce""': 1, ', -': 1, ' -4': 1, '-4)': 1, '4)\n': 1}"
Samuel,8-main.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, 'rectangle': 1, '=': 3, ""__import__('8-rectangle').rectangle"": 1, 'r': 1, 'rectangle(3,': 1, '5)': 1, 'print(r)': 1, 'print(dir(r))': 1, 'try:': 2, 'print(""rectangle:': 1, '{}': 1, '-': 1, '{}"".format(r.width,': 1, 'r.height))': 1, 'except': 2, 'exception': 2, 'as': 2, 'e:': 2, 'print(""[{}]': 2, '{}"".format(e.__class__.__name__,': 2, 'e))': 2, 'r2': 1, 'rectangle(4,': 1, 'true)': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\nR': 1, '\nRe': 1, 'Rec': 5, 'ect': 6, 'cta': 6, 'tan': 6, 'ang': 6, 'ngl': 6, 'gle': 6, 'le ': 1, 'e =': 1, ' = ': 3, '= _': 1, ' __': 1, '__i': 1, '_im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt_': 1, 't__': 1, '__(': 1, ""_('"": 1, ""('8"": 1, ""'8-"": 1, '8-r': 1, '-re': 1, 'rec': 1, ""le'"": 1, ""e')"": 1, ""')."": 1, ').R': 1, '.Re': 1, 'le\n': 1, 'e\n\n': 1, '\n\nr': 1, '\nr ': 1, 'r =': 1, '= R': 2, ' Re': 2, 'le(': 2, 'e(3': 1, '(3,': 1, '3, ': 1, ', 5': 1, ' 5)': 1, '5)\n': 1, ')\n\n': 3, '\n\np': 1, '\npr': 2, 'pri': 5, 'rin': 5, 'int': 5, 'nt(': 5, 't(r': 2, '(r)': 2, 'r)\n': 1, ')\np': 1, 't(d': 1, '(di': 1, 'dir': 1, 'ir(': 1, 'r(r': 1, 'r))': 1, '))\n': 4, '\n\nt': 2, '\ntr': 2, 'try': 2, 'ry:': 2, 'y:\n': 2, ':\n ': 4, '\n  ': 4, '   ': 8, '  p': 3, ' pr': 3, 't(""': 3, '(""R': 1, '""Re': 1, 'le:': 1, 'e: ': 1, ': {': 1, ' {}': 4, '{} ': 1, '} -': 1, ' - ': 1, '- {': 1, '{}""': 3, '}"".': 3, '"".f': 3, '.fo': 3, 'for': 3, 'orm': 3, 'rma': 3, 'mat': 3, 'at(': 3, '(r.': 1, 'r.w': 1, '.wi': 1, 'wid': 1, 'idt': 1, 'dth': 1, 'th,': 1, 'h, ': 1, ', r': 1, ' r.': 1, 'r.h': 1, '.he': 1, 'hei': 1, 'eig': 1, 'igh': 1, 'ght': 1, 'ht)': 1, 't))': 1, ')\ne': 2, '\nex': 2, 'exc': 2, 'xce': 4, 'cep': 4, 'ept': 4, 'pt ': 2, 't E': 2, ' Ex': 2, 'Exc': 2, 'pti': 2, 'tio': 2, 'ion': 2, 'on ': 2, 'n a': 2, ' as': 2, 'as ': 2, 's e': 2, ' e:': 2, 'e:\n': 2, '(""[': 2, '""[{': 2, '[{}': 2, '{}]': 2, '}] ': 2, '] {': 2, 't(e': 2, '(e.': 2, 'e._': 2, '.__': 4, '__c': 2, '_cl': 2, 'cla': 2, 'las': 2, 'ass': 2, 'ss_': 2, 's__': 2, '__.': 2, '_._': 2, '__n': 2, '_na': 2, 'nam': 2, 'ame': 2, 'me_': 2, 'e__': 2, '__,': 2, '_, ': 2, ', e': 2, ' e)': 2, 'e))': 2, '  r': 1, ' r2': 1, 'r2 ': 1, '2 =': 1, 'e(4': 1, '(4,': 1, '4, ': 1, ', T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e)\n': 1}"
Samuel,8-uppercase.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#!/usr/bin/python3': 1, 'def': 1, 'uppercase(str):': 1, 'case': 3, '=': 3, '0': 2, 'for': 1, 'i': 1, 'in': 1, 'str:': 1, 'if': 1, 'ord(i)': 2, '>=': 1, ""ord('a')"": 1, 'and': 1, '<=': 1, ""ord('z'):"": 1, '32': 1, 'else:': 1, ""print('{:c}'.format(ord(i)"": 1, '-': 1, 'case),': 1, ""end='')"": 1, 'print()': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f u': 1, ' up': 1, 'upp': 1, 'ppe': 1, 'per': 1, 'erc': 1, 'rca': 1, 'cas': 5, 'ase': 5, 'se(': 1, 'e(s': 1, '(st': 1, 'str': 2, 'tr)': 1, 'r):': 1, '):\n': 2, ':\n ': 4, '\n  ': 8, '   ': 44, '  c': 3, ' ca': 4, 'se ': 3, 'e =': 3, ' = ': 3, '= 0': 2, ' 0\n': 2, '0\n ': 2, '  f': 1, ' fo': 1, 'for': 2, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, ' in': 1, 'in ': 1, 'n s': 1, ' st': 1, 'tr:': 1, 'r:\n': 1, '  i': 1, ' if': 1, 'if ': 1, 'f o': 1, ' or': 4, 'ord': 5, 'rd(': 5, 'd(i': 3, '(i)': 3, 'i) ': 3, ') >': 1, ' >=': 1, '>= ': 1, '= o': 2, ""d('"": 2, ""('a"": 1, ""'a'"": 1, ""a')"": 1, ""') "": 1, ') a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd o': 1, ') <': 1, ' <=': 1, '<= ': 1, ""('z"": 1, ""'z'"": 1, ""z')"": 1, ""'):"": 1, '= 3': 1, ' 32': 1, '32\n': 1, '2\n ': 1, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 2, 'int': 2, 'nt(': 2, ""t('"": 1, ""('{"": 1, ""'{:"": 1, '{:c': 1, ':c}': 1, ""c}'"": 1, ""}'."": 1, ""'.f"": 1, '.fo': 1, 'orm': 1, 'rma': 1, 'mat': 1, 'at(': 1, 't(o': 1, '(or': 1, ') -': 1, ' - ': 1, '- c': 1, 'se)': 1, 'e),': 1, '), ': 1, ', e': 1, ' en': 1, 'end': 1, 'nd=': 1, ""d='"": 1, ""=''"": 1, ""'')"": 1, ""')\n"": 1, ')\n ': 1, 't()': 1, '()\n': 1}"
Samuel,9-rectangle.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, '""""""contains': 1, 'a': 1, 'class': 2, 'that': 1, 'inherits': 1, 'from': 2, '`basegeometry""""""': 1, 'basegeometry': 1, '=': 4, ""__import__('7-base_geometry').basegeometry"": 1, 'rectangle(basegeometry):': 1, '""""""inherits': 1, '`basegeometry`""""""': 1, 'def': 3, '__init__(self,': 1, 'width,': 1, 'height):': 1, '""""""initialize': 1, 'rectangle': 1, 'values""""""': 1, 'self.integer_validator(""width"",': 1, 'width)': 1, 'self.__width': 1, 'width': 1, 'self.integer_validator(""height"",': 1, 'height)': 1, 'self.__height': 1, 'height': 1, 'area(self):': 1, '""""""calculates': 1, 'the': 4, 'area': 1, 'of': 2, 'geometry""""""': 1, 'return': 2, '(self.__width': 1, '*': 1, 'self.__height)': 2, '__str__(self):': 1, '""""""prints': 1, 'description': 1, '`rectangle`""""""': 1, 'string': 2, '""[rectangle]': 1, '{}/{}"".format(self.__width,': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\n""': 1, '\n""""': 1, '""""""': 10, '""""C': 2, '""Co': 1, 'Con': 1, 'ont': 1, 'nta': 1, 'tai': 1, 'ain': 1, 'ins': 1, 'ns ': 1, 's a': 1, ' a ': 1, 'a c': 1, ' cl': 1, 'cla': 2, 'las': 2, 'ass': 2, 'ss ': 2, 's t': 3, ' th': 5, 'tha': 1, 'hat': 1, 'at ': 1, 't i': 1, ' in': 1, 'inh': 1, 'nhe': 2, 'her': 2, 'eri': 2, 'rit': 2, 'its': 2, 'ts ': 3, 's f': 2, ' fr': 2, 'fro': 2, 'rom': 2, 'om ': 2, 'm `': 2, ' `B': 2, '`Ba': 2, 'Bas': 5, 'ase': 6, 'seG': 5, 'eGe': 5, 'Geo': 5, 'eom': 7, 'ome': 7, 'met': 7, 'etr': 7, 'try': 7, 'ry""': 2, 'y""""': 2, '""""\n': 5, '""\n\n': 2, '\n\nB': 1, '\nBa': 1, 'ry ': 1, 'y =': 1, ' = ': 4, '= _': 1, ' __': 3, '__i': 2, '_im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt_': 1, 't__': 2, '__(': 3, ""_('"": 1, ""('7"": 1, ""'7-"": 1, '7-b': 1, '-ba': 1, 'bas': 1, 'se_': 1, 'e_g': 1, '_ge': 1, 'geo': 2, ""ry'"": 1, ""y')"": 1, ""')."": 1, ').B': 1, '.Ba': 1, 'ry\n': 1, 'y\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 's R': 1, ' Re': 1, 'Rec': 3, 'ect': 4, 'cta': 4, 'tan': 4, 'ang': 4, 'ngl': 4, 'gle': 4, 'le(': 1, 'e(B': 1, '(Ba': 1, 'ry)': 1, 'y):': 1, '):\n': 4, ':\n ': 4, '\n  ': 14, '   ': 68, '  ""': 4, ' """"': 4, '""""I': 2, '""In': 2, 'Inh': 1, 'ry`': 1, 'y`""': 1, '`""""': 2, '\n\n ': 3, '  d': 3, ' de': 4, 'def': 3, 'ef ': 3, 'f _': 2, '_in': 1, 'ini': 1, 'nit': 2, 'it_': 1, '_(s': 2, '(se': 5, 'sel': 11, 'elf': 11, 'lf,': 1, 'f, ': 1, ', w': 2, ' wi': 3, 'wid': 7, 'idt': 7, 'dth': 7, 'th,': 2, 'h, ': 2, ', h': 2, ' he': 3, 'hei': 7, 'eig': 7, 'igh': 7, 'ght': 7, 'ht)': 4, 't):': 1, 'Ini': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'ali': 3, 'liz': 1, 'ize': 1, 'ze ': 1, 'e r': 1, ' re': 3, 'rec': 1, 'le ': 1, 'e v': 1, ' va': 1, 'val': 3, 'alu': 1, 'lue': 1, 'ues': 1, 'es""': 1, 's""""': 1, '""\n ': 3, '  s': 5, ' se': 6, 'lf.': 8, 'f.i': 2, '.in': 2, 'int': 3, 'nte': 2, 'teg': 2, 'ege': 2, 'ger': 2, 'er_': 2, 'r_v': 2, '_va': 2, 'lid': 2, 'ida': 2, 'dat': 2, 'ato': 2, 'tor': 2, 'or(': 2, 'r(""': 2, '(""w': 1, '""wi': 1, 'th""': 1, 'h"",': 1, '"", ': 2, 'th)': 1, 'h)\n': 1, ')\n ': 3, 'f._': 6, '.__': 6, '__w': 3, '_wi': 3, 'th ': 2, 'h =': 1, '= w': 1, 'th\n': 1, 'h\n ': 1, '(""h': 1, '""he': 1, 'ht""': 1, 't"",': 1, 't)\n': 3, '__h': 3, '_he': 3, 'ht ': 1, 't =': 1, '= h': 1, 'ht\n': 1, 't\n\n': 1, 'f a': 1, ' ar': 2, 'are': 2, 'rea': 2, 'ea(': 1, 'a(s': 1, 'lf)': 2, 'f):': 2, '""Ca': 1, 'Cal': 1, 'alc': 1, 'lcu': 1, 'cul': 1, 'ula': 1, 'lat': 1, 'ate': 1, 'tes': 1, 'es ': 1, 'the': 4, 'he ': 4, 'e a': 1, 'ea ': 1, 'a o': 1, ' of': 2, 'of ': 2, 'f t': 2, 'e g': 1, ' ge': 1, '  r': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n (': 1, ' (s': 1, 'h *': 1, ' * ': 1, '* s': 1, ')\n\n': 1, '__s': 1, '_st': 1, 'str': 3, 'tr_': 1, 'r__': 1, '""""P': 1, '""Pr': 1, 'Pri': 1, 'rin': 3, 'nts': 1, 'e d': 1, 'des': 1, 'esc': 1, 'scr': 1, 'cri': 1, 'rip': 1, 'ipt': 1, 'pti': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n o': 1, 'e `': 1, ' `R': 1, '`Re': 1, 'le`': 1, 'e`""': 1, ' st': 2, 'tri': 2, 'ing': 2, 'ng ': 1, 'g =': 1, '= ""': 1, ' ""[': 1, '""[R': 1, '[Re': 1, 'le]': 1, 'e] ': 1, '] {': 1, ' {}': 1, '{}/': 1, '}/{': 1, '/{}': 1, '{}""': 1, '}"".': 1, '"".f': 1, '.fo': 1, 'for': 1, 'orm': 1, 'rma': 1, 'mat': 1, 'at(': 1, 't(s': 1, ', s': 1, 'n s': 1, 'ng\n': 1}"
Samuel,base.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, '""""""contains': 1, 'a': 5, 'class': 5, '`base`""""""': 1, 'import': 1, 'json': 5, 'base:': 1, '""""""': 9, 'defines': 1, 'the': 2, '`base`': 1, 'attributes:': 1, 'id': 4, '(int):': 2, 'instance': 3, 'attribute': 1, '__nb_objects': 1, '=': 14, '0': 2, 'def': 6, '__init__(self,': 1, 'id=none):': 1, 'initializes': 1, 'and': 2, 'object': 2, 'data': 4, 'args:': 1, 'integer': 1, 'passed': 1, 'on': 1, 'creation': 1, 'self.id': 3, 'if': 5, 'is': 4, 'not': 2, 'none:': 3, 'else:': 2, 'base.__nb_objects': 2, '+=': 1, '1': 1, '@staticmethod': 2, 'to_json_string(list_dictionaries):': 1, '""""""converts': 1, 'dictionaries': 2, 'to': 4, 'their': 1, 'string': 5, 'representation': 2, 'i.e': 1, 'list_dictionaries': 1, 'return': 7, '""[]""': 1, 'json.dumps(list_dictionaries)': 1, '@classmethod': 3, 'save_to_file(cls,': 1, 'list_objs):': 1, '""""""writes': 1, 'of': 3, '`list_objs`': 1, 'file': 2, 'list_objs': 1, '[]': 3, '[i.to_dictionary()': 1, 'for': 2, 'i': 1, 'in': 2, 'list_objs]': 1, 'cls.to_json_string(data)': 1, 'filename': 2, '""{}.json"".format(cls.__name__)': 2, 'with': 3, 'open(filename,': 2, 'encoding=""utf-8"",': 1, 'mode=""w"")': 1, 'as': 2, 'f:': 2, 'f.write(string)': 1, 'from_json_string(json_string):': 1, '""""""changes': 1, 'list': 3, 'returns:': 3, 'json_string': 1, 'none': 1, 'or': 1, 'json_string:': 1, 'json.loads(json_string)': 1, 'create(cls,': 1, '**dictionary):': 1, '""""""adds': 1, 'method': 1, 'returns': 1, 'an': 1, 'all': 1, 'attributes': 1, 'already': 1, 'set': 1, 'cls.__name__': 2, '==': 2, ""'rectangle':"": 1, 'dummy': 3, 'cls(1,': 1, '1)': 1, 'elif': 1, ""'square':"": 1, 'cls(1)': 1, 'dummy.update(**dictionary)': 1, 'load_from_file(cls):': 1, '""""""loads': 1, 'from': 1, 'uses': 1, 'it': 1, 'get': 1, 'instances': 3, 'associated': 1, 'instances:': 1, 'try:': 1, 'encoding=""utf-8"")': 1, 'f.read()': 1, 'except': 1, 'filenotfounderror:': 1, 'cls.from_json_string(string)': 1, '[cls.create(**instance)': 1, 'json]': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 7, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\n""': 1, '\n""""': 1, '""""""': 16, '""""C': 3, '""Co': 2, 'Con': 2, 'ont': 1, 'nta': 3, 'tai': 1, 'ain': 1, 'ins': 9, 'ns ': 2, 's a': 6, ' a ': 5, 'a c': 2, ' cl': 10, 'cla': 8, 'las': 8, 'ass': 10, 'ss ': 5, 's `': 2, ' `B': 2, '`Ba': 2, 'Bas': 5, 'ase': 5, 'se`': 2, 'e`""': 1, '`""""': 1, '""""\n': 10, '""\ni': 1, '\nim': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't j': 2, ' js': 8, 'jso': 16, 'son': 16, 'on\n': 2, 'n\n\n': 1, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 's B': 1, ' Ba': 3, 'se:': 3, 'e:\n': 6, ':\n ': 25, '\n  ': 75, '   ': 482, '  ""': 14, ' """"': 14, '""\n ': 8, '  D': 1, ' De': 1, 'Def': 1, 'efi': 1, 'fin': 1, 'ine': 1, 'nes': 1, 'es ': 10, 's t': 3, ' th': 3, 'the': 3, 'he ': 2, 'e c': 1, 'e`\n': 1, '`\n\n': 1, '\n\n ': 13, '  A': 2, ' At': 1, 'Att': 1, 'ttr': 3, 'tri': 18, 'rib': 3, 'ibu': 3, 'but': 3, 'ute': 3, 'tes': 3, 'es:': 2, 's:\n': 6, '  i': 8, ' id': 5, 'id ': 6, 'd (': 2, ' (i': 2, '(in': 2, 'int': 3, 'nt)': 2, 't):': 2, '): ': 2, ': i': 2, ' in': 10, 'nst': 8, 'sta': 10, 'tan': 9, 'anc': 8, 'nce': 8, 'ce ': 3, 'e a': 2, ' at': 2, 'att': 2, 'te\n': 1, 'e\n ': 2, '""\n\n': 2, '  _': 1, ' __': 2, '__n': 7, '_nb': 3, 'nb_': 3, 'b_o': 3, '_ob': 7, 'obj': 9, 'bje': 5, 'jec': 5, 'ect': 6, 'cts': 3, 'ts ': 3, 's =': 2, ' = ': 14, '= 0': 2, ' 0\n': 2, '0\n\n': 1, '  d': 11, ' de': 6, 'def': 6, 'ef ': 6, 'f _': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 2, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 1, 'sel': 4, 'elf': 4, 'lf,': 1, 'f, ': 1, ', i': 1, 'id=': 1, 'd=N': 1, '=No': 1, 'Non': 5, 'one': 5, 'ne)': 1, 'e):': 1, '):\n': 6, '  I': 1, ' In': 1, 'Ini': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'ali': 1, 'liz': 1, 'ize': 1, 'zes': 1, 's c': 1, ' an': 3, 'and': 2, 'nd ': 2, 'd o': 2, ' ob': 2, 'ct ': 2, 't d': 1, ' da': 4, 'dat': 6, 'ata': 5, 'ta\n': 1, 'a\n\n': 1, ' Ar': 1, 'Arg': 1, 'rgs': 1, 'gs:': 1, 'nte': 1, 'teg': 1, 'ege': 1, 'ger': 1, 'er ': 1, 'r p': 1, ' pa': 1, 'pas': 1, 'sse': 1, 'sed': 1, 'ed ': 1, ' on': 1, 'on ': 5, 'n o': 2, 't c': 1, ' cr': 2, 'cre': 3, 'rea': 5, 'eat': 3, 'ati': 5, 'tio': 11, 'ion': 11, 'n\n ': 1, '  s': 5, ' se': 4, 'lf.': 3, 'f.i': 3, '.id': 3, 'd =': 3, '0\n ': 1, ' if': 5, 'if ': 6, 'f i': 2, 'd i': 1, ' is': 4, 'is ': 4, 's n': 1, ' no': 2, 'not': 2, 'ot ': 2, 't N': 1, ' No': 4, 'ne:': 3, '= i': 1, 'id\n': 1, 'd\n ': 8, '  e': 4, ' el': 3, 'els': 2, 'lse': 2, '  B': 1, 'se.': 2, 'e._': 2, '.__': 6, 's +': 1, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 1, '1\n ': 1, '= B': 1, 'ts\n': 1, 's\n\n': 1, '  @': 5, ' @s': 2, '@st': 2, 'tat': 4, 'tic': 2, 'icm': 2, 'cme': 2, 'met': 6, 'eth': 6, 'hod': 6, 'od\n': 6, 'f t': 1, ' to': 5, 'to_': 4, 'o_j': 2, '_js': 4, 'on_': 8, 'n_s': 8, '_st': 8, 'str': 15, 'rin': 15, 'ing': 17, 'ng(': 4, 'g(l': 1, '(li': 2, 'lis': 10, 'ist': 10, 'st_': 7, 't_d': 3, '_di': 4, 'dic': 8, 'ict': 8, 'cti': 8, 'ona': 8, 'nar': 8, 'ari': 5, 'rie': 5, 'ies': 5, 'es)': 2, 's):': 3, 'onv': 1, 'nve': 1, 'ver': 1, 'ert': 1, 'rts': 1, 's d': 2, ' di': 2, 'to ': 4, 'o t': 1, 'hei': 1, 'eir': 1, 'ir ': 1, 'r s': 1, ' st': 5, 'ng\n': 1, 'g\n ': 1, '  r': 9, ' re': 10, 'rep': 2, 'epr': 2, 'pre': 2, 'res': 2, 'ese': 2, 'sen': 2, 'ent': 2, 'n i': 3, ' i.': 1, 'i.e': 1, '.e ': 1, 'e J': 2, ' JS': 2, 'JSO': 2, 'SON': 2, 'ON\n': 1, 'N\n ': 1, 'f l': 3, ' li': 7, 's i': 3, 's N': 3, 'ret': 8, 'etu': 11, 'tur': 11, 'urn': 11, 'rn ': 7, 'n ""': 1, ' ""[': 1, '""[]': 1, '[]""': 1, ']""\n': 1, 'n j': 3, 'on.': 2, 'n.d': 1, '.du': 1, 'dum': 5, 'ump': 1, 'mps': 1, 'ps(': 1, 's(l': 1, 's)\n': 1, ')\n\n': 5, ' @c': 3, '@cl': 3, 'ssm': 3, 'sme': 3, 'f s': 1, ' sa': 1, 'sav': 1, 'ave': 1, 've_': 1, 'e_t': 1, '_to': 1, 'o_f': 1, '_fi': 2, 'fil': 8, 'ile': 9, 'le(': 2, 'e(c': 3, '(cl': 5, 'cls': 12, 'ls,': 2, 's, ': 2, ', l': 1, 't_o': 4, 'bjs': 4, 'js)': 1, '""""W': 1, '""Wr': 1, 'Wri': 1, 'rit': 2, 'ite': 2, 'ON ': 1, 'N s': 1, 'ng ': 5, 'g r': 1, ' of': 3, 'of ': 3, 'f `': 1, ' `l': 1, '`li': 1, 'js`': 1, 's`\n': 1, '`\n ': 1, '  t': 2, 'o a': 2, 'a f': 2, ' fi': 4, 'le\n': 1, 'js ': 1, 'ta ': 3, 'a =': 2, '= [': 3, ' []': 3, '[]\n': 3, ']\n ': 4, ' [i': 1, '[i.': 1, 'i.t': 1, '.to': 2, 'o_d': 1, 'ary': 3, 'ry(': 1, 'y()': 1, '() ': 1, ') f': 2, ' fo': 2, 'for': 4, 'or ': 3, 'r i': 2, ' i ': 1, 'i i': 1, 'in ': 2, 'n l': 1, 'js]': 1, 's]\n': 1, 'g =': 2, '= c': 4, 'ls.': 7, 's.t': 1, 'g(d': 1, '(da': 1, 'ta)': 1, 'a)\n': 1, ')\n ': 6, '  f': 3, 'len': 4, 'ena': 4, 'nam': 8, 'ame': 8, 'me ': 2, 'e =': 2, '= ""': 2, ' ""{': 2, '""{}': 2, '{}.': 2, '}.j': 2, '.js': 2, 'on""': 2, 'n"".': 2, '"".f': 2, '.fo': 2, 'orm': 2, 'rma': 2, 'mat': 2, 'at(': 2, 't(c': 2, 's._': 4, '_na': 4, 'me_': 4, 'e__': 4, '__)': 2, '_)\n': 2, '  w': 2, ' wi': 3, 'wit': 3, 'ith': 3, 'th ': 3, 'h o': 2, ' op': 2, 'ope': 2, 'pen': 2, 'en(': 2, 'n(f': 2, '(fi': 2, 'me,': 2, 'e, ': 2, ', e': 2, ' en': 2, 'enc': 2, 'nco': 2, 'cod': 2, 'odi': 2, 'din': 2, 'ng=': 2, 'g=""': 2, '=""u': 2, '""ut': 2, 'utf': 2, 'tf-': 2, 'f-8': 2, '-8""': 2, '8"",': 1, '"", ': 1, ', m': 1, ' mo': 1, 'mod': 1, 'ode': 1, 'de=': 1, 'e=""': 1, '=""w': 1, '""w""': 1, 'w"")': 1, '"") ': 2, ') a': 2, ' as': 3, 'as ': 2, 's f': 2, ' f:': 2, 'f:\n': 2, ' f.': 2, 'f.w': 1, '.wr': 1, 'wri': 1, 'te(': 4, 'e(s': 1, '(st': 2, 'ng)': 4, 'g)\n': 3, 'f f': 1, ' fr': 2, 'fro': 4, 'rom': 4, 'om_': 3, 'm_j': 2, 'g(j': 1, '(js': 2, 'g):': 1, '""Ch': 1, 'Cha': 1, 'han': 1, 'ang': 2, 'nge': 1, 'ges': 1, 's j': 1, 'n s': 1, 'g t': 1, 'a l': 2, 'st\n': 1, 't\n ': 2, '  R': 3, ' Re': 3, 'Ret': 3, 'rns': 4, 'ns:': 3, '  l': 1, 'st ': 2, 't o': 2, 'f d': 1, 'es\n': 2, 's\n ': 1, 'f j': 1, 'g i': 1, 'ne ': 1, 'e o': 1, ' or': 1, 'r n': 1, 'ng:': 1, 'g:\n': 1, 'n [': 2, 'n.l': 1, '.lo': 1, 'loa': 2, 'oad': 3, 'ads': 2, 'ds(': 1, 's(j': 1, 'f c': 3, 'ate': 4, ', *': 1, ' **': 1, '**d': 2, '*di': 2, 'ry)': 2, 'y):': 1, '""""A': 1, '""Ad': 1, 'Add': 1, 'dds': 1, 'ds ': 2, 's m': 1, ' me': 1, 'an ': 1, 'e w': 1, 'h a': 1, ' al': 2, 'all': 1, 'll ': 1, 'l a': 1, 'alr': 1, 'lre': 1, 'ead': 2, 'ady': 1, 'dy ': 1, 'y s': 1, 'set': 1, 'et\n': 1, '__ ': 2, '_ =': 2, ' ==': 2, '== ': 2, ""= '"": 2, "" 'R"": 1, ""'Re"": 1, 'Rec': 1, 'cta': 1, 'ngl': 1, 'gle': 1, ""le'"": 1, ""e':"": 2, ""':\n"": 2, ' du': 4, 'umm': 4, 'mmy': 4, 'my ': 2, 'y =': 2, 'ls(': 2, 's(1': 2, '(1,': 1, '1, ': 1, ', 1': 1, ' 1)': 1, '1)\n': 2, 'eli': 1, 'lif': 1, "" 'S"": 1, ""'Sq"": 1, 'Squ': 1, 'qua': 1, 'uar': 1, 'are': 1, ""re'"": 1, '(1)': 1, 'my.': 1, 'y.u': 1, '.up': 1, 'upd': 1, 'pda': 1, 'e(*': 2, '(**': 2, 'y)\n': 1, 'n d': 1, 'my\n': 1, 'y\n\n': 1, ' lo': 1, 'ad_': 1, 'd_f': 1, '_fr': 1, 'm_f': 1, 'ls)': 1, '""""L': 1, '""Lo': 1, 'Loa': 1, 'om ': 1, 'm f': 1, 'le ': 1, 'd u': 1, ' us': 1, 'use': 1, 'ses': 1, ' it': 1, 'it ': 1, 't t': 1, 'o g': 1, ' ge': 1, 'get': 1, 'et ': 1, 't i': 1, 'ces': 4, 'sso': 1, 'soc': 1, 'oci': 1, 'cia': 1, 'iat': 1, 'ted': 1, 'ed\n': 1, '  a': 1, ' tr': 1, 'try': 1, 'ry:': 1, 'y:\n': 1, '8"")': 1, '= f': 1, 'f.r': 1, '.re': 1, 'ad(': 1, 'd()': 1, '()\n': 1, ' ex': 1, 'exc': 1, 'xce': 1, 'cep': 1, 'ept': 1, 'pt ': 1, 't F': 1, ' Fi': 1, 'Fil': 1, 'leN': 1, 'eNo': 1, 'Not': 1, 'otF': 1, 'tFo': 1, 'Fou': 1, 'oun': 1, 'und': 1, 'ndE': 1, 'dEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or:': 1, 'r:\n': 1, ']\n\n': 1, '  j': 1, 'n =': 1, 's.f': 1, '.fr': 1, 'g(s': 1, ' [c': 1, '[cl': 1, 's.c': 1, '.cr': 1, '**i': 1, '*in': 1, 'ce)': 1, 'e) ': 1, 'e i': 1, 'on]': 1, 'n]\n': 1}"
Samuel,rectangle.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#!/usr/bin/python3': 1, '""""""contains': 1, 'class': 4, '`rectangle`': 2, 'defination""""""': 1, 'from': 1, '.base': 1, 'import': 1, 'base': 1, 'rectangle(base):': 1, '""""""derives': 1, 'the': 20, 'that': 1, 'inherits': 1, 'form': 1, '`base`': 1, 'class""""""': 2, 'def': 15, '__init__(self,': 1, 'width,': 1, 'height,': 1, 'x=0,': 1, 'y=0,': 1, 'id=none):': 1, '""""""initializes': 1, 'instance': 4, 'attributes': 4, 'args:': 1, 'width': 4, '(int):': 5, 'of': 22, 'ractangle': 1, 'height': 4, 'rectangle': 6, 'x': 4, 'axis': 2, 'y': 4, 'id': 2, '""""""': 9, 'self.validate_input(width=width,': 1, 'height=height,': 1, 'x=x,': 1, 'y=y)': 1, 'self.__width': 3, '=': 11, 'self.__height': 3, 'self.__x': 3, 'self.__y': 3, 'super().__init__(id)': 1, '__str__(self):': 1, '""""""returns': 1, 'string': 2, 'representation': 1, 'instance""""""': 1, '""[{}]': 1, '({})': 1, '{}/{}': 1, '-': 1, '{}""': 1, 'if': 5, 'type(self)': 1, '==': 3, 'rectangle:': 1, 'return': 8, '""{}/{}"".format(string.format(self.__class__.__name__,': 1, 'self.id,': 3, 'self.__x,': 2, 'self.__y,': 2, 'self.__width),': 1, 'self.__height)': 2, 'string.format(self.__class__.__name__,': 1, 'self.__width)': 1, '@staticmethod': 1, 'validate_input(**kwargs):': 1, '""""""validates': 1, 'values': 2, 'before': 1, 'assigning': 1, 'them': 1, 'to': 2, 'for': 7, 'name,': 1, 'value': 19, 'in': 8, 'kwargs.items():': 2, 'name': 2, '""x""': 1, 'or': 1, '""y"":': 2, 'type(value)': 2, '!=': 2, 'int:': 2, 'raise': 4, 'typeerror(""{}': 2, 'must': 4, 'be': 4, 'an': 2, 'integer"".format(name))': 2, 'elif': 2, '<': 1, '0:': 3, 'valueerror(""{}': 2, '>=': 1, '0"".format(name))': 2, 'else:': 2, '<=': 1, '>': 2, '@property': 4, 'width(self):': 1, '""""""retrieves': 5, '`width`': 1, 'returns:': 6, 'height(self):': 1, '`height`': 1, 'x(self):': 1, '`x`': 1, 'y(self):': 1, '`y`': 1, '@width.setter': 1, 'width(self,': 1, 'value):': 4, '""""""sets': 4, '`width`""""""': 1, 'self.validate_input(width=value)': 1, '@height.setter': 1, 'height(self,': 1, '`height`""""""': 1, 'self.validate_input(height=value)': 1, '@x.setter': 1, 'x(self,': 1, '`x`""""""': 1, 'self.validate_input(x=value)': 1, '@y.setter': 1, 'y(self,': 1, '`y`""""""': 1, 'self.validate_input(y=value)': 1, 'area(self):': 1, '""""""calculates': 1, 'area': 2, 'calculated': 1, 'a': 1, '(self.__width': 1, '*': 1, 'display(self):': 1, '""""""prints': 1, 'stdout': 1, 'with': 1, 'character': 1, '`#`': 1, '[print()': 1, 'i': 3, 'range(self.__y)]': 1, 'range(self.__height):': 1, '[print(""': 1, '"",': 1, 'end="""")': 2, 'range(self.__x)]': 1, 'j': 1, 'range(self.__width):': 1, 'print(""#"",': 1, 'print()': 1, 'update(self,': 1, '*args,': 1, '**kwargs):': 1, '""""""updates': 1, 'args': 1, 'and': 1, 'len(args)': 1, 'keys': 1, '[""id"",': 1, '""width"",': 1, '""height"",': 1, '""x"",': 1, '""y""]': 1, 'i,': 1, 'v': 2, 'enumerate(args):': 1, 'setattr(self,': 2, 'keys[i],': 1, 'v)': 2, 'k,': 2, 'to_dictionary(self):': 1, 'all': 1, 'dictionary': 4, 'containing': 1, ""it's"": 1, '{': 1, '""id"":': 1, '""width"":': 1, 'self.width,': 1, '""height"":': 1, 'self.height,': 1, '""x"":': 1, 'self.x,': 1, 'self.y': 1, '}': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 2, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\n""': 1, '\n""""': 1, '""""""': 34, '""""C': 2, '""Co': 1, 'Con': 1, 'ont': 2, 'nta': 3, 'tai': 2, 'ain': 2, 'ins': 6, 'ns ': 2, 's c': 1, ' cl': 5, 'cla': 8, 'las': 8, 'ass': 9, 'ss ': 4, 's `': 1, ' `R': 2, '`Re': 2, 'Rec': 6, 'ect': 10, 'cta': 11, 'tan': 16, 'ang': 15, 'ngl': 11, 'gle': 11, 'le`': 2, 'e` ': 3, '` d': 1, ' de': 16, 'def': 16, 'efi': 1, 'fin': 1, 'ina': 1, 'nat': 1, 'ati': 3, 'tio': 7, 'ion': 7, 'on""': 1, 'n""""': 1, '""""\n': 17, '""\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm .': 1, ' .b': 1, '.ba': 1, 'bas': 1, 'ase': 4, 'se ': 5, 'e i': 4, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't B': 1, ' Ba': 1, 'Bas': 3, 'se\n': 1, 'e\n\n': 5, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 's R': 1, ' Re': 10, 'le(': 1, 'e(B': 1, '(Ba': 1, 'se)': 1, 'e):': 6, '):\n': 21, ':\n ': 37, '\n  ': 127, '   ': 987, '  ""': 30, ' """"': 25, '""""D': 1, '""De': 1, 'Der': 1, 'eri': 2, 'riv': 1, 'ive': 1, 'ves': 6, 'es ': 13, 's t': 14, ' th': 22, 'the': 21, 'he ': 19, 'e c': 2, 'tha': 1, 'hat': 1, 'at ': 1, 't i': 1, ' in': 18, 'inh': 1, 'nhe': 1, 'her': 1, 'rit': 1, 'its': 1, 'ts ': 6, 's f': 1, ' fo': 8, 'for': 16, 'orm': 8, 'rm ': 1, 'm `': 1, ' `B': 1, '`Ba': 1, 'se`': 1, '` c': 1, 'ss""': 2, 's""""': 2, '""\n\n': 1, '\n\n ': 15, '  d': 17, 'ef ': 15, 'f _': 2, ' __': 2, '__i': 2, '_in': 8, 'ini': 3, 'nit': 3, 'it_': 2, 't__': 2, '__(': 3, '_(s': 2, '(se': 24, 'sel': 56, 'elf': 56, 'lf,': 8, 'f, ': 8, ', w': 1, ' wi': 8, 'wid': 23, 'idt': 23, 'dth': 23, 'th,': 3, 'h, ': 2, ', h': 2, ' he': 8, 'hei': 22, 'eig': 22, 'igh': 22, 'ght': 22, 'ht,': 3, 't, ': 2, ', x': 2, ' x=': 2, 'x=0': 1, '=0,': 2, '0, ': 2, ', y': 2, ' y=': 2, 'y=0': 1, ', i': 1, ' id': 3, 'id=': 1, 'd=N': 1, '=No': 1, 'Non': 1, 'one': 1, 'ne)': 1, '""""I': 1, '""In': 1, 'Ini': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'ali': 8, 'liz': 1, 'ize': 1, 'zes': 1, 's i': 2, 'nst': 5, 'sta': 6, 'anc': 5, 'nce': 5, 'ce ': 3, 'e a': 7, ' at': 4, 'att': 6, 'ttr': 6, 'tri': 13, 'rib': 4, 'ibu': 4, 'but': 4, 'ute': 4, 'tes': 7, 'es\n': 3, 's\n ': 3, '  A': 1, ' Ar': 1, 'Arg': 1, 'rgs': 9, 'gs:': 1, 's:\n': 7, '  w': 1, 'th ': 6, 'h (': 1, ' (i': 5, '(in': 5, 'int': 14, 'nt)': 5, 't):': 6, '): ': 5, ': w': 1, 'h o': 1, ' of': 22, 'of ': 22, 'f t': 9, 'e r': 3, ' ra': 9, 'rac': 2, 'act': 2, 'le\n': 6, 'e\n ': 8, '  h': 1, 'ht ': 4, 't (': 1, ': h': 1, 't o': 1, 'f r': 2, ' re': 13, 'rec': 4, '  x': 1, ' x ': 2, 'x (': 1, ': x': 1, 'x a': 1, ' ax': 2, 'axi': 2, 'xis': 2, 'is ': 2, 's o': 4, '  y': 1, ' y ': 2, 'y (': 1, ': y': 1, 'y a': 1, '  i': 7, 'id ': 2, 'd (': 1, ': i': 1, 'd o': 1, '""\n ': 16, '  s': 20, ' se': 34, 'lf.': 39, 'f.v': 5, '.va': 5, 'val': 37, 'lid': 7, 'ida': 7, 'dat': 9, 'ate': 12, 'te_': 6, 'e_i': 6, 'inp': 6, 'npu': 6, 'put': 6, 'ut(': 6, 't(w': 2, '(wi': 2, 'th=': 2, 'h=w': 1, '=wi': 1, 'ht=': 2, 't=h': 1, '=he': 1, 'x=x': 1, '=x,': 1, 'x, ': 2, 'y=y': 1, '=y)': 1, 'y)\n': 1, ')\n ': 11, 'f._': 27, '.__': 30, '__w': 7, '_wi': 7, 'h =': 2, ' = ': 11, '= w': 1, 'th\n': 3, 'h\n ': 2, '__h': 6, '_he': 6, 't =': 2, '= h': 1, 'ht\n': 3, 't\n ': 2, '__x': 6, '_x ': 2, 'x =': 2, '= x': 1, ' x\n': 2, 'x\n ': 2, '__y': 6, '_y ': 2, 'y =': 3, '= y': 1, ' y\n': 2, 'y\n ': 8, ' su': 1, 'sup': 1, 'upe': 1, 'per': 5, 'er(': 1, 'r()': 1, '().': 1, ')._': 1, '_(i': 1, '(id': 1, 'id)': 1, 'd)\n': 1, ')\n\n': 6, '__s': 1, '_st': 1, 'str': 5, 'tr_': 1, 'r__': 1, 'lf)': 9, 'f):': 8, '""""R': 6, '""Re': 6, 'Ret': 12, 'etu': 15, 'tur': 15, 'urn': 15, 'rns': 7, 's s': 1, ' st': 4, 'rin': 9, 'ing': 6, 'ng ': 4, 'g r': 1, 'rep': 1, 'epr': 1, 'pre': 1, 'res': 1, 'ese': 1, 'sen': 1, 'ent': 1, 'tat': 4, 'on ': 1, 'n o': 1, 'ce""': 1, 'e""""': 1, 'g =': 1, '= ""': 3, ' ""[': 1, '""[{': 1, '[{}': 1, '{}]': 1, '}] ': 1, '] (': 1, ' ({': 1, '({}': 1, '{})': 1, '}) ': 1, ') {': 1, ' {}': 2, '{}/': 2, '}/{': 2, '/{}': 2, '{} ': 5, '} -': 1, ' - ': 1, '- {': 1, '{}""': 2, '}""\n': 1, ' if': 5, 'if ': 7, ' ty': 3, 'typ': 3, 'ype': 5, 'pe(': 3, 'e(s': 6, 'f) ': 1, ') =': 1, ' ==': 3, '== ': 3, '= R': 1, 'le:': 1, 'e:\n': 3, '  r': 12, 'ret': 8, 'rn ': 8, 'n ""': 1, ' ""{': 1, '""{}': 5, '}"".': 1, '"".f': 5, '.fo': 7, 'rma': 7, 'mat': 7, 'at(': 7, 't(s': 5, '(st': 1, 'ng.': 2, 'g.f': 2, '__c': 2, '_cl': 2, 'ss_': 2, 's__': 2, '__.': 2, '_._': 2, '__n': 2, '_na': 2, 'nam': 9, 'ame': 9, 'me_': 2, 'e__': 2, '__,': 2, '_,\n': 1, ',\n ': 7, 'f.i': 3, '.id': 3, 'id,': 3, 'd, ': 2, ', s': 6, '_x,': 2, '_y,': 2, 'y,\n': 1, 'th)': 3, 'h),': 1, '), ': 1, 'ht)': 3, 't)\n': 2, 'n s': 6, '_, ': 1, 'x,\n': 2, 'y, ': 1, 'h)\n': 1, '  @': 9, ' @s': 1, '@st': 1, 'tic': 1, 'icm': 1, 'cme': 1, 'met': 1, 'eth': 1, 'hod': 1, 'od\n': 1, 'd\n ': 1, 'f v': 3, ' va': 26, 't(*': 1, '(**': 1, '**k': 2, '*kw': 2, 'kwa': 4, 'war': 4, 'arg': 8, 'gs)': 4, 's):': 3, '""""V': 1, '""Va': 1, 'Val': 3, 'e v': 10, 'alu': 33, 'lue': 33, 'ues': 2, 's b': 1, ' be': 5, 'bef': 1, 'efo': 1, 'ore': 1, 're ': 1, ' as': 1, 'ssi': 1, 'sig': 1, 'ign': 1, 'gni': 1, 'nin': 2, 'g t': 1, 'hem': 1, 'em ': 1, 'm t': 1, ' to': 3, 'to\n': 1, 'o\n ': 1, '  f': 5, 'or ': 8, 'r n': 2, ' na': 3, 'me,': 1, 'e, ': 1, ', v': 9, 'ue ': 15, 'in ': 8, 'n k': 2, ' kw': 2, 'gs.': 2, 's.i': 2, '.it': 2, 'ite': 2, 'tem': 2, 'ems': 2, 'ms(': 2, 's()': 2, '():': 2, 'f n': 1, 'me ': 2, 'e =': 2, ' ""x': 3, '""x""': 3, 'x"" ': 1, '"" o': 1, ' or': 1, ' ""y': 3, '""y""': 3, 'y"":': 2, '"":\n': 1, 'e(v': 2, '(va': 2, 'ue)': 10, 'e) ': 2, ') !': 2, ' !=': 2, '!= ': 2, '= i': 2, 'nt:': 2, 't:\n': 2, 'rai': 4, 'ais': 4, 'ise': 4, 'e T': 2, ' Ty': 2, 'Typ': 2, 'peE': 2, 'eEr': 4, 'Err': 4, 'rro': 4, 'ror': 4, 'or(': 4, 'r(""': 4, '(""{': 4, '} m': 4, ' mu': 4, 'mus': 4, 'ust': 4, 'st ': 4, 't b': 4, 'be ': 4, ' an': 3, 'an ': 2, 'n i': 2, 'nte': 2, 'teg': 2, 'ege': 2, 'ger': 2, 'er""': 2, 'r"".': 2, 't(n': 4, '(na': 4, 'me)': 4, 'e))': 4, '))\n': 4, '  e': 4, ' el': 4, 'eli': 2, 'lif': 2, 'e <': 2, ' < ': 1, '< 0': 1, ' 0:': 3, '0:\n': 3, 'e V': 2, ' Va': 2, 'ueE': 2, 'e >': 2, ' >=': 1, '>= ': 1, '= 0': 2, ' 0""': 2, '0"".': 2, 'els': 2, 'lse': 2, 'se:': 2, ' <=': 1, '<= ': 1, ' > ': 2, '> 0': 2, ' @p': 4, '@pr': 4, 'pro': 4, 'rop': 4, 'ope': 4, 'ert': 4, 'rty': 4, 'ty\n': 4, 'f w': 3, 'th(': 2, 'h(s': 2, 'etr': 5, 'rie': 5, 'iev': 5, 'eve': 5, 'e o': 12, 'f `': 9, ' `w': 2, '`wi': 2, 'th`': 2, 'h`\n': 1, '`\n ': 5, '  R': 6, 'ns:': 6, '  v': 4, 'h\n\n': 1, 'f h': 3, 'ht(': 2, ' `h': 2, '`he': 2, 'ht`': 2, 't`\n': 1, 't\n\n': 1, 'f x': 3, ' x(': 2, 'x(s': 2, ' `x': 2, '`x`': 2, 'x`\n': 1, '_x\n': 1, 'x\n\n': 1, 'f y': 3, ' y(': 2, 'y(s': 4, ' `y': 2, '`y`': 2, 'y`\n': 1, '_y\n': 1, 'y\n\n': 1, ' @w': 1, '@wi': 1, 'th.': 1, 'h.s': 1, '.se': 4, 'set': 10, 'ett': 4, 'tte': 4, 'ter': 5, 'er\n': 4, 'r\n ': 4, '""""s': 4, '""se': 4, 'ets': 4, 'h`""': 1, '`""""': 4, 'h=v': 1, '=va': 4, 'e)\n': 4, '= v': 4, 'ue\n': 4, ' @h': 1, '@he': 1, 'ht.': 1, 't.s': 1, 't`""': 1, 't(h': 1, '(he': 1, 't=v': 1, ' @x': 1, '@x.': 1, 'x.s': 1, 'x`""': 1, 't(x': 1, '(x=': 1, 'x=v': 1, ' @y': 1, '@y.': 1, 'y.s': 1, 'y`""': 1, 't(y': 1, '(y=': 1, 'y=v': 1, 'f a': 3, ' ar': 4, 'are': 3, 'rea': 3, 'ea(': 1, 'a(s': 1, '""Ca': 1, 'Cal': 2, 'alc': 2, 'lcu': 2, 'cul': 2, 'ula': 2, 'lat': 2, 'ea ': 2, 'a o': 2, '` i': 1, 'ce\n': 1, '  C': 1, ' Ca': 1, 'ted': 1, 'ed ': 1, 'd a': 1, ' a ': 1, 'a R': 1, 'n (': 1, ' (s': 1, 'h *': 1, ' * ': 1, '* s': 1, 'f d': 1, ' di': 5, 'dis': 1, 'isp': 1, 'spl': 1, 'pla': 1, 'lay': 1, 'ay(': 1, '""""P': 1, '""Pr': 1, 'Pri': 1, 'nts': 1, 'std': 1, 'tdo': 1, 'dou': 1, 'out': 1, 'ut ': 1, 't t': 1, 'e R': 1, 'le ': 1, 'e w': 1, 'wit': 1, 'ith': 1, 'h t': 1, 'he\n': 1, '  c': 1, ' ch': 1, 'cha': 1, 'har': 1, 'ara': 1, 'cte': 1, 'er ': 1, 'r `': 1, ' `#': 1, '`#`': 1, '#`\n': 1, '  [': 2, ' [p': 2, '[pr': 2, 'pri': 4, 'nt(': 4, 't()': 2, '() ': 1, ') f': 2, 'r i': 4, ' i ': 3, 'i i': 3, 'n r': 4, 'ran': 4, 'nge': 4, 'ge(': 4, '_y)': 1, 'y)]': 1, ')]\n': 2, ']\n ': 3, 't(""': 2, '("" ': 1, '"" ""': 1, ' "",': 1, '"", ': 6, ', e': 2, ' en': 3, 'end': 2, 'nd=': 2, 'd=""': 2, '=""""': 2, '"""")': 2, '"") ': 1, '_x)': 1, 'x)]': 1, 'r j': 1, ' j ': 1, 'j i': 1, 'h):': 1, '  p': 2, ' pr': 2, '(""#': 1, '""#""': 1, '#"",': 1, '"")\n': 1, '()\n': 1, 'f u': 1, ' up': 1, 'upd': 1, 'pda': 2, 'te(': 2, ', *': 2, ' *a': 1, '*ar': 1, 'gs,': 1, 's, ': 1, ' **': 1, '""""U': 1, '""Up': 1, 'Upd': 1, 'gs ': 1, 's a': 3, 'and': 1, 'nd ': 1, 'd l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(a': 1, '(ar': 2, 's) ': 1, ') >': 1, '  k': 1, ' ke': 2, 'key': 2, 'eys': 2, 'ys ': 1, 's =': 1, '= [': 1, ' [""': 1, '[""i': 1, '""id': 2, 'id""': 2, 'd"",': 1, ', ""': 4, ' ""w': 2, '""wi': 2, 'th""': 2, 'h"",': 1, ' ""h': 2, '""he': 2, 'ht""': 2, 't"",': 1, 'x"",': 1, 'y""]': 1, '""]\n': 1, ' i,': 1, 'i, ': 1, ' v ': 2, 'v i': 2, 'n e': 1, 'enu': 1, 'num': 1, 'ume': 1, 'mer': 1, 'era': 1, 'rat': 1, 'e(a': 1, 'eta': 2, 'tr(': 2, 'r(s': 2, ', k': 2, 'ys[': 1, 's[i': 1, '[i]': 1, 'i],': 1, '], ': 1, ' v)': 2, 'v)\n': 2, 'r k': 1, ' k,': 2, 'k, ': 2, 'to_': 1, 'o_d': 1, '_di': 1, 'dic': 5, 'ict': 5, 'cti': 5, 'ona': 5, 'nar': 5, 'ary': 5, 'ry(': 1, ' al': 1, 'all': 1, 'll ': 1, 'l t': 1, 'f c': 1, 'to ': 1, 'o d': 1, 'ry\n': 2, 'ry ': 2, 'y c': 1, ' co': 1, 'con': 1, 'g i': 1, ' it': 1, ""it'"": 1, ""t's"": 1, ""'s "": 1, '= {': 1, ' {\n': 1, '{\n ': 1, ' ""i': 1, 'd"":': 1, '"": ': 5, ': s': 5, 'd,\n': 1, 'h"":': 1, 'f.w': 1, '.wi': 1, 'h,\n': 1, 't"":': 1, 'f.h': 1, '.he': 1, 't,\n': 1, 'x"":': 1, 'f.x': 1, '.x,': 1, 'f.y': 1, '.y\n': 1, '  }': 1, ' }\n': 1, '}\n ': 1, 'n d': 1}"
Samuel,square.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/usr/bin/python3': 1, '""""""contains': 1, '`square`': 1, 'class': 3, 'defination""""""': 1, 'from': 2, '.rectangle': 1, 'import': 1, 'rectangle': 5, 'square(rectangle):': 1, '""""""class': 1, 'inherits': 1, '`rectangle`': 1, 'class""""""': 2, 'def': 5, '__init__(self,': 1, 'size,': 2, 'x=0,': 1, 'y=0,': 1, 'id=none):': 1, '""""""initializes': 1, 'instance': 1, 'attributes': 3, 'args:': 1, 'size': 3, '(int):': 4, 'of': 9, 'x': 2, 'axis': 2, 'y': 2, 'the': 7, 'id': 2, '""""""': 3, 'super().__init__(size,': 1, 'x,': 1, 'y,': 1, 'id)': 1, '@property': 1, 'size(self):': 1, '""""""retrieves': 2, 'value': 4, '`size`': 1, 'returns:': 2, 'return': 2, 'self.width': 2, '@size.setter': 1, 'size(self,': 1, 'value):': 1, '""""""sets': 1, 'dimensions': 1, '`square`""""""': 1, '=': 4, 'self.height': 1, 'update(self,': 1, '*args,': 1, '**kwargs):': 1, '""""""updates': 1, 'values': 1, 'if': 1, 'args': 1, 'and': 1, 'len(args)': 1, '>': 1, '0:': 1, 'keys': 1, '[""id"",': 1, '""size"",': 1, '""x"",': 1, '""y""]': 1, 'for': 2, 'i,': 1, 'v': 2, 'in': 2, 'enumerate(args):': 1, 'setattr(self,': 2, 'keys[i],': 1, 'v)': 2, 'else:': 1, 'k,': 2, 'kwargs.items():': 1, 'to_dictionary(self):': 1, 'all': 1, 'to': 1, 'dictionary': 4, 'containing': 1, ""it's"": 1, '{': 1, '""id"":': 1, 'self.id,': 1, '""size"":': 1, 'self.size,': 1, '""x"":': 1, 'self.x,': 1, '""y"":': 1, 'self.y': 1, '}': 1}","{'#!/': 1, '!/u': 1, '/us': 1, 'usr': 1, 'sr/': 1, 'r/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\n""': 1, '\n""""': 1, '""""""': 14, '""""C': 2, '""Co': 1, 'Con': 1, 'ont': 2, 'nta': 2, 'tai': 2, 'ain': 2, 'ins': 2, 'ns ': 2, 's `': 1, ' `S': 2, '`Sq': 2, 'Squ': 3, 'qua': 3, 'uar': 3, 'are': 3, 're`': 2, 'e` ': 2, '` c': 2, ' cl': 4, 'cla': 5, 'las': 6, 'ass': 6, 'ss ': 4, 's d': 1, ' de': 6, 'def': 6, 'efi': 1, 'fin': 1, 'ina': 1, 'nat': 1, 'ati': 1, 'tio': 6, 'ion': 7, 'on""': 1, 'n""""': 1, '""""\n': 7, '""\nf': 1, '\nfr': 1, 'fro': 2, 'rom': 2, 'om ': 2, 'm .': 1, ' .r': 1, '.re': 1, 'rec': 5, 'ect': 8, 'cta': 8, 'tan': 9, 'ang': 8, 'ngl': 8, 'gle': 8, 'le ': 1, 'e i': 1, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't R': 1, ' Re': 3, 'Rec': 3, 'le\n': 5, 'e\n\n': 2, '\n\n\n': 1, '\n\nc': 1, '\ncl': 1, 's S': 1, ' Sq': 1, 're(': 1, 'e(R': 1, '(Re': 1, 'le)': 1, 'e):': 3, '):\n': 8, ':\n ': 13, '\n  ': 43, '   ': 310, '  ""': 13, ' """"': 9, '""Cl': 1, 'Cla': 1, 's i': 2, ' in': 4, 'inh': 1, 'nhe': 1, 'her': 1, 'eri': 1, 'rit': 1, 'its': 1, 'ts ': 2, 's f': 1, ' fr': 1, 'm `': 1, ' `R': 1, '`Re': 1, 'le`': 1, 'ss""': 2, 's""""': 2, '""\n\n': 1, '\n\n ': 5, '  d': 7, 'ef ': 5, 'f _': 1, ' __': 1, '__i': 2, '_in': 2, 'ini': 3, 'nit': 3, 'it_': 2, 't__': 2, '__(': 2, '_(s': 2, '(se': 7, 'sel': 14, 'elf': 14, 'lf,': 5, 'f, ': 5, ', s': 2, ' si': 7, 'siz': 13, 'ize': 14, 'ze,': 4, 'e, ': 3, ', x': 2, ' x=': 1, 'x=0': 1, '=0,': 2, '0, ': 2, ', y': 2, ' y=': 1, 'y=0': 1, ', i': 2, ' id': 4, 'id=': 1, 'd=N': 1, '=No': 1, 'Non': 1, 'one': 1, 'ne)': 1, '""""I': 1, '""In': 1, 'Ini': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'ali': 1, 'liz': 1, 'zes': 1, 'es ': 6, 'nst': 1, 'sta': 1, 'anc': 1, 'nce': 1, 'ce ': 1, 'e a': 2, ' at': 3, 'att': 5, 'ttr': 5, 'tri': 5, 'rib': 3, 'ibu': 3, 'but': 3, 'ute': 3, 'tes': 4, 'es\n': 2, 's\n ': 2, '  A': 1, ' Ar': 1, 'Arg': 1, 'rgs': 7, 'gs:': 1, 's:\n': 3, '  s': 6, 'ze ': 2, 'e (': 1, ' (i': 4, '(in': 4, 'int': 4, 'nt)': 4, 't):': 4, '): ': 4, ': s': 5, 'e o': 3, ' of': 9, 'of ': 9, 'f r': 2, ' re': 6, 'e\n ': 6, '  x': 1, ' x ': 2, 'x (': 1, ': x': 1, 'x a': 1, ' ax': 2, 'axi': 2, 'xis': 2, 'is ': 2, 's o': 5, '  y': 1, ' y ': 2, 'y (': 1, ': y': 1, 'y a': 1, 'f t': 4, ' th': 7, 'the': 7, 'he ': 7, 'e r': 2, '  i': 2, 'id ': 2, 'd (': 1, ': i': 1, 'd o': 1, '""\n ': 5, ' su': 1, 'sup': 1, 'upe': 1, 'per': 2, 'er(': 1, 'r()': 1, '().': 1, ')._': 1, '.__': 1, '(si': 1, ' x,': 1, 'x, ': 1, ' y,': 1, 'y, ': 1, 'id)': 1, 'd)\n': 1, ')\n\n': 2, '  @': 2, ' @p': 1, '@pr': 1, 'pro': 1, 'rop': 1, 'ope': 1, 'ert': 1, 'rty': 1, 'ty\n': 1, 'y\n ': 3, 'f s': 3, 'ze(': 2, 'e(s': 3, 'lf)': 2, 'f):': 2, '""""R': 2, '""Re': 2, 'Ret': 4, 'etr': 2, 'rie': 2, 'iev': 2, 'eve': 2, 'ves': 2, 's t': 4, 'e v': 2, ' va': 6, 'val': 6, 'alu': 6, 'lue': 6, 'ue ': 2, 'f `': 2, ' `s': 1, '`si': 1, 'ze`': 1, 'e`\n': 1, '`\n ': 1, '  R': 2, 'etu': 4, 'tur': 4, 'urn': 4, 'rns': 2, 'ns:': 2, '  v': 1, 'ze\n': 1, '  r': 2, 'ret': 2, 'rn ': 2, 'n s': 1, ' se': 9, 'lf.': 7, 'f.w': 2, '.wi': 2, 'wid': 2, 'idt': 2, 'dth': 2, 'th\n': 1, 'h\n\n': 1, ' @s': 1, '@si': 1, 'ze.': 1, 'e.s': 1, '.se': 1, 'set': 4, 'ett': 1, 'tte': 1, 'ter': 1, 'er\n': 1, 'r\n ': 1, ', v': 5, 'ue)': 1, '""""s': 1, '""se': 1, 'ets': 1, 'e d': 1, ' di': 5, 'dim': 1, 'ime': 1, 'men': 1, 'ens': 1, 'nsi': 1, 'sio': 1, 'ons': 1, 'e`""': 1, '`""""': 1, 'th ': 1, 'h =': 1, ' = ': 4, '= v': 2, 'ue\n': 2, 'f.h': 1, '.he': 1, 'hei': 1, 'eig': 1, 'igh': 1, 'ght': 1, 'ht ': 1, 't =': 1, 'f u': 1, ' up': 1, 'upd': 1, 'pda': 2, 'dat': 2, 'ate': 3, 'te(': 2, ', *': 2, ' *a': 1, '*ar': 1, 'arg': 6, 'gs,': 1, 's, ': 1, ' **': 1, '**k': 1, '*kw': 1, 'kwa': 2, 'war': 2, 'gs)': 3, 's):': 2, '""""U': 1, '""Up': 1, 'Upd': 1, 'ues': 1, 'e c': 1, ' if': 1, 'if ': 1, 'f a': 1, ' ar': 1, 'gs ': 1, 's a': 3, ' an': 1, 'and': 1, 'nd ': 1, 'd l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(a': 1, '(ar': 2, 's) ': 1, ') >': 1, ' > ': 1, '> 0': 1, ' 0:': 1, '0:\n': 1, '  k': 1, ' ke': 2, 'key': 2, 'eys': 2, 'ys ': 1, 's =': 1, '= [': 1, ' [""': 1, '[""i': 1, '""id': 2, 'id""': 2, 'd"",': 1, '"", ': 3, ', ""': 3, ' ""s': 2, '""si': 2, 'ze""': 2, 'e"",': 1, ' ""x': 2, '""x""': 2, 'x"",': 1, ' ""y': 2, '""y""': 2, 'y""]': 1, '""]\n': 1, ']\n ': 1, '  f': 2, ' fo': 2, 'for': 2, 'or ': 2, 'r i': 1, ' i,': 1, 'i, ': 1, ' v ': 2, 'v i': 2, 'in ': 2, 'n e': 1, ' en': 1, 'enu': 1, 'num': 1, 'ume': 1, 'mer': 1, 'era': 1, 'rat': 1, 'e(a': 1, 'eta': 2, 'tat': 2, 'tr(': 2, 'r(s': 2, ', k': 2, 'ys[': 1, 's[i': 1, '[i]': 1, 'i],': 1, '], ': 1, ' v)': 2, 'v)\n': 2, ')\n ': 1, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, 'r k': 1, ' k,': 2, 'k, ': 2, 'n k': 1, ' kw': 1, 'gs.': 1, 's.i': 1, '.it': 1, 'ite': 1, 'tem': 1, 'ems': 1, 'ms(': 1, 's()': 1, '():': 1, ' to': 2, 'to_': 1, 'o_d': 1, '_di': 1, 'dic': 5, 'ict': 5, 'cti': 5, 'ona': 5, 'nar': 5, 'ary': 5, 'ry(': 1, 'y(s': 1, ' al': 1, 'all': 1, 'll ': 1, 'l t': 1, 'f c': 1, 'to ': 1, 'o d': 1, 'ry\n': 2, 'ry ': 2, 'y c': 1, ' co': 1, 'con': 1, 'nin': 1, 'ing': 1, 'ng ': 1, 'g i': 1, ' it': 1, ""it'"": 1, ""t's"": 1, ""'s "": 1, 'y =': 1, '= {': 1, ' {\n': 1, '{\n ': 1, ' ""i': 1, 'd"":': 1, '"": ': 4, 'f.i': 1, '.id': 1, 'id,': 1, 'd,\n': 1, ',\n ': 3, 'e"":': 1, 'f.s': 1, '.si': 1, 'e,\n': 1, 'x"":': 1, 'f.x': 1, '.x,': 1, 'x,\n': 1, 'y"":': 1, 'f.y': 1, '.y\n': 1, '  }': 1, ' }\n': 1, '}\n ': 1, 'n d': 1}"
Sebastian Castañeda,ar_cube_demo_1.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 6, 'logging': 1, 'cv2': 1, 'numpy': 1, 'as': 1, 'np': 1, 'from': 3, 'ar_demo.pose_estimator': 1, 'poseestimator': 1, 'ar_demo.utils': 1, '(roiselector,': 1, 'color_black,': 1, 'color_green,': 1, 'color_orange,': 7, 'color_blue,': 1, 'color_red,': 1, 'color_white,': 1, 'color_yellow)': 1, 'ar_demo.primitives': 1, 'cube': 1, 'logger': 1, '=': 28, 'logging.getlogger(__name__)': 1, 'win_name': 1, ""'augmented"": 1, 'reality': 1, '-': 1, 'demo': 1, ""1'"": 1, 'class': 1, 'tracker(object):': 1, 'def': 4, '__init__(self):': 1, 'self.cap': 1, 'cv2.videocapture(0)': 1, 'self.frame': 3, 'none': 2, 'self.paused': 4, 'false': 1, 'self.tracker': 1, 'poseestimator()': 1, 'cv2.namedwindow(win_name)': 1, 'self.roi_selector': 1, 'roiselector(win_name,': 1, 'self.on_rect)': 1, 'self.primitive': 1, 'cube()': 1, 'self.color_lines': 1, 'color_black': 1, 'on_rect(self,': 1, 'rect):': 1, 'self.tracker.add_target(self.frame,': 1, 'rect)': 1, 'start(self):': 1, 'while': 1, 'true:': 1, 'is_running': 2, 'not': 3, 'and': 1, 'self.roi_selector.selected_rect': 1, 'is': 2, 'if': 7, 'or': 1, 'none:': 1, 'ret,': 2, 'frame': 2, 'self.cap.read()': 1, 'scaling_factor': 1, '0.5': 1, 'cv2.resize(frame,': 1, 'none,': 1, 'fx=scaling_factor,': 1, 'fy=scaling_factor,': 1, 'interpolation=cv2.inter_area)': 1, 'ret:': 1, 'break': 2, 'frame.copy()': 1, 'img': 1, 'self.frame.copy()': 1, 'is_running:': 1, 'tracked': 1, 'self.tracker.track_target(self.frame)': 1, 'for': 3, 'item': 1, 'in': 3, 'tracked:': 1, '#': 3, 'cv2.polylines(img,': 1, '[np.int32(item.quad)],': 1, 'true,': 1, 'self.color_lines,': 2, '2)': 4, '(x,': 2, 'y)': 1, 'np.int32(item.points_cur):': 1, 'cv2.circle(img,': 1, 'y),': 1, '2,': 1, 'self.color_lines)': 1, 'self.overlay_graphics(img,': 1, 'item)': 1, 'self.roi_selector.draw_rect(img)': 1, 'cv2.imshow(win_name,': 1, 'img)': 1, 'ch': 4, 'cv2.waitkey(1)': 1, '==': 4, ""ord('"": 1, ""'):"": 1, ""ord('c'):"": 1, 'self.tracker.clear_targets()': 1, '27:': 1, 'overlay_graphics(self,': 1, 'img,': 1, 'tracked):': 1, 'x_start,': 1, 'y_start,': 4, 'x_end,': 1, 'y_end': 1, 'tracked.target.rect': 1, 'quad_3d': 1, 'np.float32([[x_start,': 1, '0],': 3, '[x_end,': 2, 'y_end,': 2, '[x_start,': 1, '0]])': 1, 'h,': 1, 'w': 1, 'img.shape[:2]': 1, 'k': 1, 'np.float64([[w,': 1, '0,': 2, '0.5*(w-1)],': 1, '[0,': 2, 'w,': 1, '0.5*(h-1)],': 1, '1.0]])': 1, 'dist_coef': 1, 'np.zeros(4)': 1, 'rvec,': 2, 'tvec': 1, 'cv2.solvepnp(quad_3d,': 1, 'tracked.quad,': 1, 'k,': 2, 'dist_coef)': 1, 'verts': 2, 'self.primitive.get_vertices()': 1, '*': 1, '[(x_end-x_start),': 1, '(y_end-y_start),': 1, '-(x_end-x_start)]': 1, '+': 1, '(x_start,': 2, '0)': 1, 'cv2.projectpoints(verts,': 1, 'tvec,': 1, 'dist_coef)[0].reshape(-1,': 1, 'verts_floor': 1, 'np.int32(verts).reshape(-1,': 1, 'cv2.drawcontours(img,': 6, '[verts_floor[0:4]],': 1, '-1,': 6, '-3)': 6, '[np.vstack((verts_floor[1],': 1, 'verts_floor[2],': 1, 'verts_floor[7],': 2, 'verts_floor[5]))],': 1, '[np.vstack((verts_floor[0],': 2, 'verts_floor[3],': 2, 'verts_floor[6],': 2, 'verts_floor[4]))],': 2, '[np.vstack((verts_floor[2],': 1, 'verts_floor[7]))],': 1, 'verts_floor[1],': 1, 'verts_floor[5],': 2, '[np.vstack((verts_floor[4],': 1, 'verts_floor[6]))],': 1, 'i,': 1, 'j': 1, 'self.primitive.get_edges():': 1, 'y_start),': 1, '(x_end,': 1, 'y_end)': 1, 'verts[i],': 1, 'verts[j]': 1, 'cv2.line(img,': 1, '(int(x_start),': 1, 'int(y_start)),': 1, '(int(x_end),': 1, 'int(y_end)),': 1, '__name__': 1, ""'__main__':"": 1, 'tracker().start()': 1}","{'imp': 6, 'mpo': 6, 'por': 6, 'ort': 6, 'rt ': 6, 't l': 1, ' lo': 2, 'log': 3, 'ogg': 4, 'ggi': 2, 'gin': 2, 'ing': 8, 'ng\n': 1, 'g\n\n': 1, '\n\ni': 2, '\nim': 2, 't c': 1, ' cv': 17, 'cv2': 18, 'v2\n': 1, '2\ni': 1, 't n': 1, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 1, 'as ': 1, 's n': 1, ' np': 6, 'np\n': 1, 'p\n\n': 1, '\n\nf': 1, '\nfr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm a': 3, ' ar': 3, 'ar_': 4, 'r_d': 3, '_de': 3, 'dem': 3, 'emo': 4, 'mo.': 3, 'o.p': 2, '.po': 3, 'pos': 1, 'ose': 3, 'se_': 1, 'e_e': 1, '_es': 1, 'est': 1, 'sti': 3, 'tim': 3, 'ima': 3, 'mat': 3, 'ato': 3, 'tor': 11, 'or ': 8, 'r i': 3, ' im': 7, 't P': 1, ' Po': 2, 'Pos': 2, 'seE': 2, 'eEs': 2, 'Est': 2, 'or\n': 1, 'r\nf': 1, 'o.u': 1, '.ut': 1, 'uti': 1, 'til': 1, 'ils': 1, 'ls ': 1, 's i': 2, 't (': 1, ' (R': 1, '(RO': 1, 'ROI': 2, 'OIS': 2, 'ISe': 2, 'Sel': 2, 'ele': 6, 'lec': 6, 'ect': 15, 'cto': 8, 'or,': 3, 'r, ': 2, ', C': 12, ' CO': 14, 'COL': 14, 'OLO': 14, 'LOR': 14, 'OR_': 14, 'R_B': 3, '_BL': 3, 'BLA': 2, 'LAC': 2, 'ACK': 2, 'CK,': 1, 'K, ': 3, 'R_G': 1, '_GR': 1, 'GRE': 1, 'REE': 1, 'EEN': 1, 'EN,': 1, 'N, ': 1, 'R_O': 7, '_OR': 7, 'ORA': 7, 'RAN': 7, 'ANG': 7, 'NGE': 7, 'GE,': 7, 'E,\n': 1, ',\n ': 22, '\n  ': 80, '   ': 1119, '  C': 1, 'BLU': 1, 'LUE': 1, 'UE,': 1, 'E, ': 10, 'R_R': 1, '_RE': 1, 'RED': 1, 'ED,': 1, 'D, ': 1, 'R_W': 1, '_WH': 1, 'WHI': 1, 'HIT': 1, 'ITE': 1, 'TE,': 1, 'R_Y': 1, '_YE': 1, 'YEL': 1, 'ELL': 1, 'LLO': 1, 'LOW': 1, 'OW)': 1, 'W)\n': 1, ')\nf': 1, '.pr': 5, 'pri': 4, 'rim': 4, 'imi': 4, 'mit': 4, 'iti': 4, 'tiv': 4, 'ive': 4, 'ves': 1, 'es ': 2, 't C': 1, ' Cu': 2, 'Cub': 2, 'ube': 2, 'be\n': 1, 'e\n\n': 1, '\n\n\n': 2, '\n\nl': 1, '\nlo': 1, 'gge': 2, 'ger': 2, 'er ': 2, 'r =': 5, ' = ': 28, '= l': 1, 'ng.': 1, 'g.g': 1, '.ge': 3, 'get': 7, 'etL': 1, 'tLo': 1, 'Log': 1, 'er(': 3, 'r(_': 1, '(__': 1, '__n': 2, '_na': 2, 'nam': 3, 'ame': 13, 'me_': 2, 'e__': 2, '__)': 1, '_)\n': 1, ')\n\n': 12, '\n\nW': 1, '\nWI': 1, 'WIN': 4, 'IN_': 4, 'N_N': 4, '_NA': 4, 'NAM': 4, 'AME': 4, 'ME ': 1, 'E =': 1, ""= '"": 2, "" 'A"": 1, ""'Au"": 1, 'Aug': 1, 'ugm': 1, 'gme': 1, 'men': 1, 'ent': 1, 'nte': 2, 'ted': 2, 'ed ': 5, 'd R': 1, ' Re': 1, 'Rea': 1, 'eal': 1, 'ali': 4, 'lit': 1, 'ity': 1, 'ty ': 1, 'y -': 1, ' - ': 1, '- D': 1, ' De': 1, 'Dem': 1, 'mo ': 1, 'o 1': 1, "" 1'"": 1, ""1'\n"": 1, ""'\n\n"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's T': 1, ' Tr': 4, 'Tra': 2, 'rac': 12, 'ack': 17, 'cke': 11, 'ker': 6, 'r(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 2, 'ct)': 4, 't):': 2, '):\n': 9, ':\n\n': 1, '\n\n ': 13, '  d': 5, ' de': 4, 'def': 4, 'ef ': 5, 'f _': 2, ' __': 2, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 6, 'sel': 36, 'elf': 32, 'lf)': 2, 'f):': 2, ':\n ': 15, '  s': 15, ' se': 26, 'lf.': 28, 'f.c': 6, '.ca': 2, 'cap': 2, 'ap ': 1, 'p =': 1, '= c': 5, 'v2.': 17, '2.V': 1, '.Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eoC': 1, 'oCa': 1, 'Cap': 1, 'apt': 1, 'ptu': 1, 'tur': 1, 'ure': 1, 're(': 1, 'e(0': 1, '(0)': 1, '0)\n': 2, ')\n ': 21, 'f.f': 6, '.fr': 6, 'fra': 10, 'ram': 10, 'me ': 5, 'e =': 5, '= N': 1, ' No': 4, 'Non': 4, 'one': 4, 'ne\n': 2, 'e\n ': 3, 'f.p': 7, '.pa': 4, 'pau': 4, 'aus': 4, 'use': 4, 'sed': 4, 'd =': 5, '= F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'f.t': 4, '.tr': 5, 'tra': 10, '= P': 1, 'or(': 2, 'r()': 2, '()\n': 7, '  c': 11, '2.n': 1, '.na': 1, 'med': 1, 'edW': 1, 'dWi': 1, 'Win': 1, 'ind': 1, 'ndo': 1, 'dow': 1, 'ow(': 2, 'w(W': 2, '(WI': 3, 'ME)': 1, 'E)\n': 1, 'f.r': 3, '.ro': 3, 'roi': 3, 'oi_': 3, 'i_s': 3, '_se': 3, '= R': 1, ' RO': 1, 'r(W': 1, 'ME,': 2, ', s': 3, 'f.o': 2, '.on': 1, 'on_': 2, 'n_r': 2, '_re': 4, 'rec': 7, 't)\n': 2, 've ': 1, '= C': 2, 'be(': 1, 'e()': 1, '.co': 6, 'col': 4, 'olo': 4, 'lor': 4, 'or_': 4, 'r_l': 4, '_li': 4, 'lin': 9, 'ine': 6, 'nes': 5, 's =': 3, 'CK\n': 1, 'K\n\n': 1, 'f o': 2, ' on': 1, 'ct(': 2, 't(s': 4, 'lf,': 2, 'f, ': 2, ', r': 4, ' re': 5, 'er.': 3, 'r.a': 1, '.ad': 1, 'add': 1, 'dd_': 1, 'd_t': 1, '_ta': 3, 'tar': 21, 'arg': 4, 'rge': 4, 'et(': 2, 'me,': 2, 'e, ': 4, 'f s': 1, ' st': 1, 'sta': 22, 'art': 17, 'rt(': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e T': 1, 'Tru': 2, 'rue': 2, 'ue:': 1, 'e:\n': 2, '  i': 9, ' is': 5, 'is_': 3, 's_r': 3, '_ru': 3, 'run': 3, 'unn': 3, 'nni': 3, 'nin': 3, 'ng ': 2, 'g =': 2, '= n': 6, ' no': 3, 'not': 3, 'ot ': 3, 't s': 2, 'd a': 1, ' an': 1, 'and': 1, 'nd ': 2, 'd s': 1, 'or.': 2, 'r.s': 1, '.se': 1, 'cte': 1, 'ed_': 1, 'd_r': 1, 'ct ': 1, 't i': 1, 'is ': 2, 's N': 2, ' if': 6, 'if ': 7, 'f i': 2, 'g o': 1, ' or': 3, 'r s': 1, 'e i': 1, 'ne:': 1, '  r': 2, 'ret': 3, 'et,': 2, 't, ': 11, ', f': 3, ' fr': 3, '= s': 4, 'ap.': 1, 'p.r': 1, '.re': 5, 'rea': 3, 'ead': 1, 'ad(': 1, 'd()': 1, ' sc': 1, 'sca': 3, 'cal': 3, 'ng_': 3, 'g_f': 3, '_fa': 3, 'fac': 3, 'act': 3, '= 0': 1, ' 0.': 3, '0.5': 3, '.5\n': 1, '5\n ': 1, '  f': 3, '2.r': 1, 'res': 3, 'esi': 1, 'siz': 1, 'ize': 1, 'ze(': 1, 'e(f': 1, '(fr': 1, ', N': 1, 'ne,': 1, ' fx': 1, 'fx=': 1, 'x=s': 1, '=sc': 2, ' fy': 1, 'fy=': 1, 'y=s': 1, 'r,\n': 1, ' in': 6, 'int': 10, 'ter': 1, 'erp': 1, 'rpo': 1, 'pol': 2, 'ola': 1, 'lat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'on=': 1, 'n=c': 1, '=cv': 1, '2.I': 1, '.IN': 1, 'INT': 1, 'NTE': 1, 'TER': 1, 'ER_': 1, 'R_A': 1, '_AR': 1, 'ARE': 1, 'REA': 1, 'EA)': 1, 'A)\n': 1, 'f n': 1, 't r': 1, 'et:': 1, 't:\n': 1, '  b': 2, ' br': 2, 'bre': 2, 'eak': 2, 'ak\n': 2, 'k\n ': 1, '= f': 1, 'me.': 2, 'e.c': 2, 'cop': 2, 'opy': 2, 'py(': 2, 'y()': 2, 'img': 15, 'mg ': 1, 'ng:': 1, 'g:\n': 1, '  t': 1, ' tr': 5, 'ked': 5, 'r.t': 1, 'ck_': 1, 'k_t': 1, 'me)': 1, 'e)\n': 1, ' fo': 3, 'for': 3, ' it': 2, 'ite': 4, 'tem': 4, 'em ': 1, 'm i': 1, 'in ': 3, 'n t': 1, 'ed:': 1, 'd:\n': 1, '  #': 3, ' # ': 3, '# c': 1, '2.p': 2, 'oly': 1, 'lyl': 1, 'yli': 1, 'es(': 3, 's(i': 8, '(im': 11, 'mg,': 11, 'g, ': 6, ', [': 4, ' [n': 6, '[np': 6, 'np.': 11, 'p.i': 3, '.in': 3, 'nt3': 3, 't32': 4, '32(': 4, '2(i': 2, '(it': 2, 'em.': 2, 'm.q': 1, '.qu': 2, 'qua': 4, 'uad': 4, 'ad)': 1, 'd)]': 1, ')],': 8, '], ': 15, ', T': 1, 'ue,': 1, 'es,': 2, 's, ': 3, ', 2': 5, ' 2)': 4, '2)\n': 4, '# f': 1, 'r (': 1, ' (x': 5, '(x,': 2, 'x, ': 2, ', y': 11, ' y)': 2, 'y) ': 1, ') i': 1, 'n n': 1, 'm.p': 1, 'poi': 1, 'oin': 2, 'nts': 2, 'ts_': 23, 's_c': 1, '_cu': 1, 'cur': 1, 'ur)': 1, 'r):': 1, '#  ': 1, '2.c': 1, '.ci': 1, 'cir': 1, 'irc': 1, 'rcl': 1, 'cle': 2, 'le(': 1, 'e(i': 2, ', (': 5, 'y),': 1, '), ': 6, ' 2,': 1, '2, ': 1, 'es)': 1, 's)\n': 1, '.ov': 1, 'ove': 2, 'ver': 31, 'erl': 2, 'rla': 2, 'lay': 2, 'ay_': 2, 'y_g': 2, '_gr': 2, 'gra': 2, 'rap': 2, 'aph': 2, 'phi': 2, 'hic': 2, 'ics': 2, 'cs(': 2, ', i': 5, 'em)': 1, 'm)\n': 1, 'r.d': 1, '.dr': 7, 'dra': 7, 'raw': 7, 'aw_': 1, 'w_r': 1, 't(i': 1, 'mg)': 2, 'g)\n': 2, '2.i': 1, '.im': 1, 'ims': 1, 'msh': 1, 'sho': 1, 'how': 1, ' ch': 4, 'ch ': 4, 'h =': 4, '2.w': 1, '.wa': 1, 'wai': 1, 'ait': 1, 'itK': 1, 'tKe': 1, 'Key': 1, 'ey(': 1, 'y(1': 1, '(1)': 1, '1)\n': 1, 'f c': 3, ' ==': 4, '== ': 4, '= o': 2, 'ord': 2, 'rd(': 2, ""d('"": 2, ""(' "": 1, ""' '"": 1, "" ')"": 1, ""'):"": 2, 'ed\n': 1, 'd\n ': 1, ""('c"": 1, ""'c'"": 1, ""c')"": 1, 'r.c': 1, '.cl': 1, 'lea': 1, 'ear': 1, 'r_t': 1, 'ets': 1, 'ts(': 2, 's()': 3, '= 2': 1, ' 27': 1, '27:': 1, '7:\n': 1, 'k\n\n': 1, ' ov': 1, 's(s': 1, ', t': 4, 'ed)': 1, 'd):': 1, '  x': 1, ' x_': 2, 'x_s': 8, '_st': 15, 'rt,': 9, ' y_': 9, 'y_s': 7, ', x': 1, 'x_e': 7, '_en': 13, 'end': 13, 'nd,': 6, 'd, ': 8, 'y_e': 6, '= t': 1, 'ed.': 2, 'd.t': 1, '.ta': 1, 'et.': 1, 't.r': 1, 'ct\n': 1, 't\n ': 1, '  q': 1, ' qu': 1, 'ad_': 2, 'd_3': 2, '_3d': 2, '3d ': 1, 'p.f': 2, '.fl': 2, 'flo': 24, 'loa': 2, 'oat': 2, 'at3': 1, '2([': 1, '([[': 2, '[[x': 1, '[x_': 4, ', 0': 9, ' 0]': 4, '0],': 5, ' [x': 3, '],\n': 13, '  [': 8, '0]]': 2, ']])': 2, '])\n': 2, '  h': 1, ' h,': 1, 'h, ': 1, ', w': 2, ' w ': 1, 'w =': 1, '= i': 1, 'mg.': 1, 'g.s': 1, '.sh': 1, 'sha': 3, 'hap': 3, 'ape': 3, 'pe[': 1, 'e[:': 1, '[:2': 1, ':2]': 1, '2]\n': 1, ']\n ': 2, '  K': 1, ' K ': 1, 'K =': 1, 'at6': 1, 't64': 1, '64(': 1, '4([': 1, '[[w': 1, '[w,': 1, 'w, ': 2, ' 0,': 2, '0, ': 4, '.5*': 2, '5*(': 2, '*(w': 1, '(w-': 1, 'w-1': 1, '-1)': 2, '1)]': 2, ' [0': 2, '[0,': 2, ' w,': 1, '*(h': 1, '(h-': 1, 'h-1': 1, ', 1': 1, ' 1.': 1, '1.0': 1, '.0]': 1, ' di': 3, 'dis': 3, 'ist': 3, 'st_': 3, 't_c': 3, '_co': 3, 'coe': 3, 'oef': 3, 'f =': 1, 'p.z': 1, '.ze': 1, 'zer': 1, 'ero': 1, 'ros': 1, 'os(': 1, 's(4': 1, '(4)': 1, '4)\n': 1, ' rv': 2, 'rve': 2, 'vec': 4, 'ec,': 3, 'c, ': 3, ' tv': 2, 'tve': 2, 'ec ': 1, 'c =': 1, '2.s': 1, '.so': 1, 'sol': 1, 'olv': 1, 'lve': 1, 'veP': 1, 'ePn': 1, 'PnP': 1, 'nP(': 1, 'P(q': 1, '(qu': 1, '3d,': 1, 'd.q': 1, 'ad,': 1, ', K': 2, ' K,': 2, ', d': 2, 'ef)': 2, 'f)\n': 1, '  v': 8, ' ve': 20, 'ert': 29, 'rts': 28, 'ts ': 2, 've.': 2, 'e.g': 2, 'et_': 2, 't_v': 1, '_ve': 1, 'rti': 1, 'tic': 1, 'ice': 1, 'ces': 1, '() ': 1, ') *': 1, ' * ': 1, '* [': 1, ' [(': 1, '[(x': 1, '(x_': 7, 'nd-': 3, 'd-x': 2, '-x_': 2, 'rt)': 6, 't),': 4, ' (y': 1, '(y_': 3, 'd-y': 1, '-y_': 1, '),\n': 2, '  -': 6, ' -(': 1, '-(x': 1, 't)]': 1, ')] ': 1, '] +': 1, ' + ': 1, '+ (': 1, ' 0)': 1, 'pro': 1, 'roj': 1, 'oje': 1, 'ctP': 1, 'tPo': 1, 'Poi': 1, 's(v': 1, '(ve': 7, 'ts,': 1, 'f)[': 1, ')[0': 1, '[0]': 3, '0].': 1, '].r': 1, 'esh': 2, 'pe(': 2, 'e(-': 2, '(-1': 2, '-1,': 8, '1, ': 8, 's_f': 22, '_fl': 22, 'loo': 22, 'oor': 22, '2(v': 1, 'ts)': 1, 's).': 1, ').r': 1, '2.d': 6, 'awC': 6, 'wCo': 6, 'Con': 6, 'ont': 6, 'nto': 6, 'tou': 6, 'our': 6, 'urs': 6, 'rs(': 6, ' [v': 1, '[ve': 1, 'or[': 21, 'r[0': 3, '[0:': 1, '0:4': 1, ':4]': 1, '4]]': 1, ']],': 1, ', -': 7, ' -1': 6, ' -3': 6, '-3)': 6, '3)\n': 6, 'g,\n': 5, 'p.v': 5, '.vs': 5, 'vst': 5, 'tac': 5, 'ck(': 5, 'k((': 5, '((v': 5, 'r[1': 2, '[1]': 2, '1],': 2, ', v': 11, 'r[2': 2, '[2]': 2, '2],': 2, 'r[7': 3, '[7]': 3, '7],': 2, 'r[5': 3, '[5]': 3, '5])': 1, ']))': 5, '))]': 5, 'r[3': 2, '[3]': 2, '3],': 2, 'r[6': 3, '[6]': 3, '6],': 2, 'r[4': 3, '[4]': 3, '4])': 2, '7])': 1, '5],': 2, '4],': 1, '6])': 1, ' i,': 1, 'i, ': 1, ', j': 1, ' j ': 1, 'j i': 1, 'n s': 1, 't_e': 1, '_ed': 1, 'edg': 1, 'dge': 1, 'ges': 1, '():': 1, '  (': 1, 'nd)': 3, 'd) ': 1, ') =': 1, '= v': 1, 'ts[': 2, 's[i': 1, '[i]': 1, 'i],': 1, 's[j': 1, '[j]': 1, 'j]\n': 1, '2.l': 1, '.li': 1, 'ne(': 1, ' (i': 2, '(in': 2, 'nt(': 4, 't(x': 2, 't(y': 2, 't))': 1, ')),': 2, 'd),': 1, 'd))': 1, '\nif': 1, '__ ': 1, '_ =': 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  T': 1, '().': 1, ').s': 1, '.st': 1, 't()': 1}"
Sebastian Castañeda,ar_triangle_demo_1.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 6, 'logging': 1, 'cv2': 1, 'numpy': 1, 'as': 1, 'np': 1, 'from': 3, 'ar_demo.pose_estimator': 1, 'poseestimator': 1, 'ar_demo.utils': 1, 'roiselector,': 1, 'color_green,': 1, 'color_black': 2, 'ar_demo.primitives': 1, 'triangle': 1, 'logger': 1, '=': 29, 'logging.getlogger(__name__)': 1, 'win_name': 1, ""'augmented"": 1, 'reality': 1, '-': 1, 'demo': 1, ""1'"": 1, 'class': 1, 'tracker(object):': 1, 'def': 4, '__init__(self):': 1, 'self.cap': 1, 'cv2.videocapture(0)': 1, 'self.frame': 3, 'none': 2, 'self.paused': 4, 'false': 1, 'self.tracker': 1, 'poseestimator()': 1, 'cv2.namedwindow(win_name)': 1, 'self.roi_selector': 1, 'roiselector(win_name,': 1, 'self.on_rect)': 1, 'self.primitive': 1, 'triangle()': 1, 'self.color_base': 1, 'color_green': 1, 'self.color_lines': 1, 'on_rect(self,': 1, 'rect):': 1, 'self.tracker.add_target(self.frame,': 1, 'rect)': 1, 'start(self):': 1, 'while': 1, 'true:': 1, 'is_running': 2, 'not': 3, 'and': 1, 'self.roi_selector.selected_rect': 1, 'is': 2, 'if': 7, 'or': 1, 'none:': 1, 'ret,': 2, 'frame': 2, 'self.cap.read()': 1, 'scaling_factor': 1, '0.5': 1, 'cv2.resize(frame,': 1, 'none,': 1, 'fx=scaling_factor,': 1, 'fy=scaling_factor,': 1, 'interpolation=cv2.inter_area)': 1, 'ret:': 1, 'break': 2, 'frame.copy()': 1, 'img': 1, 'self.frame.copy()': 1, 'is_running:': 1, 'tracked': 1, 'self.tracker.track_target(self.frame)': 1, 'for': 3, 'item': 1, 'in': 3, 'tracked:': 1, 'cv2.polylines(img,': 1, '[np.int32(item.quad)],': 1, 'true,': 1, 'self.color_lines,': 2, '2)': 4, '(x,': 2, 'y)': 1, 'np.int32(item.points_cur):': 1, 'cv2.circle(img,': 1, 'y),': 1, '2,': 1, 'self.color_lines)': 1, 'self.overlay_graphics(img,': 1, 'item)': 1, 'self.roi_selector.draw_rect(img)': 1, 'cv2.imshow(win_name,': 1, 'img)': 1, 'ch': 4, 'cv2.waitkey(1)': 1, '==': 4, ""ord('"": 1, ""'):"": 1, ""ord('c'):"": 1, 'self.tracker.clear_targets()': 1, '27:': 1, 'overlay_graphics(self,': 1, 'img,': 1, 'tracked):': 1, 'x_start,': 1, 'y_start,': 4, 'x_end,': 1, 'y_end': 1, 'tracked.target.rect': 1, 'quad_3d': 1, 'np.float32([[x_start,': 1, '0],': 3, '[x_end,': 2, 'y_end,': 2, '[x_start,': 1, '0]])': 1, 'h,': 1, 'w': 1, 'img.shape[:2]': 1, 'k': 1, 'np.float64([[w,': 1, '0,': 4, '0.5*(w-1)],': 1, '[0,': 2, 'w,': 1, '0.5*(h-1)],': 1, '1.0]])': 1, 'dist_coef': 1, 'np.zeros(4)': 1, 'rvec,': 2, 'tvec': 1, 'cv2.solvepnp(quad_3d,': 1, 'tracked.quad,': 1, 'k,': 2, 'dist_coef)': 1, 'verts': 2, 'self.primitive.get_vertices()': 1, '*': 1, '[(x_end-x_start),': 1, '(y_end-y_start),': 1, '-(x_end-x_start)*0.3]': 1, '+': 1, '(x_start,': 2, '0)': 1, 'cv2.projectpoints(verts,': 1, 'tvec,': 1, 'dist_coef)[0].reshape(-1,': 1, 'verts_floor': 1, 'np.int32(verts).reshape(-1,': 1, 'cv2.drawcontours(img,': 5, '[verts_floor[:4]],': 1, '-1,': 5, 'self.color_base,': 1, '-3)': 5, '[np.vstack((verts_floor[:2],': 1, 'verts_floor[4:5]))],': 4, '(0,': 2, '255,': 2, '0),': 3, '[np.vstack((verts_floor[1:3],': 1, '(255,': 2, '[np.vstack((verts_floor[2:4],': 1, '150),': 1, '[np.vstack((verts_floor[3:4],': 1, 'verts_floor[0:1],': 1, 'i,': 1, 'j': 1, 'self.primitive.get_edges():': 1, 'y_start),': 1, '(x_end,': 1, 'y_end)': 1, 'verts[i],': 1, 'verts[j]': 1, 'cv2.line(img,': 1, '(int(x_start),': 1, 'int(y_start)),': 1, '(int(x_end),': 1, 'int(y_end)),': 1, '__name__': 1, ""'__main__':"": 1, 'tracker().start()': 1}","{'imp': 6, 'mpo': 6, 'por': 6, 'ort': 6, 'rt ': 6, 't l': 1, ' lo': 2, 'log': 3, 'ogg': 4, 'ggi': 2, 'gin': 2, 'ing': 8, 'ng\n': 1, 'g\n\n': 1, '\n\ni': 2, '\nim': 2, 't c': 1, ' cv': 16, 'cv2': 17, 'v2\n': 1, '2\ni': 1, 't n': 1, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 1, 'as ': 1, 's n': 1, ' np': 6, 'np\n': 1, 'p\n\n': 1, '\n\nf': 1, '\nfr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm a': 3, ' ar': 3, 'ar_': 4, 'r_d': 3, '_de': 3, 'dem': 3, 'emo': 4, 'mo.': 3, 'o.p': 2, '.po': 3, 'pos': 1, 'ose': 3, 'se_': 1, 'e_e': 1, '_es': 1, 'est': 1, 'sti': 3, 'tim': 3, 'ima': 3, 'mat': 3, 'ato': 3, 'tor': 11, 'or ': 8, 'r i': 3, ' im': 7, 't P': 1, ' Po': 2, 'Pos': 2, 'seE': 2, 'eEs': 2, 'Est': 2, 'or\n': 1, 'r\nf': 1, 'o.u': 1, '.ut': 1, 'uti': 1, 'til': 1, 'ils': 1, 'ls ': 1, 's i': 2, 't R': 1, ' RO': 2, 'ROI': 2, 'OIS': 2, 'ISe': 2, 'Sel': 2, 'ele': 6, 'lec': 6, 'ect': 15, 'cto': 8, 'or,': 3, 'r, ': 2, ', C': 2, ' CO': 4, 'COL': 4, 'OLO': 4, 'LOR': 4, 'OR_': 4, 'R_G': 2, '_GR': 2, 'GRE': 2, 'REE': 2, 'EEN': 2, 'EN,': 1, 'N, ': 1, 'R_B': 2, '_BL': 2, 'BLA': 2, 'LAC': 2, 'ACK': 2, 'CK\n': 2, 'K\nf': 1, '.pr': 5, 'pri': 4, 'rim': 4, 'imi': 4, 'mit': 4, 'iti': 4, 'tiv': 4, 'ive': 4, 'ves': 1, 'es ': 2, 't T': 1, ' Tr': 6, 'Tri': 2, 'ria': 2, 'ian': 2, 'ang': 2, 'ngl': 2, 'gle': 2, 'le\n': 1, 'e\n\n': 1, '\n\n\n': 2, '\n\nl': 1, '\nlo': 1, 'gge': 2, 'ger': 2, 'er ': 2, 'r =': 5, ' = ': 29, '= l': 1, 'ng.': 1, 'g.g': 1, '.ge': 3, 'get': 7, 'etL': 1, 'tLo': 1, 'Log': 1, 'er(': 3, 'r(_': 1, '(__': 1, '__n': 2, '_na': 2, 'nam': 3, 'ame': 13, 'me_': 2, 'e__': 2, '__)': 1, '_)\n': 1, ')\n\n': 5, '\n\nW': 1, '\nWI': 1, 'WIN': 4, 'IN_': 4, 'N_N': 4, '_NA': 4, 'NAM': 4, 'AME': 4, 'ME ': 1, 'E =': 1, ""= '"": 2, "" 'A"": 1, ""'Au"": 1, 'Aug': 1, 'ugm': 1, 'gme': 1, 'men': 1, 'ent': 1, 'nte': 2, 'ted': 2, 'ed ': 5, 'd R': 1, ' Re': 1, 'Rea': 1, 'eal': 1, 'ali': 4, 'lit': 1, 'ity': 1, 'ty ': 1, 'y -': 1, ' - ': 1, '- D': 1, ' De': 1, 'Dem': 1, 'mo ': 1, 'o 1': 1, "" 1'"": 1, ""1'\n"": 1, ""'\n\n"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's T': 1, 'Tra': 2, 'rac': 12, 'ack': 16, 'cke': 11, 'ker': 6, 'r(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 2, 'ct)': 4, 't):': 2, '):\n': 9, ':\n\n': 1, '\n\n ': 6, '\n  ': 68, '   ': 783, '  d': 5, ' de': 4, 'def': 4, 'ef ': 5, 'f _': 2, ' __': 2, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 6, 'sel': 38, 'elf': 34, 'lf)': 2, 'f):': 2, ':\n ': 15, '  s': 16, ' se': 28, 'lf.': 30, 'f.c': 8, '.ca': 2, 'cap': 2, 'ap ': 1, 'p =': 1, '= c': 5, 'v2.': 16, '2.V': 1, '.Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eoC': 1, 'oCa': 1, 'Cap': 1, 'apt': 1, 'ptu': 1, 'tur': 1, 'ure': 1, 're(': 1, 'e(0': 1, '(0)': 1, '0)\n': 2, ')\n ': 27, 'f.f': 6, '.fr': 6, 'fra': 10, 'ram': 10, 'me ': 5, 'e =': 6, '= N': 1, ' No': 4, 'Non': 4, 'one': 4, 'ne\n': 2, 'e\n ': 3, 'f.p': 7, '.pa': 4, 'pau': 4, 'aus': 4, 'use': 4, 'sed': 4, 'd =': 5, '= F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'f.t': 4, '.tr': 5, 'tra': 10, '= P': 1, 'or(': 2, 'r()': 2, '()\n': 7, '  c': 11, '2.n': 1, '.na': 1, 'med': 1, 'edW': 1, 'dWi': 1, 'Win': 1, 'ind': 1, 'ndo': 1, 'dow': 1, 'ow(': 2, 'w(W': 2, '(WI': 3, 'ME)': 1, 'E)\n': 1, 'f.r': 3, '.ro': 3, 'roi': 3, 'oi_': 3, 'i_s': 3, '_se': 3, '= R': 1, 'r(W': 1, 'ME,': 2, 'E, ': 2, ', s': 4, 'f.o': 2, '.on': 1, 'on_': 2, 'n_r': 2, '_re': 4, 'rec': 7, 't)\n': 2, 've ': 1, '= T': 1, 'le(': 2, 'e()': 1, '.co': 8, 'col': 6, 'olo': 6, 'lor': 6, 'or_': 6, 'r_b': 2, '_ba': 2, 'bas': 2, 'ase': 2, 'se ': 1, '= C': 2, 'EN\n': 1, 'N\n ': 1, 'r_l': 4, '_li': 4, 'lin': 9, 'ine': 6, 'nes': 5, 's =': 3, 'K\n\n': 1, 'f o': 2, ' on': 1, 'ct(': 2, 't(s': 4, 'lf,': 2, 'f, ': 2, ', r': 4, ' re': 5, 'er.': 3, 'r.a': 1, '.ad': 1, 'add': 1, 'dd_': 1, 'd_t': 1, '_ta': 3, 'tar': 21, 'arg': 4, 'rge': 4, 'et(': 2, 'me,': 2, 'e, ': 5, 'f s': 1, ' st': 1, 'sta': 21, 'art': 17, 'rt(': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e T': 1, 'Tru': 2, 'rue': 2, 'ue:': 1, 'e:\n': 2, '  i': 9, ' is': 5, 'is_': 3, 's_r': 3, '_ru': 3, 'run': 3, 'unn': 3, 'nni': 3, 'nin': 3, 'ng ': 2, 'g =': 2, '= n': 6, ' no': 3, 'not': 3, 'ot ': 3, 't s': 2, 'd a': 1, ' an': 1, 'and': 1, 'nd ': 2, 'd s': 1, 'or.': 2, 'r.s': 1, '.se': 1, 'cte': 1, 'ed_': 1, 'd_r': 1, 'ct ': 1, 't i': 1, 'is ': 2, 's N': 2, ' if': 6, 'if ': 7, 'f i': 2, 'g o': 1, ' or': 3, 'r s': 1, 'e i': 1, 'ne:': 1, '  r': 2, 'ret': 3, 'et,': 2, 't, ': 11, ', f': 3, ' fr': 3, '= s': 4, 'ap.': 1, 'p.r': 1, '.re': 5, 'rea': 3, 'ead': 1, 'ad(': 1, 'd()': 1, ' sc': 1, 'sca': 3, 'cal': 3, 'ng_': 3, 'g_f': 3, '_fa': 3, 'fac': 3, 'act': 3, '= 0': 1, ' 0.': 3, '0.5': 3, '.5\n': 1, '5\n ': 1, '  f': 4, '2.r': 1, 'res': 3, 'esi': 1, 'siz': 1, 'ize': 1, 'ze(': 1, 'e(f': 1, '(fr': 1, ', N': 1, 'ne,': 1, ' fx': 1, 'fx=': 1, 'x=s': 1, '=sc': 2, ' fy': 1, 'fy=': 1, 'y=s': 1, 'r,\n': 1, ',\n ': 10, ' in': 6, 'int': 10, 'ter': 1, 'erp': 1, 'rpo': 1, 'pol': 2, 'ola': 1, 'lat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'on=': 1, 'n=c': 1, '=cv': 1, '2.I': 1, '.IN': 1, 'INT': 1, 'NTE': 1, 'TER': 1, 'ER_': 1, 'R_A': 1, '_AR': 1, 'ARE': 1, 'REA': 1, 'EA)': 1, 'A)\n': 1, 'f n': 1, 't r': 1, 'et:': 1, 't:\n': 1, '  b': 2, ' br': 2, 'bre': 2, 'eak': 2, 'ak\n': 2, 'k\n ': 1, '= f': 1, 'me.': 2, 'e.c': 2, 'cop': 2, 'opy': 2, 'py(': 2, 'y()': 2, 'img': 14, 'mg ': 1, 'ng:': 1, 'g:\n': 1, '  t': 1, ' tr': 5, 'ked': 5, 'r.t': 1, 'ck_': 1, 'k_t': 1, 'me)': 1, 'e)\n': 1, ' fo': 3, 'for': 3, ' it': 2, 'ite': 4, 'tem': 4, 'em ': 1, 'm i': 1, 'in ': 3, 'n t': 1, 'ed:': 1, 'd:\n': 1, '2.p': 2, 'oly': 1, 'lyl': 1, 'yli': 1, 'es(': 3, 's(i': 7, '(im': 10, 'mg,': 10, 'g, ': 10, ', [': 8, ' [n': 5, '[np': 5, 'np.': 10, 'p.i': 3, '.in': 3, 'nt3': 3, 't32': 4, '32(': 4, '2(i': 2, '(it': 2, 'em.': 2, 'm.q': 1, '.qu': 2, 'qua': 4, 'uad': 4, 'ad)': 1, 'd)]': 1, ')],': 7, '], ': 13, ', T': 1, 'ue,': 1, 'es,': 2, 's, ': 3, ', 2': 7, ' 2)': 4, '2)\n': 4, 'r (': 1, ' (x': 5, '(x,': 2, 'x, ': 2, ', y': 11, ' y)': 2, 'y) ': 1, ') i': 1, 'n n': 1, 'm.p': 1, 'poi': 1, 'oin': 2, 'nts': 2, 'ts_': 12, 's_c': 1, '_cu': 1, 'cur': 1, 'ur)': 1, 'r):': 1, '2.c': 1, '.ci': 1, 'cir': 1, 'irc': 1, 'rcl': 1, 'cle': 2, 'e(i': 2, ', (': 6, 'y),': 1, '), ': 10, ' 2,': 1, '2, ': 1, 'es)': 1, 's)\n': 1, '.ov': 1, 'ove': 2, 'ver': 20, 'erl': 2, 'rla': 2, 'lay': 2, 'ay_': 2, 'y_g': 2, '_gr': 2, 'gra': 2, 'rap': 2, 'aph': 2, 'phi': 2, 'hic': 2, 'ics': 2, 'cs(': 2, ', i': 5, 'em)': 1, 'm)\n': 1, 'r.d': 1, '.dr': 6, 'dra': 6, 'raw': 6, 'aw_': 1, 'w_r': 1, 't(i': 1, 'mg)': 2, 'g)\n': 2, '2.i': 1, '.im': 1, 'ims': 1, 'msh': 1, 'sho': 1, 'how': 1, ' ch': 4, 'ch ': 4, 'h =': 4, '2.w': 1, '.wa': 1, 'wai': 1, 'ait': 1, 'itK': 1, 'tKe': 1, 'Key': 1, 'ey(': 1, 'y(1': 1, '(1)': 1, '1)\n': 1, 'f c': 3, ' ==': 4, '== ': 4, '= o': 2, 'ord': 2, 'rd(': 2, ""d('"": 2, ""(' "": 1, ""' '"": 1, "" ')"": 1, ""'):"": 2, 'ed\n': 1, 'd\n ': 1, ""('c"": 1, ""'c'"": 1, ""c')"": 1, 'r.c': 1, '.cl': 1, 'lea': 1, 'ear': 1, 'r_t': 1, 'ets': 1, 'ts(': 2, 's()': 3, '= 2': 1, ' 27': 1, '27:': 1, '7:\n': 1, 'k\n\n': 1, ' ov': 1, 's(s': 1, ', t': 4, 'ed)': 1, 'd):': 1, '  x': 1, ' x_': 2, 'x_s': 8, '_st': 15, 'rt,': 9, ' y_': 9, 'y_s': 7, ', x': 1, 'x_e': 7, '_en': 13, 'end': 13, 'nd,': 6, 'd, ': 8, 'y_e': 6, '= t': 1, 'ed.': 2, 'd.t': 1, '.ta': 1, 'et.': 1, 't.r': 1, 'ct\n': 1, 't\n ': 1, '  q': 1, ' qu': 1, 'ad_': 2, 'd_3': 2, '_3d': 2, '3d ': 1, 'p.f': 2, '.fl': 2, 'flo': 13, 'loa': 2, 'oat': 2, 'at3': 1, '2([': 1, '([[': 2, '[[x': 1, '[x_': 4, ', 0': 14, ' 0]': 4, '0],': 3, ' [x': 3, '],\n': 4, '  [': 3, '0]]': 2, ']])': 2, '])\n': 2, '  h': 1, ' h,': 1, 'h, ': 1, ', w': 2, ' w ': 1, 'w =': 1, '= i': 1, 'mg.': 1, 'g.s': 1, '.sh': 1, 'sha': 3, 'hap': 3, 'ape': 3, 'pe[': 1, 'e[:': 1, '[:2': 2, ':2]': 2, '2]\n': 1, ']\n ': 2, '  K': 1, ' K ': 1, 'K =': 1, 'at6': 1, 't64': 1, '64(': 1, '4([': 1, '[[w': 1, '[w,': 1, 'w, ': 2, ' 0,': 4, '0, ': 8, '.5*': 2, '5*(': 2, '*(w': 1, '(w-': 1, 'w-1': 1, '-1)': 2, '1)]': 2, ' [0': 2, '[0,': 2, ' w,': 1, '*(h': 1, '(h-': 1, 'h-1': 1, ', 1': 2, ' 1.': 1, '1.0': 1, '.0]': 1, ' di': 3, 'dis': 3, 'ist': 3, 'st_': 3, 't_c': 3, '_co': 3, 'coe': 3, 'oef': 3, 'f =': 1, 'p.z': 1, '.ze': 1, 'zer': 1, 'ero': 1, 'ros': 1, 'os(': 1, 's(4': 1, '(4)': 1, '4)\n': 1, ' rv': 2, 'rve': 2, 'vec': 4, 'ec,': 3, 'c, ': 3, ' tv': 2, 'tve': 2, 'ec ': 1, 'c =': 1, '2.s': 1, '.so': 1, 'sol': 1, 'olv': 1, 'lve': 1, 'veP': 1, 'ePn': 1, 'PnP': 1, 'nP(': 1, 'P(q': 1, '(qu': 1, '3d,': 1, 'd.q': 1, 'ad,': 1, ', K': 2, ' K,': 2, 'K, ': 2, ', d': 2, 'ef)': 2, 'f)\n': 1, '  v': 3, ' ve': 10, 'ert': 18, 'rts': 17, 'ts ': 2, 've.': 2, 'e.g': 2, 'et_': 2, 't_v': 1, '_ve': 1, 'rti': 1, 'tic': 1, 'ice': 1, 'ces': 1, '() ': 1, ') *': 1, ' * ': 1, '* [': 1, ' [(': 1, '[(x': 1, '(x_': 7, 'nd-': 3, 'd-x': 2, '-x_': 2, 'rt)': 6, 't),': 4, ' (y': 1, '(y_': 3, 'd-y': 1, '-y_': 1, '),\n': 2, '  -': 2, ' -(': 1, '-(x': 1, 't)*': 1, ')*0': 1, '*0.': 1, '0.3': 1, '.3]': 1, '3] ': 1, '] +': 1, ' + ': 1, '+ (': 1, ' 0)': 4, 'pro': 1, 'roj': 1, 'oje': 1, 'ctP': 1, 'tPo': 1, 'Poi': 1, 's(v': 1, '(ve': 6, 'ts,': 1, 'f)[': 1, ')[0': 1, '[0]': 1, '0].': 1, '].r': 1, 'esh': 2, 'pe(': 2, 'e(-': 2, '(-1': 2, '-1,': 7, '1, ': 4, 's_f': 11, '_fl': 11, 'loo': 11, 'oor': 11, '2(v': 1, 'ts)': 1, 's).': 1, ').r': 1, '2.d': 5, 'awC': 5, 'wCo': 5, 'Con': 5, 'ont': 5, 'nto': 5, 'tou': 5, 'our': 5, 'urs': 5, 'rs(': 5, ' [v': 1, '[ve': 1, 'or[': 10, 'r[:': 2, '[:4': 1, ':4]': 3, '4]]': 1, ']],': 1, ', -': 9, ' -1': 5, 'se,': 1, ' -3': 5, '-3)': 5, '3)\n': 5, 'p.v': 4, '.vs': 4, 'vst': 4, 'tac': 4, 'ck(': 4, 'k((': 4, '((v': 4, '2],': 1, ', v': 6, 'r[4': 4, '[4:': 4, '4:5': 4, ':5]': 4, '5])': 4, ']))': 4, '))]': 4, '1,\n': 3, '  (': 4, ' (0': 2, '(0,': 2, ' 25': 2, '255': 4, '55,': 4, '5, ': 4, '0),': 4, 'r[1': 1, '[1:': 1, '1:3': 1, ':3]': 1, '3],': 1, ' (2': 2, '(25': 2, 'r[2': 1, '[2:': 1, '2:4': 1, '4],': 2, ' 15': 1, '150': 1, '50)': 1, 'r[3': 1, '[3:': 1, '3:4': 1, 'r[0': 1, '[0:': 1, '0:1': 1, ':1]': 1, '1],': 1, ' i,': 1, 'i, ': 1, ', j': 1, ' j ': 1, 'j i': 1, 'n s': 1, 't_e': 1, '_ed': 1, 'edg': 1, 'dge': 1, 'ges': 1, '():': 1, 'nd)': 3, 'd) ': 1, ') =': 1, '= v': 1, 'ts[': 2, 's[i': 1, '[i]': 1, 'i],': 1, 's[j': 1, '[j]': 1, 'j]\n': 1, '2.l': 1, '.li': 1, 'ne(': 1, ' (i': 2, '(in': 2, 'nt(': 4, 't(x': 2, 't(y': 2, 't))': 1, ')),': 2, 'd),': 1, 'd))': 1, '\nif': 1, '__ ': 1, '_ =': 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  T': 1, '().': 1, ').s': 1, '.st': 1, 't()': 1}"
Sebastian Castañeda,ar_triangle_demo_2.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 6, 'logging': 1, 'cv2': 1, 'numpy': 1, 'as': 1, 'np': 1, 'from': 3, 'ar_demo.pose_estimator': 1, 'poseestimator': 1, 'ar_demo.utils': 1, 'roiselector,': 1, 'color_green,': 1, 'color_black': 2, 'ar_demo.primitives': 1, 'triangle': 1, 'logger': 1, '=': 32, 'logging.getlogger(__name__)': 1, 'win_name': 1, ""'augmented"": 1, 'reality': 1, '-': 4, 'demo': 1, ""1'"": 1, 'class': 1, 'tracker(object):': 1, 'def': 4, '__init__(self):': 1, 'self.cap': 1, 'cv2.videocapture(0)': 1, 'self.frame': 3, 'none': 2, 'self.paused': 4, 'false': 1, 'self.tracker': 1, 'poseestimator()': 1, 'cv2.namedwindow(win_name)': 1, 'self.roi_selector': 1, 'roiselector(win_name,': 1, 'self.on_rect)': 1, 'self.primitive': 1, 'triangle()': 1, 'self.color_base': 1, 'color_green': 1, 'self.color_lines': 1, 'self.graphics_counter': 2, '0': 2, 'self.time_counter': 3, 'on_rect(self,': 1, 'rect):': 1, 'self.tracker.add_target(self.frame,': 1, 'rect)': 1, 'start(self):': 1, 'while': 1, 'true:': 1, 'is_running': 2, 'not': 4, 'and': 1, 'self.roi_selector.selected_rect': 1, 'is': 2, 'if': 8, 'or': 1, 'none:': 1, 'ret,': 2, 'frame': 2, 'self.cap.read()': 1, 'scaling_factor': 1, '0.5': 1, 'cv2.resize(frame,': 1, 'none,': 1, 'fx=scaling_factor,': 1, 'fy=scaling_factor,': 1, 'interpolation=cv2.inter_area)': 1, 'ret:': 1, 'break': 2, 'frame.copy()': 1, 'img': 1, 'self.frame.copy()': 1, 'is_running:': 1, 'tracked': 1, 'self.tracker.track_target(self.frame)': 1, 'for': 3, 'item': 1, 'in': 3, 'tracked:': 1, 'cv2.polylines(img,': 1, '[np.int32(item.quad)],': 1, 'true,': 1, 'self.color_lines,': 2, '2)': 4, '(x,': 2, 'y)': 1, 'np.int32(item.points_cur):': 1, 'cv2.circle(img,': 1, 'y),': 1, '2,': 1, 'self.color_lines)': 1, 'self.overlay_graphics(img,': 1, 'item)': 1, 'self.roi_selector.draw_rect(img)': 1, 'cv2.imshow(win_name,': 1, 'img)': 1, 'ch': 4, 'cv2.waitkey(1)': 1, '==': 4, ""ord('"": 1, ""'):"": 1, ""ord('c'):"": 1, 'self.tracker.clear_targets()': 1, '27:': 1, 'overlay_graphics(self,': 1, 'img,': 1, 'tracked):': 1, 'x_start,': 1, 'y_start,': 4, 'x_end,': 1, 'y_end': 1, 'tracked.target.rect': 1, 'quad_3d': 1, 'np.float32([[x_start,': 1, '0],': 7, '[x_end,': 2, 'y_end,': 2, '[x_start,': 1, '0]])': 1, 'h,': 1, 'w': 1, 'img.shape[:2]': 1, 'k': 1, 'np.float64([[w,': 1, '0,': 6, '0.5*(w-1)],': 1, '[0,': 3, 'w,': 1, '0.5*(h-1)],': 1, '1.0]])': 1, 'dist_coef': 1, 'np.zeros(4)': 1, 'rvec,': 2, 'tvec': 1, 'cv2.solvepnp(quad_3d,': 1, 'tracked.quad,': 1, 'k,': 2, 'dist_coef)': 1, '+=': 1, '1': 1, '%': 2, '20:': 1, '(self.graphics_counter': 1, '+': 2, '1)': 1, '8': 1, 'self.primitive.set_vertices([[0,': 1, '1,': 2, '[1,': 2, '[0.5,': 1, '0.5,': 1, 'self.graphics_counter]])': 1, 'verts': 2, 'self.primitive.get_vertices()': 1, '*': 2, '[(x_end': 1, 'x_start),': 1, '(y_end': 1, 'y_start),': 2, '-(x_end': 1, 'x_start)': 1, '0.3]': 1, '(x_start,': 2, '0)': 1, 'cv2.projectpoints(verts,': 1, 'tvec,': 1, 'dist_coef)[0].reshape(-1,': 1, 'verts_floor': 1, 'np.int32(verts).reshape(-1,': 1, 'cv2.drawcontours(img,': 5, '[verts_floor[:4]],': 1, '-1,': 5, 'self.color_base,': 1, '-3)': 5, '[np.vstack((verts_floor[:2],': 1, 'verts_floor[4:5]))],': 4, '(0,': 2, '255,': 2, '0),': 3, '[np.vstack((verts_floor[1:3],': 1, '(255,': 2, '[np.vstack((verts_floor[2:4],': 1, '150),': 1, '[np.vstack((verts_floor[3:4],': 1, 'verts_floor[0:1],': 1, 'i,': 1, 'j': 1, 'self.primitive.get_edges():': 1, '(x_end,': 1, 'y_end)': 1, 'verts[i],': 1, 'verts[j]': 1, 'cv2.line(img,': 1, '(int(x_start),': 1, 'int(y_start)),': 1, '(int(x_end),': 1, 'int(y_end)),': 1, '__name__': 1, ""'__main__':"": 1, 'tracker().start()': 1}","{'imp': 6, 'mpo': 6, 'por': 6, 'ort': 6, 'rt ': 6, 't l': 1, ' lo': 2, 'log': 3, 'ogg': 4, 'ggi': 2, 'gin': 2, 'ing': 8, 'ng\n': 1, 'g\n\n': 1, '\n\ni': 2, '\nim': 2, 't c': 1, ' cv': 16, 'cv2': 17, 'v2\n': 1, '2\ni': 1, 't n': 1, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 1, 'as ': 1, 's n': 1, ' np': 6, 'np\n': 1, 'p\n\n': 1, '\n\nf': 1, '\nfr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm a': 3, ' ar': 3, 'ar_': 4, 'r_d': 3, '_de': 3, 'dem': 3, 'emo': 4, 'mo.': 3, 'o.p': 2, '.po': 3, 'pos': 1, 'ose': 3, 'se_': 1, 'e_e': 1, '_es': 1, 'est': 1, 'sti': 3, 'tim': 6, 'ima': 3, 'mat': 3, 'ato': 3, 'tor': 11, 'or ': 8, 'r i': 3, ' im': 7, 't P': 1, ' Po': 2, 'Pos': 2, 'seE': 2, 'eEs': 2, 'Est': 2, 'or\n': 1, 'r\nf': 1, 'o.u': 1, '.ut': 1, 'uti': 1, 'til': 1, 'ils': 1, 'ls ': 1, 's i': 2, 't R': 1, ' RO': 2, 'ROI': 2, 'OIS': 2, 'ISe': 2, 'Sel': 2, 'ele': 6, 'lec': 6, 'ect': 15, 'cto': 8, 'or,': 3, 'r, ': 2, ', C': 2, ' CO': 4, 'COL': 4, 'OLO': 4, 'LOR': 4, 'OR_': 4, 'R_G': 2, '_GR': 2, 'GRE': 2, 'REE': 2, 'EEN': 2, 'EN,': 1, 'N, ': 1, 'R_B': 2, '_BL': 2, 'BLA': 2, 'LAC': 2, 'ACK': 2, 'CK\n': 2, 'K\nf': 1, '.pr': 6, 'pri': 5, 'rim': 5, 'imi': 5, 'mit': 5, 'iti': 5, 'tiv': 5, 'ive': 5, 'ves': 1, 'es ': 2, 't T': 1, ' Tr': 6, 'Tri': 2, 'ria': 2, 'ian': 2, 'ang': 2, 'ngl': 2, 'gle': 2, 'le\n': 1, 'e\n\n': 1, '\n\n\n': 2, '\n\nl': 1, '\nlo': 1, 'gge': 2, 'ger': 2, 'er ': 8, 'r =': 8, ' = ': 32, '= l': 1, 'ng.': 1, 'g.g': 1, '.ge': 3, 'get': 7, 'etL': 1, 'tLo': 1, 'Log': 1, 'er(': 3, 'r(_': 1, '(__': 1, '__n': 2, '_na': 2, 'nam': 3, 'ame': 13, 'me_': 5, 'e__': 2, '__)': 1, '_)\n': 1, ')\n\n': 4, '\n\nW': 1, '\nWI': 1, 'WIN': 4, 'IN_': 4, 'N_N': 4, '_NA': 4, 'NAM': 4, 'AME': 4, 'ME ': 1, 'E =': 1, ""= '"": 2, "" 'A"": 1, ""'Au"": 1, 'Aug': 1, 'ugm': 1, 'gme': 1, 'men': 1, 'ent': 1, 'nte': 9, 'ted': 2, 'ed ': 5, 'd R': 1, ' Re': 1, 'Rea': 1, 'eal': 1, 'ali': 4, 'lit': 1, 'ity': 1, 'ty ': 1, 'y -': 1, ' - ': 4, '- D': 1, ' De': 1, 'Dem': 1, 'mo ': 1, 'o 1': 1, "" 1'"": 1, ""1'\n"": 1, ""'\n\n"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's T': 1, 'Tra': 2, 'rac': 12, 'ack': 16, 'cke': 11, 'ker': 6, 'r(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 2, 'ct)': 4, 't):': 2, '):\n': 9, ':\n\n': 1, '\n\n ': 7, '\n  ': 74, '   ': 835, '  d': 5, ' de': 4, 'def': 4, 'ef ': 5, 'f _': 2, ' __': 2, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 7, 'sel': 46, 'elf': 42, 'lf)': 2, 'f):': 2, ':\n ': 16, '  s': 21, ' se': 35, 'lf.': 38, 'f.c': 8, '.ca': 2, 'cap': 2, 'ap ': 1, 'p =': 1, '= c': 5, 'v2.': 16, '2.V': 1, '.Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eoC': 1, 'oCa': 1, 'Cap': 1, 'apt': 1, 'ptu': 1, 'tur': 1, 'ure': 1, 're(': 1, 'e(0': 1, '(0)': 1, '0)\n': 2, ')\n ': 29, 'f.f': 6, '.fr': 6, 'fra': 10, 'ram': 10, 'me ': 5, 'e =': 6, '= N': 1, ' No': 4, 'Non': 4, 'one': 4, 'ne\n': 2, 'e\n ': 3, 'f.p': 8, '.pa': 4, 'pau': 4, 'aus': 4, 'use': 4, 'sed': 4, 'd =': 5, '= F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'f.t': 7, '.tr': 5, 'tra': 10, '= P': 1, 'or(': 2, 'r()': 2, '()\n': 7, '  c': 11, '2.n': 1, '.na': 1, 'med': 1, 'edW': 1, 'dWi': 1, 'Win': 1, 'ind': 1, 'ndo': 1, 'dow': 1, 'ow(': 2, 'w(W': 2, '(WI': 3, 'ME)': 1, 'E)\n': 1, 'f.r': 3, '.ro': 3, 'roi': 3, 'oi_': 3, 'i_s': 3, '_se': 3, '= R': 1, 'r(W': 1, 'ME,': 2, 'E, ': 2, ', s': 5, 'f.o': 2, '.on': 1, 'on_': 2, 'n_r': 2, '_re': 4, 'rec': 7, 't)\n': 2, 've ': 1, '= T': 1, 'le(': 2, 'e()': 1, '.co': 8, 'col': 6, 'olo': 6, 'lor': 6, 'or_': 6, 'r_b': 2, '_ba': 2, 'bas': 2, 'ase': 2, 'se ': 1, '= C': 2, 'EN\n': 1, 'N\n ': 1, 'r_l': 4, '_li': 4, 'lin': 9, 'ine': 6, 'nes': 5, 's =': 3, 'K\n\n': 1, 'f.g': 4, '.gr': 4, 'gra': 6, 'rap': 6, 'aph': 6, 'phi': 6, 'hic': 6, 'ics': 6, 'cs_': 4, 's_c': 5, '_co': 10, 'cou': 7, 'oun': 7, 'unt': 7, 'ter': 8, '= 0': 3, ' 0\n': 2, '0\n ': 1, '.ti': 3, 'ime': 3, 'e_c': 3, '0\n\n': 1, 'f o': 2, ' on': 1, 'ct(': 2, 't(s': 4, 'lf,': 2, 'f, ': 2, ', r': 4, ' re': 5, 'er.': 3, 'r.a': 1, '.ad': 1, 'add': 1, 'dd_': 1, 'd_t': 1, '_ta': 3, 'tar': 21, 'arg': 4, 'rge': 4, 'et(': 2, 'me,': 2, 'e, ': 5, 'f s': 1, ' st': 1, 'sta': 21, 'art': 17, 'rt(': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e T': 1, 'Tru': 2, 'rue': 2, 'ue:': 1, 'e:\n': 2, '  i': 10, ' is': 5, 'is_': 3, 's_r': 3, '_ru': 3, 'run': 3, 'unn': 3, 'nni': 3, 'nin': 3, 'ng ': 2, 'g =': 2, '= n': 6, ' no': 4, 'not': 4, 'ot ': 4, 't s': 3, 'd a': 1, ' an': 1, 'and': 1, 'nd ': 5, 'd s': 1, 'or.': 2, 'r.s': 1, '.se': 2, 'cte': 1, 'ed_': 1, 'd_r': 1, 'ct ': 1, 't i': 1, 'is ': 2, 's N': 2, ' if': 7, 'if ': 8, 'f i': 2, 'g o': 1, ' or': 3, 'r s': 1, 'e i': 1, 'ne:': 1, '  r': 2, 'ret': 3, 'et,': 2, 't, ': 11, ', f': 3, ' fr': 3, '= s': 4, 'ap.': 1, 'p.r': 1, '.re': 5, 'rea': 3, 'ead': 1, 'ad(': 1, 'd()': 1, ' sc': 1, 'sca': 3, 'cal': 3, 'ng_': 3, 'g_f': 3, '_fa': 3, 'fac': 3, 'act': 3, ' 0.': 5, '0.5': 5, '.5\n': 1, '5\n ': 1, '  f': 4, '2.r': 1, 'res': 3, 'esi': 1, 'siz': 1, 'ize': 1, 'ze(': 1, 'e(f': 1, '(fr': 1, ', N': 1, 'ne,': 1, ' fx': 1, 'fx=': 1, 'x=s': 1, '=sc': 2, ' fy': 1, 'fy=': 1, 'y=s': 1, 'r,\n': 1, ',\n ': 10, ' in': 6, 'int': 10, 'erp': 1, 'rpo': 1, 'pol': 2, 'ola': 1, 'lat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'on=': 1, 'n=c': 1, '=cv': 1, '2.I': 1, '.IN': 1, 'INT': 1, 'NTE': 1, 'TER': 1, 'ER_': 1, 'R_A': 1, '_AR': 1, 'ARE': 1, 'REA': 1, 'EA)': 1, 'A)\n': 1, 'f n': 2, 't r': 1, 'et:': 1, 't:\n': 1, '  b': 2, ' br': 2, 'bre': 2, 'eak': 2, 'ak\n': 2, 'k\n ': 1, '= f': 1, 'me.': 2, 'e.c': 2, 'cop': 2, 'opy': 2, 'py(': 2, 'y()': 2, 'img': 14, 'mg ': 1, 'ng:': 1, 'g:\n': 1, '  t': 1, ' tr': 5, 'ked': 5, 'r.t': 1, 'ck_': 1, 'k_t': 1, 'me)': 1, 'e)\n': 1, ' fo': 3, 'for': 3, ' it': 2, 'ite': 4, 'tem': 4, 'em ': 1, 'm i': 1, 'in ': 3, 'n t': 1, 'ed:': 1, 'd:\n': 1, '2.p': 2, 'oly': 1, 'lyl': 1, 'yli': 1, 'es(': 4, 's(i': 7, '(im': 10, 'mg,': 10, 'g, ': 10, ', [': 12, ' [n': 5, '[np': 5, 'np.': 10, 'p.i': 3, '.in': 3, 'nt3': 3, 't32': 4, '32(': 4, '2(i': 2, '(it': 2, 'em.': 2, 'm.q': 1, '.qu': 2, 'qua': 4, 'uad': 4, 'ad)': 1, 'd)]': 1, ')],': 7, '], ': 17, ', T': 1, 'ue,': 1, 'es,': 2, 's, ': 3, ', 2': 7, ' 2)': 4, '2)\n': 4, 'r (': 1, ' (x': 5, '(x,': 2, 'x, ': 2, ', y': 11, ' y)': 2, 'y) ': 1, ') i': 1, 'n n': 1, 'm.p': 1, 'poi': 1, 'oin': 2, 'nts': 2, 'ts_': 12, '_cu': 1, 'cur': 1, 'ur)': 1, 'r):': 1, '2.c': 1, '.ci': 1, 'cir': 1, 'irc': 1, 'rcl': 1, 'cle': 2, 'e(i': 2, ', (': 6, 'y),': 1, '), ': 10, ' 2,': 1, '2, ': 1, 'es)': 1, 's)\n': 1, '.ov': 1, 'ove': 2, 'ver': 21, 'erl': 2, 'rla': 2, 'lay': 2, 'ay_': 2, 'y_g': 2, '_gr': 2, 'cs(': 2, ', i': 5, 'em)': 1, 'm)\n': 1, 'r.d': 1, '.dr': 6, 'dra': 6, 'raw': 6, 'aw_': 1, 'w_r': 1, 't(i': 1, 'mg)': 2, 'g)\n': 2, '2.i': 1, '.im': 1, 'ims': 1, 'msh': 1, 'sho': 1, 'how': 1, ' ch': 4, 'ch ': 4, 'h =': 4, '2.w': 1, '.wa': 1, 'wai': 1, 'ait': 1, 'itK': 1, 'tKe': 1, 'Key': 1, 'ey(': 1, 'y(1': 1, '(1)': 1, '1)\n': 1, 'f c': 3, ' ==': 4, '== ': 4, '= o': 2, 'ord': 2, 'rd(': 2, ""d('"": 2, ""(' "": 1, ""' '"": 1, "" ')"": 1, ""'):"": 2, 'ed\n': 1, 'd\n ': 1, ""('c"": 1, ""'c'"": 1, ""c')"": 1, 'r.c': 1, '.cl': 1, 'lea': 1, 'ear': 1, 'r_t': 1, 'ets': 1, 'ts(': 2, 's()': 3, '= 2': 1, ' 27': 1, '27:': 1, '7:\n': 1, 'k\n\n': 1, ' ov': 1, 's(s': 1, ', t': 4, 'ed)': 1, 'd):': 1, '  x': 1, ' x_': 4, 'x_s': 8, '_st': 15, 'rt,': 9, ' y_': 10, 'y_s': 7, ', x': 1, 'x_e': 7, '_en': 13, 'end': 13, 'nd,': 6, 'd, ': 8, 'y_e': 6, '= t': 1, 'ed.': 2, 'd.t': 1, '.ta': 1, 'et.': 1, 't.r': 1, 'ct\n': 1, 't\n ': 1, '  q': 1, ' qu': 1, 'ad_': 2, 'd_3': 2, '_3d': 2, '3d ': 1, 'p.f': 2, '.fl': 2, 'flo': 13, 'loa': 2, 'oat': 2, 'at3': 1, '2([': 1, '([[': 3, '[[x': 1, '[x_': 4, ', 0': 21, ' 0]': 8, '0],': 7, ' [x': 3, '],\n': 4, '  [': 3, '0]]': 2, ']])': 3, '])\n': 3, '  h': 1, ' h,': 1, 'h, ': 1, ', w': 2, ' w ': 1, 'w =': 1, '= i': 1, 'mg.': 1, 'g.s': 1, '.sh': 1, 'sha': 3, 'hap': 3, 'ape': 3, 'pe[': 1, 'e[:': 1, '[:2': 2, ':2]': 2, '2]\n': 1, ']\n ': 2, '  K': 1, ' K ': 1, 'K =': 1, 'at6': 1, 't64': 1, '64(': 1, '4([': 1, '[[w': 1, '[w,': 1, 'w, ': 2, ' 0,': 6, '0, ': 12, '.5*': 2, '5*(': 2, '*(w': 1, '(w-': 1, 'w-1': 1, '-1)': 2, '1)]': 2, ' [0': 4, '[0,': 4, ' w,': 1, '*(h': 1, '(h-': 1, 'h-1': 1, ', 1': 4, ' 1.': 1, '1.0': 1, '.0]': 1, ' di': 3, 'dis': 3, 'ist': 3, 'st_': 3, 't_c': 3, 'coe': 3, 'oef': 3, 'f =': 1, 'p.z': 1, '.ze': 1, 'zer': 1, 'ero': 1, 'ros': 1, 'os(': 1, 's(4': 1, '(4)': 1, '4)\n': 1, ' rv': 2, 'rve': 2, 'vec': 4, 'ec,': 3, 'c, ': 3, ' tv': 2, 'tve': 2, 'ec ': 1, 'c =': 1, '2.s': 1, '.so': 1, 'sol': 1, 'olv': 1, 'lve': 1, 'veP': 1, 'ePn': 1, 'PnP': 1, 'nP(': 1, 'P(q': 1, '(qu': 1, '3d,': 1, 'd.q': 1, 'ad,': 1, ', K': 2, ' K,': 2, 'K, ': 2, ', d': 2, 'ef)': 2, 'f)\n': 1, 'r +': 2, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 1, '1\n ': 1, 'r %': 1, ' % ': 2, '% 2': 1, ' 20': 1, '20:': 1, '0:\n': 1, '= (': 1, ' (s': 1, ' + ': 2, '+ 1': 1, ' 1)': 1, '1) ': 1, ') %': 1, '% 8': 1, ' 8\n': 1, '8\n\n': 1, 've.': 3, 'e.s': 1, 'set': 1, 'et_': 3, 't_v': 2, '_ve': 2, 'ert': 19, 'rti': 2, 'tic': 2, 'ice': 2, 'ces': 2, 's([': 1, '[[0': 1, ' 1,': 2, '1, ': 8, ' [1': 2, '[1,': 2, '[0.': 1, '.5,': 2, '5, ': 6, 'er]': 1, 'r]]': 1, '  v': 3, ' ve': 10, 'rts': 17, 'ts ': 2, 'e.g': 2, '() ': 1, ') *': 2, ' * ': 2, '* [': 1, ' [(': 1, '[(x': 1, '(x_': 7, 'd -': 3, '- x': 2, 'rt)': 6, 't),': 4, ' (y': 1, '(y_': 3, '- y': 1, '),\n': 2, '  -': 2, ' -(': 1, '-(x': 1, 't) ': 1, '* 0': 1, '0.3': 1, '.3]': 1, '3] ': 1, '] +': 1, '+ (': 1, ' 0)': 4, 'pro': 1, 'roj': 1, 'oje': 1, 'ctP': 1, 'tPo': 1, 'Poi': 1, 's(v': 1, '(ve': 6, 'ts,': 1, 'f)[': 1, ')[0': 1, '[0]': 1, '0].': 1, '].r': 1, 'esh': 2, 'pe(': 2, 'e(-': 2, '(-1': 2, '-1,': 7, 's_f': 11, '_fl': 11, 'loo': 11, 'oor': 11, '2(v': 1, 'ts)': 1, 's).': 1, ').r': 1, '2.d': 5, 'awC': 5, 'wCo': 5, 'Con': 5, 'ont': 5, 'nto': 5, 'tou': 5, 'our': 5, 'urs': 5, 'rs(': 5, ' [v': 1, '[ve': 1, 'or[': 10, 'r[:': 2, '[:4': 1, ':4]': 3, '4]]': 1, ']],': 1, ', -': 9, ' -1': 5, 'se,': 1, ' -3': 5, '-3)': 5, '3)\n': 5, 'p.v': 4, '.vs': 4, 'vst': 4, 'tac': 4, 'ck(': 4, 'k((': 4, '((v': 4, '2],': 1, ', v': 6, 'r[4': 4, '[4:': 4, '4:5': 4, ':5]': 4, '5])': 4, ']))': 4, '))]': 4, '1,\n': 3, '  (': 4, ' (0': 2, '(0,': 2, ' 25': 2, '255': 4, '55,': 4, '0),': 4, 'r[1': 1, '[1:': 1, '1:3': 1, ':3]': 1, '3],': 1, ' (2': 2, '(25': 2, 'r[2': 1, '[2:': 1, '2:4': 1, '4],': 2, ' 15': 1, '150': 1, '50)': 1, 'r[3': 1, '[3:': 1, '3:4': 1, 'r[0': 1, '[0:': 1, '0:1': 1, ':1]': 1, '1],': 1, ' i,': 1, 'i, ': 1, ', j': 1, ' j ': 1, 'j i': 1, 'n s': 1, 't_e': 1, '_ed': 1, 'edg': 1, 'dge': 1, 'ges': 1, '():': 1, 'nd)': 3, 'd) ': 1, ') =': 1, '= v': 1, 'ts[': 2, 's[i': 1, '[i]': 1, 'i],': 1, 's[j': 1, '[j]': 1, 'j]\n': 1, '2.l': 1, '.li': 1, 'ne(': 1, ' (i': 2, '(in': 2, 'nt(': 4, 't(x': 2, 't(y': 2, 't))': 1, ')),': 2, 'd),': 1, 'd))': 1, '\nif': 1, '__ ': 1, '_ =': 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  T': 1, '().': 1, ').s': 1, '.st': 1, 't()': 1}"
Sebastian Castañeda,background_subtraction.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 3, 'cv2': 1, 'time': 1, 'numpy': 1, 'as': 1, 'np': 1, '#': 2, 'cap': 2, '=': 15, ""cv2.videocapture('sample2.mp4')"": 1, 'cv2.videocapture(0)': 1, 'fgbg_mog2': 1, 'cv2.createbackgroundsubtractormog2()': 1, 'fgbg_knn': 1, 'cv2.createbackgroundsubtractorknn()': 1, 'fgbg_mog': 1, 'cv2.bgsegm.createbackgroundsubtractormog()': 1, 'fgbg_gmg': 1, 'cv2.bgsegm.createbackgroundsubtractorgmg()': 1, 'firstframe': 3, 'none': 1, 'while(1):': 1, 'ret,': 1, 'frame': 2, 'cap.read()': 1, 'if': 2, 'is': 1, 'none:': 1, ""cv2.imshow('fondo',"": 1, 'firstframe)': 1, 'fgmask_mog2': 1, 'fgbg_mog2.apply(frame)': 1, 'fgmask_knn': 1, 'fgbg_knn.apply(frame)': 1, 'fgmask_mog': 1, 'fgbg_mog.apply(frame)': 1, 'fgmask_gmg': 1, 'fgbg_gmg.apply(frame)': 1, ""cv2.imshow('video',"": 1, 'frame)': 1, ""cv2.imshow('mog"": 1, ""2',"": 1, 'fgmask_mog2)': 1, ""cv2.imshow('knn',"": 1, 'fgmask_knn)': 1, ""cv2.imshow('mog',"": 1, 'fgmask_mog)': 1, ""cv2.imshow('gmg',"": 1, 'fgmask_gmg)': 1, 'key': 3, 'cv2.waitkey(30)': 1, '&': 1, '0xff': 1, 'cv2.waitkey(0)': 1, '==': 1, '27:': 1, 'break': 1, 'cap.release()': 1, 'cv2.destroyallwindows()': 1}","{'imp': 3, 'mpo': 3, 'por': 3, 'ort': 3, 'rt ': 3, 't c': 1, ' cv': 15, 'cv2': 16, 'v2\n': 1, '2\ni': 1, '\nim': 2, 't t': 1, ' ti': 1, 'tim': 1, 'ime': 1, 'me\n': 2, 'e\ni': 1, 't n': 1, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 1, 'as ': 1, 's n': 1, ' np': 1, 'np\n': 1, 'p\n\n': 1, '\n\n#': 1, '\n# ': 1, '# c': 1, ' ca': 2, 'cap': 4, 'ap ': 2, 'p =': 2, ' = ': 15, '= c': 9, 'v2.': 15, '2.V': 2, '.Vi': 2, 'Vid': 3, 'ide': 3, 'deo': 3, 'eoC': 2, 'oCa': 2, 'Cap': 2, 'apt': 2, 'ptu': 2, 'tur': 2, 'ure': 2, 're(': 2, ""e('"": 1, ""('s"": 1, ""'sa"": 1, 'sam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le2': 1, 'e2.': 1, '2.m': 1, '.mp': 1, 'mp4': 1, ""p4'"": 1, ""4')"": 1, ""')\n"": 1, ')\n\n': 7, '\n\nc': 2, '\nca': 2, 'e(0': 1, '(0)': 2, '0)\n': 2, '\n\nf': 2, '\nfg': 4, 'fgb': 8, 'gbg': 8, 'bg_': 8, 'g_M': 4, '_MO': 4, 'MOG': 8, 'OG2': 3, 'G2 ': 1, '2 =': 2, '2.c': 2, '.cr': 4, 'cre': 4, 'rea': 6, 'eat': 4, 'ate': 4, 'teB': 4, 'eBa': 4, 'Bac': 4, 'ack': 4, 'ckg': 4, 'kgr': 4, 'gro': 4, 'rou': 4, 'oun': 4, 'und': 4, 'ndS': 4, 'dSu': 4, 'Sub': 4, 'ubt': 4, 'btr': 4, 'tra': 4, 'rac': 4, 'act': 4, 'cto': 4, 'tor': 4, 'orM': 2, 'rMO': 2, 'G2(': 1, '2()': 1, '()\n': 7, ')\nf': 3, 'g_K': 2, '_KN': 2, 'KNN': 4, 'NN ': 1, 'N =': 1, 'orK': 1, 'rKN': 1, 'NN(': 1, 'N()': 1, 'OG ': 2, 'G =': 2, '2.b': 2, '.bg': 2, 'bgs': 2, 'gse': 2, 'seg': 2, 'egm': 2, 'gm.': 2, 'm.c': 2, 'OG(': 1, 'G()': 2, 'g_G': 2, '_GM': 2, 'GMG': 4, 'MG ': 1, 'orG': 1, 'rGM': 1, 'MG(': 1, '\nfi': 1, 'fir': 4, 'irs': 4, 'rst': 4, 'stF': 4, 'tFr': 4, 'Fra': 4, 'ram': 11, 'ame': 11, 'me ': 4, 'e =': 3, '= N': 1, ' No': 2, 'Non': 2, 'one': 2, 'ne\n': 1, 'e\n\n': 1, '\n\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le(': 1, 'e(1': 1, '(1)': 1, '1):': 1, '):\n': 1, ':\n ': 3, '\n  ': 17, '   ': 46, '  r': 1, ' re': 1, 'ret': 1, 'et,': 1, 't, ': 1, ', f': 7, ' fr': 3, 'fra': 7, 'ap.': 2, 'p.r': 2, '.re': 2, 'ead': 1, 'ad(': 1, 'd()': 1, '\n\n ': 4, '  i': 2, ' if': 2, 'if ': 2, 'f f': 1, ' fi': 3, 'e i': 1, ' is': 1, 'is ': 1, 's N': 1, 'ne:': 1, 'e:\n': 1, '  f': 5, '= f': 5, 'e\n ': 1, '  c': 6, '2.i': 6, '.im': 6, 'ims': 6, 'msh': 6, 'sho': 6, 'how': 6, 'ow(': 6, ""w('"": 6, ""('F"": 1, ""'Fo"": 1, 'Fon': 1, 'ond': 1, 'ndo': 2, ""do'"": 1, ""o',"": 2, ""', "": 6, 'me)': 6, 'e)\n': 6, ' fg': 12, 'fgm': 8, 'gma': 8, 'mas': 8, 'ask': 8, 'sk_': 8, 'k_m': 4, '_mo': 4, 'mog': 4, 'og2': 2, 'g2 ': 1, 'G2.': 1, '2.a': 1, '.ap': 4, 'app': 4, 'ppl': 4, 'ply': 4, 'ly(': 4, 'y(f': 4, '(fr': 4, ')\n ': 8, 'k_k': 2, '_kn': 2, 'knn': 2, 'nn ': 1, 'n =': 1, 'NN.': 1, 'N.a': 1, 'og ': 1, 'g =': 2, 'OG.': 1, 'G.a': 2, 'k_g': 2, '_gm': 2, 'gmg': 2, 'mg ': 1, 'MG.': 1, ""('V"": 1, ""'Vi"": 1, ""eo'"": 1, ""('M"": 2, ""'MO"": 2, 'G 2': 1, "" 2'"": 1, ""2',"": 1, 'g2)': 1, '2)\n': 1, ""('K"": 1, ""'KN"": 1, ""NN'"": 1, ""N',"": 1, 'nn)': 1, 'n)\n': 1, ""OG'"": 1, ""G',"": 2, 'og)': 1, 'g)\n': 2, ""('G"": 1, ""'GM"": 1, ""MG'"": 1, 'mg)': 1, '  k': 1, ' ke': 3, 'key': 3, 'ey ': 3, 'y =': 3, '2.w': 2, '.wa': 2, 'wai': 2, 'ait': 2, 'itK': 2, 'tKe': 2, 'Key': 2, 'ey(': 2, 'y(3': 1, '(30': 1, '30)': 1, '0) ': 1, ') &': 1, ' & ': 1, '& 0': 1, ' 0x': 1, '0xf': 1, 'xff': 1, 'ff\n': 1, 'f\n ': 1, '  #': 1, ' # ': 1, '# k': 1, 'y(0': 1, 'f k': 1, ' ==': 1, '== ': 1, '= 2': 1, ' 27': 1, '27:': 1, '7:\n': 1, '  b': 1, ' br': 1, 'bre': 1, 'eak': 1, 'ak\n': 1, 'k\n\n': 1, 'rel': 1, 'ele': 1, 'lea': 1, 'eas': 1, 'ase': 1, 'se(': 1, 'e()': 1, ')\nc': 1, '\ncv': 1, '2.d': 1, '.de': 1, 'des': 1, 'est': 1, 'str': 1, 'tro': 1, 'roy': 1, 'oyA': 1, 'yAl': 1, 'All': 1, 'llW': 1, 'lWi': 1, 'Win': 1, 'ind': 1, 'dow': 1, 'ows': 1, 'ws(': 1, 's()': 1}"
Sebastian Castañeda,cube.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 4, 'pygame': 1, 'from': 3, 'pygame.locals': 1, '*': 3, 'opengl.gl': 1, 'opengl.glu': 1, 'vertices': 1, '=': 3, '((1,': 1, '-1,': 4, '-1),': 4, '(1,': 3, '1,': 5, '(-1,': 4, '1),': 6, '1)': 2, ')': 2, 'edges': 1, '((0,': 1, '(0,': 2, '3),': 3, '4),': 3, '(2,': 3, '7),': 2, '(6,': 3, '(5,': 3, '7)': 1, 'def': 2, 'cube():': 1, 'glbegin(gl_lines)': 1, 'for': 3, 'edge': 1, 'in': 3, 'edges:': 1, 'vertex': 1, 'edge:': 1, 'glvertex3fv(vertices[vertex])': 1, 'glend()': 1, 'main():': 1, 'pygame.init()': 1, 'display': 1, '(800,600)': 1, 'pygame.display.set_mode(display,': 1, 'doublebuf|opengl)': 1, 'gluperspective(45,': 1, '(display[0]/display[1]),': 1, '0.1,': 1, '50.0)': 1, 'gltranslatef(0.0,': 1, '0.0,': 1, '-5)': 1, 'while': 1, 'true:': 1, 'event': 1, 'pygame.event.get():': 1, 'if': 1, 'event.type': 1, '==': 1, 'pygame.quit:': 1, 'pygame.quit()': 1, 'quit()': 1, 'glrotatef(1,': 1, '3,': 1, 'glclear(gl_color_buffer_bit': 1, '|': 1, 'gl_depth_buffer_bit)': 1, 'cube()': 1, 'pygame.display.flip()': 1, 'pygame.time.wait(10)': 1, 'main()': 1}","{'imp': 4, 'mpo': 4, 'por': 4, 'ort': 4, 'rt ': 4, 't p': 1, ' py': 9, 'pyg': 9, 'yga': 9, 'gam': 9, 'ame': 9, 'me\n': 1, 'e\nf': 1, '\nfr': 3, 'fro': 3, 'rom': 3, 'om ': 3, 'm p': 1, 'me.': 9, 'e.l': 1, '.lo': 1, 'loc': 1, 'oca': 1, 'cal': 1, 'als': 1, 'ls ': 1, 's i': 1, ' im': 3, 't *': 3, ' *\n': 3, '*\nf': 2, 'm O': 2, ' Op': 2, 'Ope': 2, 'pen': 2, 'enG': 2, 'nGL': 2, 'GL.': 2, 'L.G': 2, '.GL': 2, 'GL ': 1, 'L i': 1, 'GLU': 1, 'LU ': 1, 'U i': 1, '*\n\n': 1, '\n\nv': 1, '\nve': 1, 'ver': 4, 'ert': 5, 'rti': 2, 'tic': 2, 'ice': 2, 'ces': 2, 'es ': 2, 's =': 2, ' = ': 3, '= (': 3, ' ((': 2, '((1': 1, '(1,': 5, '1, ': 19, ', -': 9, ' -1': 8, '-1,': 8, '-1)': 4, '1),': 10, '),\n': 18, ',\n ': 18, '\n  ': 40, '   ': 272, '  (': 18, ' (1': 3, ', 1': 13, ' 1,': 5, ' (-': 4, '(-1': 4, ' 1)': 8, '1)\n': 2, ')\n ': 11, '  )': 2, ' )\n': 2, ')\n\n': 8, '\n\ne': 1, '\ned': 1, 'edg': 4, 'dge': 4, 'ges': 2, '((0': 1, '(0,': 3, '0, ': 5, ' (0': 2, ', 3': 4, ' 3)': 3, '3),': 3, ', 4': 3, ' 4)': 3, '4),': 3, ' (2': 3, '(2,': 3, '2, ': 3, ', 7': 3, ' 7)': 3, '7),': 2, ' (6': 3, '(6,': 3, '6, ': 3, ' (5': 3, '(5,': 3, '5, ': 4, '7)\n': 1, '\n\n\n': 3, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f C': 1, ' Cu': 2, 'Cub': 2, 'ube': 2, 'be(': 2, 'e()': 2, '():': 3, '):\n': 3, ':\n ': 7, '  g': 7, ' gl': 7, 'glB': 1, 'lBe': 1, 'Beg': 1, 'egi': 1, 'gin': 1, 'in(': 3, 'n(G': 1, '(GL': 2, 'GL_': 3, 'L_L': 1, '_LI': 1, 'LIN': 1, 'INE': 1, 'NES': 1, 'ES)': 1, 'S)\n': 1, '  f': 3, ' fo': 3, 'for': 3, 'or ': 3, 'r e': 2, ' ed': 3, 'ge ': 1, 'e i': 1, ' in': 3, 'in ': 3, 'n e': 2, 'es:': 1, 's:\n': 1, 'r v': 1, ' ve': 1, 'rte': 3, 'tex': 3, 'ex ': 1, 'x i': 1, 'ge:': 1, 'e:\n': 2, 'glV': 1, 'lVe': 1, 'Ver': 1, 'ex3': 1, 'x3f': 1, '3fv': 1, 'fv(': 1, 'v(v': 1, '(ve': 1, 'es[': 1, 's[v': 1, '[ve': 1, 'ex]': 1, 'x])': 1, '])\n': 1, 'glE': 1, 'lEn': 1, 'End': 1, 'nd(': 1, 'd()': 1, '()\n': 7, 'f m': 1, ' ma': 1, 'mai': 2, 'ain': 2, 'n()': 2, '  p': 5, 'e.i': 1, '.in': 1, 'ini': 1, 'nit': 1, 'it(': 4, 't()': 4, '  d': 1, ' di': 1, 'dis': 6, 'isp': 6, 'spl': 6, 'pla': 6, 'lay': 6, 'ay ': 1, 'y =': 1, ' (8': 1, '(80': 1, '800': 1, '00,': 1, '0,6': 1, ',60': 1, '600': 1, '00)': 1, '0)\n': 3, 'e.d': 2, '.di': 2, 'ay.': 2, 'y.s': 1, '.se': 1, 'set': 1, 'et_': 1, 't_m': 1, '_mo': 1, 'mod': 1, 'ode': 1, 'de(': 1, 'e(d': 1, '(di': 2, 'ay,': 1, 'y, ': 1, ', D': 1, ' DO': 1, 'DOU': 1, 'OUB': 1, 'UBL': 1, 'BLE': 1, 'LEB': 1, 'EBU': 1, 'BUF': 3, 'UF|': 1, 'F|O': 1, '|OP': 1, 'OPE': 1, 'PEN': 1, 'ENG': 1, 'NGL': 1, 'GL)': 1, 'L)\n': 1, '\n\n ': 4, 'glu': 1, 'luP': 1, 'uPe': 1, 'Per': 1, 'ers': 1, 'rsp': 1, 'spe': 1, 'pec': 1, 'ect': 1, 'cti': 1, 'tiv': 1, 'ive': 1, 've(': 1, 'e(4': 1, '(45': 1, '45,': 1, ', (': 1, ' (d': 1, 'ay[': 2, 'y[0': 1, '[0]': 1, '0]/': 1, ']/d': 1, '/di': 1, 'y[1': 1, '[1]': 1, '1])': 1, ']),': 1, '), ': 1, ', 0': 2, ' 0.': 2, '0.1': 1, '.1,': 1, ', 5': 1, ' 50': 1, '50.': 1, '0.0': 3, '.0)': 1, 'glT': 1, 'lTr': 1, 'Tra': 1, 'ran': 1, 'ans': 1, 'nsl': 1, 'sla': 1, 'lat': 1, 'ate': 2, 'tef': 2, 'ef(': 2, 'f(0': 1, '(0.': 1, '.0,': 2, ' -5': 1, '-5)': 1, '5)\n': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue:': 1, ' ev': 2, 'eve': 3, 'ven': 3, 'ent': 3, 'nt ': 1, 't i': 1, 'n p': 1, 'e.e': 1, '.ev': 1, 'nt.': 2, 't.g': 1, '.ge': 1, 'get': 1, 'et(': 1, '  i': 1, ' if': 1, 'if ': 1, 'f e': 1, 't.t': 1, '.ty': 1, 'typ': 1, 'ype': 1, 'pe ': 1, 'e =': 1, ' ==': 1, '== ': 1, '= p': 1, 'e.Q': 1, '.QU': 1, 'QUI': 1, 'UIT': 1, 'IT:': 1, 'T:\n': 1, 'e.q': 1, '.qu': 1, 'qui': 2, 'uit': 2, '  q': 1, ' qu': 1, 'glR': 1, 'lRo': 1, 'Rot': 1, 'ota': 1, 'tat': 1, 'f(1': 1, ' 3,': 1, '3, ': 1, 'glC': 1, 'lCl': 1, 'Cle': 1, 'lea': 1, 'ear': 1, 'ar(': 1, 'r(G': 1, 'L_C': 1, '_CO': 1, 'COL': 1, 'OLO': 1, 'LOR': 1, 'OR_': 1, 'R_B': 3, '_BU': 2, 'UFF': 2, 'FFE': 2, 'FER': 2, 'ER_': 2, '_BI': 2, 'BIT': 2, 'IT ': 1, 'T |': 1, ' | ': 1, '| G': 1, ' GL': 1, 'L_D': 1, '_DE': 1, 'DEP': 1, 'EPT': 1, 'PTH': 1, 'TH_': 1, 'H_B': 1, 'IT)': 1, 'T)\n': 1, '  C': 1, 'y.f': 1, '.fl': 1, 'fli': 1, 'lip': 1, 'ip(': 1, 'p()': 1, 'e.t': 1, '.ti': 1, 'tim': 1, 'ime': 1, 'e.w': 1, '.wa': 1, 'wai': 1, 'ait': 1, 't(1': 1, '(10': 1, '10)': 1, '\n\nm': 1, '\nma': 1}"
Sebastian Castañeda,detect_hog_images.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 7, 'logging': 1, 'from': 2, 'imutils.object_detection': 1, 'non_max_suppression': 1, 'imutils': 2, 'paths': 2, 'numpy': 1, 'as': 1, 'np': 1, 'argparse': 1, 'cv2': 1, 'logging.basicconfig(level=logging.debug)': 1, 'logger': 1, '=': 11, 'logging.getlogger(__name__)': 1, 'logger.debug(""starting': 1, 'pedestrian': 1, 'detection': 3, 'using': 2, 'hog': 3, '+': 6, 'linear': 1, 'svm..."")': 1, '#': 15, 'construct': 1, 'the': 11, 'argument': 1, 'parse': 2, 'and': 3, 'arguments': 1, 'ap': 1, 'argparse.argumentparser()': 1, 'ap.add_argument(""-i"",': 1, '""--images"",': 1, 'required=true,': 1, 'help=""path': 1, 'to': 5, 'images': 2, 'directory"")': 1, 'args': 1, 'vars(ap.parse_args())': 1, 'initialize': 1, 'descriptor/person': 1, 'detector': 1, 'cv2.hogdescriptor()': 1, 'hog.setsvmdetector(cv2.hogdescriptor_getdefaultpeopledetector())': 1, 'loop': 1, 'over': 1, 'image': 5, 'for': 4, 'imagepath': 1, 'in': 5, 'paths.list_images(args[""images""]):': 1, 'load': 1, 'resize': 1, 'it': 1, '(1)': 1, 'reduce': 1, 'time': 1, '(2)': 1, 'improve': 1, 'accuracy': 1, 'cv2.imread(imagepath)': 1, 'imutils.resize(image,': 1, 'width=min(400,': 1, 'image.shape[1]))': 1, 'orig': 1, 'image.copy()': 1, 'detect': 1, 'people': 2, '(rects,': 1, 'weights)': 1, 'hog.detectmultiscale(image,': 1, 'winstride=(4,': 1, '4),': 1, 'padding=(8,': 1, '8),': 1, 'scale=1.05)': 1, 'draw': 2, 'original': 2, 'bounding': 4, 'boxes': 5, '(x,': 3, 'y,': 3, 'w,': 4, 'h)': 2, 'rects:': 1, 'cv2.rectangle(orig,': 1, 'y),': 1, '(x': 1, 'y': 2, 'h),': 1, '(0,': 2, '0,': 1, '255),': 1, '2)': 2, 'apply': 1, 'non-maxima': 1, 'suppression': 1, 'a': 1, 'fairly': 1, 'large': 1, 'overlap': 1, 'threshold': 1, 'try': 1, 'maintain': 1, 'overlapping': 1, 'that': 1, 'are': 1, 'still': 1, 'rects': 1, 'np.array([[x,': 1, 'x': 1, 'h]': 1, 'rects])': 1, 'pick': 1, 'non_max_suppression(rects,': 1, 'probs=none,': 1, 'overlapthresh=0.65)': 1, 'final': 1, '(xa,': 2, 'ya,': 1, 'xb,': 1, 'yb)': 1, 'pick:': 1, 'cv2.rectangle(image,': 1, 'ya),': 1, '(xb,': 1, 'yb),': 1, '255,': 1, '0),': 1, 'show': 2, 'some': 1, 'information': 1, 'on': 1, 'number': 1, 'of': 1, 'filename': 1, 'imagepath[imagepath.rfind(""/"")': 1, '1:]': 1, 'logger.info(""%s:': 1, '%d': 2, 'boxes,': 1, 'after': 1, 'suppression"",': 1, 'filename,': 1, 'len(rects),': 1, 'len(pick))': 1, 'output': 1, 'cv2.imshow(""before': 1, 'nms"",': 2, 'orig)': 1, 'cv2.imshow(""after': 1, 'image)': 2, 'cv2.imshow(""people': 1, 'detector"",': 1, 'cv2.waitkey(0)': 1}","{'imp': 8, 'mpo': 7, 'por': 7, 'ort': 7, 'rt ': 7, 't l': 1, ' lo': 5, 'log': 7, 'ogg': 8, 'ggi': 4, 'gin': 6, 'ing': 13, 'ng\n': 2, 'g\n\n': 1, '\n\nf': 1, '\nfr': 2, 'fro': 2, 'rom': 2, 'om ': 2, 'm i': 2, ' im': 20, 'imu': 4, 'mut': 4, 'uti': 4, 'til': 5, 'ils': 4, 'ls.': 2, 's.o': 1, '.ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 20, 'ct_': 1, 't_d': 1, '_de': 1, 'det': 7, 'ete': 10, 'tec': 10, 'cti': 4, 'tio': 5, 'ion': 9, 'on ': 8, 'n i': 1, 't n': 2, ' no': 3, 'non': 3, 'on_': 2, 'n_m': 2, '_ma': 2, 'max': 3, 'ax_': 2, 'x_s': 2, '_su': 2, 'sup': 4, 'upp': 4, 'ppr': 4, 'pre': 4, 'res': 8, 'ess': 4, 'ssi': 4, 'sio': 4, 'on\n': 1, 'n\nf': 1, 'ls ': 1, 's i': 1, 't p': 3, ' pa': 6, 'pat': 4, 'ath': 8, 'ths': 3, 'hs\n': 2, 's\ni': 2, '\nim': 4, ' nu': 2, 'num': 2, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 1, 'as ': 1, 's n': 1, ' np': 2, 'np\n': 1, 'p\ni': 1, 't a': 2, ' ar': 5, 'arg': 9, 'rgp': 2, 'gpa': 2, 'par': 5, 'ars': 7, 'rse': 6, 'se\n': 1, 'e\ni': 1, 't i': 2, 'ls\n': 1, 't c': 1, ' cv': 9, 'cv2': 10, 'v2\n': 1, '2\n\n': 1, '\n\n\n': 1, '\n\nl': 1, '\nlo': 3, 'ng.': 3, 'g.b': 1, '.ba': 1, 'bas': 1, 'asi': 1, 'sic': 1, 'icC': 1, 'cCo': 1, 'Con': 1, 'onf': 1, 'nfi': 1, 'fig': 1, 'ig(': 1, 'g(l': 1, '(le': 1, 'lev': 1, 'eve': 1, 'vel': 1, 'el=': 1, 'l=l': 1, '=lo': 1, 'g.D': 1, '.DE': 1, 'DEB': 1, 'EBU': 1, 'BUG': 1, 'UG)': 1, 'G)\n': 1, ')\nl': 2, 'gge': 4, 'ger': 4, 'er ': 5, 'r =': 1, ' = ': 11, '= l': 1, 'g.g': 1, '.ge': 1, 'get': 2, 'etL': 1, 'tLo': 1, 'Log': 1, 'er(': 2, 'r(_': 1, '(__': 1, '__n': 1, '_na': 1, 'nam': 3, 'ame': 3, 'me_': 1, 'e__': 1, '__)': 1, '_)\n': 1, 'er.': 2, 'r.d': 1, '.de': 2, 'deb': 1, 'ebu': 1, 'bug': 1, 'ug(': 1, 'g(""': 1, '(""S': 1, '""St': 1, 'Sta': 1, 'tar': 1, 'art': 1, 'rti': 1, 'tin': 1, 'ng ': 7, 'g p': 1, ' pe': 3, 'ped': 1, 'ede': 1, 'des': 2, 'est': 1, 'str': 2, 'tri': 2, 'ria': 1, 'ian': 1, 'an ': 1, 'n d': 2, ' de': 6, 'n u': 1, ' us': 2, 'usi': 2, 'sin': 2, 'g H': 1, ' HO': 2, 'HOG': 4, 'OG ': 2, 'G +': 1, ' + ': 6, '+ L': 1, ' Li': 1, 'Lin': 1, 'ine': 1, 'nea': 1, 'ear': 1, 'ar ': 1, 'r S': 1, ' SV': 1, 'SVM': 2, 'VM.': 1, 'M..': 1, '...': 1, '..""': 1, '."")': 1, '"")\n': 2, ')\n\n': 9, '\n\n#': 3, '\n# ': 3, '# c': 3, ' co': 1, 'con': 1, 'ons': 1, 'nst': 1, 'tru': 1, 'ruc': 1, 'uct': 1, 'ct ': 2, 't t': 2, ' th': 13, 'the': 11, 'he ': 11, 'e a': 4, 'rgu': 4, 'gum': 4, 'ume': 4, 'men': 4, 'ent': 4, 'nt ': 1, 'se ': 2, ' an': 3, 'and': 3, 'nd ': 3, 'd p': 1, 'e t': 2, 'nts': 1, 'ts\n': 1, 's\na': 1, '\nap': 2, 'ap ': 2, 'p =': 1, '= a': 1, 'se.': 1, 'e.A': 1, '.Ar': 1, 'Arg': 1, 'ntP': 1, 'tPa': 1, 'Par': 1, 'ser': 1, 'r()': 3, '()\n': 3, ')\na': 2, 'ap.': 2, 'p.a': 2, '.ad': 1, 'add': 2, 'dd_': 1, 'd_a': 1, '_ar': 2, 'nt(': 1, 't(""': 1, '(""-': 1, '""-i': 1, '-i""': 1, 'i"",': 1, '"", ': 6, ', ""': 1, ' ""-': 1, '""--': 1, '--i': 1, '-im': 1, 'ima': 22, 'mag': 21, 'age': 21, 'ges': 5, 'es""': 2, 's"",': 1, ', r': 1, ' re': 6, 'req': 1, 'equ': 1, 'qui': 1, 'uir': 1, 'ire': 2, 'red': 2, 'ed=': 1, 'd=T': 1, '=Tr': 1, 'Tru': 1, 'rue': 1, 'ue,': 1, 'e, ': 6, ', h': 3, ' he': 1, 'hel': 1, 'elp': 1, 'lp=': 1, 'p=""': 1, '=""p': 1, '""pa': 1, 'th ': 2, 'h t': 1, ' to': 5, 'to ': 5, 'o i': 1, 'es ': 3, 's d': 1, ' di': 1, 'dir': 1, 'rec': 9, 'cto': 5, 'tor': 8, 'ory': 1, 'ry""': 1, 'y"")': 1, '\nar': 1, 'rgs': 3, 'gs ': 1, 's =': 2, '= v': 1, ' va': 1, 'var': 1, 'rs(': 1, 's(a': 2, '(ap': 1, 'p.p': 1, '.pa': 1, 'se_': 1, 'e_a': 1, 'gs(': 1, 's()': 1, '())': 2, '))\n': 4, '# i': 1, ' in': 7, 'ini': 1, 'nit': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'ali': 1, 'liz': 1, 'ize': 3, 'ze ': 2, 'e H': 1, 'G d': 1, 'esc': 3, 'scr': 3, 'cri': 3, 'rip': 3, 'ipt': 3, 'pto': 3, 'or/': 1, 'r/p': 1, '/pe': 1, 'per': 1, 'ers': 1, 'rso': 1, 'son': 1, 'or\n': 1, 'r\nh': 1, '\nho': 2, 'hog': 3, 'og ': 1, 'g =': 2, '= c': 2, 'v2.': 9, '2.H': 2, '.HO': 2, 'OGD': 2, 'GDe': 2, 'Des': 2, 'or(': 3, ')\nh': 1, 'og.': 2, 'g.s': 1, '.se': 1, 'set': 1, 'etS': 1, 'tSV': 1, 'VMD': 1, 'MDe': 1, 'Det': 3, 'r(c': 1, '(cv': 1, 'or_': 1, 'r_g': 1, '_ge': 1, 'etD': 1, 'tDe': 1, 'Def': 1, 'efa': 1, 'fau': 1, 'aul': 1, 'ult': 2, 'ltP': 1, 'tPe': 1, 'Peo': 2, 'eop': 4, 'opl': 4, 'ple': 4, 'leD': 1, 'eDe': 1, '# l': 2, 'loo': 1, 'oop': 1, 'op ': 1, 'p o': 1, ' ov': 4, 'ove': 5, 'ver': 4, 'r t': 1, 'e i': 6, 'ge ': 5, 'e p': 1, 's\nf': 1, '\nfo': 1, 'for': 6, 'or ': 4, 'r i': 1, 'geP': 4, 'ePa': 4, 'Pat': 4, 'h i': 1, 'in ': 6, 'n p': 2, 'hs.': 1, 's.l': 1, '.li': 1, 'lis': 1, 'ist': 1, 'st_': 1, 't_i': 1, '_im': 1, 'es(': 1, '(ar': 1, 'gs[': 1, 's[""': 1, '[""i': 1, '""im': 1, 's""]': 1, '""])': 1, ']):': 1, '):\n': 1, ':\n ': 3, '\n  ': 26, '   ': 60, '  #': 12, ' # ': 12, 'loa': 1, 'oad': 1, 'ad ': 1, 'd t': 2, 'd r': 1, 'esi': 2, 'siz': 2, ' it': 1, 'it ': 1, 'o (': 1, ' (1': 1, '(1)': 1, '1) ': 1, ') r': 1, 'edu': 1, 'duc': 1, 'uce': 1, 'ce ': 1, 'e d': 2, 'n t': 4, ' ti': 1, 'tim': 1, 'ime': 1, 'me\n': 1, 'e\n ': 3, '# a': 2, 'd (': 1, ' (2': 1, '(2)': 1, '2) ': 1, ') i': 4, 'mpr': 1, 'pro': 2, 'rov': 1, 've ': 1, 'n a': 1, ' ac': 1, 'acc': 1, 'ccu': 1, 'cur': 1, 'ura': 1, 'rac': 1, 'acy': 1, 'cy\n': 1, 'y\n ': 1, '  i': 2, 'e =': 3, '2.i': 4, '.im': 4, 'imr': 1, 'mre': 1, 'rea': 1, 'ead': 1, 'ad(': 1, 'd(i': 1, '(im': 4, 'th)': 1, 'h)\n': 1, ')\n ': 6, '= i': 3, 's.r': 1, '.re': 3, 'ze(': 1, 'e(i': 3, 'ge,': 3, ', w': 5, ' wi': 2, 'wid': 1, 'idt': 1, 'dth': 1, 'th=': 1, 'h=m': 1, '=mi': 1, 'min': 1, 'in(': 1, 'n(4': 1, '(40': 1, '400': 1, '00,': 1, '0, ': 4, ', i': 3, 'ge.': 2, 'e.s': 1, '.sh': 1, 'sha': 1, 'hap': 1, 'ape': 1, 'pe[': 1, 'e[1': 1, '[1]': 1, '1])': 1, ']))': 1, '  o': 1, ' or': 4, 'ori': 5, 'rig': 5, 'ig ': 1, 'e.c': 1, '.co': 1, 'cop': 1, 'opy': 1, 'py(': 1, 'y()': 1, '\n\n ': 6, '# d': 3, 'peo': 2, 'le ': 2, 'ge\n': 1, '  (': 1, ' (r': 1, '(re': 3, 'cts': 6, 'ts,': 2, 's, ': 3, ' we': 1, 'wei': 1, 'eig': 1, 'igh': 1, 'ght': 1, 'hts': 1, 'ts)': 2, 's) ': 1, ') =': 1, '= h': 1, ' ho': 1, 'g.d': 1, 'ctM': 1, 'tMu': 1, 'Mul': 1, 'lti': 1, 'tiS': 1, 'iSc': 1, 'Sca': 1, 'cal': 2, 'ale': 2, 'le(': 3, 'win': 1, 'inS': 1, 'nSt': 1, 'Str': 1, 'rid': 1, 'ide': 1, 'de=': 1, 'e=(': 1, '=(4': 1, '(4,': 1, '4, ': 1, ', 4': 1, ' 4)': 1, '4),': 1, '), ': 9, ', p': 2, 'pad': 1, 'ddi': 1, 'din': 5, 'ng=': 1, 'g=(': 1, '=(8': 1, '(8,': 1, '8, ': 1, ', 8': 1, ' 8)': 1, '8),': 1, ', s': 1, ' sc': 1, 'sca': 1, 'le=': 1, 'e=1': 1, '=1.': 1, '1.0': 1, '.05': 1, '05)': 1, '5)\n': 2, ' dr': 2, 'dra': 2, 'raw': 2, 'aw ': 2, 'w t': 3, 'e o': 3, 'igi': 2, 'ina': 3, 'nal': 3, 'al ': 3, 'l b': 3, ' bo': 10, 'bou': 4, 'oun': 4, 'und': 4, 'ndi': 4, 'g b': 4, 'box': 6, 'oxe': 6, 'xes': 6, 'es\n': 4, 's\n ': 4, '  f': 3, ' fo': 3, 'r (': 3, ' (x': 7, '(x,': 3, 'x, ': 4, ', y': 10, ' y,': 3, 'y, ': 3, ' w,': 4, 'w, ': 4, ' h)': 3, 'h) ': 2, 'n r': 2, 'ts:': 1, 's:\n': 1, '  c': 4, '2.r': 2, 'cta': 2, 'tan': 2, 'ang': 2, 'ngl': 2, 'gle': 2, 'e(o': 1, '(or': 1, 'ig,': 1, 'g, ': 1, ', (': 6, ' y)': 1, 'y),': 1, '(x ': 1, 'x +': 2, '+ w': 2, ' y ': 2, 'y +': 2, '+ h': 2, 'h),': 1, ' (0': 2, '(0,': 2, ', 0': 2, ' 0,': 1, ', 2': 4, ' 25': 2, '255': 2, '55)': 1, '5),': 1, ' 2)': 2, '2)\n': 2, ' ap': 1, 'app': 2, 'ppl': 1, 'ply': 1, 'ly ': 2, 'y n': 1, 'on-': 1, 'n-m': 1, '-ma': 1, 'axi': 1, 'xim': 1, 'ma ': 1, 'a s': 1, ' su': 2, 'o t': 2, 'e b': 1, 's u': 1, 'g a': 1, ' a\n': 1, 'a\n ': 1, '# f': 1, ' fa': 1, 'fai': 1, 'air': 1, 'irl': 1, 'rly': 1, 'y l': 1, ' la': 1, 'lar': 1, 'rge': 1, 'erl': 3, 'rla': 3, 'lap': 3, 'p t': 1, 'thr': 1, 'hre': 2, 'esh': 2, 'sho': 6, 'hol': 1, 'old': 1, 'ld ': 1, ' tr': 1, 'try': 1, 'ry ': 1, 'y t': 1, 'o m': 1, ' ma': 1, 'mai': 1, 'ain': 2, 'int': 1, 'nta': 1, 'tai': 1, 'n o': 2, 'ppi': 1, 'pin': 1, 'g\n ': 1, '# b': 1, 's t': 1, 'tha': 1, 'hat': 1, 'at ': 1, 'are': 1, 're ': 2, 'e s': 1, ' st': 1, 'sti': 1, 'ill': 1, 'll ': 1, 'l p': 1, 'le\n': 1, '  r': 1, 'ts ': 1, '= n': 2, 'np.': 1, '.ar': 1, 'arr': 1, 'rra': 1, 'ray': 1, 'ay(': 1, 'y([': 1, '([[': 1, '[[x': 1, '[x,': 1, ', x': 2, ' x ': 1, ' h]': 1, 'h] ': 1, '] f': 1, 'ts]': 1, 's])': 1, '])\n': 1, '  p': 1, ' pi': 2, 'pic': 3, 'ick': 3, 'ck ': 1, 'k =': 1, 'on(': 1, 'n(r': 2, ' pr': 1, 'rob': 1, 'obs': 1, 'bs=': 1, 's=N': 1, '=No': 1, 'Non': 1, 'one': 1, 'ne,': 1, ', o': 2, 'apT': 1, 'pTh': 1, 'Thr': 1, 'sh=': 1, 'h=0': 1, '=0.': 1, '0.6': 1, '.65': 1, '65)': 1, 'e f': 1, ' fi': 3, 'fin': 2, '(xA': 2, 'xA,': 2, 'A, ': 3, ' yA': 2, 'yA,': 1, ' xB': 1, 'xB,': 2, 'B, ': 2, ' yB': 2, 'yB)': 2, 'B) ': 1, 'ck:': 1, 'k:\n': 1, 'yA)': 1, 'A),': 1, '(xB': 1, 'B),': 1, '55,': 1, '5, ': 1, ' 0)': 1, '0),': 1, '# s': 2, ' sh': 2, 'how': 5, 'ow ': 2, 'w s': 1, ' so': 1, 'som': 1, 'ome': 1, 'me ': 2, 'inf': 2, 'nfo': 2, 'orm': 1, 'rma': 1, 'mat': 1, 'ati': 1, ' on': 1, 'e n': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'r o': 1, ' of': 1, 'of ': 1, 'f b': 1, 'fil': 2, 'ile': 2, 'len': 4, 'ena': 2, 'th[': 1, 'h[i': 1, '[im': 1, 'th.': 1, 'h.r': 1, '.rf': 1, 'rfi': 1, 'ind': 1, 'nd(': 1, 'd(""': 1, '(""/': 1, '""/""': 1, '/"")': 1, '"") ': 1, ') +': 1, '+ 1': 1, ' 1:': 1, '1:]': 1, ':]\n': 1, ']\n ': 1, '  l': 1, 'r.i': 1, '.in': 1, 'fo(': 1, 'o(""': 1, '(""%': 1, '""%s': 1, '%s:': 1, 's: ': 1, ': %': 1, ' %d': 2, '%d ': 2, 'd o': 1, 'es,': 1, ', %': 1, 'd a': 1, ' af': 1, 'aft': 1, 'fte': 2, 'ter': 2, 'r s': 1, 'on""': 1, 'n"",': 1, ', f': 1, 'me,': 1, ', l': 2, ' le': 2, 'en(': 2, 's),': 1, 'n(p': 1, '(pi': 1, 'ck)': 1, 'k))': 1, ' ou': 1, 'out': 1, 'utp': 1, 'tpu': 1, 'put': 1, 'ut ': 1, 'ims': 3, 'msh': 3, 'ow(': 3, 'w(""': 3, '(""B': 1, '""Be': 1, 'Bef': 1, 'efo': 1, 'ore': 1, 'e N': 1, ' NM': 2, 'NMS': 2, 'MS""': 2, 'S"",': 2, 'ig)': 1, 'g)\n': 1, '(""A': 1, '""Af': 1, 'Aft': 1, 'r N': 1, 'ge)': 2, 'e)\n': 2, '(""P': 1, '""Pe': 1, 'e D': 1, ' De': 1, 'or""': 1, 'r"",': 1, '2.w': 1, '.wa': 1, 'wai': 1, 'ait': 1, 'itK': 1, 'tKe': 1, 'Key': 1, 'ey(': 1, 'y(0': 1, '(0)': 1, '0)\n': 1}"
Sebastian Castañeda,detect_hog_video.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 4, 'cv2': 1, 'numpy': 1, 'as': 1, 'np': 1, 'imutils': 1, 'from': 1, 'imutils.object_detection': 1, 'non_max_suppression': 1, 'cap': 1, '=': 15, ""cv2.videocapture('time_square.mp4')"": 1, '#': 4, 'initialize': 1, 'the': 2, 'hog': 2, 'descriptor/person': 1, 'detector': 1, 'cv2.hogdescriptor()': 1, 'hog.setsvmdetector(cv2.hogdescriptor_getdefaultpeopledetector())': 1, 'winstride': 1, '(4,': 2, '4)': 2, 'padding': 1, 'scale': 1, '1.05': 1, 'rect_color': 1, '(0,': 1, '255,': 1, '0)': 1, 'frame_count': 2, '0': 1, 'cv2.namedwindow(""peopledetection"",': 1, 'cv2.window_gui_expanded)': 1, 'while(true):': 1, 'ret,': 1, 'frame': 2, 'cap.read()': 1, '+=': 1, '1': 1, 'if': 2, '(frame_count': 1, '%': 1, '3)': 1, '!=': 1, '0:': 1, 'continue': 1, 'imutils.resize(frame,': 1, 'width=min(400,': 1, 'frame.shape[1]))': 1, '(rects,': 1, 'weights)': 1, 'hog.detectmultiscale(frame,': 1, 'winstride=winstride,': 1, 'padding=padding,': 1, 'scale=scale)': 1, 'rects': 2, 'np.array([[x,': 1, 'y,': 2, 'x': 1, '+': 2, 'w,': 2, 'y': 1, 'h]': 1, 'for': 2, '(x,': 1, 'h)': 1, 'in': 2, 'rects])': 1, 'pick': 2, 'non_max_suppression(rects,': 1, 'probs=none,': 1, 'overlapthresh=0.65)': 1, 'draw': 1, 'final': 1, 'bounding': 1, 'boxes': 1, '(xa,': 2, 'ya,': 1, 'xb,': 1, 'yb)': 1, 'pick:': 1, 'cv2.rectangle(frame,': 1, 'ya),': 1, '(xb,': 1, 'yb),': 1, 'rect_color,': 1, '2)': 1, ""cv2.imshow('peopledetection',"": 1, 'frame)': 1, 'key': 3, 'cv2.waitkey(30)': 1, '&': 1, '0xff': 1, 'cv2.waitkey(0)': 1, '==': 1, '27:': 1, 'break': 1, 'cap.release()': 1, 'cv2.destroyallwindows()': 1}","{'imp': 4, 'mpo': 4, 'por': 4, 'ort': 4, 'rt ': 4, 't c': 1, ' cv': 8, 'cv2': 11, 'v2\n': 1, '2\n\n': 1, '\n\ni': 2, '\nim': 2, 't n': 2, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 1, 'as ': 1, 's n': 1, ' np': 2, 'np\n': 1, 'p\n\n': 1, 't i': 1, ' im': 4, 'imu': 3, 'mut': 3, 'uti': 3, 'til': 3, 'ils': 3, 'ls\n': 1, 's\nf': 1, '\nfr': 2, 'fro': 1, 'rom': 1, 'om ': 1, 'm i': 1, 'ls.': 2, 's.o': 1, '.ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ect': 16, 'ct_': 3, 't_d': 1, '_de': 1, 'det': 3, 'ete': 7, 'tec': 7, 'cti': 3, 'tio': 3, 'ion': 5, 'on ': 2, 'n i': 1, ' no': 2, 'non': 2, 'on_': 2, 'n_m': 2, '_ma': 2, 'max': 2, 'ax_': 2, 'x_s': 2, '_su': 2, 'sup': 2, 'upp': 2, 'ppr': 2, 'pre': 2, 'res': 4, 'ess': 2, 'ssi': 2, 'sio': 2, 'on\n': 1, 'n\n\n': 1, '\n\nc': 3, '\nca': 2, 'cap': 3, 'ap ': 1, 'p =': 1, ' = ': 15, '= c': 5, 'v2.': 10, '2.V': 1, '.Vi': 1, 'Vid': 1, 'ide': 4, 'deo': 1, 'eoC': 1, 'oCa': 1, 'Cap': 1, 'apt': 1, 'ptu': 1, 'tur': 1, 'ure': 1, 're(': 1, ""e('"": 1, ""('t"": 1, ""'ti"": 1, 'tim': 1, 'ime': 1, 'me_': 4, 'e_s': 1, '_sq': 1, 'squ': 1, 'qua': 1, 'uar': 1, 'are': 1, 're.': 1, 'e.m': 1, '.mp': 1, 'mp4': 1, ""p4'"": 1, ""4')"": 1, ""')\n"": 1, ')\n\n': 9, '\n\n#': 1, '\n# ': 1, '# i': 1, ' in': 3, 'ini': 1, 'nit': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'ali': 1, 'liz': 1, 'ize': 2, 'ze ': 1, 'e t': 1, ' th': 2, 'the': 2, 'he ': 2, 'e H': 1, ' HO': 1, 'HOG': 3, 'OG ': 1, 'G d': 1, ' de': 2, 'des': 2, 'esc': 3, 'scr': 3, 'cri': 3, 'rip': 3, 'ipt': 3, 'pto': 3, 'tor': 6, 'or/': 1, 'r/p': 1, '/pe': 1, 'per': 1, 'ers': 1, 'rso': 1, 'son': 1, 'n d': 1, 'cto': 3, 'or\n': 1, 'r\nh': 1, '\nho': 2, 'hog': 3, 'og ': 1, 'g =': 2, '2.H': 2, '.HO': 2, 'OGD': 2, 'GDe': 2, 'Des': 2, 'or(': 3, 'r()': 2, '()\n': 4, ')\nh': 1, 'og.': 2, 'g.s': 1, '.se': 1, 'set': 1, 'etS': 1, 'tSV': 1, 'SVM': 1, 'VMD': 1, 'MDe': 1, 'Det': 4, 'r(c': 1, '(cv': 1, 'or_': 1, 'r_g': 1, '_ge': 1, 'get': 1, 'etD': 1, 'tDe': 1, 'Def': 1, 'efa': 1, 'fau': 1, 'aul': 1, 'ult': 2, 'ltP': 1, 'tPe': 1, 'Peo': 3, 'eop': 3, 'opl': 3, 'ple': 3, 'leD': 3, 'eDe': 3, '())': 1, '))\n': 2, '\n\nw': 2, '\nwi': 1, 'win': 3, 'inS': 3, 'nSt': 3, 'Str': 3, 'tri': 3, 'rid': 3, 'de ': 1, 'e =': 4, '= (': 3, ' (4': 2, '(4,': 2, '4, ': 2, ', 4': 2, ' 4)': 2, '4)\n': 2, ')\np': 1, '\npa': 1, 'pad': 3, 'add': 3, 'ddi': 3, 'din': 4, 'ing': 4, 'ng ': 2, ')\ns': 1, '\nsc': 1, 'sca': 3, 'cal': 4, 'ale': 4, 'le ': 1, '= 1': 2, ' 1.': 1, '1.0': 1, '.05': 1, '05\n': 1, '5\nr': 1, '\nre': 1, 'rec': 8, 't_c': 2, '_co': 5, 'col': 2, 'olo': 2, 'lor': 2, 'or ': 3, 'r =': 1, ' (0': 1, '(0,': 1, '0, ': 2, ', 2': 2, ' 25': 1, '255': 1, '55,': 1, '5, ': 1, ', 0': 1, ' 0)': 1, '0)\n': 2, '\n\nf': 1, 'fra': 10, 'ram': 10, 'ame': 11, 'e_c': 3, 'cou': 3, 'oun': 4, 'unt': 3, 'nt ': 3, 't =': 1, '= 0': 2, ' 0\n': 1, '0\n\n': 1, '\ncv': 2, '2.n': 1, '.na': 1, 'nam': 1, 'med': 1, 'edW': 1, 'dWi': 1, 'Win': 2, 'ind': 2, 'ndo': 2, 'dow': 2, 'ow(': 2, 'w(""': 1, '(""P': 1, '""Pe': 1, 'on""': 1, 'n"",': 1, '"", ': 1, ', c': 1, '2.W': 1, '.WI': 1, 'WIN': 1, 'IND': 1, 'NDO': 1, 'DOW': 1, 'OW_': 1, 'W_G': 1, '_GU': 1, 'GUI': 1, 'UI_': 1, 'I_E': 1, '_EX': 1, 'EXP': 1, 'XPA': 1, 'PAN': 1, 'AND': 1, 'NDE': 1, 'DED': 1, 'ED)': 1, 'D)\n': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le(': 3, 'e(T': 1, '(Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e):': 1, '):\n': 1, ':\n ': 4, '\n  ': 17, '   ': 46, '  r': 2, ' re': 5, 'ret': 1, 'et,': 1, 't, ': 1, ', f': 3, ' fr': 5, 'me ': 2, ' ca': 1, 'ap.': 2, 'p.r': 2, '.re': 4, 'rea': 2, 'ead': 1, 'ad(': 1, 'd()': 1, '\n\n ': 8, '  f': 3, 't +': 1, ' +=': 1, '+= ': 1, ' 1\n': 1, '1\n\n': 1, '  i': 2, ' if': 2, 'if ': 2, 'f (': 1, ' (f': 1, '(fr': 4, 't %': 1, ' % ': 1, '% 3': 1, ' 3)': 1, '3) ': 1, ') !': 1, ' !=': 1, '!= ': 1, ' 0:': 1, '0:\n': 1, '  c': 3, ' co': 1, 'con': 1, 'ont': 1, 'nti': 1, 'tin': 1, 'inu': 1, 'nue': 1, 'ue\n': 1, 'e\n\n': 1, '= i': 1, 's.r': 1, 'esi': 1, 'siz': 1, 'ze(': 1, 'e(f': 3, 'me,': 3, 'e, ': 5, ', w': 4, ' wi': 2, 'wid': 1, 'idt': 1, 'dth': 1, 'th=': 1, 'h=m': 1, '=mi': 1, 'min': 1, 'in(': 1, 'n(4': 1, '(40': 1, '400': 1, '00,': 1, 'me.': 1, 'e.s': 1, '.sh': 1, 'sha': 1, 'hap': 1, 'ape': 1, 'pe[': 1, 'e[1': 1, '[1]': 1, '1])': 1, ']))': 1, '  (': 1, ' (r': 1, '(re': 2, 'cts': 5, 'ts,': 2, 's, ': 2, ' we': 1, 'wei': 1, 'eig': 1, 'igh': 1, 'ght': 1, 'hts': 1, 'ts)': 1, 's) ': 1, ') =': 1, '= h': 1, ' ho': 1, 'g.d': 1, '.de': 2, 'ctM': 1, 'tMu': 1, 'Mul': 1, 'lti': 1, 'tiS': 1, 'iSc': 1, 'Sca': 1, 'de=': 1, 'e=w': 1, '=wi': 1, 'de,': 1, ', p': 2, ' pa': 1, 'ng=': 1, 'g=p': 1, '=pa': 1, 'ng,': 1, 'g, ': 1, ', s': 1, ' sc': 1, 'le=': 1, 'e=s': 1, '=sc': 1, 'le)': 1, 'e)\n': 2, 'ts ': 1, 's =': 1, '= n': 2, 'np.': 1, 'p.a': 1, '.ar': 1, 'arr': 1, 'rra': 1, 'ray': 1, 'ay(': 1, 'y([': 1, '([[': 1, '[[x': 1, '[x,': 1, 'x, ': 2, ', y': 7, ' y,': 2, 'y, ': 2, ', x': 2, ' x ': 1, 'x +': 1, ' + ': 2, '+ w': 1, ' w,': 2, 'w, ': 2, ' y ': 1, 'y +': 1, '+ h': 1, ' h]': 1, 'h] ': 1, '] f': 1, ' fo': 2, 'for': 2, 'r (': 2, ' (x': 4, '(x,': 1, ', h': 1, ' h)': 1, 'h) ': 1, ') i': 2, 'in ': 2, 'n r': 1, 'ts]': 1, 's])': 1, '])\n': 1, ')\n ': 3, '  p': 1, ' pi': 3, 'pic': 3, 'ick': 3, 'ck ': 2, 'k =': 2, 'on(': 1, 'n(r': 1, ' pr': 1, 'pro': 1, 'rob': 1, 'obs': 1, 'bs=': 1, 's=N': 1, '=No': 1, 'Non': 1, 'one': 1, 'ne,': 1, ', o': 1, ' ov': 1, 'ove': 1, 'ver': 1, 'erl': 1, 'rla': 1, 'lap': 1, 'apT': 1, 'pTh': 1, 'Thr': 1, 'hre': 1, 'esh': 1, 'sh=': 1, 'h=0': 1, '=0.': 1, '0.6': 1, '.65': 1, '65)': 1, '5)\n': 1, '  #': 3, ' # ': 3, '# p': 1, '= r': 1, 'ts\n': 1, 's\n\n': 1, '# d': 1, ' dr': 1, 'dra': 1, 'raw': 1, 'aw ': 1, 'w t': 1, 'e f': 1, ' fi': 1, 'fin': 1, 'ina': 1, 'nal': 1, 'al ': 1, 'l b': 1, ' bo': 2, 'bou': 1, 'und': 1, 'ndi': 1, 'g b': 1, 'box': 1, 'oxe': 1, 'xes': 1, 'es\n': 1, 's\n ': 1, '(xA': 2, 'xA,': 2, 'A, ': 3, ' yA': 2, 'yA,': 1, ' xB': 1, 'xB,': 2, 'B, ': 2, ' yB': 2, 'yB)': 2, 'B) ': 1, 'n p': 1, 'ck:': 1, 'k:\n': 1, '2.r': 1, 'cta': 1, 'tan': 1, 'ang': 1, 'ngl': 1, 'gle': 1, ', (': 2, 'yA)': 1, 'A),': 1, '), ': 2, '(xB': 1, 'B),': 1, ', r': 1, 'or,': 1, 'r, ': 1, ' 2)': 1, '2)\n': 1, '2.i': 1, '.im': 1, 'ims': 1, 'msh': 1, 'sho': 1, 'how': 1, ""w('"": 1, ""('P"": 1, ""'Pe"": 1, ""on'"": 1, ""n',"": 1, ""', "": 1, 'me)': 1, '  k': 1, ' ke': 3, 'key': 3, 'ey ': 3, 'y =': 3, '2.w': 2, '.wa': 2, 'wai': 2, 'ait': 2, 'itK': 2, 'tKe': 2, 'Key': 2, 'ey(': 2, 'y(3': 1, '(30': 1, '30)': 1, '0) ': 1, ') &': 1, ' & ': 1, '& 0': 1, ' 0x': 1, '0xf': 1, 'xff': 1, 'ff\n': 1, 'f\n ': 1, '# k': 1, 'y(0': 1, '(0)': 1, 'f k': 1, ' ==': 1, '== ': 1, '= 2': 1, ' 27': 1, '27:': 1, '7:\n': 1, '  b': 1, ' br': 1, 'bre': 1, 'eak': 1, 'ak\n': 1, 'k\n\n': 1, 'rel': 1, 'ele': 1, 'lea': 1, 'eas': 1, 'ase': 1, 'se(': 1, 'e()': 1, ')\nc': 1, '2.d': 1, 'est': 1, 'str': 1, 'tro': 1, 'roy': 1, 'oyA': 1, 'yAl': 1, 'All': 1, 'llW': 1, 'lWi': 1, 'ows': 1, 'ws(': 1, 's()': 1}"
Sebastian Castañeda,import pygame.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 2, 'pygame': 1, 'from': 1, 'opengl.gl': 1, '*': 1, 'def': 2, 'mtl(filename):': 1, 'contents': 2, '=': 31, '{}': 2, 'mtl': 4, 'none': 2, 'for': 5, 'line': 2, 'in': 7, 'open(filename,': 2, '""r""):': 2, 'if': 13, ""line.startswith('#'):"": 2, 'continue': 4, 'values': 2, 'line.split()': 2, 'not': 2, 'values:': 2, 'values[0]': 8, '==': 7, ""'newmtl':"": 1, 'contents[values[1]]': 1, 'elif': 7, 'is': 1, 'none:': 1, 'raise': 1, 'valueerror(""mtl': 1, 'file': 1, ""doesn't"": 1, 'start': 1, 'with': 1, 'newmtl': 1, 'stmt"")': 1, ""'map_kd':"": 1, '#': 3, 'load': 1, 'the': 1, 'texture': 1, 'referred': 1, 'to': 1, 'by': 1, 'this': 1, 'declaration': 1, 'mtl[values[0]]': 2, 'values[1]': 2, 'surf': 1, ""pygame.image.load(mtl['map_kd'])"": 1, 'image': 1, 'pygame.image.tostring(surf,': 1, ""'rgba',"": 1, '1)': 1, 'ix,': 2, 'iy': 1, 'surf.get_rect().size': 1, 'texid': 1, ""mtl['texture_kd']"": 1, 'glgentextures(1)': 1, 'glbindtexture(gl_texture_2d,': 2, 'texid)': 1, 'gltexparameteri(gl_texture_2d,': 2, 'gl_texture_min_filter,': 1, 'gl_linear)': 2, 'gl_texture_mag_filter,': 1, 'glteximage2d(gl_texture_2d,': 1, '0,': 2, 'gl_rgba,': 2, 'iy,': 1, 'gl_unsigned_byte,': 1, 'image)': 1, 'else:': 4, 'map(float,': 1, 'values[1:])': 1, 'return': 1, 'class': 1, 'obj:': 1, '__init__(self,': 1, 'filename,': 1, 'swapyz=false):': 1, '""""""loads': 1, 'a': 1, 'wavefront': 1, 'obj': 1, 'file.': 1, '""""""': 1, 'self.vertices': 1, '[]': 7, 'self.normals': 1, 'self.texcoords': 1, 'self.faces': 1, 'material': 3, ""'v':"": 1, 'v': 5, 'list(map(float,': 2, 'values[1:4]))': 2, 'swapyz:': 2, 'v[0],': 2, 'v[2],': 2, 'v[1]': 2, 'self.vertices.append(v)': 1, ""'vn':"": 1, 'self.normals.append(v)': 1, ""'vt':"": 1, 'self.texcoords.append(map(float,': 1, 'values[1:3]))': 1, ""('usemtl',"": 1, ""'usemat'):"": 1, ""'mtllib':"": 1, 'self.mtl': 1, 'mtl(values[1])': 1, ""'f':"": 1, 'face': 3, 'texcoords': 1, 'norms': 1, 'values[1:]:': 1, 'w': 1, ""v.split('/')"": 1, 'face.append(int(w[0]))': 1, 'len(w)': 2, '>=': 2, '2': 1, 'and': 2, 'len(w[1])': 1, '>': 4, '0:': 4, 'texcoords.append(int(w[1]))': 1, 'texcoords.append(0)': 1, '3': 1, 'len(w[2])': 1, 'norms.append(int(w[2]))': 1, 'norms.append(0)': 1, 'self.faces.append((face,': 1, 'norms,': 1, 'texcoords,': 1, 'material))': 1, 'self.gl_list': 1, 'glgenlists(1)': 1, 'glnewlist(self.gl_list,': 1, 'gl_compile)': 1, 'glenable(gl_texture_2d)': 1, 'glfrontface(gl_ccw)': 1, 'self.faces:': 1, 'vertices,': 1, 'normals,': 1, 'texture_coords,': 1, 'self.mtl[material]': 1, ""'texture_kd'"": 1, 'mtl:': 1, 'use': 2, 'diffuse': 2, 'texmap': 1, ""mtl['texture_kd'])"": 1, 'just': 1, 'colour': 1, ""glcolor(*mtl['kd'])"": 1, 'glbegin(gl_polygon)': 1, 'i': 1, 'range(len(vertices)):': 1, 'normals[i]': 1, 'glnormal3fv(self.normals[normals[i]': 1, '-': 3, '1])': 3, 'texture_coords[i]': 1, 'gltexcoord2fv(self.texcoords[texture_coords[i]': 1, 'glvertex3fv(self.vertices[vertices[i]': 1, 'glend()': 1, 'gldisable(gl_texture_2d)': 1, 'glendlist()': 1}","{'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 3, 't p': 1, ' py': 3, 'pyg': 3, 'yga': 3, 'gam': 3, 'ame': 9, 'me\n': 1, 'e\nf': 1, '\nfr': 1, 'fro': 2, 'rom': 1, 'om ': 1, 'm O': 1, ' Op': 1, 'Ope': 1, 'pen': 12, 'enG': 1, 'nGL': 1, 'GL.': 1, 'L.G': 1, '.GL': 1, 'GL ': 1, 'L i': 1, ' im': 3, 't *': 1, ' *\n': 1, '*\n\n': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 2, 'ef ': 2, 'f M': 1, ' MT': 2, 'MTL': 2, 'TL(': 2, 'L(f': 1, '(fi': 3, 'fil': 6, 'ile': 6, 'len': 9, 'ena': 4, 'nam': 4, 'me)': 1, 'e):': 2, '):\n': 8, ':\n ': 32, '\n  ': 94, '   ': 1036, '  c': 5, ' co': 8, 'con': 7, 'ont': 9, 'nte': 3, 'ten': 3, 'ent': 3, 'nts': 3, 'ts ': 1, 's =': 9, ' = ': 31, '= {': 2, ' {}': 2, '{}\n': 2, '}\n ': 2, '  m': 7, ' mt': 9, 'mtl': 18, 'tl ': 7, 'l =': 7, '= N': 2, ' No': 3, 'Non': 3, 'one': 3, 'ne\n': 2, 'e\n ': 7, '  f': 7, ' fo': 5, 'for': 5, 'or ': 5, 'r l': 2, ' li': 8, 'lin': 6, 'ine': 6, 'ne ': 2, 'e i': 3, ' in': 7, 'in ': 7, 'n o': 2, ' op': 2, 'ope': 2, 'en(': 7, 'n(f': 2, 'me,': 3, 'e, ': 4, ', ""': 2, ' ""r': 2, '""r""': 2, 'r"")': 2, '""):': 2, '  i': 15, ' if': 13, 'if ': 20, 'f l': 4, 'ne.': 4, 'e.s': 4, '.st': 2, 'sta': 3, 'tar': 3, 'art': 3, 'rts': 2, 'tsw': 2, 'swi': 2, 'wit': 3, 'ith': 3, 'th(': 2, ""h('"": 2, ""('#"": 2, ""'#'"": 2, ""#')"": 2, ""'):"": 3, 'nti': 4, 'tin': 4, 'inu': 4, 'nue': 4, 'ue\n': 4, '  v': 7, ' va': 19, 'val': 23, 'alu': 24, 'lue': 24, 'ues': 23, 'es ': 4, '= l': 4, '.sp': 3, 'spl': 3, 'pli': 3, 'lit': 3, 'it(': 3, 't()': 4, '()\n': 4, ')\n ': 34, 'f n': 3, ' no': 8, 'not': 2, 'ot ': 2, 't v': 2, 'es:': 3, 's:\n': 3, 'f v': 8, 'es[': 21, 's[0': 10, '[0]': 13, '0] ': 8, '] =': 11, ' ==': 7, '== ': 7, ""= '"": 7, "" 'n"": 1, ""'ne"": 1, 'new': 2, 'ewm': 2, 'wmt': 2, ""tl'"": 2, ""l':"": 1, ""':\n"": 7, '= c': 1, 'ts[': 1, 's[v': 2, '[va': 3, 's[1': 9, '[1]': 8, '1]]': 1, ']] ': 3, '  e': 11, ' el': 11, 'eli': 7, 'lif': 7, 'f m': 1, 'l i': 1, ' is': 1, 'is ': 2, 's N': 1, 'ne:': 1, 'e:\n': 5, '  r': 2, ' ra': 2, 'rai': 1, 'ais': 1, 'ise': 1, 'se ': 5, 'e V': 1, ' Va': 1, 'Val': 1, 'ueE': 1, 'eEr': 1, 'Err': 1, 'rro': 1, 'ror': 1, 'or(': 2, 'r(""': 1, '(""m': 1, '""mt': 1, 'l f': 1, ' fi': 3, 'le ': 1, 'e d': 3, ' do': 1, 'doe': 1, 'oes': 1, 'esn': 1, ""sn'"": 1, ""n't"": 1, ""'t "": 1, 't s': 1, ' st': 2, 't w': 1, ' wi': 1, 'th ': 1, 'h n': 1, ' ne': 1, 'l s': 1, 'stm': 1, 'tmt': 1, 'mt""': 1, 't"")': 1, '"")\n': 1, "" 'm"": 2, ""'ma"": 2, 'map': 7, 'ap_': 2, 'p_K': 2, '_Kd': 5, ""Kd'"": 6, ""d':"": 1, '  #': 3, ' # ': 3, '# l': 1, ' lo': 1, 'loa': 6, 'oad': 3, 'ad ': 1, 'd t': 2, ' th': 2, 'the': 1, 'he ': 1, 'e t': 2, ' te': 10, 'tex': 18, 'ext': 10, 'xtu': 10, 'tur': 11, 'ure': 10, 're ': 1, 'e r': 1, ' re': 2, 'ref': 1, 'efe': 1, 'fer': 1, 'err': 1, 'rre': 1, 'red': 1, 'ed ': 1, ' to': 1, 'to ': 1, 'o b': 1, ' by': 1, 'by ': 1, 'y t': 1, 'thi': 1, 'his': 1, 's d': 1, ' de': 2, 'dec': 1, 'ecl': 1, 'cla': 2, 'lar': 1, 'ara': 3, 'rat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'on\n': 1, 'n\n ': 1, 'tl[': 7, 'l[v': 2, '0]]': 2, '= v': 5, '1]\n': 4, ']\n ': 11, '  s': 11, ' su': 2, 'sur': 3, 'urf': 3, 'rf ': 1, 'f =': 1, '= p': 2, 'me.': 2, 'e.i': 2, '.im': 2, 'ima': 4, 'mag': 5, 'age': 5, 'ge.': 2, 'e.l': 1, '.lo': 1, 'ad(': 1, 'd(m': 2, '(mt': 1, ""l['"": 4, ""['m"": 1, ""d']"": 4, ""'])"": 3, '])\n': 8, 'ge ': 1, 'e =': 2, 'e.t': 1, '.to': 1, 'tos': 1, 'ost': 1, 'str': 1, 'tri': 1, 'rin': 1, 'ing': 1, 'ng(': 1, 'g(s': 1, '(su': 1, 'rf,': 1, 'f, ': 2, "", '"": 2, "" 'R"": 1, ""'RG"": 1, 'RGB': 3, 'GBA': 3, ""BA'"": 1, ""A',"": 1, ""', "": 2, ', 1': 1, ' 1)': 1, '1)\n': 3, ' ix': 2, 'ix,': 2, 'x, ': 2, ', i': 4, ' iy': 2, 'iy ': 1, 'y =': 1, '= s': 2, 'rf.': 1, 'f.g': 3, '.ge': 1, 'get': 1, 'et_': 1, 't_r': 1, '_re': 1, 'rec': 1, 'ect': 1, 'ct(': 1, '().': 1, ').s': 1, '.si': 1, 'siz': 1, 'ize': 1, 'ze\n': 1, '  t': 4, 'exi': 2, 'xid': 2, 'id ': 1, 'd =': 1, '= m': 2, ""['t"": 2, ""'te"": 3, 're_': 6, 'e_K': 3, ""'] "": 1, '= g': 2, ' gl': 18, 'glG': 2, 'lGe': 2, 'Gen': 2, 'enT': 1, 'nTe': 1, 'Tex': 7, 'res': 1, 'es(': 1, 's(1': 2, '(1)': 2, '  g': 16, 'glB': 3, 'lBi': 2, 'Bin': 2, 'ind': 2, 'ndT': 2, 'dTe': 2, 're(': 2, 'e(G': 5, '(GL': 9, 'GL_': 17, 'L_T': 9, '_TE': 9, 'TEX': 9, 'EXT': 9, 'XTU': 9, 'TUR': 9, 'URE': 9, 'RE_': 9, 'E_2': 7, '_2D': 7, '2D,': 5, 'D, ': 5, ', t': 3, 'id)': 1, 'd)\n': 1, 'glT': 4, 'lTe': 4, 'exP': 2, 'xPa': 2, 'Par': 2, 'ram': 2, 'met': 2, 'ete': 2, 'ter': 7, 'eri': 7, 'ri(': 2, 'i(G': 2, ', G': 8, ' GL': 8, 'E_M': 2, '_MI': 1, 'MIN': 1, 'IN_': 1, 'N_F': 1, '_FI': 2, 'FIL': 2, 'ILT': 2, 'LTE': 2, 'TER': 2, 'ER,': 2, 'R, ': 2, 'L_L': 2, '_LI': 2, 'LIN': 2, 'INE': 2, 'NEA': 2, 'EAR': 2, 'AR)': 2, 'R)\n': 2, '_MA': 1, 'MAG': 1, 'AG_': 1, 'G_F': 1, 'exI': 1, 'xIm': 1, 'Ima': 1, 'ge2': 1, 'e2D': 1, '2D(': 1, 'D(G': 1, ', 0': 2, ' 0,': 2, '0, ': 2, 'L_R': 2, '_RG': 2, 'BA,': 2, 'A, ': 2, 'iy,': 1, 'y, ': 1, 'L_U': 1, '_UN': 1, 'UNS': 1, 'NSI': 1, 'SIG': 1, 'IGN': 1, 'GNE': 1, 'NED': 1, 'ED_': 1, 'D_B': 1, '_BY': 1, 'BYT': 1, 'YTE': 1, 'TE,': 1, 'E, ': 1, 'ge)': 1, 'e)\n': 1, 'els': 4, 'lse': 5, 'se:': 4, ' ma': 5, 'ap(': 4, 'p(f': 4, '(fl': 4, 'flo': 4, 'oat': 4, 'at,': 4, 't, ': 5, ', v': 8, '[1:': 5, '1:]': 2, ':])': 1, 'ret': 1, 'etu': 1, 'urn': 1, 'rn ': 1, 'n c': 1, 'ts\n': 1, 's\n\n': 1, '\n\nc': 1, '\ncl': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's O': 1, ' OB': 2, 'OBJ': 2, 'BJ:': 1, 'J:\n': 1, '  d': 1, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 5, 'sel': 17, 'elf': 17, 'lf,': 1, ', f': 1, ', s': 1, ' sw': 3, 'swa': 3, 'wap': 3, 'apy': 3, 'pyz': 3, 'yz=': 1, 'z=F': 1, '=Fa': 1, 'Fal': 1, 'als': 7, 'se)': 1, '  ""': 1, ' """"': 2, '""""""': 2, '""""L': 1, '""Lo': 1, 'Loa': 1, 'ads': 1, 'ds ': 3, 's a': 1, ' a ': 1, 'a W': 1, ' Wa': 1, 'Wav': 1, 'ave': 1, 'vef': 1, 'efr': 1, 'ron': 2, 'nt ': 1, 't O': 1, 'BJ ': 1, 'J f': 1, 'le.': 1, 'e. ': 1, '. ""': 1, '""""\n': 1, '""\n ': 1, ' se': 12, 'lf.': 16, 'f.v': 3, '.ve': 3, 'ver': 6, 'ert': 7, 'rti': 6, 'tic': 6, 'ice': 6, 'ces': 9, '= [': 7, ' []': 7, '[]\n': 7, 'f.n': 3, '.no': 3, 'nor': 10, 'orm': 11, 'rma': 7, 'mal': 7, 'ls ': 1, 'f.t': 3, '.te': 3, 'exc': 7, 'xco': 7, 'coo': 10, 'oor': 11, 'ord': 11, 'rds': 10, 'f.f': 3, '.fa': 3, 'fac': 8, 'ace': 9, ']\n\n': 1, '\n\n ': 4, 'mat': 6, 'ate': 5, 'ria': 5, 'ial': 5, 'al ': 3, "" 'v"": 3, ""'v'"": 1, ""v':"": 1, ' v ': 5, 'v =': 4, 'lis': 4, 'ist': 7, 'st(': 4, 't(m': 2, '(ma': 3, '1:4': 2, ':4]': 2, '4])': 2, ']))': 6, '))\n': 7, 'f s': 2, 'yz:': 2, 'z:\n': 2, ' v[': 6, 'v[0': 2, '0],': 2, '], ': 4, 'v[2': 2, '[2]': 4, '2],': 2, 'v[1': 2, 'es.': 2, 's.a': 8, '.ap': 9, 'app': 9, 'ppe': 9, 'end': 9, 'nd(': 10, 'd(v': 2, '(v)': 2, 'v)\n': 2, ""'vn"": 1, ""vn'"": 1, ""n':"": 1, 'ls.': 1, ""'vt"": 1, ""vt'"": 1, ""t':"": 1, 'ds.': 3, '1:3': 1, ':3]': 1, '3])': 1, '] i': 1, 'n (': 1, "" ('"": 1, ""('u"": 1, ""'us"": 2, 'use': 6, 'sem': 2, 'emt': 1, ""l',"": 1, "" 'u"": 1, 'ema': 1, ""at'"": 1, ""t')"": 1, ""'mt"": 1, 'tll': 1, 'lli': 1, 'lib': 1, ""ib'"": 1, ""b':"": 1, 'f.m': 2, '.mt': 2, '= M': 1, 'L(v': 1, '(va': 1, '1])': 6, "" 'f"": 1, ""'f'"": 1, ""f':"": 1, ' fa': 4, 'ce ': 2, '  n': 3, 'rms': 4, 'ms ': 1, 'r v': 1, 'v i': 1, 'n v': 1, ':]:': 1, ']:\n': 1, '  w': 1, ' w ': 1, 'w =': 1, ' v.': 1, 'v.s': 1, ""t('"": 1, ""('/"": 1, ""'/'"": 1, ""/')"": 1, ""')\n"": 1, 'ce.': 1, 'e.a': 1, 'd(i': 3, '(in': 3, 'int': 3, 'nt(': 3, 't(w': 3, '(w[': 5, 'w[0': 1, '0])': 1, ' le': 4, 'n(w': 4, '(w)': 2, 'w) ': 2, ') >': 4, ' >=': 2, '>= ': 2, '= 2': 1, ' 2 ': 1, '2 a': 1, ' an': 2, 'and': 2, 'nd ': 2, 'd l': 2, 'w[1': 2, ']) ': 2, ' > ': 4, '> 0': 4, ' 0:': 4, '0:\n': 4, 'd(0': 2, '(0)': 2, '0)\n': 2, '= 3': 1, ' 3 ': 1, '3 a': 1, 'w[2': 2, '2])': 2, 'ms.': 2, 'd((': 1, '((f': 1, '(fa': 1, 'ce,': 1, ', n': 2, 'ms,': 1, 's, ': 5, 'ds,': 2, ', m': 3, 'al)': 1, 'l))': 1, ')\n\n': 2, '.gl': 2, 'gl_': 2, 'l_l': 2, '_li': 2, 'st ': 2, 't =': 1, 'enL': 1, 'nLi': 1, 'Lis': 3, 'sts': 1, 'ts(': 1, 'glN': 2, 'lNe': 1, 'New': 1, 'ewL': 1, 'wLi': 1, 't(s': 1, 'st,': 1, 'L_C': 2, '_CO': 1, 'COM': 1, 'OMP': 1, 'MPI': 1, 'PIL': 1, 'ILE': 1, 'LE)': 1, 'E)\n': 1, 'glE': 3, 'lEn': 3, 'Ena': 1, 'nab': 1, 'abl': 2, 'ble': 2, 'le(': 2, '2D)': 2, 'D)\n': 2, 'glF': 1, 'lFr': 1, 'Fro': 1, 'ntF': 1, 'tFa': 1, 'Fac': 1, 'ce(': 1, '_CC': 1, 'CCW': 1, 'CW)': 1, 'W)\n': 1, 'r f': 1, 'n s': 1, ' ve': 1, 'es,': 1, 'ls,': 1, 'e_c': 3, '_co': 3, '= f': 1, 'ce\n': 1, 'e\n\n': 1, 'l[m': 1, '[ma': 1, 'al]': 1, 'l]\n': 1, ""f '"": 1, "" 't"": 1, ""d' "": 1, ""' i"": 1, 'n m': 1, 'tl:': 1, 'l:\n': 1, '# u': 1, ' us': 2, ' di': 2, 'dif': 2, 'iff': 2, 'ffu': 2, 'fus': 2, 'exm': 1, 'xma': 1, 'ap\n': 1, 'p\n ': 1, '# j': 1, ' ju': 1, 'jus': 1, 'ust': 1, 't u': 1, 'e c': 1, 'col': 1, 'olo': 2, 'lou': 1, 'our': 1, 'ur\n': 1, 'r\n ': 1, 'glC': 1, 'lCo': 1, 'Col': 1, 'lor': 1, 'r(*': 1, '(*m': 1, '*mt': 1, ""['K"": 1, ""'Kd"": 1, 'lBe': 1, 'Beg': 1, 'egi': 1, 'gin': 1, 'in(': 1, 'n(G': 1, 'L_P': 1, '_PO': 1, 'POL': 1, 'OLY': 1, 'LYG': 1, 'YGO': 1, 'GON': 1, 'ON)': 1, 'N)\n': 1, 'r i': 1, ' i ': 1, 'i i': 1, 'n r': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(l': 1, '(le': 1, 'n(v': 1, '(ve': 1, 'es)': 1, 's))': 1, ')):': 1, 'ls[': 3, 's[i': 5, '[i]': 5, 'i] ': 5, '] >': 2, 'lNo': 1, 'Nor': 1, 'al3': 1, 'l3f': 1, '3fv': 2, 'fv(': 3, 'v(s': 3, 's[n': 1, '[no': 1, '] -': 3, ' - ': 3, '- 1': 3, ' 1]': 3, 'f t': 1, 'ds[': 3, 'exC': 1, 'xCo': 1, 'Coo': 1, 'rd2': 1, 'd2f': 1, '2fv': 1, 's[t': 1, '[te': 1, 'glV': 1, 'lVe': 1, 'Ver': 1, 'rte': 1, 'ex3': 1, 'x3f': 1, '[ve': 1, 'End': 2, 'd()': 1, 'glD': 1, 'lDi': 1, 'Dis': 1, 'isa': 1, 'sab': 1, 'ndL': 1, 'dLi': 1}"
Sebastian Castañeda,objviewer.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 8, 'sys': 1, 'pygame': 2, 'from': 5, 'pygame.locals': 1, '*': 5, 'pygame.constants': 1, 'opengl.gl': 1, 'opengl.glu': 1, '#': 4, 'object': 3, 'loader': 1, 'objloader': 1, 'pygame.init()': 1, 'viewport': 2, '=': 18, '(800,': 1, '600)': 1, 'hx': 1, 'viewport[0]/2': 1, 'hy': 1, 'viewport[1]/2': 1, 'srf': 1, 'pygame.display.set_mode(viewport,': 1, 'opengl': 1, '|': 2, 'doublebuf)': 1, 'gllightfv(gl_light0,': 3, 'gl_position,': 1, '(-40,': 1, '200,': 1, '100,': 1, '0.0))': 1, 'gl_ambient,': 1, '(0.2,': 1, '0.2,': 2, '1.0))': 2, 'gl_diffuse,': 1, '(0.5,': 1, '0.5,': 2, 'glenable(gl_light0)': 1, 'glenable(gl_lighting)': 1, 'glenable(gl_color_material)': 1, 'glenable(gl_depth_test)': 2, 'glshademodel(gl_smooth)': 1, 'most': 1, 'obj': 2, 'files': 1, 'expect': 1, 'to': 1, 'be': 1, 'smooth-shaded': 1, 'load': 1, 'after': 1, 'init': 1, 'obj(""teapot.obj"",': 1, 'swapyz=true)': 1, 'clock': 1, 'pygame.time.clock()': 1, 'glmatrixmode(gl_projection)': 1, 'glloadidentity()': 2, 'width,': 1, 'height': 1, 'gluperspective(90.0,': 1, 'width/float(height),': 1, '1,': 3, '200.0)': 1, 'glmatrixmode(gl_modelview)': 1, 'rx,': 1, 'ry': 2, '(0,': 2, '0)': 4, 'tx,': 1, 'ty': 2, 'zpos': 3, '150': 1, 'rotate': 3, 'move': 3, 'false': 3, 'while': 1, '1:': 3, 'clock.tick(30)': 1, 'for': 1, 'e': 1, 'in': 1, 'pygame.event.get():': 1, 'if': 5, 'e.type': 5, '==': 12, 'quit:': 1, 'sys.exit()': 2, 'elif': 8, 'keydown': 1, 'and': 1, 'e.key': 1, 'k_escape:': 1, 'mousebuttondown:': 1, 'e.button': 6, '4:': 1, 'max(1,': 1, 'zpos-1)': 1, '5:': 1, '+=': 4, '1': 1, 'true': 2, '3:': 2, 'mousebuttonup:': 1, 'mousemotion:': 1, 'i,': 1, 'j': 3, 'e.rel': 1, 'rotate:': 1, 'rx': 1, 'i': 2, 'move:': 1, 'tx': 1, '-=': 1, 'glclear(gl_color_buffer_bit': 1, 'gl_depth_buffer_bit)': 1, 'render': 1, 'gltranslate(tx/20.,': 1, 'ty/20.,': 1, '-': 1, 'zpos)': 1, 'glrotate(ry,': 1, '0,': 2, 'glrotate(rx,': 1, 'glcalllist(obj.gl_list)': 1, 'pygame.display.flip()': 1}","{'imp': 7, 'mpo': 7, 'por': 12, 'ort': 12, 'rt ': 8, 't s': 1, ' sy': 3, 'sys': 3, 'ys\n': 1, 's\ni': 1, '\nim': 1, 't p': 1, ' py': 7, 'pyg': 8, 'yga': 8, 'gam': 8, 'ame': 8, 'me\n': 1, 'e\nf': 1, '\nfr': 5, 'fro': 5, 'rom': 5, 'om ': 5, 'm p': 2, 'me.': 8, 'e.l': 1, '.lo': 1, 'loc': 4, 'oca': 1, 'cal': 1, 'als': 4, 'ls ': 1, 's i': 2, ' im': 5, 't *': 5, ' *\n': 5, '*\nf': 3, 'e.c': 1, '.co': 1, 'con': 1, 'ons': 1, 'nst': 1, 'sta': 1, 'tan': 1, 'ant': 1, 'nts': 1, 'ts ': 1, 'm O': 2, ' Op': 2, 'Ope': 2, 'pen': 2, 'enG': 2, 'nGL': 2, 'GL.': 2, 'L.G': 2, '.GL': 2, 'GL ': 2, 'L i': 1, 'GLU': 1, 'LU ': 1, 'U i': 1, '*\n\n': 2, '\n\n#': 2, '\n# ': 2, '# I': 1, ' IM': 1, 'IMP': 1, 'MPO': 1, 'POR': 1, 'ORT': 1, 'RT ': 1, 'T O': 1, ' OB': 4, 'OBJ': 4, 'BJE': 3, 'JEC': 4, 'ECT': 4, 'CT ': 2, 'T L': 1, ' LO': 2, 'LOA': 2, 'OAD': 2, 'ADE': 1, 'DER': 2, 'ER\n': 1, 'R\nf': 1, 'm o': 1, ' ob': 2, 'obj': 5, 'bjl': 1, 'jlo': 1, 'loa': 2, 'oad': 3, 'ade': 3, 'der': 1, 'er ': 1, 'r i': 1, '\n\np': 1, '\npy': 1, 'e.i': 1, '.in': 1, 'ini': 1, 'nit': 1, 'it(': 3, 't()': 4, '()\n': 7, ')\nv': 1, '\nvi': 1, 'vie': 5, 'iew': 5, 'ewp': 5, 'wpo': 5, 't =': 2, ' = ': 18, '= (': 3, ' (8': 1, '(80': 1, '800': 1, '00,': 3, '0, ': 12, ', 6': 1, ' 60': 1, '600': 1, '00)': 1, '0)\n': 8, ')\nh': 1, '\nhx': 1, 'hx ': 1, 'x =': 1, '= v': 3, ' vi': 3, 'rt[': 2, 't[0': 1, '[0]': 1, '0]/': 1, ']/2': 2, '/2\n': 2, '2\nh': 1, '\nhy': 1, 'hy ': 1, 'y =': 4, 't[1': 1, '[1]': 1, '1]/': 1, '2\ns': 1, '\nsr': 1, 'srf': 1, 'rf ': 1, 'f =': 1, '= p': 2, 'e.d': 2, '.di': 2, 'dis': 2, 'isp': 2, 'spl': 2, 'pla': 2, 'lay': 2, 'ay.': 2, 'y.s': 1, '.se': 1, 'set': 1, 'et_': 1, 't_m': 1, '_mo': 1, 'mod': 1, 'ode': 4, 'de(': 3, 'e(v': 1, '(vi': 1, 'rt,': 1, 't, ': 1, ', O': 1, ' OP': 1, 'OPE': 1, 'PEN': 1, 'ENG': 1, 'NGL': 1, 'L |': 1, ' | ': 2, '| D': 1, ' DO': 1, 'DOU': 1, 'OUB': 1, 'UBL': 1, 'BLE': 1, 'LEB': 1, 'EBU': 3, 'BUF': 3, 'UF)': 1, 'F)\n': 1, ')\n\n': 6, '\n\ng': 2, '\ngl': 13, 'glL': 5, 'lLi': 4, 'Lig': 3, 'igh': 5, 'ght': 5, 'htf': 3, 'tfv': 3, 'fv(': 3, 'v(G': 3, '(GL': 12, 'GL_': 16, 'L_L': 5, '_LI': 5, 'LIG': 5, 'IGH': 5, 'GHT': 5, 'HT0': 4, 'T0,': 3, ', G': 3, ' GL': 4, 'L_P': 2, '_PO': 1, 'POS': 1, 'OSI': 1, 'SIT': 1, 'ITI': 1, 'TIO': 3, 'ION': 3, 'ON,': 1, 'N, ': 1, ',  ': 1, '  (': 1, ' (-': 1, '(-4': 1, '-40': 1, '40,': 1, ', 2': 2, ' 20': 2, '200': 2, ', 1': 6, ' 10': 1, '100': 1, ', 0': 11, ' 0.': 5, '0.0': 3, '.0)': 4, '0))': 3, '))\n': 3, ')\ng': 10, 'L_A': 1, '_AM': 1, 'AMB': 1, 'MBI': 1, 'BIE': 1, 'IEN': 1, 'ENT': 1, 'NT,': 1, 'T, ': 1, ', (': 2, ' (0': 4, '(0.': 2, '0.2': 3, '.2,': 3, '2, ': 3, ' 1.': 2, '1.0': 2, 'L_D': 4, '_DI': 1, 'DIF': 1, 'IFF': 1, 'FFU': 1, 'FUS': 1, 'USE': 4, 'SE,': 1, 'E, ': 1, '0.5': 3, '.5,': 3, '5, ': 3, 'glE': 5, 'lEn': 5, 'Ena': 5, 'nab': 5, 'abl': 5, 'ble': 5, 'le(': 5, 'e(G': 7, 'T0)': 1, 'HTI': 1, 'TIN': 1, 'ING': 1, 'NG)': 1, 'G)\n': 1, 'L_C': 2, '_CO': 2, 'COL': 2, 'OLO': 2, 'LOR': 2, 'OR_': 2, 'R_M': 1, '_MA': 1, 'MAT': 1, 'ATE': 1, 'TER': 2, 'ERI': 1, 'RIA': 1, 'IAL': 1, 'AL)': 1, 'L)\n': 1, '_DE': 3, 'DEP': 3, 'EPT': 3, 'PTH': 3, 'TH_': 3, 'H_T': 2, '_TE': 2, 'TES': 2, 'EST': 2, 'ST)': 2, 'T)\n': 3, 'glS': 1, 'lSh': 1, 'Sha': 1, 'had': 2, 'deM': 1, 'eMo': 1, 'Mod': 3, 'del': 1, 'el(': 1, 'l(G': 1, 'L_S': 1, '_SM': 1, 'SMO': 1, 'MOO': 1, 'OOT': 1, 'OTH': 1, 'TH)': 1, 'H) ': 1, ')  ': 1, '   ': 309, '  #': 2, ' # ': 2, '# m': 1, ' mo': 5, 'mos': 1, 'ost': 1, 'st ': 1, 't o': 1, 'bj ': 2, 'j f': 1, ' fi': 1, 'fil': 1, 'ile': 2, 'les': 1, 'es ': 1, 's e': 1, ' ex': 1, 'exp': 1, 'xpe': 1, 'pec': 2, 'ect': 2, 'ct ': 1, 't t': 1, ' to': 1, 'to ': 1, 'o b': 1, ' be': 1, 'be ': 1, 'e s': 1, ' sm': 1, 'smo': 1, 'moo': 1, 'oot': 1, 'oth': 1, 'th-': 1, 'h-s': 1, '-sh': 1, 'sha': 1, 'ded': 1, 'ed\n': 1, 'd\n\n': 1, '# L': 1, 'AD ': 1, 'D O': 1, 'T A': 1, ' AF': 1, 'AFT': 1, 'FTE': 1, 'ER ': 2, 'R P': 1, ' PY': 1, 'PYG': 1, 'YGA': 1, 'GAM': 1, 'AME': 1, 'ME ': 1, 'E I': 1, ' IN': 1, 'INI': 1, 'NIT': 1, 'IT\n': 1, 'T\no': 1, '\nob': 1, 'j =': 2, '= O': 1, 'BJ(': 1, 'J(""': 1, '(""t': 1, '""te': 1, 'tea': 1, 'eap': 1, 'apo': 1, 'pot': 1, 'ot.': 1, 't.o': 1, '.ob': 1, 'bj""': 1, 'j"",': 1, '"", ': 1, ', s': 1, ' sw': 1, 'swa': 1, 'wap': 1, 'apy': 1, 'pyz': 1, 'yz=': 1, 'z=T': 1, '=Tr': 1, 'Tru': 3, 'rue': 3, 'ue)': 1, 'e)\n': 1, '\n\nc': 1, '\ncl': 1, 'clo': 2, 'ock': 3, 'ck ': 1, 'k =': 1, 'e.t': 6, '.ti': 2, 'tim': 1, 'ime': 1, 'e.C': 1, '.Cl': 1, 'Clo': 1, 'ck(': 2, 'k()': 1, 'glM': 2, 'lMa': 2, 'Mat': 2, 'atr': 2, 'tri': 2, 'rix': 2, 'ixM': 2, 'xMo': 2, '_PR': 1, 'PRO': 1, 'ROJ': 1, 'OJE': 1, 'CTI': 1, 'ON)': 1, 'N)\n': 1, 'lLo': 2, 'Loa': 2, 'adI': 2, 'dId': 2, 'Ide': 2, 'den': 2, 'ent': 3, 'nti': 2, 'tit': 2, 'ity': 2, 'ty(': 2, 'y()': 2, ')\nw': 1, '\nwi': 1, 'wid': 2, 'idt': 2, 'dth': 2, 'th,': 1, 'h, ': 1, ', h': 1, ' he': 1, 'hei': 2, 'eig': 2, 'ht ': 1, 'rt\n': 1, 't\ng': 1, 'glu': 1, 'luP': 1, 'uPe': 1, 'Per': 1, 'ers': 1, 'rsp': 1, 'spe': 1, 'cti': 1, 'tiv': 1, 'ive': 1, 've(': 1, 'e(9': 1, '(90': 1, '90.': 1, '.0,': 1, ', w': 1, ' wi': 1, 'th/': 1, 'h/f': 1, '/fl': 1, 'flo': 1, 'oat': 1, 'at(': 1, 't(h': 1, '(he': 1, 'ht)': 1, 't),': 1, '), ': 1, ' 1,': 3, '1, ': 4, '00.': 1, 'L_M': 1, '_MO': 1, 'MOD': 1, 'ODE': 1, 'DEL': 1, 'ELV': 1, 'LVI': 1, 'VIE': 1, 'IEW': 1, 'EW)': 1, 'W)\n': 1, '\n\nr': 1, '\nrx': 1, 'rx,': 2, 'x, ': 3, ', r': 1, ' ry': 2, 'ry ': 2, '(0,': 2, ' 0)': 4, ')\nt': 1, '\ntx': 1, 'tx,': 1, ', t': 2, ' ty': 3, 'ty ': 2, ')\nz': 1, '\nzp': 1, 'zpo': 5, 'pos': 5, 'os ': 3, 's =': 2, '= 1': 4, ' 15': 1, '150': 1, '50\n': 1, '0\nr': 1, '\nro': 1, 'rot': 4, 'ota': 6, 'tat': 6, 'ate': 7, 'te ': 3, 'e =': 11, '= m': 2, 'mov': 4, 'ove': 4, 've ': 3, '= F': 3, ' Fa': 3, 'Fal': 3, 'lse': 3, 'se\n': 3, 'e\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'le ': 1, 'e 1': 1, ' 1:': 3, '1:\n': 3, ':\n ': 15, '\n  ': 36, '  c': 1, ' cl': 1, 'ck.': 1, 'k.t': 1, 'tic': 1, 'ick': 1, 'k(3': 1, '(30': 1, '30)': 1, ')\n ': 8, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r e': 1, ' e ': 1, 'e i': 1, ' in': 1, 'in ': 1, 'n p': 1, 'e.e': 1, '.ev': 1, 'eve': 1, 'ven': 1, 'nt.': 1, 't.g': 1, '.ge': 1, 'get': 1, 'et(': 1, '():': 1, '):\n': 1, '  i': 6, ' if': 5, 'if ': 13, 'f e': 11, ' e.': 13, '.ty': 5, 'typ': 5, 'ype': 5, 'pe ': 5, ' ==': 12, '== ': 12, '= Q': 1, ' QU': 1, 'QUI': 1, 'UIT': 1, 'IT:': 1, 'T:\n': 1, '  s': 2, 'ys.': 2, 's.e': 2, '.ex': 2, 'exi': 2, 'xit': 2, '  e': 8, ' el': 8, 'eli': 8, 'lif': 8, '= K': 2, ' KE': 1, 'KEY': 1, 'EYD': 1, 'YDO': 1, 'DOW': 2, 'OWN': 2, 'WN ': 1, 'N a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd e': 1, 'e.k': 1, '.ke': 1, 'key': 1, 'ey ': 1, ' K_': 1, 'K_E': 1, '_ES': 1, 'ESC': 1, 'SCA': 1, 'CAP': 1, 'APE': 1, 'PE:': 1, 'E:\n': 1, '= M': 3, ' MO': 3, 'MOU': 3, 'OUS': 3, 'SEB': 2, 'BUT': 2, 'UTT': 2, 'TTO': 2, 'TON': 2, 'OND': 1, 'NDO': 1, 'WN:': 1, 'N:\n': 2, 'e.b': 6, '.bu': 6, 'but': 6, 'utt': 6, 'tto': 6, 'ton': 6, 'on ': 6, 'n =': 6, '= 4': 1, ' 4:': 1, '4:\n': 1, '  z': 2, ' zp': 4, ' ma': 1, 'max': 1, 'ax(': 1, 'x(1': 1, '(1,': 1, ', z': 1, 'os-': 1, 's-1': 1, '-1)': 1, '1)\n': 1, '= 5': 1, ' 5:': 1, '5:\n': 1, 's +': 1, ' +=': 4, '+= ': 4, ' 1\n': 1, '1\n ': 1, '  r': 4, ' ro': 3, '= T': 2, ' Tr': 2, 'ue\n': 2, 'e\n ': 4, '= 3': 2, ' 3:': 2, '3:\n': 2, '  m': 2, 'ONU': 1, 'NUP': 1, 'UP:': 1, 'P:\n': 1, 'SEM': 1, 'EMO': 1, 'MOT': 1, 'OTI': 1, 'ON:': 1, ' i,': 1, 'i, ': 1, ', j': 1, ' j ': 1, '= e': 1, 'e.r': 1, '.re': 1, 'rel': 1, 'el\n': 1, 'l\n ': 1, 'f r': 1, 'te:': 1, 'e:\n': 2, ' rx': 1, 'rx ': 1, 'x +': 2, '= i': 2, ' i\n': 2, 'i\n ': 2, 'y +': 1, '= j': 2, ' j\n': 2, 'j\n ': 1, 'f m': 1, 've:': 1, '  t': 2, ' tx': 1, 'tx ': 1, 'y -': 1, ' -=': 1, '-= ': 1, 'j\n\n': 1, '\n\n ': 3, '  g': 6, ' gl': 6, 'glC': 2, 'lCl': 1, 'Cle': 1, 'lea': 1, 'ear': 1, 'ar(': 1, 'r(G': 1, 'R_B': 3, '_BU': 2, 'UFF': 2, 'FFE': 2, 'FER': 2, 'ER_': 2, '_BI': 2, 'BIT': 2, 'IT ': 1, 'T |': 1, '| G': 1, 'H_B': 1, 'IT)': 1, '# R': 1, ' RE': 1, 'REN': 1, 'END': 1, 'NDE': 1, 'R O': 1, 'CT\n': 1, 'T\n ': 1, 'glT': 1, 'lTr': 1, 'Tra': 1, 'ran': 1, 'ans': 1, 'nsl': 1, 'sla': 1, 'lat': 1, 'te(': 3, 'e(t': 1, '(tx': 1, 'tx/': 1, 'x/2': 1, '/20': 2, '20.': 2, '0.,': 2, '., ': 2, 'ty/': 1, 'y/2': 1, ', -': 1, ' - ': 1, '- z': 1, 'os)': 1, 's)\n': 1, 'glR': 2, 'lRo': 2, 'Rot': 2, 'e(r': 2, '(ry': 1, 'ry,': 1, 'y, ': 1, ' 0,': 2, '(rx': 1, 'lCa': 1, 'Cal': 1, 'all': 1, 'llL': 1, 'Lis': 1, 'ist': 2, 'st(': 1, 't(o': 1, '(ob': 1, 'bj.': 1, 'j.g': 1, '.gl': 1, 'gl_': 1, 'l_l': 1, '_li': 1, 'lis': 1, 'st)': 1, 't)\n': 1, '  p': 1, 'y.f': 1, '.fl': 1, 'fli': 1, 'lip': 1, 'ip(': 1, 'p()': 1}"
Sebastian Castañeda,planar_object_tracking_demo.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 5, 'logging': 1, 'cv2': 1, 'numpy': 1, 'as': 1, 'np': 1, 'from': 2, 'ar_demo.pose_estimator': 1, 'poseestimator': 1, 'ar_demo.utils': 1, 'roiselector,': 1, 'color_blue,': 1, 'color_red': 1, 'logger': 1, '=': 16, 'logging.getlogger(__name__)': 1, 'win_name': 1, ""'tracker'"": 1, 'class': 1, 'videohandler(object):': 1, 'def': 3, '__init__(self):': 1, 'logger.debug(""initializing': 1, 'roi': 1, 'selector..."")': 1, 'self.cap': 1, 'cv2.videocapture(0)': 1, 'self.paused': 4, 'false': 1, 'self.frame': 3, 'none': 2, 'self.pose_tracker': 1, 'poseestimator()': 1, 'cv2.namedwindow(win_name)': 1, 'self.roi_selector': 1, 'roiselector(win_name,': 1, 'self.on_rect)': 1, 'on_rect(self,': 1, 'rect):': 1, 'logger.debug(""on_rect': 1, 'event': 1, 'fired!': 1, '(%d,': 1, '%d,': 2, '%d)""': 1, '%': 1, 'rect)': 2, 'self.pose_tracker.add_target(self.frame,': 1, 'start(self):': 1, 'while': 1, 'true:': 1, 'is_running': 2, 'not': 3, 'and': 1, 'self.roi_selector.selected_rect': 1, 'is': 2, 'if': 7, 'or': 1, 'none:': 1, 'ret,': 1, 'frame': 2, 'self.cap.read()': 1, 'scaling_factor': 1, '0.5': 1, 'cv2.resize(frame,': 1, 'none,': 1, 'fx=scaling_factor,': 1, 'fy=scaling_factor,': 1, 'interpolation=cv2.inter_area)': 1, 'ret:': 1, 'break': 2, 'frame.copy()': 1, 'img': 1, 'self.frame.copy()': 1, 'is_running:': 1, 'tracked': 1, 'self.pose_tracker.track_target(self.frame)': 1, 'for': 2, 'item': 1, 'in': 2, 'tracked:': 1, 'cv2.polylines(img,': 1, '[np.int32(item.quad)],': 1, 'true,': 1, 'color_red,': 1, '3)': 1, '(x,': 2, 'y)': 1, 'np.int32(item.points_cur):': 1, 'cv2.circle(img,': 1, 'y),': 1, '1,': 1, 'color_blue)': 1, 'self.roi_selector.draw_rect(img)': 1, 'cv2.imshow(win_name,': 1, 'img)': 1, 'ch': 4, 'cv2.waitkey(1)': 1, '==': 4, ""ord('"": 1, ""'):"": 1, ""ord('c'):"": 1, 'self.pose_tracker.clear_targets()': 1, '27:': 1, '__name__': 1, ""'__main__':"": 1, 'logging.basicconfig(level=logging.debug)': 1, 'logger.debug(""starting': 1, 'planar': 1, 'object': 1, 'tracking': 1, 'demo..."")': 1, 'videohandler().start()': 1}","{'imp': 5, 'mpo': 5, 'por': 5, 'ort': 5, 'rt ': 5, 't l': 1, ' lo': 6, 'log': 8, 'ogg': 9, 'ggi': 4, 'gin': 4, 'ing': 13, 'ng\n': 1, 'g\n\n': 1, '\n\ni': 2, '\nim': 2, 't c': 1, ' cv': 8, 'cv2': 9, 'v2\n': 1, '2\ni': 1, 't n': 1, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 1, 'as ': 1, 's n': 1, ' np': 2, 'np\n': 1, 'p\n\n': 1, '\n\nf': 1, '\nfr': 2, 'fro': 2, 'rom': 2, 'om ': 2, 'm a': 2, ' ar': 2, 'ar_': 3, 'r_d': 2, '_de': 2, 'dem': 3, 'emo': 3, 'mo.': 3, 'o.p': 1, '.po': 7, 'pos': 5, 'ose': 7, 'se_': 5, 'e_e': 1, '_es': 1, 'est': 1, 'sti': 3, 'tim': 3, 'ima': 3, 'mat': 3, 'ato': 3, 'tor': 12, 'or ': 6, 'r i': 2, ' im': 4, 't P': 1, ' Po': 2, 'Pos': 2, 'seE': 2, 'eEs': 2, 'Est': 2, 'or\n': 1, 'r\nf': 1, 'o.u': 1, '.ut': 1, 'uti': 1, 'til': 1, 'ils': 1, 'ls ': 1, 's i': 1, 't R': 1, ' RO': 3, 'ROI': 3, 'OIS': 2, 'ISe': 2, 'Sel': 2, 'ele': 7, 'lec': 7, 'ect': 17, 'cto': 9, 'or,': 3, 'r, ': 2, ', C': 4, ' CO': 4, 'COL': 4, 'OLO': 4, 'LOR': 4, 'OR_': 4, 'R_B': 2, '_BL': 2, 'BLU': 2, 'LUE': 2, 'UE,': 1, 'E, ': 3, 'R_R': 2, '_RE': 2, 'RED': 2, 'ED\n': 1, 'D\n\n': 1, '\n\nl': 1, '\nlo': 1, 'gge': 5, 'ger': 5, 'er ': 2, 'r =': 4, ' = ': 16, '= l': 1, 'ng.': 3, 'g.g': 1, '.ge': 1, 'get': 4, 'etL': 1, 'tLo': 1, 'Log': 1, 'er(': 3, 'r(_': 1, '(__': 1, '__n': 2, '_na': 2, 'nam': 3, 'ame': 13, 'me_': 2, 'e__': 2, '__)': 1, '_)\n': 1, ')\n\n': 3, '\n\n\n': 2, '\n\nW': 1, '\nWI': 1, 'WIN': 4, 'IN_': 4, 'N_N': 4, '_NA': 4, 'NAM': 4, 'AME': 4, 'ME ': 1, 'E =': 1, ""= '"": 2, "" 'T"": 1, ""'Tr"": 1, 'Tra': 1, 'rac': 9, 'ack': 9, 'cke': 7, 'ker': 5, ""er'"": 1, ""r'\n"": 1, ""'\n\n"": 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's V': 1, ' Vi': 2, 'Vid': 3, 'ide': 3, 'deo': 3, 'eoH': 2, 'oHa': 2, 'Han': 2, 'and': 3, 'ndl': 2, 'dle': 2, 'ler': 2, 'r(o': 1, '(ob': 1, 'obj': 2, 'bje': 2, 'jec': 2, 'ct)': 5, 't):': 2, '):\n': 7, ':\n\n': 1, '\n\n ': 3, '\n  ': 41, '   ': 421, '  d': 3, ' de': 4, 'def': 3, 'ef ': 3, 'f _': 2, ' __': 2, '__i': 1, '_in': 1, 'ini': 1, 'nit': 2, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 5, 'sel': 28, 'elf': 23, 'lf)': 2, 'f):': 2, ':\n ': 13, '  l': 4, 'er.': 6, 'r.d': 4, '.de': 3, 'deb': 3, 'ebu': 3, 'bug': 3, 'ug(': 3, 'g(""': 3, '(""I': 1, '""In': 1, 'Ini': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'ali': 4, 'liz': 1, 'izi': 1, 'zin': 1, 'ng ': 5, 'g R': 1, 'OI ': 1, 'I s': 1, ' se': 19, 'or.': 3, 'r..': 1, '...': 2, '..""': 2, '."")': 2, '"")\n': 2, ')\n ': 18, '  s': 11, 'lf.': 20, 'f.c': 2, '.ca': 2, 'cap': 2, 'ap ': 1, 'p =': 1, '= c': 3, 'v2.': 8, '2.V': 1, '.Vi': 1, 'eoC': 1, 'oCa': 1, 'Cap': 1, 'apt': 1, 'ptu': 1, 'tur': 1, 'ure': 1, 're(': 1, 'e(0': 1, '(0)': 1, '0)\n': 1, 'f.p': 8, '.pa': 4, 'pau': 4, 'aus': 4, 'use': 4, 'sed': 4, 'ed ': 4, 'd =': 3, '= F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'e\n ': 3, 'f.f': 6, '.fr': 6, 'fra': 10, 'ram': 10, 'me ': 5, 'e =': 4, '= N': 1, ' No': 4, 'Non': 4, 'one': 4, 'ne\n': 2, 'e_t': 4, '_tr': 4, 'tra': 8, '= P': 1, 'or(': 2, 'r()': 2, '()\n': 6, '  c': 5, '2.n': 1, '.na': 1, 'med': 1, 'edW': 1, 'dWi': 1, 'Win': 1, 'ind': 1, 'ndo': 1, 'dow': 1, 'ow(': 2, 'w(W': 2, '(WI': 3, 'ME)': 1, 'E)\n': 2, 'f.r': 3, '.ro': 3, 'roi': 3, 'oi_': 3, 'i_s': 3, '_se': 3, '= R': 1, 'r(W': 1, 'ME,': 2, ', s': 1, 'f.o': 1, '.on': 1, 'on_': 3, 'n_r': 3, '_re': 5, 'rec': 8, 't)\n': 3, 'f o': 1, ' on': 1, 'ct(': 2, 't(s': 4, 'lf,': 1, 'f, ': 1, ', r': 2, ' re': 5, '(""o': 1, '""on': 1, 'ct ': 3, 't e': 1, ' ev': 1, 'eve': 2, 'ven': 1, 'ent': 1, 'nt ': 1, 't f': 1, ' fi': 1, 'fir': 1, 'ire': 1, 'red': 1, 'ed!': 1, 'd! ': 1, '! (': 1, ' (%': 1, '(%d': 1, '%d,': 3, 'd, ': 3, ', %': 3, ' %d': 3, '%d)': 1, 'd)""': 1, ')"" ': 1, '"" %': 1, ' % ': 1, '% r': 1, 'r.a': 1, '.ad': 1, 'add': 1, 'dd_': 1, 'd_t': 1, '_ta': 3, 'tar': 6, 'arg': 3, 'rge': 3, 'et(': 2, 'me,': 2, 'e, ': 4, 'f s': 1, ' st': 1, 'sta': 2, 'art': 3, 'rt(': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e T': 1, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue:': 1, 'e:\n': 2, '  i': 9, ' is': 5, 'is_': 3, 's_r': 3, '_ru': 3, 'run': 3, 'unn': 3, 'nni': 3, 'nin': 3, 'g =': 2, '= n': 2, ' no': 3, 'not': 3, 'ot ': 3, 't s': 2, 'd a': 1, ' an': 1, 'nd ': 1, 'd s': 1, 'r.s': 1, '.se': 1, 'cte': 1, 'ted': 1, 'ed_': 1, 'd_r': 1, 't i': 1, 'is ': 2, 's N': 2, ' if': 6, 'if ': 7, 'f i': 2, 'g o': 1, ' or': 3, 'r s': 1, 'e i': 1, 'ne:': 1, '  r': 1, 'ret': 2, 'et,': 1, 't, ': 1, ', f': 3, ' fr': 3, '= s': 3, 'ap.': 1, 'p.r': 1, '.re': 2, 'rea': 3, 'ead': 1, 'ad(': 1, 'd()': 1, ' sc': 1, 'sca': 3, 'cal': 3, 'lin': 4, 'ng_': 3, 'g_f': 3, '_fa': 3, 'fac': 3, 'act': 3, '= 0': 1, ' 0.': 1, '0.5': 1, '.5\n': 1, '5\n ': 1, '  f': 3, '2.r': 1, 'res': 1, 'esi': 1, 'siz': 1, 'ize': 1, 'ze(': 1, 'e(f': 1, '(fr': 1, ', N': 1, 'ne,': 1, ' fx': 1, 'fx=': 1, 'x=s': 1, '=sc': 2, ' fy': 1, 'fy=': 1, 'y=s': 1, 'r,\n': 1, ',\n ': 1, ' in': 3, 'int': 4, 'nte': 1, 'ter': 1, 'erp': 1, 'rpo': 1, 'pol': 2, 'ola': 1, 'lat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'on=': 1, 'n=c': 1, '=cv': 1, '2.I': 1, '.IN': 1, 'INT': 1, 'NTE': 1, 'TER': 1, 'ER_': 1, 'R_A': 1, '_AR': 1, 'ARE': 1, 'REA': 1, 'EA)': 1, 'A)\n': 1, 'f n': 1, 't r': 1, 'et:': 1, 't:\n': 1, '  b': 2, ' br': 2, 'bre': 2, 'eak': 2, 'ak\n': 2, 'k\n ': 1, '= f': 1, 'me.': 2, 'e.c': 2, '.co': 2, 'cop': 2, 'opy': 2, 'py(': 2, 'y()': 2, 'img': 5, 'mg ': 1, 'ng:': 1, 'g:\n': 1, '  t': 1, ' tr': 3, 'ked': 2, 'r.t': 1, '.tr': 1, 'ck_': 1, 'k_t': 1, 'me)': 1, 'e)\n': 1, ' fo': 2, 'for': 2, ' it': 1, 'ite': 3, 'tem': 3, 'em ': 1, 'm i': 1, 'in ': 2, 'n t': 1, 'ed:': 1, 'd:\n': 1, '2.p': 1, 'oly': 1, 'lyl': 1, 'yli': 1, 'ine': 1, 'nes': 1, 'es(': 1, 's(i': 1, '(im': 3, 'mg,': 2, 'g, ': 2, ', [': 1, ' [n': 1, '[np': 1, 'np.': 2, 'p.i': 2, '.in': 2, 'nt3': 2, 't32': 2, '32(': 2, '2(i': 2, '(it': 2, 'em.': 2, 'm.q': 1, '.qu': 1, 'qua': 1, 'uad': 1, 'ad)': 1, 'd)]': 1, ')],': 1, '], ': 1, ', T': 1, 'ue,': 1, 'ED,': 1, 'D, ': 1, ', 3': 1, ' 3)': 1, '3)\n': 1, 'r (': 1, ' (x': 2, '(x,': 2, 'x, ': 2, ', y': 2, ' y)': 2, 'y) ': 1, ') i': 1, 'n n': 1, 'm.p': 1, 'poi': 1, 'oin': 1, 'nts': 1, 'ts_': 1, 's_c': 1, '_cu': 1, 'cur': 1, 'ur)': 1, 'r):': 1, '2.c': 1, '.ci': 1, 'cir': 1, 'irc': 1, 'rcl': 1, 'cle': 2, 'le(': 1, 'e(i': 1, ', (': 1, 'y),': 1, '), ': 1, ', 1': 1, ' 1,': 1, '1, ': 1, 'UE)': 1, '.dr': 1, 'dra': 1, 'raw': 1, 'aw_': 1, 'w_r': 1, 't(i': 1, 'mg)': 2, 'g)\n': 2, '2.i': 1, '.im': 1, 'ims': 1, 'msh': 1, 'sho': 1, 'how': 1, ', i': 1, ' ch': 4, 'ch ': 4, 'h =': 4, '2.w': 1, '.wa': 1, 'wai': 1, 'ait': 1, 'itK': 1, 'tKe': 1, 'Key': 1, 'ey(': 1, 'y(1': 1, '(1)': 1, '1)\n': 1, 'f c': 3, ' ==': 4, '== ': 4, '= o': 2, 'ord': 2, 'rd(': 2, ""d('"": 2, ""(' "": 1, ""' '"": 1, "" ')"": 1, ""'):"": 2, 'ed\n': 1, 'd\n ': 1, ""('c"": 1, ""'c'"": 1, ""c')"": 1, 'r.c': 1, '.cl': 1, 'lea': 1, 'ear': 1, 'r_t': 1, 'ets': 1, 'ts(': 1, 's()': 1, '= 2': 1, ' 27': 1, '27:': 1, '7:\n': 1, 'k\n\n': 1, '\nif': 1, '__ ': 1, '_ =': 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, 'g.b': 1, '.ba': 1, 'bas': 1, 'asi': 1, 'sic': 1, 'icC': 1, 'cCo': 1, 'Con': 1, 'onf': 1, 'nfi': 1, 'fig': 1, 'ig(': 1, 'g(l': 1, '(le': 1, 'lev': 1, 'vel': 1, 'el=': 1, 'l=l': 1, '=lo': 1, 'g.D': 1, '.DE': 1, 'DEB': 1, 'EBU': 1, 'BUG': 1, 'UG)': 1, 'G)\n': 1, '(""S': 1, '""St': 1, 'Sta': 1, 'rti': 1, 'tin': 1, 'g p': 1, ' pl': 1, 'pla': 1, 'lan': 1, 'ana': 1, 'nar': 1, 'ar ': 1, 'r o': 1, ' ob': 1, 't t': 1, 'cki': 1, 'kin': 1, 'g d': 1, 'o..': 1, '  V': 1, '().': 1, ').s': 1, '.st': 1, 't()': 1}"
Sebastian Castañeda,pose_estimator.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'import': 4, 'logging': 1, 'from': 1, 'collections': 1, 'namedtuple': 1, 'numpy': 1, 'as': 1, 'np': 1, 'cv2': 1, 'logger': 1, '=': 32, 'logging.getlogger(__name__)': 1, 'class': 1, 'poseestimator(object):': 1, 'def': 5, '__init__(self):': 1, '#': 5, 'use': 1, 'locality': 1, 'sensitive': 1, 'hashing': 1, 'algorithm': 1, 'logger.debug(""initializing': 1, 'pose': 1, 'estimator..."")': 1, 'flann_params': 1, 'dict(algorithm=6,': 1, 'table_number=6,': 1, 'key_size=12,': 1, 'multi_probe_level=1)': 1, 'self.min_matches': 1, '10': 1, 'self.cur_target': 1, ""namedtuple('current',"": 1, ""'image,"": 1, 'rect,': 2, 'keypoints,': 4, 'descriptors,': 1, ""data')"": 1, 'self.tracked_target': 1, ""namedtuple('tracked',"": 1, ""'target,"": 1, 'points_prev,': 3, 'points_cur,': 2, 'h,': 2, ""quad')"": 1, 'self.feature_detector': 1, 'cv2.orb_create(nfeatures=1000)': 1, 'self.feature_matcher': 1, 'cv2.flannbasedmatcher(flann_params,': 1, '{})': 1, 'self.tracking_targets': 2, '[]': 7, 'function': 2, 'to': 3, 'add': 1, 'a': 2, 'new': 2, 'target': 4, 'for': 8, 'tracking': 1, 'add_target(self,': 1, 'image,': 1, 'data=none):': 1, 'logger.debug(""adding': 1, '(%d,%d,%d,%d)..."",': 1, '*rect)': 1, 'x_start,': 2, 'y_start,': 2, 'x_end,': 2, 'y_end': 2, 'rect': 1, 'descriptors': 7, '[],': 1, 'keypoint,': 1, 'descriptor': 1, 'in': 8, 'zip(*self.detect_features(image)):': 1, 'x,': 1, 'y': 2, 'keypoint.pt': 1, 'if': 7, 'x_start': 1, '<=': 4, 'x': 1, 'x_end': 1, 'and': 4, 'y_start': 1, 'y_end:': 1, 'keypoints.append(keypoint)': 1, 'descriptors.append(descriptor)': 1, 'np.array(descriptors,': 1, ""dtype='uint8')"": 1, 'self.feature_matcher.add([descriptors])': 1, 'self.cur_target(image=image,': 1, 'rect=rect,': 1, 'keypoints=keypoints,': 1, 'descriptors=descriptors,': 1, 'data=data)': 1, 'self.tracking_targets.append(target)': 1, 'logger.debug(""target': 1, 'added!"")': 1, 'get': 1, 'list': 1, 'of': 1, 'detected': 1, 'objects': 1, 'track_target(self,': 1, 'frame):': 2, 'self.cur_keypoints,': 1, 'self.cur_descriptors': 1, 'self.detect_features(frame)': 1, 'len(self.cur_keypoints)': 1, '<': 5, 'self.min_matches:': 4, 'return': 5, 'matches': 4, 'self.feature_matcher.knnmatch(self.cur_descriptors,': 1, 'k=2)': 1, '[match[0]': 1, 'match': 2, 'len(match)': 1, '==': 1, '2': 1, 'match[0].distance': 1, 'match[1].distance': 1, '*': 1, '0.75]': 1, 'len(matches)': 2, 'matches_using_index': 1, '[[]': 1, '_': 1, 'range(len(self.tracking_targets))]': 1, 'matches:': 1, 'matches_using_index[match.imgidx].append(match)': 1, 'tracked': 2, 'image_index,': 1, 'enumerate(matches_using_index):': 1, 'continue': 2, 'self.tracking_targets[image_index]': 1, 'points_prev': 1, '[target.keypoints[m.trainidx].pt': 1, 'm': 2, 'matches]': 2, 'points_cur': 3, '[self.cur_keypoints[m.queryidx].pt': 1, 'np.float32((points_prev,': 1, 'points_cur))': 1, 'status': 2, 'cv2.findhomography(points_prev,': 1, 'cv2.ransac,': 1, '3.0)': 1, 'status.ravel()': 1, '!=': 1, '0': 1, 'status.sum()': 1, 'points_prev[status],': 1, 'points_cur[status]': 1, 'target.rect': 1, 'quad': 2, 'np.float32([[x_start,': 1, 'y_start],': 2, '[x_end,': 2, 'y_end],': 1, '[x_start,': 1, 'y_end]])': 1, 'cv2.perspectivetransform(quad.reshape(1,': 1, '-1,': 1, '2),': 1, 'h).reshape(-1,': 1, '2)': 1, 'track': 1, 'self.tracked_target(target=target,': 1, 'points_prev=points_prev,': 1, 'points_cur=points_cur,': 1, 'h=h,': 1, 'quad=quad)': 1, 'tracked.append(track)': 1, 'tracked.sort(key=lambda': 1, 'x:': 1, 'len(x.points_prev),': 1, 'reverse=true)': 1, 'detect': 1, 'features': 1, 'the': 3, 'selected': 1, 'rois': 1, 'keypoints': 1, 'detect_features(self,': 1, 'self.feature_detector.detectandcompute(frame,': 1, 'none)': 1, 'is': 1, 'none:': 1, 'clear': 1, 'all': 1, 'existing': 1, 'targets': 1, 'clear_targets(self):': 1, 'logger.debug(""clearing': 1, 'targets..."")': 1, 'self.feature_matcher.clear()': 1, 'logger.debug(""targets': 1, 'cleared!"")': 1}","{'imp': 4, 'mpo': 4, 'por': 4, 'ort': 5, 'rt ': 6, 't l': 1, ' lo': 8, 'log': 8, 'ogg': 9, 'ggi': 2, 'gin': 2, 'ing': 16, 'ng\n': 2, 'g\n\n': 1, '\n\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm c': 1, ' co': 3, 'col': 1, 'oll': 1, 'lle': 1, 'lec': 2, 'ect': 20, 'cti': 4, 'tio': 3, 'ion': 3, 'ons': 1, 'ns ': 1, 's i': 5, ' im': 3, 't n': 2, ' na': 3, 'nam': 4, 'ame': 8, 'med': 3, 'edt': 3, 'dtu': 3, 'tup': 3, 'upl': 3, 'ple': 3, 'le\n': 1, 'e\ni': 1, '\nim': 2, ' nu': 1, 'num': 3, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 1, 'as ': 1, 's n': 1, ' np': 4, 'np\n': 1, 'p\ni': 1, 't c': 1, ' cv': 6, 'cv2': 6, 'v2\n': 1, '2\n\n': 1, '\n\n\n': 2, '\n\nl': 1, '\nlo': 1, 'gge': 7, 'ger': 7, 'er ': 2, 'r =': 6, ' = ': 32, '= l': 1, 'ng.': 1, 'g.g': 1, '.ge': 1, 'get': 28, 'etL': 1, 'tLo': 1, 'Log': 1, 'er(': 2, 'r(_': 1, '(__': 1, '__n': 1, '_na': 1, 'me_': 1, 'e__': 1, '__)': 1, '_)\n': 1, ')\n\n': 3, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's P': 1, ' Po': 2, 'Pos': 2, 'ose': 2, 'seE': 1, 'eEs': 1, 'Est': 2, 'sti': 3, 'tim': 2, 'ima': 9, 'mat': 31, 'ato': 2, 'tor': 21, 'or(': 1, 'r(o': 1, '(ob': 1, 'obj': 2, 'bje': 2, 'jec': 2, 'ct)': 2, 't):': 1, '):\n': 8, ':\n\n': 1, '\n\n ': 6, '\n  ': 72, '   ': 588, '  d': 9, ' de': 18, 'def': 5, 'ef ': 5, 'f _': 1, ' __': 1, '__i': 1, '_in': 6, 'ini': 1, 'nit': 2, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 8, 'sel': 33, 'elf': 32, 'lf)': 2, 'f):': 2, ':\n ': 14, '  #': 5, ' # ': 5, '# U': 1, ' Us': 1, 'Use': 1, 'se ': 2, 'e l': 1, 'loc': 1, 'oca': 1, 'cal': 1, 'ali': 2, 'lit': 1, 'ity': 1, 'ty ': 1, 'y s': 1, ' se': 24, 'sen': 1, 'ens': 1, 'nsi': 1, 'sit': 1, 'iti': 2, 'tiv': 2, 'ive': 2, 've ': 1, 'e h': 1, ' ha': 1, 'has': 1, 'ash': 1, 'shi': 1, 'hin': 1, 'ng ': 5, 'g a': 1, ' al': 2, 'alg': 2, 'lgo': 2, 'gor': 2, 'ori': 2, 'rit': 2, 'ith': 2, 'thm': 2, 'hm\n': 1, 'm\n ': 1, '  l': 5, 'er.': 8, 'r.d': 6, '.de': 8, 'deb': 5, 'ebu': 5, 'bug': 5, 'ug(': 5, 'g(""': 5, '(""I': 1, '""In': 1, 'Ini': 1, 'tia': 1, 'ial': 1, 'liz': 1, 'izi': 1, 'zin': 1, 'g P': 1, 'e E': 1, ' Es': 1, 'or.': 2, 'r..': 1, '...': 3, '..""': 3, '."")': 2, '"")\n': 4, ')\n ': 25, '  f': 4, ' fl': 1, 'fla': 2, 'lan': 3, 'ann': 3, 'nn_': 2, 'n_p': 2, '_pa': 2, 'par': 2, 'ara': 2, 'ram': 6, 'ams': 2, 'ms ': 1, 's =': 13, '= d': 1, ' di': 1, 'dic': 1, 'ict': 1, 'ct(': 1, 't(a': 1, '(al': 1, 'hm=': 1, 'm=6': 1, '=6,': 2, '6, ': 2, ', t': 1, ' ta': 8, 'tab': 1, 'abl': 1, 'ble': 1, 'le_': 1, 'e_n': 1, '_nu': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'er=': 1, 'r=6': 1, ', k': 4, ' ke': 10, 'key': 17, 'ey_': 1, 'y_s': 6, '_si': 1, 'siz': 1, 'ize': 1, 'ze=': 1, 'e=1': 1, '=12': 1, '12,': 1, '2, ': 1, ', m': 2, ' mu': 1, 'mul': 1, 'ult': 1, 'lti': 1, 'ti_': 1, 'i_p': 1, '_pr': 11, 'pro': 1, 'rob': 1, 'obe': 1, 'be_': 1, 'e_l': 1, '_le': 1, 'lev': 1, 'eve': 2, 'vel': 2, 'el=': 1, 'l=1': 1, '=1)': 1, '1)\n': 1, '  s': 12, 'lf.': 27, 'f.m': 5, '.mi': 5, 'min': 5, 'in_': 5, 'n_m': 5, '_ma': 9, 'atc': 31, 'tch': 31, 'che': 22, 'hes': 17, 'es ': 6, '= 1': 1, ' 10': 1, '10\n': 1, '0\n ': 2, 'f.c': 7, '.cu': 7, 'cur': 16, 'ur_': 7, 'r_t': 3, '_ta': 12, 'tar': 34, 'arg': 26, 'rge': 26, 'et ': 8, 't =': 4, '= n': 5, 'le(': 2, ""e('"": 2, ""('C"": 1, ""'Cu"": 1, 'Cur': 1, 'urr': 1, 'rre': 1, 'ren': 1, 'ent': 1, ""nt'"": 1, ""t',"": 1, ""', "": 2, "", '"": 2, "" 'i"": 1, ""'im"": 1, 'mag': 7, 'age': 7, 'ge,': 3, 'e, ': 4, ', r': 4, ' re': 10, 'rec': 7, 'ct,': 3, 't, ': 12, 'eyp': 15, 'ypo': 15, 'poi': 34, 'oin': 34, 'int': 35, 'nts': 31, 'ts,': 6, 's, ': 10, ', d': 9, 'des': 17, 'esc': 17, 'scr': 17, 'cri': 17, 'rip': 17, 'ipt': 17, 'pto': 17, 'ors': 15, 'rs,': 4, ' da': 3, 'dat': 4, 'ata': 4, ""ta'"": 1, ""a')"": 1, ""')\n"": 3, 'f.t': 7, '.tr': 8, 'tra': 16, 'rac': 16, 'ack': 16, 'cke': 7, 'ked': 7, 'ed_': 2, 'd_t': 3, ""('T"": 1, ""'Tr"": 1, 'Tra': 2, ""ed'"": 1, ""d',"": 1, "" 't"": 1, ""'ta"": 1, 'et,': 2, ', p': 8, ' po': 14, 'ts_': 19, 's_p': 10, 'pre': 10, 'rev': 11, 'ev,': 6, 'v, ': 5, 's_c': 9, '_cu': 9, 'ur,': 3, 'r, ': 3, ', H': 3, ' H,': 2, 'H, ': 3, ', q': 2, ' qu': 4, 'qua': 6, 'uad': 6, ""ad'"": 1, ""d')"": 1, 'f.f': 6, '.fe': 6, 'fea': 11, 'eat': 12, 'atu': 17, 'tur': 16, 'ure': 11, 're_': 6, 'e_d': 2, '_de': 4, 'det': 7, 'ete': 8, 'tec': 8, 'cto': 2, 'or ': 10, '= c': 4, 'v2.': 5, '2.O': 1, '.OR': 1, 'ORB': 1, 'RB_': 1, 'B_c': 1, '_cr': 1, 'cre': 1, 'rea': 1, 'ate': 2, 'te(': 3, 'e(n': 1, '(nf': 1, 'nfe': 1, 'res': 7, 'es=': 1, 's=1': 1, '=10': 1, '100': 1, '000': 1, '00)': 1, '0)\n': 2, 'e_m': 4, 'her': 5, '2.F': 1, '.Fl': 1, 'Fla': 1, 'nnB': 1, 'nBa': 1, 'Bas': 1, 'ase': 1, 'sed': 1, 'edM': 1, 'dMa': 1, 'Mat': 2, 'r(f': 1, '(fl': 1, 'ms,': 1, ', {': 1, ' {}': 1, '{})': 1, '})\n': 1, 'cki': 6, 'kin': 6, 'ng_': 8, 'g_t': 5, 'ets': 9, 'ts ': 4, '= [': 9, ' []': 8, '[]\n': 7, ']\n\n': 1, '# F': 2, ' Fu': 2, 'Fun': 2, 'unc': 2, 'nct': 2, 'on ': 2, 'n t': 5, ' to': 2, 'to ': 2, 'o a': 1, ' ad': 3, 'add': 4, 'dd ': 1, 'd a': 2, ' a ': 2, 'a n': 1, ' ne': 2, 'new': 2, 'ew ': 2, 'w t': 2, 't f': 4, ' fo': 8, 'for': 9, 'r t': 1, ' tr': 7, 'g\n ': 1, 'f a': 1, 'dd_': 1, 'et(': 4, 't(s': 2, 'lf,': 3, 'f, ': 3, ', i': 1, 'ta=': 2, 'a=N': 1, '=No': 1, 'Non': 3, 'one': 3, 'ne)': 2, 'e):': 3, '(""A': 1, '""Ad': 1, 'Add': 1, 'ddi': 1, 'din': 1, 'g n': 1, 't (': 1, ' (%': 1, '(%d': 1, '%d,': 3, 'd,%': 3, ',%d': 3, '%d)': 1, 'd).': 1, ')..': 1, '."",': 1, '"", ': 1, ', *': 1, ' *r': 1, '*re': 1, 't)\n': 3, '  x': 3, ' x_': 6, 'x_s': 5, '_st': 10, 'sta': 18, 'art': 10, 'rt,': 6, ', y': 9, ' y_': 10, ', x': 2, 'x_e': 5, '_en': 10, 'end': 15, 'nd,': 4, 'd, ': 4, 'y_e': 5, 'nd ': 7, 'd =': 5, '= r': 1, 'ct\n': 2, 't\n ': 3, '  k': 3, 'rs ': 6, '[],': 1, '], ': 4, ', [': 3, ']\n ': 12, 'r k': 1, 'nt,': 1, 'r i': 2, ' in': 8, 'in ': 8, 'n z': 1, ' zi': 1, 'zip': 1, 'ip(': 1, 'p(*': 1, '(*s': 1, '*se': 1, 'f.d': 2, 'ct_': 3, 't_f': 3, '_fe': 3, 'es(': 3, 's(i': 1, '(im': 2, 'ge)': 1, 'e))': 1, ')):': 1, ' x,': 1, 'x, ': 2, ' y ': 2, 'y =': 1, '= k': 1, 'nt.': 1, 't.p': 1, '.pt': 3, 'pt\n': 1, '  i': 6, ' if': 7, 'if ': 7, 'f x': 1, 't <': 2, ' <=': 4, '<= ': 4, '= x': 2, ' x ': 1, 'x <': 1, ' an': 4, 'and': 4, 'd y': 1, '= y': 2, 'y <': 1, 'nd:': 1, 'd:\n': 1, 'ts.': 3, 's.a': 3, '.ap': 5, 'app': 5, 'ppe': 5, 'pen': 5, 'nd(': 5, 'd(k': 1, '(ke': 2, 'nt)': 1, 'rs.': 1, 'd(d': 1, '(de': 2, 'or)': 1, 'r)\n': 1, 'np.': 3, 'p.a': 1, '.ar': 1, 'arr': 1, 'rra': 1, 'ray': 1, 'ay(': 1, 'y(d': 1, ' dt': 1, 'dty': 1, 'typ': 1, 'ype': 1, 'pe=': 1, ""e='"": 1, ""='u"": 1, ""'ui"": 1, 'uin': 1, 'nt8': 1, ""t8'"": 1, ""8')"": 1, 'r.a': 1, '.ad': 1, 'dd(': 1, 'd([': 1, '([d': 1, '[de': 1, 'rs]': 1, 's])': 1, '])\n': 2, '  t': 6, '= s': 7, 't(i': 1, 'ge=': 1, 'e=i': 1, '=im': 1, 'ct=': 1, 't=r': 1, '=re': 1, 'ts=': 1, 's=k': 1, '=ke': 1, 's,\n': 1, ',\n ': 3, 'rs=': 1, 's=d': 1, '=de': 1, 'a=d': 1, '=da': 1, 'ta)': 1, 'a)\n': 1, 'd(t': 2, '(ta': 2, 'et)': 1, '(""T': 2, '""Ta': 2, 'Tar': 2, 't a': 2, 'dde': 1, 'ded': 1, 'ed!': 2, 'd!""': 2, '!"")': 2, '# T': 1, ' To': 1, 'To ': 1, 'o g': 1, ' ge': 1, 'a l': 1, ' li': 1, 'lis': 1, 'ist': 4, 'st ': 1, 't o': 1, ' of': 1, 'of ': 1, 'f d': 3, 'cte': 2, 'ted': 2, 'ed ': 3, 'd o': 1, ' ob': 1, 'cts': 1, 'ts\n': 2, 's\n ': 3, 'f t': 1, 'ck_': 1, 'k_t': 1, ', f': 2, ' fr': 2, 'fra': 4, 'me)': 3, 'r_k': 3, '_ke': 3, ', s': 2, 'r_d': 2, 's(f': 1, '(fr': 2, 'e)\n': 3, 'f l': 4, ' le': 5, 'len': 6, 'en(': 6, 'n(s': 2, 'ts)': 2, 's) ': 3, ') <': 4, ' < ': 5, '< s': 4, 'es:': 5, 's:\n': 5, '  r': 4, 'ret': 5, 'etu': 5, 'urn': 5, 'rn ': 5, 'n [': 2, '  m': 4, ' ma': 13, 'r.k': 1, '.kn': 1, 'knn': 1, 'nnM': 1, 'nMa': 1, 'ch(': 1, 'h(s': 1, ' k=': 1, 'k=2': 1, '=2)': 1, '2)\n': 2, ' [m': 1, '[ma': 2, 'ch[': 3, 'h[0': 2, '[0]': 2, '0] ': 1, '] f': 2, 'r m': 4, 'ch ': 2, 'h i': 2, 'n m': 4, 'n(m': 3, '(ma': 5, 'ch)': 2, 'h) ': 1, ') =': 1, ' ==': 1, '== ': 1, '= 2': 1, ' 2 ': 1, '2 a': 1, 'd m': 1, '0].': 1, '].d': 2, '.di': 2, 'dis': 2, 'tan': 2, 'anc': 2, 'nce': 2, 'ce ': 2, 'e <': 1, '< m': 1, 'h[1': 1, '[1]': 1, '1].': 1, 'e *': 1, ' * ': 1, '* 0': 1, ' 0.': 1, '0.7': 1, '.75': 1, '75]': 1, '5]\n': 1, 'es)': 2, 'es_': 3, 's_u': 3, '_us': 3, 'usi': 3, 'sin': 3, 'g_i': 3, 'ind': 6, 'nde': 5, 'dex': 5, 'ex ': 1, 'x =': 1, ' [[': 1, '[[]': 1, '[] ': 1, 'r _': 1, ' _ ': 1, '_ i': 1, 'n r': 1, ' ra': 1, 'ran': 2, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(l': 1, '(le': 1, 's))': 1, '))]': 1, ')]\n': 1, 'ex[': 1, 'x[m': 1, 'ch.': 1, 'h.i': 1, '.im': 1, 'img': 1, 'mgI': 1, 'gId': 1, 'Idx': 3, 'dx]': 3, 'x].': 3, '].a': 1, 'd(m': 1, 'h)\n': 1, 'ge_': 2, 'e_i': 2, 'ex,': 1, 'n e': 1, ' en': 1, 'enu': 1, 'ume': 1, 'mer': 1, 'era': 1, 'rat': 1, 'e(m': 1, 'ex)': 1, 'x):': 1, '  c': 2, 'con': 2, 'ont': 2, 'nti': 2, 'tin': 3, 'inu': 2, 'nue': 2, 'ue\n': 2, 'e\n ': 2, 'ts[': 3, 's[i': 1, '[im': 1, 'ex]': 1, 'x]\n': 1, '  p': 5, 'ev ': 1, 'v =': 1, ' [t': 1, '[ta': 1, 'et.': 2, 't.k': 1, '.ke': 1, 's[m': 2, '[m.': 2, 'm.t': 1, 'rai': 1, 'ain': 1, 'inI': 1, 'nId': 1, '].p': 2, 'pt ': 2, ' m ': 2, 'm i': 2, 'es]': 2, 's]\n': 3, 'ur ': 3, ' [s': 1, '[se': 1, 'm.q': 1, '.qu': 1, 'que': 1, 'uer': 1, 'ery': 1, 'ryI': 1, 'yId': 1, 'p.f': 2, '.fl': 2, 'flo': 2, 'loa': 2, 'oat': 2, 'at3': 2, 't32': 2, '32(': 2, '2((': 1, '((p': 1, '(po': 2, 'ur)': 1, 'r))': 1, '))\n': 1, '  H': 1, ' st': 4, 'tat': 6, 'tus': 6, 'us ': 2, '2.f': 1, '.fi': 1, 'fin': 1, 'ndH': 1, 'dHo': 1, 'Hom': 1, 'omo': 1, 'mog': 1, 'ogr': 1, 'gra': 1, 'rap': 1, 'aph': 1, 'phy': 1, 'hy(': 1, 'y(p': 1, ', c': 1, '2.R': 1, '.RA': 1, 'RAN': 1, 'ANS': 1, 'NSA': 1, 'SAC': 1, 'AC,': 1, 'C, ': 1, ', 3': 1, ' 3.': 1, '3.0': 1, '.0)': 1, 'us.': 2, 's.r': 1, '.ra': 1, 'rav': 1, 'ave': 1, 'el(': 1, 'l()': 1, '() ': 2, ') !': 1, ' !=': 1, '!= ': 1, '= 0': 1, ' 0\n': 1, 'f s': 1, 's.s': 1, '.su': 1, 'sum': 1, 'um(': 1, 'm()': 1, '= p': 1, 'ev[': 1, 'v[s': 1, '[st': 2, 'us]': 2, 's],': 1, 'ur[': 1, 'r[s': 1, '= t': 1, 't.r': 1, '.re': 3, '  q': 2, 'ad ': 2, '2([': 1, '([[': 1, '[[x': 1, '[x_': 4, 'rt]': 2, 't],': 2, ' [x': 3, 'nd]': 2, 'd],': 1, '],\n': 1, '  [': 1, 'd]]': 1, ']])': 1, '2.p': 1, '.pe': 1, 'per': 1, 'ers': 2, 'rsp': 1, 'spe': 1, 'pec': 1, 'veT': 1, 'eTr': 1, 'ans': 1, 'nsf': 1, 'sfo': 1, 'orm': 1, 'rm(': 1, 'm(q': 1, '(qu': 1, 'ad.': 1, 'd.r': 1, 'esh': 2, 'sha': 2, 'hap': 2, 'ape': 2, 'pe(': 2, 'e(1': 1, '(1,': 1, '1, ': 3, ', -': 1, ' -1': 1, '-1,': 2, ', 2': 2, ' 2)': 2, '2),': 1, '), ': 2, ' H)': 1, 'H).': 1, ').r': 1, 'e(-': 1, '(-1': 1, 'ck ': 1, 'k =': 1, 't(t': 1, 'et=': 1, 't=t': 1, '=ta': 1, 'ev=': 1, 'v=p': 1, '=po': 2, 'v,\n': 1, 'ur=': 1, 'r=p': 1, ' H=': 1, 'H=H': 1, '=H,': 1, 'ad=': 1, 'd=q': 1, '=qu': 1, 'ad)': 1, 'd)\n': 1, 'ed.': 2, 'd.a': 1, '(tr': 1, 'ck)': 1, 'k)\n': 1, 'd.s': 1, '.so': 1, 'sor': 1, 'rt(': 1, 't(k': 1, 'ey=': 1, 'y=l': 1, '=la': 1, 'lam': 1, 'amb': 1, 'mbd': 1, 'bda': 1, 'da ': 1, 'a x': 1, ' x:': 1, 'x: ': 1, ': l': 1, 'n(x': 1, '(x.': 1, 'x.p': 1, '.po': 1, 'ev)': 1, 'v),': 1, 'ver': 1, 'rse': 1, 'se=': 1, 'e=T': 1, '=Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'ed\n': 1, 'd\n\n': 1, '# D': 1, ' De': 1, 'Det': 1, 'ct ': 1, ' fe': 1, ' th': 3, 'the': 3, 'he ': 3, 'e s': 1, 'ele': 1, 'd R': 1, ' RO': 1, 'ROI': 1, 'OIs': 1, 'Is ': 1, 's a': 2, 'd r': 1, 'e k': 1, 'd d': 1, 'rs\n': 2, 's(s': 2, 'ctA': 1, 'tAn': 1, 'And': 1, 'ndC': 1, 'dCo': 1, 'Com': 1, 'omp': 1, 'mpu': 1, 'put': 1, 'ute': 1, 'e(f': 1, 'me,': 1, ', N': 1, ' No': 2, ' is': 1, 'is ': 1, 's N': 1, 'ne:': 1, 'e:\n': 1, 'n k': 1, 's\n\n': 1, 'o c': 1, ' cl': 3, 'cle': 4, 'lea': 5, 'ear': 5, 'ar ': 1, 'r a': 1, 'all': 1, 'll ': 1, 'l t': 1, 'e e': 1, ' ex': 1, 'exi': 1, 'xis': 1, 'g t': 2, 'f c': 1, 'ar_': 1, 'ts(': 1, '(""C': 1, '""Cl': 1, 'Cle': 1, 'ari': 1, 'rin': 1, 's..': 1, 'r.c': 1, '.cl': 1, 'ar(': 1, 'r()': 1, '()\n': 1, 's c': 1, 'are': 1, 'red': 1}"
Sebastian Castañeda,primitives.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'numpy': 1, 'as': 1, 'np': 1, 'class': 3, 'primitive():': 1, 'def': 6, '__init__(self):': 3, 'self.vertices_asfloat32': 5, '=': 8, 'none': 2, 'get_vertices(self):': 1, 'if': 1, 'is': 1, 'none:': 1, 'np.float32(self.vertices)': 1, 'return': 2, 'set_vertices(self,': 1, 'vertices):': 1, 'self.vertices': 3, 'vertices': 1, 'get_edges(self):': 1, 'self.edges': 3, 'cube(primitive):': 1, 'super(cube,': 1, 'self).__init__()': 2, '[[1,': 1, '0,': 6, '0],': 8, '[1,': 5, '1,': 6, '[0,': 7, '1],': 6, '1]': 1, ']': 3, '[[0,': 2, '3],': 3, '4],': 3, '[2,': 3, '7],': 2, '[6,': 3, '[5,': 3, '7]': 1, 'triangle(primitive):': 1, 'super(triangle,': 1, '[0.5,': 1, '0.5,': 1, '4]': 1, '[(0,': 1, '1),': 1, '(1,': 2, '2),': 1, '(2,': 2, '3),': 1, '(3,': 2, '0),': 1, '(0,': 1, '4),': 3, '4)]': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't n': 1, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 1, 'as ': 1, 's n': 1, ' np': 2, 'np\n': 1, 'p\n\n': 1, '\n\n\n': 3, '\n\nc': 3, '\ncl': 3, 'cla': 3, 'las': 3, 'ass': 3, 'ss ': 3, 's P': 1, ' Pr': 1, 'Pri': 3, 'rim': 3, 'imi': 3, 'mit': 3, 'iti': 3, 'tiv': 3, 'ive': 3, 've(': 1, 'e()': 1, '():': 1, '):\n': 9, ':\n\n': 3, '\n\n ': 10, '\n  ': 51, '   ': 773, '  d': 6, ' de': 6, 'def': 6, 'ef ': 6, 'f _': 3, ' __': 3, '__i': 5, '_in': 5, 'ini': 5, 'nit': 5, 'it_': 5, 't__': 5, '__(': 5, '_(s': 3, '(se': 7, 'sel': 20, 'elf': 20, 'lf)': 7, 'f):': 5, ':\n ': 7, '  s': 10, ' se': 14, 'lf.': 12, 'f.v': 9, '.ve': 9, 'ver': 13, 'ert': 13, 'rti': 13, 'tic': 13, 'ice': 13, 'ces': 13, 'es_': 5, 's_a': 5, '_as': 5, 'asf': 5, 'sfl': 5, 'flo': 6, 'loa': 6, 'oat': 6, 'at3': 6, 't32': 6, '32 ': 4, '2 =': 3, ' = ': 8, '= N': 2, ' No': 3, 'Non': 3, 'one': 3, 'ne\n': 2, 'e\n\n': 1, 'f g': 2, ' ge': 2, 'get': 2, 'et_': 3, 't_v': 2, '_ve': 2, 'es(': 3, 's(s': 3, '  i': 1, ' if': 1, 'if ': 1, 'f s': 2, '2 i': 1, ' is': 1, 'is ': 1, 's N': 1, 'ne:': 1, 'e:\n': 1, '= n': 1, 'np.': 1, 'p.f': 1, '.fl': 1, '32(': 1, '2(s': 1, 'es)': 2, 's)\n': 1, ')\n ': 1, '  r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n s': 2, '32\n': 1, '2\n\n': 1, 'set': 1, 'lf,': 1, 'f, ': 1, ', v': 1, ' ve': 2, 's):': 1, 'e\n ': 1, 'es ': 5, 's =': 5, '= v': 1, 'es\n': 2, 's\n\n': 2, 't_e': 1, '_ed': 1, 'edg': 4, 'dge': 4, 'ges': 4, 'f.e': 3, '.ed': 3, 's C': 1, ' Cu': 1, 'Cub': 2, 'ube': 2, 'be(': 1, 'e(P': 2, '(Pr': 2, 've)': 2, 'e):': 2, ' su': 2, 'sup': 2, 'upe': 2, 'per': 2, 'er(': 2, 'r(C': 1, '(Cu': 1, 'be,': 1, 'e, ': 2, ', s': 2, 'f).': 2, ')._': 2, '.__': 2, '_()': 2, '()\n': 2, ')\n\n': 2, '= [': 4, ' [[': 3, '[[1': 1, '[1,': 6, '1, ': 14, ', 0': 16, ' 0,': 6, '0, ': 17, ' 0]': 8, '0],': 8, '],\n': 22, ',\n ': 29, '  [': 22, ' [1': 5, ', 1': 14, ' 1,': 6, ' [0': 8, '[0,': 9, ' 1]': 7, '1],': 6, '1]\n': 1, ']\n ': 3, '  ]': 3, ' ]\n': 3, ']\n\n': 3, '[[0': 2, ', 3': 4, ' 3]': 3, '3],': 3, ', 4': 8, ' 4]': 4, '4],': 3, ' [2': 3, '[2,': 3, '2, ': 5, ', 7': 3, ' 7]': 3, '7],': 2, ' [6': 3, '[6,': 3, '6, ': 3, ' [5': 3, '[5,': 3, '5, ': 5, '7]\n': 1, 's T': 1, ' Tr': 1, 'Tri': 2, 'ria': 2, 'ian': 2, 'ang': 2, 'ngl': 2, 'gle': 2, 'le(': 1, 'r(T': 1, '(Tr': 1, 'le,': 1, '[0.': 1, '0.5': 2, '.5,': 2, ' 0.': 1, '4]\n': 1, ' [(': 1, '[(0': 1, '(0,': 2, ' 1)': 1, '1),': 1, '),\n': 7, '  (': 7, ' (1': 2, '(1,': 2, ', 2': 1, ' 2)': 1, '2),': 1, ' (2': 2, '(2,': 2, ' 3)': 1, '3),': 1, ' (3': 2, '(3,': 2, '3, ': 2, ' 0)': 1, '0),': 1, ' (0': 1, ' 4)': 4, '4),': 3, '4)]': 1, ')]\n': 1}"
Sebastian Castañeda,sift_cam_demo.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'cv2': 1, 'cap': 1, '=': 6, 'cv2.videocapture(0)': 1, 'sift': 1, 'cv2.xfeatures2d.sift_create()': 1, 'while(true):': 1, '#': 4, 'capture': 2, 'frame-by-frame': 1, 'ret,': 1, 'frame': 5, 'cap.read()': 1, 'our': 1, 'operations': 1, 'on': 1, 'the': 3, 'come': 1, 'here': 1, 'cv2.cvtcolor(frame,': 1, 'cv2.color_bgr2gray)': 1, 'kp': 1, 'sift.detect(frame,': 1, 'none)': 1, 'cv2.drawkeypoints(frame,': 1, 'kp,': 1, 'flags=cv2.draw_matches_flags_draw_rich_keypoints,': 1, 'outimage=frame)': 1, 'display': 1, 'resulting': 1, ""cv2.imshow('frame',"": 1, 'frame)': 1, 'if': 1, 'cv2.waitkey(1)': 1, '&': 1, '0xff': 1, '==': 1, ""ord('q'):"": 1, 'break': 1, 'when': 1, 'everything': 1, 'done,': 1, 'release': 1, 'cap.release()': 1, 'cv2.destroyallwindows()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't c': 1, ' cv': 8, 'cv2': 10, 'v2\n': 1, '2\n\n': 1, '\n\nc': 1, '\nca': 2, 'cap': 4, 'ap ': 1, 'p =': 2, ' = ': 6, '= c': 5, 'v2.': 9, '2.V': 1, '.Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eoC': 1, 'oCa': 1, 'Cap': 2, 'apt': 3, 'ptu': 3, 'tur': 4, 'ure': 4, 're(': 1, 'e(0': 1, '(0)': 1, '0)\n': 1, ')\n\n': 5, '\n\ns': 1, '\nsi': 1, 'sif': 2, 'ift': 2, 'ft ': 1, 't =': 1, '2.x': 1, '.xf': 1, 'xfe': 1, 'fea': 1, 'eat': 2, 'atu': 1, 'res': 2, 'es2': 1, 's2d': 1, '2d.': 1, 'd.S': 1, '.SI': 1, 'SIF': 1, 'IFT': 1, 'FT_': 1, 'T_c': 1, '_cr': 1, 'cre': 1, 'rea': 3, 'ate': 1, 'te(': 1, 'e()': 2, '()\n': 4, ')\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le(': 1, 'e(T': 1, '(Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e):': 1, '):\n': 2, ':\n ': 2, '\n  ': 11, '   ': 52, '  #': 3, ' # ': 3, '# C': 1, ' Ca': 1, 're ': 1, 'e f': 2, ' fr': 7, 'fra': 13, 'ram': 13, 'ame': 13, 'me-': 1, 'e-b': 1, '-by': 1, 'by-': 1, 'y-f': 1, '-fr': 1, 'me\n': 2, 'e\n ': 3, '  r': 1, ' re': 3, 'ret': 1, 'et,': 1, 't, ': 1, ', f': 3, 'me ': 5, 'e =': 3, ' ca': 2, 'ap.': 2, 'p.r': 2, '.re': 2, 'ead': 1, 'ad(': 1, 'd()': 1, '\n\n ': 4, '# O': 1, ' Ou': 1, 'Our': 1, 'ur ': 1, 'r o': 1, ' op': 1, 'ope': 1, 'per': 1, 'era': 1, 'rat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'ons': 1, 'ns ': 1, 's o': 1, ' on': 1, 'on ': 1, 'n t': 1, ' th': 3, 'the': 3, 'he ': 3, 'e c': 2, ' co': 1, 'com': 1, 'ome': 1, 'e h': 1, ' he': 1, 'her': 1, 'ere': 1, 're\n': 2, '  f': 2, '2.c': 1, '.cv': 1, 'cvt': 1, 'vtC': 1, 'tCo': 1, 'Col': 1, 'olo': 1, 'lor': 1, 'or(': 1, 'r(f': 1, '(fr': 3, 'me,': 3, 'e, ': 4, ', c': 1, '2.C': 1, '.CO': 1, 'COL': 1, 'OLO': 1, 'LOR': 1, 'OR_': 1, 'R_B': 1, '_BG': 1, 'BGR': 1, 'GR2': 1, 'R2G': 1, '2GR': 1, 'GRA': 1, 'RAY': 1, 'AY)': 1, 'Y)\n': 1, '  k': 1, ' kp': 2, 'kp ': 1, '= s': 1, ' si': 1, 'ft.': 1, 't.d': 1, '.de': 2, 'det': 1, 'ete': 1, 'tec': 1, 'ect': 1, 'ct(': 1, 't(f': 1, ', N': 1, ' No': 1, 'Non': 1, 'one': 2, 'ne)': 1, 'e)\n': 3, '2.d': 2, '.dr': 1, 'dra': 1, 'raw': 1, 'awK': 1, 'wKe': 1, 'Key': 2, 'eyp': 1, 'ypo': 1, 'poi': 1, 'oin': 1, 'int': 1, 'nts': 1, 'ts(': 1, 's(f': 1, ', k': 1, 'kp,': 1, 'p, ': 1, ' fl': 1, 'fla': 1, 'lag': 1, 'ags': 1, 'gs=': 1, 's=c': 1, '=cv': 1, '2.D': 1, '.DR': 1, 'DRA': 2, 'RAW': 2, 'AW_': 2, 'W_M': 1, '_MA': 1, 'MAT': 1, 'ATC': 1, 'TCH': 1, 'CHE': 1, 'HES': 1, 'ES_': 1, 'S_F': 1, '_FL': 1, 'FLA': 1, 'LAG': 1, 'AGS': 1, 'GS_': 1, 'S_D': 1, '_DR': 1, 'W_R': 1, '_RI': 1, 'RIC': 1, 'ICH': 1, 'CH_': 1, 'H_K': 1, '_KE': 1, 'KEY': 1, 'EYP': 1, 'YPO': 1, 'POI': 1, 'OIN': 1, 'INT': 1, 'NTS': 1, 'TS,': 1, 'S,\n': 1, ',\n ': 1, '  o': 1, ' ou': 1, 'out': 1, 'utI': 1, 'tIm': 1, 'Ima': 1, 'mag': 1, 'age': 1, 'ge=': 1, 'e=f': 1, '=fr': 1, 'me)': 2, '# D': 1, ' Di': 1, 'Dis': 1, 'isp': 1, 'spl': 1, 'pla': 1, 'lay': 1, 'ay ': 1, 'y t': 1, 'e r': 1, 'esu': 1, 'sul': 1, 'ult': 1, 'lti': 1, 'tin': 1, 'ing': 2, 'ng ': 2, 'g f': 1, '  c': 1, '2.i': 1, '.im': 1, 'ims': 1, 'msh': 1, 'sho': 1, 'how': 1, 'ow(': 1, ""w('"": 1, ""('f"": 1, ""'fr"": 1, ""me'"": 1, ""e',"": 1, ""', "": 1, ')\n ': 1, '  i': 1, ' if': 1, 'if ': 1, 'f c': 1, '2.w': 1, '.wa': 1, 'wai': 1, 'ait': 1, 'itK': 1, 'tKe': 1, 'ey(': 1, 'y(1': 1, '(1)': 1, '1) ': 1, ') &': 1, ' & ': 1, '& 0': 1, ' 0x': 1, '0xF': 1, 'xFF': 1, 'FF ': 1, 'F =': 1, ' ==': 1, '== ': 1, '= o': 1, ' or': 1, 'ord': 1, 'rd(': 1, ""d('"": 1, ""('q"": 1, ""'q'"": 1, ""q')"": 1, ""'):"": 1, '  b': 1, ' br': 1, 'bre': 1, 'eak': 1, 'ak\n': 1, 'k\n\n': 1, '\n\n#': 1, '\n# ': 1, '# W': 1, ' Wh': 1, 'Whe': 1, 'hen': 1, 'en ': 1, 'n e': 1, ' ev': 1, 'eve': 1, 'ver': 1, 'ery': 1, 'ryt': 1, 'yth': 1, 'thi': 1, 'hin': 1, 'g d': 1, ' do': 1, 'don': 1, 'ne,': 1, ', r': 1, 'rel': 2, 'ele': 2, 'lea': 2, 'eas': 2, 'ase': 2, 'se ': 1, 'e t': 1, 'e\nc': 1, 'se(': 1, ')\nc': 1, '\ncv': 1, 'des': 1, 'est': 1, 'str': 1, 'tro': 1, 'roy': 1, 'oyA': 1, 'yAl': 1, 'All': 1, 'llW': 1, 'lWi': 1, 'Win': 1, 'ind': 1, 'ndo': 1, 'dow': 1, 'ows': 1, 'ws(': 1, 's()': 1}"
Sebastian Castañeda,sift_imgs_demo.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 2, 'os': 1, 'cv2': 1, 'samples_dir': 1, '=': 13, '""samples""': 1, 'output_dir': 1, '""output""': 1, 'sample_1': 1, '""super-etendar_1.jpg""': 1, 'sample_2': 1, '""super-etendar_2.jpg""': 1, 'sample_3': 1, '""pisa_tower.jpg""': 1, 'samples': 1, '[sample_1,': 1, 'sample_2,': 1, 'sample_3]': 1, 'sift': 1, 'cv2.xfeatures2d.sift_create()': 1, 'for': 1, 's': 1, 'in': 1, 'samples:': 1, 'file': 1, 'os.path.join(samples_dir,': 1, 's)': 2, 'img': 3, 'cv2.imread(file)': 1, 'cv2.cvtcolor(img,': 1, 'cv2.color_bgr2gray)': 1, 'kp': 1, 'sift.detect(img,': 1, 'none)': 1, 'cv2.drawkeypoints(img,': 1, 'kp,': 1, 'flags=cv2.draw_matches_flags_draw_rich_keypoints,': 1, 'outimage=img)': 1, 'output_file': 1, 'os.path.join(output_dir,': 1, '""sift_%s""': 1, '%': 1, 'cv2.imwrite(output_file,': 1, 'img)': 1}","{'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't o': 1, ' os': 3, 'os\n': 1, 's\ni': 1, '\nim': 1, 't c': 1, ' cv': 7, 'cv2': 8, 'v2\n': 1, '2\n\n': 1, '\n\nS': 2, '\nSA': 4, 'SAM': 8, 'AMP': 8, 'MPL': 8, 'PLE': 8, 'LES': 2, 'ES_': 3, 'S_D': 3, '_DI': 4, 'DIR': 4, 'IR ': 2, 'R =': 2, ' = ': 13, '= ""': 5, ' ""s': 3, '""sa': 1, 'sam': 3, 'amp': 3, 'mpl': 3, 'ple': 3, 'les': 3, 'es""': 1, 's""\n': 1, '""\nO': 1, '\nOU': 1, 'OUT': 2, 'UTP': 2, 'TPU': 2, 'PUT': 2, 'UT_': 2, 'T_D': 2, ' ""o': 1, '""ou': 1, 'out': 4, 'utp': 3, 'tpu': 3, 'put': 3, 'ut""': 1, 't""\n': 1, '""\n\n': 2, 'LE_': 6, 'E_1': 2, '_1 ': 1, '1 =': 1, '""su': 2, 'sup': 2, 'upe': 2, 'per': 2, 'er-': 2, 'r-e': 2, '-et': 2, 'ete': 3, 'ten': 2, 'end': 2, 'nda': 2, 'dar': 2, 'ar_': 2, 'r_1': 1, '_1.': 1, '1.j': 1, '.jp': 3, 'jpg': 3, 'pg""': 3, 'g""\n': 3, '""\nS': 2, 'E_2': 2, '_2 ': 1, '2 =': 1, 'r_2': 1, '_2.': 1, '2.j': 1, 'E_3': 2, '_3 ': 1, '3 =': 1, ' ""p': 1, '""pi': 1, 'pis': 1, 'isa': 1, 'sa_': 1, 'a_t': 1, '_to': 1, 'tow': 1, 'owe': 1, 'wer': 1, 'er.': 1, 'r.j': 1, '\n\ns': 2, '\nsa': 1, 'es ': 1, 's =': 1, '= [': 1, ' [S': 1, '[SA': 1, '_1,': 1, '1, ': 1, ', S': 2, ' SA': 2, '_2,': 1, '2, ': 1, '_3]': 1, '3]\n': 1, ']\n\n': 1, '\nsi': 1, 'sif': 2, 'ift': 2, 'ft ': 1, 't =': 1, '= c': 4, 'v2.': 7, '2.x': 1, '.xf': 1, 'xfe': 1, 'fea': 1, 'eat': 2, 'atu': 1, 'tur': 1, 'ure': 1, 'res': 1, 'es2': 1, 's2d': 1, '2d.': 1, 'd.S': 1, '.SI': 1, 'SIF': 2, 'IFT': 2, 'FT_': 2, 'T_c': 1, '_cr': 1, 'cre': 1, 'rea': 2, 'ate': 1, 'te(': 2, 'e()': 1, '()\n': 1, ')\n\n': 4, '\n\nf': 1, '\nfo': 1, 'for': 1, 'or ': 1, 'r s': 1, ' s ': 1, 's i': 1, ' in': 1, 'in ': 1, 'n s': 1, ' sa': 1, 'es:': 1, 's:\n': 1, ':\n\n': 1, '\n\n ': 4, '\n  ': 8, '   ': 40, '  f': 1, ' fi': 1, 'fil': 4, 'ile': 4, 'le ': 2, 'e =': 2, '= o': 2, 'os.': 2, 's.p': 2, '.pa': 2, 'pat': 2, 'ath': 2, 'th.': 2, 'h.j': 2, '.jo': 2, 'joi': 2, 'oin': 3, 'in(': 2, 'n(S': 1, '(SA': 1, 'IR,': 2, 'R, ': 2, ', s': 1, ' s)': 2, 's)\n': 2, ')\n ': 3, '  i': 3, ' im': 4, 'img': 8, 'mg ': 3, 'g =': 3, '2.i': 2, '.im': 2, 'imr': 1, 'mre': 1, 'ead': 1, 'ad(': 1, 'd(f': 1, '(fi': 1, 'le)': 1, 'e)\n': 2, '2.c': 1, '.cv': 1, 'cvt': 1, 'vtC': 1, 'tCo': 1, 'Col': 1, 'olo': 1, 'lor': 1, 'or(': 1, 'r(i': 1, '(im': 3, 'mg,': 3, 'g, ': 3, ', c': 1, '2.C': 1, '.CO': 1, 'COL': 1, 'OLO': 1, 'LOR': 1, 'OR_': 1, 'R_B': 1, '_BG': 1, 'BGR': 1, 'GR2': 1, 'R2G': 1, '2GR': 1, 'GRA': 1, 'RAY': 1, 'AY)': 1, 'Y)\n': 1, '  k': 1, ' kp': 2, 'kp ': 1, 'p =': 1, '= s': 1, ' si': 1, 'ft.': 1, 't.d': 1, '.de': 1, 'det': 1, 'tec': 1, 'ect': 1, 'ct(': 1, 't(i': 1, ', N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne)': 1, '2.d': 1, '.dr': 1, 'dra': 1, 'raw': 1, 'awK': 1, 'wKe': 1, 'Key': 1, 'eyp': 1, 'ypo': 1, 'poi': 1, 'int': 1, 'nts': 1, 'ts(': 1, 's(i': 1, ', k': 1, 'kp,': 1, 'p, ': 1, ', f': 1, ' fl': 1, 'fla': 1, 'lag': 1, 'ags': 1, 'gs=': 1, 's=c': 1, '=cv': 1, '2.D': 1, '.DR': 1, 'DRA': 2, 'RAW': 2, 'AW_': 2, 'W_M': 1, '_MA': 1, 'MAT': 1, 'ATC': 1, 'TCH': 1, 'CHE': 1, 'HES': 1, 'S_F': 1, '_FL': 1, 'FLA': 1, 'LAG': 1, 'AGS': 1, 'GS_': 1, '_DR': 1, 'W_R': 1, '_RI': 1, 'RIC': 1, 'ICH': 1, 'CH_': 1, 'H_K': 1, '_KE': 1, 'KEY': 1, 'EYP': 1, 'YPO': 1, 'POI': 1, 'OIN': 1, 'INT': 1, 'NTS': 1, 'TS,': 1, 'S,\n': 1, ',\n ': 1, '  o': 2, ' ou': 2, 'utI': 1, 'tIm': 1, 'Ima': 1, 'mag': 1, 'age': 1, 'ge=': 1, 'e=i': 1, '=im': 1, 'mg)': 2, 'g)\n': 2, 'ut_': 2, 't_f': 2, '_fi': 2, 'n(O': 1, '(OU': 1, ', ""': 1, ' ""S': 1, '""SI': 1, 'T_%': 1, '_%s': 1, '%s""': 1, 's"" ': 1, '"" %': 1, ' % ': 1, '% s': 1, '  c': 1, 'imw': 1, 'mwr': 1, 'wri': 1, 'rit': 1, 'ite': 1, 'e(o': 1, '(ou': 1, 'le,': 1, 'e, ': 1, ', i': 1}"
Sebastian Castañeda,sift_video_demo.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 2, 'os': 1, 'cv2': 1, 'samples_dir': 1, '=': 13, '""samples""': 1, 'output_dir': 1, '""output""': 1, 'sample': 1, '""fairchild_republic_a-10_thunderbolt': 1, '_ii.avi""': 1, 'input_file': 1, 'os.path.join(samples_dir,': 1, 'sample)': 2, 'output_file': 1, 'os.path.join(output_dir,': 1, '""sift_%s""': 1, '%': 1, 'fourcc': 1, ""cv2.videowriter_fourcc(*'mjpg')"": 1, 'out': 1, 'cv2.videowriter(output_file,': 1, 'fourcc,': 1, '20.0,': 1, '(640,': 1, '360))': 1, 'cap': 1, 'cv2.videocapture(input_file)': 1, 'sift': 1, 'cv2.xfeatures2d.sift_create()': 1, 'while(cap.isopened()):': 1, 'ret,': 1, 'frame': 5, 'cap.read()': 1, 'if': 3, 'ret:': 1, '#': 3, 'our': 1, 'operations': 1, 'on': 1, 'the': 2, 'come': 1, 'here': 1, 'cv2.cvtcolor(frame,': 1, 'cv2.color_bgr2gray)': 1, 'kp': 1, 'sift.detect(frame,': 1, 'none)': 1, 'cv2.drawkeypoints(frame,': 1, 'kp,': 1, 'flags=cv2.draw_matches_flags_draw_rich_keypoints,': 1, 'outimage=frame)': 1, 'out.write(frame)': 1, 'display': 1, 'resulting': 1, ""cv2.imshow('frame',"": 1, 'frame)': 1, 'cv2.waitkey(1)': 1, '&': 1, '0xff': 1, '==': 1, ""ord('q'):"": 1, 'break': 2, 'else:': 1, 'release': 1, 'everything': 1, 'job': 1, 'is': 1, 'finished': 1, 'cap.release()': 1, 'out.release()': 1, 'cv2.destroyallwindows()': 1}","{'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't o': 1, ' os': 3, 'os\n': 1, 's\ni': 1, '\nim': 1, 't c': 1, ' cv': 10, 'cv2': 12, 'v2\n': 1, '2\n\n': 1, '\n\nS': 2, '\nSA': 2, 'SAM': 5, 'AMP': 5, 'MPL': 5, 'PLE': 5, 'LES': 2, 'ES_': 3, 'S_D': 3, '_DI': 4, 'DIR': 4, 'IR ': 2, 'R =': 2, ' = ': 13, '= ""': 3, ' ""s': 1, '""sa': 1, 'sam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'les': 1, 'es""': 1, 's""\n': 1, '""\nO': 1, '\nOU': 1, 'OUT': 2, 'UTP': 2, 'TPU': 2, 'PUT': 2, 'UT_': 2, 'T_D': 2, ' ""o': 1, '""ou': 1, 'out': 7, 'utp': 3, 'tpu': 3, 'put': 5, 'ut""': 1, 't""\n': 1, '""\n\n': 2, 'LE ': 1, 'E =': 1, ' ""f': 1, '""fa': 1, 'fai': 1, 'air': 1, 'irc': 1, 'rch': 1, 'chi': 1, 'hil': 2, 'ild': 1, 'ld_': 1, 'd_r': 1, '_re': 1, 'rep': 1, 'epu': 1, 'pub': 1, 'ubl': 1, 'bli': 1, 'lic': 1, 'ic_': 1, 'c_A': 1, '_A-': 1, 'A-1': 1, '-10': 1, '10_': 1, '0_t': 1, '_th': 1, 'thu': 1, 'hun': 1, 'und': 1, 'nde': 1, 'der': 1, 'erb': 1, 'rbo': 1, 'bol': 1, 'olt': 1, 'lt ': 1, 't _': 1, ' _I': 1, '_II': 1, 'II.': 1, 'I.a': 1, '.av': 1, 'avi': 1, 'vi""': 1, 'i""\n': 1, '\n\ni': 1, '\nin': 1, 'inp': 2, 'npu': 2, 'ut_': 4, 't_f': 4, '_fi': 4, 'fil': 4, 'ile': 5, 'le ': 2, 'e =': 5, '= o': 3, 'os.': 2, 's.p': 2, '.pa': 2, 'pat': 2, 'ath': 2, 'th.': 2, 'h.j': 2, '.jo': 2, 'joi': 2, 'oin': 3, 'in(': 2, 'n(S': 1, '(SA': 1, 'IR,': 2, 'R, ': 2, ', S': 1, ' SA': 2, 'LE)': 2, 'E)\n': 2, ')\no': 3, '\nou': 3, 'n(O': 1, '(OU': 1, ', ""': 1, ' ""S': 1, '""SI': 1, 'SIF': 2, 'IFT': 2, 'FT_': 2, 'T_%': 1, '_%s': 1, '%s""': 1, 's"" ': 1, '"" %': 1, ' % ': 1, '% S': 1, ')\n\n': 9, '\n\nf': 1, '\nfo': 1, 'fou': 3, 'our': 3, 'urc': 3, 'rcc': 3, 'cc ': 1, 'c =': 1, '= c': 7, 'v2.': 11, '2.V': 3, '.Vi': 3, 'Vid': 3, 'ide': 3, 'deo': 3, 'eoW': 2, 'oWr': 2, 'Wri': 2, 'rit': 3, 'ite': 3, 'ter': 2, 'er_': 1, 'r_f': 1, '_fo': 1, 'cc(': 1, 'c(*': 1, ""(*'"": 1, ""*'M"": 1, ""'MJ"": 1, 'MJP': 1, 'JPG': 1, ""PG'"": 1, ""G')"": 1, ""')\n"": 1, 'ut ': 1, 't =': 2, 'er(': 1, 'r(o': 1, '(ou': 1, 'le,': 1, 'e, ': 4, ', f': 4, ' fo': 1, 'cc,': 1, 'c, ': 1, ', 2': 1, ' 20': 1, '20.': 1, '0.0': 1, '.0,': 1, '0, ': 2, ', (': 1, ' (6': 1, '(64': 1, '640': 1, '40,': 1, ', 3': 1, ' 36': 1, '360': 1, '60)': 1, '0))': 1, '))\n': 1, '\n\nc': 1, '\nca': 2, 'cap': 4, 'ap ': 1, 'p =': 2, 'eoC': 1, 'oCa': 1, 'Cap': 1, 'apt': 1, 'ptu': 1, 'tur': 2, 'ure': 2, 're(': 1, 'e(i': 1, '(in': 1, 'le)': 1, 'e)\n': 5, '\n\ns': 1, '\nsi': 1, 'sif': 2, 'ift': 2, 'ft ': 1, '2.x': 1, '.xf': 1, 'xfe': 1, 'fea': 1, 'eat': 2, 'atu': 1, 'res': 2, 'es2': 1, 's2d': 1, '2d.': 1, 'd.S': 1, '.SI': 1, 'T_c': 1, '_cr': 1, 'cre': 1, 'rea': 4, 'ate': 1, 'te(': 2, 'e()': 3, '()\n': 5, '\n\nw': 1, '\nwh': 1, 'whi': 1, 'le(': 1, 'e(c': 1, '(ca': 1, 'ap.': 3, 'p.i': 1, '.is': 1, 'isO': 1, 'sOp': 1, 'Ope': 1, 'pen': 1, 'ene': 1, 'ned': 1, 'ed(': 1, 'd()': 2, '())': 1, ')):': 1, '):\n': 2, ':\n ': 4, '\n  ': 14, '   ': 102, '  r': 1, ' re': 3, 'ret': 2, 'et,': 1, 't, ': 1, ' fr': 6, 'fra': 12, 'ram': 12, 'ame': 12, 'me ': 5, ' ca': 1, 'p.r': 2, '.re': 3, 'ead': 1, 'ad(': 1, '\n\n ': 5, '  i': 2, ' if': 3, 'if ': 3, 'f r': 1, 'et:': 1, 't:\n': 1, '  #': 2, ' # ': 2, '# O': 1, ' Ou': 1, 'Our': 1, 'ur ': 1, 'r o': 1, ' op': 1, 'ope': 1, 'per': 1, 'era': 1, 'rat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'ons': 1, 'ns ': 1, 's o': 1, ' on': 1, 'on ': 1, 'n t': 1, ' th': 2, 'the': 2, 'he ': 2, 'e f': 1, 'e c': 1, ' co': 1, 'com': 1, 'ome': 1, 'e h': 1, ' he': 1, 'her': 1, 'ere': 1, 're\n': 1, 'e\n ': 2, '  f': 2, '2.c': 1, '.cv': 1, 'cvt': 1, 'vtC': 1, 'tCo': 1, 'Col': 1, 'olo': 1, 'lor': 1, 'or(': 1, 'r(f': 1, '(fr': 4, 'me,': 3, ', c': 1, '2.C': 1, '.CO': 1, 'COL': 1, 'OLO': 1, 'LOR': 1, 'OR_': 1, 'R_B': 1, '_BG': 1, 'BGR': 1, 'GR2': 1, 'R2G': 1, '2GR': 1, 'GRA': 1, 'RAY': 1, 'AY)': 1, 'Y)\n': 1, '  k': 1, ' kp': 2, 'kp ': 1, '= s': 1, ' si': 1, 'ft.': 1, 't.d': 1, '.de': 2, 'det': 1, 'ete': 1, 'tec': 1, 'ect': 1, 'ct(': 1, 't(f': 1, ', N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne)': 1, '2.d': 2, '.dr': 1, 'dra': 1, 'raw': 1, 'awK': 1, 'wKe': 1, 'Key': 2, 'eyp': 1, 'ypo': 1, 'poi': 1, 'int': 1, 'nts': 1, 'ts(': 1, 's(f': 1, ', k': 1, 'kp,': 1, 'p, ': 1, ' fl': 1, 'fla': 1, 'lag': 1, 'ags': 1, 'gs=': 1, 's=c': 1, '=cv': 1, '2.D': 1, '.DR': 1, 'DRA': 2, 'RAW': 2, 'AW_': 2, 'W_M': 1, '_MA': 1, 'MAT': 1, 'ATC': 1, 'TCH': 1, 'CHE': 1, 'HES': 1, 'S_F': 1, '_FL': 1, 'FLA': 1, 'LAG': 1, 'AGS': 1, 'GS_': 1, '_DR': 1, 'W_R': 1, '_RI': 1, 'RIC': 1, 'ICH': 1, 'CH_': 1, 'H_K': 1, '_KE': 1, 'KEY': 1, 'EYP': 1, 'YPO': 1, 'POI': 1, 'OIN': 1, 'INT': 1, 'NTS': 1, 'TS,': 1, 'S,\n': 1, ',\n ': 1, '  o': 2, ' ou': 2, 'utI': 1, 'tIm': 1, 'Ima': 1, 'mag': 1, 'age': 1, 'ge=': 1, 'e=f': 1, '=fr': 1, 'me)': 3, 'ut.': 2, 't.w': 1, '.wr': 1, 'wri': 1, 'e(f': 1, '# D': 1, ' Di': 1, 'Dis': 1, 'isp': 1, 'spl': 1, 'pla': 1, 'lay': 1, 'ay ': 1, 'y t': 1, 'e r': 1, 'esu': 1, 'sul': 1, 'ult': 1, 'lti': 1, 'tin': 1, 'ing': 2, 'ng ': 2, 'g f': 1, 'me\n': 1, '  c': 1, '2.i': 1, '.im': 1, 'ims': 1, 'msh': 1, 'sho': 1, 'how': 1, 'ow(': 1, ""w('"": 1, ""('f"": 1, ""'fr"": 1, ""me'"": 1, ""e',"": 1, ""', "": 1, ')\n ': 1, 'f c': 1, '2.w': 1, '.wa': 1, 'wai': 1, 'ait': 1, 'itK': 1, 'tKe': 1, 'ey(': 1, 'y(1': 1, '(1)': 1, '1) ': 1, ') &': 1, ' & ': 1, '& 0': 1, ' 0x': 1, '0xF': 1, 'xFF': 1, 'FF ': 1, 'F =': 1, ' ==': 1, '== ': 1, ' or': 1, 'ord': 1, 'rd(': 1, ""d('"": 1, ""('q"": 1, ""'q'"": 1, ""q')"": 1, ""'):"": 1, '  b': 2, ' br': 2, 'bre': 2, 'eak': 2, 'ak\n': 2, 'k\n ': 1, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, 'k\n\n': 1, '\n\n#': 1, '\n# ': 1, '# R': 1, ' Re': 1, 'Rel': 1, 'ele': 3, 'lea': 3, 'eas': 3, 'ase': 3, 'se ': 1, 'e e': 1, ' ev': 1, 'eve': 1, 'ver': 1, 'ery': 1, 'ryt': 1, 'yth': 1, 'thi': 1, 'hin': 1, 'g i': 1, 'f j': 1, ' jo': 1, 'job': 1, 'ob ': 1, 'b i': 1, ' is': 1, 'is ': 1, 's f': 1, ' fi': 1, 'fin': 1, 'ini': 1, 'nis': 1, 'ish': 1, 'she': 1, 'hed': 1, 'ed\n': 1, 'd\nc': 1, 'rel': 2, 'se(': 2, 't.r': 1, ')\nc': 1, '\ncv': 1, 'des': 1, 'est': 1, 'str': 1, 'tro': 1, 'roy': 1, 'oyA': 1, 'yAl': 1, 'All': 1, 'llW': 1, 'lWi': 1, 'Win': 1, 'ind': 1, 'ndo': 1, 'dow': 1, 'ows': 1, 'ws(': 1, 's()': 1}"
Sebastian Castañeda,surf_cam_demo.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'cv2': 1, 'cap': 1, '=': 6, 'cv2.videocapture(0)': 1, 'surf': 1, 'cv2.xfeatures2d.surf_create()': 1, 'while(true):': 1, '#': 4, 'capture': 2, 'frame-by-frame': 1, 'ret,': 1, 'frame': 5, 'cap.read()': 1, 'our': 1, 'operations': 1, 'on': 1, 'the': 3, 'come': 1, 'here': 1, 'cv2.cvtcolor(frame,': 1, 'cv2.color_bgr2gray)': 1, 'kp': 1, 'surf.detect(frame,': 1, 'none)': 1, 'cv2.drawkeypoints(frame,': 1, 'kp,': 1, 'flags=cv2.draw_matches_flags_draw_rich_keypoints,': 1, 'outimage=frame)': 1, 'display': 1, 'resulting': 1, ""cv2.imshow('frame',"": 1, 'frame)': 1, 'if': 1, 'cv2.waitkey(1)': 1, '&': 1, '0xff': 1, '==': 1, ""ord('q'):"": 1, 'break': 1, 'when': 1, 'everything': 1, 'done,': 1, 'release': 1, 'cap.release()': 1, 'cv2.destroyallwindows()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't c': 1, ' cv': 8, 'cv2': 10, 'v2\n': 1, '2\n\n': 1, '\n\nc': 1, '\nca': 2, 'cap': 4, 'ap ': 1, 'p =': 2, ' = ': 6, '= c': 5, 'v2.': 9, '2.V': 1, '.Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eoC': 1, 'oCa': 1, 'Cap': 2, 'apt': 3, 'ptu': 3, 'tur': 4, 'ure': 4, 're(': 1, 'e(0': 1, '(0)': 1, '0)\n': 1, ')\n\n': 6, '\n\ns': 1, '\nsu': 1, 'sur': 2, 'urf': 2, 'rf ': 1, 'f =': 1, '2.x': 1, '.xf': 1, 'xfe': 1, 'fea': 1, 'eat': 2, 'atu': 1, 'res': 2, 'es2': 1, 's2d': 1, '2d.': 1, 'd.S': 1, '.SU': 1, 'SUR': 1, 'URF': 1, 'RF_': 1, 'F_c': 1, '_cr': 1, 'cre': 1, 'rea': 3, 'ate': 1, 'te(': 1, 'e()': 2, '()\n': 4, '\n\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le(': 1, 'e(T': 1, '(Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, 'e):': 1, '):\n': 2, ':\n ': 2, '\n  ': 11, '   ': 52, '  #': 3, ' # ': 3, '# C': 1, ' Ca': 1, 're ': 1, 'e f': 2, ' fr': 7, 'fra': 13, 'ram': 13, 'ame': 13, 'me-': 1, 'e-b': 1, '-by': 1, 'by-': 1, 'y-f': 1, '-fr': 1, 'me\n': 2, 'e\n ': 3, '  r': 1, ' re': 3, 'ret': 1, 'et,': 1, 't, ': 1, ', f': 3, 'me ': 5, 'e =': 3, ' ca': 2, 'ap.': 2, 'p.r': 2, '.re': 2, 'ead': 1, 'ad(': 1, 'd()': 1, '\n\n ': 4, '# O': 1, ' Ou': 1, 'Our': 1, 'ur ': 1, 'r o': 1, ' op': 1, 'ope': 1, 'per': 1, 'era': 1, 'rat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'ons': 1, 'ns ': 1, 's o': 1, ' on': 1, 'on ': 1, 'n t': 1, ' th': 3, 'the': 3, 'he ': 3, 'e c': 2, ' co': 1, 'com': 1, 'ome': 1, 'e h': 1, ' he': 1, 'her': 1, 'ere': 1, 're\n': 2, '  f': 2, '2.c': 1, '.cv': 1, 'cvt': 1, 'vtC': 1, 'tCo': 1, 'Col': 1, 'olo': 1, 'lor': 1, 'or(': 1, 'r(f': 1, '(fr': 3, 'me,': 3, 'e, ': 4, ', c': 1, '2.C': 1, '.CO': 1, 'COL': 1, 'OLO': 1, 'LOR': 1, 'OR_': 1, 'R_B': 1, '_BG': 1, 'BGR': 1, 'GR2': 1, 'R2G': 1, '2GR': 1, 'GRA': 1, 'RAY': 1, 'AY)': 1, 'Y)\n': 1, '  k': 1, ' kp': 2, 'kp ': 1, '= s': 1, ' su': 1, 'rf.': 1, 'f.d': 1, '.de': 2, 'det': 1, 'ete': 1, 'tec': 1, 'ect': 1, 'ct(': 1, 't(f': 1, ', N': 1, ' No': 1, 'Non': 1, 'one': 2, 'ne)': 1, 'e)\n': 3, '2.d': 2, '.dr': 1, 'dra': 1, 'raw': 1, 'awK': 1, 'wKe': 1, 'Key': 2, 'eyp': 1, 'ypo': 1, 'poi': 1, 'oin': 1, 'int': 1, 'nts': 1, 'ts(': 1, 's(f': 1, ', k': 1, 'kp,': 1, 'p, ': 1, ' fl': 1, 'fla': 1, 'lag': 1, 'ags': 1, 'gs=': 1, 's=c': 1, '=cv': 1, '2.D': 1, '.DR': 1, 'DRA': 2, 'RAW': 2, 'AW_': 2, 'W_M': 1, '_MA': 1, 'MAT': 1, 'ATC': 1, 'TCH': 1, 'CHE': 1, 'HES': 1, 'ES_': 1, 'S_F': 1, '_FL': 1, 'FLA': 1, 'LAG': 1, 'AGS': 1, 'GS_': 1, 'S_D': 1, '_DR': 1, 'W_R': 1, '_RI': 1, 'RIC': 1, 'ICH': 1, 'CH_': 1, 'H_K': 1, '_KE': 1, 'KEY': 1, 'EYP': 1, 'YPO': 1, 'POI': 1, 'OIN': 1, 'INT': 1, 'NTS': 1, 'TS,': 1, 'S,\n': 1, ',\n ': 1, '  o': 1, ' ou': 1, 'out': 1, 'utI': 1, 'tIm': 1, 'Ima': 1, 'mag': 1, 'age': 1, 'ge=': 1, 'e=f': 1, '=fr': 1, 'me)': 2, '# D': 1, ' Di': 1, 'Dis': 1, 'isp': 1, 'spl': 1, 'pla': 1, 'lay': 1, 'ay ': 1, 'y t': 1, 'e r': 1, 'esu': 1, 'sul': 1, 'ult': 1, 'lti': 1, 'tin': 1, 'ing': 2, 'ng ': 2, 'g f': 1, '  c': 1, '2.i': 1, '.im': 1, 'ims': 1, 'msh': 1, 'sho': 1, 'how': 1, 'ow(': 1, ""w('"": 1, ""('f"": 1, ""'fr"": 1, ""me'"": 1, ""e',"": 1, ""', "": 1, ')\n ': 1, '  i': 1, ' if': 1, 'if ': 1, 'f c': 1, '2.w': 1, '.wa': 1, 'wai': 1, 'ait': 1, 'itK': 1, 'tKe': 1, 'ey(': 1, 'y(1': 1, '(1)': 1, '1) ': 1, ') &': 1, ' & ': 1, '& 0': 1, ' 0x': 1, '0xF': 1, 'xFF': 1, 'FF ': 1, 'F =': 1, ' ==': 1, '== ': 1, '= o': 1, ' or': 1, 'ord': 1, 'rd(': 1, ""d('"": 1, ""('q"": 1, ""'q'"": 1, ""q')"": 1, ""'):"": 1, '  b': 1, ' br': 1, 'bre': 1, 'eak': 1, 'ak\n': 1, 'k\n\n': 1, '\n\n#': 1, '\n# ': 1, '# W': 1, ' Wh': 1, 'Whe': 1, 'hen': 1, 'en ': 1, 'n e': 1, ' ev': 1, 'eve': 1, 'ver': 1, 'ery': 1, 'ryt': 1, 'yth': 1, 'thi': 1, 'hin': 1, 'g d': 1, ' do': 1, 'don': 1, 'ne,': 1, ', r': 1, 'rel': 2, 'ele': 2, 'lea': 2, 'eas': 2, 'ase': 2, 'se ': 1, 'e t': 1, 'e\nc': 1, 'se(': 1, ')\nc': 1, '\ncv': 1, 'des': 1, 'est': 1, 'str': 1, 'tro': 1, 'roy': 1, 'oyA': 1, 'yAl': 1, 'All': 1, 'llW': 1, 'lWi': 1, 'Win': 1, 'ind': 1, 'ndo': 1, 'dow': 1, 'ows': 1, 'ws(': 1, 's()': 1}"
Sebastian Castañeda,surf_imgs_demo.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 2, 'os': 1, 'cv2': 1, 'samples_dir': 1, '=': 13, '""samples""': 1, 'output_dir': 1, '""output""': 1, 'sample_1': 1, '""super-etendar_1.jpg""': 1, 'sample_2': 1, '""super-etendar_2.jpg""': 1, 'sample_3': 1, '""pisa_tower.jpg""': 1, 'samples': 1, '[sample_1,': 1, 'sample_2,': 1, 'sample_3]': 1, 'surf': 1, 'cv2.xfeatures2d.surf_create()': 1, 'for': 1, 's': 1, 'in': 1, 'samples:': 1, 'file': 1, 'os.path.join(samples_dir,': 1, 's)': 2, 'img': 3, 'cv2.imread(file)': 1, 'cv2.cvtcolor(img,': 1, 'cv2.color_bgr2gray)': 1, 'kp': 1, 'surf.detect(img,': 1, 'none)': 1, 'cv2.drawkeypoints(img,': 1, 'kp,': 1, 'flags=cv2.draw_matches_flags_draw_rich_keypoints,': 1, 'outimage=img)': 1, 'output_file': 1, 'os.path.join(output_dir,': 1, '""surf_%s""': 1, '%': 1, 'cv2.imwrite(output_file,': 1, 'img)': 1}","{'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't o': 1, ' os': 3, 'os\n': 1, 's\ni': 1, '\nim': 1, 't c': 1, ' cv': 7, 'cv2': 8, 'v2\n': 1, '2\n\n': 1, '\n\nS': 2, '\nSA': 4, 'SAM': 8, 'AMP': 8, 'MPL': 8, 'PLE': 8, 'LES': 2, 'ES_': 3, 'S_D': 3, '_DI': 4, 'DIR': 4, 'IR ': 2, 'R =': 2, ' = ': 13, '= ""': 5, ' ""s': 3, '""sa': 1, 'sam': 3, 'amp': 3, 'mpl': 3, 'ple': 3, 'les': 3, 'es""': 1, 's""\n': 1, '""\nO': 1, '\nOU': 1, 'OUT': 2, 'UTP': 2, 'TPU': 2, 'PUT': 2, 'UT_': 2, 'T_D': 2, ' ""o': 1, '""ou': 1, 'out': 4, 'utp': 3, 'tpu': 3, 'put': 3, 'ut""': 1, 't""\n': 1, '""\n\n': 2, 'LE_': 6, 'E_1': 2, '_1 ': 1, '1 =': 1, '""su': 2, 'sup': 2, 'upe': 2, 'per': 2, 'er-': 2, 'r-e': 2, '-et': 2, 'ete': 3, 'ten': 2, 'end': 2, 'nda': 2, 'dar': 2, 'ar_': 2, 'r_1': 1, '_1.': 1, '1.j': 1, '.jp': 3, 'jpg': 3, 'pg""': 3, 'g""\n': 3, '""\nS': 2, 'E_2': 2, '_2 ': 1, '2 =': 1, 'r_2': 1, '_2.': 1, '2.j': 1, 'E_3': 2, '_3 ': 1, '3 =': 1, ' ""p': 1, '""pi': 1, 'pis': 1, 'isa': 1, 'sa_': 1, 'a_t': 1, '_to': 1, 'tow': 1, 'owe': 1, 'wer': 1, 'er.': 1, 'r.j': 1, '\n\ns': 2, '\nsa': 1, 'es ': 1, 's =': 1, '= [': 1, ' [S': 1, '[SA': 1, '_1,': 1, '1, ': 1, ', S': 2, ' SA': 2, '_2,': 1, '2, ': 1, '_3]': 1, '3]\n': 1, ']\n\n': 1, '\nsu': 1, 'sur': 2, 'urf': 2, 'rf ': 1, 'f =': 1, '= c': 4, 'v2.': 7, '2.x': 1, '.xf': 1, 'xfe': 1, 'fea': 1, 'eat': 2, 'atu': 1, 'tur': 1, 'ure': 1, 'res': 1, 'es2': 1, 's2d': 1, '2d.': 1, 'd.S': 1, '.SU': 1, 'SUR': 2, 'URF': 2, 'RF_': 2, 'F_c': 1, '_cr': 1, 'cre': 1, 'rea': 2, 'ate': 1, 'te(': 2, 'e()': 1, '()\n': 1, ')\n\n': 4, '\n\nf': 1, '\nfo': 1, 'for': 1, 'or ': 1, 'r s': 1, ' s ': 1, 's i': 1, ' in': 1, 'in ': 1, 'n s': 1, ' sa': 1, 'es:': 1, 's:\n': 1, ':\n\n': 1, '\n\n ': 4, '\n  ': 8, '   ': 40, '  f': 1, ' fi': 1, 'fil': 4, 'ile': 4, 'le ': 2, 'e =': 2, '= o': 2, 'os.': 2, 's.p': 2, '.pa': 2, 'pat': 2, 'ath': 2, 'th.': 2, 'h.j': 2, '.jo': 2, 'joi': 2, 'oin': 3, 'in(': 2, 'n(S': 1, '(SA': 1, 'IR,': 2, 'R, ': 2, ', s': 1, ' s)': 2, 's)\n': 2, ')\n ': 3, '  i': 3, ' im': 4, 'img': 8, 'mg ': 3, 'g =': 3, '2.i': 2, '.im': 2, 'imr': 1, 'mre': 1, 'ead': 1, 'ad(': 1, 'd(f': 1, '(fi': 1, 'le)': 1, 'e)\n': 2, '2.c': 1, '.cv': 1, 'cvt': 1, 'vtC': 1, 'tCo': 1, 'Col': 1, 'olo': 1, 'lor': 1, 'or(': 1, 'r(i': 1, '(im': 3, 'mg,': 3, 'g, ': 3, ', c': 1, '2.C': 1, '.CO': 1, 'COL': 1, 'OLO': 1, 'LOR': 1, 'OR_': 1, 'R_B': 1, '_BG': 1, 'BGR': 1, 'GR2': 1, 'R2G': 1, '2GR': 1, 'GRA': 1, 'RAY': 1, 'AY)': 1, 'Y)\n': 1, '  k': 1, ' kp': 2, 'kp ': 1, 'p =': 1, '= s': 1, ' su': 1, 'rf.': 1, 'f.d': 1, '.de': 1, 'det': 1, 'tec': 1, 'ect': 1, 'ct(': 1, 't(i': 1, ', N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne)': 1, '2.d': 1, '.dr': 1, 'dra': 1, 'raw': 1, 'awK': 1, 'wKe': 1, 'Key': 1, 'eyp': 1, 'ypo': 1, 'poi': 1, 'int': 1, 'nts': 1, 'ts(': 1, 's(i': 1, ', k': 1, 'kp,': 1, 'p, ': 1, ', f': 1, ' fl': 1, 'fla': 1, 'lag': 1, 'ags': 1, 'gs=': 1, 's=c': 1, '=cv': 1, '2.D': 1, '.DR': 1, 'DRA': 2, 'RAW': 2, 'AW_': 2, 'W_M': 1, '_MA': 1, 'MAT': 1, 'ATC': 1, 'TCH': 1, 'CHE': 1, 'HES': 1, 'S_F': 1, '_FL': 1, 'FLA': 1, 'LAG': 1, 'AGS': 1, 'GS_': 1, '_DR': 1, 'W_R': 1, '_RI': 1, 'RIC': 1, 'ICH': 1, 'CH_': 1, 'H_K': 1, '_KE': 1, 'KEY': 1, 'EYP': 1, 'YPO': 1, 'POI': 1, 'OIN': 1, 'INT': 1, 'NTS': 1, 'TS,': 1, 'S,\n': 1, ',\n ': 1, '  o': 2, ' ou': 2, 'utI': 1, 'tIm': 1, 'Ima': 1, 'mag': 1, 'age': 1, 'ge=': 1, 'e=i': 1, '=im': 1, 'mg)': 2, 'g)\n': 2, 'ut_': 2, 't_f': 2, '_fi': 2, 'n(O': 1, '(OU': 1, ', ""': 1, ' ""S': 1, '""SU': 1, 'F_%': 1, '_%s': 1, '%s""': 1, 's"" ': 1, '"" %': 1, ' % ': 1, '% s': 1, '  c': 1, 'imw': 1, 'mwr': 1, 'wri': 1, 'rit': 1, 'ite': 1, 'e(o': 1, '(ou': 1, 'le,': 1, 'e, ': 1, ', i': 1}"
Sebastian Castañeda,surf_video_demo.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 2, 'os': 1, 'cv2': 1, 'samples_dir': 1, '=': 13, '""samples""': 1, 'output_dir': 1, '""output""': 1, 'sample': 1, '""fairchild_republic_a-10_thunderbolt': 1, '_ii.avi""': 1, 'input_file': 1, 'os.path.join(samples_dir,': 1, 'sample)': 2, 'output_file': 1, 'os.path.join(output_dir,': 1, '""surf_%s""': 1, '%': 1, 'fourcc': 1, ""cv2.videowriter_fourcc(*'mjpg')"": 1, 'out': 1, 'cv2.videowriter(output_file,': 1, 'fourcc,': 1, '20.0,': 1, '(640,': 1, '360))': 1, 'cap': 1, 'cv2.videocapture(input_file)': 1, 'surf': 1, 'cv2.xfeatures2d.surf_create()': 1, 'while(cap.isopened()):': 1, 'ret,': 1, 'frame': 5, 'cap.read()': 1, 'if': 3, 'ret:': 1, '#': 3, 'our': 1, 'operations': 1, 'on': 1, 'the': 2, 'come': 1, 'here': 1, 'cv2.cvtcolor(frame,': 1, 'cv2.color_bgr2gray)': 1, 'kp': 1, 'surf.detect(frame,': 1, 'none)': 1, 'cv2.drawkeypoints(frame,': 1, 'kp,': 1, 'flags=cv2.draw_matches_flags_draw_rich_keypoints,': 1, 'outimage=frame)': 1, 'out.write(frame)': 1, 'display': 1, 'resulting': 1, ""cv2.imshow('frame',"": 1, 'frame)': 1, 'cv2.waitkey(1)': 1, '&': 1, '0xff': 1, '==': 1, ""ord('q'):"": 1, 'break': 2, 'else:': 1, 'release': 1, 'everything': 1, 'job': 1, 'is': 1, 'finished': 1, 'cap.release()': 1, 'out.release()': 1, 'cv2.destroyallwindows()': 1}","{'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't o': 1, ' os': 3, 'os\n': 1, 's\ni': 1, '\nim': 1, 't c': 1, ' cv': 10, 'cv2': 12, 'v2\n': 1, '2\n\n': 1, '\n\nS': 2, '\nSA': 2, 'SAM': 5, 'AMP': 5, 'MPL': 5, 'PLE': 5, 'LES': 2, 'ES_': 3, 'S_D': 3, '_DI': 4, 'DIR': 4, 'IR ': 2, 'R =': 2, ' = ': 13, '= ""': 3, ' ""s': 1, '""sa': 1, 'sam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'les': 1, 'es""': 1, 's""\n': 1, '""\nO': 1, '\nOU': 1, 'OUT': 2, 'UTP': 2, 'TPU': 2, 'PUT': 2, 'UT_': 2, 'T_D': 2, ' ""o': 1, '""ou': 1, 'out': 7, 'utp': 3, 'tpu': 3, 'put': 5, 'ut""': 1, 't""\n': 1, '""\n\n': 2, 'LE ': 1, 'E =': 1, ' ""f': 1, '""fa': 1, 'fai': 1, 'air': 1, 'irc': 1, 'rch': 1, 'chi': 1, 'hil': 2, 'ild': 1, 'ld_': 1, 'd_r': 1, '_re': 1, 'rep': 1, 'epu': 1, 'pub': 1, 'ubl': 1, 'bli': 1, 'lic': 1, 'ic_': 1, 'c_A': 1, '_A-': 1, 'A-1': 1, '-10': 1, '10_': 1, '0_t': 1, '_th': 1, 'thu': 1, 'hun': 1, 'und': 1, 'nde': 1, 'der': 1, 'erb': 1, 'rbo': 1, 'bol': 1, 'olt': 1, 'lt ': 1, 't _': 1, ' _I': 1, '_II': 1, 'II.': 1, 'I.a': 1, '.av': 1, 'avi': 1, 'vi""': 1, 'i""\n': 1, '\n\ni': 1, '\nin': 1, 'inp': 2, 'npu': 2, 'ut_': 4, 't_f': 4, '_fi': 4, 'fil': 4, 'ile': 5, 'le ': 2, 'e =': 5, '= o': 3, 'os.': 2, 's.p': 2, '.pa': 2, 'pat': 2, 'ath': 2, 'th.': 2, 'h.j': 2, '.jo': 2, 'joi': 2, 'oin': 3, 'in(': 2, 'n(S': 1, '(SA': 1, 'IR,': 2, 'R, ': 2, ', S': 1, ' SA': 2, 'LE)': 2, 'E)\n': 2, ')\no': 3, '\nou': 3, 'n(O': 1, '(OU': 1, ', ""': 1, ' ""S': 1, '""SU': 1, 'SUR': 2, 'URF': 2, 'RF_': 2, 'F_%': 1, '_%s': 1, '%s""': 1, 's"" ': 1, '"" %': 1, ' % ': 1, '% S': 1, ')\n\n': 9, '\n\nf': 1, '\nfo': 1, 'fou': 3, 'our': 3, 'urc': 3, 'rcc': 3, 'cc ': 1, 'c =': 1, '= c': 7, 'v2.': 11, '2.V': 3, '.Vi': 3, 'Vid': 3, 'ide': 3, 'deo': 3, 'eoW': 2, 'oWr': 2, 'Wri': 2, 'rit': 3, 'ite': 3, 'ter': 2, 'er_': 1, 'r_f': 1, '_fo': 1, 'cc(': 1, 'c(*': 1, ""(*'"": 1, ""*'M"": 1, ""'MJ"": 1, 'MJP': 1, 'JPG': 1, ""PG'"": 1, ""G')"": 1, ""')\n"": 1, 'ut ': 1, 't =': 1, 'er(': 1, 'r(o': 1, '(ou': 1, 'le,': 1, 'e, ': 4, ', f': 4, ' fo': 1, 'cc,': 1, 'c, ': 1, ', 2': 1, ' 20': 1, '20.': 1, '0.0': 1, '.0,': 1, '0, ': 2, ', (': 1, ' (6': 1, '(64': 1, '640': 1, '40,': 1, ', 3': 1, ' 36': 1, '360': 1, '60)': 1, '0))': 1, '))\n': 1, '\n\nc': 1, '\nca': 2, 'cap': 4, 'ap ': 1, 'p =': 2, 'eoC': 1, 'oCa': 1, 'Cap': 1, 'apt': 1, 'ptu': 1, 'tur': 2, 'ure': 2, 're(': 1, 'e(i': 1, '(in': 1, 'le)': 1, 'e)\n': 5, '\n\ns': 1, '\nsu': 1, 'sur': 2, 'urf': 2, 'rf ': 1, 'f =': 1, '2.x': 1, '.xf': 1, 'xfe': 1, 'fea': 1, 'eat': 2, 'atu': 1, 'res': 2, 'es2': 1, 's2d': 1, '2d.': 1, 'd.S': 1, '.SU': 1, 'F_c': 1, '_cr': 1, 'cre': 1, 'rea': 4, 'ate': 1, 'te(': 2, 'e()': 3, '()\n': 5, '\n\nw': 1, '\nwh': 1, 'whi': 1, 'le(': 1, 'e(c': 1, '(ca': 1, 'ap.': 3, 'p.i': 1, '.is': 1, 'isO': 1, 'sOp': 1, 'Ope': 1, 'pen': 1, 'ene': 1, 'ned': 1, 'ed(': 1, 'd()': 2, '())': 1, ')):': 1, '):\n': 2, ':\n ': 4, '\n  ': 14, '   ': 102, '  r': 1, ' re': 3, 'ret': 2, 'et,': 1, 't, ': 1, ' fr': 6, 'fra': 12, 'ram': 12, 'ame': 12, 'me ': 5, ' ca': 1, 'p.r': 2, '.re': 3, 'ead': 1, 'ad(': 1, '\n\n ': 5, '  i': 2, ' if': 3, 'if ': 3, 'f r': 1, 'et:': 1, 't:\n': 1, '  #': 2, ' # ': 2, '# O': 1, ' Ou': 1, 'Our': 1, 'ur ': 1, 'r o': 1, ' op': 1, 'ope': 1, 'per': 1, 'era': 1, 'rat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'ons': 1, 'ns ': 1, 's o': 1, ' on': 1, 'on ': 1, 'n t': 1, ' th': 2, 'the': 2, 'he ': 2, 'e f': 1, 'e c': 1, ' co': 1, 'com': 1, 'ome': 1, 'e h': 1, ' he': 1, 'her': 1, 'ere': 1, 're\n': 1, 'e\n ': 2, '  f': 2, '2.c': 1, '.cv': 1, 'cvt': 1, 'vtC': 1, 'tCo': 1, 'Col': 1, 'olo': 1, 'lor': 1, 'or(': 1, 'r(f': 1, '(fr': 4, 'me,': 3, ', c': 1, '2.C': 1, '.CO': 1, 'COL': 1, 'OLO': 1, 'LOR': 1, 'OR_': 1, 'R_B': 1, '_BG': 1, 'BGR': 1, 'GR2': 1, 'R2G': 1, '2GR': 1, 'GRA': 1, 'RAY': 1, 'AY)': 1, 'Y)\n': 1, '  k': 1, ' kp': 2, 'kp ': 1, '= s': 1, ' su': 1, 'rf.': 1, 'f.d': 1, '.de': 2, 'det': 1, 'ete': 1, 'tec': 1, 'ect': 1, 'ct(': 1, 't(f': 1, ', N': 1, ' No': 1, 'Non': 1, 'one': 1, 'ne)': 1, '2.d': 2, '.dr': 1, 'dra': 1, 'raw': 1, 'awK': 1, 'wKe': 1, 'Key': 2, 'eyp': 1, 'ypo': 1, 'poi': 1, 'int': 1, 'nts': 1, 'ts(': 1, 's(f': 1, ', k': 1, 'kp,': 1, 'p, ': 1, ' fl': 1, 'fla': 1, 'lag': 1, 'ags': 1, 'gs=': 1, 's=c': 1, '=cv': 1, '2.D': 1, '.DR': 1, 'DRA': 2, 'RAW': 2, 'AW_': 2, 'W_M': 1, '_MA': 1, 'MAT': 1, 'ATC': 1, 'TCH': 1, 'CHE': 1, 'HES': 1, 'S_F': 1, '_FL': 1, 'FLA': 1, 'LAG': 1, 'AGS': 1, 'GS_': 1, '_DR': 1, 'W_R': 1, '_RI': 1, 'RIC': 1, 'ICH': 1, 'CH_': 1, 'H_K': 1, '_KE': 1, 'KEY': 1, 'EYP': 1, 'YPO': 1, 'POI': 1, 'OIN': 1, 'INT': 1, 'NTS': 1, 'TS,': 1, 'S,\n': 1, ',\n ': 1, '  o': 2, ' ou': 2, 'utI': 1, 'tIm': 1, 'Ima': 1, 'mag': 1, 'age': 1, 'ge=': 1, 'e=f': 1, '=fr': 1, 'me)': 3, 'ut.': 2, 't.w': 1, '.wr': 1, 'wri': 1, 'e(f': 1, '# D': 1, ' Di': 1, 'Dis': 1, 'isp': 1, 'spl': 1, 'pla': 1, 'lay': 1, 'ay ': 1, 'y t': 1, 'e r': 1, 'esu': 1, 'sul': 1, 'ult': 1, 'lti': 1, 'tin': 1, 'ing': 2, 'ng ': 2, 'g f': 1, 'me\n': 1, '  c': 1, '2.i': 1, '.im': 1, 'ims': 1, 'msh': 1, 'sho': 1, 'how': 1, 'ow(': 1, ""w('"": 1, ""('f"": 1, ""'fr"": 1, ""me'"": 1, ""e',"": 1, ""', "": 1, ')\n ': 1, 'f c': 1, '2.w': 1, '.wa': 1, 'wai': 1, 'ait': 1, 'itK': 1, 'tKe': 1, 'ey(': 1, 'y(1': 1, '(1)': 1, '1) ': 1, ') &': 1, ' & ': 1, '& 0': 1, ' 0x': 1, '0xF': 1, 'xFF': 1, 'FF ': 1, 'F =': 1, ' ==': 1, '== ': 1, ' or': 1, 'ord': 1, 'rd(': 1, ""d('"": 1, ""('q"": 1, ""'q'"": 1, ""q')"": 1, ""'):"": 1, '  b': 2, ' br': 2, 'bre': 2, 'eak': 2, 'ak\n': 2, 'k\n ': 1, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, 'k\n\n': 1, '\n\n#': 1, '\n# ': 1, '# R': 1, ' Re': 1, 'Rel': 1, 'ele': 3, 'lea': 3, 'eas': 3, 'ase': 3, 'se ': 1, 'e e': 1, ' ev': 1, 'eve': 1, 'ver': 1, 'ery': 1, 'ryt': 1, 'yth': 1, 'thi': 1, 'hin': 1, 'g i': 1, 'f j': 1, ' jo': 1, 'job': 1, 'ob ': 1, 'b i': 1, ' is': 1, 'is ': 1, 's f': 1, ' fi': 1, 'fin': 1, 'ini': 1, 'nis': 1, 'ish': 1, 'she': 1, 'hed': 1, 'ed\n': 1, 'd\nc': 1, 'rel': 2, 'se(': 2, 't.r': 1, ')\nc': 1, '\ncv': 1, 'des': 1, 'est': 1, 'str': 1, 'tro': 1, 'roy': 1, 'oyA': 1, 'yAl': 1, 'All': 1, 'llW': 1, 'lWi': 1, 'Win': 1, 'ind': 1, 'ndo': 1, 'dow': 1, 'ows': 1, 'ws(': 1, 's()': 1}"
Sebastian Castañeda,test_1.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 26, 'import': 6, 'the': 32, 'necessary': 1, 'packages': 1, 'argparse': 1, 'datetime': 1, 'imutils': 1, 'time': 1, 'cv2': 1, 'construct': 1, 'argument': 2, 'parser': 1, 'and': 8, 'parse': 1, 'arguments': 1, 'ap': 1, '=': 19, 'argparse.argumentparser()': 1, 'ap.add_argument(""-v"",': 1, '""--video"",': 1, 'help=""path': 1, 'to': 3, 'video': 6, 'file"")': 1, 'ap.add_argument(""-a"",': 1, '""--min-area"",': 1, 'type=int,': 1, 'default=1000,': 1, 'help=""minimum': 1, 'area': 1, 'size"")': 1, 'args': 1, 'vars(ap.parse_args())': 1, 'if': 11, 'is': 6, 'none,': 3, 'then': 3, 'we': 3, 'are': 2, 'reading': 2, 'from': 3, 'webcam': 1, 'args.get(""video"",': 1, 'none)': 1, 'none:': 2, 'camera': 3, 'cv2.videocapture(0)': 1, 'time.sleep(0.25)': 1, 'otherwise,': 1, 'a': 2, 'file': 1, 'else:': 1, 'cv2.videocapture(args[""video""])': 1, 'initialize': 3, 'first': 3, 'frame': 9, 'in': 3, 'stream': 1, 'firstframe': 3, 'none': 1, 'cv2.namedwindow(""security': 1, 'feed"",': 2, 'cv2.window_normal)': 3, 'cv2.namedwindow(""thresh"",': 1, 'cv2.namedwindow(""frame': 1, 'delta"",': 2, 'loop': 2, 'over': 2, 'frames': 1, 'of': 2, 'while': 1, 'true:': 1, 'grab': 1, 'current': 2, 'occupied/unoccupied': 1, 'text': 5, '(grabbed,': 1, 'frame)': 2, 'camera.read()': 1, '""unoccupied""': 1, 'could': 1, 'not': 2, 'be': 1, 'grabbed,': 1, 'have': 1, 'reached': 1, 'end': 1, 'grabbed:': 1, 'break': 3, 'resize': 1, 'frame,': 2, 'convert': 1, 'it': 5, 'grayscale,': 1, 'blur': 1, 'imutils.resize(frame,': 1, 'width=500)': 1, 'gray': 3, 'cv2.cvtcolor(frame,': 1, 'cv2.color_bgr2gray)': 1, 'cv2.gaussianblur(gray,': 1, '(21,': 1, '21),': 1, '0)': 1, 'continue': 2, 'compute': 2, 'absolute': 1, 'difference': 1, 'between': 1, 'framedelta': 1, 'cv2.absdiff(firstframe,': 1, 'gray)': 1, 'thresh': 2, 'cv2.threshold(framedelta,': 1, '25,': 1, '255,': 2, 'cv2.thresh_binary)[1]': 1, 'dilate': 1, 'thresholded': 2, 'image': 2, 'fill': 1, 'holes,': 1, 'find': 1, 'contours': 2, 'on': 3, 'cv2.dilate(thresh,': 1, 'iterations=2)': 1, '(_,': 1, 'cnts,': 1, '_)': 1, 'cv2.findcontours(thresh.copy(),': 1, 'cv2.retr_external,': 1, 'cv2.chain_approx_simple)': 1, 'for': 2, 'c': 1, 'cnts:': 1, 'contour': 1, 'too': 1, 'small,': 1, 'ignore': 1, 'cv2.contourarea(c)': 1, '<': 1, 'args[""min_area""]:': 1, 'bounding': 1, 'box': 1, 'contour,': 1, 'draw': 2, 'update': 1, '(x,': 2, 'y,': 1, 'w,': 2, 'h)': 1, 'cv2.boundingrect(c)': 1, 'cv2.rectangle(frame,': 1, 'y),': 1, '(x': 1, '+': 2, 'y': 1, 'h),': 1, '(0,': 3, '0),': 1, '2)': 2, '""occupied""': 1, 'timestamp': 1, 'cv2.puttext(frame,': 2, '""room': 1, 'status:': 1, '{}"".format(text),': 1, '(10,': 2, '20),': 1, 'cv2.font_hershey_simplex,': 2, '0.5,': 1, '0,': 2, '255),': 2, 'datetime.datetime.now().strftime(""%a': 1, '%d': 1, '%b': 1, '%y': 1, '%i:%m:%s%p""),': 1, 'frame.shape[0]': 1, '-': 1, '10),': 1, '0.35,': 1, '1)': 1, 'show': 1, 'record': 1, 'user': 1, 'presses': 1, 'key': 5, 'cv2.imshow(""security': 1, 'cv2.imshow(""thresh"",': 1, 'thresh)': 1, 'cv2.imshow(""frame': 1, 'framedelta)': 1, 'time.sleep(0.15)': 1, 'cv2.waitkey(1)': 1, '&': 1, '0xff': 1, 'cv2.waitkey(0)': 1, '`q`': 1, 'pressed,': 1, 'lop': 1, '==': 1, 'ord(""q""):': 1, 'cleanup': 1, 'close': 1, 'any': 1, 'open': 1, 'windows': 1, 'camera.release()': 1, 'cv2.destroyallwindows()': 1}","{'# i': 7, ' im': 5, 'imp': 6, 'mpo': 6, 'por': 6, 'ort': 6, 'rt ': 7, 't t': 4, ' th': 40, 'the': 36, 'he ': 32, 'e n': 1, ' ne': 1, 'nec': 1, 'ece': 1, 'ces': 1, 'ess': 3, 'ssa': 1, 'sar': 1, 'ary': 1, 'ry ': 1, 'y p': 1, ' pa': 3, 'pac': 1, 'ack': 1, 'cka': 1, 'kag': 1, 'age': 3, 'ges': 1, 'es\n': 1, 's\ni': 2, '\nim': 5, 't a': 2, ' ar': 10, 'arg': 12, 'rgp': 2, 'gpa': 2, 'par': 5, 'ars': 7, 'rse': 6, 'se\n': 1, 'e\ni': 3, 't d': 1, ' da': 2, 'dat': 4, 'ate': 6, 'tet': 3, 'eti': 3, 'tim': 8, 'ime': 8, 'me\n': 4, 't i': 3, 'imu': 3, 'mut': 2, 'uti': 2, 'til': 2, 'ils': 2, 'ls\n': 1, ' ti': 4, 't c': 1, ' cv': 28, 'cv2': 32, 'v2\n': 1, '2\n\n': 1, '\n\n#': 6, '\n# ': 6, '# c': 4, ' co': 11, 'con': 9, 'ons': 2, 'nst': 1, 'str': 4, 'tru': 1, 'ruc': 1, 'uct': 1, 'ct ': 1, 'e a': 9, 'rgu': 6, 'gum': 6, 'ume': 6, 'men': 6, 'ent': 8, 'nt ': 4, 't p': 1, 'ser': 3, 'er ': 4, 'r a': 1, ' an': 9, 'and': 8, 'nd ': 8, 'd p': 1, 'se ': 2, 'e t': 12, 'nts': 3, 'ts\n': 1, 's\na': 1, '\nap': 3, 'ap ': 1, 'p =': 1, ' = ': 19, '= a': 1, 'se.': 1, 'e.A': 1, '.Ar': 1, 'Arg': 1, 'ntP': 1, 'tPa': 1, 'Par': 1, 'er(': 1, 'r()': 1, '()\n': 4, ')\na': 3, 'ap.': 3, 'p.a': 2, '.ad': 2, 'add': 2, 'dd_': 2, 'd_a': 2, '_ar': 4, 'nt(': 2, 't(""': 3, '(""-': 2, '""-v': 1, '-v""': 1, 'v"",': 1, '"", ': 11, ', ""': 3, ' ""-': 2, '""--': 2, '--v': 1, '-vi': 1, 'vid': 9, 'ide': 11, 'deo': 11, 'eo""': 3, 'o"",': 2, ', h': 3, ' he': 2, 'hel': 2, 'elp': 2, 'lp=': 2, 'p=""': 2, '=""p': 1, '""pa': 1, 'pat': 1, 'ath': 1, 'th ': 1, 'h t': 1, ' to': 4, 'to ': 3, 'o t': 1, 'e v': 5, ' vi': 6, 'eo ': 4, 'o f': 3, ' fi': 9, 'fil': 3, 'ile': 3, 'le""': 1, 'e"")': 2, '"")\n': 2, '""-a': 1, '-a""': 1, 'a"",': 4, '--m': 1, '-mi': 1, 'min': 3, 'in-': 1, 'n-a': 1, '-ar': 1, 'are': 5, 'rea': 12, 'ea""': 2, ', t': 5, ' ty': 1, 'typ': 1, 'ype': 1, 'pe=': 1, 'e=i': 1, '=in': 1, 'int': 1, 'nt,': 1, 't, ': 1, ', d': 3, ' de': 1, 'def': 1, 'efa': 1, 'fau': 1, 'aul': 1, 'ult': 1, 'lt=': 1, 't=1': 1, '=10': 1, '100': 1, '000': 1, '00,': 1, '0, ': 8, '=""m': 1, '""mi': 2, 'ini': 4, 'nim': 1, 'mum': 1, 'um ': 1, 'm a': 2, 'ea ': 1, 'a s': 1, ' si': 1, 'siz': 3, 'ize': 6, 'ze""': 1, '\nar': 1, 'rgs': 5, 'gs ': 1, 's =': 1, '= v': 1, ' va': 1, 'var': 1, 'rs(': 2, 's(a': 1, '(ap': 1, 'p.p': 1, '.pa': 1, 'se_': 1, 'e_a': 1, 'gs(': 1, 's()': 2, '())': 1, '))\n': 1, ')\n\n': 10, ' if': 10, 'if ': 11, 'f t': 8, 'o a': 1, ' is': 6, 'is ': 6, 's N': 4, ' No': 7, 'Non': 7, 'one': 7, 'ne,': 3, 'e, ': 12, 'hen': 3, 'en ': 5, 'n w': 3, ' we': 4, 'we ': 3, 're ': 3, 'e r': 3, ' re': 5, 'ead': 3, 'adi': 2, 'din': 4, 'ing': 4, 'ng ': 3, 'g f': 2, ' fr': 20, 'fro': 3, 'rom': 3, 'om ': 4, 'm w': 1, 'web': 1, 'ebc': 1, 'bca': 1, 'cam': 6, 'am\n': 2, 'm\ni': 1, '\nif': 1, 'f a': 1, 'gs.': 1, 's.g': 1, '.ge': 1, 'get': 1, 'et(': 1, '(""v': 1, '""vi': 2, ', N': 2, 'ne)': 1, 'e) ': 2, ') i': 1, 'ne:': 2, 'e:\n': 4, ':\n ': 8, '\n  ': 51, '   ': 166, '  c': 10, ' ca': 4, 'ame': 37, 'mer': 5, 'era': 6, 'ra ': 3, 'a =': 3, '= c': 12, 'v2.': 31, '2.V': 2, '.Vi': 2, 'Vid': 2, 'eoC': 2, 'oCa': 2, 'Cap': 2, 'apt': 2, 'ptu': 2, 'tur': 2, 'ure': 2, 're(': 2, 'e(0': 1, '(0)': 2, '0)\n': 4, ')\n ': 11, '  t': 5, 'me.': 5, 'e.s': 3, '.sl': 2, 'sle': 2, 'lee': 2, 'eep': 2, 'ep(': 2, 'p(0': 2, '(0.': 2, '0.2': 1, '.25': 1, '25)': 1, '5)\n': 2, '# o': 3, ' ot': 1, 'oth': 1, 'her': 1, 'erw': 1, 'rwi': 1, 'wis': 1, 'ise': 1, 'se,': 1, ', w': 3, ' a ': 2, 'a v': 1, 'le\n': 1, 'e\ne': 1, '\nel': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e(a': 1, '(ar': 1, 'gs[': 2, 's[""': 2, '[""v': 1, 'o""]': 1, '""])': 1, '])\n': 1, ' in': 6, 'nit': 3, 'iti': 3, 'tia': 3, 'ial': 3, 'ali': 3, 'liz': 3, 'ze ': 4, 'e f': 8, 'fir': 7, 'irs': 7, 'rst': 7, 'st ': 3, 't f': 5, 'fra': 23, 'ram': 29, 'me ': 12, 'e i': 5, 'in ': 3, 'n t': 5, 'o s': 2, ' st': 1, 'tre': 1, 'eam': 1, 'm\nf': 1, '\nfi': 1, 'stF': 4, 'tFr': 4, 'Fra': 6, 'e =': 3, '= N': 1, 'ne\n': 1, 'e\n\n': 3, '\n\nc': 1, '\ncv': 4, '2.n': 3, '.na': 3, 'nam': 3, 'med': 3, 'edW': 3, 'dWi': 3, 'Win': 4, 'ind': 7, 'ndo': 5, 'dow': 5, 'ow(': 7, 'w(""': 6, '(""S': 2, '""Se': 2, 'Sec': 2, 'ecu': 2, 'cur': 4, 'uri': 2, 'rit': 2, 'ity': 2, 'ty ': 2, 'y F': 2, ' Fe': 2, 'Fee': 2, 'eed': 2, 'ed""': 4, 'd"",': 2, ', c': 11, '2.W': 3, '.WI': 3, 'WIN': 3, 'IND': 3, 'NDO': 3, 'DOW': 3, 'OW_': 3, 'W_N': 3, '_NO': 3, 'NOR': 3, 'ORM': 3, 'RMA': 3, 'MAL': 3, 'AL)': 3, 'L)\n': 3, ')\nc': 3, '(""T': 2, '""Th': 2, 'Thr': 2, 'hre': 10, 'res': 14, 'esh': 10, 'sh""': 2, 'h"",': 2, '(""F': 2, '""Fr': 2, 'e D': 2, ' De': 2, 'Del': 5, 'elt': 5, 'lta': 5, 'ta""': 2, '# l': 2, ' lo': 3, 'loo': 2, 'oop': 2, 'op ': 2, 'p o': 3, ' ov': 2, 'ove': 2, 'ver': 3, 'r t': 3, 'mes': 2, 'es ': 2, 's o': 1, ' of': 2, 'of ': 2, 'eo\n': 2, 'o\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'le ': 1, 'e T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue:': 1, '  #': 19, ' # ': 19, '# g': 1, ' gr': 8, 'gra': 10, 'rab': 4, 'ab ': 1, 'b t': 1, 'e c': 7, ' cu': 2, 'urr': 2, 'rre': 2, 'ren': 3, 'd i': 4, 'e o': 1, ' oc': 1, 'occ': 3, 'ccu': 4, 'cup': 4, 'upi': 4, 'pie': 4, 'ied': 4, 'ed/': 1, 'd/u': 1, '/un': 1, 'uno': 1, 'noc': 2, 'ed\n': 1, 'd\n ': 3, '# t': 2, ' te': 5, 'tex': 6, 'ext': 8, 'xt\n': 2, 't\n ': 5, '  (': 4, ' (g': 1, '(gr': 2, 'abb': 3, 'bbe': 3, 'bed': 3, 'ed,': 3, 'd, ': 3, ', f': 4, 'me)': 2, ') =': 3, 'ra.': 2, 'a.r': 2, '.re': 4, 'ad(': 1, 'd()': 1, 'xt ': 3, 't =': 2, '= ""': 2, ' ""U': 1, '""Un': 1, 'Uno': 1, 'd""\n': 2, '""\n\n': 2, '\n\n ': 13, 'cou': 1, 'oul': 1, 'uld': 1, 'ld ': 1, 'd n': 1, ' no': 2, 'not': 2, 'ot ': 2, 't b': 1, ' be': 2, 'be ': 1, 'e g': 1, 'e h': 1, ' ha': 1, 'hav': 1, 'ave': 1, 've ': 1, 'eac': 1, 'ach': 1, 'che': 1, 'hed': 1, 'ed ': 3, 'd t': 2, 'e e': 1, ' en': 1, 'end': 1, 'nd\n': 2, 'o\n ': 1, '  i': 4, 'f n': 1, 't g': 1, 'ed:': 1, 'd:\n': 1, '  b': 2, ' br': 3, 'bre': 3, 'eak': 3, 'ak\n': 2, 'k\n\n': 2, '# r': 1, 'esi': 2, 'me,': 8, 'onv': 1, 'nve': 1, 'ert': 1, ' it': 6, 'it ': 2, 'o g': 1, 'ray': 6, 'ays': 1, 'ysc': 1, 'sca': 1, 'cal': 1, 'ale': 1, 'le,': 1, ', a': 1, 'd b': 1, ' bl': 1, 'blu': 1, 'lur': 2, 'ur ': 2, 'r i': 2, 'it\n': 3, '  f': 4, '= i': 1, 'ls.': 1, 's.r': 1, 'ze(': 1, 'e(f': 2, '(fr': 6, ' wi': 2, 'wid': 1, 'idt': 1, 'dth': 1, 'th=': 1, 'h=5': 1, '=50': 1, '500': 1, '00)': 1, '  g': 2, 'ay ': 2, 'y =': 5, '2.c': 2, '.cv': 1, 'cvt': 1, 'vtC': 1, 'tCo': 1, 'Col': 1, 'olo': 1, 'lor': 1, 'or(': 1, 'r(f': 1, '2.C': 2, '.CO': 1, 'COL': 1, 'OLO': 1, 'LOR': 1, 'OR_': 1, 'R_B': 1, '_BG': 1, 'BGR': 1, 'GR2': 1, 'R2G': 1, '2GR': 1, 'GRA': 1, 'RAY': 1, 'AY)': 1, 'Y)\n': 1, '2.G': 1, '.Ga': 1, 'Gau': 1, 'aus': 1, 'uss': 1, 'ssi': 1, 'sia': 1, 'ian': 1, 'anB': 1, 'nBl': 1, 'Blu': 1, 'ur(': 1, 'r(g': 1, 'ay,': 1, 'y, ': 2, ', (': 7, ' (2': 1, '(21': 1, '21,': 1, '1, ': 1, ', 2': 9, ' 21': 1, '21)': 1, '1),': 1, '), ': 10, ', 0': 6, ' 0)': 2, ', i': 3, 'f f': 1, '= g': 1, 'ay\n': 1, 'y\n ': 2, 'ont': 8, 'nti': 2, 'tin': 2, 'inu': 2, 'nue': 2, 'ue\n': 2, 'com': 2, 'omp': 2, 'mpu': 2, 'put': 4, 'ute': 3, 'te ': 5, ' ab': 1, 'abs': 2, 'bso': 1, 'sol': 1, 'olu': 1, 'lut': 1, 'e d': 1, ' di': 2, 'dif': 2, 'iff': 2, 'ffe': 1, 'fer': 1, 'ere': 1, 'enc': 1, 'nce': 1, 'ce ': 1, 'e b': 2, 'bet': 1, 'etw': 1, 'twe': 1, 'wee': 1, 'een': 1, '# f': 1, 'e\n ': 3, 'meD': 3, 'eDe': 3, 'ta ': 1, '2.a': 1, '.ab': 1, 'bsd': 1, 'sdi': 1, 'ff(': 1, 'f(f': 1, '(fi': 1, ', g': 1, 'ay)': 1, 'y)\n': 1, 'thr': 8, 'sh ': 2, 'h =': 2, '2.t': 1, '.th': 1, 'sho': 7, 'hol': 4, 'old': 3, 'ld(': 1, 'd(f': 1, 'ta,': 1, 'a, ': 1, ' 25': 5, '25,': 1, '5, ': 5, '255': 4, '55,': 2, '2.T': 1, '.TH': 1, 'THR': 1, 'HRE': 1, 'RES': 1, 'ESH': 1, 'SH_': 1, 'H_B': 1, '_BI': 1, 'BIN': 1, 'INA': 1, 'NAR': 1, 'ARY': 1, 'RY)': 1, 'Y)[': 1, ')[1': 1, '[1]': 1, '1]\n': 1, ']\n\n': 1, '# d': 2, 'dil': 2, 'ila': 2, 'lat': 2, 'lde': 2, 'ded': 2, 'ima': 2, 'mag': 2, 'ge ': 1, 'ill': 1, 'll ': 1, 'l i': 1, 'n h': 1, ' ho': 1, 'ole': 1, 'les': 1, 'es,': 1, 's, ': 2, 'n f': 1, 'fin': 2, 'd c': 2, 'nto': 6, 'tou': 6, 'our': 6, 'urs': 3, 'rs\n': 2, 's\n ': 2, ' on': 3, 'on ': 3, 'ge\n': 1, '2.d': 2, '.di': 1, 'te(': 1, 'e(t': 1, '(th': 2, 'sh,': 1, 'h, ': 1, 'ite': 1, 'ter': 1, 'rat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'ns=': 1, 's=2': 1, '=2)': 1, '2)\n': 3, ' (_': 1, '(_,': 1, '_, ': 1, ' cn': 2, 'cnt': 2, 'ts,': 1, ', _': 1, ' _)': 1, '_) ': 1, '2.f': 1, '.fi': 1, 'ndC': 1, 'dCo': 1, 'Con': 1, 's(t': 1, 'sh.': 1, 'h.c': 1, '.co': 2, 'cop': 1, 'opy': 1, 'py(': 1, 'y()': 1, '(),': 1, '2.R': 1, '.RE': 1, 'RET': 1, 'ETR': 1, 'TR_': 1, 'R_E': 1, '_EX': 1, 'EXT': 1, 'XTE': 1, 'TER': 1, 'ERN': 1, 'RNA': 1, 'NAL': 1, 'AL,': 1, 'L, ': 1, '.CH': 1, 'CHA': 1, 'HAI': 1, 'AIN': 1, 'IN_': 1, 'N_A': 1, '_AP': 1, 'APP': 1, 'PPR': 1, 'PRO': 1, 'ROX': 1, 'OX_': 1, 'X_S': 1, '_SI': 3, 'SIM': 3, 'IMP': 3, 'MPL': 3, 'PLE': 3, 'LE)': 1, 'E)\n': 1, ' fo': 2, 'for': 3, 'or ': 2, 'r c': 1, ' c ': 1, 'c i': 1, 'n c': 1, 'ts:': 1, 's:\n': 1, 's t': 1, 'too': 1, 'oo ': 1, ' sm': 1, 'sma': 1, 'mal': 1, 'all': 1, 'll,': 1, 'l, ': 1, ' ig': 1, 'ign': 1, 'gno': 1, 'nor': 1, 'ore': 1, 'f c': 1, 'urA': 1, 'rAr': 1, 'Are': 1, 'ea(': 1, 'a(c': 1, '(c)': 2, 'c) ': 1, ') <': 1, ' < ': 1, '< a': 1, '[""m': 1, 'in_': 1, 'n_a': 1, 'a""]': 1, '""]:': 1, ']:\n': 1, ' bo': 2, 'bou': 2, 'oun': 2, 'und': 2, 'ndi': 2, 'g b': 1, 'box': 1, 'ox ': 1, 'x f': 1, 'ur,': 1, 'r, ': 1, ' dr': 2, 'dra': 2, 'raw': 2, 'aw ': 2, 'w i': 1, 't o': 1, 'e,\n': 1, ',\n ': 2, '# a': 1, 'd u': 1, ' up': 1, 'upd': 1, 'pda': 1, ' (x': 3, '(x,': 2, 'x, ': 2, ', y': 3, ' y,': 1, ' w,': 2, 'w, ': 2, ' h)': 2, 'h) ': 1, '2.b': 1, '.bo': 1, 'ngR': 1, 'gRe': 1, 'Rec': 1, 'ect': 2, 'ct(': 1, 't(c': 1, 'c)\n': 1, '2.r': 1, 'rec': 2, 'cta': 1, 'tan': 1, 'ang': 1, 'ngl': 1, 'gle': 1, 'le(': 1, ' y)': 1, 'y),': 1, '(x ': 1, 'x +': 1, ' + ': 2, '+ w': 1, ' y ': 1, 'y +': 1, '+ h': 1, 'h),': 1, ' (0': 3, '(0,': 3, '0),': 3, ' 2)': 2, ' ""O': 1, '""Oc': 1, 'Occ': 1, 'w t': 2, 'est': 2, 'sta': 1, 'tam': 1, 'amp': 1, 'mp ': 1, '2.p': 2, '.pu': 2, 'utT': 2, 'tTe': 2, 'Tex': 2, 'xt(': 2, 't(f': 2, ' ""R': 1, '""Ro': 1, 'Roo': 1, 'oom': 1, 'm S': 1, ' St': 1, 'Sta': 1, 'tat': 1, 'atu': 1, 'tus': 1, 'us:': 1, 's: ': 1, ': {': 1, ' {}': 1, '{}""': 1, '}"".': 1, '"".f': 1, '.fo': 1, 'orm': 1, 'rma': 1, 'mat': 1, 'at(': 1, 't(t': 1, '(te': 1, 'xt)': 1, 't),': 1, ' (1': 2, '(10': 2, '10,': 2, ' 20': 1, '20)': 1, '2.F': 2, '.FO': 2, 'FON': 2, 'ONT': 2, 'NT_': 2, 'T_H': 2, '_HE': 2, 'HER': 2, 'ERS': 2, 'RSH': 2, 'SHE': 2, 'HEY': 2, 'EY_': 2, 'Y_S': 2, 'LEX': 2, 'EX,': 2, 'X, ': 2, ' 0.': 2, '0.5': 1, '.5,': 1, ' 0,': 2, '55)': 2, '5),': 2, 'e.d': 1, '.da': 1, 'e.n': 1, '.no': 1, 'now': 1, 'w()': 1, '().': 1, ').s': 1, '.st': 1, 'trf': 1, 'rft': 1, 'fti': 1, 'me(': 1, 'e(""': 1, '(""%': 1, '""%A': 1, '%A ': 1, 'A %': 1, ' %d': 1, '%d ': 1, 'd %': 1, ' %B': 1, '%B ': 1, 'B %': 1, ' %Y': 1, '%Y ': 1, 'Y %': 1, ' %I': 1, '%I:': 1, 'I:%': 1, ':%M': 1, '%M:': 1, 'M:%': 1, ':%S': 1, '%S%': 1, 'S%p': 1, '%p""': 1, 'p"")': 1, '""),': 1, '),\n': 1, '.sh': 1, 'sha': 1, 'hap': 1, 'ape': 1, 'pe[': 1, 'e[0': 1, '[0]': 1, '0] ': 1, '] -': 1, ' - ': 1, '- 1': 1, ' 10': 1, '10)': 1, '0.3': 1, '.35': 1, '35,': 1, ', 1': 1, ' 1)': 1, '1)\n': 1, '# s': 1, ' sh': 1, 'how': 4, 'ow ': 1, 'd r': 1, 'eco': 1, 'cor': 1, 'ord': 2, 'rd ': 1, 'e u': 1, ' us': 1, 'use': 1, 'r p': 1, ' pr': 2, 'pre': 2, 'sse': 2, 'ses': 1, 's a': 1, 'a k': 1, ' ke': 5, 'key': 5, 'ey\n': 1, '2.i': 3, '.im': 3, 'ims': 3, 'msh': 3, 'e)\n': 1, 'sh)': 1, 'h)\n': 1, 'ta)': 1, 'a)\n': 1, '0.1': 1, '.15': 1, '15)': 1, '  k': 1, 'ey ': 4, '2.w': 2, '.wa': 2, 'wai': 2, 'ait': 2, 'itK': 2, 'tKe': 2, 'Key': 2, 'ey(': 2, 'y(1': 1, '(1)': 1, '1) ': 1, ') &': 1, ' & ': 1, '& 0': 1, ' 0x': 1, '0xF': 1, 'xFF': 1, 'FF\n': 1, 'F\n\n': 1, '# k': 1, 'y(0': 1, 'e `': 1, ' `q': 1, '`q`': 1, 'q` ': 1, '` k': 1, 'y i': 1, 's p': 1, 'sed': 1, ', b': 1, 'ak ': 1, 'k f': 1, 'm t': 1, 'e l': 1, 'lop': 1, 'op\n': 1, 'p\n ': 1, 'f k': 1, ' ==': 1, '== ': 1, '= o': 1, ' or': 1, 'rd(': 1, 'd(""': 1, '(""q': 1, '""q""': 1, 'q"")': 1, '""):': 1, '):\n': 1, ' cl': 2, 'cle': 1, 'lea': 2, 'ean': 1, 'anu': 1, 'nup': 1, 'up ': 1, 'p t': 1, 'a a': 1, 'clo': 1, 'los': 1, 'ose': 1, 'any': 1, 'ny ': 1, 'y o': 1, ' op': 1, 'ope': 1, 'pen': 1, 'win': 1, 'ows': 2, 'ws\n': 1, 's\nc': 1, '\nca': 1, 'rel': 1, 'ele': 1, 'eas': 1, 'ase': 1, 'se(': 1, 'e()': 1, '.de': 1, 'des': 1, 'tro': 1, 'roy': 1, 'oyA': 1, 'yAl': 1, 'All': 1, 'llW': 1, 'lWi': 1, 'ws(': 1}"
Sebastian Castañeda,utils.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 3, 'logging': 1, 'cv2': 1, 'numpy': 1, 'as': 1, 'np': 1, 'logger': 1, '=': 20, 'logging.getlogger(__name__)': 1, 'color_yellow': 1, '(0,': 5, '255,': 3, '255)': 4, 'color_blue': 1, '(255,': 2, '0,': 3, '0)': 3, 'color_red': 1, 'color_green': 1, 'color_black': 1, 'color_white': 1, 'color_orange': 1, '153,': 1, 'class': 1, 'roiselector(object):': 1, 'def': 3, '__init__(self,': 1, 'win_name,': 1, 'callback_func):': 1, 'logger.debug(""initializing': 1, 'roi': 1, 'selector..."")': 1, 'self.win_name': 1, 'win_name': 1, 'self.callback_func': 1, 'callback_func': 1, 'cv2.setmousecallback(self.win_name,': 1, 'self.on_mouse_event)': 1, 'self.selection_start': 4, 'none': 4, 'self.selected_rect': 4, 'on_mouse_event(self,': 1, 'event,': 1, 'x,': 3, 'y,': 1, 'flags,': 1, 'param):': 1, 'if': 4, 'event': 4, '==': 2, 'cv2.event_lbuttondown:': 1, 'logger.debug(""mouse': 2, 'fired!': 2, ""'mouse"": 2, 'left': 2, 'button': 2, ""down'"": 1, '(%d,%d)"",': 2, 'y)': 3, '(x,': 1, 'elif': 1, 'cv2.event_lbuttonup': 1, 'and': 2, 'self.selection_start:': 1, ""up'"": 1, 'logger.debug(""calculating': 1, 'rect..."")': 1, 'x_orig,': 1, 'y_orig': 1, 'x_start,': 2, 'y_start': 1, 'np.minimum([x_orig,': 1, 'y_orig],': 2, '[x,': 2, 'y])': 2, 'x_end,': 3, 'y_end': 3, 'np.maximum([x_orig,': 1, 'x_end': 1, '>': 2, 'x_start': 1, 'y_start:': 1, '(x_start,': 2, 'y_start,': 2, 'y_end)': 1, 'logger.debug(""new': 1, 'rect': 1, 'selected': 1, '(%d,%d,%d,%d)"",': 1, '*self.selected_rect)': 1, 'self.selected_rect:': 2, 'self.callback_func(self.selected_rect)': 1, 'draw_rect(self,': 1, 'img):': 1, 'not': 1, 'return': 2, 'false': 1, 'cv2.rectangle(img,': 1, 'y_start),': 1, '(x_end,': 1, 'y_end),': 1, 'color_green,': 1, '2)': 1, 'true': 1}","{'imp': 3, 'mpo': 3, 'por': 3, 'ort': 3, 'rt ': 8, 't l': 1, ' lo': 7, 'log': 8, 'ogg': 9, 'ggi': 2, 'gin': 2, 'ing': 4, 'ng\n': 1, 'g\n\n': 1, '\n\ni': 1, '\nim': 2, 't c': 1, ' cv': 5, 'cv2': 5, 'v2\n': 1, '2\ni': 1, 't n': 1, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 1, 'as ': 1, 's n': 1, ' np': 3, 'np\n': 1, 'p\n\n': 1, '\n\n\n': 3, '\n\nl': 1, '\nlo': 1, 'gge': 7, 'ger': 7, 'er ': 1, 'r =': 1, ' = ': 20, '= l': 1, 'ng.': 1, 'g.g': 1, '.ge': 1, 'get': 1, 'etL': 1, 'tLo': 1, 'Log': 1, 'er(': 1, 'r(_': 1, '(__': 1, '__n': 1, '_na': 5, 'nam': 5, 'ame': 5, 'me_': 1, 'e__': 1, '__)': 1, '_)\n': 1, ')\n\n': 3, '\n\nC': 1, '\nCO': 7, 'COL': 8, 'OLO': 8, 'LOR': 8, 'OR_': 8, 'R_Y': 1, '_YE': 1, 'YEL': 1, 'ELL': 1, 'LLO': 1, 'LOW': 1, 'OW ': 1, 'W =': 1, '= (': 9, ' (0': 5, '(0,': 5, '0, ': 8, ', 2': 8, ' 25': 7, '255': 9, '55,': 5, '5, ': 5, '55)': 4, '5)\n': 4, ')\nC': 6, 'R_B': 2, '_BL': 2, 'BLU': 1, 'LUE': 1, 'UE ': 1, 'E =': 3, ' (2': 2, '(25': 2, ', 0': 6, ' 0,': 3, ' 0)': 3, '0)\n': 3, 'R_R': 1, '_RE': 1, 'RED': 1, 'ED ': 1, 'D =': 1, 'R_G': 2, '_GR': 2, 'GRE': 2, 'REE': 2, 'EEN': 2, 'EN ': 1, 'N =': 1, 'BLA': 1, 'LAC': 1, 'ACK': 1, 'CK ': 1, 'K =': 1, 'R_W': 1, '_WH': 1, 'WHI': 1, 'HIT': 1, 'ITE': 1, 'TE ': 1, 'R_O': 1, '_OR': 1, 'ORA': 1, 'RAN': 1, 'ANG': 1, 'NGE': 1, 'GE ': 1, ', 1': 1, ' 15': 1, '153': 1, '53,': 1, '3, ': 1, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss ': 1, 's R': 1, ' RO': 2, 'ROI': 2, 'OIS': 1, 'ISe': 1, 'Sel': 1, 'ele': 16, 'lec': 16, 'ect': 29, 'cto': 2, 'tor': 2, 'or(': 1, 'r(o': 1, '(ob': 1, 'obj': 1, 'bje': 1, 'jec': 1, 'ct)': 3, 't):': 1, '):\n': 4, ':\n\n': 1, '\n\n ': 3, '\n  ': 30, '   ': 240, '  d': 3, ' de': 3, 'def': 3, 'ef ': 3, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 2, 'nit': 2, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 5, 'sel': 36, 'elf': 21, 'lf,': 3, 'f, ': 3, ', w': 1, ' wi': 2, 'win': 4, 'in_': 4, 'n_n': 4, 'me,': 2, 'e, ': 2, ', c': 1, ' ca': 2, 'cal': 5, 'all': 5, 'llb': 5, 'lba': 5, 'bac': 5, 'ack': 5, 'ck_': 4, 'k_f': 4, '_fu': 4, 'fun': 4, 'unc': 4, 'nc)': 1, 'c):': 1, ':\n ': 8, '  l': 5, 'er.': 5, 'r.d': 5, '.de': 5, 'deb': 5, 'ebu': 5, 'bug': 5, 'ug(': 5, 'g(""': 5, '(""I': 1, '""In': 1, 'Ini': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'ali': 1, 'liz': 1, 'izi': 1, 'zin': 1, 'ng ': 2, 'g R': 1, 'OI ': 1, 'I s': 1, ' se': 17, 'or.': 1, 'r..': 1, '...': 2, '..""': 2, '."")': 2, '"")\n': 2, ')\n ': 11, '  s': 9, 'lf.': 18, 'f.w': 2, '.wi': 2, 'me ': 1, 'e =': 1, '= w': 1, 'me\n': 1, 'e\n ': 5, 'f.c': 2, '.ca': 2, 'nc ': 1, 'c =': 1, '= c': 3, 'nc\n': 1, 'c\n ': 1, '  c': 2, 'v2.': 4, '2.s': 1, '.se': 14, 'set': 1, 'etM': 1, 'tMo': 1, 'Mou': 1, 'ous': 7, 'use': 7, 'seC': 1, 'eCa': 1, 'Cal': 1, 'ck(': 1, 'k(s': 1, ', s': 1, 'f.o': 1, '.on': 1, 'on_': 7, 'n_m': 2, '_mo': 2, 'mou': 6, 'se_': 2, 'e_e': 2, '_ev': 2, 'eve': 7, 'ven': 7, 'ent': 7, 'nt)': 1, 't)\n': 3, 'f.s': 13, 'cti': 5, 'tio': 5, 'ion': 5, 'n_s': 5, '_st': 15, 'sta': 15, 'tar': 15, 'art': 15, 't =': 9, '= N': 4, ' No': 4, 'Non': 4, 'one': 4, 'ne\n': 4, 'cte': 9, 'ted': 9, 'ed_': 8, 'd_r': 8, '_re': 9, 'rec': 12, 'ct ': 4, 'e\n\n': 1, 'f o': 1, ' on': 1, 'nt(': 1, 't(s': 2, ', e': 1, ' ev': 5, 'nt,': 1, 't, ': 7, ', x': 5, ' x,': 3, 'x, ': 6, ', y': 17, ' y,': 1, 'y, ': 1, ', f': 1, ' fl': 1, 'fla': 1, 'lag': 1, 'ags': 1, 'gs,': 1, 's, ': 1, ', p': 1, ' pa': 1, 'par': 1, 'ara': 1, 'ram': 1, 'am)': 1, 'm):': 1, '  i': 4, ' if': 4, 'if ': 5, 'f e': 2, 'nt ': 4, ' ==': 2, '== ': 2, '2.E': 2, '.EV': 2, 'EVE': 2, 'VEN': 2, 'ENT': 2, 'NT_': 2, 'T_L': 2, '_LB': 2, 'LBU': 2, 'BUT': 2, 'UTT': 2, 'TTO': 2, 'TON': 2, 'OND': 1, 'NDO': 1, 'DOW': 1, 'OWN': 1, 'WN:': 1, 'N:\n': 1, '(""m': 2, '""mo': 2, 'se ': 4, 'e e': 2, 't f': 2, ' fi': 2, 'fir': 2, 'ire': 2, 'red': 2, 'ed!': 2, 'd! ': 2, ""! '"": 2, "" 'm"": 2, ""'mo"": 2, 'e l': 2, ' le': 2, 'lef': 2, 'eft': 2, 'ft ': 2, 't b': 2, ' bu': 2, 'but': 2, 'utt': 2, 'tto': 2, 'ton': 2, 'on ': 2, 'n d': 1, ' do': 1, 'dow': 1, 'own': 1, ""wn'"": 1, ""n' "": 1, ""' ("": 2, ' (%': 3, '(%d': 3, '%d,': 5, 'd,%': 5, ',%d': 5, '%d)': 3, 'd)""': 3, ')"",': 3, '"", ': 3, ' y)': 3, 'y)\n': 3, ' (x': 4, '(x,': 1, '  e': 1, ' el': 1, 'eli': 1, 'lif': 1, 'ONU': 1, 'NUP': 1, 'UP ': 1, 'P a': 1, ' an': 2, 'and': 2, 'nd ': 6, 'd s': 1, 'rt:': 2, 't:\n': 4, 'n u': 1, ' up': 1, ""up'"": 1, ""p' "": 1, '(""c': 1, '""ca': 1, 'alc': 1, 'lcu': 1, 'cul': 1, 'ula': 1, 'lat': 1, 'ati': 1, 'tin': 1, 'g r': 1, ' re': 4, 'ct.': 1, 't..': 1, '  x': 4, ' x_': 8, 'x_o': 3, '_or': 6, 'ori': 6, 'rig': 6, 'ig,': 3, 'g, ': 4, ' y_': 13, 'y_o': 3, 'ig ': 1, 'g =': 1, '= s': 2, 'rt\n': 1, 't\n ': 2, 'x_s': 5, 'rt,': 6, 'y_s': 5, '= n': 2, 'np.': 2, 'p.m': 2, '.mi': 1, 'min': 1, 'nim': 1, 'imu': 2, 'mum': 2, 'um(': 2, 'm([': 2, '([x': 2, '[x_': 2, 'ig]': 2, 'g],': 2, '], ': 2, ', [': 2, ' [x': 2, '[x,': 2, ' y]': 2, 'y])': 2, '])\n': 2, 'x_e': 5, '_en': 10, 'end': 10, 'nd,': 4, 'd, ': 4, 'y_e': 5, 'd =': 2, '.ma': 1, 'max': 1, 'axi': 1, 'xim': 1, 'f x': 1, 'd >': 2, ' > ': 2, '> x': 1, 't a': 1, 'd y': 1, '> y': 1, '(x_': 3, 'nd)': 2, 'd)\n': 1, '(""N': 1, '""Ne': 1, 'New': 1, 'ew ': 1, 'w r': 1, 't s': 2, 'ed ': 1, 'd (': 1, ', *': 1, ' *s': 1, '*se': 1, 'f s': 1, 'ct:': 2, 'nc(': 1, 'c(s': 1, 'f d': 1, ' dr': 1, 'dra': 1, 'raw': 1, 'aw_': 1, 'w_r': 1, 'ct(': 1, ', i': 1, ' im': 1, 'img': 2, 'mg)': 1, 'g):': 1, 'f n': 1, ' no': 1, 'not': 1, 'ot ': 1, '  r': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'ct\n': 1, '2.r': 1, '.re': 1, 'cta': 1, 'tan': 1, 'ang': 1, 'ngl': 1, 'gle': 1, 'le(': 1, 'e(i': 1, '(im': 1, 'mg,': 1, ', (': 2, 'rt)': 1, 't),': 1, '), ': 2, 'd),': 1, ', C': 1, ' CO': 1, 'EN,': 1, 'N, ': 1, ' 2)': 1, '2)\n': 1, 'n T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1}"
Subham Das,binary-search.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 3, 'binary': 1, 'search': 1, '#iterative': 1, 'way': 2, 'def': 3, 'binarysearch(array,': 2, 'target):': 2, 'write': 2, 'your': 2, 'code': 2, 'here.': 2, 'left': 4, '=': 5, '0': 1, 'right=len(array)-1': 1, 'while': 1, '<=': 1, 'right:': 2, 'mid': 6, '(left': 2, '+': 3, 'right)': 3, '//': 2, '2': 2, 'if': 5, 'array[mid]': 2, '==': 2, 'target:': 2, 'return': 7, 'target': 2, '<': 2, 'array[mid]:': 2, 'right': 1, '-': 1, '1': 2, 'else:': 2, '-1': 2, '#recursive': 1, 'findnumber(array,': 4, 'target,': 4, '0,': 1, 'len(array)-1)': 1, 'left,': 2, 'right):': 1, '>': 1, 'mid-1)': 1, 'mid+1,': 1}","{'\n# ': 1, '# B': 1, ' BI': 1, 'BIN': 1, 'INA': 1, 'NAR': 1, 'ARY': 1, 'RY ': 1, 'Y S': 1, ' SE': 1, 'SEA': 1, 'EAR': 1, 'ARC': 1, 'RCH': 1, 'CH\n': 1, 'H\n\n': 1, '\n\n#': 2, '\n#I': 1, '#IT': 1, 'ITE': 1, 'TER': 1, 'ERA': 1, 'RAT': 1, 'ATI': 1, 'TIV': 1, 'IVE': 2, 'VE ': 2, 'E W': 2, ' WA': 2, 'WAY': 2, 'AY\n': 2, 'Y\nd': 2, '\nde': 3, 'def': 3, 'ef ': 3, 'f b': 2, ' bi': 2, 'bin': 2, 'ina': 2, 'nar': 2, 'ary': 2, 'ryS': 2, 'ySe': 2, 'Sea': 2, 'ear': 2, 'arc': 2, 'rch': 2, 'ch(': 2, 'h(a': 2, '(ar': 8, 'arr': 12, 'rra': 12, 'ray': 12, 'ay,': 6, 'y, ': 6, ', t': 6, ' ta': 10, 'tar': 10, 'arg': 10, 'rge': 10, 'get': 10, 'et)': 2, 't):': 3, '):\n': 3, ':\n ': 6, '\n  ': 13, '   ': 66, '  #': 2, ' # ': 2, '# W': 2, ' Wr': 2, 'Wri': 2, 'rit': 2, 'ite': 2, 'te ': 2, 'e y': 2, ' yo': 2, 'you': 2, 'our': 2, 'ur ': 2, 'r c': 2, ' co': 2, 'cod': 2, 'ode': 2, 'de ': 2, 'e h': 2, ' he': 2, 'her': 2, 'ere': 2, 're.': 2, 'e.\n': 2, '.\n ': 1, '  l': 2, ' le': 7, 'lef': 8, 'eft': 8, 'ft ': 6, 't =': 3, ' = ': 5, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  r': 4, ' ri': 8, 'rig': 8, 'igh': 8, 'ght': 8, 'ht=': 1, 't=l': 1, '=le': 1, 'len': 2, 'en(': 2, 'n(a': 2, 'ay)': 2, 'y)-': 2, ')-1': 2, '-1\n': 3, '1\n\t': 2, '\n\t\n': 4, '\t\n ': 3, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 1, 't <': 3, ' <=': 1, '<= ': 1, '= r': 1, 'ht:': 2, 't:\n': 4, '  m': 1, ' mi': 7, 'mid': 12, 'id ': 4, 'd =': 2, '= (': 2, ' (l': 2, '(le': 2, 't +': 2, ' + ': 3, '+ r': 2, 'ht)': 4, 't) ': 2, ') /': 2, ' //': 2, '// ': 2, '/ 2': 2, ' 2\n': 2, '2\n\t': 2, '\n\t\t': 6, '\t\t\n': 2, '  i': 2, ' if': 2, 'if ': 5, 'f a': 2, ' ar': 4, 'ay[': 4, 'y[m': 4, '[mi': 4, 'id]': 4, 'd] ': 2, '] =': 2, ' ==': 2, '== ': 2, '= t': 2, 'et:': 2, ' re': 2, 'ret': 7, 'etu': 7, 'tur': 7, 'urn': 7, 'rn ': 7, 'n m': 2, 'id\n': 2, 'd\n\t': 2, 'f t': 2, 'et ': 2, ' < ': 2, '< a': 2, 'd]:': 2, ']:\n': 2, 'ht ': 1, '= m': 2, 'd -': 1, ' - ': 1, '- 1': 1, ' 1\n': 2, '1\n ': 2, '  e': 1, ' el': 1, 'els': 2, 'lse': 2, 'se:': 2, 'e:\n': 2, 'd +': 1, '+ 1': 1, 'n -': 2, ' -1': 2, '1\n\n': 1, '\n#R': 1, '#RE': 1, 'REC': 1, 'ECU': 1, 'CUR': 1, 'URS': 1, 'RSI': 1, 'SIV': 1, '.\n\t': 1, '\n\tr': 1, '\tre': 5, 'n f': 3, ' fi': 4, 'fin': 4, 'ind': 4, 'ndN': 4, 'dNu': 4, 'Num': 4, 'umb': 4, 'mbe': 4, 'ber': 4, 'er(': 4, 'r(a': 4, 'et,': 4, 't, ': 6, ', 0': 1, ' 0,': 1, '0, ': 1, ', l': 3, '-1)': 2, '1)\n': 2, ')\n\n': 1, '\n\nd': 1, 'f f': 1, 'ft,': 2, ', r': 2, ':\n\t': 5, '\n\ti': 3, '\tif': 3, 'f l': 1, 't >': 1, ' > ': 1, '> r': 1, '\t\tr': 4, '\t\n\t': 3, '\n\tm': 1, '\tmi': 1, ', m': 2, 'id-': 1, 'd-1': 1, ')\n\t': 1, '\n\te': 1, '\tel': 1, 'id+': 1, 'd+1': 1, '+1,': 1, '1, ': 1, 't)\n': 1}"
Subham Das,branch-sums.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""': 2, '#': 3, 'branch': 6, 'sums': 2, 'write': 2, 'a': 8, 'function': 1, 'that': 2, 'takes': 1, 'in': 3, 'binary': 3, 'tree': 4, 'and': 3, 'returns': 1, 'list': 1, 'of': 4, 'its': 1, 'ordered': 1, 'from': 1, 'leftmost': 1, 'sum': 3, 'to': 1, 'rightmost': 1, 'sum.': 1, 'is': 3, 'the': 4, 'all': 1, 'values': 1, 'branch.': 1, 'path': 1, 'nodes': 1, 'starts': 1, 'at': 2, 'root': 1, 'node': 1, 'ends': 1, 'any': 1, 'leaf': 1, 'node.': 1, 'this': 1, 'class': 2, 'input': 1, 'root.': 1, 'do': 1, 'not': 4, 'edit': 1, 'it.': 1, 'binarytree:': 1, 'def': 3, '__init__(self,': 1, 'value):': 1, 'self.value': 1, '=': 5, 'value': 1, 'self.left': 1, 'none': 2, 'self.right': 1, 'branchsums(root):': 1, 'your': 1, 'code': 1, 'here.': 1, 'result': 2, '[]': 1, 'calculatebranchsums(root,': 2, '0,': 1, 'result)': 3, 'return': 3, 'currentsum,': 1, 'result):': 1, 'if': 2, 'root:': 1, 'newsum': 1, 'currentsum': 1, '+': 1, 'root.value': 1, 'root.left': 1, 'root.right:': 1, 'result.append(newsum)': 1, 'calculatebranchsums(root.left,': 1, 'newsum,': 2, 'calculatebranchsums(root.right,': 1}","{'\n""""': 2, '""""""': 2, '"""" ': 1, '"" \n': 1, ' \n#': 1, '\n# ': 2, '# B': 1, ' BR': 1, 'BRA': 1, 'RAN': 1, 'ANC': 1, 'NCH': 1, 'CH ': 1, 'H S': 1, ' SU': 1, 'SUM': 1, 'UMS': 1, 'MS\n': 1, 'S\n\n': 1, '\n\nW': 1, '\nWr': 1, 'Wri': 2, 'rit': 2, 'ite': 2, 'te ': 2, 'e a': 3, ' a ': 6, 'a f': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n t': 1, ' th': 6, 'tha': 2, 'hat': 2, 'at ': 4, 't t': 2, ' ta': 1, 'tak': 1, 'ake': 1, 'kes': 1, 'es ': 3, 's i': 4, ' in': 4, 'in ': 3, 'n a': 3, 'a B': 2, ' Bi': 4, 'Bin': 4, 'ina': 4, 'nar': 4, 'ary': 4, 'ry ': 3, 'y T': 3, ' Tr': 3, 'Tre': 4, 'ree': 5, 'ee ': 4, ' an': 4, 'and': 3, 'nd ': 3, 'd r': 1, ' re': 6, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rns': 1, 'ns ': 1, 's a': 4, 'a l': 1, ' li': 1, 'lis': 1, 'ist': 1, 'st ': 3, 't o': 1, ' of': 4, 'of ': 4, 'f i': 1, ' it': 2, 'its': 1, 'ts ': 2, 's b': 1, ' br': 7, 'bra': 7, 'ran': 11, 'anc': 11, 'nch': 11, 'ch ': 5, 'h s': 4, ' su': 5, 'sum': 5, 'ums': 6, 'ms ': 1, 's o': 2, ' or': 1, 'ord': 1, 'rde': 1, 'der': 1, 'ere': 2, 'red': 1, 'ed ': 1, 'd f': 1, ' fr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm l': 1, ' le': 2, 'lef': 4, 'eft': 4, 'ftm': 1, 'tmo': 2, 'mos': 2, 'ost': 2, 't b': 2, 'um ': 5, 'm t': 1, ' to': 1, 'to ': 1, 'o r': 1, ' ri': 1, 'rig': 4, 'igh': 4, 'ght': 4, 'htm': 1, 'um.': 1, 'm. ': 1, '. A': 2, ' A ': 2, 'A b': 1, 'm i': 1, ' is': 3, 'is ': 4, 's t': 2, 'the': 4, 'he ': 4, 'e s': 1, 'm o': 1, 'f a': 1, ' al': 1, 'all': 1, 'll ': 1, 'l v': 1, ' va': 3, 'val': 5, 'alu': 5, 'lue': 5, 'ues': 1, 'e b': 2, 'ch.': 1, 'h. ': 1, 'A B': 1, 'h i': 1, 'a p': 1, ' pa': 1, 'pat': 1, 'ath': 1, 'th ': 1, 'h o': 1, 'f n': 4, ' no': 7, 'nod': 3, 'ode': 4, 'des': 1, 'a t': 1, ' tr': 1, 'tre': 1, 'e t': 1, 't s': 1, ' st': 1, 'sta': 1, 'tar': 1, 'art': 1, 'rts': 1, ' at': 2, 'e r': 1, ' ro': 6, 'roo': 11, 'oot': 11, 'ot ': 5, 't n': 1, 'de ': 2, 'd e': 1, ' en': 1, 'end': 2, 'nds': 1, 'ds ': 1, 't a': 2, 'any': 1, 'ny ': 1, 'y l': 1, 'lea': 1, 'eaf': 1, 'af ': 1, 'de.': 1, 'e. ': 1, '. \n': 1, ' \n""': 1, '""""\n': 1, '""\n\n': 1, '\n\n\n': 2, '\n\n#': 1, '# T': 1, ' Th': 1, 'Thi': 1, 'his': 1, 'e c': 1, ' cl': 1, 'cla': 2, 'las': 2, 'ass': 2, 'ss ': 2, 'f t': 1, 'e i': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut ': 1, 't r': 4, 'ot.': 6, 't. ': 1, '. D': 1, ' Do': 1, 'Do ': 1, 'o n': 1, 'not': 4, 't e': 1, ' ed': 1, 'edi': 1, 'dit': 1, 'it ': 1, 't i': 1, 'it.': 1, 't.\n': 1, '.\nc': 1, '\ncl': 1, 's B': 1, 'ryT': 1, 'yTr': 1, 'ee:': 1, 'e:\n': 1, ':\n ': 3, '\n  ': 5, '   ': 22, '  d': 1, ' de': 1, 'def': 3, 'ef ': 3, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 1, 'sel': 4, 'elf': 4, 'lf,': 1, 'f, ': 1, ', v': 1, 'ue)': 1, 'e):': 1, '):\n': 3, '  s': 3, ' se': 3, 'lf.': 3, 'f.v': 1, '.va': 2, 'ue ': 1, 'e =': 1, ' = ': 5, '= v': 1, 'ue\n': 2, 'e\n ': 2, 'f.l': 1, '.le': 3, 'ft ': 2, 't =': 3, '= N': 2, ' No': 2, 'Non': 2, 'one': 2, 'ne\n': 2, 'f.r': 1, '.ri': 3, 'ht ': 1, 'e\n\n': 1, '\n\nd': 2, '\nde': 2, 'f b': 1, 'chS': 5, 'hSu': 5, 'Sum': 11, 'ms(': 5, 's(r': 5, '(ro': 5, 'ot)': 1, 't):': 2, '  #': 1, ' # ': 1, '# W': 1, ' Wr': 1, 'e y': 1, ' yo': 1, 'you': 1, 'our': 1, 'ur ': 1, 'r c': 1, ' co': 1, 'cod': 1, 'e h': 1, ' he': 1, 'her': 1, 're.': 1, 'e.\n': 1, '.\n\t': 1, '\n\tr': 2, '\tre': 5, 'res': 7, 'esu': 7, 'sul': 7, 'ult': 7, 'lt ': 1, '= [': 1, ' []': 1, '[]\n': 1, ']\n\t': 1, '\n\tc': 3, '\tca': 3, 'cal': 4, 'alc': 4, 'lcu': 4, 'cul': 4, 'ula': 4, 'lat': 4, 'ate': 4, 'teB': 4, 'eBr': 4, 'Bra': 4, 'ot,': 2, 't, ': 4, ', 0': 1, ' 0,': 1, '0, ': 1, ', r': 4, 'lt)': 4, 't)\n': 3, ')\n\t': 3, 'rn ': 1, 'n r': 1, 'lt\n': 1, 't\n\n': 1, 'f c': 1, ' ca': 1, ', c': 1, ' cu': 2, 'cur': 2, 'urr': 2, 'rre': 2, 'ren': 2, 'ent': 2, 'ntS': 2, 'tSu': 2, 'um,': 3, 'm, ': 3, ':\n\t': 3, '\n\ti': 2, '\tif': 2, 'if ': 2, 'ot:': 1, 't:\n': 2, '\n\t\t': 4, '\t\tr': 3, 'rn\n': 2, 'n\n\t': 1, '\n\t\n': 2, '\t\n\t': 2, '\n\tn': 1, '\tne': 1, 'new': 4, 'ewS': 4, 'wSu': 4, 'm =': 1, '= c': 1, 'm +': 1, ' + ': 1, '+ r': 1, 't.v': 1, 'e\n\t': 1, 't.l': 2, 'd n': 1, 't.r': 2, 'ht:': 1, 'lt.': 1, 't.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'nd(': 1, 'd(n': 1, '(ne': 1, 'um)': 1, 'm)\n': 1, 'n\n ': 1, '\n \n': 1, ' \n\t': 1, 'ft,': 1, ', n': 2, ' ne': 2, 'ht,': 1, ')\n\n': 1, '\n\n\t': 1, '\t\t\n': 1}"
Subham Das,bubble-sort.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 5, 'bubble': 1, 'sort': 1, 'solution': 2, '1': 2, 'def': 2, 'bubblesort(array):': 2, 'write': 2, 'your': 2, 'code': 2, 'here.': 2, 'for': 3, 'i': 5, 'in': 3, 'range(len(array)):': 1, 'alreadysorted': 5, '=': 8, 'true': 2, 'j': 2, 'range(len(array)': 2, '-': 4, '1):': 2, 'if': 3, 'array[j]': 4, '>': 2, 'array[j+1]:': 2, 'false': 3, 'array[j],': 2, 'array[j+1]': 2, 'array[j+1],': 2, 'alreadysorted:': 2, 'break': 1, 'return': 2, 'array': 2, '2': 1, '0': 1, 'while': 1, 'not': 1, '+=': 1}","{'\n# ': 3, '# B': 1, ' BU': 1, 'BUB': 1, 'UBB': 1, 'BBL': 1, 'BLE': 1, 'LE ': 1, 'E S': 1, ' SO': 3, 'SOR': 1, 'ORT': 1, 'RT\n': 1, 'T\n\n': 1, '\n\n#': 2, '# S': 2, 'SOL': 2, 'OLU': 2, 'LUT': 2, 'UTI': 2, 'TIO': 2, 'ION': 2, 'ON ': 2, 'N 1': 1, ' 1\n': 2, '1\nd': 1, '\nde': 2, 'def': 2, 'ef ': 2, 'f b': 2, ' bu': 2, 'bub': 2, 'ubb': 2, 'bbl': 2, 'ble': 2, 'leS': 2, 'eSo': 2, 'Sor': 9, 'ort': 9, 'rt(': 2, 't(a': 2, '(ar': 5, 'arr': 19, 'rra': 19, 'ray': 19, 'ay)': 5, 'y):': 2, '):\n': 5, ':\n ': 9, '\n  ': 21, '   ': 138, '  #': 2, ' # ': 2, '# W': 2, ' Wr': 2, 'Wri': 2, 'rit': 2, 'ite': 2, 'te ': 2, 'e y': 2, ' yo': 2, 'you': 2, 'our': 2, 'ur ': 2, 'r c': 2, ' co': 2, 'cod': 2, 'ode': 2, 'de ': 2, 'e h': 2, ' he': 2, 'her': 2, 'ere': 2, 're.': 2, 'e.\n': 2, '.\n ': 2, '  f': 3, ' fo': 3, 'for': 3, 'or ': 3, 'r i': 1, ' i ': 5, 'i i': 1, ' in': 3, 'in ': 3, 'n r': 3, ' ra': 3, 'ran': 3, 'ang': 3, 'nge': 3, 'ge(': 3, 'e(l': 3, '(le': 3, 'len': 3, 'en(': 3, 'n(a': 3, 'y))': 1, ')):': 1, '  a': 7, ' al': 7, 'alr': 7, 'lre': 7, 'rea': 8, 'ead': 7, 'ady': 7, 'dyS': 7, 'ySo': 7, 'rte': 7, 'ted': 7, 'ed ': 5, 'd =': 5, ' = ': 8, '= T': 2, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue\n': 2, 'e\n ': 5, 'r j': 2, ' j ': 2, 'j i': 2, 'y) ': 2, ') -': 2, ' - ': 4, '- i': 2, 'i -': 2, '- 1': 2, ' 1)': 2, '1):': 2, '  i': 5, ' if': 3, 'if ': 3, 'f a': 3, ' ar': 14, 'ay[': 12, 'y[j': 12, '[j]': 6, 'j] ': 2, '] >': 2, ' > ': 2, '> a': 2, '[j+': 6, 'j+1': 6, '+1]': 6, '1]:': 2, ']:\n': 2, '= F': 3, ' Fa': 3, 'Fal': 3, 'als': 3, 'lse': 3, 'se\n': 3, 'j],': 2, '], ': 4, ', a': 4, '1] ': 2, '] =': 2, '= a': 2, '1],': 2, 'j]\n': 2, ']\n ': 2, 'ed:': 2, 'd:\n': 2, '  b': 1, ' br': 1, 'bre': 1, 'eak': 1, 'ak\n': 1, 'k\n\t': 1, '\n\t\t': 2, '\t\t\t': 1, '\t\t\n': 2, '\t\n ': 2, '  r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n a': 2, 'ay\n': 2, 'y\n\n': 1, 'N 2': 1, ' 2\n': 1, '2\nd': 1, 'i =': 1, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't a': 1, 'i +': 1, ' +=': 1, '+= ': 1, '= 1': 1, '1\n\t': 1}"
Subham Das,caesar-cipher-encryptor..py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 7, 'caesar': 1, 'cipher': 1, 'encryptor': 1, 'o(n)': 3, 'time': 3, 'and': 3, 'space': 3, 'def': 3, 'caesarcipherencryptor(string,': 3, 'key):': 3, 'write': 3, 'your': 3, 'code': 3, 'here.': 3, 'result': 3, '=': 12, '[]': 3, 'for': 3, 'x': 2, 'in': 3, 'string:': 3, 'modifiedasc': 1, 'ord(x)': 1, '-': 2, '97': 2, 'newascii': 1, '(modifiedasc': 1, '+': 5, 'key)': 2, '%': 4, '26': 4, 'newchar': 1, 'chr(97': 2, 'newascii)': 1, 'result.append(newchar)': 1, 'return': 3, '"""".join(result)': 3, 'alphabets': 1, 'list(""abcdefghijklmnopqrstuvwxyz"")': 1, 'key': 3, 'index': 1, 'alphabets.index(x)': 1, 'result.append(alphabets[index])': 1, 'letter': 1, 'oldvalue': 1, 'ord(letter)': 1, 'newvalue': 1, '(oldvalue': 1, 'newletter': 1, 'newvalue)': 1, 'result.append(newletter)': 1}","{'\n# ': 4, '# C': 1, ' CA': 1, 'CAE': 1, 'AES': 1, 'ESA': 1, 'SAR': 1, 'AR ': 1, 'R C': 1, ' CI': 1, 'CIP': 1, 'IPH': 1, 'PHE': 1, 'HER': 1, 'ER ': 1, 'R E': 1, ' EN': 1, 'ENC': 1, 'NCR': 1, 'CRY': 1, 'RYP': 1, 'YPT': 1, 'PTO': 1, 'TOR': 1, 'OR\n': 1, 'R\n\n': 1, '\n\n#': 3, '# O': 3, ' O(': 3, 'O(N': 3, '(N)': 3, 'N) ': 3, ') t': 3, ' ti': 3, 'tim': 3, 'ime': 3, 'me ': 3, 'e a': 3, ' an': 3, 'and': 3, 'nd ': 3, 'd s': 3, ' sp': 3, 'spa': 3, 'pac': 3, 'ace': 3, 'ce\n': 3, 'e\nd': 3, '\nde': 3, 'def': 4, 'ef ': 3, 'f c': 3, ' ca': 3, 'cae': 3, 'aes': 3, 'esa': 3, 'sar': 3, 'arC': 3, 'rCi': 3, 'Cip': 3, 'iph': 3, 'phe': 3, 'her': 6, 'erE': 3, 'rEn': 3, 'Enc': 3, 'ncr': 3, 'cry': 3, 'ryp': 3, 'ypt': 3, 'pto': 3, 'tor': 3, 'or(': 3, 'r(s': 3, '(st': 3, 'str': 6, 'tri': 6, 'rin': 6, 'ing': 6, 'ng,': 3, 'g, ': 3, ', k': 3, ' ke': 8, 'key': 8, 'ey)': 5, 'y):': 3, '):\n': 3, ':\n ': 6, '\n  ': 24, '   ': 88, '  #': 3, ' # ': 3, '# W': 3, ' Wr': 3, 'Wri': 3, 'rit': 3, 'ite': 3, 'te ': 3, 'e y': 3, ' yo': 3, 'you': 3, 'our': 3, 'ur ': 3, 'r c': 3, ' co': 3, 'cod': 3, 'ode': 3, 'de ': 3, 'e h': 3, ' he': 3, 'ere': 3, 're.': 3, 'e.\n': 3, '.\n ': 3, '  r': 9, ' re': 9, 'res': 9, 'esu': 9, 'sul': 9, 'ult': 9, 'lt ': 3, 't =': 3, ' = ': 12, '= [': 3, ' []': 3, '[]\n': 3, ']\n ': 3, '  f': 3, ' fo': 3, 'for': 3, 'or ': 3, 'r x': 2, ' x ': 2, 'x i': 2, ' in': 4, 'in ': 3, 'n s': 3, ' st': 3, 'ng:': 3, 'g:\n': 3, '  m': 1, ' mo': 1, 'mod': 2, 'odi': 2, 'dif': 2, 'ifi': 2, 'fie': 2, 'ied': 2, 'eda': 2, 'das': 2, 'asc': 4, 'sc ': 2, 'c =': 1, '= o': 2, ' or': 2, 'ord': 2, 'rd(': 2, 'd(x': 1, '(x)': 2, 'x) ': 2, ') -': 2, ' - ': 2, '- 9': 2, ' 97': 2, '97\n': 2, '7\n ': 2, '  n': 4, ' ne': 6, 'new': 8, 'ewa': 2, 'was': 2, 'sci': 2, 'cii': 2, 'ii ': 1, 'i =': 1, '= (': 2, ' (m': 1, '(mo': 1, 'c +': 1, ' + ': 5, '+ k': 3, 'y) ': 2, ') %': 2, ' % ': 4, '% 2': 4, ' 26': 4, '26\n': 4, '6\n ': 4, 'ewC': 2, 'wCh': 2, 'Cha': 2, 'har': 2, 'ar ': 1, 'r =': 2, '= c': 2, ' ch': 2, 'chr': 2, 'hr(': 2, 'r(9': 2, '(97': 2, '97 ': 2, '7 +': 2, '+ n': 2, 'ii)': 1, 'i)\n': 1, ')\n ': 4, 'lt.': 3, 't.a': 3, '.ap': 3, 'app': 3, 'ppe': 3, 'pen': 3, 'end': 3, 'nd(': 3, 'd(n': 2, '(ne': 2, 'ar)': 1, 'r)\n': 2, ')\n\n': 3, '\n\n ': 1, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n ""': 3, ' """"': 3, '"""".': 3, '"".j': 3, '.jo': 3, 'joi': 3, 'oin': 3, 'in(': 3, 'n(r': 3, '(re': 3, 'lt)': 3, 't)\n': 3, '\n\n\n': 1, '  a': 1, ' al': 2, 'alp': 3, 'lph': 3, 'pha': 3, 'hab': 3, 'abe': 3, 'bet': 3, 'ets': 3, 'ts ': 1, 's =': 1, '= l': 1, ' li': 1, 'lis': 1, 'ist': 1, 'st(': 1, 't(""': 1, '(""a': 1, '""ab': 1, 'abc': 1, 'bcd': 1, 'cde': 1, 'efg': 1, 'fgh': 1, 'ghi': 1, 'hij': 1, 'ijk': 1, 'jkl': 1, 'klm': 1, 'lmn': 1, 'mno': 1, 'nop': 1, 'opq': 1, 'pqr': 1, 'qrs': 1, 'rst': 1, 'stu': 1, 'tuv': 1, 'uvw': 1, 'vwx': 1, 'wxy': 1, 'xyz': 1, 'yz""': 1, 'z"")': 1, '"")\n': 1, '  k': 1, 'ey ': 3, 'y =': 1, '= k': 1, 'y %': 2, '  i': 1, 'ind': 3, 'nde': 3, 'dex': 3, 'ex ': 1, 'x =': 1, '= a': 1, 'ts.': 1, 's.i': 1, '.in': 1, 'ex(': 1, 'x(x': 1, ') +': 1, 'd(a': 1, '(al': 1, 'ts[': 1, 's[i': 1, '[in': 1, 'ex]': 1, 'x])': 1, '])\n': 1, ')\n\t': 1, '\n\t\t': 1, '\t\t\n': 1, '\t\n ': 1, 'r l': 1, ' le': 1, 'let': 2, 'ett': 4, 'tte': 4, 'ter': 4, 'er ': 2, 'r i': 1, '  o': 1, ' ol': 1, 'old': 2, 'ldV': 2, 'dVa': 2, 'Val': 4, 'alu': 4, 'lue': 4, 'ue ': 3, 'e =': 2, 'd(l': 1, '(le': 1, 'er)': 2, 'r) ': 1, 'ewV': 2, 'wVa': 2, ' (o': 1, '(ol': 1, 'e +': 1, 'ewL': 2, 'wLe': 2, 'Let': 2, 'ue)': 1, 'e)\n': 1}"
Subham Das,class-photos.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 3, 'class': 1, 'photos': 1, 'o(nlogn)': 1, 'time': 1, 'and': 1, 'o(1)': 1, 'space': 1, 'def': 2, 'classphotos(redshirtheights,': 1, 'blueshirtheights):': 1, 'write': 1, 'your': 1, 'code': 1, 'here.': 1, 'redshirtheights.sort()': 1, 'blueshirtheights.sort()': 1, 'if': 6, 'redshirtheights[0]': 2, '==': 1, 'blueshirtheights[0]:': 1, 'return': 5, 'false': 5, 'direction': 1, '=': 4, 'true': 4, '>': 2, 'blueshirtheights[0]': 1, 'else': 3, 'i': 3, '1': 2, 'while': 1, '<': 2, 'len(redshirtheights):': 1, 'height1': 3, 'redshirtheights[i]': 1, 'height2': 3, 'blueshirtheights[i]': 1, 'not': 1, 'compareheights(height1,': 2, 'height2,': 2, 'direction):': 2, '+=': 1, 'direction:': 1, 'else:': 1}","{'\n# ': 2, '# C': 1, ' CL': 1, 'CLA': 1, 'LAS': 1, 'ASS': 1, 'SS ': 1, 'S P': 1, ' PH': 1, 'PHO': 1, 'HOT': 1, 'OTO': 1, 'TOS': 1, 'OS\n': 1, 'S\n\n': 1, '\n\n#': 1, '# O': 1, ' O(': 2, 'O(N': 1, '(Nl': 1, 'Nlo': 1, 'log': 1, 'ogN': 1, 'gN)': 1, 'N) ': 1, ') t': 1, ' ti': 1, 'tim': 1, 'ime': 1, 'me ': 1, 'e a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd O': 1, 'O(1': 1, '(1)': 1, '1) ': 1, ') s': 1, ' sp': 1, 'spa': 1, 'pac': 1, 'ace': 1, 'ce\n': 1, 'e\nd': 1, '\nde': 2, 'def': 2, 'ef ': 2, 'f c': 2, ' cl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ssP': 1, 'sPh': 1, 'Pho': 1, 'hot': 1, 'oto': 1, 'tos': 1, 'os(': 1, 's(r': 1, '(re': 2, 'red': 6, 'edS': 6, 'dSh': 6, 'Shi': 11, 'hir': 11, 'irt': 11, 'rtH': 11, 'tHe': 11, 'Hei': 13, 'eig': 23, 'igh': 23, 'ght': 23, 'hts': 13, 'ts,': 1, 's, ': 1, ', b': 1, ' bl': 5, 'blu': 5, 'lue': 5, 'ueS': 5, 'eSh': 5, 'ts)': 2, 's):': 2, '):\n': 4, ':\n ': 7, '\n  ': 24, '   ': 92, '  #': 1, ' # ': 1, '# W': 1, ' Wr': 1, 'Wri': 1, 'rit': 1, 'ite': 1, 'te ': 1, 'e y': 1, ' yo': 1, 'you': 1, 'our': 1, 'ur ': 1, 'r c': 1, ' co': 3, 'cod': 1, 'ode': 1, 'de ': 1, 'e h': 1, ' he': 9, 'her': 1, 'ere': 1, 're.': 1, 'e.\n': 1, '.\n ': 1, '  r': 6, ' re': 9, 'ts.': 2, 's.s': 2, '.so': 2, 'sor': 2, 'ort': 2, 'rt(': 2, 't()': 2, '()\n': 2, ')\n ': 2, '  b': 1, '  \n': 6, ' \n ': 7, '  i': 5, ' if': 6, 'if ': 6, 'f r': 2, 'ts[': 6, 's[0': 4, '[0]': 4, '0] ': 3, '] =': 1, ' ==': 1, '== ': 1, '= b': 2, '0]:': 1, ']:\n': 1, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 5, 'n F': 2, ' Fa': 5, 'Fal': 5, 'als': 5, 'lse': 9, 'se ': 4, 'e \n': 1, '  d': 1, ' di': 4, 'dir': 4, 'ire': 4, 'rec': 4, 'ect': 4, 'cti': 4, 'tio': 4, 'ion': 4, 'on ': 1, 'n =': 1, ' = ': 4, '= T': 1, ' Tr': 4, 'Tru': 4, 'rue': 4, 'ue ': 3, 'e i': 4, '] >': 1, ' > ': 2, '> b': 1, '] e': 1, ' el': 4, 'els': 4, 'e F': 3, 'se\n': 4, 'e\n ': 3, ' i ': 3, 'i =': 1, '= 1': 2, ' 1\n': 2, '1\n ': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'i <': 1, ' < ': 2, '< l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(r': 1, '  h': 2, 'hei': 10, 'ht1': 5, 't1 ': 3, '1 =': 1, '= r': 1, 's[i': 2, '[i]': 2, 'i]\n': 2, ']\n ': 2, 'ht2': 5, 't2 ': 3, '2 =': 1, 'f n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't c': 1, 'com': 2, 'omp': 2, 'mpa': 2, 'par': 2, 'are': 2, 'reH': 2, 'eHe': 2, 'ts(': 2, 's(h': 2, '(he': 2, 't1,': 2, '1, ': 2, ', h': 2, 't2,': 2, '2, ': 2, ', d': 2, 'on)': 2, 'n):': 2, 'i +': 1, ' +=': 1, '+= ': 1, 'n T': 3, 'ue\n': 1, 'e\n\n': 1, '\n\nd': 1, 'f d': 1, 'on:': 1, 'n:\n': 1, 'f h': 2, '1 >': 1, '> h': 1, '2 e': 2, '  e': 1, 'se:': 1, 'e:\n': 1, '1 <': 1, '< h': 1}"
Subham Das,deapth-first-search.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'iterative': 1, 'way': 2, 'class': 2, 'node:': 2, 'def': 6, '__init__(self,': 2, 'name):': 4, 'self.children': 2, '=': 6, '[]': 2, 'self.name': 2, 'name': 2, 'addchild(self,': 2, 'self.children.append(node(name))': 2, 'return': 4, 'self': 2, 'depthfirstsearch(self,': 2, 'array):': 2, 'stack': 1, '[self]': 1, 'while': 1, 'stack:': 1, 'vertex': 1, 'stack.pop()': 1, 'array.append(vertex.name)': 1, 'for': 2, 'child': 2, 'in': 2, 'vertex.children[::-1]:': 1, 'stack.append(child)': 1, 'array': 2, 'recursive': 1, 'array.append(self.name)': 1, 'self.children:': 1, 'child.depthfirstsearch(array)': 1}","{'# I': 1, ' IT': 1, 'ITE': 1, 'TER': 1, 'ERA': 1, 'RAT': 1, 'ATI': 1, 'TIV': 1, 'IVE': 2, 'VE ': 2, 'E W': 2, ' WA': 2, 'WAY': 2, 'AY\n': 2, 'Y\nc': 2, '\ncl': 2, 'cla': 2, 'las': 2, 'ass': 2, 'ss ': 2, 's N': 2, ' No': 2, 'Nod': 4, 'ode': 4, 'de:': 2, 'e:\n': 2, ':\n ': 11, '\n  ': 25, '   ': 150, '  d': 6, ' de': 8, 'def': 6, 'ef ': 6, 'f _': 2, ' __': 2, '__i': 2, '_in': 2, 'ini': 2, 'nit': 2, 'it_': 2, 't__': 2, '__(': 2, '_(s': 2, '(se': 7, 'sel': 17, 'elf': 17, 'lf,': 6, 'f, ': 6, ', n': 4, ' na': 6, 'nam': 12, 'ame': 12, 'me)': 8, 'e):': 4, '):\n': 6, '  s': 8, ' se': 9, 'lf.': 8, 'f.c': 5, '.ch': 6, 'chi': 10, 'hil': 13, 'ild': 12, 'ldr': 6, 'dre': 6, 'ren': 6, 'en ': 2, 'n =': 2, ' = ': 6, '= [': 3, ' []': 2, '[]\n': 2, ']\n ': 3, 'f.n': 3, '.na': 4, 'me ': 2, 'e =': 2, '= n': 2, 'me\n': 2, 'e\n\n': 2, '\n\n ': 5, 'f a': 2, ' ad': 2, 'add': 2, 'ddC': 2, 'dCh': 2, 'Chi': 2, 'ld(': 2, 'd(s': 3, 'en.': 2, 'n.a': 2, '.ap': 5, 'app': 5, 'ppe': 5, 'pen': 5, 'end': 5, 'nd(': 5, 'd(N': 2, '(No': 2, 'de(': 2, 'e(n': 2, '(na': 2, 'e))': 2, '))\n': 2, ')\n ': 6, '  r': 4, ' re': 4, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 4, 'n s': 3, 'lf\n': 2, 'f\n\n': 2, 'f d': 2, 'dep': 3, 'ept': 3, 'pth': 3, 'thF': 3, 'hFi': 3, 'Fir': 3, 'irs': 3, 'rst': 3, 'stS': 3, 'tSe': 3, 'Sea': 3, 'ear': 3, 'arc': 3, 'rch': 3, 'ch(': 3, 'h(s': 2, ', a': 2, ' ar': 6, 'arr': 7, 'rra': 7, 'ray': 7, 'ay)': 3, 'y):': 2, ' st': 4, 'sta': 4, 'tac': 4, 'ack': 4, 'ck ': 1, 'k =': 1, ' [s': 1, '[se': 1, 'lf]': 1, 'f]\n': 1, '  w': 1, ' wh': 1, 'whi': 1, 'ile': 1, 'le ': 1, 'e s': 1, 'ck:': 1, 'k:\n': 1, '  v': 1, ' ve': 2, 'ver': 3, 'ert': 3, 'rte': 3, 'tex': 3, 'ex ': 1, 'x =': 1, '= s': 1, 'ck.': 2, 'k.p': 1, '.po': 1, 'pop': 1, 'op(': 1, 'p()': 1, '()\n': 1, '  a': 2, 'ay.': 2, 'y.a': 2, 'd(v': 1, '(ve': 1, 'ex.': 2, 'x.n': 1, 'e)\n': 2, '  f': 2, ' fo': 2, 'for': 2, 'or ': 2, 'r c': 2, ' ch': 3, 'ld ': 2, 'd i': 2, ' in': 2, 'in ': 2, 'n v': 1, 'x.c': 1, 'en[': 1, 'n[:': 1, '[::': 1, '::-': 1, ':-1': 1, '-1]': 1, '1]:': 1, ']:\n': 1, 'k.a': 1, 'd(c': 1, '(ch': 1, 'ld)': 1, 'd)\n': 1, 'n a': 2, 'ay\n': 2, 'y\n\n': 1, '\n\n#': 1, '\n# ': 1, '# R': 1, ' RE': 1, 'REC': 1, 'ECU': 1, 'CUR': 1, 'URS': 1, 'RSI': 1, 'SIV': 1, 'en:': 1, 'n:\n': 1, '  c': 1, 'ld.': 1, 'd.d': 1, '.de': 1, 'h(a': 1, '(ar': 1, 'y)\n': 1, ')\n\n': 1}"
Subham Das,find-closest-value-in-BST.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""': 2, '#': 4, 'find': 1, 'closest': 2, 'value': 8, 'in': 3, 'bst': 1, 'write': 2, 'a': 3, 'function': 1, 'that': 2, 'takes': 1, 'binary': 1, 'search': 1, 'tree': 3, '(bst)': 1, 'and': 2, 'target': 4, 'integer': 1, 'returns': 1, 'the': 4, 'to': 1, 'contained': 1, 'bst.': 1, 'def': 2, 'findclosestvalueinbst(tree,': 1, 'target):': 1, 'your': 1, 'code': 1, 'here.': 1, 'iterative': 1, 'way,': 1, 'can': 1, 'be': 1, 'also': 1, 'done': 1, 'recursively.': 1, 'if': 4, 'not': 2, 'tree:': 2, 'return': 3, '0': 1, '=': 9, 'tree.value': 3, 'while': 1, '==': 1, 'target:': 1, 'current_difference': 2, 'abs(tree.value': 1, '-': 2, 'target)': 2, 'min_difference': 1, 'abs(value': 1, '<': 1, 'min_difference:': 1, '>=': 1, 'tree.value:': 1, 'tree.right': 1, 'else:': 1, 'tree.left': 1, 'this': 1, 'is': 1, 'class': 2, 'of': 1, 'input': 1, 'tree.': 1, 'do': 1, 'edit.': 1, 'bst:': 1, '__init__(self,': 1, 'value):': 1, 'self.value': 1, 'self.left': 1, 'none': 2, 'self.right': 1}","{'\n""""': 2, '""""""': 2, '"""" ': 1, '"" \n': 1, ' \n#': 1, '\n# ': 2, '# F': 1, ' FI': 1, 'FIN': 1, 'IND': 1, 'ND ': 1, 'D C': 1, ' CL': 1, 'CLO': 1, 'LOS': 1, 'OSE': 1, 'SES': 1, 'EST': 1, 'ST ': 1, 'T V': 1, ' VA': 1, 'VAL': 1, 'ALU': 1, 'LUE': 1, 'UE ': 1, 'E I': 1, ' IN': 1, 'IN ': 1, 'N B': 1, ' BS': 3, 'BST': 4, 'ST\n': 1, 'T\n\n': 1, '\n\nW': 1, '\nWr': 1, 'Wri': 2, 'rit': 2, 'ite': 2, 'te ': 2, 'e a': 3, ' a ': 3, 'a f': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n t': 3, ' th': 6, 'tha': 2, 'hat': 2, 'at ': 2, 't t': 4, ' ta': 9, 'tak': 1, 'ake': 1, 'kes': 1, 'es ': 1, 's i': 2, ' in': 4, 'in ': 2, 'n a': 1, 'a B': 1, ' Bi': 1, 'Bin': 1, 'ina': 1, 'nar': 1, 'ary': 1, 'ry ': 1, 'y S': 1, ' Se': 1, 'Sea': 1, 'ear': 1, 'arc': 1, 'rch': 1, 'ch ': 1, 'h T': 1, ' Tr': 1, 'Tre': 1, 'ree': 14, 'ee ': 3, 'e (': 1, ' (B': 1, '(BS': 1, 'ST)': 1, 'T) ': 1, ') a': 1, ' an': 2, 'and': 2, 'nd ': 2, 'd a': 1, 'a t': 1, 'tar': 8, 'arg': 8, 'rge': 8, 'get': 8, 'et ': 3, 't i': 1, 'int': 1, 'nte': 1, 'teg': 1, 'ege': 1, 'ger': 1, 'er ': 1, 'r v': 1, ' va': 6, 'val': 15, 'alu': 16, 'lue': 16, 'ue ': 9, 'd r': 1, ' re': 2, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rns': 1, 'ns ': 1, 's t': 2, 'the': 4, 'he ': 4, 'e c': 3, ' cl': 2, 'clo': 1, 'los': 2, 'ose': 2, 'ses': 2, 'est': 2, 'st ': 1, 't v': 2, 'e t': 2, ' to': 1, 'to ': 1, 'o t': 1, ' co': 2, 'con': 1, 'ont': 1, 'nta': 1, 'tai': 1, 'ain': 1, 'ine': 1, 'ned': 1, 'ed ': 1, 'd i': 1, 'e B': 1, 'ST.': 1, 'T.\n': 1, '.\n\n': 1, '\n\n""': 1, '""""\n': 1, '""\n\n': 1, '\n\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 2, 'ef ': 2, 'f f': 1, ' fi': 1, 'fin': 1, 'ind': 1, 'ndC': 1, 'dCl': 1, 'Clo': 1, 'stV': 1, 'tVa': 1, 'Val': 1, 'ueI': 1, 'eIn': 1, 'InB': 1, 'nBs': 1, 'Bst': 1, 'st(': 1, 't(t': 1, '(tr': 2, 'tre': 13, 'ee,': 1, 'e, ': 1, ', t': 1, 'et)': 3, 't):': 1, '):\n': 2, ':\n ': 3, '\n  ': 6, '   ': 24, '  #': 2, ' # ': 2, '# W': 1, ' Wr': 1, 'e y': 1, ' yo': 1, 'you': 1, 'our': 1, 'ur ': 1, 'r c': 1, 'cod': 1, 'ode': 1, 'de ': 1, 'e h': 1, ' he': 1, 'her': 1, 'ere': 5, 're.': 1, 'e.\n': 1, '.\n ': 1, '# I': 1, ' It': 1, 'Ite': 1, 'ter': 1, 'era': 1, 'rat': 1, 'ati': 1, 'tiv': 1, 'ive': 2, 've ': 1, 'e w': 1, ' wa': 1, 'way': 1, 'ay,': 1, 'y, ': 1, ', c': 1, ' ca': 1, 'can': 1, 'an ': 1, 'n b': 1, ' be': 1, 'be ': 1, ' al': 1, 'als': 1, 'lso': 1, 'so ': 1, 'o d': 1, ' do': 1, 'don': 1, 'one': 3, 'ne ': 1, 'e r': 1, 'rec': 1, 'ecu': 1, 'cur': 3, 'urs': 1, 'rsi': 1, 'siv': 1, 'vel': 1, 'ely': 1, 'ly.': 1, 'y.\n': 1, '.\n\t': 1, '\n\ti': 1, '\tif': 4, 'if ': 4, 'f n': 1, ' no': 2, 'not': 2, 'ot ': 2, ' tr': 9, 'ee:': 2, 'e:\n': 5, ':\n\t': 6, '\n\t\t': 12, '\t\tr': 2, '\tre': 3, 'rn ': 3, 'n 0': 1, ' 0\n': 1, '0\n\t': 1, '\n\t\n': 1, '\t\n\t': 2, '\n\tv': 1, '\tva': 2, 'e =': 8, ' = ': 9, '= t': 6, 'ee.': 8, 'e.v': 5, '.va': 6, 'ue\n': 4, 'e\n\t': 2, '\n\tw': 1, '\twh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, '\t\ti': 3, 'f t': 3, ' ==': 1, '== ': 1, 'et:': 1, 't:\n': 1, '\t\t\t': 5, 'et\n': 1, 't\n\t': 3, '\t\tc': 1, '\tcu': 1, 'urr': 2, 'rre': 2, 'ren': 6, 'ent': 2, 'nt_': 2, 't_d': 2, '_di': 4, 'dif': 4, 'iff': 4, 'ffe': 4, 'fer': 4, 'enc': 4, 'nce': 4, 'ce ': 3, '= a': 2, ' ab': 2, 'abs': 2, 'bs(': 2, 's(t': 1, 'e -': 2, ' - ': 2, '- t': 2, 't)\n': 2, ')\n\t': 2, '\t\tm': 1, '\tmi': 1, 'min': 2, 'in_': 2, 'n_d': 2, 's(v': 1, '(va': 1, 'f c': 1, ' cu': 1, 'e <': 1, ' < ': 1, '< m': 1, ' mi': 1, 'ce:': 1, '\t\tv': 1, 't >': 1, ' >=': 1, '>= ': 1, 'ue:': 1, '\t\tt': 2, '\ttr': 2, 'e.r': 1, '.ri': 2, 'rig': 2, 'igh': 2, 'ght': 2, 'ht\n': 1, '\t\te': 1, '\tel': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e.l': 1, '.le': 2, 'lef': 2, 'eft': 2, 'ft\n': 1, '\t\t\n': 1, '\n\tr': 1, 'n v': 1, 'e\n\n': 1, '\n\n#': 1, '# T': 1, ' Th': 1, 'Thi': 1, 'his': 1, 'is ': 2, ' is': 1, 'cla': 2, 'las': 2, 'ass': 2, 'ss ': 2, 's o': 1, ' of': 1, 'of ': 1, 'e i': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut ': 1, 'e. ': 1, '. D': 1, ' Do': 1, 'Do ': 1, 'o n': 1, 't e': 1, ' ed': 1, 'edi': 1, 'dit': 1, 'it.': 1, 't.\n': 1, '.\nc': 1, '\ncl': 1, 's B': 1, 'ST:': 1, 'T:\n': 1, '  d': 1, ' de': 1, 'f _': 1, ' __': 1, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 1, '__(': 1, '_(s': 1, '(se': 1, 'sel': 4, 'elf': 4, 'lf,': 1, 'f, ': 1, ', v': 1, 'ue)': 1, 'e):': 1, '  s': 3, ' se': 3, 'lf.': 3, 'f.v': 1, '= v': 1, 'e\n ': 2, 'f.l': 1, 'ft ': 1, 't =': 2, '= N': 2, ' No': 2, 'Non': 2, 'ne\n': 2, 'f.r': 1, 'ht ': 1}"
Subham Das,find-three-largest-numbers.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'solution': 2, '1': 4, 'def': 4, 'findthreelargestnumbers(array):': 2, 'i': 7, '=': 12, '0': 1, 'while': 2, '<': 2, '3:': 1, 'pos': 2, 'largest': 2, 'array[pos]': 3, 'j': 4, '+': 1, 'len(array)': 1, '-': 1, '1:': 1, 'if': 3, 'array[j]': 2, '>': 4, 'largest:': 1, '+=': 2, 'temp': 2, 'array[i]': 2, 'return': 2, '[array[2],': 1, 'array[1],': 1, 'array[0]]': 1, '2': 1, 'largestnumbers': 2, '[none,': 1, 'none,': 1, 'none]': 1, 'for': 2, 'elem': 1, 'in': 2, 'array:': 1, 'checkandupdate(array,': 2, 'elem,': 1, 'largestnumbers)': 1, 'num,': 5, 'largestnumbers):': 1, 'largestnumbers[2]': 1, 'is': 1, 'none': 1, 'or': 3, 'num': 4, 'largestnumbers[2]:': 1, 'updateresult(largestnumbers,': 4, '2)': 1, 'elif': 2, 'not': 2, 'largestnumbers[1]': 1, 'largestnumbers[1]:': 1, '1)': 1, 'largestnumbers[0]': 1, 'largestnumbers[0]:': 1, '0)': 1, 'else:': 2, 'pass': 1, 'index):': 1, 'range(index+1):': 1, '==': 1, 'index:': 1, 'largestnumbers[i]': 2, 'largestnumbers[i+1]': 1}","{'# S': 2, ' SO': 2, 'SOL': 2, 'OLU': 2, 'LUT': 2, 'UTI': 2, 'TIO': 2, 'ION': 2, 'ON ': 2, 'N 1': 1, ' 1\n': 4, '1\nd': 1, '\nde': 4, 'def': 4, 'ef ': 4, 'f f': 2, ' fi': 2, 'fin': 2, 'ind': 5, 'ndT': 2, 'dTh': 2, 'Thr': 2, 'hre': 2, 'ree': 2, 'eeL': 2, 'eLa': 2, 'Lar': 2, 'arg': 22, 'rge': 22, 'ges': 22, 'est': 22, 'stN': 19, 'tNu': 19, 'Num': 19, 'umb': 19, 'mbe': 19, 'ber': 19, 'ers': 19, 'rs(': 2, 's(a': 2, '(ar': 5, 'arr': 16, 'rra': 16, 'ray': 16, 'ay)': 3, 'y):': 2, '):\n': 5, ':\n ': 15, '\n  ': 32, '   ': 180, '  i': 5, ' i ': 6, 'i =': 2, ' = ': 12, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  w': 2, ' wh': 2, 'whi': 2, 'hil': 2, 'ile': 2, 'le ': 2, 'e i': 1, 'i <': 1, ' < ': 2, '< 3': 1, ' 3:': 1, '3:\n': 1, '  p': 3, ' po': 2, 'pos': 5, 'os ': 2, 's =': 3, '= i': 3, ' i\n': 1, 'i\n ': 1, '  l': 5, ' la': 16, 'lar': 20, 'st ': 2, 't =': 2, '= a': 4, ' ar': 10, 'ay[': 10, 'y[p': 3, '[po': 3, 'os]': 3, 's]\n': 2, ']\n ': 5, '  j': 2, ' j ': 3, 'j =': 1, 'i +': 2, ' + ': 1, '+ 1': 1, '1\n ': 1, 'e j': 1, 'j <': 1, '< l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(a': 1, 'y) ': 1, ') -': 1, ' - ': 1, '- 1': 1, ' 1:': 1, '1:\n': 1, ' if': 3, 'if ': 5, 'f a': 1, 'y[j': 2, '[j]': 2, 'j] ': 1, '] >': 1, ' > ': 4, '> l': 4, 'st:': 1, 't:\n': 1, 'j]\n': 1, '= j': 1, ' j\n': 1, 'j\n ': 1, 'j +': 1, ' +=': 2, '+= ': 2, '= 1': 2, '1\n\n': 2, '\n\n ': 3, '  t': 1, ' te': 2, 'tem': 2, 'emp': 2, 'mp ': 1, 'p =': 1, 'y[i': 2, '[i]': 4, 'i]\n': 1, '  a': 2, 'i] ': 3, '] =': 4, 's] ': 1, '= t': 1, 'mp\n': 1, 'p\n ': 1, '  r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n [': 1, ' [a': 1, '[ar': 1, 'y[2': 1, '[2]': 3, '2],': 1, '], ': 2, ', a': 2, 'y[1': 1, '[1]': 3, '1],': 1, 'y[0': 1, '[0]': 3, '0]]': 1, ']]\n': 1, ']\n\n': 1, '\n\n#': 1, '\n# ': 1, 'N 2': 1, ' 2\n': 1, '2\nd': 1, 'rs ': 1, '= [': 1, ' [N': 1, '[No': 1, 'Non': 4, 'one': 4, 'ne,': 2, 'e, ': 2, ', N': 2, ' No': 3, 'ne]': 1, 'e]\n': 1, '  f': 2, ' fo': 2, 'for': 2, 'or ': 5, 'r e': 1, ' el': 6, 'ele': 2, 'lem': 2, 'em ': 1, 'm i': 1, ' in': 4, 'in ': 2, 'n a': 1, 'ay:': 1, 'y:\n': 1, '  c': 1, ' ch': 2, 'che': 2, 'hec': 2, 'eck': 2, 'ckA': 2, 'kAn': 2, 'And': 2, 'ndU': 2, 'dUp': 2, 'Upd': 2, 'pda': 6, 'dat': 6, 'ate': 6, 'te(': 2, 'e(a': 2, 'ay,': 2, 'y, ': 2, ', e': 1, 'em,': 1, 'm, ': 6, ', l': 2, 'rs)': 2, 's)\n': 1, ')\n\n': 1, 'n l': 1, 'rs\n': 1, 's\n\n': 2, '\n\nd': 2, 'f c': 1, ', n': 5, ' nu': 9, 'num': 9, 'um,': 5, 's):': 1, 'f l': 1, 'rs[': 9, 's[2': 2, '2] ': 1, '] i': 1, ' is': 1, 'is ': 1, 's N': 1, 'ne ': 1, 'e o': 1, ' or': 3, 'r n': 3, 'um ': 3, 'm >': 3, '2]:': 1, ']:\n': 3, '  u': 3, ' up': 4, 'upd': 4, 'teR': 4, 'eRe': 4, 'Res': 4, 'esu': 4, 'sul': 4, 'ult': 4, 'lt(': 4, 't(l': 4, '(la': 4, 'rs,': 4, 's, ': 4, ', 2': 1, ' 2)': 1, '2)\n': 1, ')\n ': 3, '  e': 4, 'eli': 2, 'lif': 2, 'f n': 2, ' no': 2, 'not': 2, 'ot ': 2, 't l': 2, 's[1': 2, '1] ': 1, '] o': 2, '1]:': 1, ', 1': 1, ' 1)': 1, '1)\n': 1, 's[0': 2, '0] ': 1, '0]:': 1, ', 0': 1, ' 0)': 1, '0)\n': 1, 'els': 2, 'lse': 2, 'se:': 2, 'e:\n': 2, ' pa': 1, 'pas': 1, 'ass': 1, 'ss\n': 1, 'f u': 1, ', i': 1, 'nde': 3, 'dex': 3, 'ex)': 1, 'x):': 1, 'r i': 1, 'i i': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(i': 1, '(in': 1, 'ex+': 1, 'x+1': 1, '+1)': 1, '1):': 1, 'f i': 1, ' ==': 1, '== ': 1, 'ex:': 1, 'x:\n': 1, 's[i': 3, '= n': 1, 'um\n': 1, 'm\n ': 1, '= l': 1, '[i+': 1, 'i+1': 1, '+1]': 1, '1]\n': 1}"
Subham Das,first-non-reapting-character.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'o(n)': 1, 'time': 1, 'and': 1, 'o(1)': 1, 'space': 1, 'def': 1, 'firstnonrepeatingcharacter(string):': 1, 'counts': 1, '=': 4, '{}': 1, 'for': 2, 'index,': 1, 'char': 3, 'in': 3, 'enumerate(string):': 1, 'if': 3, 'counts:': 2, 'counts[char][1]': 2, '+=': 1, '1': 1, 'else:': 1, 'counts[char]': 1, '[index,': 1, '1]': 1, 'minindex': 4, 'float(""inf"")': 2, '==': 2, '1:': 1, 'min(minindex,': 1, 'counts[char][0])': 1, 'return': 1, '-1': 1, 'else': 1}","{'# O': 1, ' O(': 2, 'O(N': 1, '(N)': 1, 'N) ': 1, ') t': 1, ' ti': 1, 'tim': 1, 'ime': 1, 'me ': 1, 'e a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd O': 1, 'O(1': 1, '(1)': 1, '1) ': 1, ') s': 1, ' sp': 1, 'spa': 1, 'pac': 1, 'ace': 1, 'ce\n': 1, 'e\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f f': 1, ' fi': 1, 'fir': 1, 'irs': 1, 'rst': 1, 'stN': 1, 'tNo': 1, 'Non': 1, 'onR': 1, 'nRe': 1, 'Rep': 1, 'epe': 1, 'pea': 1, 'eat': 1, 'ati': 1, 'tin': 1, 'ing': 3, 'ngC': 1, 'gCh': 1, 'Cha': 1, 'har': 8, 'ara': 1, 'rac': 1, 'act': 1, 'cte': 1, 'ter': 1, 'er(': 1, 'r(s': 1, '(st': 2, 'str': 2, 'tri': 2, 'rin': 2, 'ng)': 2, 'g):': 2, '):\n': 2, ':\n ': 6, '\n  ': 11, '   ': 58, '  c': 3, ' co': 7, 'cou': 7, 'oun': 7, 'unt': 7, 'nts': 7, 'ts ': 1, 's =': 1, ' = ': 4, '= {': 1, ' {}': 1, '{}\n': 1, '}\n ': 1, '  f': 2, ' fo': 2, 'for': 2, 'or ': 2, 'r i': 4, ' in': 4, 'ind': 2, 'nde': 7, 'dex': 7, 'ex,': 3, 'x, ': 3, ', c': 2, ' ch': 3, 'cha': 7, 'ar ': 3, 'in ': 3, 'n e': 1, ' en': 1, 'enu': 1, 'num': 1, 'ume': 1, 'mer': 1, 'era': 1, 'rat': 1, 'ate': 1, 'te(': 1, 'e(s': 1, '  i': 2, ' if': 3, 'if ': 3, 'f c': 2, 'n c': 2, 'ts:': 2, 's:\n': 2, 'ts[': 4, 's[c': 4, '[ch': 4, 'ar]': 4, 'r][': 3, '][1': 2, '[1]': 2, '1] ': 2, '] +': 1, ' +=': 1, '+= ': 1, '= 1': 2, ' 1\n': 1, '1\n ': 1, '  e': 1, ' el': 2, 'els': 2, 'lse': 2, 'se:': 1, 'e:\n': 1, 'r] ': 1, '] =': 2, '= [': 1, ' [i': 1, '[in': 1, ', 1': 1, ' 1]': 1, '1]\n': 1, ']\n\n': 1, '\n\n ': 2, '  m': 2, ' mi': 5, 'min': 6, 'inI': 5, 'nIn': 5, 'Ind': 5, 'ex ': 3, 'x =': 3, '= f': 2, ' fl': 2, 'flo': 2, 'loa': 2, 'oat': 2, 'at(': 2, 't(""': 2, '(""i': 2, '""in': 2, 'inf': 2, 'nf""': 2, 'f"")': 2, '"")\n': 1, ')\n ': 1, 'r c': 1, ' ==': 2, '== ': 2, ' 1:': 1, '1:\n': 1, '= m': 1, 'in(': 1, 'n(m': 1, '(mi': 1, '][0': 1, '[0]': 1, '0])': 1, '])\n': 1, ')\n\n': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n -': 1, ' -1': 1, '-1 ': 1, '1 i': 1, 'f m': 1, '"") ': 1, ') e': 1, 'se ': 1, 'e m': 1, 'ex\n': 1}"
Subham Das,generete-document.py,"[0.1304, 0.2033, 0.1306, 0.0757, 0.0095, 0.0968, 0.3493, 0.1598, 0.0399, 0.0669, 0.0504, 0.2585, 0.3612, 0.0552, 0.1984, 0.0932, 0.1159, 0.0605, 0.2925, 0.3197, 0.1163, 0.1891, 0.0208, 0.198, 0.1916, 0.0725]","[0.0425, 0.4343, 0.1629, 0.1523, 0.1582, 0.117, 0.2369, 0.0583, 0.1195, 0.1047, 0.0582, 0.285, 0.0547, 0.0969, 0.1697, 0.2841, 0.0087, 0.4232, 0.1347, 0.1646, 0.171, 0.1163, 0.0044, 0.0355, 0.0605, 0.1564, 0.1021, 0.1206, 0.0753, 0.1711, 0.0158, 0.0566, 0.0249, 0.0175, 0.1694, 0.2008, 0.1216, 0.2297, 0.1314, 0.1782, 0.0731, 0.2395, 0.0399, 0.0532, 0.1231, 0.2063]","[0.0718, 0.0256, 0.0647, 0.1901, 0.1869, 0.1697, 0.282, 0.3454, 0.1076, 0.0284, 0.2822, 0.1171, 0.2219, 0.0931, 0.0028, 0.0863, 0.0282, 0.0876, 0.1666, 0.0705, 0.1549, 0.136, 0.127, 0.1445, 0.1966, 0.0979, 0.0092, 0.0505, 0.0003, 0.0293, 0.0933, 0.1966]","[0.1636, 0.0683, 0.1786, 0.2766, 0.0812, 0.2095, 0.0903, 0.2449, 0.2352, 0.1178, 0.1229, 0.1556, 0.104, 0.1075, 0.0267, 0.1381, 0.0565, 0.0101, 0.1144, 0.2519, 0.2842, 0.0084, 0.0591, 0.0614, 0.2053, 0.1904, 0.0052, 0.0078, 0.2985, 0.1136, 0.0558]","{'#': 1, 'o(m': 1, '+': 1, 'n)': 1, 'time': 1, 'and': 1, 'o(c)': 1, 'space,': 1, 'c': 1, '->': 3, 'no.of': 1, 'unique': 1, 'characters': 4, 'in': 7, 'string,': 2, 'n': 1, 'total': 2, 'charatcers': 1, 'document': 1, 'm': 1, 'string': 1, 'def': 1, 'generatedocument(characters,': 1, 'document):': 1, 'count': 2, '=': 2, '{}': 1, 'for': 2, 'character': 4, 'characters:': 1, 'if': 2, 'count:': 1, 'count[character]': 4, '+=': 1, '1': 3, 'else:': 2, 'document:': 1, 'not': 1, 'or': 1, '<': 1, '1:': 1, 'return': 2, 'false': 1, '-=': 1, 'true': 1}","{'# O': 1, ' O(': 2, 'O(M': 1, '(M ': 1, 'M +': 1, ' + ': 1, '+ N': 1, ' N)': 1, 'N) ': 1, ') t': 1, ' ti': 1, 'tim': 1, 'ime': 1, 'me ': 1, 'e a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd O': 1, 'O(C': 1, '(C)': 1, 'C) ': 1, ') s': 1, ' sp': 1, 'spa': 1, 'pac': 1, 'ace': 1, 'ce,': 1, 'e, ': 1, ', C': 1, ' C ': 1, 'C -': 1, ' ->': 3, '-> ': 3, '> n': 1, ' no': 2, 'no.': 1, 'o.o': 1, '.of': 1, 'of ': 1, 'f u': 1, ' un': 1, 'uni': 1, 'niq': 1, 'iqu': 1, 'que': 1, 'ue ': 1, 'e c': 1, ' ch': 10, 'cha': 15, 'har': 15, 'ara': 15, 'rac': 14, 'act': 14, 'cte': 14, 'ter': 14, 'ers': 7, 'rs ': 5, 's i': 3, ' in': 7, 'in ': 7, 'n c': 5, 's s': 2, ' st': 3, 'str': 3, 'tri': 3, 'rin': 3, 'ing': 3, 'ng,': 2, 'g, ': 2, ', N': 1, ' N ': 1, 'N -': 1, '> t': 2, ' to': 2, 'tot': 2, 'ota': 2, 'tal': 2, 'al ': 2, 'l c': 2, 'rat': 2, 'atc': 1, 'tce': 1, 'cer': 1, 'n d': 2, ' do': 3, 'doc': 3, 'ocu': 4, 'cum': 4, 'ume': 4, 'men': 4, 'ent': 4, 'nt ': 3, 't s': 1, ', M': 1, ' M ': 1, 'M -': 1, 'ng\n': 1, 'g\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f g': 1, ' ge': 1, 'gen': 1, 'ene': 1, 'ner': 1, 'era': 1, 'ate': 1, 'teD': 1, 'eDo': 1, 'Doc': 1, 'nt(': 1, 't(c': 1, '(ch': 1, 'rs,': 1, 's, ': 1, ', d': 1, 'nt)': 1, 't):': 1, '):\n': 1, ':\n ': 7, '\n  ': 12, '   ': 72, '  c': 4, ' co': 7, 'cou': 7, 'oun': 7, 'unt': 7, 't =': 1, ' = ': 2, '= {': 1, ' {}': 1, '{}\n': 1, '}\n ': 1, '  f': 2, ' fo': 2, 'for': 2, 'or ': 3, 'r c': 3, 'er ': 4, 'r i': 3, 'rs:': 1, 's:\n': 1, '  i': 2, ' if': 2, 'if ': 2, 'f c': 2, 'nt:': 2, 't:\n': 2, 'nt[': 4, 't[c': 4, '[ch': 4, 'er]': 4, 'r] ': 4, '] +': 1, ' +=': 1, '+= ': 1, '= 1': 3, ' 1\n': 3, '1\n ': 1, '  e': 2, ' el': 2, 'els': 2, 'lse': 3, 'se:': 2, 'e:\n': 2, '] =': 1, '1\n\n': 2, '\n\n ': 2, 'r n': 1, 'not': 1, 'ot ': 1, 't i': 1, 't o': 1, ' or': 1, '] <': 1, ' < ': 1, '< 1': 1, ' 1:': 1, '1:\n': 1, '  r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'se\n': 1, 'e\n ': 1, '] -': 1, ' -=': 1, '-= ': 1, 'n T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1}"
Subham Das,node-deapth.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 6, 'solution': 3, '1': 2, 'def': 7, 'nodedepths(root):': 3, 'return': 6, 'calculatenodedepths(root,': 2, '0)': 1, 'currentdepth):': 1, 'if': 5, 'not': 3, 'root:': 2, '0': 5, 'currentdepth': 6, '+': 6, 'calculatenodedepths(root.left,': 1, '1)': 2, 'calculatenodedepths(root.right,': 1, 'this': 3, 'is': 3, 'the': 6, 'class': 6, 'of': 3, 'input': 3, 'binary': 3, 'tree.': 3, 'binarytree:': 3, '__init__(self,': 3, 'value):': 3, 'self.value': 3, '=': 18, 'value': 3, 'self.left': 3, 'none': 6, 'self.right': 3, '2': 1, 'totaldepth': 6, 'levelorderqueue': 2, '[root]': 1, 'while': 3, 'levelorderqueue:': 2, '+=': 3, 'len(levelorderqueue)': 1, '*': 1, 'tempqueue': 2, '[]': 1, 'tempnode': 2, 'levelorderqueue.pop()': 1, 'tempnode.left:': 1, 'tempqueue.append(tempnode.left)': 1, 'tempnode.right:': 1, 'tempqueue.append(tempnode.right)': 1, '3': 1, 'stack': 1, '[{""node"":': 1, 'root,': 1, '""depth"":': 3, '0}]': 1, 'len(stack)': 1, '>': 1, '0:': 1, 'stack.pop()': 1, 'tempnode[""node""]:': 1, 'continue': 1, 'tempnode[""depth""]': 3, 'stack.append({""node"":': 2, 'tempnode[""node""].left,': 1, '1})': 2, 'tempnode[""node""].right,': 1}","{'# S': 3, ' SO': 3, 'SOL': 3, 'OLU': 3, 'LUT': 3, 'UTI': 3, 'TIO': 3, 'ION': 3, 'ON ': 3, 'N 1': 1, ' 1\n': 2, '1\nd': 1, '\nde': 4, 'def': 7, 'ef ': 7, 'f n': 6, ' no': 6, 'nod': 9, 'ode': 25, 'deD': 7, 'eDe': 7, 'Dep': 20, 'ept': 26, 'pth': 26, 'ths': 7, 'hs(': 7, 's(r': 7, '(ro': 7, 'roo': 11, 'oot': 11, 'ot)': 3, 't):': 3, '):\n': 7, ':\n ': 18, '\n  ': 43, '   ': 226, '  r': 6, ' re': 6, 'ret': 6, 'etu': 6, 'tur': 6, 'urn': 6, 'rn ': 6, 'n c': 2, ' ca': 4, 'cal': 4, 'alc': 4, 'lcu': 4, 'cul': 4, 'ula': 4, 'lat': 4, 'ate': 4, 'teN': 4, 'eNo': 4, 'Nod': 16, 'ot,': 3, 't, ': 7, ', 0': 1, ' 0)': 1, '0)\n': 1, ')\n\n': 2, '\n\nd': 1, 'f c': 1, ', c': 3, ' cu': 7, 'cur': 7, 'urr': 7, 'rre': 7, 'ren': 7, 'ent': 7, 'ntD': 7, 'tDe': 7, 'th)': 1, 'h):': 1, '  i': 5, ' if': 5, 'if ': 5, 'not': 3, 'ot ': 3, 't r': 2, ' ro': 3, 'ot:': 2, 't:\n': 4, 'n 0': 2, ' 0\n': 5, '0\n\n': 1, '\n\n ': 2, 'th ': 9, 'h +': 6, ' + ': 6, '+ c': 2, 'ot.': 2, 't.l': 1, '.le': 7, 'lef': 7, 'eft': 7, 'ft,': 2, '+ 1': 4, ' 1)': 2, '1) ': 1, ') +': 1, 't.r': 1, '.ri': 7, 'rig': 7, 'igh': 7, 'ght': 7, 'ht,': 2, '1)\n': 1, '\n\n\n': 5, '\n\n#': 5, '\n# ': 5, '# T': 3, ' Th': 3, 'Thi': 3, 'his': 3, 'is ': 6, 's i': 3, ' is': 3, 's t': 3, ' th': 6, 'the': 6, 'he ': 6, 'e c': 3, ' cl': 3, 'cla': 6, 'las': 6, 'ass': 6, 'ss ': 6, 's o': 3, ' of': 3, 'of ': 3, 'f t': 5, 'e i': 3, ' in': 3, 'inp': 3, 'npu': 3, 'put': 3, 'ut ': 3, 't b': 3, ' bi': 3, 'bin': 3, 'ina': 6, 'nar': 6, 'ary': 6, 'ry ': 3, 'y t': 3, ' tr': 3, 'tre': 3, 'ree': 6, 'ee.': 3, 'e.\n': 3, '.\nc': 3, '\ncl': 3, 's B': 3, ' Bi': 3, 'Bin': 3, 'ryT': 3, 'yTr': 3, 'Tre': 3, 'ee:': 3, 'e:\n': 5, '  d': 3, ' de': 3, 'f _': 3, ' __': 3, '__i': 3, '_in': 3, 'ini': 3, 'nit': 3, 'it_': 3, 't__': 3, '__(': 3, '_(s': 3, '(se': 3, 'sel': 12, 'elf': 12, 'lf,': 3, 'f, ': 3, ', v': 3, ' va': 6, 'val': 9, 'alu': 9, 'lue': 9, 'ue)': 4, 'e):': 3, '  s': 12, ' se': 9, 'lf.': 9, 'f.v': 3, '.va': 3, 'ue ': 6, 'e =': 8, ' = ': 18, '= v': 3, 'ue\n': 5, 'e\n ': 7, 'f.l': 3, 'ft ': 3, 't =': 6, '= N': 6, ' No': 6, 'Non': 6, 'one': 6, 'ne\n': 6, 'f.r': 3, 'ht ': 3, 'e\n\n': 3, 'N 2': 1, ' 2\n': 1, '2\nd': 1, '0\n ': 4, '  t': 9, ' to': 6, 'tot': 6, 'ota': 6, 'tal': 6, 'alD': 6, 'lDe': 6, 'h =': 3, '= 0': 3, '  c': 3, '  l': 2, ' le': 7, 'lev': 6, 'eve': 6, 'vel': 6, 'elO': 6, 'lOr': 6, 'Ord': 6, 'rde': 6, 'der': 6, 'erQ': 6, 'rQu': 6, 'Que': 10, 'ueu': 10, 'eue': 10, '= [': 3, ' [r': 1, '[ro': 1, 'ot]': 1, 't]\n': 1, ']\n ': 4, '  w': 3, ' wh': 3, 'whi': 3, 'hil': 3, 'ile': 3, 'le ': 3, 'e l': 3, 'ue:': 2, ' +=': 3, '+= ': 3, '= l': 2, 'len': 2, 'en(': 2, 'n(l': 1, '(le': 1, 'e) ': 1, ') *': 1, ' * ': 1, '* c': 1, 'th\n': 3, 'h\n ': 1, '= 1': 1, '1\n ': 1, ' te': 14, 'tem': 16, 'emp': 16, 'mpQ': 4, 'pQu': 4, ' []': 1, '[]\n': 1, 'mpN': 12, 'pNo': 12, 'de ': 2, 'ue.': 3, 'e.p': 1, '.po': 2, 'pop': 2, 'op(': 2, 'p()': 2, '()\n': 2, ')\n ': 6, 'de.': 4, 'e.l': 2, 'ft:': 1, 'e.a': 2, '.ap': 4, 'app': 4, 'ppe': 4, 'pen': 4, 'end': 4, 'nd(': 4, 'd(t': 2, '(te': 2, 'ft)': 1, 't)\n': 2, 'e.r': 2, 'ht:': 1, 'ht)': 1, '= t': 2, 'n t': 2, 'h\n\n': 2, 'N 3': 1, ' 3\n': 1, '3\nd': 1, ' st': 4, 'sta': 5, 'tac': 5, 'ack': 5, 'ck ': 1, 'k =': 1, ' [{': 1, '[{""': 1, '{""n': 3, '""no': 6, 'de""': 6, 'e"":': 3, '"": ': 6, ': r': 1, ', ""': 3, ' ""d': 3, '""de': 6, 'dep': 6, 'th""': 6, 'h"":': 3, ': 0': 1, ' 0}': 1, '0}]': 1, '}]\n': 1, 'n(s': 1, '(st': 1, 'ck)': 1, 'k) ': 1, ') >': 1, ' > ': 1, '> 0': 1, ' 0:': 1, '0:\n': 1, '= s': 1, 'ck.': 3, 'k.p': 1, 't t': 1, 'de[': 6, 'e[""': 6, '[""n': 3, 'e""]': 3, '""]:': 1, ']:\n': 1, ' co': 1, 'con': 1, 'ont': 1, 'nti': 1, 'tin': 1, 'inu': 1, 'nue': 1, '[""d': 3, 'h""]': 3, '""]\n': 1, 'k.a': 2, 'd({': 2, '({""': 2, ': t': 4, '""].': 2, '].l': 1, '""] ': 2, '] +': 2, ' 1}': 2, '1})': 2, '})\n': 2, '].r': 1}"
Subham Das,non-constructable-change.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 1, 'o(nlogn)': 1, 'time,': 1, 'o(1)': 1, 'space': 1, 'def': 1, 'nonconstructiblechange(coins):': 1, 'if': 2, 'not': 1, 'coins:': 1, 'return': 3, '1': 4, 'coins.sort()': 1, 'maxchangegenerated': 5, '=': 2, '0': 2, 'i': 3, 'while': 1, '<': 1, 'len(coins):': 1, 'coins[i]': 2, '<=': 1, '+': 3, '1:': 1, '+=': 2, 'else:': 1}","{'# O': 1, ' O(': 2, 'O(N': 1, '(Nl': 1, 'Nlo': 1, 'log': 1, 'ogN': 1, 'gN)': 1, 'N) ': 1, ') t': 1, ' ti': 1, 'tim': 1, 'ime': 1, 'me,': 1, 'e, ': 1, ', O': 1, 'O(1': 1, '(1)': 1, '1) ': 1, ') s': 1, ' sp': 1, 'spa': 1, 'pac': 1, 'ace': 1, 'ce\n': 1, 'e\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f n': 2, ' no': 2, 'non': 1, 'onC': 1, 'nCo': 1, 'Con': 1, 'ons': 1, 'nst': 1, 'str': 1, 'tru': 1, 'ruc': 1, 'uct': 1, 'cti': 1, 'tib': 1, 'ibl': 1, 'ble': 1, 'leC': 1, 'eCh': 1, 'Cha': 6, 'han': 6, 'ang': 6, 'nge': 6, 'ge(': 1, 'e(c': 1, '(co': 2, 'coi': 6, 'oin': 6, 'ins': 6, 'ns)': 2, 's):': 2, '):\n': 2, ':\n ': 5, '\n  ': 12, '   ': 56, '  i': 4, ' if': 2, 'if ': 2, 'not': 1, 'ot ': 1, 't c': 1, ' co': 4, 'ns:': 1, 's:\n': 1, '  r': 3, ' re': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n 1': 1, ' 1\n': 4, '1\n\n': 2, '\n\n ': 2, '  c': 1, 'ns.': 1, 's.s': 1, '.so': 1, 'sor': 1, 'ort': 1, 'rt(': 1, 't()': 1, '()\n': 1, ')\n ': 1, '  m': 2, ' ma': 5, 'max': 5, 'axC': 5, 'xCh': 5, 'geG': 5, 'eGe': 5, 'Gen': 5, 'ene': 5, 'ner': 5, 'era': 5, 'rat': 5, 'ate': 5, 'ted': 5, 'ed ': 5, 'd =': 1, ' = ': 2, '= 0': 2, ' 0\n': 2, '0\n ': 2, ' i ': 3, 'i =': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e i': 1, 'i <': 1, ' < ': 1, '< l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(c': 1, 'f c': 1, 'ns[': 2, 's[i': 2, '[i]': 2, 'i] ': 1, '] <': 1, ' <=': 1, '<= ': 1, '= m': 1, 'd +': 4, ' + ': 3, '+ 1': 3, ' 1:': 1, '1:\n': 1, ' +=': 2, '+= ': 2, '= c': 1, 'i]\n': 1, ']\n ': 1, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, 'n m': 2, '1\n ': 1, 'i +': 1, '= 1': 1}"
Subham Das,nth-fibbinoci.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 2, 'iterative': 1, 'way': 2, 'def': 3, 'getnthfib(n):': 2, 'f0': 4, '=': 7, '0': 2, 'f1': 5, '1': 2, 'if': 3, 'n': 5, '==': 2, '1:': 1, 'return': 6, '2:': 3, 'f2': 4, 'while': 1, '>': 1, '+': 2, '-=': 1, 'recursive': 1, 'calculatefibonacci(n,': 2, '{1:': 1, '0,': 1, '1})': 1, 'known):': 1, 'in': 1, 'known:': 1, 'known[n]': 3, 'calculatefibonacci(n-1,': 1, 'known)': 2, 'calculatefibonacci(n-2,': 1}","{'# I': 1, ' IT': 1, 'ITE': 1, 'TER': 1, 'ERA': 1, 'RAT': 1, 'ATI': 1, 'TIV': 1, 'IVE': 2, 'VE ': 2, 'E W': 2, ' WA': 2, 'WAY': 2, 'AY\n': 2, 'Y\nd': 2, '\nde': 3, 'def': 3, 'ef ': 3, 'f g': 2, ' ge': 2, 'get': 2, 'etN': 2, 'tNt': 2, 'Nth': 2, 'thF': 2, 'hFi': 2, 'Fib': 6, 'ib(': 2, 'b(n': 2, '(n)': 2, 'n):': 3, '):\n': 3, ':\n ': 7, '\n  ': 18, '   ': 64, '  F': 6, ' F0': 4, 'F0 ': 3, '0 =': 2, ' = ': 7, '= 0': 2, ' 0\n': 2, '0\n ': 2, ' F1': 5, 'F1 ': 2, '1 =': 2, '= 1': 3, ' 1\n': 2, '1\n ': 3, '  i': 3, ' if': 3, 'if ': 3, 'f n': 3, ' n ': 5, 'n =': 2, ' ==': 2, '== ': 2, ' 1:': 1, '1:\n': 1, '  r': 6, ' re': 6, 'ret': 6, 'etu': 6, 'tur': 6, 'urn': 6, 'rn ': 6, 'n F': 3, 'F0\n': 1, '0\n\n': 1, '\n\n ': 4, '= 2': 1, ' 2:': 3, '2:\n': 2, 'F1\n': 3, '1\n\n': 2, ' F2': 4, 'F2 ': 2, '2 =': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e n': 1, 'n >': 1, ' > ': 1, '> 2': 1, '= F': 3, '0 +': 1, ' + ': 2, '+ F': 1, 'F2\n': 2, '2\n ': 1, '  n': 1, 'n -': 1, ' -=': 1, '-= ': 1, '2\n\n': 1, '\n\n#': 1, '\n# ': 1, '# R': 1, ' RE': 1, 'REC': 1, 'ECU': 1, 'CUR': 1, 'URS': 1, 'RSI': 1, 'SIV': 1, 'n c': 1, ' ca': 4, 'cal': 4, 'alc': 4, 'lcu': 4, 'cul': 4, 'ula': 4, 'lat': 4, 'ate': 4, 'teF': 4, 'eFi': 4, 'ibo': 4, 'bon': 4, 'ona': 4, 'nac': 4, 'acc': 4, 'cci': 4, 'ci(': 4, 'i(n': 4, '(n,': 2, 'n, ': 2, ', {': 1, ' {1': 1, '{1:': 1, '1: ': 1, ': 0': 1, ' 0,': 1, '0, ': 1, ', 2': 1, '2: ': 1, ': 1': 1, ' 1}': 1, '1})': 1, '})\n': 1, ')\n\n': 1, '\n\nd': 1, 'f c': 1, ', k': 3, ' kn': 7, 'kno': 7, 'now': 7, 'own': 7, 'wn)': 3, 'n i': 1, ' in': 1, 'in ': 1, 'n k': 3, 'wn:': 1, 'n:\n': 1, 'wn[': 3, 'n[n': 3, '[n]': 3, 'n]\n': 2, ']\n\n': 1, '  k': 1, 'n] ': 1, '] =': 1, '= c': 1, '(n-': 2, 'n-1': 1, '-1,': 1, '1, ': 1, 'n) ': 1, ') +': 1, '+ c': 1, 'n-2': 1, '-2,': 1, '2, ': 1, 'n)\n': 1, ')\n ': 1}"
Subham Das,palindrome-check.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 3, 'o(n)': 3, 'time': 3, 'and': 4, 'space': 3, 'def': 3, 'ispalindrome(string):': 3, 'return': 5, 'string': 1, '==': 2, 'string[::-1]': 1, 'o(1)': 1, 'i': 4, '=': 2, '0': 1, 'j': 4, 'len(string)': 2, '-': 1, '1': 3, 'while': 1, '<=': 1, 'string[i]': 1, 'string[j]:': 1, '+=': 1, '-=': 1, '>': 1, 'if': 2, '<': 1, '2:': 1, 'true': 1, 'string[0]': 1, '!=': 1, 'string[-1]:': 1, 'false': 1, 'ispalindrome(string[1:len(string)-1])': 1}","{'# O': 3, ' O(': 4, 'O(N': 3, '(N)': 3, 'N) ': 3, ') t': 3, ' ti': 3, 'tim': 3, 'ime': 3, 'me ': 3, 'e a': 3, ' an': 4, 'and': 4, 'nd ': 4, 'd s': 3, ' sp': 3, 'spa': 3, 'pac': 3, 'ace': 3, 'ce\n': 3, 'e\nd': 3, '\nde': 3, 'def': 3, 'ef ': 3, 'f i': 3, ' is': 4, 'isP': 4, 'sPa': 4, 'Pal': 4, 'ali': 4, 'lin': 4, 'ind': 4, 'ndr': 4, 'dro': 4, 'rom': 4, 'ome': 4, 'me(': 4, 'e(s': 4, '(st': 7, 'str': 13, 'tri': 13, 'rin': 13, 'ing': 13, 'ng)': 6, 'g):': 3, '):\n': 3, ':\n ': 6, '\n  ': 12, '   ': 40, '  r': 5, ' re': 5, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 5, 'n s': 1, ' st': 6, 'ng ': 1, 'g =': 1, ' ==': 2, '== ': 2, '= s': 3, 'ng[': 6, 'g[:': 1, '[::': 1, '::-': 1, ':-1': 1, '-1]': 3, '1]\n': 1, ']\n\n': 1, '\n\n#': 2, '\n# ': 2, 'd O': 1, 'O(1': 1, '(1)': 1, '1) ': 1, ') s': 1, '  i': 4, ' i ': 4, 'i =': 1, ' = ': 2, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  j': 2, ' j ': 3, 'j =': 1, '= l': 1, ' le': 2, 'len': 3, 'en(': 3, 'n(s': 3, 'g) ': 2, ') -': 1, ' - ': 1, '- 1': 1, ' 1\n': 3, '1\n ': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e i': 1, 'i <': 1, ' <=': 1, '<= ': 1, '= j': 1, 'j a': 1, 'g[i': 1, '[i]': 1, 'i] ': 1, '] =': 1, 'g[j': 1, '[j]': 1, 'j]:': 1, ']:\n': 2, 'i +': 1, ' +=': 1, '+= ': 1, '= 1': 2, 'j -': 1, ' -=': 1, '-= ': 1, '1\n\n': 1, '\n\n ': 3, 'n i': 2, 'i >': 1, ' > ': 1, '> j': 1, ' j\n': 1, 'j\n\n': 1, ' if': 2, 'if ': 2, 'f l': 1, ') <': 1, ' < ': 1, '< 2': 1, ' 2:': 1, '2:\n': 1, 'n T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1, 'e\n\n': 2, 'f s': 1, 'g[0': 1, '[0]': 1, '0] ': 1, '] !': 1, ' !=': 1, '!= ': 1, 'g[-': 1, '[-1': 1, '1]:': 1, 'n F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'lse': 1, 'se\n': 1, 'g[1': 1, '[1:': 1, '1:l': 1, ':le': 1, 'g)-': 1, ')-1': 1, '1])': 1, '])\n': 1}"
Subham Das,product-sum.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'def': 2, 'productsum(array):': 1, 'return': 3, 'specialarrays(array,': 2, '1)': 2, 'currentlevel):': 1, 'if': 2, 'not': 1, 'array:': 2, '0': 2, 'sum': 4, '=': 1, 'for': 1, 'elem': 2, 'in': 1, 'type(elem)': 1, '==': 1, 'list:': 1, '+=': 2, 'specialarrays(elem,': 1, 'currentlevel': 2, '+': 1, 'else:': 1, '*': 1}","{'def': 2, 'ef ': 2, 'f p': 1, ' pr': 1, 'pro': 1, 'rod': 1, 'odu': 1, 'duc': 1, 'uct': 1, 'ctS': 1, 'tSu': 1, 'Sum': 1, 'um(': 1, 'm(a': 1, '(ar': 3, 'arr': 5, 'rra': 8, 'ray': 8, 'ay)': 1, 'y):': 1, '):\n': 2, ':\n ': 6, '\n  ': 12, '   ': 60, '  r': 3, ' re': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n s': 2, ' sp': 3, 'spe': 3, 'pec': 3, 'eci': 3, 'cia': 3, 'ial': 3, 'alA': 3, 'lAr': 3, 'Arr': 3, 'ays': 3, 'ys(': 3, 's(a': 2, 'ay,': 2, 'y, ': 2, ', 1': 1, ' 1)': 2, '1)\n': 2, ')\n\n': 1, '\n\nd': 1, '\nde': 1, 'f s': 1, ', c': 2, ' cu': 3, 'cur': 3, 'urr': 3, 'rre': 3, 'ren': 3, 'ent': 3, 'ntL': 3, 'tLe': 3, 'Lev': 3, 'eve': 3, 'vel': 3, 'el)': 1, 'l):': 1, '  i': 2, ' if': 2, 'if ': 2, 'f n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't a': 1, ' ar': 2, 'ay:': 2, 'y:\n': 2, 'n 0': 1, ' 0\n': 2, '0\n ': 2, '  \n': 2, ' \n ': 2, '  s': 3, ' su': 4, 'sum': 4, 'um ': 4, 'm =': 1, ' = ': 1, '= 0': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r e': 1, ' el': 3, 'ele': 4, 'lem': 4, 'em ': 1, 'm i': 1, ' in': 1, 'in ': 1, 'n a': 1, 'f t': 1, ' ty': 1, 'typ': 1, 'ype': 1, 'pe(': 1, 'e(e': 1, '(el': 2, 'em)': 1, 'm) ': 1, ') =': 1, ' ==': 1, '== ': 1, '= l': 1, ' li': 1, 'lis': 1, 'ist': 1, 'st:': 1, 't:\n': 1, 'm +': 2, ' +=': 2, '+= ': 2, '= s': 1, 's(e': 1, 'em,': 1, 'm, ': 1, 'el ': 1, 'l +': 1, ' + ': 1, '+ 1': 1, ')\n ': 1, '  e': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, '= e': 1, 'em\n': 1, 'm\n ': 1, 'm *': 1, ' * ': 1, '* c': 1, 'el\n': 1}"
Subham Das,run-length-encoding.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'def': 1, 'runlengthencoding(string):': 1, 'result': 1, '=': 6, '[]': 1, 'currentchar': 2, 'string[0]': 1, 'frequency': 5, '0': 1, 'for': 1, 'x': 3, 'in': 1, 'string:': 1, 'if': 2, '==': 1, 'currentchar:': 1, '<': 1, '9:': 1, '+=': 1, '1': 3, 'else:': 2, 'result.append(str(frequency)': 3, '+': 3, 'currentchar)': 3, 'return': 1, '"""".join(result)': 1}","{'def': 1, 'ef ': 1, 'f r': 1, ' ru': 1, 'run': 1, 'unL': 1, 'nLe': 1, 'Len': 1, 'eng': 1, 'ngt': 1, 'gth': 1, 'thE': 1, 'hEn': 1, 'Enc': 1, 'nco': 1, 'cod': 1, 'odi': 1, 'din': 1, 'ing': 4, 'ng(': 1, 'g(s': 1, '(st': 4, 'str': 6, 'tri': 3, 'rin': 3, 'ng)': 1, 'g):': 1, '):\n': 1, ':\n ': 6, '\n  ': 18, '   ': 120, '  r': 5, ' re': 5, 'res': 5, 'esu': 5, 'sul': 5, 'ult': 5, 'lt ': 1, 't =': 1, ' = ': 6, '= [': 1, ' []': 1, '[]\n': 1, ']\n ': 2, '  c': 2, ' cu': 6, 'cur': 6, 'urr': 6, 'rre': 6, 'ren': 6, 'ent': 6, 'ntC': 6, 'tCh': 6, 'Cha': 6, 'har': 6, 'ar ': 2, 'r =': 2, '= s': 1, ' st': 2, 'ng[': 1, 'g[0': 1, '[0]': 1, '0]\n': 1, '  f': 5, ' fr': 5, 'fre': 8, 'req': 8, 'equ': 8, 'que': 8, 'uen': 8, 'enc': 8, 'ncy': 8, 'cy ': 5, 'y =': 3, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  \n': 2, ' \n ': 2, ' fo': 1, 'for': 1, 'or ': 1, 'r x': 1, ' x ': 2, 'x i': 1, ' in': 1, 'in ': 1, 'n s': 1, 'ng:': 1, 'g:\n': 1, '  i': 2, ' if': 2, 'if ': 2, 'f x': 1, 'x =': 1, ' ==': 1, '== ': 1, '= c': 1, 'ar:': 1, 'r:\n': 1, 'f f': 1, 'y <': 1, ' < ': 1, '< 9': 1, ' 9:': 1, '9:\n': 1, 'y +': 1, ' +=': 1, '+= ': 1, '= 1': 3, ' 1\n': 3, '1\n ': 3, '  e': 2, ' el': 2, 'els': 2, 'lse': 2, 'se:': 2, 'e:\n': 2, 'lt.': 3, 't.a': 3, '.ap': 3, 'app': 3, 'ppe': 3, 'pen': 3, 'end': 3, 'nd(': 3, 'd(s': 3, 'tr(': 3, 'r(f': 3, '(fr': 3, 'cy)': 3, 'y) ': 3, ') +': 3, ' + ': 3, '+ c': 3, 'ar)': 3, 'r)\n': 3, ')\n ': 3, '= x': 1, ' x\n': 1, 'x\n ': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n ""': 1, ' """"': 1, '"""".': 1, '"".j': 1, '.jo': 1, 'joi': 1, 'oin': 1, 'in(': 1, 'n(r': 1, '(re': 1, 'lt)': 1, 't)\n': 1}"
Subham Das,selection-sort.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'def': 1, 'selectionsort(array):': 1, 'i': 5, '=': 5, '0': 1, 'while': 2, '<': 3, 'len(array)': 1, '-': 1, '1:': 1, 'j': 4, '+': 1, '1': 3, 'pos': 2, 'len(array):': 1, 'if': 1, 'array[j]': 1, 'array[pos]:': 1, '+=': 2, 'array[i],': 1, 'array[pos]': 1, 'array[pos],': 1, 'array[i]': 1, 'return': 1, 'array': 1}","{'def': 1, 'ef ': 1, 'f s': 1, ' se': 1, 'sel': 1, 'ele': 1, 'lec': 1, 'ect': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'onS': 1, 'nSo': 1, 'Sor': 1, 'ort': 1, 'rt(': 1, 't(a': 1, '(ar': 3, 'arr': 10, 'rra': 10, 'ray': 10, 'ay)': 3, 'y):': 2, '):\n': 2, ':\n ': 4, '\n  ': 11, '   ': 70, '  i': 3, ' i ': 4, 'i =': 1, ' = ': 5, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  w': 2, ' wh': 2, 'whi': 2, 'hil': 2, 'ile': 2, 'le ': 2, 'e i': 1, 'i <': 1, ' < ': 3, '< l': 2, ' le': 2, 'len': 2, 'en(': 2, 'n(a': 2, 'y) ': 1, ') -': 1, ' - ': 1, '- 1': 1, ' 1:': 1, '1:\n': 1, '  j': 2, ' j ': 3, 'j =': 1, '= i': 2, 'i +': 2, ' + ': 1, '+ 1': 1, ' 1\n': 3, '1\n ': 2, '  p': 2, ' po': 2, 'pos': 5, 'os ': 2, 's =': 2, ' i\n': 1, 'i\n ': 1, 'e j': 1, 'j <': 1, ' if': 1, 'if ': 1, 'f a': 1, ' ar': 7, 'ay[': 6, 'y[j': 1, '[j]': 1, 'j] ': 1, '] <': 1, '< a': 1, 'y[p': 3, '[po': 3, 'os]': 3, 's]:': 1, ']:\n': 1, '= j': 1, ' j\n': 1, 'j\n ': 1, 'j +': 1, ' +=': 2, '+= ': 2, '= 1': 2, '  a': 1, 'y[i': 2, '[i]': 2, 'i],': 1, '], ': 2, ', a': 2, 's] ': 1, '] =': 1, '= a': 1, 's],': 1, 'i]\n': 1, ']\n ': 1, '1\n\n': 1, '\n\n ': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n a': 1, 'ay\n': 1}"
Subham Das,sorted-square-array.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 3, 'sorted': 1, 'square': 1, 'array': 1, 'o(nlogn)': 1, 'time': 2, 'and': 2, 'o(n)': 2, 'space': 2, 'def': 2, 'sortedsquaredarray(array):': 2, 'squares': 2, '=': 6, '[]': 2, 'for': 1, 'number': 1, 'in': 1, 'array:': 1, 'squares.append(number': 1, '**': 3, '2)': 3, 'return': 2, 'sorted(squares)': 1, 'leftindex': 3, '0': 1, 'rightindex': 2, 'len(array)': 1, '-': 1, '1': 3, 'while': 1, '<=': 1, 'rightindex:': 1, 'leftvalue': 2, 'abs(array[leftindex])': 1, 'rightvalue': 1, 'abs(array[rightindex])': 1, 'if': 1, '>': 1, 'rightvalue:': 1, 'squares.append(leftvalue': 1, '+=': 1, 'else:': 1, 'squares.append(rightvalue': 1, '-=': 1, 'list(reversed(squares))': 1}","{'\n# ': 3, '# S': 1, ' SO': 1, 'SOR': 1, 'ORT': 1, 'RTE': 1, 'TED': 1, 'ED ': 1, 'D S': 1, ' SQ': 1, 'SQU': 1, 'QUA': 1, 'UAR': 1, 'ARE': 1, 'RE ': 1, 'E A': 1, ' AR': 1, 'ARR': 1, 'RRA': 1, 'RAY': 1, 'AY\n': 1, 'Y\n\n': 1, '\n\n#': 2, '# O': 2, ' O(': 3, 'O(N': 3, '(Nl': 1, 'Nlo': 1, 'log': 1, 'ogN': 1, 'gN)': 1, 'N) ': 3, ') t': 2, ' ti': 2, 'tim': 2, 'ime': 2, 'me ': 2, 'e a': 2, ' an': 2, 'and': 2, 'nd ': 2, 'd O': 1, '(N)': 2, ') s': 1, ' sp': 2, 'spa': 2, 'pac': 2, 'ace': 2, 'ce\n': 2, 'e\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f s': 2, ' so': 3, 'sor': 3, 'ort': 3, 'rte': 3, 'ted': 3, 'edS': 2, 'dSq': 2, 'Squ': 2, 'qua': 9, 'uar': 9, 'are': 9, 'red': 2, 'edA': 2, 'dAr': 2, 'Arr': 2, 'rra': 8, 'ray': 8, 'ay(': 2, 'y(a': 2, '(ar': 5, 'arr': 6, 'ay)': 3, 'y):': 2, '):\n': 2, ':\n ': 6, '\n  ': 17, '   ': 86, '  s': 5, ' sq': 5, 'squ': 7, 'res': 7, 'es ': 2, 's =': 2, ' = ': 6, '= [': 2, ' []': 2, '[]\n': 2, ']\n ': 2, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r n': 1, ' nu': 1, 'num': 2, 'umb': 2, 'mbe': 2, 'ber': 2, 'er ': 2, 'r i': 1, ' in': 1, 'in ': 1, 'n a': 1, ' ar': 1, 'ay:': 1, 'y:\n': 1, 'es.': 3, 's.a': 3, '.ap': 3, 'app': 3, 'ppe': 3, 'pen': 3, 'end': 3, 'nd(': 3, 'd(n': 1, '(nu': 1, 'r *': 1, ' **': 3, '** ': 3, '* 2': 3, ' 2)': 3, '2)\n': 3, ')\n ': 5, '  r': 5, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n s': 1, 'ed(': 2, 'd(s': 2, '(sq': 2, 'es)': 2, 's)\n': 1, ')\n\n': 2, '\n\n\n': 1, 'd s': 1, '  l': 3, ' le': 6, 'lef': 7, 'eft': 7, 'ftI': 4, 'tIn': 8, 'Ind': 8, 'nde': 8, 'dex': 8, 'ex ': 5, 'x =': 2, '= 0': 1, ' 0\n': 1, '0\n ': 1, ' ri': 5, 'rig': 7, 'igh': 7, 'ght': 7, 'htI': 4, '= l': 1, 'len': 1, 'en(': 1, 'n(a': 1, 'y) ': 1, ') -': 1, ' - ': 1, '- 1': 1, ' 1\n': 3, '1\n ': 3, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 1, 'x <': 1, ' <=': 1, '<= ': 1, '= r': 1, 'ex:': 1, 'x:\n': 1, 'ftV': 3, 'tVa': 6, 'Val': 6, 'alu': 6, 'lue': 6, 'ue ': 5, 'e =': 2, '= a': 2, ' ab': 2, 'abs': 2, 'bs(': 2, 's(a': 2, 'ay[': 2, 'y[l': 1, '[le': 1, 'ex]': 2, 'x])': 2, '])\n': 2, 'htV': 3, 'y[r': 1, '[ri': 1, '  i': 1, ' if': 1, 'if ': 1, 'f l': 1, 'e >': 1, ' > ': 1, '> r': 1, 'ue:': 1, 'e:\n': 2, 'd(l': 1, '(le': 1, 'e *': 2, 'x +': 1, ' +=': 1, '+= ': 1, '= 1': 2, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'd(r': 1, '(ri': 1, 'x -': 1, ' -=': 1, '-= ': 1, 'n l': 1, ' li': 1, 'lis': 1, 'ist': 1, 'st(': 1, 't(r': 1, '(re': 1, 'rev': 1, 'eve': 1, 'ver': 1, 'ers': 1, 'rse': 1, 'sed': 1, 's))': 1, '))\n': 1}"
Subham Das,tournament-winner.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 3, 'tournament': 1, 'winner': 1, 'o(n+k)': 1, 'time': 2, 'and': 2, 'o(k)': 2, 'space': 2, 'def': 2, 'tournamentwinner(competitions,': 2, 'results):': 2, 'teams': 2, '=': 15, '{}': 1, 'i': 6, '0': 2, 'while': 2, '<': 4, 'len(competitions):': 2, 'hometeam': 5, 'str(competitions[i][0])': 2, 'awayteam': 5, 'str(competitions[i][1])': 2, 'if': 8, 'results[i]': 2, '==': 2, '1:': 2, 'in': 4, 'teams:': 4, 'teams[hometeam]': 5, '+=': 6, '3': 8, 'else:': 6, 'teams[awayteam]': 5, '1': 2, 'return': 2, 'max(teams,': 1, 'key=teams.get)': 1, 'o(n)': 1, '{"""":': 1, '0}': 1, 'currentbestteam': 6, '""""': 1, 'teams[currentbestteam]': 2, 'else': 2}","{'\n# ': 3, '# T': 1, ' TO': 1, 'TOU': 1, 'OUR': 1, 'URN': 1, 'RNA': 1, 'NAM': 1, 'AME': 1, 'MEN': 1, 'ENT': 1, 'NT ': 1, 'T W': 1, ' WI': 1, 'WIN': 1, 'INN': 1, 'NNE': 1, 'NER': 1, 'ER\n': 1, 'R\n\n': 1, '\n\n#': 1, '# O': 2, ' O(': 4, 'O(N': 2, '(N+': 1, 'N+K': 1, '+K)': 1, 'K) ': 3, ') t': 2, ' ti': 2, 'tim': 2, 'ime': 2, 'me ': 2, 'e a': 2, ' an': 2, 'and': 2, 'nd ': 2, 'd O': 2, 'O(K': 2, '(K)': 2, ') s': 2, ' sp': 2, 'spa': 2, 'pac': 2, 'ace': 2, 'ce\n': 2, 'e\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f t': 4, ' to': 2, 'tou': 2, 'our': 2, 'urn': 4, 'rna': 2, 'nam': 2, 'ame': 2, 'men': 2, 'ent': 10, 'ntW': 2, 'tWi': 2, 'Win': 2, 'inn': 2, 'nne': 2, 'ner': 2, 'er(': 2, 'r(c': 6, '(co': 8, 'com': 8, 'omp': 8, 'mpe': 8, 'pet': 8, 'eti': 8, 'tit': 8, 'iti': 8, 'tio': 8, 'ion': 8, 'ons': 8, 'ns,': 2, 's, ': 3, ', r': 2, ' re': 6, 'res': 4, 'esu': 4, 'sul': 4, 'ult': 4, 'lts': 4, 'ts)': 2, 's):': 4, '):\n': 4, ':\n ': 16, '\n  ': 37, '   ': 290, '  t': 10, ' te': 18, 'tea': 20, 'eam': 48, 'ams': 20, 'ms ': 2, 's =': 2, ' = ': 15, '= {': 2, ' {}': 1, '{}\n': 1, '}\n ': 2, '  i': 10, ' i ': 6, 'i =': 2, '= 0': 2, ' 0\n': 2, '0\n ': 2, '  w': 2, ' wh': 2, 'whi': 2, 'hil': 2, 'ile': 2, 'le ': 2, 'e i': 2, 'i <': 2, ' < ': 4, '< l': 2, ' le': 2, 'len': 2, 'en(': 2, 'n(c': 2, 'ns)': 2, '  h': 2, ' ho': 5, 'hom': 10, 'ome': 10, 'meT': 10, 'eTe': 10, 'Tea': 28, 'am ': 13, 'm =': 7, '= s': 4, ' st': 4, 'str': 4, 'tr(': 4, 'ns[': 4, 's[i': 6, '[i]': 6, 'i][': 4, '][0': 2, '[0]': 2, '0])': 2, '])\n': 4, ')\n ': 4, '  a': 2, ' aw': 5, 'awa': 10, 'way': 10, 'ayT': 10, 'yTe': 10, '][1': 2, '[1]': 2, '1])': 2, ' if': 8, 'if ': 8, 'f r': 2, 'ts[': 2, 'i] ': 2, '] =': 6, ' ==': 2, '== ': 2, '= 1': 4, ' 1:': 2, '1:\n': 2, 'f h': 2, 'm i': 6, ' in': 4, 'in ': 4, 'n t': 4, 'ms:': 4, 's:\n': 4, 'ms[': 12, 's[h': 5, '[ho': 5, 'am]': 12, 'm] ': 12, '] +': 4, ' +=': 6, '+= ': 6, '= 3': 8, ' 3\n': 8, '3\n ': 8, '  e': 6, ' el': 8, 'els': 8, 'lse': 8, 'se:': 6, 'e:\n': 6, 'f a': 2, 's[a': 5, '[aw': 5, 'i +': 2, ' 1\n': 2, '1\n ': 2, '  r': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'rn ': 2, 'n m': 1, ' ma': 1, 'max': 1, 'ax(': 1, 'x(t': 1, '(te': 1, 'ms,': 1, ', k': 1, ' ke': 1, 'key': 1, 'ey=': 1, 'y=t': 1, '=te': 1, 'ms.': 1, 's.g': 1, '.ge': 1, 'get': 1, 'et)': 1, 't)\n': 1, ')\n\n': 1, '\n\n\t': 2, '\n\t\t': 2, '\t\t\t': 2, '\t\t\n': 2, '\t\n#': 1, '(N)': 1, 'N) ': 1, ' {""': 1, '{""""': 1, '"""":': 1, '"": ': 1, ': 0': 1, ' 0}': 1, '0}\n': 1, '  c': 3, ' cu': 6, 'cur': 8, 'urr': 8, 'rre': 8, 'ren': 8, 'ntB': 8, 'tBe': 8, 'Bes': 8, 'est': 8, 'stT': 8, 'tTe': 8, '= ""': 1, ' """"': 1, '""""\n': 1, '""\n ': 1, '= h': 1, 's[c': 2, '[cu': 2, '] <': 2, '< t': 2, '] e': 2, 'se ': 2, 'e c': 2, 'am\n': 3, 'm\n ': 2, '= a': 1, 'n c': 1, 'm\n\n': 1}"
Subham Das,twoNumberSum.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 6, 'o(n)': 1, 'time': 2, 'and': 4, 'space': 3, 'def': 1, 'twonumbersum(array,': 1, 'targetsum):': 1, 'write': 1, 'your': 1, 'code': 1, 'here.': 1, 'if': 4, 'len(array)': 1, '<': 1, '2:': 1, 'return': 3, '[]': 2, 'store': 1, '=': 1, 'set()': 1, 'for': 2, 'x': 2, 'in': 2, 'array:': 1, 'targetsum': 2, '-': 2, 'store:': 1, '[x,': 1, 'x]': 1, 'else:': 1, 'store.add(x)': 1, ""__name__=='__main__':"": 1, 'print(twonumbersum([1,3,4,5],': 1, '7))': 1, 'o(n^2)': 1, 'time,': 1, 'o(1)': 2, 'run': 1, 'two': 2, 'loops': 1, 'compare': 1, 'every': 1, 'pair': 1, 'to': 2, 'see': 1, 'it': 1, 'matches.': 1, 'o(n': 1, 'logn)': 1, 'sort': 1, 'the': 3, 'array': 1, 'first': 1, 'then': 1, 'use': 1, 'pointer': 1, 'approach': 1, 'find': 1, 'target': 1, 'sum.': 1}","{'\n# ': 5, '# O': 3, ' O(': 5, 'O(N': 3, '(N)': 1, 'N) ': 2, ') t': 3, ' ti': 3, 'tim': 3, 'ime': 3, 'me ': 2, 'e a': 3, ' an': 4, 'and': 4, 'nd ': 5, 'd s': 1, ' sp': 3, 'spa': 3, 'pac': 3, 'ace': 3, 'ce\n': 3, 'e\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f t': 2, ' tw': 3, 'two': 4, 'woN': 2, 'oNu': 2, 'Num': 2, 'umb': 2, 'mbe': 2, 'ber': 2, 'erS': 2, 'rSu': 2, 'Sum': 5, 'um(': 2, 'm(a': 1, '(ar': 2, 'arr': 4, 'rra': 4, 'ray': 4, 'ay,': 1, 'y, ': 1, ', t': 2, ' ta': 4, 'tar': 4, 'arg': 4, 'rge': 4, 'get': 4, 'etS': 3, 'tSu': 3, 'um)': 1, 'm):': 1, '):\n': 1, ':\n ': 1, '\n  ': 1, '   ': 2, '  #': 1, ' # ': 1, '# W': 1, ' Wr': 1, 'Wri': 1, 'rit': 1, 'ite': 1, 'te ': 1, 'e y': 1, ' yo': 1, 'you': 1, 'our': 1, 'ur ': 1, 'r c': 1, ' co': 2, 'cod': 1, 'ode': 1, 'de ': 1, 'e h': 1, ' he': 1, 'her': 1, 'ere': 1, 're.': 2, 'e.\n': 1, '.\n\t': 1, '\n\ti': 1, '\tif': 2, 'if ': 4, 'f l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(a': 1, 'ay)': 1, 'y) ': 1, ') <': 1, ' < ': 1, '< 2': 1, ' 2:': 1, '2:\n': 1, ':\n\t': 5, '\n\t\t': 6, '\t\tr': 2, '\tre': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n [': 3, ' []': 2, '[]\n': 2, ']\n\t': 2, '\n\ts': 1, '\tst': 2, 'sto': 3, 'tor': 3, 'ore': 3, 're ': 2, 'e =': 1, ' = ': 1, '= s': 1, ' se': 2, 'set': 1, 'et(': 1, 't()': 1, '()\n': 1, ')\n\t': 2, '\n\t\n': 1, '\t\n\t': 2, '\n\tf': 1, '\tfo': 1, 'for': 2, 'or ': 2, 'r x': 1, ' x ': 2, 'x i': 2, ' in': 2, 'in ': 2, 'n a': 1, ' ar': 2, 'ay:': 1, 'y:\n': 1, '\t\ti': 1, 'um ': 2, 'm -': 2, ' - ': 2, '- x': 2, 'n s': 1, ' st': 1, 're:': 1, 'e:\n': 2, '\t\t\t': 3, ' [x': 1, '[x,': 1, 'x, ': 1, ' x]': 1, 'x]\n': 1, '\t\te': 1, '\tel': 1, 'els': 1, 'lse': 1, 'se:': 1, '\t\ts': 1, 'e.a': 1, '.ad': 1, 'add': 1, 'dd(': 1, 'd(x': 1, '(x)': 1, 'x)\n': 1, '\t\t\n': 1, '\n\tr': 1, ']\n\n': 1, '\n\ni': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__=': 1, '_==': 1, ""=='"": 1, ""='_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '\n\tp': 1, '\tpr': 1, 'pri': 1, 'rin': 1, 'int': 2, 'nt(': 1, 't(t': 1, '(tw': 1, 'm([': 1, '([1': 1, '[1,': 1, '1,3': 1, ',3,': 1, '3,4': 1, ',4,': 1, '4,5': 1, ',5]': 1, '5],': 1, '], ': 1, ', 7': 1, ' 7)': 1, '7))': 1, '))\n': 1, ')\n\n': 1, '\n\n#': 2, '(N^': 1, 'N^2': 1, '^2)': 1, '2) ': 1, 'me,': 1, 'e, ': 1, ', O': 1, 'O(1': 2, '(1)': 2, '1) ': 2, ') s': 2, 'e\n#': 2, '# r': 1, ' ru': 1, 'run': 1, 'un ': 1, 'n t': 1, 'wo ': 2, 'o f': 2, ' fo': 1, 'r l': 1, ' lo': 2, 'loo': 1, 'oop': 1, 'ops': 1, 'ps ': 1, 's a': 1, 'd c': 1, 'com': 1, 'omp': 1, 'mpa': 1, 'par': 1, 'are': 1, 'e e': 1, ' ev': 1, 'eve': 1, 'ver': 1, 'ery': 1, 'ry ': 1, 'y p': 1, ' pa': 1, 'pai': 1, 'air': 1, 'ir ': 1, 'r t': 1, ' to': 2, 'to ': 2, 'o s': 1, 'see': 1, 'ee ': 1, 'e i': 1, ' if': 1, 'f i': 1, ' it': 1, 'it ': 1, 't m': 1, ' ma': 1, 'mat': 1, 'atc': 1, 'tch': 1, 'che': 1, 'hes': 1, 'es.': 1, 's.\n': 1, '.\n\n': 1, '(N ': 1, 'N l': 1, 'log': 1, 'ogN': 1, 'gN)': 1, 'd O': 1, '# s': 1, ' so': 1, 'sor': 1, 'ort': 1, 'rt ': 1, 't t': 1, ' th': 4, 'the': 4, 'he ': 3, 'ay ': 1, 'y f': 1, ' fi': 2, 'fir': 1, 'irs': 1, 'rst': 1, 'st ': 1, 't a': 1, 'd t': 2, 'hen': 1, 'en ': 1, 'n u': 1, ' us': 1, 'use': 1, 'se ': 1, 'e t': 3, 'o p': 1, ' po': 1, 'poi': 1, 'oin': 1, 'nte': 1, 'ter': 1, 'er ': 1, 'r a': 1, ' ap': 1, 'app': 1, 'ppr': 1, 'pro': 1, 'roa': 1, 'oac': 1, 'ach': 1, 'ch ': 1, 'h t': 1, 'fin': 1, 'ind': 1, 'et ': 1, 't s': 1, ' su': 1, 'sum': 1, 'um.': 1, 'm.\n': 1}"
Tuhin Mitra,boundary_traversal.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""': 2, 'you': 3, 'are': 1, 'given': 2, 'a': 6, 'matrix': 6, 'of': 9, 'dimensions': 2, 'n1': 2, 'x': 5, 'm1.': 2, 'the': 16, 'task': 2, 'is': 5, 'to': 4, 'perform': 1, 'boundary': 8, 'traversal': 7, 'on': 1, 'in': 12, 'clockwise': 1, 'manner.': 1, 'input:': 2, 'first': 2, 'line': 3, 'input': 1, 'contains': 3, 't': 4, 'denoting': 1, 'number': 1, 'testcases.': 1, 'testcases': 1, 'follow.': 1, 'each': 2, 'testcase': 4, 'two': 1, 'lines': 1, 'input.': 1, 'a,': 1, 'and': 3, 'second': 1, 'n1*m1': 1, 'elements': 1, 'separated': 1, 'by': 3, 'spaces.': 1, 'output:': 2, 'for': 9, 'testcase,': 1, 'new': 1, 'line,': 1, 'print': 3, 'a.': 1, 'your': 2, 'task:': 1, 'this': 1, 'function': 3, 'problem.': 1, 'only': 1, 'need': 1, 'complete': 1, 'boundarytraversal()': 1, 'that': 1, 'takes': 1, 'n1,': 2, 'm1': 1, 'as': 1, 'parameters': 1, 'prints': 1, 'traversal.': 1, 'newline': 1, 'added': 1, 'automatically': 1, 'driver': 3, 'code.': 1, 'expected': 2, 'time': 1, 'complexity:': 1, 'o(n1': 1, '+': 1, 'm1)': 1, 'auxiliary': 1, 'space:': 1, 'o(1)': 1, 'constraints:': 1, '1': 19, '<=': 5, '100': 2, 'm1<=': 1, '0': 3, 'arri': 1, '1000': 1, 'examples:': 1, '4': 17, '2': 13, '3': 15, '5': 7, '6': 3, '7': 3, '8': 6, '9': 7, '10': 5, '11': 5, '12': 7, '13': 4, '14': 4, '15': 4, '16': 4, 'explanation:': 1, 'testcase1:': 1, 'is:': 1, '2:': 2, 'will': 3, 'be': 3, '8.': 1, '3:': 1, '4.': 2, '4:': 1, ""'''"": 2, 'matrix.': 1, 'arguments': 1, ':': 2, 'a(given': 1, 'array),': 1, 'n': 3, '(no': 2, 'rows),': 1, 'm': 4, 'columns).': 1, 'return': 1, 'type:': 1, 'none,': 1, 'have': 1, 'result.': 1, 'def': 1, 'boundarytraversal(a,': 2, 'n,': 3, 'm):': 1, 'pattern': 1, '=': 17, '[': 1, 'min(0,': 2, '-': 6, '1),': 3, '#': 12, 'i': 11, 'min': 2, 'max(0,': 2, 'j': 3, 'max': 2, '1)': 1, ']': 1, 'ind': 6, 'completed': 1, '[]': 3, 'while': 1, '<': 1, 'len(pattern):': 1, 'if': 5, '==': 4, '0:': 1, 'range(m):': 2, 'pattern[ind]': 4, 'y': 4, 'print(a[x][y],': 4, 'end=""': 4, '"")': 4, 'completed.append([x,': 4, 'y])': 4, 'elif': 2, '1:': 1, 'range(1,': 1, 'n):': 1, '[x,': 3, 'y]': 3, 'not': 3, 'completed:': 3, 'range(m': 1, '2,': 2, '-1,': 1, '-1):': 2, 'else:': 1, 'range(n': 1, '0,': 1, '+=': 2, '{': 1, 'code': 2, 'starts': 1, 'initial': 1, 'template': 1, 'python': 1, 'contributed': 1, 'nagendra': 1, 'jha': 1, 'import': 3, 'atexit': 1, 'io': 1, 'sys': 1, '__name__': 1, ""'__main__':"": 1, 'int(input())': 1, 'cases': 1, 'range(t):': 1, 'map(int,': 1, 'input().strip().split())': 1, 'values': 1, 'list(map(int,': 1, 'input().strip().split()))': 1, 'k': 2, 'range(n):': 1, 'row': 1, 'row.append(values[k])': 1, 'a.append(row)': 1, 'm)': 1, 'print()': 1, '}': 1, 'ends': 1}","{'""""""': 2, '""""\n': 2, '""\nY': 1, '\nYo': 2, 'You': 4, 'ou ': 3, 'u a': 1, ' ar': 3, 'are': 1, 're ': 1, 'e g': 1, ' gi': 2, 'giv': 3, 'ive': 6, 'ven': 3, 'en ': 3, 'n a': 3, ' a ': 5, 'a m': 1, ' ma': 13, 'mat': 8, 'atr': 7, 'tri': 10, 'rix': 7, 'ix ': 6, 'x A': 3, ' A ': 1, 'A o': 1, ' of': 8, 'of ': 9, 'f d': 1, ' di': 2, 'dim': 2, 'ime': 3, 'men': 4, 'ens': 2, 'nsi': 2, 'sio': 2, 'ion': 6, 'ons': 3, 'ns ': 5, 's n': 3, ' n1': 5, 'n1 ': 2, '1 x': 1, ' x ': 5, 'x m': 1, ' m1': 4, 'm1.': 2, '1. ': 2, '. T': 5, ' Th': 5, 'The': 7, 'he ': 16, 'e t': 4, ' ta': 3, 'tas': 2, 'ask': 3, 'sk ': 2, 'k i': 2, ' is': 6, 'is ': 6, 's t': 3, ' to': 4, 'to ': 4, 'o p': 3, ' pe': 1, 'per': 1, 'erf': 1, 'rfo': 1, 'for': 9, 'orm': 1, 'rm ': 1, 'm b': 1, ' bo': 6, 'bou': 6, 'oun': 11, 'und': 11, 'nda': 11, 'dar': 11, 'ary': 12, 'ry ': 9, 'y t': 6, ' tr': 5, 'tra': 6, 'rav': 11, 'ave': 12, 'ver': 14, 'ers': 12, 'rsa': 11, 'sal': 11, 'al ': 7, 'l o': 2, ' on': 2, 'on ': 5, 'n t': 1, ' th': 10, 'the': 9, 'e m': 5, 'x i': 2, ' in': 23, 'in ': 12, 'n c': 4, ' cl': 1, 'clo': 1, 'loc': 1, 'ock': 1, 'ckw': 1, 'kwi': 1, 'wis': 1, 'ise': 1, 'se ': 5, 'man': 1, 'ann': 1, 'nne': 1, 'ner': 1, 'er.': 1, 'r.\n': 1, '.\n\n': 5, '\n\nI': 1, '\nIn': 2, 'Inp': 2, 'npu': 7, 'put': 9, 'ut:': 4, 't:\n': 4, ':\nT': 3, '\nTh': 3, 'e f': 4, ' fi': 2, 'fir': 2, 'irs': 2, 'rst': 2, 'st ': 2, 't l': 2, ' li': 6, 'lin': 6, 'ine': 6, 'ne ': 4, 'e o': 1, 'f i': 5, 'inp': 5, 'ut ': 1, 't c': 1, ' co': 14, 'con': 4, 'ont': 4, 'nta': 3, 'tai': 3, 'ain': 5, 'ins': 3, 's T': 1, ' T ': 3, 'T d': 1, ' de': 1, 'den': 1, 'eno': 1, 'not': 4, 'oti': 1, 'tin': 1, 'ing': 1, 'ng ': 1, 'g t': 1, 'e n': 2, ' nu': 1, 'num': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'er ': 4, 'r o': 1, 'f t': 3, ' te': 4, 'tes': 4, 'est': 8, 'stc': 8, 'tca': 8, 'cas': 9, 'ase': 9, 'ses': 3, 'es.': 2, 's. ': 1, 'T t': 1, 'es ': 5, 's f': 1, ' fo': 9, 'fol': 1, 'oll': 1, 'llo': 1, 'low': 1, 'ow.': 2, 'w. ': 1, '. E': 1, ' Ea': 1, 'Eac': 1, 'ach': 2, 'ch ': 2, 'h t': 2, ' tw': 1, 'two': 1, 'wo ': 1, 'o l': 1, 'nes': 1, 's o': 2, 'ut.': 1, 't. ': 1, 'e c': 2, 's d': 1, ' A,': 1, 'A, ': 1, ', n': 7, '1 a': 2, ' an': 3, 'and': 3, 'nd ': 10, 'd m': 2, 'e s': 1, ' se': 2, 'sec': 1, 'eco': 1, 'ond': 1, 'd l': 1, 'n1*': 1, '1*m': 1, '*m1': 1, 'm1 ': 2, '1 e': 1, ' el': 4, 'ele': 1, 'lem': 2, 'eme': 1, 'ent': 2, 'nts': 4, 'ts ': 3, 's s': 1, 'sep': 1, 'epa': 1, 'par': 2, 'ara': 2, 'rat': 1, 'ate': 3, 'ted': 12, 'ed ': 7, 'd b': 2, ' by': 3, 'by ': 3, 'y s': 1, ' sp': 1, 'spa': 1, 'pac': 2, 'ace': 2, 'ces': 1, 's.\n': 1, '\n\nO': 1, '\nOu': 2, 'Out': 2, 'utp': 2, 'tpu': 2, ':\nF': 1, '\nFo': 1, 'For': 1, 'or ': 9, 'r e': 1, ' ea': 1, 'eac': 1, 'se,': 1, 'e, ': 3, ', i': 3, 'a n': 1, ' ne': 3, 'new': 2, 'ew ': 1, 'w l': 1, 'ne,': 2, ', p': 1, ' pr': 10, 'pri': 9, 'rin': 9, 'int': 13, 'nt ': 3, 't t': 3, 'e b': 3, ' A.': 1, 'A.\n': 1, '\n\nY': 1, 'our': 2, 'ur ': 2, 'r T': 1, ' Ta': 1, 'Tas': 1, 'sk:': 1, 'k:\n': 1, 'Thi': 1, 'his': 1, 's i': 2, 's a': 3, 'a f': 1, ' fu': 2, 'fun': 2, 'unc': 3, 'nct': 3, 'cti': 3, 'tio': 4, 'n p': 1, 'pro': 1, 'rob': 1, 'obl': 1, 'ble': 1, 'em.': 1, 'm. ': 1, '. Y': 1, ' Yo': 2, 'u o': 1, 'onl': 1, 'nly': 1, 'ly ': 2, 'y n': 1, 'nee': 1, 'eed': 1, 'd t': 1, 'o c': 1, 'com': 9, 'omp': 10, 'mpl': 12, 'ple': 11, 'let': 9, 'ete': 10, 'te ': 2, 'n b': 1, 'ryT': 3, 'yTr': 3, 'Tra': 6, 'al(': 3, 'l()': 1, '() ': 1, ') t': 1, 'tha': 1, 'hat': 1, 'at ': 1, 'tak': 1, 'ake': 1, 'kes': 1, 'n1,': 2, '1, ': 4, ', m': 8, 'x a': 1, ' as': 1, 'as ': 1, 's p': 1, ' pa': 6, 'ram': 1, 'ame': 2, 'met': 1, 'ter': 7, 'rs ': 1, 'd p': 1, 'al.': 1, 'l. ': 1, 'ewl': 1, 'wli': 1, 'e i': 2, ' ad': 1, 'add': 1, 'dde': 1, 'ded': 1, 'd a': 1, ' au': 1, 'aut': 1, 'uto': 1, 'tom': 1, 'oma': 1, 'ati': 2, 'tic': 1, 'ica': 1, 'cal': 1, 'all': 1, 'lly': 1, 'y b': 1, 'e d': 1, ' dr': 1, 'dri': 1, 'riv': 3, 'r c': 2, 'cod': 1, 'ode': 3, 'de.': 1, 'e.\n': 1, '\n\nE': 3, '\nEx': 4, 'Exp': 3, 'xpe': 2, 'pec': 2, 'ect': 2, 'cte': 2, 'd T': 1, ' Ti': 1, 'Tim': 1, 'me ': 1, 'e C': 1, ' Co': 4, 'Com': 1, 'lex': 1, 'exi': 2, 'xit': 2, 'ity': 1, 'ty:': 1, 'y: ': 1, ': O': 2, ' O(': 2, 'O(N': 1, '(N1': 1, 'N1 ': 1, '1 +': 1, ' + ': 1, '+ M': 1, ' M1': 1, 'M1)': 1, '1)\n': 2, ')\nE': 1, 'd A': 1, ' Au': 1, 'Aux': 1, 'uxi': 1, 'xil': 1, 'ili': 1, 'lia': 1, 'iar': 1, 'y S': 1, ' Sp': 1, 'Spa': 1, 'ce:': 1, 'e: ': 2, 'O(1': 1, '(1)': 1, ')\n\n': 2, '\n\nC': 1, '\nCo': 1, 'Con': 2, 'nst': 1, 'str': 3, 'rai': 1, 'ts:': 1, 's:\n': 3, ':\n1': 3, '\n1 ': 10, '1 <': 2, ' <=': 5, '<= ': 6, '= T': 1, 'T <': 1, '= 1': 6, ' 10': 8, '100': 3, '00\n': 3, '0\n1': 1, '= n': 1, 'm1<': 1, '1<=': 1, '0\n0': 1, '\n0 ': 1, '0 <': 1, '= a': 1, 'arr': 2, 'rri': 1, 'ri ': 1, 'i <': 1, '000': 1, '0\n\n': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'les': 1, 'es:': 1, ':\nI': 1, ':\n4': 1, '\n4\n': 1, '4\n4': 2, '\n4 ': 2, '4 4': 1, ' 4\n': 8, '4\n1': 4, '1 2': 12, ' 2 ': 13, '2 3': 12, ' 3 ': 13, '3 4': 13, ' 4 ': 6, '4 5': 1, ' 5 ': 4, '5 6': 2, ' 6 ': 3, '6 7': 2, ' 7 ': 3, '7 8': 2, ' 8 ': 4, '8 9': 1, ' 9 ': 6, '9 1': 2, '10 ': 5, '0 1': 2, ' 11': 5, '11 ': 5, '1 1': 5, ' 12': 5, '12 ': 6, '2 1': 7, ' 13': 3, '13 ': 4, '3 1': 2, ' 14': 4, '14 ': 4, '4 1': 5, ' 15': 4, '15 ': 4, '5 1': 6, ' 16': 4, '16\n': 2, '6\n3': 1, '\n3 ': 1, '\n12': 2, '0 9': 3, '9 8': 1, '8 7': 1, '7 6': 1, '6 5': 1, '5 4': 1, '4 3': 1, '3 2': 1, ' 1\n': 4, '1\n1': 2, '1 4': 1, '4\nO': 1, '4 8': 4, '8 1': 2, '16 ': 2, '6 1': 2, '3 9': 2, '9 5': 4, ' 5\n': 2, '5\n1': 1, ' 1 ': 5, ' 8\n': 2, '8\n1': 1, '4\n\n': 1, 'xpl': 1, 'pla': 2, 'lan': 1, 'ana': 1, 'nat': 1, 'on:': 1, 'n:\n': 1, '\nTe': 4, 'Tes': 4, 'se1': 1, 'e1:': 1, '1: ': 1, ': T': 1, 'is:': 1, '4\n5': 1, '\n5 ': 1, '8\n9': 1, '\n9 ': 1, '12\n': 1, '2\n1': 1, '\n13': 1, '6\nT': 1, 'l i': 1, 's 1': 1, '5\nT': 1, 'e 2': 1, ' 2:': 2, '2: ': 1, ': B': 3, ' Bo': 5, 'Bou': 5, 'y T': 3, ' Tr': 3, 'l w': 3, ' wi': 3, 'wil': 3, 'ill': 3, 'll ': 3, 'l b': 3, ' be': 3, 'be ': 3, 'e 1': 3, ' 8.': 1, '8.\n': 1, '.\nT': 2, 'e 3': 1, ' 3:': 1, '3: ': 1, ' 4.': 2, '4.\n': 2, 'e 4': 1, ' 4:': 1, '4: ': 1, "".\n'"": 2, ""\n''"": 2, ""'''"": 2, ""''\n"": 2, ""'\n "": 1, '\n  ': 52, '   ': 500, '  Y': 1, 'r t': 1, 't b': 1, 'al\n': 1, 'l\n\t': 1, '\n\to': 1, '\tof': 1, 'f a': 1, 'a g': 1, 'n m': 1, 'ix.': 1, 'x.\n': 1, '\n\n\t': 1, '\n\tF': 1, '\tFu': 1, 'Fun': 1, 'n A': 1, ' Ar': 1, 'Arg': 1, 'rgu': 1, 'gum': 1, 'ume': 1, 's :': 1, ' : ': 2, ': a': 1, ' a(': 1, 'a(g': 1, '(gi': 1, 'rra': 1, 'ray': 1, 'ay)': 1, 'y),': 1, '), ': 5, ' n ': 3, 'n (': 1, ' (n': 2, '(no': 2, 'no ': 2, 'o o': 2, 'f r': 1, ' ro': 3, 'row': 4, 'ows': 1, 'ws)': 1, 's),': 1, ' m ': 4, 'm (': 1, 'f c': 1, 'col': 1, 'olu': 1, 'lum': 1, 'umn': 1, 'mns': 1, 'ns)': 1, 's).': 1, ').\n': 1, '.\n\t': 1, '\n\tR': 1, '\tRe': 1, 'Ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 2, 'n T': 1, ' Ty': 1, 'Typ': 1, 'ype': 1, 'pe:': 1, ': n': 1, ' no': 4, 'non': 1, 'one': 1, ', y': 8, ' yo': 1, 'you': 1, 'u h': 1, ' ha': 1, 'hav': 1, 've ': 1, 'e r': 1, ' re': 1, 'res': 1, 'esu': 1, 'sul': 1, 'ult': 1, 'lt.': 1, 't.\n': 1, ""'\n\n"": 1, '\n\n""': 1, '\n""""': 1, '""\n\n': 1, '\n\n\n': 3, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f B': 1, 'l(a': 2, '(a,': 2, 'a, ': 2, ' n,': 3, 'n, ': 3, ' m)': 2, 'm):': 3, '):\n': 9, ':\n ': 17, '  p': 6, 'pat': 6, 'att': 6, 'tte': 6, 'ern': 6, 'n =': 1, ' = ': 17, '= [': 4, ' [\n': 1, '[\n ': 1, '  m': 4, ' mi': 4, 'min': 4, 'in(': 2, 'n(0': 2, '(0,': 4, '0, ': 5, 'n -': 3, ' - ': 6, '- 1': 4, ' 1)': 4, '1),': 3, ',  ': 3, '  #': 4, ' # ': 4, '# i': 5, ' i ': 7, 'i m': 2, 'in\n': 2, 'n\n ': 2, 'max': 4, 'ax(': 2, 'x(0': 2, 'm -': 3, '# j': 2, ' j ': 3, 'j m': 2, 'ax\n': 2, 'x\n ': 2, '1) ': 1, ')  ': 1, '  ]': 1, ' ]\n': 1, ']\n ': 8, '  i': 6, 'ind': 10, 'd =': 5, '= 0': 3, ' 0\n': 2, '0\n ': 2, '  c': 5, ' []': 3, '[]\n': 3, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'd <': 1, ' < ': 1, '< l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(p': 1, '(pa': 1, 'rn)': 1, 'n):': 3, ' if': 4, 'if ': 7, ' ==': 4, '== ': 4, ' 0:': 1, '0:\n': 1, '  f': 7, 'r i': 5, 'i i': 5, 'n r': 7, ' ra': 7, 'ran': 7, 'ang': 7, 'nge': 7, 'ge(': 7, 'e(m': 3, '(m)': 2, '  x': 4, 'x =': 4, '= p': 4, 'rn[': 4, 'n[i': 4, '[in': 4, 'nd]': 4, 'd]\n': 4, '  y': 4, ' y ': 4, 'y =': 4, '= i': 5, ' i\n': 4, 'i\n ': 4, 'nt(': 6, 't(a': 4, '(a[': 4, 'a[x': 4, '[x]': 4, 'x][': 4, '][y': 4, '[y]': 4, 'y],': 4, '], ': 4, ', e': 4, ' en': 4, 'end': 11, 'nd=': 4, 'd=""': 4, '="" ': 4, '"" ""': 4, ' "")': 4, '"")\n': 4, ')\n ': 14, 'ed.': 4, 'd.a': 4, '.ap': 6, 'app': 6, 'ppe': 6, 'pen': 6, 'nd(': 6, 'd([': 4, '([x': 4, '[x,': 7, 'x, ': 7, ' y]': 7, 'y])': 4, '])\n': 5, '  e': 3, 'eli': 2, 'lif': 2, ' 1:': 1, '1:\n': 1, 'e(1': 1, '(1,': 1, ' n)': 1, 'f [': 3, ' [x': 3, 'y] ': 3, '] n': 3, 'ot ': 3, 't i': 4, 'ed:': 3, 'd:\n': 3, '= 2': 1, '2:\n': 1, '(m ': 1, '- 2': 2, ' 2,': 2, '2, ': 2, ', -': 3, ' -1': 3, '-1,': 1, '-1)': 2, '1):': 2, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, 'e(n': 2, '(n ': 1, ', 0': 1, ' 0,': 1, 'd +': 1, ' +=': 2, '+= ': 2, '1\n\n': 1, '\n\n#': 3, '\n# ': 8, '# {': 1, ' {\n': 1, '{\n#': 1, '#  ': 1, '  D': 1, ' Dr': 2, 'Dri': 2, 'r C': 2, 'Cod': 2, 'de ': 2, 'e S': 1, ' St': 1, 'Sta': 1, 'tar': 1, 'art': 1, 'rts': 1, 'ts\n': 1, 's\n#': 1, '# I': 1, ' In': 1, 'Ini': 1, 'nit': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'l T': 1, ' Te': 1, 'Tem': 1, 'emp': 1, 'lat': 1, 'r P': 1, ' Py': 1, 'Pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'n 3': 1, ' 3\n': 1, '3\n#': 1, '# C': 1, 'ntr': 1, 'rib': 1, 'ibu': 1, 'but': 1, 'ute': 1, 'y :': 1, ': N': 1, ' Na': 1, 'Nag': 1, 'age': 1, 'gen': 1, 'ndr': 1, 'dra': 1, 'ra ': 1, 'a J': 1, ' Jh': 1, 'Jha': 1, 'ha\n': 1, 'a\n\n': 1, ' im': 3, 'imp': 3, 'mpo': 3, 'por': 3, 'ort': 3, 'rt ': 3, 't a': 1, ' at': 1, 'tex': 1, 'it\n': 1, 't\n#': 1, ' io': 1, 'io\n': 1, 'o\n#': 1, 't s': 1, ' sy': 1, 'sys': 1, 'ys\n': 1, 's\n\n': 1, '\n\ni': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  t': 1, ' t ': 1, 't =': 1, 't(i': 1, '(in': 3, 'ut(': 3, 't()': 6, '())': 3, '))\n': 3, ' ca': 1, 'e(t': 1, '(t)': 1, 't):': 1, '  n': 1, 'm =': 1, '= m': 1, 'map': 2, 'ap(': 2, 'p(i': 2, 'nt,': 2, 't, ': 2, '().': 4, ').s': 4, '.st': 2, 'rip': 2, 'ip(': 2, 'p()': 2, '.sp': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'it(': 2, '  v': 1, ' va': 1, 'val': 2, 'alu': 2, 'lue': 2, 'ues': 2, 's =': 1, '= l': 1, 'lis': 1, 'ist': 1, 'st(': 1, 't(m': 1, '(ma': 1, ')))': 1, '  k': 2, ' k ': 2, 'k =': 1, '  a': 2, 'a =': 1, '(n)': 1, '  r': 2, 'ow ': 1, 'w =': 1, 'r j': 1, 'j i': 1, 'w.a': 1, 'd(v': 1, '(va': 1, 'es[': 1, 's[k': 1, '[k]': 1, 'k])': 1, 'k +': 1, '1\n ': 1, ' a.': 1, 'a.a': 1, 'd(r': 1, '(ro': 1, 'ow)': 1, 'w)\n': 1, '  B': 1, 'm)\n': 1, '()\n': 1, '# }': 1, ' } ': 1, '} D': 1, 'e E': 1, ' En': 1, 'End': 1, 'nds': 1}"
Tuhin Mitra,consonantBoder.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""hackerrank': 1, 'problem': 1, 'link:': 1, 'https://www.hackerrank.com/challenges/re-findall-re-finditer/problem""""""': 1, 'import': 1, 're': 1, 'v': 1, '=': 5, '""aeiou""': 1, 'c': 1, '""^aeiou+-""': 1, '#': 1, 'using': 1, '+ve': 1, 'lookahead': 1, 'pattern': 1, '""[%s]([%s]{2,})(?=[%s])""': 1, '%': 1, '(c,v,c)': 1, 'print(""final': 1, 'pattern:"",': 1, 'pattern)': 1, 'if': 2, '__name__': 1, '==': 1, ""'__main__':"": 1, 's': 1, 'input()': 1, 're.search(pattern,': 1, 's,': 2, 're.i):': 1, 'res': 1, 're.findall(pattern,': 1, 'flags=re.ignorecase)': 1, 'print(""\\n"".join(res))': 1, 'else:': 1, 'print(-1)': 1}","{'""""""': 2, '""""h': 1, '""ha': 1, 'hac': 2, 'ack': 2, 'cke': 2, 'ker': 2, 'err': 2, 'rra': 2, 'ran': 2, 'ank': 2, 'nk ': 1, 'k p': 1, ' pr': 3, 'pro': 2, 'rob': 2, 'obl': 2, 'ble': 2, 'lem': 2, 'em ': 1, 'm l': 1, ' li': 1, 'lin': 1, 'ink': 1, 'nk:': 1, 'k: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.h': 1, '.ha': 1, 'nk.': 1, 'k.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/c': 1, '/ch': 1, 'cha': 1, 'hal': 1, 'all': 3, 'lle': 1, 'len': 1, 'eng': 1, 'nge': 1, 'ges': 1, 'es/': 1, 's/r': 1, '/re': 1, 're-': 2, 'e-f': 2, '-fi': 2, 'fin': 4, 'ind': 3, 'nda': 2, 'dal': 2, 'll-': 1, 'l-r': 1, '-re': 1, 'ndi': 1, 'dit': 1, 'ite': 1, 'ter': 6, 'er/': 1, 'r/p': 1, '/pr': 1, 'em""': 1, 'm""""': 1, '""""\n': 1, '""\n\n': 2, '\n\ni': 2, '\nim': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't r': 1, ' re': 5, 're\n': 1, 'e\n\n': 1, '\n\nv': 1, '\nv ': 1, 'v =': 1, ' = ': 5, '= ""': 3, ' ""a': 1, '""ae': 1, 'aei': 2, 'eio': 2, 'iou': 2, 'ou""': 1, 'u""\n': 1, '""\nc': 1, '\nc ': 1, 'c =': 1, ' ""^': 1, '""^a': 1, '^ae': 1, 'ou+': 1, 'u+-': 1, '+-""': 1, '-""\n': 1, '\n\n#': 1, '\n# ': 1, '# u': 1, ' us': 1, 'usi': 1, 'sin': 1, 'ing': 1, 'ng ': 1, 'g +': 1, ' +v': 1, '+ve': 1, 've ': 1, 'e l': 1, ' lo': 1, 'loo': 1, 'ook': 1, 'oka': 1, 'kah': 1, 'ahe': 1, 'hea': 1, 'ead': 1, 'ad\n': 1, 'd\np': 1, '\npa': 1, 'pat': 5, 'att': 5, 'tte': 5, 'ern': 5, 'rn ': 1, 'n =': 1, ' ""[': 1, '""[%': 1, '[%s': 3, '%s]': 3, 's](': 1, ']([': 1, '([%': 1, 's]{': 1, ']{2': 1, '{2,': 1, '2,}': 1, ',})': 1, '})(': 1, ')(?': 1, '(?=': 1, '?=[': 1, '=[%': 1, 's])': 1, '])""': 1, ')"" ': 1, '"" %': 1, ' % ': 1, '% (': 1, ' (c': 1, '(c,': 1, 'c,v': 1, ',v,': 1, 'v,c': 1, ',c)': 1, 'c)\n': 1, ')\np': 1, '\npr': 1, 'pri': 3, 'rin': 3, 'int': 3, 'nt(': 3, 't(""': 2, '(""f': 1, '""fi': 1, 'ina': 1, 'nal': 1, 'al ': 1, 'l p': 1, ' pa': 2, 'rn:': 1, 'n:""': 1, ':"",': 1, '"", ': 1, ', p': 1, 'rn)': 1, 'n)\n': 1, ')\n\n': 1, '\nif': 1, 'if ': 2, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, ':\n ': 3, '\n  ': 6, '   ': 24, '  s': 1, ' s ': 1, 's =': 2, '= i': 1, ' in': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut(': 1, 't()': 1, '()\n': 1, ')\n ': 3, '  i': 1, ' if': 1, 'f r': 1, 're.': 4, 'e.s': 1, '.se': 1, 'sea': 1, 'ear': 1, 'arc': 1, 'rch': 1, 'ch(': 1, 'h(p': 1, '(pa': 2, 'rn,': 2, 'n, ': 2, ', s': 2, ' s,': 2, 's, ': 2, ', r': 1, 'e.I': 2, '.I)': 1, 'I):': 1, '):\n': 1, '  r': 1, 'res': 2, 'es ': 1, '= r': 1, 'e.f': 1, '.fi': 1, 'll(': 1, 'l(p': 1, ', f': 1, ' fl': 1, 'fla': 1, 'lag': 1, 'ags': 1, 'gs=': 1, 's=r': 1, '=re': 1, '.IG': 1, 'IGN': 1, 'GNO': 1, 'NOR': 1, 'ORE': 1, 'REC': 1, 'ECA': 1, 'CAS': 1, 'ASE': 1, 'SE)': 1, 'E)\n': 1, '  p': 2, '(""\\': 1, '""\\n': 1, '\\n""': 1, 'n"".': 1, '"".j': 1, '.jo': 1, 'joi': 1, 'oin': 1, 'in(': 1, 'n(r': 1, '(re': 1, 'es)': 1, 's))': 1, '))\n': 1, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, 't(-': 1, '(-1': 1, '-1)': 1}"
Tuhin Mitra,counting-sort.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'def': 1, 'countingsort(arr):': 1, '""""""return': 1, 'the': 2, 'number': 1, 'of': 1, 'times': 1, 'each': 1, 'element': 1, 'appears': 1, 'in': 2, 'array""""""': 1, 'max_val': 3, '=': 6, 'max(arr)': 1, 'size_of_array': 2, '100': 3, 'if': 2, '<=': 1, 'else': 1, '#': 2, 'as': 2, 'given': 1, 'constraint': 1, 'array': 1, 'must': 1, 'have': 1, 'least': 1, 'elements': 1, 'frequency_array': 2, '[0]': 1, '*': 1, 'for': 2, 'i': 1, 'arr:': 1, 'frequency_array[i]': 1, '+=': 1, '1': 1, 'return': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'n': 1, 'int(input().strip())': 1, 'arr': 1, 'list(map(int,': 1, 'input().rstrip().split()))': 1, 'result': 1, 'countingsort(arr)': 1, '-----------': 1, 'self': 1, 'validations': 1, '-------------': 1, 'with': 1, 'open(""../output.txt"",': 1, '""w"")': 1, 'f:': 1, 'f.write(""': 1, '"".join(map(str,': 1, 'result)))': 1}","{'def': 1, 'ef ': 1, 'f c': 1, ' co': 3, 'cou': 2, 'oun': 2, 'unt': 2, 'nti': 2, 'tin': 2, 'ing': 2, 'ngS': 2, 'gSo': 2, 'Sor': 2, 'ort': 2, 'rt(': 2, 't(a': 2, '(ar': 3, 'arr': 12, 'rr)': 3, 'r):': 1, '):\n': 1, ':\n ': 4, '\n  ': 13, '   ': 34, '  ""': 1, ' """"': 1, '""""""': 2, '""""r': 1, '""re': 1, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n t': 2, ' th': 2, 'the': 2, 'he ': 2, 'e n': 1, ' nu': 1, 'num': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'er ': 1, 'r o': 1, ' of': 1, 'of ': 1, 'f t': 1, ' ti': 1, 'tim': 1, 'ime': 1, 'mes': 1, 'es ': 1, 's e': 1, ' ea': 1, 'eac': 1, 'ach': 1, 'ch ': 1, 'h e': 1, ' el': 3, 'ele': 2, 'lem': 2, 'eme': 2, 'men': 2, 'ent': 2, 'nt ': 2, 't a': 2, ' ap': 1, 'app': 1, 'ppe': 1, 'pea': 1, 'ear': 1, 'ars': 1, 'rs ': 1, 's i': 1, ' in': 4, 'in ': 2, 'e a': 1, ' ar': 4, 'rra': 7, 'ray': 7, 'ay""': 1, 'y""""': 1, '""""\n': 1, '""\n ': 1, '  m': 1, ' ma': 4, 'max': 4, 'ax_': 3, 'x_v': 3, '_va': 3, 'val': 4, 'al ': 3, 'l =': 1, ' = ': 6, '= m': 1, 'ax(': 1, 'x(a': 1, 'r)\n': 2, ')\n ': 1, '  s': 1, ' si': 2, 'siz': 2, 'ize': 2, 'ze_': 2, 'e_o': 2, '_of': 2, 'of_': 2, 'f_a': 2, '_ar': 5, 'ay ': 3, 'y =': 2, '= 1': 3, ' 10': 3, '100': 3, '00 ': 3, '0 i': 1, ' if': 1, 'if ': 2, 'f m': 1, 'l <': 1, ' <=': 1, '<= ': 1, '0 e': 2, 'els': 1, 'lse': 1, 'se ': 1, 'e m': 1, 'l  ': 1, '  #': 2, ' # ': 2, '# a': 1, ' as': 2, 'as ': 2, 's g': 1, ' gi': 1, 'giv': 1, 'ive': 1, 'ven': 1, 'en ': 1, 'n c': 1, 'con': 1, 'ons': 2, 'nst': 1, 'str': 4, 'tra': 1, 'rai': 1, 'ain': 2, 'int': 3, 'y m': 1, ' mu': 1, 'mus': 1, 'ust': 1, 'st ': 2, 't h': 1, ' ha': 1, 'hav': 1, 'ave': 1, 've ': 1, 'e l': 1, ' le': 1, 'lea': 1, 'eas': 1, 'ast': 1, 't 1': 1, 'nts': 1, 'ts\n': 1, 's\n ': 1, '  f': 4, ' fr': 3, 'fre': 3, 'req': 3, 'equ': 3, 'que': 3, 'uen': 3, 'enc': 3, 'ncy': 3, 'cy_': 3, 'y_a': 3, '= [': 1, ' [0': 1, '[0]': 1, '0] ': 1, '] *': 1, ' * ': 1, '* s': 1, 'ay\n': 2, 'y\n ': 1, ' fo': 2, 'for': 2, 'or ': 2, 'r i': 1, ' i ': 1, 'i i': 1, 'n a': 1, 'rr:': 1, 'r:\n': 1, 'ay[': 1, 'y[i': 1, '[i]': 1, 'i] ': 1, '] +': 1, ' +=': 1, '+= ': 1, ' 1\n': 1, '1\n\n': 1, '\n\n ': 4, '  r': 2, ' re': 3, 'n f': 1, 'y\n\n': 1, '\n\n\n': 1, '\n\ni': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  n': 1, ' n ': 1, 'n =': 1, '= i': 1, 'nt(': 1, 't(i': 1, '(in': 2, 'inp': 2, 'npu': 2, 'put': 3, 'ut(': 2, 't()': 3, '().': 3, ').s': 2, '.st': 1, 'tri': 2, 'rip': 2, 'ip(': 2, 'p()': 2, '())': 2, '))\n': 2, ')\n\n': 3, '  a': 1, 'rr ': 1, 'r =': 1, '= l': 1, ' li': 1, 'lis': 1, 'ist': 1, 'st(': 1, 't(m': 1, '(ma': 2, 'map': 2, 'ap(': 2, 'p(i': 1, 'nt,': 1, 't, ': 1, ', i': 1, ').r': 1, '.rs': 1, 'rst': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, ')))': 2, 'res': 2, 'esu': 2, 'sul': 2, 'ult': 2, 'lt ': 1, 't =': 1, '= c': 1, '# -': 1, ' --': 2, '---': 20, '-- ': 1, '- f': 1, 'r s': 1, ' se': 1, 'sel': 1, 'elf': 1, 'lf ': 1, 'f v': 1, ' va': 1, 'ali': 1, 'lid': 1, 'ida': 1, 'dat': 1, 'ati': 1, 'tio': 1, 'ion': 1, 'ns ': 1, 's -': 1, '--\n': 1, '-\n ': 1, '  w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'th ': 1, 'h o': 1, ' op': 1, 'ope': 1, 'pen': 1, 'en(': 1, 'n(""': 1, '("".': 1, '""..': 1, '../': 1, './o': 1, '/ou': 1, 'out': 1, 'utp': 1, 'tpu': 1, 'ut.': 1, 't.t': 1, '.tx': 1, 'txt': 1, 'xt""': 1, 't"",': 1, '"", ': 1, ', ""': 1, ' ""w': 1, '""w""': 1, 'w"")': 1, '"") ': 1, ') a': 1, 's f': 1, ' f:': 1, 'f:\n': 1, ' f.': 1, 'f.w': 1, '.wr': 1, 'wri': 1, 'rit': 1, 'ite': 1, 'te(': 1, 'e(""': 1, '("" ': 1, '"" ""': 1, ' "".': 1, '"".j': 1, '.jo': 1, 'joi': 1, 'oin': 1, 'in(': 1, 'n(m': 1, 'p(s': 1, '(st': 1, 'tr,': 1, 'r, ': 1, ', r': 1, 'lt)': 1, 't))': 1}"
Tuhin Mitra,Date_time_scraper.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 12, 'extracting': 1, 'time': 6, 'and': 4, 'date': 5, 'from': 6, 'the': 7, 'below': 1, 'website': 3, 'https://www.timeanddate.com/': 2, '""""""python': 1, 'program': 1, 'to': 3, 'quickly': 1, 'fetch': 1, 'copy': 2, 'it': 1, 'clipboard""""""': 1, 'bs4': 1, 'import': 6, 'beautifulsoup': 1, 'requests': 1, 're': 1, '_datetime': 1, 'datetime': 1, 'pyperclip': 1, 'as': 1, 'pc': 1, 'def': 2, 'filter_date(date_string):': 1, 'match_string': 1, '=': 27, 're.match(f""^(\\s*),': 1, '(\\d*)': 2, '(\\d*)"",': 1, 'date_string)': 1, 'week_day': 1, 'match_string.group(1)': 1, 'date2': 1, 'match_string.group(2)': 1, 'month': 1, 'match_string.group(3)': 1, 'year': 3, 'match_string.group(4)': 1, 'return': 2, 'week_day,': 2, 'date2,': 1, 'month,': 1, 'filter_time(time_string):': 1, 'y_time': 1, ""re.match('(\\d*):(\\d*):(\\d*)',"": 1, 'time_string)': 1, 'hr': 1, 'y_time.group(1)': 1, 'minute': 1, 'y_time.group(2)': 1, 'sec': 3, 'y_time.group(3)': 1, 'hr,': 2, 'minute,': 2, 'if': 2, '__name__': 1, '==': 1, ""'__main__':"": 1, 'country': 1, ""'india'"": 1, ""input('enter"": 2, 'your': 2, ""country:')"": 1, 'city': 1, ""'kolkata'"": 1, ""city:')"": 1, 'url': 2, ""'https://www.timeanddate.com/worldclock/india/kolkata'"": 1, ""f'https://www.timeanddate.com/worldclock/{country}/{city}'"": 1, 'headers': 1, '{""accept-language"":': 1, '""en-us,en;q=0.5""}': 1, 'r': 1, 'requests.get(url,': 1, 'headers=headers)': 1, ""print(f'status"": 1, 'code:': 1, ""{r.status_code}')"": 1, 'permission': 1, 'status': 1, 'code,': 1, '200': 1, '-': 1, 'allowed,': 1, 'other': 1, 'wise': 1, 'not': 1, 'allowed': 1, 'data': 1, 'r.content': 1, 'soup': 1, 'beautifulsoup(data,': 1, '""html5lib"")': 1, 'print(soup.prettify())': 1, ""soup.find_all('span',"": 1, '{""class"":': 1, '""h1""})[0].text': 1, 'gets': 2, 'current': 2, 'local': 4, 'given': 2, ""print(f'current"": 2, 'time:': 1, ""{time}')"": 1, 'soup.find_all(""span"",': 1, '{""id"":': 1, '""ctdat""})[0].text': 1, 'date:': 1, ""{date}')"": 1, 'day,': 1, 'mnth,': 1, 'filter_date(date)': 1, 'filter_time(time)': 1, ""print(f'{day},{mnth},{year},{hr},{minute},{sec}')"": 1, 'week_days': 1, ""['sunday',"": 1, ""'monday',"": 1, ""'tuesday',"": 1, ""'wednesday',"": 1, ""'thursday',"": 1, ""'friday',"": 1, ""'saturday']"": 1, 'months': 1, ""['jan',"": 1, ""'feb',"": 1, ""'mar',"": 1, ""'apr',"": 1, ""'may',"": 1, ""'jun',"": 1, ""'jul',"": 1, ""'aug',"": 1, ""'sept',"": 1, ""'oct',"": 1, ""'nov',"": 1, ""'dec']"": 1, 'for': 1, 'i': 1, 'in': 1, 'months:': 1, 'mnth.lower().startswith(i):': 1, 'mnth': 1, 'months.index(i)': 1, '+': 3, '1': 2, 'break': 1, ""print(f'month={mnth}')"": 1, 'week_day_no': 1, 'week_days.index(week_day.lower())': 1, 'time_tuple': 1, '(int(year),': 1, 'int(mnth),': 1, 'week_day_no,': 1, 'int(day),': 1, 'int(hr),': 1, 'int(minute),': 1, 'int(sec),': 1, '0)': 1, 'just': 1, 'clip': 1, 'board': 1, 'pc.copy(time': 1, ""'.0')"": 1, 'print(""time': 1, 'copied!"")': 1}","{'# e': 1, ' ex': 1, 'ext': 3, 'xtr': 1, 'tra': 1, 'rac': 1, 'act': 1, 'cti': 1, 'tin': 1, 'ing': 10, 'ng ': 2, 'g t': 1, ' ti': 9, 'tim': 25, 'ime': 26, 'me ': 9, 'e a': 3, ' an': 4, 'and': 8, 'nd ': 4, 'd d': 1, ' da': 12, 'dat': 23, 'ate': 20, 'te ': 6, 'e f': 4, ' fr': 4, 'fro': 6, 'rom': 6, 'om ': 6, 'm t': 4, ' th': 7, 'the': 8, 'he ': 7, 'e b': 1, ' be': 1, 'bel': 1, 'elo': 1, 'low': 5, 'ow ': 1, 'w w': 1, ' we': 10, 'web': 3, 'ebs': 3, 'bsi': 3, 'sit': 3, 'ite': 3, 'te\n': 3, 'e\n#': 1, '\n# ': 1, '# h': 1, ' ht': 2, 'htt': 4, 'ttp': 4, 'tps': 4, 'ps:': 4, 's:/': 4, '://': 4, '//w': 4, '/ww': 4, 'www': 4, 'ww.': 4, 'w.t': 4, '.ti': 4, 'mea': 4, 'ean': 4, 'ndd': 4, 'dda': 4, 'te.': 4, 'e.c': 4, '.co': 6, 'com': 4, 'om/': 4, 'm/\n': 1, '/\n\n': 1, '\n\n""': 1, '\n""""': 1, '""""""': 2, '""""P': 1, '""Py': 1, 'Pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on ': 2, 'n P': 1, ' Pr': 1, 'Pro': 1, 'rog': 1, 'ogr': 1, 'gra': 1, 'ram': 1, 'am ': 1, ' to': 3, 'to ': 3, 'o Q': 1, ' Qu': 1, 'Qui': 1, 'uic': 1, 'ick': 1, 'ckl': 1, 'kly': 1, 'ly ': 1, 'y f': 1, ' fe': 1, 'fet': 1, 'etc': 1, 'tch': 8, 'ch ': 1, 'h d': 1, 'd t': 2, 'm h': 1, 'm/ ': 1, '/ a': 1, 'd c': 1, ' co': 6, 'cop': 4, 'opy': 3, 'py ': 2, 'y i': 1, ' it': 1, 'it ': 1, 't t': 2, 'o c': 1, ' cl': 2, 'cli': 3, 'lip': 3, 'ipb': 1, 'pbo': 1, 'boa': 2, 'oar': 2, 'ard': 2, 'rd""': 1, 'd""""': 1, '""""\n': 1, '""\nf': 1, '\nfr': 2, 'm b': 1, ' bs': 1, 'bs4': 1, 's4 ': 1, '4 i': 1, ' im': 2, 'imp': 6, 'mpo': 6, 'por': 6, 'ort': 6, 'rt ': 6, 't B': 1, ' Be': 2, 'Bea': 2, 'eau': 2, 'aut': 2, 'uti': 2, 'tif': 3, 'ifu': 2, 'ful': 2, 'ulS': 2, 'lSo': 2, 'Sou': 2, 'oup': 13, 'up\n': 1, 'p\ni': 1, '\nim': 4, 't r': 2, ' re': 7, 'req': 2, 'equ': 2, 'que': 2, 'ues': 3, 'est': 2, 'sts': 2, 'ts\n': 1, 's\ni': 1, 're\n': 1, 'e\ni': 2, 'me\n': 2, 'e\nf': 1, 'm _': 1, ' _d': 1, '_da': 11, 'tet': 2, 'eti': 2, 'e i': 1, 't d': 1, 't p': 1, ' py': 1, 'pyp': 1, 'ype': 1, 'per': 2, 'erc': 1, 'rcl': 1, 'ip ': 2, 'p a': 1, ' as': 1, 'as ': 1, 's p': 1, ' pc': 2, 'pc\n': 1, 'c\n\n': 2, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f f': 2, ' fi': 4, 'fil': 4, 'ilt': 4, 'lte': 4, 'ter': 6, 'er_': 4, 'r_d': 2, 'te(': 2, 'e(d': 2, '(da': 4, 'te_': 2, 'e_s': 4, '_st': 9, 'str': 9, 'tri': 9, 'rin': 16, 'ng)': 4, 'g):': 2, '):\n': 3, ':\n ': 5, '\n  ': 40, '   ': 104, '  M': 1, ' Ma': 5, 'Mat': 5, 'atc': 7, 'ch_': 5, 'h_s': 5, 'g =': 1, ' = ': 27, '= r': 4, 're.': 2, 'e.m': 2, '.ma': 2, 'mat': 2, 'ch(': 2, 'h(f': 1, '(f""': 1, 'f""^': 1, '""^(': 1, '^(\\': 1, '(\\S': 1, '\\S*': 1, 'S*)': 1, '*),': 1, '), ': 7, ', (': 1, ' (\\': 3, '(\\d': 5, '\\d*': 5, 'd*)': 5, '*) ': 2, ') (': 2, '(\\D': 1, '\\D*': 1, 'D*)': 1, '*)""': 1, ')"",': 1, '"", ': 2, ', d': 3, 'g)\n': 2, ')\n ': 22, '  w': 4, 'wee': 8, 'eek': 8, 'ek_': 8, 'k_d': 8, 'day': 18, 'ay ': 1, 'y =': 3, '= M': 4, 'ng.': 4, 'g.g': 4, '.gr': 7, 'gro': 7, 'rou': 7, 'up(': 8, 'p(1': 2, '(1)': 2, '1)\n': 2, '  d': 3, 'te2': 2, 'e2 ': 1, '2 =': 1, 'p(2': 2, '(2)': 2, '2)\n': 2, '  m': 4, ' mo': 5, 'mon': 7, 'ont': 7, 'nth': 12, 'th ': 2, 'h =': 2, 'p(3': 2, '(3)': 2, '3)\n': 2, '  y': 2, ' ye': 3, 'yea': 5, 'ear': 5, 'ar ': 2, 'r =': 4, 'p(4': 1, '(4)': 1, '4)\n': 1, '  r': 3, 'ret': 3, 'etu': 2, 'tur': 3, 'urn': 2, 'rn ': 2, 'n w': 3, 'ay,': 3, 'y, ': 3, 'e2,': 1, '2, ': 1, ', m': 4, 'th,': 2, 'h, ': 2, ', y': 2, 'ar\n': 1, 'r\n\n': 1, '\n\n\n': 2, 'r_t': 2, '_ti': 6, 'me(': 2, 'e(t': 2, '(ti': 3, 'me_': 4, ' y_': 4, 'y_t': 4, 'e =': 6, ""h('"": 1, ""('("": 1, ""'(\\"": 1, '*):': 2, '):(': 2, ':(\\': 2, ""*)'"": 1, "")',"": 1, ""', "": 19, ', t': 1, '  h': 3, ' hr': 3, 'hr ': 1, '= y': 3, 'me.': 3, 'e.g': 3, ' mi': 3, 'min': 5, 'inu': 5, 'nut': 5, 'ute': 5, '  s': 2, ' se': 3, 'sec': 5, 'ec ': 2, 'c =': 2, 'n h': 1, 'hr,': 2, 'r, ': 2, 'te,': 2, 'e, ': 3, ', s': 2, 'ec\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 2, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 4, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  c': 2, 'cou': 3, 'oun': 3, 'unt': 3, 'ntr': 3, 'try': 3, 'ry ': 1, "" 'i"": 1, ""'in"": 1, 'ind': 6, 'ndi': 2, 'dia': 2, ""ia'"": 1, ""a' "": 2, ""'  "": 2, '  #': 10, ' # ': 10, '# i': 2, ' in': 8, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, ""t('"": 2, ""('E"": 2, ""'En"": 2, 'Ent': 2, 'nte': 3, 'er ': 3, 'r y': 2, ' yo': 2, 'you': 2, 'our': 2, 'ur ': 2, 'r c': 2, 'ry:': 1, ""y:'"": 2, "":')"": 2, ""')\n"": 7, ' ci': 2, 'cit': 3, 'ity': 3, 'ty ': 1, "" 'k"": 1, ""'ko"": 1, 'kol': 2, 'olk': 2, 'lka': 2, 'kat': 2, 'ata': 4, ""ta'"": 2, 'ty:': 1, '# u': 1, ' ur': 2, 'url': 3, 'rl ': 2, 'l =': 2, "" 'h"": 1, ""'ht"": 2, 'm/w': 2, '/wo': 2, 'wor': 2, 'orl': 2, 'rld': 2, 'ldc': 2, 'dcl': 2, 'clo': 2, 'loc': 6, 'ock': 2, 'ck/': 2, 'k/i': 1, '/in': 1, 'ia/': 1, 'a/k': 1, '/ko': 1, ""a'\n"": 1, ""'\n "": 2, '  u': 1, '= f': 3, "" f'"": 1, ""f'h"": 1, 'k/{': 1, '/{c': 2, '{co': 1, 'ry}': 1, 'y}/': 1, '}/{': 1, '{ci': 1, 'ty}': 1, ""y}'"": 1, ""}'\n"": 1, ' he': 2, 'hea': 3, 'ead': 3, 'ade': 3, 'der': 3, 'ers': 3, 'rs ': 1, 's =': 3, '= {': 1, ' {""': 3, '{""A': 1, '""Ac': 1, 'Acc': 1, 'cce': 1, 'cep': 1, 'ept': 2, 'pt-': 1, 't-L': 1, '-La': 1, 'Lan': 1, 'ang': 1, 'ngu': 1, 'gua': 1, 'uag': 1, 'age': 1, 'ge""': 1, 'e"":': 1, '"": ': 3, ': ""': 3, ' ""e': 1, '""en': 1, 'en-': 1, 'n-U': 1, '-US': 1, 'US,': 1, 'S,e': 1, ',en': 1, 'en;': 1, 'n;q': 1, ';q=': 1, 'q=0': 1, '=0.': 1, '0.5': 1, '.5""': 1, '5""}': 1, '""}\n': 1, '}\n ': 1, ' r ': 1, 'ts.': 1, 's.g': 1, '.ge': 1, 'get': 3, 'et(': 1, 't(u': 1, '(ur': 1, 'rl,': 1, 'l, ': 1, ', h': 1, 'rs=': 1, 's=h': 1, '=he': 1, 'rs)': 1, 's)\n': 1, '  p': 7, ' pr': 7, 'pri': 7, 'int': 13, 'nt(': 13, 't(f': 5, ""(f'"": 5, ""f'S"": 1, ""'St"": 1, 'Sta': 1, 'tat': 3, 'atu': 4, 'tus': 3, 'us ': 2, 's C': 1, ' Co': 1, 'Cod': 1, 'ode': 3, 'de:': 1, 'e: ': 3, ': {': 3, ' {r': 1, '{r.': 1, 'r.s': 1, '.st': 2, 'sta': 3, 'us_': 1, 's_c': 1, '_co': 1, 'cod': 2, 'de}': 1, ""e}'"": 3, ""}')"": 5, ""') "": 1, ')  ': 1, '# p': 2, ' pe': 1, 'erm': 1, 'rmi': 1, 'mis': 1, 'iss': 1, 'ssi': 1, 'sio': 1, 'ion': 1, 'n s': 1, ' st': 1, 's c': 1, 'de,': 1, ', 2': 1, ' 20': 1, '200': 1, '00 ': 1, '0 -': 1, ' - ': 1, '- a': 1, ' al': 2, 'all': 4, 'llo': 2, 'owe': 4, 'wed': 3, 'ed,': 1, 'd, ': 1, ', o': 1, ' ot': 1, 'oth': 1, 'her': 1, 'r w': 1, ' wi': 1, 'wis': 1, 'ise': 1, 'se ': 1, '= n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't a': 1, 'ed\n': 1, 'd\n ': 2, 'ta ': 1, 'a =': 1, ' r.': 1, 'r.c': 1, 'con': 1, 'ten': 1, 'ent': 5, 'nt\n': 1, 't\n ': 1, ' so': 3, 'sou': 4, 'up ': 1, 'p =': 1, '= B': 1, 'p(d': 1, 'ta,': 1, 'a, ': 1, ', ""': 1, ' ""h': 2, '""ht': 1, 'htm': 1, 'tml': 1, 'ml5': 1, 'l5l': 1, '5li': 1, 'lib': 1, 'ib""': 1, 'b"")': 1, '"")\n': 1, 't(s': 2, '(so': 1, 'up.': 3, 'p.p': 1, '.pr': 1, 'pre': 1, 'ett': 1, 'tti': 1, 'ify': 1, 'fy(': 1, 'y()': 1, '())': 2, '))\n': 1, '  t': 2, '= s': 2, 'p.f': 2, '.fi': 2, 'fin': 2, 'nd_': 2, 'd_a': 2, '_al': 2, 'll(': 2, ""l('"": 1, ""('s"": 1, ""'sp"": 1, 'spa': 2, 'pan': 2, ""an'"": 2, ""n',"": 3, ', {': 2, '{""c': 1, '""cl': 1, 'cla': 1, 'las': 1, 'ass': 1, 'ss""': 1, 's"":': 1, '""h1': 1, 'h1""': 1, '1""}': 1, '""})': 2, '})[': 2, ')[0': 2, '[0]': 2, '0].': 2, '].t': 2, '.te': 2, 'tex': 2, 'xt ': 2, 't  ': 2, '# g': 2, ' ge': 2, 'ets': 2, 'ts ': 2, 's t': 2, 'e c': 4, ' cu': 2, 'cur': 2, 'urr': 4, 'rre': 4, 'ren': 4, 'nt ': 4, 't l': 4, ' lo': 4, 'oca': 4, 'cal': 4, 'al ': 4, 'l t': 2, 'e g': 2, ' gi': 2, 'giv': 2, 'ive': 2, 'ven': 2, 'en ': 2, 'e\n ': 2, ""f'C"": 2, ""'Cu"": 2, 'Cur': 2, 'me:': 1, ' {t': 1, '{ti': 1, 'me}': 1, 'l(""': 1, '(""s': 1, '""sp': 1, 'an""': 1, 'n"",': 1, '{""i': 1, '""id': 1, 'id""': 1, 'd"":': 1, ' ""c': 1, '""ct': 1, 'ctd': 1, 'tda': 1, 'at""': 1, 't""}': 1, 'l d': 2, 'te:': 1, ' {d': 1, '{da': 2, 'te}': 2, ' mn': 3, 'mnt': 6, 'te)': 2, 'e)\n': 2, 'me)': 1, '#  ': 2, ""f'{"": 1, ""'{d"": 1, 'ay}': 1, 'y},': 1, '},{': 5, ',{m': 2, '{mn': 2, 'th}': 2, 'h},': 1, ',{y': 1, '{ye': 1, 'ar}': 1, 'r},': 2, ',{h': 1, '{hr': 1, 'hr}': 1, '{mi': 1, 'e},': 1, ',{s': 1, '{se': 1, 'ec}': 1, ""c}'"": 1, 'ays': 2, 'ys ': 1, '= [': 2, "" ['"": 2, ""['s"": 1, ""'su"": 1, 'sun': 1, 'und': 1, 'nda': 2, ""ay'"": 8, ""y',"": 7, "", '"": 17, "" 'm"": 3, ""'mo"": 2, 'ond': 1, "" 't"": 2, ""'tu"": 1, 'tue': 1, 'esd': 2, 'sda': 3, "" 'w"": 1, ""'we"": 1, 'edn': 1, 'dne': 1, 'nes': 1, ""'th"": 1, 'thu': 1, 'hur': 1, 'urs': 1, 'rsd': 1, "" 'f"": 2, ""'fr"": 1, 'fri': 1, 'rid': 1, 'ida': 1, "" 's"": 2, ""'sa"": 1, 'sat': 1, 'urd': 1, 'rda': 1, ""y']"": 1, ""']\n"": 2, ']\n ': 1, 'ths': 3, 'hs ': 1, ""['j"": 1, ""'ja"": 1, 'jan': 1, ""'fe"": 1, 'feb': 1, ""eb'"": 1, ""b',"": 1, ""'ma"": 2, 'mar': 1, ""ar'"": 1, ""r',"": 2, "" 'a"": 2, ""'ap"": 1, 'apr': 1, ""pr'"": 1, 'may': 1, "" 'j"": 2, ""'ju"": 2, 'jun': 1, ""un'"": 1, 'jul': 1, ""ul'"": 1, ""l',"": 1, ""'au"": 1, 'aug': 1, ""ug'"": 1, ""g',"": 1, ""'se"": 1, 'sep': 1, ""pt'"": 1, ""t',"": 2, "" 'o"": 1, ""'oc"": 1, 'oct': 1, ""ct'"": 1, "" 'n"": 1, ""'no"": 1, 'nov': 1, ""ov'"": 1, ""v',"": 1, "" 'd"": 1, ""'de"": 1, 'dec': 1, ""ec'"": 1, ""c']"": 1, ']\n\n': 1, '\n\n ': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, 'in ': 1, 'n m': 1, 'hs:': 1, 's:\n': 1, '  i': 1, ' if': 1, 'f m': 1, 'th.': 1, 'h.l': 1, '.lo': 2, 'wer': 2, 'er(': 2, 'r()': 2, '().': 1, ').s': 1, 'tar': 1, 'art': 1, 'rts': 1, 'tsw': 1, 'swi': 1, 'wit': 1, 'ith': 1, 'th(': 1, 'h(i': 1, '(i)': 2, 'i):': 1, '= m': 1, 'hs.': 1, 's.i': 2, '.in': 2, 'nde': 2, 'dex': 2, 'ex(': 2, 'x(i': 1, 'i) ': 1, ') +': 2, ' + ': 3, '+ 1': 2, ' 1\n': 2, '1\n ': 2, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n ': 1, ""f'm"": 1, 'th=': 1, 'h={': 1, '={m': 1, ""h}'"": 1, 'ay_': 2, 'y_n': 2, '_no': 2, 'no ': 1, 'o =': 1, '= w': 1, 'ys.': 1, 'x(w': 1, '(we': 1, 'ay.': 1, 'y.l': 1, ')) ': 1, 'e_t': 1, '_tu': 1, 'tup': 1, 'upl': 1, 'ple': 1, 'le ': 1, '= (': 1, ' (i': 1, '(in': 1, 't(y': 1, '(ye': 1, 'ar)': 1, 'r),': 2, ', i': 5, 't(m': 2, '(mn': 1, 'th)': 1, 'h),': 1, ', w': 1, 'no,': 1, 'o, ': 1, 't(d': 1, 'ay)': 1, 'y),': 1, 't(h': 1, '(hr': 1, 'hr)': 1, '(mi': 1, 'e),': 1, '(se': 1, 'ec)': 1, 'c),': 1, ', 0': 1, ' 0)': 1, '0)\n': 1, '# j': 1, ' ju': 1, 'jus': 1, 'ust': 1, 'st ': 1, 't c': 1, 'y t': 1, 'e d': 1, 'e t': 1, 'o t': 1, 'p b': 1, ' bo': 1, 'rd\n': 1, 'pc.': 1, 'c.c': 1, 'py(': 1, 'y(t': 1, 'e +': 1, ""+ '"": 1, "" '."": 1, ""'.0"": 1, "".0'"": 1, ""0')"": 1, 't(""': 1, '(""T': 1, '""Ti': 1, 'Tim': 1, 'opi': 1, 'pie': 1, 'ied': 1, 'ed!': 1, 'd!""': 1, '!"")': 1}"
Tuhin Mitra,detect_html_links.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""': 2, 'task': 1, 'to': 1, 'find': 1, 'html': 2, 'links': 1, 'and': 1, 'their': 1, 'corresponding': 1, 'texts': 1, 'from': 1, 'raw': 1, 'element': 1, 'string': 1, 'import': 2, 're': 1, 'sys': 1, 'regex_pattern': 1, '=': 6, '""\\<a': 1, 'href=\\""(?p<link_url>.*?)\\"".*?\\>(?p<text>.*?)\\<\\/a""': 1, 't': 2, 'int(sys.stdin.readline())': 1, 'while': 1, 't:': 1, 'raw_string': 1, 'sys.stdin.readline()': 1, 'for': 1, 'match_obj': 1, 'in': 1, 're.finditer(regex_pattern,': 1, 'raw_string):': 1, 'if': 1, 'match_obj:': 1, 'match_dict': 1, 'match_obj.groupdict()': 1, 'link': 1, ""match_dict['link_url'].strip()"": 1, 'text': 1, ""match_dict['text'].strip()"": 1, 'print(f""{link},{text}"")': 1, '-=': 1, '1': 1}","{'""""""': 2, '""""\n': 2, '""\nT': 1, '\nTa': 1, 'Tas': 1, 'ask': 1, 'sk ': 1, 'k t': 1, ' to': 1, 'to ': 1, 'o f': 1, ' fi': 1, 'fin': 2, 'ind': 2, 'nd ': 2, 'd h': 1, ' ht': 2, 'htm': 2, 'tml': 2, 'ml ': 2, 'l l': 1, ' li': 2, 'lin': 7, 'ink': 5, 'nks': 1, 'ks ': 1, 's a': 1, ' an': 1, 'and': 1, 'd t': 1, ' th': 1, 'the': 1, 'hei': 1, 'eir': 1, 'ir ': 1, 'r c': 1, ' co': 1, 'cor': 1, 'orr': 1, 'rre': 1, 'res': 1, 'esp': 1, 'spo': 1, 'pon': 1, 'ond': 1, 'ndi': 2, 'din': 3, 'ing': 4, 'ng ': 2, 'g t': 1, ' te': 2, 'tex': 5, 'ext': 5, 'xts': 1, 'ts ': 1, 's f': 1, ' fr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm r': 1, ' ra': 3, 'raw': 3, 'aw ': 1, 'w h': 1, 'l e': 1, ' el': 1, 'ele': 1, 'lem': 1, 'eme': 1, 'men': 1, 'ent': 1, 'nt ': 1, 't s': 2, ' st': 1, 'str': 5, 'tri': 5, 'rin': 4, 'ng\n': 1, 'g\n""': 1, '\n""""': 1, '""\n\n': 2, '\n\ni': 1, '\nim': 2, 'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't r': 1, ' re': 2, 're\n': 1, 'e\ni': 1, ' sy': 2, 'sys': 3, 'ys\n': 1, 's\n\n': 1, '\n\nr': 1, '\nre': 1, 'reg': 2, 'ege': 2, 'gex': 2, 'ex_': 2, 'x_p': 2, '_pa': 2, 'pat': 2, 'att': 2, 'tte': 2, 'ter': 3, 'ern': 2, 'rn ': 1, 'n =': 1, ' = ': 6, '= ""': 1, ' ""\\': 1, '""\\<': 1, '\\<a': 1, '<a ': 1, 'a h': 1, ' hr': 1, 'hre': 1, 'ref': 1, 'ef=': 1, 'f=\\': 1, '=\\""': 1, '\\""(': 1, '""(?': 1, '(?P': 2, '?P<': 2, 'P<l': 1, '<li': 1, 'nk_': 2, 'k_u': 2, '_ur': 2, 'url': 2, 'rl>': 1, 'l>.': 1, '>.*': 2, '.*?': 3, '*?)': 2, '?)\\': 2, ')\\""': 1, '\\"".': 1, '"".*': 1, '*?\\': 1, '?\\>': 1, '\\>(': 1, '>(?': 1, 'P<t': 1, '<te': 1, 'xt>': 1, 't>.': 1, ')\\<': 1, '\\<\\': 1, '<\\/': 1, '\\/a': 1, '/a""': 1, 'a""\n': 1, '\n\n\n': 2, '\n\nt': 1, '\nt ': 1, 't =': 3, '= i': 1, ' in': 2, 'int': 2, 'nt(': 2, 't(s': 1, '(sy': 1, 'ys.': 2, 's.s': 2, '.st': 4, 'std': 2, 'tdi': 2, 'in.': 2, 'n.r': 2, '.re': 2, 'rea': 2, 'ead': 2, 'adl': 2, 'dli': 2, 'ine': 2, 'ne(': 2, 'e()': 2, '())': 1, '))\n': 1, ')\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e t': 1, ' t:': 1, 't:\n': 1, ':\n\n': 1, '\n\n ': 2, '\n  ': 9, '   ': 54, '  r': 1, 'aw_': 2, 'w_s': 2, '_st': 2, 'g =': 1, '= s': 1, '()\n': 4, ')\n\n': 1, '  \n': 1, ' \n ': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r m': 1, ' ma': 6, 'mat': 6, 'atc': 6, 'tch': 6, 'ch_': 6, 'h_o': 3, '_ob': 3, 'obj': 3, 'bj ': 1, 'j i': 1, 'in ': 1, 'n r': 1, 're.': 1, 'e.f': 1, '.fi': 1, 'dit': 1, 'ite': 1, 'er(': 1, 'r(r': 1, '(re': 1, 'rn,': 1, 'n, ': 1, ', r': 1, 'ng)': 1, 'g):': 1, '):\n': 1, ':\n ': 2, '  i': 1, ' if': 1, 'if ': 1, 'f m': 1, 'bj:': 1, 'j:\n': 1, '  m': 1, 'h_d': 3, '_di': 3, 'dic': 4, 'ict': 4, 'ct ': 1, '= m': 3, 'bj.': 1, 'j.g': 1, '.gr': 1, 'gro': 1, 'rou': 1, 'oup': 1, 'upd': 1, 'pdi': 1, 'ct(': 1, 't()': 1, ')\n ': 4, '  l': 1, 'nk ': 1, 'k =': 1, 'ct[': 2, ""t['"": 2, ""['l"": 1, ""'li"": 1, ""rl'"": 1, ""l']"": 1, ""']."": 2, '].s': 2, 'rip': 2, 'ip(': 2, 'p()': 2, '  t': 2, 'xt ': 1, ""['t"": 1, ""'te"": 1, ""xt'"": 1, ""t']"": 1, '  p': 1, ' pr': 1, 'pri': 1, 't(f': 1, '(f""': 1, 'f""{': 1, '""{l': 1, '{li': 1, 'nk}': 1, 'k},': 1, '},{': 1, ',{t': 1, '{te': 1, 'xt}': 1, 't}""': 1, '}"")': 1, '"")\n': 1, ' t ': 1, 't -': 1, ' -=': 1, '-= ': 1, '= 1': 1, ' 1\n': 1}"
Tuhin Mitra,diagonal-difference.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'def': 1, 'diagonaldifference(arr):': 1, 'left_diagonal_sum': 2, '=': 5, '0': 2, 'for': 5, 'i': 2, 'in': 5, 'range(len(arr)):': 2, 'j': 1, 'range(len(arr[0])):': 1, 'if': 3, '==': 3, 'j:': 1, '+=': 2, 'arr[i][j]': 1, 'break': 1, 'right_diagonal_sum': 2, 'row': 2, 'col': 2, 'range(len(arr)': 1, '-': 4, '1,': 1, '-1,': 1, '-1):': 1, 'len(arr)': 1, '1:': 1, 'arr[row][col]': 1, 'return': 1, 'abs(right_diagonal_sum': 1, 'left_diagonal_sum)': 1, '__name__': 1, ""'__main__':"": 1, 'n': 1, 'int(input())': 1, 'arr': 1, '[]': 1, '_': 1, 'range(n):': 1, 'arr.append(list(map(int,': 1, 'input().split())))': 1, 'result': 1, 'diagonaldifference(arr)': 1, 'print(result)': 1}","{'def': 1, 'ef ': 1, 'f d': 1, ' di': 2, 'dia': 8, 'iag': 8, 'ago': 8, 'gon': 8, 'ona': 8, 'nal': 8, 'alD': 2, 'lDi': 2, 'Dif': 2, 'iff': 2, 'ffe': 2, 'fer': 2, 'ere': 2, 'ren': 2, 'enc': 2, 'nce': 2, 'ce(': 2, 'e(a': 2, '(ar': 7, 'arr': 11, 'rr)': 6, 'r):': 1, '):\n': 6, ':\n ': 9, '\n  ': 18, '   ': 100, '  l': 2, ' le': 4, 'lef': 3, 'eft': 3, 'ft_': 3, 't_d': 6, '_di': 6, 'al_': 6, 'l_s': 6, '_su': 6, 'sum': 6, 'um ': 5, 'm =': 2, ' = ': 5, '= 0': 2, ' 0\n': 2, '0\n ': 2, '  f': 5, ' fo': 5, 'for': 5, 'or ': 5, 'r i': 1, ' i ': 2, 'i i': 1, ' in': 7, 'in ': 5, 'n r': 5, ' ra': 5, 'ran': 5, 'ang': 5, 'nge': 5, 'ge(': 5, 'e(l': 4, '(le': 4, 'len': 5, 'en(': 5, 'n(a': 5, 'r))': 2, ')):': 3, 'r j': 1, ' j ': 1, 'j i': 1, 'rr[': 3, 'r[0': 1, '[0]': 1, '0])': 1, ']))': 1, '  i': 2, ' if': 2, 'if ': 3, 'f i': 1, 'i =': 1, ' ==': 3, '== ': 3, '= j': 1, ' j:': 1, 'j:\n': 1, 'm +': 2, ' +=': 2, '+= ': 2, '= a': 2, ' ar': 4, 'r[i': 1, '[i]': 1, 'i][': 1, '][j': 1, '[j]': 1, 'j]\n': 1, ']\n ': 3, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n\n': 1, '\n\n ': 2, '  r': 4, ' ri': 2, 'rig': 3, 'igh': 3, 'ght': 3, 'ht_': 3, 'r r': 1, ' ro': 2, 'row': 3, 'ow ': 2, 'w i': 1, 'r c': 1, ' co': 2, 'col': 3, 'ol ': 2, 'l i': 1, 'r) ': 2, ') -': 2, ' - ': 4, '- 1': 2, ' 1,': 1, '1, ': 2, ', -': 2, ' -1': 2, '-1,': 1, '-1)': 1, '1):': 1, 'f r': 1, 'w =': 1, '= l': 1, '- c': 1, 'l -': 1, ' 1:': 1, '1:\n': 1, 'r[r': 1, '[ro': 1, 'ow]': 1, 'w][': 1, '][c': 1, '[co': 1, 'ol]': 1, 'l]\n': 1, ' re': 2, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n a': 1, ' ab': 1, 'abs': 1, 'bs(': 1, 's(r': 1, '(ri': 1, 'm -': 1, '- l': 1, 'um)': 1, 'm)\n': 1, ')\n\n': 2, '\n\n\n': 1, '\n\ni': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  n': 1, ' n ': 1, 'n =': 1, '= i': 1, 'int': 3, 'nt(': 2, 't(i': 1, '(in': 2, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 3, '())': 2, '))\n': 2, ')\n ': 2, '  a': 2, 'rr ': 1, 'r =': 1, '= [': 1, ' []': 1, '[]\n': 1, 'r _': 1, ' _ ': 1, '_ i': 1, 'e(n': 1, '(n)': 1, 'n):': 1, 'rr.': 1, 'r.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(l': 1, '(li': 1, 'lis': 1, 'ist': 1, 'st(': 1, 't(m': 1, '(ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, 't, ': 1, ', i': 1, '().': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, ')))': 2, 'res': 2, 'esu': 2, 'sul': 2, 'ult': 2, 'lt ': 1, 't =': 1, '= d': 1, 'r)\n': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 't(r': 1, '(re': 1, 'lt)': 1}"
Tuhin Mitra,find_nth_spiral_element.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""': 2, 'find': 2, 'nth': 1, 'element': 7, 'of': 6, 'spiral': 2, 'matrix': 10, 'given': 4, 'a': 7, 'your': 3, 'task': 2, 'is': 7, 'to': 5, 'the': 30, 'kth': 4, 'which': 2, 'obtained': 4, 'while': 3, 'traversing': 3, 'spirally.': 3, 'you': 2, 'need': 2, 'complete': 2, 'method': 1, 'findk': 1, 'takes': 1, 'four': 1, 'arguments': 3, 'first': 3, 'argument': 2, 'and': 8, 'next': 2, 'two': 1, 'will': 5, 'be': 4, 'n': 4, 'm': 3, 'denoting': 2, 'size': 1, 'then': 3, 'forth': 1, 'an': 2, 'integer': 2, 'k': 2, '.': 6, 'function': 5, 'return': 7, 'input:': 1, 'line': 3, 'input': 3, 'no': 1, 'test': 4, 'cases': 2, 't': 2, 'follow': 1, 'each': 2, 'case': 2, 'has': 1, 'three': 1, 'integers': 1, 'n(rows),': 1, 'm(columns)': 1, 'in': 12, 'are': 2, 'n*m': 1, 'space': 1, 'separated': 1, 'values': 1, '[': 2, ']': 2, 'output:': 1, 'output': 3, 'for': 12, 'task:': 1, 'only': 1, 'implement': 1, 'findk().': 1, 'do': 1, 'not': 3, 'read': 2, 'input,': 1, 'instead': 1, 'use': 1, 'function.': 1, ""k'th"": 1, 'by': 2, 'expected': 3, 'time': 1, 'complexity:': 1, 'o(n*m)': 2, 'auxiliary': 1, 'space:': 1, 'constraints:': 1, '1<=t<=100': 1, '1<=n,m<=20': 1, '1<=k<=n*m': 1, 'example:': 1, '1': 14, '3': 5, '4': 3, '2': 3, '5': 2, '6': 4, '7': 2, '8': 2, '9': 2, 'explanation': 1, 'above': 1, 'look': 1, 'like': 1, '4th': 1, 'fashion': 1, 'note:the': 1, 'input/ouput': 1, 'format': 1, 'example': 1, 'used': 2, ""system's"": 1, 'internal': 1, 'purpose,': 1, 'should': 3, 'user': 2, 'only.': 1, 'as': 1, 'it': 1, 'problem,': 1, 'hence': 1, 'any': 1, 'from': 1, 'stdin/console.': 1, 'specified,': 1, 'write': 1, 'full': 1, 'code.': 1, '#': 10, 'def': 1, 'findk(arr,': 1, 'm,': 1, 'n,': 1, 'q):': 1, 'code': 4, 'here': 2, 'elements': 1, '=': 14, '*': 1, 'top,': 1, 'down,': 1, 'left,': 1, 'right': 3, '0,': 2, '-': 4, '1,': 3, 'count': 10, '0': 4, 'direction': 9, '<': 1, 'elements:': 1, 'if': 6, '==': 9, '0:': 1, 'i': 7, 'range(left,': 1, '+': 2, '1):': 2, 'print(arr[top][i],': 1, 'end=""': 4, '"")': 4, '+=': 7, 'q:': 4, 'arr[top][i]': 1, 'top': 2, 'elif': 3, '1:': 1, 'range(top,': 1, 'down': 2, 'print(arr[i][right],': 1, 'arr[i][right]': 1, '-=': 2, '2:': 1, 'range(right,': 1, 'left': 2, '-1):': 2, 'print(arr[down][i],': 1, 'arr[down][i]': 1, '3:': 1, 'range(down,': 1, 'print(arr[i][left],': 1, 'arr[i][left]': 1, '{': 1, 'driver': 2, 'starts': 1, 'goes': 1, '__name__': 1, ""'__main__':"": 1, 'int(input())': 1, 'range(t):': 1, 'list(map(int,': 2, 'input().strip().split()))': 2, 'arr': 1, '[[0': 1, 'range(n[1])]': 1, 'j': 2, 'range(n[0])]': 1, 'c': 2, 'range(n[0]):': 1, 'range(n[1]):': 1, 'matrix[i][j]': 1, 'arr[c]': 1, 'print(findk(matrix,': 1, 'n[0],': 1, 'n[1],': 1, 'n[2]))': 1, '}': 1, 'ends': 1}","{'""""""': 2, '""""\n': 2, '""\nF': 1, '\nFi': 1, 'Fin': 1, 'ind': 6, 'nd ': 10, 'd n': 3, ' nt': 1, 'nth': 1, 'th ': 8, 'h e': 6, ' el': 12, 'ele': 9, 'lem': 11, 'eme': 10, 'men': 15, 'ent': 15, 'nt ': 20, 't o': 4, ' of': 6, 'of ': 6, 'f s': 1, ' sp': 7, 'spi': 5, 'pir': 5, 'ira': 5, 'ral': 5, 'al ': 3, 'l m': 1, ' ma': 11, 'mat': 13, 'atr': 12, 'tri': 14, 'rix': 12, 'ix\n': 1, 'x\n\n': 1, '\n\nG': 1, '\nGi': 1, 'Giv': 1, 'ive': 6, 'ven': 4, 'en ': 7, 'n a': 7, ' a ': 4, 'a m': 1, 'ix ': 9, 'x y': 1, ' yo': 1, 'you': 1, 'our': 4, 'ur ': 4, 'r t': 1, ' ta': 3, 'tas': 2, 'ask': 3, 'sk ': 2, 'k i': 2, ' is': 7, 'is ': 7, 's t': 7, ' to': 8, 'to ': 5, 'o f': 1, ' fi': 7, 'fin': 5, 'd t': 6, ' th': 27, 'the': 26, 'he ': 31, 'e k': 4, ' kt': 4, 'kth': 4, 't w': 1, ' wh': 5, 'whi': 5, 'hic': 2, 'ich': 2, 'ch ': 4, 'h i': 1, 's o': 2, ' ob': 4, 'obt': 4, 'bta': 4, 'tai': 4, 'ain': 6, 'ine': 7, 'ned': 4, 'ed ': 12, 'd w': 2, 'hil': 3, 'ile': 3, 'le ': 4, 'e t': 8, ' tr': 3, 'tra': 4, 'rav': 3, 'ave': 3, 'ver': 5, 'ers': 4, 'rsi': 3, 'sin': 3, 'ing': 5, 'ng ': 5, 'g t': 4, 'e m': 7, 'x s': 3, 'all': 3, 'lly': 3, 'ly.': 4, 'y. ': 2, '. Y': 1, ' Yo': 2, 'You': 4, 'ou ': 2, 'u n': 1, ' ne': 4, 'nee': 2, 'eed': 2, 'o c': 2, ' co': 14, 'com': 2, 'omp': 3, 'mpl': 6, 'ple': 6, 'let': 2, 'ete': 2, 'te ': 3, ' me': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od ': 1, 'd f': 2, 'ndK': 4, 'dK ': 1, 'K w': 1, 'h t': 3, 'tak': 1, 'ake': 1, 'kes': 1, 'es ': 5, 's f': 2, ' fo': 16, 'fou': 1, 'r a': 1, ' ar': 13, 'arg': 5, 'rgu': 5, 'gum': 5, 'ume': 5, 'nts': 6, 'ts ': 4, 'e f': 8, 'fir': 3, 'irs': 3, 'rst': 3, 'st ': 7, 't a': 2, 't i': 5, 'x A': 3, ' A ': 3, 'A a': 2, ' an': 10, 'and': 8, 'e n': 5, 'nex': 2, 'ext': 2, 'xt ': 2, 't t': 3, ' tw': 1, 'two': 1, 'wo ': 1, 'o a': 1, 's w': 1, ' wi': 5, 'wil': 5, 'ill': 5, 'll ': 6, 'l b': 3, ' be': 4, 'be ': 4, ' n ': 3, 'd m': 1, ' m ': 3, 'm d': 1, ' de': 2, 'den': 2, 'eno': 2, 'not': 5, 'oti': 2, 'tin': 2, 'e s': 2, ' si': 1, 'siz': 1, 'ize': 1, 'ze ': 1, 'e o': 4, 'f t': 3, 'hen': 4, 'n t': 6, 'for': 14, 'ort': 1, 'rth': 1, 'h a': 1, 's a': 2, 'an ': 2, 'n i': 4, ' in': 23, 'int': 13, 'nte': 4, 'teg': 3, 'ege': 3, 'ger': 3, 'er ': 5, 'r  ': 1, '  k': 1, ' k ': 2, 'k d': 1, 't .': 2, ' . ': 3, '. T': 4, ' Th': 4, 'The': 8, ' fu': 6, 'fun': 5, 'unc': 6, 'nct': 6, 'cti': 15, 'tio': 16, 'ion': 17, 'on ': 15, 'n w': 2, 'l r': 1, ' re': 8, 'ret': 6, 'etu': 7, 'tur': 7, 'urn': 7, 'rn ': 7, 'y.\n': 2, '.\n\n': 5, '\n\n\n': 5, '\n\nI': 1, '\nIn': 2, 'Inp': 3, 'npu': 9, 'put': 14, 'ut:': 2, 't:\n': 2, ':\nT': 2, '\nTh': 3, 't l': 3, ' li': 6, 'lin': 3, 'ne ': 3, 'f i': 1, 'inp': 6, 'ut ': 5, ' no': 4, 'no ': 1, 'o o': 1, ' te': 4, 'tes': 4, 'est': 4, 't c': 4, ' ca': 4, 'cas': 4, 'ase': 4, 'ses': 2, 'n T': 1, ' T ': 1, 'T t': 1, 'fol': 1, 'oll': 1, 'llo': 1, 'low': 1, 'ow ': 1, 'w .': 1, 'f e': 1, ' ea': 2, 'eac': 2, 'ach': 2, 'se ': 3, 'e h': 2, ' ha': 1, 'has': 1, 'as ': 1, 'thr': 1, 'hre': 1, 'ree': 1, 'ee ': 1, 'e i': 1, 'rs ': 1, 's n': 1, ' n(': 1, 'n(r': 1, '(ro': 1, 'row': 1, 'ows': 1, 'ws)': 1, 's),': 1, '), ': 1, ', m': 3, ' m(': 1, 'm(c': 1, '(co': 1, 'col': 1, 'olu': 1, 'lum': 1, 'umn': 1, 'mns': 1, 'ns)': 1, 's) ': 1, ') a': 1, 'd k': 1, 'k .': 1, 'in ': 12, 'e a': 4, 'are': 2, 're ': 2, ' n*': 1, 'n*m': 2, '*m ': 1, 'm s': 2, 'spa': 1, 'pac': 2, 'ace': 2, 'ce ': 2, ' se': 1, 'sep': 1, 'epa': 1, 'par': 1, 'ara': 1, 'rat': 1, 'ate': 1, 'ted': 4, 'd v': 1, ' va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ues': 1, 'A [': 1, ' [ ': 2, '[ ]': 2, ' ] ': 2, '] [': 1, '] .': 1, ' .\n': 3, '\n\nO': 2, '\nOu': 2, 'Out': 3, 'utp': 4, 'tpu': 4, ' ou': 1, 'out': 1, 't f': 3, 'or ': 12, 'r e': 1, 'e w': 2, 'h o': 1, 'd e': 1, '\n\nY': 1, '\nYo': 2, 'r T': 1, ' Ta': 1, 'Tas': 1, 'sk:': 1, 'k:\n': 1, ':\nY': 1, 'u o': 1, ' on': 2, 'onl': 2, 'nly': 2, 'ly ': 1, 'y n': 1, 'o i': 1, ' im': 1, 'imp': 1, 'e g': 3, ' gi': 3, 'giv': 3, 'n f': 2, 'dK(': 3, 'K()': 1, '().': 5, '). ': 1, '. D': 1, ' Do': 1, 'Do ': 1, 'o n': 1, 'ot ': 3, 't r': 2, 'rea': 2, 'ead': 3, 'ad ': 3, 'd i': 1, 'ut,': 1, 't, ': 6, ', i': 3, 'ins': 1, 'nst': 2, 'ste': 2, 'tea': 1, 'd u': 1, ' us': 5, 'use': 5, 's g': 1, 'on.': 1, 'n. ': 1, '. R': 1, ' Re': 1, 'Ret': 1, 'e K': 1, "" K'"": 1, ""K't"": 1, ""'th"": 1, 'd b': 3, ' by': 2, 'by ': 2, 'y t': 1, 'g m': 1, '\n\nE': 3, '\nEx': 4, 'Exp': 4, 'xpe': 3, 'pec': 4, 'ect': 12, 'cte': 3, 'd T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me ': 1, 'e C': 1, ' Co': 4, 'Com': 1, 'lex': 1, 'exi': 1, 'xit': 1, 'ity': 1, 'ty:': 1, 'y: ': 1, ': O': 2, ' O(': 2, 'O(N': 2, '(N*': 2, 'N*M': 2, '*M)': 2, 'M)\n': 2, ')\nE': 1, 'd A': 1, ' Au': 1, 'Aux': 1, 'uxi': 1, 'xil': 1, 'ili': 1, 'lia': 1, 'iar': 1, 'ary': 1, 'ry ': 1, 'y S': 1, ' Sp': 1, 'Spa': 1, 'ce:': 1, 'e: ': 1, ')\n\n': 1, '\n\nC': 1, '\nCo': 1, 'Con': 1, 'ons': 2, 'str': 3, 'rai': 1, 'ts:': 2, 's:\n': 2, ':\n1': 1, '\n1<': 3, '1<=': 3, '<=T': 1, '=T<': 1, 'T<=': 1, '<=1': 1, '=10': 1, '100': 1, '00\n': 1, '0\n1': 2, '<=n': 2, '=n,': 1, 'n,m': 1, ',m<': 1, 'm<=': 1, '<=2': 1, '=20': 1, '20\n': 1, '<=k': 1, '=k<': 1, 'k<=': 1, '=n*': 1, '*m\n': 1, 'm\n\n': 1, 'Exa': 2, 'xam': 2, 'amp': 2, 'le:': 1, 'e:\n': 1, ':\nI': 1, 'ut\n': 2, 't\n1': 1, '\n1\n': 1, '1\n3': 1, '\n3 ': 1, '3 3': 1, ' 3 ': 2, '3 4': 2, ' 4\n': 1, '4\n1': 1, '\n1 ': 2, '1 2': 2, ' 2 ': 2, '2 3': 2, ' 4 ': 1, '4 5': 2, ' 5 ': 2, '5 6': 2, ' 6 ': 2, '6 7': 1, ' 7 ': 1, '7 8': 2, ' 8 ': 2, '8 9': 2, ' 9\n': 2, '9\n\n': 1, 't\n6': 1, '\n6\n': 1, '6\n\n': 1, 'xpl': 1, 'pla': 1, 'lan': 1, 'ana': 1, 'nat': 1, 'ati': 1, 'on\n': 1, 'n\nT': 1, 'x a': 1, ' ab': 1, 'abo': 1, 'bov': 1, 'ove': 1, 've ': 1, 'l l': 1, ' lo': 1, 'loo': 1, 'ook': 1, 'ok ': 1, 'k l': 1, 'lik': 1, 'ike': 1, 'ke\n': 1, 'e\n1': 1, ' 3\n': 2, '3\n4': 1, '\n4 ': 1, ' 6\n': 1, '6\n7': 1, '\n7 ': 1, '9\na': 1, '\nan': 1, 'e 4': 1, ' 4t': 1, '4th': 1, 'n s': 3, 'l f': 1, ' fa': 1, 'fas': 1, 'ash': 1, 'shi': 1, 'hio': 1, 'e 6': 1, '6 .': 1, '\n\nN': 1, '\nNo': 1, 'Not': 1, 'ote': 1, 'te:': 1, 'e:T': 1, ':Th': 1, 'e I': 1, ' In': 1, 'ut/': 1, 't/O': 1, '/Ou': 1, 'Oup': 1, 'upu': 1, 'orm': 1, 'rma': 1, 'at ': 1, 'd E': 1, ' Ex': 2, 'e u': 2, 'sed': 2, 'r s': 2, ' sy': 1, 'sys': 1, 'yst': 1, 'tem': 1, ""em'"": 1, ""m's"": 1, ""'s "": 1, 's i': 2, 'ter': 1, 'ern': 1, 'rna': 1, 'nal': 1, 'l p': 1, ' pu': 1, 'pur': 1, 'urp': 1, 'rpo': 1, 'pos': 1, 'ose': 1, 'se,': 1, 'e, ': 1, ', a': 2, 'd s': 1, ' sh': 3, 'sho': 3, 'hou': 3, 'oul': 3, 'uld': 3, 'ld ': 3, 'y a': 1, 'a u': 2, 'ser': 2, 'r f': 1, 'r E': 1, 'd O': 1, ' Ou': 1, '. A': 1, ' As': 1, 'As ': 1, ' it': 1, 'it ': 1, 'a f': 1, 'n p': 1, ' pr': 6, 'pro': 1, 'rob': 1, 'obl': 1, 'ble': 1, 'em,': 1, 'm, ': 2, ', h': 1, ' he': 3, 'enc': 1, 'nce': 1, 'd a': 1, 'any': 1, 'ny ': 1, 'y i': 1, ' fr': 1, 'fro': 1, 'rom': 1, 'om ': 1, ' st': 1, 'std': 1, 'tdi': 1, 'din': 1, 'in/': 1, 'n/c': 1, '/co': 1, 'con': 1, 'nso': 1, 'sol': 1, 'ole': 1, 'le.': 1, 'e. ': 1, 'spe': 1, 'eci': 1, 'cif': 1, 'ifi': 1, 'fie': 1, 'ied': 1, 'ed,': 1, 'd, ': 1, 'o w': 1, ' wr': 1, 'wri': 1, 'rit': 1, 'ite': 1, 'ful': 1, 'ull': 1, 'l c': 1, 'cod': 2, 'ode': 5, 'de.': 1, 'e.\n': 1, '.\n""': 1, '\n""""': 1, '""\n\n': 1, '\n\n#': 2, '\n# ': 5, '# F': 1, ' Fu': 1, 'Fun': 1, 'd r': 1, 'er\n': 1, 'r\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f f': 1, 'K(a': 1, '(ar': 5, 'arr': 11, 'rr,': 1, 'r, ': 1, ' m,': 1, ', n': 5, ' n,': 1, 'n, ': 3, ', q': 1, ' q)': 1, 'q):': 1, '):\n': 8, ':\n ': 18, '\n  ': 49, '   ': 474, '  #': 5, ' # ': 5, '# C': 1, 'Cod': 3, 'de ': 4, 'her': 2, 'ere': 2, 're\n': 2, 'e\n ': 1, '  e': 4, 's =': 1, ' = ': 14, '= m': 1, 'm *': 1, ' * ': 1, '* n': 1, ' n\n': 1, 'n\n ': 1, '  t': 3, 'top': 6, 'op,': 2, 'p, ': 2, ', d': 2, ' do': 3, 'dow': 6, 'own': 6, 'wn,': 2, ', l': 2, ' le': 3, 'lef': 6, 'eft': 6, 'ft,': 2, ', r': 2, ' ri': 3, 'rig': 6, 'igh': 6, 'ght': 6, 'ht ': 3, 't =': 7, '= 0': 6, ' 0,': 2, '0, ': 2, 'm -': 1, ' - ': 4, '- 1': 4, ' 1,': 3, '1, ': 3, ', 0': 1, 'n -': 2, ' 1\n': 11, '1\n ': 11, '  c': 7, 'cou': 10, 'oun': 10, 'unt': 10, ' 0\n': 4, '0\n ': 2, '  d': 6, ' di': 9, 'dir': 9, 'ire': 9, 'rec': 9, 'n =': 10, '0\n\n': 2, '\n\n ': 1, '  w': 1, 'e c': 1, 't <': 1, ' < ': 1, '< e': 1, '  i': 5, ' if': 5, 'if ': 9, 'f d': 4, ' ==': 9, '== ': 9, ' 0:': 1, '0:\n': 1, '  f': 7, 'r i': 7, ' i ': 7, 'i i': 7, 'n r': 9, ' ra': 9, 'ran': 9, 'ang': 9, 'nge': 9, 'ge(': 9, 'e(l': 1, '(le': 1, 't +': 6, ' + ': 2, '+ 1': 2, ' 1)': 2, '1):': 4, '# p': 4, 'pri': 5, 'rin': 5, 'nt(': 6, 't(a': 4, 'rr[': 9, 'r[t': 2, '[to': 2, 'op]': 2, 'p][': 2, '][i': 4, '[i]': 9, 'i],': 2, '], ': 6, ', e': 4, ' en': 4, 'end': 4, 'nd=': 4, 'd=""': 4, '="" ': 4, '"" ""': 4, ' "")': 4, '"")\n': 4, ')\n ': 7, ' +=': 7, '+= ': 7, '= 1': 11, 'f c': 4, '= q': 4, ' q:': 4, 'q:\n': 4, '  r': 5, 'i]\n': 2, ']\n ': 6, 'op ': 2, 'p +': 1, 'eli': 3, 'lif': 3, ' 1:': 1, '1:\n': 1, 'e(t': 2, '(to': 1, 'wn ': 2, 'n +': 1, 'r[i': 4, 'i][': 5, '][r': 2, '[ri': 2, 'ht]': 2, 't],': 2, 't]\n': 2, '= 2': 2, ' 2\n': 1, '2\n ': 1, 't -': 2, ' -=': 2, '-= ': 2, ' 2:': 1, '2:\n': 1, 'e(r': 1, '(ri': 1, 'ht,': 1, 'ft ': 2, ', -': 2, ' -1': 2, '-1)': 2, 'r[d': 2, '[do': 2, 'wn]': 2, 'n][': 2, '= 3': 2, '3\n ': 1, ' 3:': 1, '3:\n': 1, 'e(d': 1, '(do': 1, ', t': 1, 'p -': 1, '][l': 2, '[le': 2, 'ft]': 2, '  l': 1, '# {': 1, ' {\n': 1, '{\n#': 1, '#  ': 1, '  D': 1, ' Dr': 2, 'Dri': 2, 'riv': 2, 'r C': 2, 'e S': 1, ' St': 1, 'Sta': 1, 'tar': 1, 'art': 1, 'rts': 1, 'ts\n': 1, 's\n#': 1, '# Y': 1, 'r c': 1, ' go': 1, 'goe': 1, 'oes': 1, 's h': 1, 'e\ni': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, ' t ': 1, '= i': 1, 't(i': 1, '(in': 3, 'ut(': 3, 't()': 5, '())': 3, '))\n': 4, '(t)': 1, 't):': 1, '  n': 1, '= l': 2, 'lis': 2, 'ist': 2, 'st(': 2, 't(m': 2, '(ma': 3, 'map': 2, 'ap(': 2, 'p(i': 2, 'nt,': 2, ').s': 4, '.st': 2, 'rip': 2, 'ip(': 2, 'p()': 2, '.sp': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'it(': 2, ')))': 2, '  a': 1, 'rr ': 1, 'r =': 1, '  m': 2, 'x =': 1, '= [': 1, ' [[': 1, '[[0': 1, '[0 ': 1, '0 f': 1, 'e(n': 4, '(n[': 4, 'n[1': 3, '[1]': 3, '1])': 2, '])]': 2, ')] ': 1, '] f': 1, 'r j': 2, ' j ': 2, 'j i': 2, 'n[0': 3, '[0]': 3, '0])': 2, ')]\n': 1, ' c ': 2, 'c =': 1, ']):': 2, 'ix[': 1, 'x[i': 1, '][j': 1, '[j]': 1, 'j] ': 1, '] =': 1, '= a': 1, 'r[c': 1, '[c]': 1, 'c]\n': 1, 'c +': 1, '  p': 1, 't(f': 1, '(fi': 1, 'K(m': 1, 'ix,': 1, 'x, ': 1, ' n[': 3, '0],': 1, '1],': 1, 'n[2': 1, '[2]': 1, '2])': 1, ']))': 1, ')\n#': 1, '# }': 1, ' } ': 1, '} D': 1, 'e E': 1, ' En': 1, 'End': 1, 'nds': 1}"
Tuhin Mitra,mini-max-sum.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""': 2, 'problem': 1, 'solved:': 1, 'https://www.hackerrank.com/challenges/one-week-preparation-kit-mini-max-sum/problem?h_l=interview&isfullscreen=true&playlist_slugs%5b%5d%5b%5d=preparation-kits&playlist_slugs%5b%5d%5b%5d=one-week-preparation-kit&playlist_slugs%5b%5d%5b%5d=one-week-day-one': 1, 'def': 1, 'minimaxsum(arr):': 1, 'sorted_arr': 1, '=': 2, 'sorted(arr)': 1, 'print(sum(sorted_arr[:4]),': 1, 'sum(sorted_arr[-4:]))': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'arr': 1, 'list(map(int,': 1, 'input().rstrip().split()))': 1, 'minimaxsum(arr)': 1}","{'""""""': 2, '""""\n': 2, '""\nP': 1, '\nPr': 1, 'Pro': 1, 'rob': 2, 'obl': 2, 'ble': 2, 'lem': 2, 'em ': 1, 'm s': 1, ' so': 3, 'sol': 1, 'olv': 1, 'lve': 1, 'ved': 1, 'ed:': 1, 'd: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.h': 1, '.ha': 1, 'hac': 1, 'ack': 1, 'cke': 1, 'ker': 1, 'err': 1, 'rra': 1, 'ran': 1, 'ank': 1, 'nk.': 1, 'k.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/c': 1, '/ch': 1, 'cha': 1, 'hal': 1, 'all': 1, 'lle': 1, 'len': 1, 'eng': 1, 'nge': 1, 'ges': 1, 'es/': 1, 's/o': 1, '/on': 1, 'one': 4, 'ne-': 3, 'e-w': 3, '-we': 3, 'wee': 3, 'eek': 3, 'ek-': 3, 'k-p': 2, '-pr': 2, 'pre': 3, 'rep': 3, 'epa': 3, 'par': 3, 'ara': 3, 'rat': 3, 'ati': 3, 'tio': 3, 'ion': 3, 'on-': 3, 'n-k': 3, '-ki': 3, 'kit': 3, 'it-': 1, 't-m': 1, '-mi': 1, 'min': 3, 'ini': 3, 'ni-': 1, 'i-m': 1, '-ma': 1, 'max': 1, 'ax-': 1, 'x-s': 1, '-su': 1, 'sum': 3, 'um/': 1, 'm/p': 1, '/pr': 1, 'pro': 1, 'em?': 1, 'm?h': 1, '?h_': 1, 'h_l': 1, '_l=': 1, 'l=i': 1, '=in': 1, 'int': 3, 'nte': 1, 'ter': 1, 'erv': 1, 'rvi': 1, 'vie': 1, 'iew': 1, 'ew&': 1, 'w&i': 1, '&is': 1, 'isF': 1, 'sFu': 1, 'Ful': 1, 'ull': 1, 'llS': 1, 'lSc': 1, 'Scr': 1, 'cre': 1, 'ree': 1, 'een': 1, 'en=': 1, 'n=t': 1, '=tr': 1, 'tru': 1, 'rue': 1, 'ue&': 1, 'e&p': 1, '&pl': 3, 'pla': 3, 'lay': 3, 'ayl': 3, 'yli': 3, 'lis': 4, 'ist': 4, 'st_': 3, 't_s': 3, '_sl': 3, 'slu': 3, 'lug': 3, 'ugs': 3, 'gs%': 3, 's%5': 3, '%5B': 6, '5B%': 6, 'B%5': 6, '%5D': 6, '5D%': 3, 'D%5': 3, '5D=': 3, 'D=p': 1, '=pr': 1, 'its': 1, 'ts&': 1, 's&p': 1, 'D=o': 2, '=on': 2, 'it&': 1, 't&p': 1, 'k-d': 1, '-da': 1, 'day': 1, 'ay-': 1, 'y-o': 1, '-on': 1, 'ne\n': 1, 'e\n""': 1, '\n""""': 1, '""\n\n': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f m': 1, ' mi': 2, 'niM': 2, 'iMa': 2, 'Max': 2, 'axS': 2, 'xSu': 2, 'Sum': 2, 'um(': 4, 'm(a': 2, '(ar': 3, 'arr': 7, 'rr)': 3, 'r):': 1, '):\n': 1, ':\n ': 2, '\n  ': 4, '   ': 8, '  s': 1, 'sor': 4, 'ort': 4, 'rte': 4, 'ted': 4, 'ed_': 3, 'd_a': 3, '_ar': 3, 'rr ': 2, 'r =': 2, ' = ': 2, '= s': 1, 'ed(': 1, 'd(a': 1, 'r)\n': 1, ')\n ': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 'nt(': 1, 't(s': 1, '(su': 1, 'm(s': 2, '(so': 2, 'rr[': 2, 'r[:': 1, '[:4': 1, ':4]': 1, '4])': 1, ']),': 1, '), ': 1, ', s': 1, ' su': 1, 'r[-': 1, '[-4': 1, '-4:': 1, '4:]': 1, ':])': 1, ']))': 1, '))\n': 2, ')\n\n': 2, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  a': 1, ' ar': 1, '= l': 1, ' li': 1, 'st(': 1, 't(m': 1, '(ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, '(in': 1, 'nt,': 1, 't, ': 1, ', i': 1, ' in': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut(': 1, 't()': 2, '().': 2, ').r': 1, '.rs': 1, 'rst': 1, 'str': 1, 'tri': 1, 'rip': 1, 'ip(': 1, 'p()': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, '())': 1, ')))': 1, '\n\n ': 1, '  m': 1}"
Tuhin Mitra,min_swaps.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""': 2, 'given': 1, 'an': 5, 'array': 6, 'of': 10, 'integers.': 1, 'find': 1, 'the': 16, 'minimum': 4, 'number': 3, 'swaps': 4, 'required': 4, 'to': 7, 'sort': 4, 'in': 7, 'non-decreasing': 1, 'order.': 1, 'input:': 2, 'first': 1, 'line': 3, 'input': 3, 'contains': 2, 'integer': 4, 't': 4, 'denoting': 4, 'no': 2, 'test': 5, 'cases.': 1, 'then': 1, 'cases': 1, 'follow.': 1, 'each': 2, 'case': 3, 'n': 5, 'element': 1, 'a[': 2, '].': 1, 'next': 1, 'are': 2, 'space': 1, 'separated': 1, 'values': 1, ']': 1, '.': 1, 'output:': 2, 'for': 7, 'a': 1, 'new': 1, 'output': 1, 'will': 1, 'be': 2, 'umber': 1, 'that': 1, 'array.': 2, 'constraints:': 1, '1': 6, '<=': 6, '100': 1, '105': 1, 'a[]': 1, '106': 1, 'user': 1, 'task:': 1, 'you': 1, ""don't"": 1, 'need': 2, 'read': 1, 'or': 1, 'print': 1, 'anything.': 1, 'your': 1, 'task': 1, 'is': 2, 'complete': 1, 'function': 1, 'minswaps()': 1, 'which': 1, 'takes': 1, 'arr[]': 1, 'and': 3, 'its': 1, 'size': 1, 'as': 1, 'inputs': 1, 'returns': 1, 'if': 4, 'already': 1, 'sorted,': 1, 'return': 3, '0.': 1, 'expected': 3, 'time': 1, 'complexity:': 1, 'o(nlogn).': 1, 'auxiliary': 1, 'space:': 1, 'o(n).': 1, 'example(to': 1, 'used': 1, 'only': 1, 'output):': 1, '2': 4, '5': 3, '4': 3, '3': 3, '8': 1, '9': 1, '16': 1, '15': 1, 'explanation:': 1, '1:': 1, 'we': 1, 'two': 1, 'swaps,': 1, 'swap': 1, 'with': 2, 'make': 1, 'it': 1, 'sorted.': 1, '#': 9, 'arra': 1, 'def': 1, 'minswaps(arr,': 1, 'n):': 1, 'code': 3, 'here': 1, 'value_to_pos': 1, '=': 17, 'dict()': 2, '#pos_to_value': 1, 'pos,': 1, 'val': 2, 'enumerate(sorted(arr)):': 1, '#o(n': 1, 'log': 1, 'n)': 1, 'value_to_pos[val]': 1, 'pos': 1, '#pos_to_value[pos]': 1, '#print(value_to_pos)': 1, '#print(pos_to_value)': 1, 'visited': 1, '[false': 1, '_': 1, 'range(len(arr))]': 1, 'counts': 3, '0': 1, 'i': 2, 'range(len(arr)):': 1, 'not': 2, 'visited[i]:': 1, 'visited[i]': 1, 'true': 2, 'arr[i]': 1, '==': 1, 'value_to_pos.get(arr[i]):': 1, 'continue': 1, 'else:': 1, 'tmp': 2, 'value_to_pos.get(arr[i])': 1, 'while': 1, 'visited[tmp]:': 1, 'visited[tmp]': 1, 'value_to_pos.get(arr[tmp])': 1, '+=': 1, 'solution': 1, 'contributed': 1, 'by:': 1, 'sebastian': 1, 'widmann': 1, '#{': 1, 'driver': 2, 'starts': 1, '#initial': 1, 'template': 1, 'python': 1, 'import': 3, 'atexit': 1, 'io': 1, 'sys': 1, '_input_lines': 1, 'sys.stdin.read().splitlines()': 1, 'iter(_input_lines).__next__': 1, '_output_buffer': 2, 'io.stringio()': 1, 'sys.stdout': 1, ""__name__=='__main__':"": 1, 'int(input())': 2, 'range(t):': 1, 'arr': 1, 'list(map(int,': 1, 'input().strip().split()))': 1, 'print(minswaps(arr,': 1, 'n))': 1, '}': 1, 'ends': 1}","{'""""""': 2, '""""\n': 2, '""\nG': 1, '\nGi': 1, 'Giv': 1, 'ive': 3, 'ven': 1, 'en ': 2, 'n a': 3, ' an': 9, 'an ': 6, ' ar': 14, 'arr': 20, 'rra': 9, 'ray': 8, 'ay ': 6, 'y o': 1, ' of': 10, 'of ': 10, 'f i': 2, ' in': 18, 'int': 13, 'nte': 5, 'teg': 5, 'ege': 5, 'ger': 5, 'ers': 1, 'rs.': 1, 's. ': 2, '. F': 1, ' Fi': 1, 'Fin': 1, 'ind': 1, 'nd ': 4, 'd t': 7, ' th': 16, 'the': 15, 'he ': 16, 'e m': 3, ' mi': 6, 'min': 7, 'ini': 4, 'nim': 4, 'imu': 4, 'mum': 4, 'um ': 4, 'm n': 3, ' nu': 3, 'num': 4, 'umb': 4, 'mbe': 4, 'ber': 4, 'er ': 11, 'r o': 4, 'f s': 4, ' sw': 6, 'swa': 6, 'wap': 9, 'aps': 8, 'ps ': 4, 's r': 3, ' re': 9, 'req': 4, 'equ': 4, 'qui': 4, 'uir': 4, 'ire': 4, 'red': 4, 'ed ': 13, ' to': 7, 'to ': 7, 'o s': 5, ' so': 7, 'sor': 7, 'ort': 10, 'rt ': 7, 't t': 4, 'e a': 10, 'y i': 2, 'in ': 6, 'n n': 1, ' no': 5, 'non': 1, 'on-': 1, 'n-d': 1, '-de': 1, 'dec': 1, 'ecr': 1, 'cre': 1, 'rea': 4, 'eas': 1, 'asi': 1, 'sin': 1, 'ing': 7, 'ng ': 5, 'g o': 1, ' or': 2, 'ord': 1, 'rde': 1, 'der': 1, 'er.': 1, 'r.\n': 1, '.\n\n': 4, '\n\nI': 1, '\nIn': 2, 'Inp': 2, 'npu': 9, 'put': 13, 'ut:': 4, 't:\n': 4, ':\nT': 2, '\nTh': 1, 'The': 2, 'e f': 4, ' fi': 1, 'fir': 1, 'irs': 1, 'rst': 1, 'st ': 6, 't l': 2, ' li': 4, 'lin': 4, 'ine': 4, 'ne ': 3, 'e o': 2, 'inp': 7, 'ut ': 5, 't c': 5, ' co': 8, 'con': 4, 'ont': 4, 'nta': 2, 'tai': 2, 'ain': 4, 'ins': 2, 'ns ': 3, 's a': 5, 'n i': 4, 'r T': 2, ' T ': 3, 'T d': 1, ' de': 4, 'den': 4, 'eno': 4, 'not': 6, 'oti': 4, 'tin': 5, 'g t': 3, 'e n': 5, 'no ': 2, 'o o': 2, 'f t': 4, ' te': 4, 'tes': 4, 'est': 5, ' ca': 4, 'cas': 4, 'ase': 5, 'ses': 2, 'es.': 1, '. T': 1, ' Th': 1, 'hen': 1, 'n T': 1, 'T t': 1, 'es ': 3, 's f': 1, ' fo': 7, 'fol': 1, 'oll': 1, 'llo': 1, 'low': 1, 'ow.': 1, 'w. ': 1, '. E': 1, ' Ea': 1, 'Eac': 1, 'ach': 2, 'ch ': 3, 'h t': 3, 'se ': 4, 'e c': 1, 'r N': 1, ' N ': 4, 'N d': 1, 'f e': 1, ' el': 2, 'ele': 1, 'lem': 1, 'eme': 1, 'men': 1, 'ent': 1, 'nt ': 2, 't o': 2, 'y A': 2, ' A[': 3, 'A[ ': 2, '[ ]': 2, ' ].': 1, ']. ': 1, '. I': 2, ' In': 1, 'In ': 1, 'n t': 2, ' ne': 4, 'nex': 2, 'ext': 2, 'xt ': 1, 'are': 2, 're ': 2, 'e N': 2, 'N s': 1, ' sp': 1, 'spa': 1, 'pac': 2, 'ace': 2, 'ce ': 1, 'e s': 1, ' se': 1, 'sep': 1, 'epa': 1, 'par': 1, 'ara': 1, 'rat': 2, 'ate': 4, 'ted': 13, 'd v': 1, ' va': 8, 'val': 13, 'alu': 10, 'lue': 10, 'ues': 1, 's o': 1, ' ] ': 1, '] .': 1, ' .\n': 1, '\n\nO': 2, '\nOu': 2, 'Out': 2, 'utp': 4, 'tpu': 4, ':\nF': 1, '\nFo': 1, 'For': 1, 'or ': 8, 'r e': 2, ' ea': 1, 'eac': 1, 'e i': 2, ' a ': 1, 'a n': 1, 'new': 1, 'ew ': 1, 'w l': 1, ' ou': 2, 'out': 3, 't w': 1, ' wi': 3, 'wil': 1, 'ill': 1, 'll ': 1, 'l b': 1, ' be': 2, 'be ': 2, 'r d': 2, 'g  ': 1, '  m': 1, 'm u': 1, ' um': 1, 's t': 3, 'tha': 1, 'hat': 1, 'at ': 1, 't a': 3, 'e  ': 1, '  r': 2, 'ay.': 2, 'y.\n': 1, '\n\nC': 1, '\nCo': 1, 'Con': 1, 'ons': 1, 'nst': 1, 'str': 2, 'tra': 1, 'rai': 1, 'nts': 4, 'ts:': 1, 's:\n': 1, ':\n1': 1, '\n1 ': 4, '1 <': 3, ' <=': 6, '<= ': 6, '= T': 3, 'T <': 1, '= 1': 4, ' 10': 3, '100': 1, '00\n': 1, '0\n1': 1, '= N': 1, 'N <': 1, '105': 1, '05\n': 1, '5\n1': 2, '= A': 1, 'A[]': 1, '[] ': 2, '] <': 1, '106': 1, '06\n': 1, '6\n\n': 1, '\n\nU': 1, '\nUs': 1, 'Use': 1, 'ser': 1, ' Ta': 1, 'Tas': 1, 'ask': 2, 'sk:': 1, 'k:\n': 1, ':\nY': 1, '\nYo': 1, 'You': 2, 'ou ': 1, 'u d': 1, ' do': 1, 'don': 1, ""on'"": 1, ""n't"": 1, ""'t "": 1, 't n': 1, 'nee': 2, 'eed': 2, 'o r': 1, 'ead': 3, 'ad ': 1, 'd i': 2, 'r p': 2, ' pr': 2, 'pri': 4, 'rin': 5, 'any': 1, 'nyt': 1, 'yth': 2, 'thi': 1, 'hin': 1, 'ng.': 1, 'g. ': 1, '. Y': 1, ' Yo': 1, 'our': 1, 'ur ': 1, 'r t': 1, ' ta': 2, 'tas': 1, 'sk ': 1, 'k i': 1, ' is': 2, 'is ': 2, 'o c': 1, 'com': 1, 'omp': 2, 'mpl': 4, 'ple': 3, 'let': 1, 'ete': 1, 'te ': 2, 'e t': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 3, 'ion': 3, 'on ': 3, 'n m': 1, 'inS': 3, 'nSw': 3, 'Swa': 3, 'ps(': 3, 's()': 2, '() ': 1, ') w': 1, ' wh': 2, 'whi': 2, 'hic': 1, 'ich': 1, 'tak': 1, 'ake': 2, 'kes': 1, 'y a': 1, 'rr[': 5, 'r[]': 1, '] a': 1, 'and': 3, ' it': 3, 'its': 1, 'ts ': 4, 's s': 1, ' si': 1, 'siz': 1, 'ize': 1, 'ze ': 1, 'N a': 1, ' as': 1, 'as ': 1, 's i': 1, 'uts': 1, 'd r': 1, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rns': 1, 'y. ': 1, ' If': 1, 'If ': 1, ' al': 1, 'alr': 1, 'lre': 1, 'ady': 1, 'dy ': 1, 'y s': 1, 'rte': 3, 'ed,': 1, 'd, ': 1, ', r': 1, 'rn ': 3, 'n 0': 1, ' 0.': 1, '0. ': 1, '. \n': 2, ' \n\n': 1, '\n\nE': 3, '\nEx': 4, 'Exp': 3, 'xpe': 3, 'pec': 3, 'ect': 3, 'cte': 3, 'd T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me ': 1, 'e C': 1, ' Co': 4, 'Com': 1, 'lex': 1, 'exi': 2, 'xit': 2, 'ity': 1, 'ty:': 1, 'y: ': 2, ': O': 2, ' O(': 2, 'O(N': 2, '(Nl': 1, 'Nlo': 1, 'log': 2, 'ogN': 1, 'gN)': 1, 'N).': 2, ').\n': 2, '.\nE': 1, 'd A': 1, ' Au': 1, 'Aux': 1, 'uxi': 1, 'xil': 1, 'ili': 1, 'lia': 1, 'iar': 1, 'ary': 1, 'ry ': 1, 'y S': 1, ' Sp': 1, 'Spa': 1, 'ce:': 1, 'e: ': 1, '(N)': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'le(': 1, 'e(T': 1, '(To': 1, 'To ': 1, 'o b': 1, 'e u': 1, ' us': 1, 'use': 1, 'sed': 1, 'd o': 2, ' on': 1, 'onl': 1, 'nly': 1, 'ly ': 1, 'y f': 1, 'for': 6, ' ex': 1, 'exp': 1, 'ut)': 1, 't):': 2, '):\n': 5, ':\nI': 1, ':\n2': 2, '\n2\n': 2, '2\n5': 1, '\n5\n': 1, '1 5': 1, ' 5 ': 2, '5 4': 1, ' 4 ': 2, '4 3': 1, ' 3 ': 2, '3 2': 1, ' 2\n': 1, '2\n4': 1, '\n4\n': 1, '4\n8': 1, '\n8 ': 1, '8 9': 1, ' 9 ': 1, '9 1': 1, ' 16': 1, '16 ': 1, '6 1': 1, ' 15': 1, '15\n': 1, '5\n\n': 1, '2\n1': 1, '\n1\n': 1, '1\n\n': 2, 'xpl': 1, 'pla': 2, 'lan': 1, 'ana': 1, 'nat': 1, 'ati': 1, 'on:': 1, 'n:\n': 1, '\nTe': 1, 'Tes': 1, 't C': 1, ' Ca': 1, 'Cas': 1, 'e 1': 1, ' 1:': 1, '1: ': 1, ': W': 1, ' We': 1, 'We ': 1, ' tw': 1, 'two': 1, 'wo ': 1, 'ps,': 1, 's, ': 2, ', s': 1, 'ap ': 1, 'p 2': 1, ' 2 ': 1, '2 w': 1, 'wit': 2, 'ith': 2, 'th ': 2, 'h 5': 1, '5 a': 1, 'd 3': 1, '3 w': 1, 'h 4': 1, '4 t': 1, 'o m': 1, ' ma': 1, 'mak': 1, 'ke ': 1, 'it ': 1, 't s': 2, 'ed.': 1, 'd. ': 1, ' \n""': 1, '\n""""': 1, '""\n\n': 1, '\n\n\n': 2, '\n\n#': 5, '\n# ': 8, '# r': 1, 'ra\n': 1, 'a\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f m': 1, 's(a': 2, '(ar': 8, 'rr,': 2, 'r, ': 2, ', N': 1, ' N)': 1, 'N):': 1, ':\n ': 8, '\n  ': 27, '   ': 186, '  #': 5, ' # ': 1, '# C': 1, 'Cod': 3, 'ode': 3, 'de ': 3, 'e h': 1, ' he': 1, 'her': 1, 'ere': 1, 're\n': 1, 'e\n ': 3, '  v': 5, 'ue_': 6, 'e_t': 6, '_to': 9, 'to_': 9, 'o_p': 6, '_po': 6, 'pos': 12, 'os ': 1, 's =': 2, ' = ': 17, '= d': 2, ' di': 2, 'dic': 2, 'ict': 2, 'ct(': 2, 't()': 6, '()\n': 4, ')\n ': 8, ' #p': 4, '#po': 2, 'os_': 3, 's_t': 3, 'o_v': 3, '_va': 3, 'ue ': 1, 'e =': 1, ')\n\n': 3, '\n\n ': 4, '  f': 3, ' po': 2, 'os,': 1, ', v': 1, 'al ': 2, 'l i': 1, 'n e': 1, ' en': 1, 'enu': 1, 'ume': 1, 'mer': 1, 'era': 1, 'te(': 1, 'e(s': 1, '(so': 1, 'ed(': 1, 'd(a': 1, 'rr)': 3, 'r))': 3, ')):': 2, '): ': 1, ': #': 1, ' #O': 1, '#O(': 1, 'O(n': 1, '(n ': 1, 'n l': 1, ' lo': 1, 'og ': 1, 'g n': 1, ' n)': 2, 'n)\n': 1, 'os[': 1, 's[v': 1, '[va': 1, 'al]': 1, 'l] ': 1, '] =': 5, '= p': 1, 'os\n': 1, 's\n ': 1, 'ue[': 1, 'e[p': 1, '[po': 1, 'os]': 1, 's] ': 1, '= v': 4, 'al\n': 1, 'l\n ': 1, '#pr': 2, 'nt(': 5, 't(v': 1, '(va': 1, 'os)': 1, 's)\n': 1, 't(p': 1, '(po': 1, 'ue)': 1, 'e)\n': 1, ' vi': 5, 'vis': 5, 'isi': 5, 'sit': 5, 'ite': 6, 'd =': 1, '= [': 1, ' [F': 1, '[Fa': 1, 'Fal': 1, 'als': 1, 'lse': 2, 'r _': 1, ' _ ': 1, '_ i': 1, 'n r': 3, ' ra': 3, 'ran': 3, 'ang': 3, 'nge': 3, 'ge(': 3, 'e(l': 2, '(le': 2, 'len': 2, 'en(': 2, 'n(a': 2, '))]': 1, ')]\n': 1, ']\n ': 1, '  c': 3, 'cou': 3, 'oun': 3, 'unt': 3, '= 0': 1, ' 0\n': 1, '0\n ': 1, 'r i': 2, ' i ': 2, 'i i': 2, '  i': 2, ' if': 2, 'if ': 3, 'f n': 1, 'ot ': 2, 't v': 2, 'ed[': 4, 'd[i': 2, '[i]': 5, 'i]:': 1, ']:\n': 2, 'i] ': 2, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue\n': 3, 'e\n\n': 1, 'f a': 1, 'r[i': 3, ' ==': 1, '== ': 1, 'os.': 3, 's.g': 3, '.ge': 3, 'get': 3, 'et(': 3, 't(a': 3, 'i])': 2, ']):': 1, 'nti': 1, 'inu': 1, 'nue': 1, '  e': 1, 'els': 1, 'se:': 1, 'e:\n': 1, '  t': 3, ' tm': 2, 'tmp': 5, 'mp ': 2, 'p =': 2, '])\n': 2, '  w': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'd[t': 2, '[tm': 3, 'mp]': 3, 'p]:': 1, 'p] ': 1, 'r[t': 1, 'p])': 1, 's +': 1, ' +=': 1, '+= ': 1, ' 1\n': 1, 'n c': 2, 'ts\n': 2, 's\n\n': 2, '# s': 2, 'sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'ntr': 1, 'tri': 3, 'rib': 1, 'ibu': 1, 'but': 1, 'ute': 1, 'd b': 1, ' by': 1, 'by:': 1, ': S': 1, ' Se': 1, 'Seb': 1, 'eba': 1, 'bas': 1, 'ast': 1, 'sti': 1, 'tia': 2, 'ian': 1, 'n W': 1, ' Wi': 1, 'Wid': 1, 'idm': 1, 'dma': 1, 'man': 1, 'ann': 1, 'nn\n': 1, 'n\n\n': 1, '\n#{': 1, '#{ ': 1, '{ \n': 1, ' \n#': 1, '#  ': 1, '  D': 1, ' Dr': 2, 'Dri': 2, 'riv': 2, 'ver': 2, 'r C': 2, 'e S': 1, ' St': 1, 'Sta': 1, 'tar': 1, 'art': 1, 'rts': 1, 's\n#': 1, '\n#I': 1, '#In': 1, 'Ini': 1, 'nit': 1, 'iti': 1, 'ial': 1, 'l T': 1, ' Te': 1, 'Tem': 1, 'emp': 1, 'lat': 1, 'r P': 1, ' Py': 1, 'Pyt': 1, 'tho': 1, 'hon': 1, 'n 3': 1, ' 3\n': 1, '3\n\n': 1, '\n\ni': 2, '\nim': 3, 'imp': 3, 'mpo': 3, 'por': 3, ' at': 1, 'tex': 1, 'it\n': 1, 't\ni': 1, 't i': 1, ' io': 2, 'io\n': 1, 'o\ni': 1, ' sy': 3, 'sys': 3, 'ys\n': 1, '# _': 2, ' _I': 1, '_IN': 2, 'INP': 2, 'NPU': 2, 'PUT': 4, 'UT_': 4, 'T_L': 2, '_LI': 2, 'LIN': 2, 'INE': 2, 'NES': 2, 'ES ': 1, 'S =': 1, '= s': 1, 'ys.': 2, 's.s': 2, '.st': 3, 'std': 2, 'tdi': 1, 'din': 1, 'in.': 1, 'n.r': 1, '.re': 1, 'ad(': 1, 'd()': 1, '().': 3, ').s': 3, '.sp': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'itl': 1, 'tli': 1, 'nes': 1, 'es(': 1, ')\n#': 2, '# i': 1, 't =': 3, '= i': 4, 'ter': 1, 'er(': 1, 'r(_': 1, '(_I': 1, 'ES)': 1, 'S).': 1, ')._': 1, '.__': 1, '__n': 2, '_ne': 1, 'xt_': 1, 't__': 1, '__\n': 1, '_\n#': 1, ' _O': 2, '_OU': 2, 'OUT': 2, 'UTP': 2, 'TPU': 2, 'T_B': 2, '_BU': 2, 'BUF': 2, 'UFF': 2, 'FFE': 2, 'FER': 2, 'ER ': 1, 'R =': 1, 'io.': 1, 'o.S': 1, '.St': 1, 'Str': 1, 'ngI': 1, 'gIO': 1, 'IO(': 1, 'O()': 1, 'tdo': 1, 'dou': 1, '= _': 1, 'ER\n': 1, 'R\n\n': 1, '\nif': 1, 'f _': 1, ' __': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__=': 1, '_==': 1, ""=='"": 1, ""='_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, ' t ': 1, 't(i': 2, '(in': 3, 'ut(': 3, '())': 3, '))\n': 4, 'e(t': 1, '(t)': 1, '  n': 1, ' n ': 1, 'n =': 1, '  a': 1, 'rr ': 1, 'r =': 1, '= l': 1, 'lis': 1, 'ist': 1, 'st(': 1, 't(m': 2, '(ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, 't, ': 1, ', i': 1, 'rip': 1, 'ip(': 1, 'p()': 1, 'it(': 1, ')))': 1, '  p': 1, '(mi': 1, ', n': 1, 'n))': 1, '# }': 1, ' } ': 1, '} D': 1, 'e E': 1, ' En': 1, 'End': 1, 'nds': 1}"
Tuhin Mitra,mock-test-d2.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'def': 1, 'flippingmatrix(matrix):': 1, 'half_length': 1, '=': 7, 'len(matrix)': 1, '//': 1, '2': 1, 'max_sum': 3, '0': 1, '#': 2, 'iterate': 2, 'in': 6, 'the': 4, 'top': 2, 'left': 2, 'quadrant': 2, 'of': 2, 'matrix': 3, 'for': 4, 'i': 1, 'range(half_length):': 2, 'j': 1, '+=': 1, 'max(': 1, 'max(matrix[i][j],': 1, 'matrix[i][2*half_length-1-j]),': 1, 'max(matrix[2*half_length-1-i][j],': 1, 'matrix[2*half_length-1-i][2*half_length-1-j])': 1, ')': 1, 'return': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'fptr': 1, 'open(""../output.txt"",': 1, ""'w')"": 1, 'q': 1, 'int(input().strip())': 2, 'q_itr': 1, 'range(q):': 1, 'n': 1, '[]': 1, '_': 1, 'range(2': 1, '*': 1, 'n):': 1, 'matrix.append(list(map(int,': 1, 'input().rstrip().split())))': 1, 'result': 1, 'flippingmatrix(matrix)': 1, 'fptr.write(str(result)': 1, '+': 1, ""'\\n')"": 1, 'fptr.close()': 1}","{'def': 1, 'ef ': 1, 'f f': 1, ' fl': 2, 'fli': 2, 'lip': 2, 'ipp': 2, 'ppi': 2, 'pin': 2, 'ing': 2, 'ngM': 2, 'gMa': 2, 'Mat': 2, 'atr': 13, 'tri': 16, 'rix': 13, 'ix(': 2, 'x(m': 4, '(ma': 6, 'mat': 11, 'ix)': 3, 'x):': 1, '):\n': 5, ':\n ': 6, '\n  ': 21, '   ': 118, '  h': 1, ' ha': 1, 'hal': 7, 'alf': 7, 'lf_': 7, 'f_l': 7, '_le': 7, 'len': 8, 'eng': 7, 'ngt': 7, 'gth': 7, 'th ': 1, 'h =': 1, ' = ': 7, '= l': 1, ' le': 3, 'en(': 2, 'n(m': 1, 'x) ': 1, ') /': 1, ' //': 1, '// ': 1, '/ 2': 1, ' 2\n': 1, '2\n ': 1, '  m': 6, ' ma': 12, 'max': 6, 'ax_': 3, 'x_s': 3, '_su': 3, 'sum': 3, 'um ': 2, 'm =': 1, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  #': 2, ' # ': 2, '# i': 2, ' it': 2, 'ite': 3, 'ter': 2, 'era': 2, 'rat': 2, 'ate': 2, 'te ': 2, 'e i': 2, ' in': 9, 'in ': 6, 'n t': 2, ' th': 4, 'the': 4, 'he ': 4, 'e t': 2, ' to': 2, 'top': 2, 'op ': 2, 'p l': 2, 'lef': 2, 'eft': 2, 'ft ': 2, 't q': 2, ' qu': 2, 'qua': 2, 'uad': 2, 'adr': 2, 'dra': 2, 'ran': 6, 'ant': 2, 'nt ': 2, 't o': 2, ' of': 2, 'of ': 2, 'f t': 2, 'e m': 2, 'ix\n': 2, 'x\n\n': 1, '\n\n ': 9, '  f': 7, ' fo': 4, 'for': 4, 'or ': 4, 'r i': 2, ' i ': 1, 'i i': 1, 'n r': 4, ' ra': 4, 'ang': 4, 'nge': 4, 'ge(': 4, 'e(h': 2, '(ha': 2, 'th)': 2, 'h):': 2, 'x\n ': 1, 'r j': 1, ' j ': 1, 'j i': 1, 'm +': 1, ' +=': 1, '+= ': 1, '= m': 1, 'ax(': 3, 'x(\n': 1, '(\n ': 1, 'ix[': 4, 'x[i': 2, '[i]': 2, 'i][': 4, '][j': 2, '[j]': 2, 'j],': 2, '], ': 2, ', m': 2, '][2': 2, '[2*': 4, '2*h': 4, '*ha': 4, 'th-': 4, 'h-1': 4, '-1-': 4, '1-j': 2, '-j]': 2, 'j])': 2, ']),': 1, '),\n': 1, ',\n ': 1, 'x[2': 2, '1-i': 2, '-i]': 2, '])\n': 1, ')\n ': 1, '  )': 1, ' )\n': 1, ')\n\n': 7, '  r': 2, ' re': 2, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n m': 1, 'um\n': 1, 'm\n\n': 1, '\n\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, ' fp': 3, 'fpt': 3, 'ptr': 3, 'tr ': 2, 'r =': 1, '= o': 1, ' op': 1, 'ope': 1, 'pen': 2, 'n(""': 1, '("".': 1, '""..': 1, '../': 1, './o': 1, '/ou': 1, 'out': 1, 'utp': 1, 'tpu': 1, 'put': 4, 'ut.': 1, 't.t': 1, '.tx': 1, 'txt': 1, 'xt""': 1, 't"",': 1, '"", ': 1, "", '"": 1, "" 'w"": 1, ""'w'"": 1, ""w')"": 1, ""')\n"": 2, '  q': 1, ' q ': 1, 'q =': 1, '= i': 2, 'int': 3, 'nt(': 2, 't(i': 2, '(in': 3, 'inp': 3, 'npu': 3, 'ut(': 3, 't()': 4, '().': 4, ').s': 3, '.st': 2, 'str': 4, 'rip': 3, 'ip(': 3, 'p()': 3, '())': 3, '))\n': 3, 'r q': 1, ' q_': 1, 'q_i': 1, '_it': 1, 'itr': 1, 'e(q': 1, '(q)': 1, 'q):': 1, '  n': 1, ' n ': 1, 'n =': 1, 'ix ': 1, 'x =': 1, '= [': 1, ' []': 1, '[]\n': 1, ']\n\n': 1, 'r _': 1, ' _ ': 1, '_ i': 1, 'e(2': 1, '(2 ': 1, '2 *': 1, ' * ': 1, '* n': 1, ' n)': 1, 'n):': 1, 'ix.': 1, 'x.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'end': 1, 'nd(': 1, 'd(l': 1, '(li': 1, 'lis': 1, 'ist': 1, 'st(': 1, 't(m': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, 't, ': 1, ', i': 1, ').r': 1, '.rs': 1, 'rst': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, ')))': 2, 'res': 2, 'esu': 2, 'sul': 2, 'ult': 2, 'lt ': 1, 't =': 1, '= f': 1, 'x)\n': 1, 'tr.': 2, 'r.w': 1, '.wr': 1, 'wri': 1, 'rit': 1, 'te(': 1, 'e(s': 1, '(st': 1, 'tr(': 1, 'r(r': 1, '(re': 1, 'lt)': 1, 't) ': 1, ') +': 1, ' + ': 1, ""+ '"": 1, "" '\\"": 1, ""'\\n"": 1, ""\\n'"": 1, ""n')"": 1, 'r.c': 1, '.cl': 1, 'clo': 1, 'los': 1, 'ose': 1, 'se(': 1, 'e()': 1}"
Tuhin Mitra,mock_test_d1.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""': 4, 'find': 2, 'the': 3, 'media': 1, 'element': 2, 'of': 1, 'array': 1, 'def': 1, 'findmedian(arr):': 1, 'median': 1, 'from': 1, 'arr': 1, ':param': 1, 'arr:': 1, ':return:': 1, 'len_arr': 2, '=': 1, 'len(arr)': 1, 'if': 1, '>': 1, '1:': 1, 'return': 2, 'list(sorted(arr))[len_arr': 1, '//': 1, '2]': 1, 'else:': 1, 'arr[0]': 1}","{'""""""': 4, '""""\n': 4, '""\nF': 1, '\nFi': 1, 'Fin': 1, 'ind': 3, 'nd ': 2, 'd t': 1, ' th': 3, 'the': 3, 'he ': 3, 'e m': 1, ' me': 2, 'med': 2, 'edi': 3, 'dia': 3, 'ia ': 1, 'a e': 1, ' el': 3, 'ele': 2, 'lem': 2, 'eme': 2, 'men': 2, 'ent': 2, 'nt ': 2, 't o': 1, ' of': 1, 'of ': 1, 'f t': 1, 'e a': 2, ' ar': 4, 'arr': 10, 'rra': 1, 'ray': 1, 'ay\n': 1, 'y\n""': 1, '\n""""': 1, '""\n\n': 1, '\n\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f f': 1, ' fi': 2, 'fin': 2, 'ndM': 1, 'dMe': 1, 'Med': 1, 'ian': 2, 'an(': 1, 'n(a': 2, '(ar': 3, 'rr)': 3, 'r):': 1, '):\n': 1, ':\n ': 5, '\n  ': 10, '   ': 28, '  ""': 2, ' """"': 2, '""\n ': 2, '  f': 1, 'd m': 1, 'an ': 1, 'n e': 1, 't f': 1, ' fr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm t': 1, 'rr\n': 1, 'r\n ': 1, '  :': 2, ' :p': 1, ':pa': 1, 'par': 1, 'ara': 1, 'ram': 1, 'am ': 1, 'm a': 1, 'rr:': 1, 'r:\n': 1, ' :r': 1, ':re': 1, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn:': 1, 'n:\n': 1, '  l': 1, ' le': 3, 'len': 4, 'en_': 3, 'n_a': 3, '_ar': 3, 'rr ': 3, 'r =': 1, ' = ': 1, '= l': 1, 'en(': 1, 'r)\n': 1, ')\n ': 1, '  i': 1, ' if': 1, 'if ': 1, 'f l': 1, 'r >': 1, ' > ': 1, '> 1': 1, ' 1:': 1, '1:\n': 1, '  r': 2, ' re': 2, 'rn ': 2, 'n l': 1, ' li': 1, 'lis': 1, 'ist': 1, 'st(': 1, 't(s': 1, '(so': 1, 'sor': 1, 'ort': 1, 'rte': 1, 'ted': 1, 'ed(': 1, 'd(a': 1, 'r))': 1, '))[': 1, ')[l': 1, '[le': 1, 'r /': 1, ' //': 1, '// ': 1, '/ 2': 1, ' 2]': 1, '2]\n': 1, ']\n ': 1, '  e': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, 'n a': 1, 'rr[': 1, 'r[0': 1, '[0]': 1}"
Tuhin Mitra,pile_of_coins.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""': 2, 'problem': 1, 'link:': 1, 'https://www.hackerearth.com/problem/algorithm/maximum-profit-5-c3c2ce7c/': 1, 'hackerearth': 1, 'january': 1, 'easy': 1, '21': 1, '#': 2, 'write': 1, 'your': 1, 'code': 1, 'here': 1, 't': 2, '=': 5, 'int(input())': 1, 'test': 1, 'cases': 1, 'while': 1, 't:': 1, 'n,': 1, 'k': 2, 'list(map(int,': 1, 'input().split()))': 1, 'coins': 1, 'list(set(map(int,': 1, 'input().split())))': 1, 'coins_sorted': 1, 'sorted(coins)': 1, 'max_sum': 2, '0': 1, 'for': 1, 'i': 1, 'in': 1, 'range(len(coins_sorted)-1,-1,-1):': 1, 'if': 1, 'k:': 1, '+=': 1, 'coins_sorted[i]': 1, '-=': 2, '1': 2, 'print(max_sum)': 1}","{'""""""': 2, '""""\n': 2, '""\nP': 1, '\nPr': 1, 'Pro': 1, 'rob': 2, 'obl': 2, 'ble': 2, 'lem': 2, 'em ': 1, 'm l': 1, ' li': 3, 'lin': 1, 'ink': 1, 'nk:': 1, 'k: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.h': 1, '.ha': 1, 'hac': 1, 'ack': 2, 'cke': 2, 'ker': 2, 'ere': 2, 'rea': 1, 'ear': 1, 'art': 2, 'rth': 2, 'th.': 1, 'h.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/p': 1, '/pr': 1, 'pro': 2, 'em/': 1, 'm/a': 1, '/al': 1, 'alg': 1, 'lgo': 1, 'gor': 1, 'ori': 1, 'rit': 2, 'ith': 1, 'thm': 1, 'hm/': 1, 'm/m': 1, '/ma': 1, 'max': 4, 'axi': 1, 'xim': 1, 'imu': 1, 'mum': 1, 'um-': 1, 'm-p': 1, '-pr': 1, 'rof': 1, 'ofi': 1, 'fit': 1, 'it-': 1, 't-5': 1, '-5-': 1, '5-c': 1, '-c3': 1, 'c3c': 1, '3c2': 1, 'c2c': 1, '2ce': 1, 'ce7': 1, 'e7c': 1, '7c/': 1, 'c/\n': 1, '/\nH': 1, '\nHa': 1, 'Hac': 1, 'erE': 1, 'rEa': 1, 'Ear': 1, 'th ': 1, 'h j': 1, ' ja': 1, 'jan': 1, 'anu': 1, 'nua': 1, 'uar': 1, 'ary': 1, 'ry ': 1, 'y e': 1, ' ea': 1, 'eas': 1, 'asy': 1, 'sy ': 1, 'y 2': 1, ' 21': 1, '21\n': 1, '1\n""': 1, '\n""""': 1, '""\n\n': 1, '\n\n#': 1, '\n# ': 1, '# W': 1, ' Wr': 1, 'Wri': 1, 'ite': 1, 'te ': 1, 'e y': 1, ' yo': 1, 'you': 1, 'our': 1, 'ur ': 1, 'r c': 1, ' co': 4, 'cod': 1, 'ode': 1, 'de ': 1, 'e h': 1, ' he': 1, 'her': 1, 're\n': 1, 'e\nt': 1, '\nt ': 1, 't =': 1, ' = ': 5, '= i': 1, ' in': 4, 'int': 4, 'nt(': 2, 't(i': 1, '(in': 3, 'inp': 3, 'npu': 3, 'put': 3, 'ut(': 3, 't()': 5, '())': 3, ')) ': 1, ')  ': 1, '  #': 1, ' # ': 1, '# t': 1, ' te': 1, 'tes': 1, 'est': 1, 'st ': 1, 't c': 1, ' ca': 1, 'cas': 1, 'ase': 1, 'ses': 1, 'es\n': 1, 's\n\n': 1, '\n\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e t': 1, ' t:': 1, 't:\n': 1, ':\n ': 3, '\n  ': 10, '   ': 40, '  n': 1, ' n,': 1, 'n, ': 1, ', k': 1, ' k ': 2, 'k =': 1, '= l': 2, 'lis': 2, 'ist': 2, 'st(': 2, 't(m': 3, '(ma': 3, 'map': 2, 'ap(': 2, 'p(i': 2, 'nt,': 2, 't, ': 2, ', i': 2, '().': 2, ').s': 2, '.sp': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'it(': 2, ')))': 3, '))\n': 2, ')\n ': 4, '  c': 2, 'coi': 5, 'oin': 5, 'ins': 5, 'ns ': 1, 's =': 1, 't(s': 1, '(se': 1, 'set': 1, 'et(': 1, 'ns_': 3, 's_s': 3, '_so': 3, 'sor': 4, 'ort': 4, 'rte': 4, 'ted': 4, 'ed ': 1, 'd =': 1, '= s': 1, ' so': 1, 'ed(': 1, 'd(c': 1, '(co': 2, 'ns)': 1, 's)\n': 1, '  m': 2, ' ma': 2, 'ax_': 3, 'x_s': 3, '_su': 3, 'sum': 3, 'um ': 2, 'm =': 1, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, 'in ': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(l': 1, '(le': 1, 'len': 1, 'en(': 1, 'n(c': 1, 'ed)': 1, 'd)-': 1, ')-1': 1, '-1,': 2, '1,-': 2, ',-1': 2, '-1)': 1, '1):': 1, '):\n': 1, '  i': 1, ' if': 1, 'if ': 1, 'f k': 1, ' k:': 1, 'k:\n': 1, 'm +': 1, ' +=': 1, '+= ': 1, '= c': 1, 'ed[': 1, 'd[i': 1, '[i]': 1, 'i]\n': 1, ']\n ': 1, '  k': 1, 'k -': 1, ' -=': 2, '-= ': 2, '= 1': 2, ' 1\n': 1, '1\n ': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 'um)': 1, 'm)\n': 1, '  t': 1, ' t ': 1, 't -': 1}"
Tuhin Mitra,plus_minus.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""': 2, 'problem': 1, 'solved:': 1, 'https://www.hackerrank.com/challenges/one-week-preparation-kit-plus-minus/problem?isfullscreen=true&h_l=interview&playlist_slugs%5b%5d=preparation-kits&playlist_slugs%5b%5d=one-week-preparation-kit&playlist_slugs%5b%5d=one-week-day-one': 1, '#': 8, '!/bin/python3': 1, 'import': 6, 'math': 1, 'os': 1, 'random': 1, 're': 1, 'sys': 1, 'from': 1, 'collections': 1, 'defaultdict': 1, 'complete': 1, 'the': 3, ""'plusminus'"": 1, 'function': 2, 'below.': 1, 'accepts': 1, 'integer_array': 1, 'arr': 2, 'as': 1, 'parameter.': 1, 'def': 1, 'plusminus(arr):': 1, 'd': 1, '=': 6, 'defaultdict(int)': 1, 'for': 1, 'i': 3, 'in': 1, 'arr:': 1, 'if': 2, '>': 1, '0:': 2, ""d['pos']"": 2, '+=': 3, '1': 3, 'elif': 1, '<': 1, ""d['neg']"": 2, 'else:': 1, ""d['zero']"": 2, 'find': 1, 'ratios': 2, 'of': 1, 'positive,': 1, 'negative': 1, 'and': 1, 'zero': 1, 'pos_ratio': 1, '/': 3, 'len(arr)': 3, 'neg_ratio': 1, 'zero_ratio': 1, 'print': 1, 'print(f""{pos_ratio:.06f}"")': 1, 'print(f""{neg_ratio:.06f}"")': 1, 'print(f""{zero_ratio:.06f}"")': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'n': 1, 'int(input().strip())': 1, 'list(map(int,': 1, 'input().rstrip().split()))': 1, 'plusminus(arr)': 1}","{'""""""': 2, '""""\n': 2, '""\nP': 1, '\nPr': 1, 'Pro': 1, 'rob': 2, 'obl': 2, 'ble': 2, 'lem': 2, 'em ': 1, 'm s': 1, ' so': 1, 'sol': 1, 'olv': 1, 'lve': 1, 'ved': 1, 'ed:': 1, 'd: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.h': 1, '.ha': 1, 'hac': 1, 'ack': 1, 'cke': 1, 'ker': 1, 'err': 1, 'rra': 1, 'ran': 2, 'ank': 1, 'nk.': 1, 'k.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/c': 1, '/ch': 1, 'cha': 1, 'hal': 1, 'all': 1, 'lle': 2, 'len': 4, 'eng': 1, 'nge': 1, 'ges': 1, 'es/': 1, 's/o': 1, '/on': 1, 'one': 4, 'ne-': 3, 'e-w': 3, '-we': 3, 'wee': 3, 'eek': 3, 'ek-': 3, 'k-p': 2, '-pr': 2, 'pre': 3, 'rep': 3, 'epa': 3, 'par': 4, 'ara': 4, 'rat': 11, 'ati': 12, 'tio': 14, 'ion': 6, 'on-': 3, 'n-k': 3, '-ki': 3, 'kit': 3, 'it-': 1, 't-p': 1, '-pl': 1, 'plu': 4, 'lus': 4, 'us-': 1, 's-m': 1, '-mi': 1, 'min': 1, 'inu': 4, 'nus': 4, 'us/': 1, 's/p': 1, '/pr': 1, 'pro': 1, 'em?': 1, 'm?i': 1, '?is': 1, 'isF': 1, 'sFu': 1, 'Ful': 1, 'ull': 1, 'llS': 1, 'lSc': 1, 'Scr': 1, 'cre': 1, 'ree': 1, 'een': 1, 'en=': 1, 'n=t': 1, '=tr': 1, 'tru': 1, 'rue': 1, 'ue&': 1, 'e&h': 1, '&h_': 1, 'h_l': 1, '_l=': 1, 'l=i': 1, '=in': 1, 'int': 8, 'nte': 1, 'ter': 2, 'erv': 1, 'rvi': 1, 'vie': 1, 'iew': 1, 'ew&': 1, 'w&p': 1, '&pl': 3, 'pla': 3, 'lay': 3, 'ayl': 3, 'yli': 3, 'lis': 4, 'ist': 4, 'st_': 3, 't_s': 3, '_sl': 3, 'slu': 3, 'lug': 3, 'ugs': 3, 'gs%': 3, 's%5': 3, '%5B': 3, '5B%': 3, 'B%5': 3, '%5D': 3, '5D=': 3, 'D=p': 1, '=pr': 1, 'its': 1, 'ts&': 1, 's&p': 1, 'D=o': 2, '=on': 2, 'it&': 1, 't&p': 1, 'k-d': 1, '-da': 1, 'day': 1, 'ay-': 1, 'y-o': 1, '-on': 1, 'ne\n': 1, 'e\n""': 1, '\n""""': 1, '""\n#': 1, '\n# ': 3, '# !': 1, ' !/': 1, '!/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 1, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\n\n': 1, '\n\ni': 2, '\nim': 5, 'imp': 6, 'mpo': 6, 'por': 6, 'ort': 6, 'rt ': 6, 't m': 1, ' ma': 1, 'mat': 1, 'ath': 1, 'th\n': 1, 'h\ni': 1, 't o': 1, ' os': 1, 'os\n': 2, 's\ni': 1, 't r': 2, ' ra': 3, 'and': 2, 'ndo': 1, 'dom': 1, 'om\n': 1, 'm\ni': 1, ' re': 1, 're\n': 1, 'e\ni': 1, 't s': 1, ' sy': 1, 'sys': 1, 'ys\n': 1, 's\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm c': 1, ' co': 1, 'col': 1, 'oll': 1, 'lec': 1, 'ect': 1, 'cti': 3, 'ons': 1, 'ns ': 1, 's i': 1, ' im': 1, 't d': 1, ' de': 2, 'def': 3, 'efa': 2, 'fau': 2, 'aul': 2, 'ult': 2, 'ltd': 2, 'tdi': 2, 'dic': 2, 'ict': 2, 'ct\n': 1, 't\n\n': 1, '\n\n\n': 2, '\n\n#': 1, '\n#\n': 3, '#\n#': 2, '# C': 1, ' Co': 1, 'Com': 1, 'omp': 1, 'mpl': 1, 'ple': 1, 'let': 1, 'ete': 2, 'te ': 1, 'e t': 1, ' th': 2, 'the': 2, 'he ': 3, ""e '"": 1, "" 'p"": 1, ""'pl"": 1, 'usM': 3, 'sMi': 3, 'Min': 3, ""us'"": 1, ""s' "": 1, ""' f"": 1, ' fu': 2, 'fun': 2, 'unc': 2, 'nct': 2, 'on ': 2, 'n b': 1, ' be': 1, 'bel': 1, 'elo': 1, 'low': 1, 'ow.': 1, 'w.\n': 1, '.\n#': 2, '# T': 1, ' Th': 1, 'The': 1, 'e f': 1, 'n a': 2, ' ac': 1, 'acc': 1, 'cce': 1, 'cep': 1, 'ept': 1, 'pts': 1, 'ts ': 1, 's I': 1, ' IN': 1, 'INT': 1, 'NTE': 1, 'TEG': 1, 'EGE': 1, 'GER': 1, 'ER_': 1, 'R_A': 1, '_AR': 1, 'ARR': 1, 'RRA': 1, 'RAY': 1, 'AY ': 1, 'Y a': 1, ' ar': 3, 'arr': 8, 'rr ': 2, 'r a': 1, ' as': 1, 'as ': 1, 's p': 1, ' pa': 1, 'ram': 1, 'ame': 2, 'met': 1, 'er.': 1, 'r.\n': 1, '#\n\n': 1, '\n\nd': 1, '\nde': 1, 'ef ': 1, 'f p': 2, ' pl': 2, 'us(': 2, 's(a': 2, '(ar': 5, 'rr)': 5, 'r):': 1, '):\n': 1, ':\n ': 6, '\n  ': 19, '   ': 74, '  d': 4, ' d ': 1, 'd =': 1, ' = ': 6, '= d': 4, 'ct(': 1, 't(i': 2, '(in': 3, 'nt)': 1, 't)\n': 1, ')\n ': 5, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 3, 'i i': 1, ' in': 3, 'in ': 1, 'rr:': 1, 'r:\n': 1, '  i': 1, ' if': 1, 'if ': 3, 'f i': 2, 'i >': 1, ' > ': 1, '> 0': 1, ' 0:': 2, '0:\n': 2, ' d[': 6, ""d['"": 6, ""['p"": 2, ""'po"": 2, 'pos': 5, ""os'"": 2, ""s']"": 2, ""'] "": 6, '] +': 3, ' +=': 3, '+= ': 3, '= 1': 3, ' 1\n': 3, '1\n ': 2, '  e': 2, ' el': 2, 'eli': 1, 'lif': 1, 'i <': 1, ' < ': 1, '< 0': 1, ""['n"": 2, ""'ne"": 2, 'neg': 5, ""eg'"": 2, ""g']"": 2, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, ""['z"": 2, ""'ze"": 2, 'zer': 5, 'ero': 5, ""ro'"": 2, ""o']"": 2, '1\n\n': 1, '\n\n ': 4, '  #': 2, ' # ': 2, '# f': 1, ' fi': 1, 'fin': 1, 'ind': 1, 'nd ': 2, 'd r': 1, 'ios': 2, 'os ': 1, 's o': 1, ' of': 1, 'of ': 1, ' po': 2, 'osi': 1, 'sit': 1, 'iti': 1, 'tiv': 2, 'ive': 2, 've,': 1, 'e, ': 1, ', n': 1, ' ne': 2, 'ega': 1, 'gat': 1, 've ': 1, 'e a': 1, ' an': 1, 'd z': 1, ' ze': 2, 'ro\n': 1, 'o\n ': 1, '  p': 5, 'os_': 2, 's_r': 2, '_ra': 6, 'io ': 3, 'o =': 3, '] /': 3, ' / ': 3, '/ l': 3, ' le': 3, 'en(': 3, 'n(a': 3, 'r)\n': 3, '  n': 2, 'eg_': 2, 'g_r': 2, '  z': 1, 'ro_': 2, 'o_r': 2, ')\n\n': 4, '# p': 1, ' pr': 4, 'pri': 4, 'rin': 4, 'nt ': 1, 't t': 1, 'e r': 1, 's\n ': 1, 'nt(': 4, 't(f': 3, '(f""': 3, 'f""{': 3, '""{p': 1, '{po': 1, 'io:': 3, 'o:.': 3, ':.0': 3, '.06': 3, '06f': 3, '6f}': 3, 'f}""': 3, '}"")': 3, '"")\n': 3, '""{n': 1, '{ne': 1, '""{z': 1, '{ze': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, ' n ': 1, 'n =': 1, '= i': 1, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, 't()': 3, '().': 3, ').s': 2, '.st': 1, 'str': 2, 'tri': 2, 'rip': 2, 'ip(': 2, 'p()': 2, '())': 2, '))\n': 2, '  a': 1, 'r =': 1, '= l': 1, ' li': 1, 'st(': 1, 't(m': 1, '(ma': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, 't, ': 1, ', i': 1, ').r': 1, '.rs': 1, 'rst': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, ')))': 1}"
Tuhin Mitra,regexSubstitutions.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""': 2, 'problem': 1, 'link:': 1, 'https://www.hackerrank.com/challenges/re-sub-regex-substitution/problem': 1, 'import': 1, 're': 1, 'def': 1, 'find_and_replace(string:': 1, 'str)': 1, '->': 1, 'str:': 1, 'if': 2, 're.search(pattern_or,': 1, 'string):': 2, 'return': 3, 'find_and_replace(re.sub(pattern_or,': 1, '""': 2, 'or': 1, '"",': 2, 'string))': 2, 'elif': 1, 're.search(pattern_and,': 1, 'find_and_replace(re.sub(pattern_and,': 1, 'and': 1, 'else:': 1, 'string': 1, '__name__': 1, '==': 1, '""__main__"":': 1, 'pattern_or': 1, '=': 5, ""r'"": 2, '\\|{2}': 1, ""'"": 2, 'pattern_and': 1, '\\&{2}': 1, 'n': 4, 'int(input())': 1, '#': 3, 'the': 1, 'integer': 1, 'complete_code_text': 2, '""""': 1, 'while': 1, '>': 1, '0:': 1, 'code_line': 1, 'input()': 1, 'a': 1, 'code': 1, 'line': 1, '+=': 1, 'find_and_replace(code_line)': 1, '+': 1, ""'\\n'"": 1, '-=': 1, '1': 1, 'when': 1, 'taking': 1, 'input': 1, 'is': 1, 'complete': 1, 'print(complete_code_text.strip())': 1}","{'""""""': 2, '""""\n': 3, '""\nP': 1, '\nPr': 1, 'Pro': 1, 'rob': 2, 'obl': 2, 'ble': 2, 'lem': 2, 'em ': 1, 'm l': 1, ' li': 2, 'lin': 4, 'ink': 1, 'nk:': 1, 'k: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.h': 1, '.ha': 1, 'hac': 1, 'ack': 1, 'cke': 1, 'ker': 1, 'err': 1, 'rra': 1, 'ran': 1, 'ank': 1, 'nk.': 1, 'k.c': 1, '.co': 1, 'com': 5, 'om/': 1, 'm/c': 1, '/ch': 1, 'cha': 1, 'hal': 1, 'all': 1, 'lle': 1, 'len': 1, 'eng': 1, 'nge': 1, 'ges': 1, 'es/': 1, 's/r': 1, '/re': 1, 're-': 1, 'e-s': 1, '-su': 2, 'sub': 4, 'ub-': 1, 'b-r': 1, '-re': 1, 'reg': 1, 'ege': 2, 'gex': 1, 'ex-': 1, 'x-s': 1, 'ubs': 1, 'bst': 1, 'sti': 1, 'tit': 1, 'itu': 1, 'tut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on/': 1, 'n/p': 1, '/pr': 1, 'pro': 1, 'em\n': 1, 'm\n""': 1, '\n""""': 1, '""\ni': 1, '\nim': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't r': 1, ' re': 6, 're\n': 1, 'e\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f f': 1, ' fi': 4, 'fin': 4, 'ind': 4, 'nd_': 8, 'd_a': 4, '_an': 7, 'and': 8, 'd_r': 4, '_re': 4, 'rep': 4, 'epl': 4, 'pla': 4, 'lac': 4, 'ace': 4, 'ce(': 4, 'e(s': 1, '(st': 1, 'str': 9, 'tri': 7, 'rin': 7, 'ing': 7, 'ng:': 1, 'g: ': 1, ': s': 1, ' st': 7, 'tr)': 1, 'r) ': 1, ') -': 1, ' ->': 1, '-> ': 1, '> s': 1, 'tr:': 1, 'r:\n': 1, ':\n ': 6, '\n  ': 16, '   ': 56, '  i': 1, ' if': 1, 'if ': 3, 'f r': 2, 're.': 4, 'e.s': 4, '.se': 2, 'sea': 2, 'ear': 2, 'arc': 2, 'rch': 2, 'ch(': 2, 'h(p': 2, '(pa': 4, 'pat': 6, 'att': 6, 'tte': 6, 'ter': 6, 'ern': 6, 'rn_': 6, 'n_o': 3, '_or': 3, 'or,': 2, 'r, ': 2, ', s': 4, 'ng)': 4, 'g):': 2, '):\n': 2, '  r': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n f': 2, 'e(r': 2, '(re': 2, '.su': 2, 'ub(': 2, 'b(p': 2, ', ""': 2, ' "" ': 2, '"" o': 1, ' or': 1, 'or ': 2, 'r ""': 1, ' "",': 2, '"", ': 2, 'g))': 2, '))\n': 2, ')\n ': 2, '  e': 2, ' el': 2, 'eli': 1, 'lif': 1, 'n_a': 3, 'nd,': 2, 'd, ': 2, '"" a': 1, ' an': 1, 'nd ': 2, 'd ""': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, 'n s': 1, 'ng\n': 1, 'g\n\n': 1, '\n\ni': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, '= ""': 2, ' ""_': 1, '""__': 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, '__""': 1, '_"":': 1, '"":\n': 1, '  p': 3, ' pa': 2, 'r =': 1, ' = ': 5, '= r': 2, "" r'"": 2, ""r' "": 2, ""' \\"": 2, ' \\|': 1, '\\|{': 1, '|{2': 1, '{2}': 2, '2} ': 2, ""} '"": 2, "" '\n"": 2, ""'\n "": 3, 'd =': 1, ' \\&': 1, '\\&{': 1, '&{2': 1, '  n': 2, ' n ': 3, 'n =': 1, '= i': 2, ' in': 4, 'int': 3, 'nt(': 2, 't(i': 1, '(in': 1, 'inp': 3, 'npu': 3, 'put': 3, 'ut(': 2, 't()': 2, '())': 2, ')) ': 1, ')  ': 2, '  #': 3, ' # ': 3, '# t': 1, ' th': 1, 'the': 1, 'he ': 1, 'e i': 1, 'nte': 1, 'teg': 1, 'ger': 1, 'er ': 1, 'r n': 1, ' n\n': 1, 'n\n ': 1, '  c': 3, ' co': 5, 'omp': 4, 'mpl': 4, 'ple': 4, 'let': 4, 'ete': 4, 'te_': 3, 'e_c': 3, '_co': 3, 'cod': 6, 'ode': 6, 'de_': 5, 'e_t': 3, '_te': 3, 'tex': 3, 'ext': 3, 'xt ': 2, 't =': 1, ' """"': 1, '""\n ': 1, '  w': 1, ' wh': 2, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e n': 1, 'n >': 1, ' > ': 1, '> 0': 1, ' 0:': 1, '0:\n': 1, 'e_l': 2, '_li': 2, 'ine': 3, 'ne ': 1, 'e =': 1, '() ': 1, '# a': 1, ' a ': 1, 'a c': 1, 'de ': 1, 'e l': 1, 'ne\n': 1, 'e\n ': 2, 't +': 1, ' +=': 1, '+= ': 1, '= f': 1, 'e(c': 1, '(co': 2, 'ne)': 1, 'e) ': 1, ') +': 1, ' + ': 1, ""+ '"": 1, "" '\\"": 1, ""'\\n"": 1, ""\\n'"": 1, ""n'\n"": 1, 'n -': 1, ' -=': 1, '-= ': 1, '= 1': 1, ' 1\n': 1, '1\n\n': 1, '\n\n ': 1, '# w': 1, 'whe': 1, 'hen': 1, 'en ': 1, 'n t': 1, ' ta': 1, 'tak': 1, 'aki': 1, 'kin': 1, 'ng ': 1, 'g i': 1, 'ut ': 1, 't i': 1, ' is': 1, 'is ': 1, 's c': 1, 'te\n': 1, ' pr': 1, 'pri': 1, 't(c': 1, 'xt.': 1, 't.s': 1, '.st': 1, 'rip': 1, 'ip(': 1, 'p()': 1}"
Tuhin Mitra,rotate_matrix_by_90.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""given': 1, 'a': 3, 'square': 2, 'matrix[][]': 2, 'of': 9, 'size': 2, 'n': 10, 'x': 5, 'n.': 1, 'the': 12, 'task': 1, 'is': 2, 'to': 3, 'rotate': 1, 'it': 1, 'by': 1, '90': 1, 'degrees': 1, 'in': 9, 'an': 2, 'anti-clockwise': 1, 'direction': 1, 'without': 1, 'using': 1, 'any': 1, 'extra': 1, 'space.': 1, 'input:': 2, 'first': 2, 'line': 3, 'input': 1, 'contains': 2, 'single': 1, 'integer': 2, 't': 4, 'denoting': 1, 'number': 1, 'test': 6, 'cases.': 1, 'then': 1, 'cases': 1, 'follow.': 1, 'each': 4, 'case': 3, 'consists': 2, 'two': 1, 'lines.': 1, 'n,': 2, 'where': 1, 'matrix.': 2, 'second': 1, 'space-separated': 1, 'values': 1, 'output:': 2, 'corresponding': 1, 'case,': 1, 'new': 1, 'line,': 1, 'print': 1, 'rotated': 1, 'array.': 1, 'your': 1, 'task:': 1, 'you': 1, 'only': 1, 'need': 1, 'implement': 1, 'given': 2, 'function': 1, 'rotate().': 1, 'do': 1, 'not': 1, 'read': 1, 'input,': 1, 'instead': 1, 'use': 1, 'arguments': 1, 'function.': 1, 'expected': 2, 'time': 1, 'complexity:': 1, 'o(n*n)': 1, 'auxiliary': 1, 'space:': 1, 'o(1)': 1, 'constraints:': 1, '1': 10, 'â\x89¤': 4, '50': 2, '<=': 2, '100': 1, 'example:': 1, '3': 4, '2': 2, '4': 2, '5': 2, '6': 2, '7': 2, '8': 2, '9': 2, '""""""': 1, 'def': 1, 'rotate(matrix):': 1, '#': 5, 'code': 3, 'here': 1, 'arr': 2, '=': 14, '[]': 2, 'for': 7, 'i': 3, 'matrix:': 1, 'arr.extend(i)': 1, 'len(matrix)': 1, 'j': 6, '-': 2, '0': 3, 'y': 3, 'while': 2, '>=': 1, '0:': 1, 'k': 4, '<': 1, 'len(arr):': 1, 'matrix[x][y]': 1, 'arr[k]': 1, '+': 2, '+=': 2, '{': 1, 'driver': 2, 'starts': 1, 'initial': 1, 'template': 1, 'python': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'int(input())': 2, '_': 1, 'range(t):': 1, '[int(x)': 1, 'input().split()]': 1, 'matrix': 1, 'range(0,': 1, '*': 1, 'n):': 1, 'matrix.append(arr[i:i': 1, 'n])': 1, 'rotate(matrix)': 1, 'range(n):': 2, 'print(matrix[i][j],': 1, ""end='"": 1, ""')"": 1, 'print()': 1, '}': 1, 'ends': 1}","{'""""""': 2, '""""G': 1, '""Gi': 1, 'Giv': 1, 'ive': 5, 'ven': 3, 'en ': 4, 'n a': 4, ' a ': 3, 'a s': 3, ' sq': 2, 'squ': 2, 'qua': 2, 'uar': 2, 'are': 2, 're ': 3, 'e m': 3, ' ma': 8, 'mat': 12, 'atr': 12, 'tri': 12, 'rix': 12, 'ix[': 4, 'x[]': 2, '[][': 2, '][]': 2, '[] ': 2, '] o': 1, ' of': 9, 'of ': 9, 'f s': 1, ' si': 3, 'siz': 2, 'ize': 2, 'ze ': 2, 'e N': 2, ' N ': 7, 'N x': 2, ' x ': 5, 'x N': 2, ' N.': 1, 'N. ': 1, '. T': 4, ' Th': 4, 'The': 5, 'he ': 12, 'e t': 2, ' ta': 1, 'tas': 1, 'ask': 2, 'sk ': 1, 'k i': 1, ' is': 2, 'is ': 2, 's t': 2, ' to': 3, 'to ': 3, 'o r': 1, ' ro': 5, 'rot': 5, 'ota': 5, 'tat': 5, 'ate': 7, 'te ': 2, 'e i': 2, ' it': 1, 'it ': 1, 't b': 1, ' by': 1, 'by ': 1, 'y 9': 1, ' 90': 1, '90 ': 1, '0 d': 1, ' de': 2, 'deg': 1, 'egr': 1, 'gre': 1, 'ree': 1, 'ees': 1, 'es ': 3, 's i': 1, ' in': 17, 'in ': 9, ' an': 4, 'an ': 2, 'ant': 1, 'nti': 1, 'ti-': 1, 'i-c': 1, '-cl': 1, 'clo': 1, 'loc': 1, 'ock': 1, 'ckw': 1, 'kwi': 1, 'wis': 1, 'ise': 1, 'se ': 5, 'e d': 1, ' di': 1, 'dir': 1, 'ire': 1, 'rec': 1, 'ect': 3, 'cti': 3, 'tio': 3, 'ion': 3, 'on ': 3, 'n w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'tho': 2, 'hou': 1, 'out': 1, 'ut ': 2, 't u': 1, ' us': 2, 'usi': 1, 'sin': 2, 'ing': 4, 'ng ': 3, 'g a': 1, 'any': 1, 'ny ': 1, 'y e': 1, ' ex': 1, 'ext': 2, 'xtr': 1, 'tra': 2, 'ra ': 1, ' sp': 2, 'spa': 2, 'pac': 3, 'ace': 3, 'ce.': 1, 'e.\n': 1, '.\n\n': 4, '\n\nI': 1, '\nIn': 2, 'Inp': 2, 'npu': 7, 'put': 9, 'ut:': 4, 't:\n': 4, ':\nT': 1, '\nTh': 1, 'e f': 4, ' fi': 2, 'fir': 2, 'irs': 2, 'rst': 2, 'st ': 8, 't l': 2, ' li': 5, 'lin': 5, 'ine': 5, 'ne ': 3, 'e o': 4, 'f i': 1, 'inp': 5, 't c': 7, ' co': 5, 'con': 5, 'ont': 2, 'nta': 2, 'tai': 2, 'ain': 4, 'ins': 3, 'ns ': 2, 's a': 1, 'ngl': 1, 'gle': 1, 'le ': 3, 'int': 9, 'nte': 2, 'teg': 2, 'ege': 2, 'ger': 2, 'er ': 5, 'r T': 2, ' T ': 3, 'T d': 1, 'den': 1, 'eno': 1, 'not': 2, 'oti': 1, 'tin': 1, 'g t': 2, ' th': 8, 'the': 8, 'e n': 1, ' nu': 1, 'num': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'r o': 1, 'f t': 4, ' te': 6, 'tes': 6, 'est': 6, ' ca': 6, 'cas': 6, 'ase': 6, 'ses': 2, 'es.': 2, 's. ': 2, 'hen': 1, 'n T': 1, 'T t': 1, 's f': 1, ' fo': 8, 'fol': 1, 'oll': 1, 'llo': 1, 'low': 1, 'ow.': 1, 'w. ': 1, '. E': 1, ' Ea': 1, 'Eac': 1, 'ach': 4, 'ch ': 4, 'h t': 4, 'e c': 3, 'ons': 3, 'nsi': 2, 'sis': 2, 'ist': 2, 'sts': 2, 'ts ': 3, 's o': 3, ' tw': 1, 'two': 1, 'wo ': 1, 'o l': 1, 'nes': 1, 'f e': 2, ' ea': 3, 'eac': 3, 'f a': 1, 'n i': 3, 'r N': 1, ' N,': 2, 'N, ': 2, ', w': 1, ' wh': 3, 'whe': 1, 'her': 2, 'ere': 2, 'N i': 1, 'e s': 3, 'ix.': 3, 'x. ': 1, ' se': 1, 'sec': 1, 'eco': 1, 'ond': 2, 'nd ': 1, 'd l': 1, 's N': 1, 'N s': 1, 'ce-': 1, 'e-s': 1, '-se': 1, 'sep': 1, 'epa': 1, 'par': 1, 'ara': 1, 'rat': 1, 'ted': 4, 'ed ': 5, 'd v': 1, ' va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ues': 1, 'x.\n': 1, '\n\nO': 1, '\nOu': 2, 'Out': 2, 'utp': 2, 'tpu': 2, ':\nC': 1, '\nCo': 2, 'Cor': 1, 'orr': 1, 'rre': 1, 'res': 1, 'esp': 1, 'spo': 1, 'pon': 1, 'ndi': 1, 'din': 1, 'o e': 1, 'se,': 1, 'e, ': 2, ', i': 2, 'a n': 1, ' ne': 2, 'new': 1, 'ew ': 1, 'w l': 1, 'ne,': 1, ', p': 1, ' pr': 3, 'pri': 3, 'rin': 3, 'nt ': 2, 't t': 2, 'e r': 1, 'd a': 1, ' ar': 6, 'arr': 7, 'rra': 1, 'ray': 1, 'ay.': 1, 'y.\n': 1, '\n\nY': 1, '\nYo': 2, 'You': 2, 'our': 1, 'ur ': 1, ' Ta': 1, 'Tas': 1, 'sk:': 1, 'k:\n': 1, ':\nY': 1, 'ou ': 1, 'u o': 1, ' on': 1, 'onl': 1, 'nly': 1, 'ly ': 1, 'y n': 1, 'nee': 1, 'eed': 1, 'd t': 1, 'o i': 1, ' im': 1, 'imp': 1, 'mpl': 4, 'ple': 3, 'lem': 1, 'eme': 1, 'men': 2, 'ent': 2, 'e g': 1, ' gi': 2, 'giv': 2, 'n f': 1, ' fu': 2, 'fun': 2, 'unc': 2, 'nct': 2, 'n r': 5, 'te(': 3, 'e()': 1, '().': 2, '). ': 1, '. D': 1, ' Do': 1, 'Do ': 1, 'o n': 1, ' no': 1, 'ot ': 1, 't r': 1, ' re': 1, 'rea': 1, 'ead': 2, 'ad ': 2, 'd i': 1, 'ut,': 1, 't, ': 1, 'nst': 2, 'ste': 1, 'tea': 1, 'd u': 1, 'use': 1, 'e a': 1, 'arg': 1, 'rgu': 1, 'gum': 1, 'ume': 1, 'nts': 2, 's g': 1, 'n t': 1, 'on.': 1, 'n.\n': 1, '\n\nE': 2, '\nEx': 3, 'Exp': 2, 'xpe': 2, 'pec': 2, 'cte': 2, 'd T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me ': 1, 'e C': 1, ' Co': 3, 'Com': 1, 'omp': 1, 'lex': 1, 'exi': 1, 'xit': 1, 'ity': 1, 'ty:': 1, 'y: ': 1, ': O': 2, ' O(': 2, 'O(N': 1, '(N*': 1, 'N*N': 1, '*N)': 1, 'N)\n': 1, ')\nE': 1, 'd A': 1, ' Au': 1, 'Aux': 1, 'uxi': 1, 'xil': 1, 'ili': 1, 'lia': 1, 'iar': 1, 'ary': 1, 'ry ': 1, 'y S': 1, ' Sp': 1, 'Spa': 1, 'ce:': 1, 'e: ': 1, 'O(1': 1, '(1)': 1, '1)\n': 1, ')\n\n': 3, '\n\nC': 1, 'Con': 1, 'str': 1, 'rai': 1, 'ts:': 1, 's:\n': 1, ':\n1': 2, '\n1 ': 5, '1 â': 2, ' â\x89': 4, 'â\x89¤': 4, '\x89¤ ': 4, '¤ T': 1, 'T â': 1, '¤ 5': 2, ' 50': 2, '50\n': 2, '0\n1': 2, '¤ N': 1, 'N â': 1, '1 <': 1, ' <=': 2, '<= ': 2, '= m': 1, '] <': 1, '= 1': 3, ' 10': 1, '100': 1, '00\n': 1, '0\n\n': 2, 'Exa': 1, 'xam': 1, 'amp': 1, 'le:': 1, 'e:\n': 1, ':\nI': 1, '\n1\n': 1, '1\n3': 1, '\n3\n': 1, '3\n1': 1, '1 2': 1, ' 2 ': 1, '2 3': 1, ' 3 ': 1, '3 4': 1, ' 4 ': 2, '4 5': 1, ' 5 ': 2, '5 6': 1, ' 6 ': 2, '6 7': 1, ' 7 ': 1, '7 8': 1, ' 8 ': 1, '8 9': 1, ' 9\n': 2, '9\nO': 1, ':\n3': 1, '\n3 ': 1, '3 6': 1, '6 9': 1, '9\n2': 1, '\n2 ': 1, '2 5': 1, '5 8': 1, ' 8\n': 1, '8\n1': 1, '1 4': 1, '4 7': 1, ' 7\n': 1, '7\n\n': 1, '\n\n ': 3, '\n ""': 1, ' """"': 1, '""""\n': 1, '""\n\n': 1, '\n\n\n': 3, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f r': 1, 'e(m': 2, '(ma': 4, 'ix)': 3, 'x):': 1, '):\n': 6, ':\n ': 9, '\n  ': 29, '   ': 166, '  #': 1, ' # ': 1, '# c': 1, 'cod': 1, 'ode': 3, 'de ': 3, 'e h': 1, ' he': 1, 're\n': 1, 'e\n ': 1, '  a': 3, 'rr ': 2, 'r =': 2, ' = ': 14, '= [': 3, ' []': 2, '[]\n': 2, ']\n ': 3, '  f': 5, 'for': 7, 'or ': 7, 'r i': 3, ' i ': 3, 'i i': 3, 'n m': 1, 'ix:': 1, 'x:\n': 1, 'rr.': 1, 'r.e': 1, '.ex': 1, 'xte': 1, 'ten': 1, 'end': 3, 'nd(': 2, 'd(i': 1, '(i)': 1, 'i)\n': 1, ')\n ': 6, '  n': 1, ' n ': 2, 'n =': 1, '= l': 1, ' le': 2, 'len': 2, 'en(': 2, 'n(m': 1, 'x)\n': 2, '  j': 2, ' j ': 5, 'j =': 2, '= n': 1, 'n -': 1, ' - ': 2, '- 1': 2, ' 1\n': 4, '1\n ': 4, '  x': 2, 'x =': 2, '= 0': 4, ' 0\n': 3, '0\n ': 2, '  y': 3, ' y ': 3, 'y =': 2, '  w': 2, 'whi': 2, 'hil': 2, 'ile': 2, 'e j': 1, 'j >': 1, ' >=': 1, '>= ': 1, ' 0:': 1, '0:\n': 1, '  k': 2, ' k ': 4, 'k =': 2, '= j': 2, ' j\n': 1, 'j\n ': 1, 'e k': 1, 'k <': 1, ' < ': 1, '< l': 1, 'n(a': 1, '(ar': 2, 'rr)': 1, 'r):': 1, '  m': 3, 'x[x': 1, '[x]': 1, 'x][': 1, '][y': 1, '[y]': 1, 'y] ': 1, '] =': 1, '= a': 1, 'rr[': 2, 'r[k': 1, '[k]': 1, 'k]\n': 1, '= k': 1, 'k +': 1, ' + ': 2, '+ n': 1, ' n\n': 1, 'n\n ': 1, 'y +': 1, ' +=': 2, '+= ': 2, 'j -': 1, 'x +': 1, '\n\n#': 2, '\n# ': 4, '# {': 1, ' { ': 1, '{ \n': 1, ' \n#': 1, '#  ': 1, '  D': 1, ' Dr': 2, 'Dri': 2, 'riv': 2, 'ver': 2, 'r C': 2, 'Cod': 2, 'e S': 1, ' St': 1, 'Sta': 1, 'tar': 1, 'art': 1, 'rts': 1, 'ts\n': 1, 's\n#': 1, '# I': 1, ' In': 1, 'Ini': 1, 'nit': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'al ': 1, 'l T': 1, ' Te': 1, 'Tem': 1, 'emp': 1, 'pla': 1, 'lat': 1, 'r P': 1, ' Py': 1, 'Pyt': 1, 'yth': 1, 'hon': 1, 'n 3': 1, ' 3\n': 1, '3\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  t': 1, ' t ': 1, 't =': 1, '= i': 2, 'nt(': 5, 't(i': 2, '(in': 2, 'ut(': 3, 't()': 5, '())': 2, '))\n': 2, 'r _': 1, ' _ ': 1, '_ i': 1, ' ra': 4, 'ran': 4, 'ang': 4, 'nge': 4, 'ge(': 4, 'e(t': 1, '(t)': 1, 't):': 1, '  N': 1, 'N =': 1, ' [i': 1, '[in': 1, 't(x': 1, '(x)': 1, 'x) ': 1, ') f': 1, 'r x': 1, 'x i': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, '()]': 1, ')]\n': 1, 'ix ': 1, ']\n\n': 1, 'e(0': 1, '(0,': 1, '0, ': 1, ', N': 2, 'N *': 1, ' * ': 1, '* N': 1, ' N)': 1, 'N):': 3, 'x.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'd(a': 1, 'r[i': 1, '[i:': 1, 'i:i': 1, ':i ': 1, 'i +': 1, '+ N': 1, ' N]': 1, 'N])': 1, '])\n': 1, '  r': 1, 'e(N': 2, '(N)': 2, 'r j': 1, 'j i': 1, '  p': 2, 't(m': 1, 'x[i': 1, '[i]': 1, 'i][': 1, '][j': 1, '[j]': 1, 'j],': 1, '], ': 1, ', e': 1, ' en': 1, 'nd=': 1, ""d='"": 1, ""=' "": 1, ""' '"": 1, "" ')"": 1, ""')\n"": 1, '()\n': 1, '# }': 1, ' } ': 1, '} D': 1, 'e E': 1, ' En': 1, 'End': 1, 'nds': 1}"
Tuhin Mitra,search_sorted_2d_matrix.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'""""""': 2, 'search': 2, 'in': 15, 'a': 8, 'row-column': 1, 'sorted': 2, 'matrix': 5, 'given': 1, 'mat[]': 1, 'of': 10, 'size': 1, 'n': 2, 'x': 8, 'm,': 3, 'where': 1, 'every': 1, 'row': 3, 'and': 7, 'column': 2, 'is': 9, 'increasing': 1, 'order,': 1, 'number': 3, 'given.': 1, 'the': 13, 'task': 1, 'to': 4, 'find': 1, 'whether': 1, 'element': 4, 'present': 4, 'or': 2, 'not.': 1, 'input:': 2, 'first': 2, 'line': 4, 'input': 1, 'contains': 2, 'single': 2, 'integer': 2, 't': 6, 'denoting': 3, 'test': 7, 'cases.': 1, 'then': 1, 'cases': 1, 'follow.': 1, 'each': 5, 'case': 4, 'consists': 2, 'three': 1, 'lines.': 1, 'consist': 1, 'two': 1, 'space': 2, 'separated': 2, 'integers': 2, 'respectively.': 1, 'second': 1, 'n*m': 1, 'elements': 1, 'major': 1, 'order.': 1, 'third': 1, 'x,': 1, 'be': 1, 'searched.': 1, 'output:': 2, 'corresponding': 1, 'case,': 1, 'print': 2, 'new': 1, 'line,': 1, '1': 13, 'if': 4, 'matrix,': 2, 'otherwise': 1, 'simply': 1, '0.': 2, 'your': 1, 'task:': 1, 'this': 1, 'function': 2, 'problem.': 1, 'you': 1, 'only': 1, 'need': 1, 'complete': 1, 'that': 1, 'takes': 1, 'n,m,': 1, 'as': 1, 'parameters': 1, 'returns': 1, 'either': 1, '0': 6, '1.': 1, 'expected': 2, 'time': 1, 'complexity:': 1, 'o(n': 1, '+': 1, 'm)': 1, 'auxiliary': 1, 'space:': 1, 'o(1)': 1, 'constraints:': 1, '<=': 10, '200': 1, 'n,': 2, 'm': 2, '1000': 2, 'mat[][]': 1, '105': 1, 'example:': 1, '2': 1, '3': 3, '30': 1, '38': 2, '44': 1, '52': 1, '54': 1, '57': 1, '60': 1, '69': 1, '62': 2, '6': 1, '18': 1, '21': 1, '27': 1, '55': 3, '67': 1, 'explanation:': 1, 'testcase': 2, '1:': 1, 'not': 1, 'so': 1, 'output': 1, '2:': 1, 'at': 1, '5th': 1, 'cell.': 1, 'def': 2, 'search(n1,': 1, 'm1,': 1, 'mat,': 2, 'x):': 1, 'i,': 1, 'j': 5, '=': 9, '0,': 1, 'm1': 1, '-': 1, 'while': 2, 'true:': 1, 'i': 4, '<': 3, 'n1': 1, 'm1:': 1, 'elem': 4, 'mat[i][j]': 2, '==': 2, 'x:': 3, 'return': 2, 'elif': 2, '+=': 2, '>': 2, '-=': 2, 'else:': 1, 'break': 1, 'main():': 1, 'int(input())': 2, '0:': 1, 'map(int,': 1, 'input().split())': 1, 'mat': 1, '[[0': 1, 'for': 5, 'range(m)]': 1, 'range(n)]': 1, 'line_1': 1, '[int(x)': 1, 'input().strip().split()]': 1, 'k': 2, 'range(n):': 1, 'range(m):': 1, 'line_1[k]': 1, 'print(search(n,': 1, 'x))': 1, '__name__': 1, ""'__main__':"": 1, 'main()': 1}","{'""""""': 2, '""""\n': 2, '""\nS': 1, '\nSe': 1, 'Sea': 1, 'ear': 5, 'arc': 5, 'rch': 5, 'ch ': 7, 'h i': 1, ' in': 25, 'in ': 15, 'n a': 4, ' a ': 8, 'a r': 2, ' ro': 4, 'row': 4, 'ow-': 1, 'w-c': 1, '-co': 1, 'col': 3, 'olu': 3, 'lum': 3, 'umn': 3, 'mn ': 3, 'n s': 2, ' so': 3, 'sor': 2, 'ort': 2, 'rte': 2, 'ted': 6, 'ed ': 7, 'd M': 2, ' Ma': 1, 'Mat': 1, 'atr': 7, 'tri': 8, 'rix': 7, 'ix\n': 1, 'x\n\n': 1, '\n\nG': 1, '\nGi': 1, 'Giv': 1, 'ive': 3, 'ven': 2, 'en ': 2, 'a m': 1, ' ma': 17, 'mat': 13, 'ix ': 4, 'x m': 2, 'at[': 4, 't[]': 2, '[] ': 2, '] o': 1, ' of': 10, 'of ': 10, 'f s': 2, ' si': 4, 'siz': 1, 'ize': 1, 'ze ': 1, 'e n': 3, ' n ': 1, 'n x': 1, ' x ': 7, ' m,': 2, 'm, ': 3, ', w': 1, ' wh': 4, 'whe': 2, 'her': 4, 'ere': 1, 're ': 1, 'e e': 4, ' ev': 1, 'eve': 1, 'ver': 1, 'ery': 1, 'ry ': 2, 'y r': 1, 'ow ': 3, 'w a': 2, ' an': 7, 'and': 7, 'nd ': 9, 'd c': 2, ' co': 8, 'n i': 3, ' is': 9, 'is ': 10, 's s': 1, 'd i': 3, 'inc': 1, 'ncr': 1, 'cre': 1, 'rea': 2, 'eas': 1, 'asi': 1, 'sin': 3, 'ing': 7, 'ng ': 5, 'g o': 1, ' or': 4, 'ord': 2, 'rde': 2, 'der': 2, 'er,': 1, 'r, ': 1, ', a': 2, 'd a': 1, 'a n': 2, ' nu': 3, 'num': 3, 'umb': 3, 'mbe': 3, 'ber': 3, 'er ': 7, 'r x': 3, 'x i': 5, 's g': 1, ' gi': 1, 'giv': 1, 'en.': 1, 'n. ': 1, '. T': 3, ' Th': 3, 'The': 3, 'he ': 13, 'e t': 2, ' ta': 2, 'tas': 1, 'ask': 2, 'sk ': 1, 'k i': 1, 's t': 1, ' to': 4, 'to ': 4, 'o f': 1, ' fi': 2, 'fin': 1, 'ind': 1, 'd w': 1, 'het': 1, 'eth': 1, 'the': 14, 'r e': 1, ' el': 12, 'ele': 9, 'lem': 10, 'eme': 5, 'men': 5, 'ent': 9, 'nt ': 10, 't x': 2, 's p': 4, ' pr': 8, 'pre': 4, 'res': 6, 'ese': 4, 'sen': 4, 't i': 7, 'n t': 5, ' th': 13, 'e m': 5, 'x o': 1, 'or ': 8, 'r n': 1, ' no': 2, 'not': 5, 'ot.': 1, 't.\n': 1, '.\n\n': 4, '\n\nI': 1, '\nIn': 2, 'Inp': 2, 'npu': 7, 'put': 10, 'ut:': 4, 't:\n': 4, ':\nT': 3, '\nTh': 2, 'e f': 2, 'fir': 1, 'irs': 2, 'rst': 2, 'st ': 10, 't l': 2, ' li': 8, 'lin': 8, 'ine': 8, 'ne ': 4, 'e o': 4, 'f i': 1, 'inp': 5, 'ut ': 2, 't c': 8, 'con': 6, 'ont': 2, 'nta': 2, 'tai': 2, 'ain': 6, 'ins': 2, 'ns ': 3, 's a': 4, 'a s': 2, 'ngl': 2, 'gle': 2, 'le ': 4, 'e i': 2, 'int': 12, 'nte': 4, 'teg': 4, 'ege': 4, 'ger': 4, 'r T': 2, ' T ': 6, 'T d': 1, ' de': 3, 'den': 3, 'eno': 3, 'oti': 3, 'tin': 3, 'g t': 4, 'r o': 3, 'f t': 4, ' te': 7, 'tes': 7, 'est': 9, ' ca': 7, 'cas': 9, 'ase': 9, 'ses': 2, 'es.': 2, 's. ': 2, 'hen': 1, 'n T': 1, 'T t': 1, 'es ': 2, 's f': 1, ' fo': 6, 'fol': 1, 'oll': 1, 'llo': 1, 'low': 1, 'ow.': 1, 'w. ': 1, '. E': 1, ' Ea': 1, 'Eac': 1, 'ach': 5, 'h t': 6, 'se ': 7, 'e c': 4, 'ons': 4, 'nsi': 3, 'sis': 3, 'ist': 3, 'sts': 2, 'ts ': 3, 's o': 2, 'thr': 1, 'hre': 1, 'ree': 1, 'ee ': 1, 'e l': 1, 'nes': 1, '. F': 1, ' Fi': 1, 'Fir': 1, 'f e': 7, ' ea': 4, 'eac': 4, 't o': 1, ' tw': 1, 'two': 1, 'wo ': 1, 'o s': 1, ' sp': 2, 'spa': 2, 'pac': 3, 'ace': 3, 'ce ': 2, 'e s': 4, ' se': 5, 'sep': 2, 'epa': 2, 'par': 3, 'ara': 3, 'rat': 2, 'ate': 2, 'ers': 3, 'rs ': 3, 's N': 1, ' N ': 1, 'N a': 1, ' M,': 1, 'M, ': 1, ', d': 1, 'n r': 6, ' re': 4, 'esp': 2, 'spe': 1, 'pec': 3, 'ect': 3, 'cti': 3, 'tiv': 1, 'vel': 1, 'ely': 1, 'ly.': 1, 'y. ': 1, '. S': 1, ' Se': 1, 'Sec': 1, 'eco': 1, 'ond': 2, 'd l': 2, 'f N': 1, ' N*': 1, 'N*M': 1, '*M ': 1, 'M s': 1, 's d': 1, 'nts': 2, 's i': 2, 'w m': 1, 'maj': 1, 'ajo': 1, 'jor': 1, 'er.': 1, 'r. ': 1, 'Thi': 2, 'hir': 1, 'ird': 1, 'rd ': 1, ' x,': 1, 'x, ': 3, ', t': 1, 't t': 2, 'o b': 1, ' be': 1, 'be ': 1, 'sea': 4, 'che': 1, 'hed': 1, 'ed.': 1, 'd.\n': 1, '\n\nO': 1, '\nOu': 2, 'Out': 2, 'utp': 3, 'tpu': 3, ':\nC': 1, '\nCo': 2, 'Cor': 1, 'orr': 1, 'rre': 1, 'spo': 1, 'pon': 1, 'ndi': 1, 'din': 1, 'o e': 1, 'se,': 1, 'e, ': 2, ', p': 1, 'pri': 3, 'rin': 3, ' ne': 2, 'new': 1, 'ew ': 1, 'w l': 1, 'ne,': 1, ', 1': 1, ' 1 ': 1, '1 i': 1, ' if': 3, 'if ': 6, 'ix,': 2, ', o': 1, ' ot': 1, 'oth': 1, 'erw': 1, 'rwi': 1, 'wis': 1, 'ise': 1, 'sim': 1, 'imp': 1, 'mpl': 4, 'ply': 1, 'ly ': 2, 'y p': 1, 't 0': 1, ' 0.': 2, '0.\n': 2, '\n\nY': 1, '\nYo': 1, 'You': 2, 'our': 1, 'ur ': 1, ' Ta': 1, 'Tas': 1, 'sk:': 1, 'k:\n': 1, 'his': 1, 'a f': 1, ' fu': 2, 'fun': 2, 'unc': 2, 'nct': 2, 'tio': 3, 'ion': 3, 'on ': 2, 'n p': 1, 'pro': 1, 'rob': 1, 'obl': 1, 'ble': 1, 'em.': 1, 'm. ': 1, '. Y': 1, ' Yo': 1, 'ou ': 1, 'u o': 1, ' on': 1, 'onl': 1, 'nly': 1, 'y n': 1, 'nee': 1, 'eed': 1, 'd t': 1, 'o c': 1, 'com': 1, 'omp': 2, 'ple': 3, 'let': 1, 'ete': 2, 'te ': 1, 'tha': 1, 'hat': 1, 'at ': 3, 'tak': 1, 'ake': 1, 'kes': 1, 's n': 2, ' n,': 2, 'n,m': 1, ',m,': 1, 'd x': 1, 'x a': 2, ' as': 1, 'as ': 1, ' pa': 1, 'ram': 1, 'ame': 2, 'met': 1, 'ter': 1, 'd r': 1, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rns': 1, 's e': 1, ' ei': 1, 'eit': 1, 'ith': 1, 'r 0': 1, ' 0 ': 3, '0 o': 1, 'r 1': 1, ' 1.': 1, '1.\n': 1, '\n\nE': 3, '\nEx': 4, 'Exp': 3, 'xpe': 2, 'cte': 2, 'd T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me ': 1, 'e C': 1, ' Co': 1, 'Com': 1, 'lex': 1, 'exi': 1, 'xit': 1, 'ity': 1, 'ty:': 1, 'y: ': 1, ': O': 2, ' O(': 2, 'O(N': 1, '(N ': 1, 'N +': 1, ' + ': 1, '+ M': 1, ' M)': 1, 'M)\n': 1, ')\nE': 1, 'd A': 1, ' Au': 1, 'Aux': 1, 'uxi': 1, 'xil': 1, 'ili': 1, 'lia': 1, 'iar': 1, 'ary': 1, 'y S': 1, ' Sp': 1, 'Spa': 1, 'ce:': 1, 'e: ': 1, 'O(1': 1, '(1)': 1, '1)\n': 1, ')\n\n': 2, '\n\nC': 1, 'Con': 1, 'nst': 1, 'str': 2, 'tra': 1, 'rai': 1, 'ts:': 1, 's:\n': 1, ':\n1': 1, '\n1 ': 5, '1 <': 4, ' <=': 10, '<= ': 10, '= T': 1, 'T <': 1, '= 2': 1, ' 20': 1, '200': 1, '00\n': 3, '0\n1': 3, '= N': 1, ' N,': 1, 'N, ': 1, ', M': 1, ' M ': 1, 'M <': 1, '= 1': 7, ' 10': 3, '100': 2, '000': 2, '= m': 3, '[][': 1, '][]': 1, '] <': 1, '105': 1, '05\n': 1, '5\n1': 1, '= X': 1, ' X ': 1, 'X <': 1, '0\n\n': 2, 'Exa': 1, 'xam': 1, 'amp': 1, 'le:': 1, 'e:\n': 3, ':\nI': 1, ':\n2': 1, '\n2\n': 1, '2\n3': 1, '\n3 ': 2, '3 3': 2, ' 3\n': 1, '3\n3': 1, ' 30': 1, '30 ': 1, '0 3': 1, ' 38': 2, '38 ': 2, '8 4': 1, ' 44': 1, '44 ': 1, '4 5': 2, ' 52': 1, '52 ': 1, '2 5': 1, ' 54': 1, '54 ': 1, ' 57': 1, '57 ': 1, '7 6': 1, ' 60': 1, '60 ': 1, '0 6': 1, ' 69': 1, '69\n': 1, '9\n6': 1, '\n62': 1, '62\n': 1, '2\n1': 1, '1 6': 1, ' 6\n': 1, '6\n1': 1, '\n18': 1, '18 ': 1, '8 2': 1, ' 21': 1, '21 ': 1, '1 2': 1, ' 27': 1, '27 ': 1, '7 3': 1, '8 5': 1, ' 55': 2, '55 ': 2, '5 6': 1, ' 67': 1, '67\n': 1, '7\n5': 1, '\n55': 1, '55\n': 1, '5\nO': 1, ':\n0': 1, '\n0\n': 1, '\n1\n': 1, '1\n\n': 2, 'xpl': 1, 'pla': 1, 'lan': 1, 'ana': 1, 'nat': 1, 'ati': 1, 'on:': 1, 'n:\n': 1, '\nTe': 2, 'Tes': 2, 'stc': 2, 'tca': 2, 'e 1': 1, ' 1:': 1, '1: ': 1, ': 6': 1, ' 62': 1, '62 ': 1, '2 i': 1, 'ot ': 1, 't p': 1, ', s': 1, 'so ': 1, 'o o': 1, ' ou': 1, 'out': 1, 's 0': 1, '.\nT': 1, 'e 2': 1, ' 2:': 1, '2: ': 1, ': 5': 1, '5 i': 1, ' at': 1, 't 5': 1, ' 5t': 1, '5th': 1, 'th ': 1, 'h c': 1, ' ce': 1, 'cel': 1, 'ell': 1, 'll.': 1, 'l.\n': 1, '.\n""': 1, '\n""""': 1, '""\n\n': 1, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'ch(': 2, 'h(n': 2, '(n1': 1, 'n1,': 1, '1, ': 2, ', m': 6, ' m1': 3, 'm1,': 1, 'at,': 2, 't, ': 3, ', x': 2, ' x)': 2, 'x):': 1, '):\n': 4, ':\n ': 12, '\n  ': 27, '   ': 202, '  i': 4, ' i,': 1, 'i, ': 1, ', j': 1, ' j ': 5, 'j =': 1, ' = ': 9, '= 0': 2, ' 0,': 1, '0, ': 1, 'm1 ': 1, '1 -': 1, ' - ': 1, '- 1': 1, ' 1\n': 6, '1\n ': 5, '  w': 2, 'whi': 2, 'hil': 2, 'ile': 2, 'e T': 2, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue:': 1, 'f 0': 1, '0 <': 2, '= i': 3, ' i ': 4, 'i <': 1, ' < ': 3, '< n': 1, ' n1': 1, 'n1 ': 1, '1 a': 1, 'd 0': 1, '= j': 1, 'j <': 1, '< m': 1, 'm1:': 1, '1:\n': 1, '  e': 4, 'em ': 4, 'm =': 3, 't[i': 2, '[i]': 2, 'i][': 2, '][j': 2, '[j]': 2, 'j]\n': 1, ']\n ': 4, ' ==': 2, '== ': 2, '= x': 1, ' x:': 3, 'x:\n': 3, '  r': 2, 'rn ': 2, 'n 1': 1, 'eli': 2, 'lif': 2, 'm <': 1, '< x': 1, 'i +': 1, ' +=': 2, '+= ': 2, 'm >': 1, ' > ': 2, '> x': 1, '  j': 1, 'j -': 1, ' -=': 2, '-= ': 2, 'els': 1, 'lse': 1, 'se:': 1, '  b': 1, ' br': 1, 'bre': 1, 'eak': 1, 'ak\n': 1, 'k\n ': 1, 'n 0': 1, ' 0\n': 2, '\n\n\n': 2, 'f m': 1, 'mai': 3, 'in(': 2, 'n()': 2, '():': 1, '  T': 2, 'T =': 1, 'nt(': 4, 't(i': 2, '(in': 3, 'ut(': 4, 't()': 6, '())': 3, '))\n': 4, ')\n ': 3, 'T >': 1, '> 0': 1, ' 0:': 1, '0:\n': 1, '  n': 1, 'n, ': 2, ' m ': 1, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, ', i': 1, '().': 3, ').s': 3, '.sp': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'it(': 2, '  m': 3, 't =': 1, '= [': 2, ' [[': 1, '[[0': 1, '[0 ': 1, '0 f': 1, 'for': 5, 'r j': 2, 'j i': 2, ' ra': 4, 'ran': 4, 'ang': 4, 'nge': 4, 'ge(': 4, 'e(m': 2, '(m)': 2, 'm)]': 1, ')] ': 1, '] f': 1, 'r i': 2, 'i i': 2, 'e(n': 2, '(n)': 2, 'n)]': 1, ')]\n': 2, '  l': 1, 'ne_': 2, 'e_1': 2, '_1 ': 1, '1 =': 1, ' [i': 1, '[in': 1, 't(x': 1, '(x)': 1, 'x) ': 1, ') f': 1, '.st': 1, 'rip': 1, 'ip(': 1, 'p()': 1, '()]': 1, '  x': 1, 'x =': 1, '\n\n ': 1, '  k': 2, ' k ': 2, 'k =': 1, '0\n ': 1, '  f': 2, 'n):': 1, 'm):': 1, 'j] ': 1, '] =': 1, '= l': 1, '_1[': 1, '1[k': 1, '[k]': 1, 'k]\n': 1, 'k +': 1, '  p': 1, 't(s': 1, '(se': 1, '(n,': 1, 'x))': 1, 'T -': 1, '\n\ni': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1}"
Tuhin Mitra,spiral_matrix_traversal.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""spirally': 1, 'traversing': 1, 'a': 8, 'matrix': 5, 'given': 1, 'mat[][]': 1, 'of': 3, 'size': 1, 'm*n.': 1, 'traverse': 1, 'and': 4, 'print': 1, 'the': 9, 'in': 12, 'spiral': 3, 'form.': 1, 'input:': 2, 'first': 2, 'line': 3, 'input': 1, 'contains': 3, 'single': 2, 'integer': 1, 't,': 1, 'denoting': 1, 'number': 1, 'test': 2, 'cases.': 1, 'then': 1, 't': 4, 'cases': 1, 'follow.': 1, 'each': 1, 'testcase': 4, 'has': 1, '2': 9, 'lines.': 1, 'm': 6, 'n': 6, 'respectively': 1, 'separated': 2, 'by': 2, 'space.': 1, 'second': 1, 'm*n': 1, 'values': 1, 'spaces.': 1, 'output:': 2, 'elements': 2, 'when': 1, 'traveled': 1, 'form,': 1, 'will': 2, 'be': 2, 'displayed': 1, 'line.': 2, 'your': 2, 'task:': 1, 'this': 2, 'is': 4, 'function': 3, 'problem.': 1, 'you': 1, 'only': 1, 'need': 1, 'to': 1, 'complete': 2, 'spirallytraverse': 1, 'that': 1, 'takes': 1, 'm,': 3, 'n,': 5, 'as': 2, 'parameters': 1, 'prints': 1, 'traversal.': 1, 'driver': 3, 'code': 4, 'automatically': 1, 'appends': 1, 'new': 1, 'expected': 2, 'time': 1, 'complexity:': 1, 'o(n*m)': 1, 'auxiliary': 1, 'space:': 1, 'o(1)': 1, 'constraints:': 1, '1': 18, '<=': 6, '100': 3, '0': 6, 'ai': 1, 'example:': 1, '4': 8, '3': 8, '5': 5, '6': 5, '7': 4, '8': 5, '9': 5, '10': 5, '11': 5, '12': 5, '13': 2, '14': 2, '15': 2, '16': 2, 'explanation:': 1, '1:': 2, '2:': 2, 'applying': 1, 'same': 1, 'technique': 1, 'shown': 1, 'above': 1, ',': 1, 'output': 1, 'for': 11, '2nd': 1, '7.""""""': 1, '#': 9, 'rows': 1, 'cols': 1, 'def': 2, 'spirallytraverse(m,': 2, 'a):': 1, 'here': 1, '=': 16, '*': 1, 'top,': 1, 'down,': 1, 'left,': 1, 'right': 3, '0,': 2, '-': 4, '1,': 3, 'count': 6, 'direction': 9, 'while': 2, '<': 1, 'elements:': 1, 'if': 2, '==': 5, '0:': 1, 'i': 6, 'range(left,': 1, '+': 2, '1):': 2, 'print(a[top][i],': 1, 'end=""': 4, '"")': 4, '+=': 7, 'top': 2, 'elif': 3, 'range(top,': 1, 'down': 2, 'print(a[i][right],': 1, '-=': 3, 'range(right,': 1, 'left': 2, '-1):': 2, 'print(a[down][i],': 1, '3:': 1, 'range(down,': 1, 'print(a[i][left],': 1, '{': 1, 'starts': 1, 'initial': 1, 'template': 1, 'python': 1, 'main():': 1, 'int(input())': 1, '(t': 1, '>': 1, '0):': 1, 'map(int,': 1, 'input().split())': 1, 'mat': 1, '[[0': 1, 'j': 2, 'range(m)]': 1, 'range(n)]': 1, 'line1': 1, '[int(x)': 1, 'x': 1, 'input().strip().split()]': 1, 'k': 3, 'range(n):': 1, 'range(m):': 1, 'mat[i][j]': 1, 'line1[k]': 1, 'mat)': 1, 'print()': 1, '__name__': 1, '""__main__"":': 1, 'main()': 1, '}': 1, 'ends': 1}","{'""""""': 2, '""""S': 1, '""Sp': 1, 'Spi': 2, 'pir': 7, 'ira': 7, 'ral': 7, 'all': 5, 'lly': 5, 'ly ': 4, 'y t': 1, ' tr': 3, 'tra': 4, 'rav': 7, 'ave': 7, 'ver': 9, 'ers': 7, 'rsi': 1, 'sin': 3, 'ing': 5, 'ng ': 3, 'g a': 1, ' a ': 8, 'a m': 2, ' ma': 12, 'mat': 10, 'atr': 5, 'tri': 6, 'rix': 5, 'ix\n': 2, 'x\nG': 1, '\nGi': 1, 'Giv': 1, 'ive': 5, 'ven': 1, 'en ': 3, 'n a': 3, 'ix ': 3, 'x m': 1, 'at[': 2, 't[]': 1, '[][': 1, '][]': 1, '[] ': 1, '] o': 1, ' of': 3, 'of ': 3, 'f s': 2, ' si': 3, 'siz': 1, 'ize': 1, 'ze ': 1, 'e M': 1, ' M*': 2, 'M*N': 2, '*N.': 1, 'N. ': 1, '. T': 3, ' Tr': 1, 'Tra': 4, 'rse': 4, 'se ': 6, 'e a': 3, ' an': 4, 'and': 4, 'nd ': 6, 'd p': 2, ' pr': 8, 'pri': 7, 'rin': 7, 'int': 12, 'nt ': 7, 't t': 2, ' th': 9, 'the': 7, 'he ': 9, 'e m': 2, 'x i': 2, ' in': 17, 'in ': 12, 'n s': 2, ' sp': 7, 'spi': 5, 'al ': 4, 'l f': 2, ' fo': 14, 'for': 13, 'orm': 2, 'rm.': 1, 'm.\n': 1, '.\n\n': 4, '\n\nI': 1, '\nIn': 2, 'Inp': 2, 'npu': 6, 'put': 9, 'ut:': 4, 't:\n': 4, ':\nT': 3, '\nTh': 2, 'The': 3, 'e f': 3, ' fi': 1, 'fir': 1, 'irs': 2, 'rst': 2, 'st ': 4, 't l': 2, ' li': 8, 'lin': 8, 'ine': 8, 'ne ': 3, 'e o': 1, 'f t': 2, 'e i': 2, 'inp': 4, 'ut ': 2, 't c': 3, ' co': 13, 'con': 4, 'ont': 3, 'nta': 3, 'tai': 3, 'ain': 7, 'ins': 3, 'ns ': 3, 's a': 4, 'a s': 3, 'ngl': 2, 'gle': 2, 'le ': 4, 'nte': 1, 'teg': 1, 'ege': 1, 'ger': 1, 'er ': 5, 'r T': 2, ' T,': 1, 'T, ': 1, ', d': 3, ' de': 1, 'den': 1, 'eno': 1, 'not': 1, 'oti': 1, 'tin': 1, 'g t': 1, 'e n': 1, ' nu': 1, 'num': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'r o': 1, ' te': 5, 'tes': 4, 'est': 6, ' ca': 2, 'cas': 6, 'ase': 6, 'ses': 2, 'es.': 3, 's. ': 2, ' Th': 2, 'hen': 2, 'n T': 1, ' T ': 4, 'T t': 1, 'es ': 3, 's f': 2, 'fol': 1, 'oll': 1, 'llo': 1, 'low': 1, 'ow.': 1, 'w. ': 1, '. E': 1, ' Ea': 1, 'Eac': 1, 'ach': 1, 'ch ': 1, 'h t': 1, 'stc': 4, 'tca': 4, 'e h': 2, ' ha': 1, 'has': 1, 'as ': 3, 's 2': 1, ' 2 ': 6, '2 l': 1, 'nes': 1, '. F': 1, ' Fi': 1, 'Fir': 1, 'e c': 3, 's M': 2, ' M ': 1, 'M a': 1, 'd N': 1, ' N ': 2, 'N r': 1, ' re': 1, 'res': 1, 'esp': 1, 'spe': 1, 'pec': 3, 'ect': 12, 'cti': 13, 'tiv': 1, 'vel': 2, 'ely': 1, 'y s': 2, ' se': 2, 'sep': 2, 'epa': 2, 'par': 3, 'ara': 3, 'rat': 2, 'ate': 3, 'ted': 4, 'ed ': 7, 'd b': 2, ' by': 2, 'by ': 2, 'y a': 2, 'spa': 2, 'pac': 3, 'ace': 3, 'ce.': 1, 'e. ': 1, '. S': 1, ' Se': 1, 'Sec': 1, 'eco': 1, 'ond': 1, 'd l': 1, '*N ': 1, 'N v': 1, ' va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ues': 1, 's s': 2, 'ces': 1, 's.\n': 1, '\n\nO': 1, '\nOu': 2, 'Out': 2, 'utp': 3, 'tpu': 3, ':\nE': 1, '\nEl': 1, 'Ele': 1, 'lem': 4, 'eme': 3, 'men': 3, 'ent': 3, 'nts': 5, 'ts ': 3, 's w': 1, ' wh': 3, 'whe': 1, 'n t': 1, 'ele': 3, 'led': 1, 'd i': 2, 'n S': 1, ' Sp': 2, 'rm,': 1, 'm, ': 5, ', w': 1, ' wi': 2, 'wil': 2, 'ill': 2, 'll ': 2, 'l b': 2, ' be': 2, 'be ': 2, 'e d': 2, ' di': 10, 'dis': 1, 'isp': 1, 'spl': 3, 'pla': 3, 'lay': 1, 'aye': 1, 'yed': 1, 'e l': 1, 'ne.': 2, 'e.\n': 2, '\n\nY': 1, '\nYo': 1, 'You': 3, 'our': 2, 'ur ': 2, ' Ta': 1, 'Tas': 1, 'ask': 1, 'sk:': 1, 'k:\n': 1, 'Thi': 1, 'his': 2, 'is ': 6, 's i': 1, ' is': 4, 'a f': 1, ' fu': 3, 'fun': 3, 'unc': 3, 'nct': 3, 'tio': 13, 'ion': 13, 'on ': 12, 'n p': 1, 'pro': 1, 'rob': 1, 'obl': 1, 'ble': 1, 'em.': 1, 'm. ': 1, '. Y': 1, ' Yo': 2, 'ou ': 1, 'u o': 1, ' on': 1, 'onl': 1, 'nly': 1, 'y n': 1, ' ne': 2, 'nee': 1, 'eed': 1, 'd t': 2, ' to': 4, 'to ': 1, 'o c': 1, 'com': 1, 'omp': 3, 'mpl': 5, 'ple': 4, 'let': 2, 'ete': 3, 'te ': 3, 'e t': 4, 'lyT': 3, 'yTr': 3, 'tha': 1, 'hat': 1, 'at ': 2, ' ta': 1, 'tak': 1, 'ake': 1, 'kes': 1, 's m': 1, ' m,': 2, ', n': 5, ' n,': 5, 'n, ': 7, ', a': 2, 'd m': 1, 'x a': 1, ' as': 2, 's p': 1, ' pa': 1, 'ram': 1, 'ame': 3, 'met': 1, 'ter': 1, 'rs ': 1, 's t': 2, 'e s': 1, 'l t': 1, 'rsa': 1, 'sal': 1, 'al.': 1, 'l. ': 1, ' dr': 1, 'dri': 1, 'riv': 3, 'r c': 2, 'cod': 2, 'ode': 4, 'de ': 4, ' au': 1, 'aut': 1, 'uto': 1, 'tom': 1, 'oma': 1, 'ati': 2, 'tic': 1, 'ica': 1, 'cal': 1, ' ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 5, 'nds': 2, 'ds ': 1, 'a n': 1, 'new': 1, 'ew ': 1, 'w l': 1, '\n\nE': 3, '\nEx': 4, 'Exp': 3, 'xpe': 2, 'cte': 2, 'd T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me ': 2, 'e C': 1, ' Co': 4, 'Com': 2, 'lex': 1, 'exi': 1, 'xit': 1, 'ity': 1, 'ty:': 1, 'y: ': 1, ': O': 2, ' O(': 2, 'O(N': 1, '(N*': 1, 'N*M': 1, '*M)': 1, 'M)\n': 1, ')\nE': 1, 'd A': 1, ' Au': 1, 'Aux': 1, 'uxi': 1, 'xil': 1, 'ili': 1, 'lia': 1, 'iar': 1, 'ary': 1, 'ry ': 1, 'y S': 1, 'Spa': 1, 'ce:': 1, 'e: ': 1, 'O(1': 1, '(1)': 1, '1)\n': 1, ')\n\n': 3, '\n\nC': 1, '\nCo': 1, 'Con': 1, 'ons': 1, 'nst': 1, 'str': 2, 'rai': 1, 'ts:': 2, 's:\n': 2, ':\n1': 2, '\n1 ': 5, '1 <': 1, ' <=': 6, '<= ': 6, '= T': 1, 'T <': 1, '= 1': 15, ' 10': 8, '100': 3, '00\n': 3, '0\n2': 1, '\n2 ': 1, '2 <': 1, '= M': 1, ' M,': 1, 'M, ': 1, ', N': 1, 'N <': 1, '0\n0': 1, '\n0 ': 1, '0 <': 1, '= A': 1, ' Ai': 1, 'Ai ': 1, 'i <': 1, '0\n\n': 4, 'Exa': 1, 'xam': 1, 'amp': 1, 'le:': 1, 'e:\n': 1, ':\nI': 1, ':\n2': 1, '\n2\n': 1, '2\n4': 1, '\n4 ': 1, '4 4': 1, ' 4\n': 2, '4\n1': 2, '1 2': 5, '2 3': 5, ' 3 ': 5, '3 4': 6, ' 4 ': 5, '4 5': 2, ' 5 ': 5, '5 6': 5, ' 6 ': 5, '6 7': 5, ' 7 ': 3, '7 8': 2, ' 8 ': 5, '8 9': 2, ' 9 ': 5, '9 1': 2, '10 ': 4, '0 1': 2, ' 11': 5, '11 ': 5, '1 1': 5, ' 12': 5, '12 ': 4, '2 1': 4, ' 13': 2, '13 ': 2, '3 1': 1, ' 14': 2, '14 ': 2, '4 1': 2, ' 15': 2, '15 ': 2, '5 1': 2, ' 16': 2, '16\n': 1, '6\n3': 1, '\n3 ': 1, '12\n': 1, '2\nO': 1, '4 8': 3, '8 1': 3, '16 ': 1, '6 1': 1, '3 9': 1, '9 5': 3, '7 1': 1, '10\n': 1, '0\n1': 1, '0 9': 2, ' 7\n': 1, '7\n\n': 1, 'xpl': 1, 'lan': 1, 'ana': 1, 'nat': 1, 'on:': 1, 'n:\n': 1, '\nTe': 2, 'Tes': 2, 'e 1': 2, ' 1:': 2, '1:\n': 2, ':\n\n': 1, '\n\n\n': 3, '\n\nT': 1, 'e 2': 2, ' 2:': 2, '2: ': 1, ': A': 1, ' Ap': 1, 'App': 1, 'ppl': 1, 'ply': 1, 'lyi': 1, 'yin': 1, 'g s': 1, ' sa': 1, 'sam': 1, 'tec': 1, 'ech': 1, 'chn': 1, 'hni': 1, 'niq': 1, 'iqu': 1, 'que': 1, 'ue ': 1, ' sh': 1, 'sho': 1, 'how': 1, 'own': 6, 'wn ': 3, ' ab': 1, 'abo': 1, 'bov': 1, 'ove': 1, 've ': 1, 'e ,': 1, ' , ': 1, ', o': 1, ' ou': 1, 'out': 1, 't f': 1, 'or ': 11, 'r t': 1, ' 2n': 1, '2nd': 1, 'e w': 1, ' 1 ': 1, ' 7.': 1, '7.""': 1, '.""""': 1, '""""\n': 1, '""\n\n': 1, '\n\n#': 2, '\n# ': 8, '# C': 1, 'thi': 1, 'on\n': 1, 'n\n#': 1, '# a': 1, 'a i': 1, 'x\n#': 1, '# m': 1, ' m ': 5, 'm i': 1, 's r': 1, ' ro': 1, 'row': 1, 'ows': 1, 'ws\n': 1, 's\n#': 2, '# n': 1, ' n ': 2, 'n i': 2, 's c': 1, 'col': 1, 'ols': 1, 'ls\n': 1, 's\nd': 1, '\nde': 2, 'def': 2, 'ef ': 2, 'se(': 2, 'e(m': 4, '(m,': 2, ' a)': 1, 'a):': 1, '):\n': 9, ':\n ': 15, '\n  ': 46, '   ': 372, '  #': 1, ' # ': 1, '# Y': 1, ' he': 1, 'her': 1, 'ere': 1, 're\n': 1, 'e\n ': 1, '  e': 4, ' el': 5, 's =': 1, ' = ': 16, '= m': 3, 'm *': 1, ' * ': 1, '* n': 1, ' n\n': 2, 'n\n ': 1, '  t': 2, 'top': 5, 'op,': 2, 'p, ': 2, ' do': 3, 'dow': 5, 'wn,': 2, ', l': 2, ' le': 3, 'lef': 5, 'eft': 5, 'ft,': 2, 't, ': 4, ', r': 2, ' ri': 3, 'rig': 5, 'igh': 5, 'ght': 5, 'ht ': 3, 't =': 3, '= 0': 7, ' 0,': 2, '0, ': 2, ', m': 4, 'm -': 1, ' - ': 4, '- 1': 4, ' 1,': 3, '1, ': 3, ', 0': 1, 'n -': 2, ' 1\n': 12, '1\n ': 10, '  c': 5, 'cou': 6, 'oun': 6, 'unt': 6, ' 0\n': 5, '0\n ': 2, '  d': 6, 'dir': 9, 'ire': 9, 'rec': 9, 'n =': 9, '\n\n ': 7, '  w': 2, 'whi': 2, 'hil': 2, 'ile': 2, 't <': 1, ' < ': 1, '< e': 1, '  i': 1, ' if': 1, 'if ': 5, 'f d': 4, ' ==': 5, '== ': 5, ' 0:': 1, '0:\n': 1, '  f': 6, 'r i': 6, ' i ': 6, 'i i': 6, 'n r': 8, ' ra': 8, 'ran': 8, 'ang': 8, 'nge': 8, 'ge(': 8, 'e(l': 1, '(le': 1, 't +': 6, ' + ': 2, '+ 1': 2, ' 1)': 2, '1):': 4, '  p': 5, 'nt(': 7, 't(a': 4, '(a[': 4, 'a[t': 1, '[to': 1, 'op]': 1, 'p][': 1, '][i': 2, '[i]': 5, 'i],': 2, '], ': 4, ', e': 4, ' en': 4, 'nd=': 4, 'd=""': 4, '="" ': 4, '"" ""': 4, ' "")': 4, '"")\n': 4, ')\n ': 6, ' +=': 7, '+= ': 7, 'op ': 2, 'p +': 1, 'eli': 3, 'lif': 3, 'e(t': 1, '(to': 1, 'n +': 1, 'a[i': 2, 'i][': 3, '][r': 1, '[ri': 1, 'ht]': 1, 't],': 2, '= 2': 2, ' 2\n': 1, '2\n ': 1, '  r': 1, 't -': 2, ' -=': 3, '-= ': 3, '2:\n': 1, 'e(r': 1, '(ri': 1, 'ht,': 1, 'ft ': 2, ', -': 2, ' -1': 2, '-1)': 2, 'a[d': 1, '[do': 1, 'wn]': 1, 'n][': 1, '= 3': 2, ' 3\n': 2, '3\n ': 1, ' 3:': 1, '3:\n': 1, 'e(d': 1, '(do': 1, ', t': 1, 'p -': 1, '][l': 1, '[le': 1, 'ft]': 1, '  l': 2, '# {': 1, ' {\n': 1, '{\n#': 1, '#  ': 1, '  D': 1, ' Dr': 2, 'Dri': 2, 'r C': 2, 'Cod': 2, 'e S': 1, ' St': 1, 'Sta': 1, 'tar': 1, 'art': 1, 'rts': 1, 'ts\n': 1, '# I': 1, ' In': 1, 'Ini': 1, 'nit': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'l T': 1, ' Te': 1, 'Tem': 1, 'emp': 1, 'lat': 1, 'r P': 1, ' Py': 1, 'Pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'n 3': 1, '3\n\n': 1, '\n\nd': 1, 'f m': 1, 'mai': 3, 'in(': 2, 'n()': 2, '():': 1, '  T': 2, 'T =': 1, '= i': 1, 't(i': 1, '(in': 2, 'ut(': 3, 't()': 6, '())': 2, '))\n': 2, 'e (': 1, ' (T': 1, '(T ': 1, 'T >': 1, ' > ': 1, '> 0': 1, ' 0)': 1, '0):': 1, '  n': 2, 'm =': 2, 'map': 1, 'ap(': 1, 'p(i': 1, 'nt,': 1, ', i': 1, '().': 3, ').s': 3, '.sp': 2, 'pli': 2, 'lit': 2, 'it(': 2, '  m': 3, '= [': 2, ' [[': 1, '[[0': 1, '[0 ': 1, '0 f': 1, 'r j': 2, ' j ': 2, 'j i': 2, '(m)': 2, 'm)]': 1, ')] ': 1, '] f': 1, 'e(n': 2, '(n)': 2, 'n)]': 1, ')]\n': 2, ']\n ': 2, 'ne1': 2, 'e1 ': 1, '1 =': 1, ' [i': 1, '[in': 1, 't(x': 1, '(x)': 1, 'x) ': 1, ') f': 1, 'r x': 1, ' x ': 1, '.st': 1, 'rip': 1, 'ip(': 1, 'p()': 1, '()]': 1, ']\n\n': 1, '  k': 3, ' k ': 3, 'k =': 2, 'n):': 1, 'm):': 1, 't[i': 1, '][j': 1, '[j]': 1, 'j] ': 1, '] =': 1, '= l': 1, 'e1[': 1, '1[k': 1, '[k]': 1, 'k]\n': 1, 'k +': 1, '1\n\n': 2, 'n\n\n': 1, '  s': 1, 'at)': 1, 't)\n': 1, '()\n': 2, 'T -': 1, '\n\ni': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, '= ""': 1, ' ""_': 1, '""__': 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, '__""': 1, '_"":': 1, '"":\n': 1, ')\n#': 1, '# }': 1, ' } ': 1, '} D': 1, 'e E': 1, ' En': 1, 'End': 1}"
Tuhin Mitra,task-scheduler.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'from': 2, 'typing': 1, 'import': 1, 'list,': 1, 'optional': 1, 'def': 2, 'find_next_best_task(tasks:': 1, 'list[str],': 2, 'prev_prev_task:': 2, 'str,': 2, 'prev_task:str,': 1, 'current_task:': 1, 'current_index:': 1, 'int,': 1, 'completed_tasks:': 3, 'set)': 1, '->': 3, 'optional[int]:': 1, 'print(f""': 2, 'trying': 1, 'to': 2, 'find': 1, 'better': 4, 'search': 1, 'array:': 1, '{tasks}"")': 1, 'for': 3, 'task_index,': 1, 'task': 17, 'in': 9, 'enumerate(tasks):': 1, 'if': 11, '!=': 3, 'current_task': 1, 'and': 4, '(task_index': 1, '+': 4, 'current_index)': 1, 'not': 4, 'completed_tasks': 3, 'prev_task': 6, 'found': 1, 'task:': 1, '{task},': 1, 'index:': 2, '{task_index': 1, 'current_index}"")': 1, 'return': 3, 'task_index': 7, 'current_index': 1, 'print(""': 1, 'no': 1, 'found"")': 1, 'none': 3, 'least_interval(tasks:': 1, 'n:': 1, 'int)': 1, 'int:': 1, '#': 12, '=': 23, 'set()': 2, '[]': 1, '0': 5, 'n_tasks': 1, 'len(tasks)': 1, 'prev_prev_task': 4, 'time_required': 6, 'remaining_idle_time': 9, 'checked_tasks': 1, 'while': 1, '<': 1, 'n_tasks:': 1, 'print(f""\\n---': 1, '{task_index}': 1, '---"")': 1, 'tasks[task_index]': 1, '(prev_task,': 1, 'prev_prev_task)': 1, 'or': 1, '>': 2, '0:': 3, 'checked_tasks:': 1, 'checked_tasks.add(task_index)': 1, 'cooldown_time': 3, 'n': 2, '-': 1, '(1': 1, '==': 3, 'else': 1, '0)': 1, '+=': 6, 'add': 2, 'the': 4, 'cool': 1, 'down': 1, 'time': 3, 'doing': 1, 'same': 1, 'again': 1, 'print(f""remaining': 3, 'idle': 4, 'time:': 3, '{remaining_idle_time}"")': 3, 'print(f""task:': 1, '{task}({task_index})': 1, '{(prev_prev_task,': 1, 'prev_task)}"")': 1, 'better_task_index': 3, 'find_next_best_task(tasks[task_index+1:],': 1, 'prev_prev_task,': 1, 'prev_task,': 1, 'task,': 1, 'task_index+1,': 1, 'completed_tasks)': 1, 'completed_tasks.append(better_task_index)': 1, 'print(f""task': 2, '{tasks[better_task_index]}': 1, 'is': 2, 'completed.': 2, 'prev': 2, 'was': 2, '{prev_task}': 1, '(by': 1, 'search)"")': 1, 'tasks[better_task_index]': 1, '1': 7, 'else:': 2, '-=': 2, 'print([tasks[x]': 2, 'x': 2, 'completed_tasks])': 2, 'continue': 1, 'print(""------': 1, '-------"")': 1, 'completed_tasks.append(task_index)': 1, '{task}': 1, '{prev_task}"")': 1, 'print(task,': 1, 'end=""': 1, '"")': 1, 'required': 1, 'do': 1, 'current': 1, 'increment': 1, 'index': 1, 'print(f""skipped': 1, '{task_index=}': 1, '({tasks[task_index]})': 1, 'as': 1, 'already': 2, 'completed"")': 1, 'skip': 1, 'completed': 1, '__name__': 1, ""'__main__':"": 1, '_tasks': 3, '[""a"",""a"",""a"",""b"",""b"",""b""]': 1, '[""a"",': 1, '""b"",': 1, '""a""]': 1, '[""a"",""a"",""a"",""a"",""a"",""a"",""b"",""c"",""d"",""e"",""f"",""g""]': 1, '_time_requred': 1, 'least_interval(_tasks,': 1, '2)': 1, 'print()': 1, 'print(""tot.': 1, 'required:"",': 1, '_time_requred)': 1}","{'fro': 2, 'rom': 2, 'om ': 2, 'm t': 1, ' ty': 1, 'typ': 1, 'ypi': 1, 'pin': 1, 'ing': 18, 'ng ': 6, 'g i': 4, ' im': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't L': 1, ' Li': 3, 'Lis': 3, 'ist': 3, 'st,': 1, 't, ': 2, ', O': 1, ' Op': 2, 'Opt': 2, 'pti': 2, 'tio': 2, 'ion': 2, 'ona': 2, 'nal': 2, 'al\n': 1, 'l\n\n': 1, '\n\n\n': 1, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f f': 1, ' fi': 3, 'fin': 3, 'ind': 35, 'nd_': 2, 'd_n': 2, '_ne': 2, 'nex': 2, 'ext': 2, 'xt_': 2, 't_b': 2, '_be': 2, 'bes': 2, 'est': 2, 'st_': 4, 't_t': 4, '_ta': 51, 'tas': 105, 'ask': 108, 'sk(': 2, 'k(t': 2, '(ta': 9, 'sks': 32, 'ks:': 7, 's: ': 3, ': L': 2, 'st[': 2, 't[s': 2, '[st': 2, 'str': 5, 'tr]': 2, 'r],': 2, '], ': 3, ', p': 6, ' pr': 34, 'pre': 30, 'rev': 32, 'ev_': 30, 'v_p': 9, '_pr': 9, 'v_t': 21, 'sk:': 6, 'k: ': 4, ': s': 3, ' st': 2, 'tr,': 3, 'r, ': 3, 'k:s': 1, ':st': 1, ', c': 4, ' cu': 7, 'cur': 7, 'urr': 7, 'rre': 7, 'ren': 7, 'ent': 8, 'nt_': 6, 't_i': 6, '_in': 31, 'nde': 32, 'dex': 32, 'ex:': 3, 'x: ': 3, ': i': 2, ' in': 16, 'int': 23, 'nt,': 1, ' co': 20, 'com': 15, 'omp': 15, 'mpl': 15, 'ple': 15, 'let': 15, 'ete': 15, 'ted': 15, 'ed_': 14, 'd_t': 14, ' se': 5, 'set': 3, 'et)': 1, 't) ': 2, ') -': 2, ' ->': 3, '-> ': 3, '> O': 1, 'al[': 1, 'l[i': 1, '[in': 1, 'nt]': 1, 't]:': 1, ']:\n': 1, ':\n ': 14, '\n  ': 66, '   ': 655, '  p': 21, 'pri': 17, 'rin': 17, 'nt(': 17, 't(f': 10, '(f""': 10, 'f"" ': 2, '"" T': 1, ' Tr': 1, 'Try': 1, 'ryi': 1, 'yin': 1, 'g t': 1, ' to': 2, 'to ': 2, 'o f': 1, 'nd ': 6, 'd b': 3, ' be': 7, 'bet': 10, 'ett': 10, 'tte': 10, 'ter': 12, 'er ': 4, 'r s': 2, 'sea': 2, 'ear': 2, 'arc': 2, 'rch': 2, 'ch ': 1, 'h f': 1, ' fr': 1, 'm a': 1, ' ar': 1, 'arr': 1, 'rra': 1, 'ray': 1, 'ay:': 1, 'y: ': 1, ': {': 8, ' {t': 8, '{ta': 10, 'ks}': 1, 's}""': 1, '}"")': 7, '"")\n': 13, ')\n ': 19, '  f': 1, ' fo': 4, 'for': 3, 'or ': 4, 'r t': 3, ' ta': 29, 'sk_': 25, 'k_i': 25, 'ex,': 1, 'x, ': 1, ', t': 4, 'sk ': 26, 'k i': 5, 'in ': 9, 'n e': 1, ' en': 2, 'enu': 1, 'num': 1, 'ume': 1, 'mer': 1, 'era': 1, 'rat': 1, 'ate': 1, 'te(': 1, 'e(t': 1, 'ks)': 3, 's):': 1, '):\n': 1, '  i': 6, ' if': 10, 'if ': 11, 'f t': 6, 'k !': 3, ' !=': 3, '!= ': 3, '= c': 3, 'k a': 4, ' an': 4, 'and': 4, 'd (': 1, ' (t': 1, 'ex ': 12, 'x +': 5, ' + ': 4, '+ c': 3, 'ex)': 4, 'x) ': 1, ') n': 1, ' no': 4, 'not': 4, 'ot ': 4, 't i': 4, 'n c': 6, 'ks ': 8, 's a': 2, 'd t': 5, '= p': 5, 'k:\n': 1, '"" F': 1, ' Fo': 1, 'Fou': 1, 'oun': 2, 'und': 2, 'sk}': 5, 'k},': 1, '}, ': 1, 'ex}': 3, 'x}""': 1, '  r': 9, ' re': 14, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n t': 3, 'ex\n': 2, 'x\n ': 2, 't(""': 3, '("" ': 1, '"" N': 1, ' No': 4, 'No ': 1, 'o b': 1, 'k f': 1, 'fou': 1, 'nd""': 1, 'd"")': 2, 'n N': 1, 'Non': 3, 'one': 3, 'ne\n': 3, 'e\n\n': 1, 'f l': 1, ' le': 3, 'lea': 2, 'eas': 2, 'ast': 2, 'nte': 2, 'erv': 2, 'rva': 2, 'val': 2, 'al(': 2, 'l(t': 1, ', n': 1, ' n:': 1, 'n: ': 1, 'nt)': 1, '> i': 1, 'nt:': 1, 't:\n': 1, '  #': 12, ' # ': 12, '# c': 1, 's =': 7, ' = ': 23, '= s': 2, 'et(': 2, 't()': 3, '()\n': 3, '  c': 7, '= [': 4, ' []': 1, '[]\n': 1, ']\n\n': 1, '\n\n ': 8, '  t': 8, 'x =': 2, '= 0': 6, ' 0\n': 5, '0\n ': 4, '  n': 1, ' n_': 2, 'n_t': 5, '= l': 2, 'len': 1, 'en(': 1, 'n(t': 1, 's)\n': 2, 'k =': 8, '= N': 2, 'e\n ': 4, ' ti': 11, 'tim': 28, 'ime': 29, 'me_': 9, 'e_r': 8, '_re': 8, 'req': 10, 'equ': 10, 'qui': 8, 'uir': 8, 'ire': 8, 'red': 10, 'ed ': 8, 'd =': 2, 'rem': 13, 'ema': 15, 'mai': 16, 'ain': 17, 'ini': 15, 'nin': 15, 'ng_': 12, 'g_i': 12, '_id': 12, 'idl': 16, 'dle': 16, 'le_': 12, 'e_t': 12, '_ti': 17, 'me ': 15, 'e =': 5, ' ch': 3, 'che': 3, 'hec': 3, 'eck': 3, 'cke': 3, 'ked': 3, ')\n\n': 6, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 5, 'e t': 7, 'x <': 1, ' < ': 1, '< n': 1, 's:\n': 4, 'f""\\': 1, '""\\n': 1, '\\n-': 1, 'n--': 1, '---': 11, '-- ': 2, '- T': 1, ' Ta': 1, 'Tas': 3, 'x} ': 1, '} -': 1, ' --': 2, '--""': 2, '-"")': 2, 'x n': 3, '= t': 3, 'ks[': 7, 's[t': 3, '[ta': 5, 'ex]': 4, 'x]\n': 2, ']\n ': 5, 'n (': 1, ' (p': 1, '(pr': 2, 'sk,': 6, 'k, ': 6, 'sk)': 2, 'k) ': 1, ') o': 1, ' or': 1, 'r r': 1, 'e >': 2, ' > ': 2, '> 0': 2, ' 0:': 3, '0:\n': 3, 'ks.': 3, 's.a': 3, '.ad': 1, 'add': 3, 'dd(': 1, 'd(t': 2, 'x)\n': 3, 'coo': 4, 'ool': 4, 'old': 3, 'ldo': 3, 'dow': 4, 'own': 4, 'wn_': 3, '= n': 1, ' n ': 2, 'n -': 1, ' - ': 1, '- (': 1, ' (1': 1, '(1 ': 1, '1 i': 1, ' ==': 3, '== ': 3, 'k e': 1, ' el': 3, 'els': 3, 'lse': 3, 'se ': 1, 'e 0': 1, ' 0)': 1, '0)\n': 1, '# t': 1, 'd +': 4, ' +=': 6, '+= ': 6, 'e  ': 2, '# a': 2, ' ad': 2, 'dd ': 2, ' th': 4, 'the': 4, 'he ': 4, 'e c': 2, 'ol ': 1, 'l d': 1, ' do': 3, 'wn ': 1, 'e i': 1, 'f d': 1, 'doi': 1, 'oin': 1, 'g s': 1, ' sa': 1, 'sam': 1, 'ame': 2, ' ag': 1, 'aga': 1, 'gai': 1, 'in\n': 1, 'n\n ': 1, 'me\n': 1, 'f""R': 3, '""Re': 3, 'Rem': 3, ' id': 4, 'me:': 3, 'e: ': 3, ' {r': 3, '{re': 3, 'me}': 3, 'e}""': 3, 'f""t': 1, '""ta': 1, 'k}(': 1, '}({': 1, '({t': 2, 'x})': 1, '}) ': 2, ') i': 1, 'n {': 1, ' {(': 1, '{(p': 1, 'k)}': 1, ')}""': 1, '  b': 1, 'er_': 6, 'r_t': 6, '= f': 1, 'ex+': 2, 'x+1': 2, '+1:': 1, '1:]': 1, ':],': 1, '+1,': 1, '1, ': 1, 'f b': 1, 'x a': 1, '.ap': 2, 'app': 2, 'ppe': 3, 'pen': 2, 'end': 3, 'nd(': 2, 'd(b': 1, '(be': 1, 'f""T': 2, '""Ta': 2, 'k {': 2, 's[b': 2, '[be': 2, 'x]}': 2, ']} ': 1, '} i': 2, ' is': 2, 'is ': 2, 's c': 2, 'ed.': 2, 'd. ': 2, '. P': 2, ' Pr': 2, 'Pre': 2, 'ev ': 2, 'v t': 2, 'k w': 2, ' wa': 2, 'was': 2, 'as ': 3, 's {': 2, ' {p': 2, '{pr': 2, 'k} ': 2, '} (': 2, ' (b': 1, '(by': 1, 'by ': 1, 'y b': 1, 'ch)': 1, 'h)""': 1, ')"")': 1, 'sk\n': 4, 'k\n ': 4, 'f n': 1, 'n =': 1, '= 1': 7, ' 1\n': 4, '1\n ': 4, '  e': 2, 'se:': 2, 'e:\n': 2, 'e -': 3, ' -=': 2, '-= ': 2, 't([': 2, '([t': 2, 's[x': 2, '[x]': 2, 'x] ': 2, '] f': 2, 'r x': 2, ' x ': 2, 'x i': 2, 'ks]': 2, 's])': 2, '])\n': 2, 'con': 1, 'ont': 1, 'nti': 1, 'tin': 1, 'inu': 1, 'nue': 1, 'ue\n': 1, '# i': 2, 'f r': 1, '#  ': 1, '# p': 2, '(""-': 1, '""--': 1, '- i': 1, 'k}""': 1, 't(t': 1, ', e': 1, 'nd=': 1, 'd=""': 1, '="" ': 1, '"" -': 1, '> ""': 1, ' "")': 1, ' 1 ': 3, '1 +': 1, '+ r': 1, 'e r': 2, 'o d': 1, 'do ': 1, 'o t': 1, 'nt ': 2, 't t': 2, '1  ': 2, 'inc': 1, 'ncr': 1, 'cre': 1, 'eme': 1, 'men': 1, 'f""S': 1, '""Sk': 1, 'Ski': 1, 'kip': 2, 'ipp': 1, 'ped': 1, 'd {': 1, 'ex=': 1, 'x=}': 1, '=} ': 1, ' ({': 1, ']})': 1, ') a': 1, ' as': 1, ' al': 2, 'alr': 2, 'lre': 2, 'rea': 2, 'ead': 2, 'ady': 2, 'dy ': 2, 'y c': 2, 'ed""': 1, '# s': 1, ' sk': 1, 'ski': 1, 'ip ': 1, 'p i': 1, 'ed\n': 2, 'd\n ': 1, '0\n\n': 1, 'd\n\n': 1, '\n\ni': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'e__': 1, '__ ': 1, '_ =': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  _': 2, ' _t': 5, ' [""': 3, '[""A': 3, '""A""': 11, 'A"",': 10, '"",""': 16, ',""A': 7, ',""B': 4, '""B""': 5, 'B"",': 4, 'B""]': 1, '""]\n': 3, '# _': 2, '"", ': 3, ', ""': 2, ' ""B': 1, ' ""A': 1, 'A""]': 1, ',""C': 1, '""C""': 1, 'C"",': 1, ',""D': 1, '""D""': 1, 'D"",': 1, ',""E': 1, '""E""': 1, 'E"",': 1, ',""F': 1, '""F""': 1, 'F"",': 1, ',""G': 1, '""G""': 1, 'G""]': 1, 'qur': 2, 'ure': 2, 'l(_': 1, '(_t': 1, 'ks,': 1, 's, ': 1, ', 2': 1, ' 2)': 1, '2)\n': 1, '(""T': 1, '""To': 1, 'Tot': 1, 'ot.': 1, 't. ': 1, '. T': 1, ' Ti': 1, 'Tim': 1, 'ed:': 1, 'd:""': 1, ':"",': 1, ', _': 1, 'ed)': 1}"
Tuhin Mitra,time-conversion.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#!/bin/python3': 1, '""""""': 2, 'problem': 1, 'solved:': 1, 'https://www.hackerrank.com/challenges/one-week-preparation-kit-time-conversion/problem?h_l=interview&isfullscreen=true&playlist_slugs%5b%5d%5b%5d=preparation-kits&playlist_slugs%5b%5d%5b%5d=one-week-preparation-kit&playlist_slugs%5b%5d%5b%5d=one-week-day-one': 1, 'import': 6, 'math': 1, 'os': 1, 'random': 1, 're': 1, 'sys': 1, 'from': 1, 'datetime': 2, '#': 6, 'complete': 1, 'the': 3, ""'timeconversion'"": 1, 'function': 3, 'below.': 1, 'is': 1, 'expected': 1, 'to': 1, 'return': 2, 'a': 1, 'string.': 1, 'accepts': 1, 'string': 1, 's': 2, 'as': 1, 'parameter.': 1, 'def': 1, 'timeconversion(s):': 1, 'datetime.strptime(s,': 1, '""%i:%m:%s%p"").strftime(""%h:%m:%s"")': 1, 'if': 1, '__name__': 1, '==': 1, ""'__main__':"": 1, 'fptr': 1, '=': 3, ""open(os.environ['output_path'],"": 1, ""'w')"": 1, 'input()': 1, 'result': 1, 'timeconversion(s)': 1, 'fptr.write(result': 1, '+': 1, ""'\\n')"": 1, 'fptr.close()': 1}","{'#!/': 1, '!/b': 1, '/bi': 1, 'bin': 1, 'in/': 1, 'n/p': 2, '/py': 1, 'pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'on3': 1, 'n3\n': 1, '3\n\n': 1, '\n\n""': 1, '\n""""': 2, '""""""': 2, '""""\n': 2, '""\nP': 1, '\nPr': 1, 'Pro': 1, 'rob': 2, 'obl': 2, 'ble': 2, 'lem': 2, 'em ': 1, 'm s': 1, ' so': 1, 'sol': 1, 'olv': 1, 'lve': 1, 'ved': 1, 'ed:': 1, 'd: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.h': 1, '.ha': 1, 'hac': 1, 'ack': 1, 'cke': 1, 'ker': 1, 'err': 1, 'rra': 1, 'ran': 2, 'ank': 1, 'nk.': 1, 'k.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/c': 1, '/ch': 1, 'cha': 1, 'hal': 1, 'all': 1, 'lle': 1, 'len': 1, 'eng': 1, 'nge': 1, 'ges': 1, 'es/': 1, 's/o': 1, '/on': 1, 'one': 4, 'ne-': 3, 'e-w': 3, '-we': 3, 'wee': 3, 'eek': 3, 'ek-': 3, 'k-p': 2, '-pr': 2, 'pre': 3, 'rep': 3, 'epa': 3, 'par': 4, 'ara': 4, 'rat': 3, 'ati': 3, 'tio': 6, 'ion': 10, 'on-': 3, 'n-k': 3, '-ki': 3, 'kit': 3, 'it-': 1, 't-t': 1, '-ti': 1, 'tim': 9, 'ime': 9, 'me-': 1, 'e-c': 1, '-co': 1, 'con': 1, 'onv': 4, 'nve': 4, 'ver': 4, 'ers': 4, 'rsi': 4, 'sio': 4, 'on/': 1, '/pr': 1, 'pro': 1, 'em?': 1, 'm?h': 1, '?h_': 1, 'h_l': 1, '_l=': 1, 'l=i': 1, '=in': 1, 'int': 1, 'nte': 1, 'ter': 2, 'erv': 1, 'rvi': 1, 'vie': 1, 'iew': 1, 'ew&': 1, 'w&i': 1, '&is': 1, 'isF': 1, 'sFu': 1, 'Ful': 1, 'ull': 1, 'llS': 1, 'lSc': 1, 'Scr': 1, 'cre': 1, 'ree': 1, 'een': 1, 'en=': 1, 'n=t': 1, '=tr': 1, 'tru': 1, 'rue': 1, 'ue&': 1, 'e&p': 1, '&pl': 3, 'pla': 3, 'lay': 3, 'ayl': 3, 'yli': 3, 'lis': 3, 'ist': 3, 'st_': 3, 't_s': 3, '_sl': 3, 'slu': 3, 'lug': 3, 'ugs': 3, 'gs%': 3, 's%5': 3, '%5B': 6, '5B%': 6, 'B%5': 6, '%5D': 6, '5D%': 3, 'D%5': 3, '5D=': 3, 'D=p': 1, '=pr': 1, 'its': 1, 'ts&': 1, 's&p': 1, 'D=o': 2, '=on': 2, 'it&': 1, 't&p': 1, 'k-d': 1, '-da': 1, 'day': 1, 'ay-': 1, 'y-o': 1, '-on': 1, 'ne\n': 1, 'e\n""': 1, '""\n\n': 1, '\n\ni': 2, '\nim': 5, 'imp': 6, 'mpo': 6, 'por': 6, 'ort': 6, 'rt ': 6, 't m': 1, ' ma': 1, 'mat': 1, 'ath': 1, 'th\n': 1, 'h\ni': 1, 't o': 1, ' os': 1, 'os\n': 1, 's\ni': 1, 't r': 2, ' ra': 1, 'and': 1, 'ndo': 1, 'dom': 1, 'om\n': 1, 'm\ni': 1, ' re': 4, 're\n': 1, 'e\ni': 1, 't s': 1, ' sy': 1, 'sys': 1, 'ys\n': 1, 's\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm d': 1, ' da': 3, 'dat': 3, 'ate': 3, 'tet': 3, 'eti': 3, 'me ': 1, 'e i': 1, ' im': 1, 't d': 1, 'me\n': 1, 'e\n\n': 1, '\n\n\n': 2, '\n\n#': 1, '\n#\n': 3, '#\n#': 2, '\n# ': 3, '# C': 1, ' Co': 1, 'Com': 1, 'omp': 1, 'mpl': 1, 'ple': 1, 'let': 1, 'ete': 2, 'te ': 1, 'e t': 1, ' th': 1, 'the': 1, 'he ': 3, ""e '"": 1, "" 't"": 1, ""'ti"": 1, 'meC': 3, 'eCo': 3, 'Con': 3, ""on'"": 1, ""n' "": 1, ""' f"": 1, ' fu': 3, 'fun': 3, 'unc': 3, 'nct': 3, 'cti': 3, 'on ': 3, 'n b': 1, ' be': 1, 'bel': 1, 'elo': 1, 'low': 1, 'ow.': 1, 'w.\n': 1, '.\n#': 3, '# T': 2, ' Th': 2, 'The': 2, 'e f': 2, 'n i': 1, ' is': 1, 'is ': 1, 's e': 1, ' ex': 1, 'exp': 1, 'xpe': 1, 'pec': 1, 'ect': 1, 'cte': 1, 'ted': 1, 'ed ': 1, 'd t': 1, ' to': 1, 'to ': 1, 'o r': 1, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n a': 2, ' a ': 1, 'a S': 1, ' ST': 2, 'STR': 2, 'TRI': 2, 'RIN': 2, 'ING': 2, 'NG.': 1, 'G.\n': 1, ' ac': 1, 'acc': 1, 'cce': 1, 'cep': 1, 'ept': 1, 'pts': 1, 'ts ': 1, 's S': 1, 'NG ': 1, 'G s': 1, ' s ': 2, 's a': 1, ' as': 1, 'as ': 1, 's p': 1, ' pa': 1, 'ram': 1, 'ame': 2, 'met': 1, 'er.': 1, 'r.\n': 1, '#\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f t': 1, ' ti': 2, 'on(': 2, 'n(s': 2, '(s)': 2, 's):': 1, '):\n': 1, ':\n ': 2, '\n  ': 6, '   ': 12, '  r': 2, 'n d': 1, 'me.': 1, 'e.s': 1, '.st': 2, 'str': 2, 'trp': 1, 'rpt': 1, 'pti': 1, 'me(': 2, 'e(s': 1, '(s,': 1, 's, ': 1, ', ""': 1, ' ""%': 1, '""%I': 1, '%I:': 1, 'I:%': 1, ':%M': 2, '%M:': 2, 'M:%': 2, ':%S': 2, '%S%': 1, 'S%p': 1, '%p""': 1, 'p"")': 1, '"").': 1, ').s': 1, 'trf': 1, 'rft': 1, 'fti': 1, 'e(""': 1, '(""%': 1, '""%H': 1, '%H:': 1, 'H:%': 1, '%S""': 1, 'S"")': 1, '"")\n': 1, ')\n\n': 5, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" '_"": 1, ""'__"": 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, ""__'"": 1, ""_':"": 1, ""':\n"": 1, '  f': 3, ' fp': 3, 'fpt': 3, 'ptr': 3, 'tr ': 1, 'r =': 1, ' = ': 3, '= o': 1, ' op': 1, 'ope': 1, 'pen': 1, 'en(': 1, 'n(o': 1, '(os': 1, 'os.': 1, 's.e': 1, '.en': 1, 'env': 1, 'nvi': 1, 'vir': 1, 'iro': 1, 'ron': 1, 'on[': 1, ""n['"": 1, ""['O"": 1, ""'OU"": 1, 'OUT': 1, 'UTP': 1, 'TPU': 1, 'PUT': 1, 'UT_': 1, 'T_P': 1, '_PA': 1, 'PAT': 1, 'ATH': 1, ""TH'"": 1, ""H']"": 1, ""'],"": 1, '], ': 1, "", '"": 1, "" 'w"": 1, ""'w'"": 1, ""w')"": 1, ""')\n"": 2, '\n\n ': 4, '  s': 1, 's =': 1, '= i': 1, ' in': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut(': 1, 't()': 1, '()\n': 1, 'res': 2, 'esu': 2, 'sul': 2, 'ult': 2, 'lt ': 2, 't =': 1, '= t': 1, 's)\n': 1, 'tr.': 2, 'r.w': 1, '.wr': 1, 'wri': 1, 'rit': 1, 'ite': 1, 'te(': 1, 'e(r': 1, '(re': 1, 't +': 1, ' + ': 1, ""+ '"": 1, "" '\\"": 1, ""'\\n"": 1, ""\\n'"": 1, ""n')"": 1, 'r.c': 1, '.cl': 1, 'clo': 1, 'los': 1, 'ose': 1, 'se(': 1, 'e()': 1}"
Tuhin Mitra,unique_boolean_rows.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""': 2, 'unique': 5, 'rows': 6, 'in': 6, 'boolean': 1, 'matrix': 7, 'given': 5, 'a': 5, 'binary': 1, 'your': 2, 'task': 2, 'is': 5, 'to': 4, 'complete': 2, 'the': 25, 'function': 5, 'printmat': 1, 'which': 1, 'prints': 1, 'all': 1, 'of': 11, 'matrix.': 3, 'takes': 1, 'three': 1, 'arguments': 3, 'first': 3, 'argument': 1, 'm': 1, 'and': 9, 'next': 2, 'two': 3, 'are': 4, 'row': 4, 'col': 3, 'denoting': 3, 'columns': 2, 'input:': 1, 'line': 4, 'input': 3, 'an': 1, 'integer': 1, 't': 2, 'no': 1, 'test': 4, 'cases.': 1, 'then': 2, 'cases': 1, 'follow.': 1, 'each': 3, 'case': 1, 'consists': 1, '2': 1, 'lines.': 1, 'contains': 1, 'integers': 1, 'number': 1, 'row*col': 1, 'space': 1, 'separated': 2, 'values': 1, 'm.': 1, 'output:': 1, 'output': 3, 'will': 1, 'be': 2, 'by': 2, 'space.': 1, 'note:': 1, 'input/ouput': 1, 'format': 1, 'example': 1, 'used': 2, 'for': 6, ""system's"": 1, 'internal': 1, 'purpose,': 1, 'should': 2, 'user': 2, 'expected': 3, 'only.': 1, 'as': 1, 'it': 1, 'problem,': 1, 'hence': 1, 'not': 4, 'read': 2, 'any': 1, 'from': 1, 'stdin/console.': 1, 'specified,': 1, 'write': 1, 'full': 1, 'code.': 1, 'note': 1, ':': 1, 'dont': 1, 'print': 2, 'new': 1, 'after': 1, 'instead': 2, '""$""': 1, 'without': 1, 'quotes.': 1, 'task:': 1, 'you': 1, 'only': 1, 'need': 1, 'implement': 1, 'printmat().': 1, 'do': 1, 'input,': 1, 'use': 2, 'function.': 1, 'time': 1, 'complexity:': 1, 'o(row': 2, '*': 2, 'col)': 2, 'auxiliary': 1, 'space:': 1, 'constraints:': 1, '1<=t<=20': 1, '1<=row,col<=40': 1, '0<=m[][]<=1': 1, 'example:': 1, '1': 27, '3': 2, '4': 1, '0': 14, '$1': 1, '$': 1, 'explanation': 1, 'above': 1, 'size': 1, '3x4': 1, 'looks': 1, 'like': 1, '.': 1, '**': 2, 'more': 1, 'input/output': 1, 'examples': 1, ""'expected"": 1, ""output'"": 1, 'option': 1, 'def': 2, 'printmat(row,': 2, 'col,': 2, 'matrix):': 1, 'new_matrix': 2, '=': 8, '[]': 2, '[matrix[i:i': 1, '+': 1, 'col]': 1, 'i': 1, 'range(0,': 1, 'len(matrix),': 1, 'col)]': 1, '#': 5, 'print(new_matrix)': 1, 'r': 2, 'new_matrix:': 1, 'if': 2, 'unique:': 1, 'unique.append(r)': 1, ""print('"": 1, ""'.join(r),"": 1, ""end='"": 1, ""$')"": 1, 'print()': 1, '{': 1, 'driver': 2, 'code': 2, 'starts': 1, 'initial': 1, 'template': 1, 'python': 1, 'main():': 1, 'testcase': 2, 'int(input())': 1, 'while': 1, '(testcase):': 1, 's': 1, 'input().split()': 2, 'int(s[0])': 1, 'int(s[1])': 1, 'matrix)': 1, '-=': 1, '__name__': 1, '==': 1, '""__main__"":': 1, 'main()': 1, '}': 1, 'ends': 1}","{'""""""': 2, '""""\n': 2, '""\nU': 1, '\nUn': 1, 'Uni': 1, 'niq': 7, 'iqu': 7, 'que': 7, 'ue ': 5, 'e r': 7, ' ro': 11, 'row': 16, 'ows': 6, 'ws ': 6, 's i': 3, ' in': 19, 'in ': 6, 'n b': 1, ' bo': 1, 'boo': 1, 'ool': 1, 'ole': 2, 'lea': 1, 'ean': 1, 'an ': 2, 'n m': 2, ' ma': 14, 'mat': 21, 'atr': 18, 'tri': 18, 'rix': 18, 'ix\n': 1, 'x\n\n': 1, '\n\nG': 1, '\nGi': 1, 'Giv': 1, 'ive': 7, 'ven': 5, 'en ': 7, 'n a': 2, ' a ': 5, 'a b': 1, ' bi': 1, 'bin': 1, 'ina': 1, 'nar': 1, 'ary': 2, 'ry ': 2, 'y m': 1, 'ix ': 8, 'x y': 1, ' yo': 1, 'you': 1, 'our': 2, 'ur ': 2, 'r t': 1, ' ta': 3, 'tas': 2, 'ask': 3, 'sk ': 2, 'k i': 2, ' is': 5, 'is ': 5, 's t': 5, ' to': 4, 'to ': 4, 'o c': 2, ' co': 16, 'com': 2, 'omp': 3, 'mpl': 8, 'ple': 7, 'let': 2, 'ete': 2, 'te ': 5, 'e t': 8, ' th': 19, 'the': 18, 'he ': 25, 'e f': 9, ' fu': 7, 'fun': 6, 'unc': 6, 'nct': 6, 'cti': 6, 'tio': 8, 'ion': 8, 'on ': 7, 'n p': 3, ' pr': 11, 'pri': 10, 'rin': 10, 'int': 17, 'ntM': 2, 'tMa': 2, 'Mat': 2, 'at ': 2, 't w': 2, ' wh': 2, 'whi': 2, 'hic': 1, 'ich': 1, 'ch ': 4, 'h p': 1, 'nts': 5, 'ts ': 5, 's a': 8, ' al': 1, 'all': 1, 'll ': 3, 'l u': 1, ' un': 6, 'uni': 6, 's o': 6, ' of': 11, 'of ': 11, 'f t': 5, 'e g': 3, ' gi': 4, 'giv': 4, 'ix.': 3, 'x. ': 2, '. T': 5, ' Th': 6, 'The': 9, 'n t': 3, 'tak': 1, 'ake': 1, 'kes': 1, 'es ': 4, 'thr': 1, 'hre': 1, 'ree': 1, 'ee ': 1, 'e a': 5, ' ar': 8, 'arg': 4, 'rgu': 4, 'gum': 4, 'ume': 4, 'men': 5, 'ent': 5, ' fi': 3, 'fir': 3, 'irs': 3, 'rst': 3, 'st ': 7, 't a': 2, 'nt ': 5, 't i': 4, 'a m': 1, 'x M': 2, ' M ': 1, 'M a': 1, ' an': 11, 'and': 9, 'nd ': 9, 'd t': 2, 'e n': 4, ' ne': 7, 'nex': 2, 'ext': 2, 'xt ': 2, 't t': 3, ' tw': 3, 'two': 3, 'wo ': 3, 'o a': 1, 'are': 4, 're ': 5, 'ow ': 6, 'w a': 2, 'd c': 4, 'col': 13, 'ol ': 4, 'l d': 2, ' de': 3, 'den': 3, 'eno': 3, 'not': 7, 'oti': 3, 'tin': 3, 'ing': 3, 'ng ': 3, 'g t': 3, 'olu': 2, 'lum': 2, 'umn': 2, 'mns': 2, 'ns ': 3, 'e m': 4, 'x.\n': 1, '.\n\n': 6, '\n\nI': 1, '\nIn': 2, 'Inp': 4, 'npu': 10, 'put': 17, 'ut:': 2, 't:\n': 2, ':\nT': 2, '\nTh': 3, 't l': 3, ' li': 6, 'lin': 5, 'ine': 5, 'ne ': 4, 'e o': 3, 'f i': 1, 'inp': 6, 'ut ': 7, 'n i': 3, 'nte': 3, 'teg': 2, 'ege': 2, 'ger': 2, 'er ': 7, 'r T': 2, ' T ': 2, 'T d': 1, ' no': 5, 'no ': 1, 'o o': 1, ' te': 6, 'tes': 8, 'est': 7, 't c': 4, ' ca': 3, 'cas': 6, 'ase': 6, 'ses': 2, 'es.': 3, 's. ': 2, 'hen': 3, 'n T': 1, 'T t': 1, 's f': 1, ' fo': 7, 'fol': 1, 'oll': 1, 'llo': 1, 'low': 1, 'ow.': 1, 'w. ': 1, '. E': 1, ' Ea': 1, 'Eac': 1, 'ach': 3, 'h t': 2, 'se ': 5, 'e c': 1, 'con': 3, 'ons': 3, 'nsi': 1, 'sis': 1, 'ist': 1, 'sts': 1, 'f 2': 1, ' 2 ': 1, '2 l': 1, 'nes': 1, 'f e': 1, ' ea': 2, 'eac': 2, 'ont': 2, 'nta': 1, 'tai': 1, 'ain': 5, 'ins': 3, 'o i': 2, 'ers': 1, 'rs ': 1, 's r': 1, ' nu': 1, 'num': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'r o': 1, 'f r': 2, 'f m': 2, 'ow*': 1, 'w*c': 1, '*co': 1, 'l s': 1, ' sp': 3, 'spa': 2, 'pac': 3, 'ace': 3, 'ce ': 2, 'e s': 1, ' se': 2, 'sep': 2, 'epa': 2, 'par': 2, 'ara': 2, 'rat': 2, 'ate': 3, 'ted': 6, 'ed ': 9, 'd v': 1, ' va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ues': 1, ' M.': 1, 'M.\n': 1, '\n\nO': 2, '\nOu': 2, 'Out': 5, 'utp': 6, 'tpu': 6, ' ou': 1, 'out': 2, ' wi': 2, 'wil': 1, 'ill': 1, 'l b': 1, ' be': 2, 'be ': 2, 'e u': 3, 'x s': 1, 'd b': 3, ' by': 2, 'by ': 2, 'y s': 1, 'ce.': 1, 'e.\n': 2, '\n\nN': 2, '\nNo': 2, 'Not': 2, 'ote': 3, 'te:': 1, 'e: ': 2, ': T': 1, 'e I': 2, ' In': 3, 'ut/': 2, 't/O': 2, '/Ou': 2, 'Oup': 1, 'upu': 1, 't f': 2, 'for': 6, 'orm': 1, 'rma': 1, 'd E': 1, ' Ex': 3, 'Exa': 3, 'xam': 3, 'amp': 3, 'le ': 2, ' us': 5, 'use': 5, 'sed': 2, 'd f': 1, 'or ': 6, 'r s': 2, ' sy': 1, 'sys': 1, 'yst': 1, 'ste': 3, 'tem': 1, ""em'"": 1, ""m's"": 1, ""'s "": 1, 'ter': 2, 'ern': 1, 'rna': 1, 'nal': 1, 'al ': 2, 'l p': 1, ' pu': 1, 'pur': 1, 'urp': 1, 'rpo': 1, 'pos': 1, 'ose': 1, 'se,': 1, 'e, ': 1, ', a': 2, 'd s': 1, ' sh': 2, 'sho': 2, 'hou': 3, 'oul': 2, 'uld': 2, 'ld ': 2, 'y a': 1, 'a u': 2, 'ser': 2, 'r f': 1, 'r E': 1, 'Exp': 5, 'xpe': 4, 'pec': 5, 'ect': 4, 'cte': 4, 'd O': 2, ' Ou': 2, 't o': 1, ' on': 2, 'onl': 2, 'nly': 2, 'ly.': 1, 'y. ': 1, '. A': 1, ' As': 1, 'As ': 1, ' it': 1, 'it ': 1, 'a f': 1, 'pro': 1, 'rob': 1, 'obl': 1, 'ble': 1, 'lem': 2, 'em,': 1, 'm, ': 1, ', h': 1, ' he': 1, 'enc': 1, 'nce': 1, 'd n': 2, 'ot ': 4, 't r': 2, ' re': 2, 'rea': 2, 'ead': 4, 'ad ': 4, 'd a': 1, 'any': 1, 'ny ': 1, 'y i': 1, ' fr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm s': 1, ' st': 1, 'std': 1, 'tdi': 1, 'din': 1, 'in/': 1, 'n/c': 1, '/co': 1, 'nso': 1, 'sol': 1, 'le.': 1, 'e. ': 1, 'n s': 1, 'spe': 1, 'eci': 1, 'cif': 1, 'ifi': 1, 'fie': 1, 'ied': 1, 'ed,': 1, 'd, ': 1, 'o w': 1, ' wr': 1, 'wri': 1, 'rit': 1, 'ite': 1, 'ful': 1, 'ull': 1, 'l c': 1, 'cod': 1, 'ode': 3, 'de.': 1, 'e :': 1, ' : ': 1, ': D': 1, ' Do': 2, 'Don': 1, 't p': 1, 't n': 1, 'new': 5, 'ew ': 1, 'w l': 1, ' af': 1, 'aft': 1, 'fte': 1, 'r e': 1, 'h r': 1, 'w i': 1, 'nst': 3, 'tea': 2, 'd p': 1, 't ""': 1, ' ""$': 1, '""$""': 1, '$"" ': 1, '"" w': 1, 'wit': 1, 'ith': 1, 'tho': 2, 't q': 1, ' qu': 1, 'quo': 1, 'uot': 1, 's.\n': 1, '\n\nY': 1, '\nYo': 2, 'You': 2, ' Ta': 1, 'Tas': 1, 'sk:': 1, 'k:\n': 1, ':\nY': 1, 'ou ': 1, 'u o': 1, 'ly ': 1, 'y n': 1, 'nee': 1, 'eed': 1, ' im': 1, 'imp': 1, 'eme': 1, 'n f': 1, 'at(': 3, 't()': 7, '().': 3, '). ': 1, '. D': 1, 'Do ': 1, 'o n': 1, 'd i': 1, 'ut,': 1, 't, ': 1, ', i': 1, 'd u': 1, 's g': 1, 'on.': 1, 'n.\n': 1, '\n\nE': 3, '\nEx': 4, 'd T': 1, ' Ti': 1, 'Tim': 1, 'ime': 1, 'me ': 1, 'e C': 1, ' Co': 3, 'Com': 1, 'lex': 1, 'exi': 1, 'xit': 1, 'ity': 1, 'ty:': 1, 'y: ': 1, ': O': 2, ' O(': 2, 'O(r': 2, '(ro': 4, 'w *': 2, ' * ': 2, '* c': 2, 'ol)': 3, 'l)\n': 2, ')\nE': 1, 'd A': 1, ' Au': 1, 'Aux': 1, 'uxi': 1, 'xil': 1, 'ili': 1, 'lia': 1, 'iar': 1, 'y S': 1, ' Sp': 1, 'Spa': 1, 'ce:': 1, ')\n\n': 4, '\n\nC': 1, '\nCo': 1, 'Con': 1, 'str': 1, 'tra': 1, 'rai': 1, 'ts:': 1, 's:\n': 1, ':\n1': 1, '\n1<': 2, '1<=': 2, '<=T': 1, '=T<': 1, 'T<=': 1, '<=2': 1, '=20': 1, '20\n': 1, '0\n1': 1, '<=r': 1, '=ro': 1, 'ow,': 3, 'w,c': 1, ',co': 1, 'ol<': 1, 'l<=': 1, '<=4': 1, '=40': 1, '40\n': 1, '0\n0': 1, '\n0<': 1, '0<=': 1, '<=M': 1, '=M[': 1, 'M[]': 1, '[][': 1, '][]': 1, '[]<': 1, ']<=': 1, '<=1': 1, '=1\n': 1, '1\n\n': 3, 'le:': 1, 'e:\n': 2, ':\nI': 1, 'ut\n': 2, 't\n1': 2, '\n1\n': 1, '1\n3': 1, '\n3 ': 1, '3 4': 1, ' 4\n': 1, '4\n1': 1, '\n1 ': 5, '1 1': 8, ' 1 ': 16, '1 0': 10, ' 0 ': 14, '0 1': 10, '0 0': 4, ' 1\n': 5, '1 $': 2, ' $1': 1, '$1 ': 1, ' $\n': 1, '$\n\n': 1, 'xpl': 1, 'pla': 2, 'lan': 1, 'ana': 1, 'nat': 1, 'ati': 1, 'on\n': 1, 'n\nA': 1, '\nAb': 1, 'Abo': 1, 'bov': 1, 'ove': 1, 've ': 1, 'x o': 1, 'f s': 1, ' si': 1, 'siz': 1, 'ize': 1, 'ze ': 1, 'e 3': 1, ' 3x': 1, '3x4': 1, 'x4 ': 1, '4 l': 1, ' lo': 1, 'loo': 1, 'ook': 1, 'oks': 1, 'ks ': 1, 's l': 1, 'lik': 1, 'ike': 1, 'ke\n': 1, 'e\n1': 1, '1\n1': 2, '1\nT': 1, 'o u': 1, 'e 1': 1, '1 a': 1, 'd 1': 1, '1 .': 1, ' .\n': 1, '.\n*': 1, '\n**': 1, '** ': 1, '* F': 1, ' Fo': 1, 'For': 1, 'r M': 1, ' Mo': 1, 'Mor': 1, 'ore': 1, 't E': 1, 'les': 1, 's U': 1, ' Us': 1, 'Use': 1, ""e '"": 1, "" 'E"": 1, ""'Ex"": 1, ""ut'"": 1, ""t' "": 1, ""' o"": 1, ' op': 1, 'opt': 1, 'pti': 1, 'n *': 1, ' **': 1, '**\n': 1, '*\n""': 1, '\n""""': 1, '""\n\n': 1, '\n\n\n': 3, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f p': 1, 'ntm': 2, 'tma': 2, 't(r': 2, 'w, ': 2, ', c': 3, 'ol,': 2, 'l, ': 2, ', m': 2, 'ix)': 4, 'x):': 1, '):\n': 3, ':\n ': 6, '\n  ': 18, '   ': 80, '  n': 2, 'ew_': 4, 'w_m': 4, '_ma': 5, 'x =': 3, ' = ': 8, '= [': 3, ' []': 2, '[]\n': 2, ']\n ': 3, ' [m': 1, '[ma': 1, 'ix[': 1, 'x[i': 1, '[i:': 1, 'i:i': 1, ':i ': 1, 'i +': 1, ' + ': 1, '+ c': 1, 'ol]': 1, 'l] ': 1, '] f': 1, 'r i': 2, ' i ': 1, 'i i': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(0': 1, '(0,': 1, '0, ': 1, ', l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(m': 1, '(ma': 1, 'x),': 1, '), ': 2, 'l)]': 1, ')]\n': 1, '  #': 1, ' # ': 1, '# p': 1, 'nt(': 6, 't(n': 1, '(ne': 1, 'x)\n': 2, ')\n ': 7, '  u': 2, 'e =': 2, '  f': 1, 'r r': 1, ' r ': 2, 'n n': 1, 'ix:': 1, 'x:\n': 1, '  i': 1, ' if': 1, 'if ': 2, 'r n': 1, 'n u': 1, 'ue:': 1, 'ue.': 1, 'e.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 2, 'nd(': 1, 'd(r': 1, '(r)': 2, 'r)\n': 1, '  p': 3, ""t('"": 1, ""(' "": 1, ""' '"": 1, "" '."": 1, ""'.j"": 1, '.jo': 1, 'joi': 1, 'oin': 1, 'in(': 3, 'n(r': 1, 'r),': 1, ', e': 1, ' en': 1, 'nd=': 1, ""d='"": 1, ""=' "": 1, ""' $"": 1, "" $'"": 1, ""$')"": 1, ""')\n"": 1, '()\n': 4, '\n\n#': 1, '\n# ': 4, '# {': 1, ' {\n': 1, '{\n#': 1, '#  ': 1, '  D': 1, ' Dr': 2, 'Dri': 2, 'riv': 2, 'ver': 2, 'r C': 2, 'Cod': 2, 'de ': 2, 'e S': 1, ' St': 1, 'Sta': 1, 'tar': 1, 'art': 1, 'rts': 1, 'ts\n': 1, 's\n#': 1, '# I': 1, 'Ini': 1, 'nit': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'l T': 1, ' Te': 1, 'Tem': 1, 'emp': 1, 'lat': 1, 'r P': 1, ' Py': 1, 'Pyt': 1, 'yth': 1, 'hon': 1, 'n 3': 1, ' 3\n': 1, '3\n\n': 1, 'mai': 3, 'n()': 2, '():': 1, '  t': 2, 'stc': 3, 'tca': 3, '= i': 5, 't(i': 1, '(in': 1, 'ut(': 3, '())': 1, '))\n': 1, '  w': 1, 'hil': 1, 'ile': 1, 'e (': 1, ' (t': 1, '(te': 1, 'se)': 1, 'e):': 1, '  s': 1, ' s ': 1, 's =': 1, ').s': 2, '.sp': 2, 'spl': 2, 'pli': 2, 'lit': 2, 'it(': 2, '  r': 1, 'w =': 1, 't(s': 2, '(s[': 2, 's[0': 1, '[0]': 1, '0])': 1, '])\n': 2, '  c': 1, 'l =': 1, 's[1': 1, '[1]': 1, '1])': 1, '  m': 2, '\n\n ': 2, 'e -': 1, ' -=': 1, '-= ': 1, '= 1': 1, '\n\ni': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, '= ""': 1, ' ""_': 1, '""__': 1, '__m': 1, 'in_': 1, 'n__': 1, '__""': 1, '_"":': 1, '"":\n': 1, ')\n#': 1, '# }': 1, ' } ': 1, '} D': 1, 'e E': 1, ' En': 1, 'End': 1, 'nds': 1}"
Tushar Nankani,01_topic_modelling_lda.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 8, 'nltk': 1, 'from': 6, 'nltk.tokenize': 1, 'word_tokenize': 1, 'nltk.download(""punkt"")': 1, ""df['tokens']"": 2, '=': 16, ""df['content'].apply(word_tokenize)"": 1, '#': 16, 'is': 2, 'history': 1, 'repeating': 1, 'itselfdontnormalizehate': 1, '[is,': 1, 'history,': 1, 'repeating,': 2, 'itselfdontnormalizehate]': 3, '_____________________________________________________________________': 3, 'nltk.corpus': 1, 'stopwords': 1, ""nltk.download('stopwords')"": 1, 'stop_words': 1, ""set(stopwords.words('english'))"": 1, ""df['tokens'].apply(lambda"": 2, 'lst:': 2, '[word': 1, 'for': 6, 'word': 5, 'in': 6, 'lst': 2, 'if': 1, 'not': 1, 'stop_words])': 1, '[history,': 2, 'nltk.stem': 1, 'wordnetlemmatizer': 1, ""nltk.download('wordnet')"": 1, 'lemmatizer': 1, 'wordnetlemmatizer()': 1, ""df['lemma']"": 1, '[lemmatizer.lemmatize(word)': 1, 'lst])': 1, 'repeat,': 1, 'lda': 2, 'gensim.corpora.dictionary': 1, 'dictionary': 2, 'gensim.model.ldamodel': 1, 'ldamodel': 1, 'list': 2, 'of': 2, 'lists': 1, 'tokens': 1, '[lst': 1, ""df['lemma']]"": 1, 'dictionary(tokens)': 1, 'mapping': 3, 'convert': 1, 'document': 1, 'into': 1, 'the': 5, 'bag-of-words': 1, '(bow)': 1, 'format': 1, '(token_id,': 1, 'token_count)': 1, 'tuples.': 1, 'corpus': 1, '[dictionary.doc2bow(row_tokens)': 1, 'row_tokens': 1, 'tokens]': 1, 'frequency': 1, 'id2word': 2, '-': 1, 'ids': 1, 'to': 2, 'words.': 1, 'it': 1, 'used': 1, 'determine': 1, 'vocabulary': 1, 'size,': 1, 'as': 2, 'well': 1, 'debugging': 1, 'and': 1, 'topic': 2, 'printing.': 1, 'ldamodel(corpus': 1, 'corpus,': 2, 'num_topics': 1, '10,': 1, 'dictionary,': 1, 'random_state': 1, '13,': 1, 'passes': 1, '10)': 1, 'print(""following': 1, 'are': 1, 'topics:': 1, '"")': 1, 'num,': 1, 'lda.show_topics():': 1, 'print(f""topic': 1, '{num}:': 1, '{topic}"")': 1, 'print(""lda': 1, 'model': 2, 'perplexity"")': 1, 'print(lda.log_perplexity(corpus))': 1, 'lower': 1, 'perplexity,': 1, 'better': 1, 'visualize': 1, 'topics': 1, 'pyldavis': 1, 'pyldavis.gensim': 1, 'pyldavis.gensim_models.prepare': 1, 'vis': 1, 'pyldavis.gensim.prepare(lda,': 1, 'dictionary)': 1, ""pyldavis.save_html(vis,'lda_vis.html')"": 1}","{'imp': 8, 'mpo': 8, 'por': 9, 'ort': 8, 'rt ': 9, 't n': 1, ' nl': 4, 'nlt': 7, 'ltk': 7, 'tk\n': 1, 'k\nf': 1, '\nfr': 5, 'fro': 6, 'rom': 6, 'om ': 6, 'm n': 3, 'tk.': 6, 'k.t': 1, '.to': 1, 'tok': 14, 'oke': 14, 'ken': 14, 'eni': 3, 'niz': 3, 'ize': 14, 'ze ': 2, 'e i': 1, ' im': 5, 't w': 1, ' wo': 7, 'wor': 20, 'ord': 22, 'rd_': 2, 'd_t': 2, '_to': 6, 'ze\n': 1, 'e\nn': 1, '\nnl': 3, 'k.d': 3, '.do': 4, 'dow': 3, 'own': 3, 'wnl': 3, 'nlo': 3, 'loa': 3, 'oad': 3, 'ad(': 3, 'd(""': 1, '(""p': 1, '""pu': 1, 'pun': 1, 'unk': 1, 'nkt': 1, 'kt""': 1, 't"")': 1, '"")\n': 4, ')\n\n': 8, '\n\nd': 2, '\ndf': 3, 'df[': 7, ""f['"": 7, ""['t"": 4, ""'to"": 4, 'ens': 14, ""ns'"": 4, ""s']"": 4, ""'] "": 3, '] =': 3, ' = ': 16, '= d': 4, ' df': 4, ""['c"": 1, ""'co"": 1, 'con': 1, 'ont': 5, 'nte': 1, 'ten': 1, 'ent': 2, ""nt'"": 1, ""t']"": 1, ""']."": 3, '].a': 3, '.ap': 3, 'app': 6, 'ppl': 3, 'ply': 3, 'ly(': 3, 'y(w': 1, '(wo': 2, 'ze)': 1, 'e)\n': 1, '\n\n#': 9, '\n# ': 13, '# i': 2, ' is': 2, 'is ': 3, 's h': 1, ' hi': 2, 'his': 4, 'ist': 7, 'sto': 9, 'tor': 4, 'ory': 4, 'ry ': 4, 'y r': 1, ' re': 4, 'rep': 6, 'epe': 4, 'pea': 4, 'eat': 4, 'ati': 8, 'tin': 4, 'ing': 9, 'ng ': 4, 'g i': 1, ' it': 4, 'its': 4, 'tse': 4, 'sel': 4, 'elf': 4, 'lfd': 4, 'fdo': 4, 'don': 4, 'ntn': 4, 'tno': 4, 'nor': 4, 'orm': 5, 'rma': 5, 'mal': 4, 'ali': 5, 'liz': 5, 'zeh': 4, 'eha': 4, 'hat': 4, 'ate': 5, 'te ': 2, 'e  ': 1, '  \n': 1, ' \n#': 1, '# [': 3, ' [i': 1, '[is': 1, 'is,': 2, 's, ': 3, ', h': 1, 'ry,': 4, 'y, ': 5, ', r': 4, 'ng,': 2, 'g, ': 2, ', i': 4, 'te]': 3, 'e]\n': 3, ']\n#': 3, '# _': 3, ' __': 3, '___': 201, '__\n': 3, '_\n\n': 3, '\n\n\n': 2, '\n\nf': 2, 'k.c': 1, '.co': 2, 'cor': 7, 'orp': 7, 'rpu': 6, 'pus': 6, 'us ': 3, 's i': 2, 't s': 1, ' st': 2, 'top': 12, 'opw': 3, 'pwo': 3, 'rds': 8, 'ds\n': 1, 's\nn': 1, ""d('"": 2, ""('s"": 1, ""'st"": 1, ""ds'"": 1, ""s')"": 1, ""')\n"": 2, '\n\ns': 1, '\nst': 1, 'op_': 2, 'p_w': 2, '_wo': 2, 'ds ': 2, 's =': 7, '= s': 1, ' se': 1, 'set': 1, 'et(': 1, 't(s': 1, '(st': 1, 'ds.': 2, 's.w': 1, '.wo': 1, 'ds(': 1, ""s('"": 1, ""('e"": 1, ""'en"": 1, 'eng': 1, 'ngl': 1, 'gli': 1, 'lis': 4, 'ish': 1, ""sh'"": 1, ""h')"": 1, ""'))"": 1, '))\n': 1, ')\nd': 2, 'y(l': 2, '(la': 2, 'lam': 2, 'amb': 2, 'mbd': 2, 'bda': 2, 'da ': 3, 'a l': 2, ' ls': 5, 'lst': 6, 'st:': 2, 't: ': 2, ': [': 2, ' [w': 1, '[wo': 1, 'rd ': 8, 'd f': 1, ' fo': 6, 'for': 7, 'or ': 6, 'r w': 2, 'd i': 2, ' in': 7, 'in ': 6, 'n l': 3, 'st ': 5, 't i': 5, ' if': 1, 'if ': 1, 'f w': 1, 'd n': 1, ' no': 1, 'not': 1, 'ot ': 1, 'n s': 1, 'ds]': 1, 's])': 1, '])\n': 2, ' [h': 2, '[hi': 2, 'k.s': 1, '.st': 1, 'ste': 1, 'tem': 1, 'em ': 1, 'm i': 1, 't W': 1, ' Wo': 2, 'Wor': 2, 'rdN': 2, 'dNe': 2, 'Net': 2, 'etL': 2, 'tLe': 2, 'Lem': 2, 'emm': 7, 'mma': 7, 'mat': 6, 'tiz': 5, 'zer': 4, 'er\n': 1, 'r\nn': 1, ""('w"": 1, ""'wo"": 1, 'rdn': 1, 'dne': 1, 'net': 1, ""et'"": 1, ""t')"": 1, '\n\nl': 1, '\nle': 1, 'lem': 5, 'er ': 3, 'r =': 1, '= W': 1, 'er(': 1, 'r()': 1, '()\n': 1, ""['l"": 2, ""'le"": 2, ""ma'"": 2, ""a']"": 2, ' [l': 2, '[le': 1, 'er.': 1, 'r.l': 1, '.le': 1, 'ze(': 1, 'e(w': 1, 'rd)': 1, 'd) ': 1, ') f': 3, 'st]': 1, 't])': 1, 'at,': 1, 't, ': 1, '# L': 2, ' LD': 1, 'LDA': 7, 'DA\n': 1, 'A\nf': 1, 'm g': 2, ' ge': 2, 'gen': 5, 'nsi': 5, 'sim': 5, 'im.': 3, 'm.c': 1, 'rpo': 1, 'ora': 1, 'ra.': 1, 'a.d': 1, '.di': 1, 'dic': 5, 'ict': 7, 'cti': 7, 'tio': 7, 'ion': 7, 'ona': 7, 'nar': 7, 'ary': 8, 'y i': 1, 't D': 1, ' Di': 2, 'Dic': 2, 'ry\n': 1, 'y\nf': 1, 'm.m': 1, '.mo': 1, 'mod': 4, 'ode': 7, 'del': 7, 'el.': 1, 'l.l': 1, '.ld': 1, 'lda': 6, 'dam': 1, 'amo': 1, 'el ': 2, 'l i': 1, 't L': 1, ' Ld': 2, 'Lda': 2, 'daM': 2, 'aMo': 2, 'Mod': 3, 'el\n': 2, 'l\n\n': 2, '# l': 1, ' li': 3, 't o': 2, ' of': 2, 'of ': 2, 'f l': 1, 'sts': 1, 'ts\n': 1, 's\nt': 1, '\nto': 1, 'ns ': 2, '= [': 2, '[ls': 1, 't f': 1, 'r l': 1, 'n d': 1, ""']]"": 1, ']]\n': 1, ']\n\n': 1, '\ndi': 1, 'y =': 1, '= D': 1, 'ry(': 1, 'y(t': 1, '(to': 2, 'ns)': 2, 's) ': 2, ') #': 2, ' # ': 3, '# w': 1, 'd m': 1, ' ma': 2, 'map': 2, 'ppi': 3, 'pin': 3, 'ng\n': 2, 'g\n\n': 2, '# C': 1, ' Co': 1, 'Con': 1, 'onv': 1, 'nve': 1, 'ver': 1, 'ert': 1, 't d': 1, ' do': 1, 'doc': 2, 'ocu': 1, 'cum': 1, 'ume': 1, 'men': 1, 'nt ': 1, 'int': 6, 'nto': 1, 'to ': 3, 'o t': 1, ' th': 5, 'the': 5, 'he ': 5, 'e b': 1, ' ba': 1, 'bag': 1, 'ag-': 1, 'g-o': 1, '-of': 1, 'of-': 1, 'f-w': 1, '-wo': 1, 's (': 1, ' (B': 1, '(Bo': 1, 'BoW': 1, 'oW)': 1, 'W) ': 1, 'at ': 1, 't =': 1, '= l': 1, 'f (': 1, ' (t': 1, 'en_': 2, 'n_i': 1, '_id': 1, 'id,': 1, 'd, ': 1, ', t': 2, ' to': 8, 'n_c': 1, '_co': 1, 'cou': 1, 'oun': 1, 'unt': 1, 'nt)': 1, 't) ': 1, ') t': 1, ' tu': 1, 'tup': 1, 'upl': 1, 'ple': 4, 'les': 1, 'es.': 1, 's.\n': 1, '.\nc': 1, '\nco': 1, ' [d': 1, '[di': 1, 'ry.': 1, 'y.d': 1, 'oc2': 1, 'c2b': 1, '2bo': 1, 'bow': 1, 'ow(': 1, 'w(r': 1, '(ro': 1, 'row': 2, 'ow_': 3, 'w_t': 3, 'r r': 1, ' ro': 1, 'n t': 1, 'ns]': 1, 's] ': 1, '] #': 1, '# f': 1, ' fr': 2, 'fre': 1, 'req': 1, 'equ': 1, 'que': 1, 'uen': 1, 'enc': 1, 'ncy': 1, 'cy ': 1, 'y m': 1, ' id': 2, 'id2': 2, 'd2w': 2, '2wo': 2, 'd -': 1, ' - ': 1, '- M': 1, ' Ma': 1, 'Map': 1, 'g f': 1, 'm w': 1, 'd I': 1, ' ID': 1, 'IDs': 1, 'Ds ': 1, 's t': 1, 'o w': 1, 's. ': 1, '. I': 1, ' It': 1, 'It ': 1, 's u': 1, ' us': 1, 'use': 1, 'sed': 1, 'ed ': 1, 'd t': 2, 'o d': 1, ' de': 2, 'det': 1, 'ete': 1, 'ter': 2, 'erm': 1, 'rmi': 1, 'min': 1, 'ine': 1, 'ne ': 1, 'e t': 4, 'e v': 1, ' vo': 1, 'voc': 1, 'oca': 1, 'cab': 1, 'abu': 1, 'bul': 1, 'ula': 1, 'lar': 1, 'y s': 1, ' si': 1, 'siz': 1, 'ze,': 1, 'e, ': 1, ', a': 1, ' as': 2, 'as ': 2, 's w': 1, ' we': 1, 'wel': 1, 'ell': 1, 'll ': 1, 'l a': 1, 's f': 1, 'r d': 1, 'deb': 1, 'ebu': 1, 'bug': 1, 'ugg': 1, 'ggi': 1, 'gin': 1, 'g a': 2, ' an': 1, 'and': 2, 'nd ': 1, 'opi': 8, 'pic': 8, 'ic ': 3, 'c p': 1, ' pr': 2, 'pri': 5, 'rin': 5, 'nti': 1, 'ng.': 1, 'g.\n': 1, '.\nl': 1, '\nld': 1, 'a =': 1, '= L': 1, 'el(': 1, 'l(c': 1, '(co': 2, '= c': 1, ' co': 2, 'us,': 2, ', n': 1, ' nu': 2, 'num': 3, 'um_': 1, 'm_t': 1, 'ics': 4, 'cs ': 1, '= 1': 3, ' 10': 2, '10,': 1, '0, ': 1, 'd =': 1, ' di': 2, ' ra': 1, 'ran': 1, 'ndo': 1, 'dom': 1, 'om_': 1, 'm_s': 1, '_st': 1, 'sta': 1, 'tat': 1, 'e =': 1, ' 13': 1, '13,': 1, '3, ': 1, ', p': 1, ' pa': 1, 'pas': 1, 'ass': 1, 'sse': 1, 'ses': 1, 'es ': 1, '10)': 1, '0)\n': 1, '\n\np': 2, '\npr': 3, 'nt(': 4, 't(""': 2, '(""F': 1, '""Fo': 1, 'Fol': 1, 'oll': 1, 'llo': 1, 'low': 1, 'owi': 1, 'win': 1, ' ar': 1, 'are': 3, 're ': 1, 'cs:': 1, 's: ': 1, ': ""': 1, ' "")': 1, ')\nf': 1, '\nfo': 1, 'r n': 1, 'um,': 1, 'm, ': 1, 'c i': 1, ' ld': 1, 'da.': 2, 'a.s': 1, '.sh': 1, 'sho': 1, 'how': 1, 'cs(': 1, 's()': 1, '():': 1, '):\n': 1, ':\n ': 1, '\n  ': 1, '   ': 2, '  p': 1, 't(f': 1, '(f""': 1, 'f""T': 1, '""To': 1, 'Top': 1, 'c {': 1, ' {n': 1, '{nu': 1, 'um}': 1, 'm}:': 1, '}: ': 1, ': {': 1, ' {t': 1, '{to': 1, 'ic}': 1, 'c}""': 1, '}"")': 1, '(""L': 1, '""LD': 1, 'DA ': 1, 'A M': 1, ' Mo': 1, 'l P': 1, ' Pe': 1, 'Per': 1, 'erp': 3, 'rpl': 3, 'lex': 3, 'exi': 3, 'xit': 3, 'ity': 3, 'ty""': 1, 'y"")': 1, ')\np': 2, 't(l': 1, '(ld': 2, 'a.l': 1, '.lo': 1, 'log': 1, 'og_': 1, 'g_p': 1, '_pe': 1, 'per': 2, 'ty(': 1, 'y(c': 1, 'us)': 1, 's))': 1, ')) ': 1, ' Lo': 1, 'Low': 1, 'owe': 1, 'wer': 1, 'r t': 2, 'e p': 1, ' pe': 1, 'ty,': 1, ', b': 1, ' be': 1, 'bet': 1, 'ett': 1, 'tte': 1, 'e m': 1, ' mo': 1, '# V': 1, ' Vi': 1, 'Vis': 1, 'isu': 1, 'sua': 1, 'ual': 1, 'cs\n': 1, 's\ni': 2, '\nim': 2, 't p': 2, ' py': 4, 'pyL': 5, 'yLD': 5, 'DAv': 5, 'Avi': 5, 'vis': 8, 'is\n': 1, 'is.': 5, 's.g': 3, '.ge': 3, 'im\n': 1, 'm\n\n': 1, '# p': 1, 'im_': 1, 'm_m': 1, '_mo': 1, 'els': 1, 'ls.': 1, 's.p': 1, '.pr': 2, 'pre': 2, 'epa': 2, 'par': 2, 're\n': 1, 'e\nv': 1, '\nvi': 1, '= p': 1, 'm.p': 1, 're(': 1, 'e(l': 1, 'da,': 1, 'a, ': 1, ', c': 1, ', d': 1, 'ry)': 1, 'y)\n': 1, '\npy': 1, 's.s': 1, '.sa': 1, 'sav': 1, 'ave': 1, 've_': 1, 'e_h': 1, '_ht': 1, 'htm': 2, 'tml': 2, 'ml(': 1, 'l(v': 1, '(vi': 1, ""s,'"": 1, "",'l"": 1, ""'ld"": 1, 'da_': 1, 'a_v': 1, '_vi': 1, 's.h': 1, '.ht': 1, ""ml'"": 1, ""l')"": 1}"
Tushar Nankani,03_distributed_global_averaging_method.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 4, 'input': 1, '1.': 3, 'agreed': 4, 'upon': 4, 'time': 17, '2.': 3, 'number': 4, 'of': 15, 'machines': 3, '3.': 1, 'local': 9, 'these': 1, 'calculations': 1, 'current': 15, 'skew': 2, '(of': 1, 'all': 4, 'machines):': 1, '-': 5, 'calculate': 1, 'after': 7, 'constant': 1, 'units': 7, 'times': 1, '*': 1, 'output': 1, 'average': 4, 'skews': 14, 'for': 18, 'a': 2, 'specific': 1, 'machine': 1, '(latest)': 1, '=': 17, 'to': 2, 'be': 1, 'adjusted': 3, 'def': 5, 'print_time(nodes_data):': 1, '(node_number,': 8, 'local_time)': 6, 'in': 14, 'nodes_data:': 4, 'print(f""node': 3, '{node_number}:': 2, '{local_time}"")': 1, 'print_skews(skews):': 1, 'print(""\\n---': 1, '---"")': 2, '(item,': 1, 'skew_lst)': 1, 'skews.items():': 2, '{item}:': 1, '{skew_lst[-1]}"")': 1, 'print()': 2, 'mean(lst):': 1, 'return': 1, '(sum(lst)': 1, '/': 1, 'len(lst))': 1, 'adjust_time(nodes_data,': 2, 'skews):': 1, 'avg_skews': 1, '[]': 4, 'print(""\\ncalculated': 1, 'iterations"")': 1, 'skews_lst)': 1, '{skews_lst}"")': 1, 'avg_skews.append((node_number,': 1, 'mean(skews_lst)))': 1, ""print('\\naverage"": 1, ""computed:')"": 1, 'avg)': 2, 'avg_skews:': 1, ""print(f'node"": 1, '{node_number}': 2, ':': 6, '{avg}': 1, ""',"": 1, ""end='')"": 1, 'status': 1, ""'ahead'"": 1, 'if': 2, 'avg': 2, '>=': 1, '0': 9, 'else': 1, ""'behind'"": 1, ""print(f'(node"": 1, 'is': 6, '{abs(avg)}': 1, ""{status})')"": 1, '#': 4, 'creating': 1, 'dict': 1, 'directly': 1, 'accessing': 1, 'later': 1, 'avg_skews_dict': 1, '{node_number:': 1, 'avg_skews}': 1, 'print(avg_skews_dict.items())': 1, 'new_data': 3, 'new_data.append((node_number,': 2, 'local_time': 3, 'avg_skews_dict[node_number]))': 1, 'print(""\\nfinal': 1, 'time"")': 1, 'print_time(new_data)': 1, 'dga(nodes_data,': 2, 'agreed_time):': 1, 'dict()': 1, '=>': 2, 'number:': 1, 'list': 1, 'node_number:': 1, '[calculated': 1, 'at': 1, 'every': 1, 'iteration]': 1, '{}': 1, 'total_nodes': 2, 'len(nodes_data)': 1, 'i': 2, 'range(total_nodes):': 2, 'skews[i]': 1, 'print(f""\\ncurrent': 1, 'node': 88, '{nodes_data[i][0]}:': 1, '{nodes_data[i][1]}"")': 1, 'time_to_resync': 2, 'agreed_time': 2, 'nodes_data[i][1]': 1, 'print(f""---': 1, '{time_to_resync}': 1, '+': 1, 'local_time))': 1, 'nodes_data': 3, 'print_time(nodes_data)': 2, 'skews[node_number].append(local_time': 1, 'agreed_time)': 2, 'print_skews(skews)': 1, 'print(f""current': 1, 'sender': 6, 'who': 6, 'sends': 6, 'broadcast': 6, 'resync:': 8, '{nodes_data[i][0]}"")': 1, 'print(""______________________________________________________________________"")': 1, 'skews)': 1, '__name__': 1, '==': 1, '""__main__"":': 1, 'int(input(""enter': 2, 'the': 14, '""))': 3, 'nodes': 2, 'on': 2, 'network:': 2, 'local_time_of_nodes': 1, '[int(input(f""enter': 1, '{x}:': 1, 'x': 1, 'range(total_nodes)]': 1, '[list]': 1, '(tuples)': 1, '[(node_number,': 1, 'zip(range(total_nodes),': 1, 'local_time_of_nodes)]': 1, 'sort': 1, 'descending': 1, 'order;': 1, 'according': 1, '(second': 1, 'item': 1, 'tuple)': 1, 'sorted(nodes_data,': 1, 'key=lambda': 1, 'x:x[1],': 1, 'reverse=true)': 1, 'print(""-----': 1, '-----"")': 1, '$': 1, 'py': 1, '""03_distributed_global_averaging': 1, 'method.py""': 1, 'enter': 7, '40': 6, '5': 1, '0:': 15, '15': 2, '1:': 15, '9': 2, '2:': 15, '25': 2, '3:': 15, '36': 3, '4:': 15, '2': 5, '-----': 2, '---': 20, '4': 4, '29': 2, '19': 1, '13': 2, '6': 3, '-21': 1, '-27': 1, '-11': 1, '-34': 1, '3': 3, '______________________________________________________________________': 5, '11': 2, '51': 1, '30': 2, '24': 1, '17': 1, '-10': 1, '-16': 1, '-23': 1, '10': 2, '61': 1, '50': 1, '34': 3, '27': 2, '-6': 1, '21': 1, '-13': 1, '67': 1, '56': 1, '46': 1, '33': 2, '16': 1, '-7': 1, '1': 3, '7': 2, '74': 1, '63': 1, '53': 1, '47': 1, '23': 1, 'calculated': 1, 'iterations': 1, '[-21,': 1, '-10,': 1, '0,': 3, '6,': 1, '13]': 1, '[-27,': 1, '-16,': 1, '-6,': 1, '7]': 1, '[-11,': 1, '10,': 1, '16,': 1, '23]': 1, '[0,': 1, '11,': 1, '21,': 1, '27,': 1, '34]': 1, '[-34,': 1, '-23,': 1, '-13,': 1, '-7,': 1, '0]': 1, 'computed:': 1, '-2.4': 1, '(node': 5, '2.4': 1, 'behind)': 3, '-8.4': 1, '8.4': 1, '7.6': 2, 'ahead)': 2, '18.6': 2, '-15.4': 1, '15.4': 1, 'dict_items([(0,': 1, '-2.4),': 1, '(1,': 1, '-8.4),': 1, '(2,': 1, '7.6),': 1, '(3,': 1, '18.6),': 1, '(4,': 1, '-15.4)])': 1, 'final': 1, '55.4': 5}","{""'''"": 4, ""''\n"": 4, ""'\nI"": 1, '\nIn': 1, 'Inp': 1, 'npu': 4, 'put': 7, 'ut\n': 2, 't\n1': 2, '\n1.': 3, '1. ': 3, '. A': 2, ' Ag': 4, 'Agr': 4, 'gre': 9, 'ree': 9, 'eed': 9, 'ed ': 9, 'd u': 4, ' up': 4, 'upo': 4, 'pon': 4, 'on ': 6, 'n t': 7, ' ti': 15, 'tim': 41, 'ime': 47, 'me\n': 2, 'e\n2': 2, '\n2.': 3, '2. ': 3, '. N': 1, ' Nu': 2, 'Num': 2, 'umb': 25, 'mbe': 25, 'ber': 25, 'er ': 27, 'r o': 4, ' of': 15, 'of ': 16, 'f M': 1, ' Ma': 1, 'Mac': 1, 'ach': 5, 'chi': 5, 'hin': 9, 'ine': 5, 'nes': 4, 'es\n': 3, 's\n3': 1, '\n3.': 1, '3. ': 1, '. L': 1, ' Lo': 2, 'Loc': 2, 'oca': 23, 'cal': 24, 'al ': 11, 'l t': 8, 'me ': 21, 'e o': 9, 'f t': 2, ' th': 15, 'the': 15, 'hes': 1, 'ese': 1, 'se ': 2, 'e m': 1, ' ma': 4, 'mac': 4, 's\n\n': 2, '\n\nC': 12, '\nCa': 2, 'Cal': 4, 'alc': 5, 'lcu': 5, 'cul': 5, 'ula': 5, 'lat': 7, 'ati': 5, 'tio': 4, 'ion': 4, 'ons': 4, 'ns\n': 2, 's\n1': 1, '. C': 3, ' Cu': 5, 'Cur': 17, 'urr': 17, 'rre': 17, 'ren': 17, 'ent': 17, 'nt ': 18, 't S': 7, ' Sk': 12, 'Ske': 12, 'kew': 38, 'ew ': 2, 'w (': 1, ' (o': 1, '(of': 1, 'f a': 4, ' al': 4, 'all': 4, 'll ': 4, 'l m': 1, 'es)': 7, 's):': 5, '): ': 1, ': C': 1, 't L': 1, 'l T': 1, ' Ti': 6, 'Tim': 6, 'e -': 6, ' - ': 5, '- A': 7, 'e \n': 1, ' \n2': 1, ' Ca': 1, 'ate': 6, 'te ': 1, 'e S': 3, 'w a': 1, ' af': 1, 'aft': 1, 'fte': 7, 'ter': 21, 'r c': 1, ' co': 1, 'con': 2, 'nst': 1, 'sta': 3, 'tan': 1, 'ant': 1, 't u': 1, ' un': 7, 'uni': 7, 'nit': 7, 'its': 7, 'ts ': 7, 's o': 3, 'mes': 1, 'es ': 6, 's *': 1, ' * ': 1, '* N': 1, 'f m': 2, '\n\nO': 1, '\nOu': 1, 'Out': 1, 'utp': 1, 'tpu': 1, ' Av': 1, 'Ave': 3, 'ver': 8, 'era': 9, 'rag': 6, 'age': 5, 'ge ': 5, 'l s': 1, ' sk': 12, 'ske': 26, 'ews': 34, 'ws ': 15, 's f': 3, ' fo': 18, 'for': 18, 'or ': 18, 'r a': 3, ' a ': 2, 'a s': 1, ' sp': 1, 'spe': 1, 'pec': 1, 'eci': 1, 'cif': 1, 'ifi': 1, 'fic': 1, 'ic ': 1, 'c m': 1, 'ne\n': 1, 't (': 1, ' (l': 1, '(la': 1, 'tes': 1, 'est': 1, 'st)': 7, 't) ': 4, ') -': 1, '- a': 3, ' av': 12, 'ave': 3, 'f s': 1, 's =': 7, ' = ': 17, '= T': 1, 'e t': 2, ' to': 4, 'to ': 2, 'o b': 1, ' be': 4, 'be ': 1, 'e a': 1, ' ad': 3, 'adj': 3, 'dju': 5, 'jus': 5, 'ust': 5, 'ste': 3, 'ted': 10, 'ed\n': 1, ""d\n'"": 1, ""\n''"": 3, ""'\n\n"": 1, '\n\nd': 6, '\nde': 5, 'def': 5, 'ef ': 5, 'f p': 2, ' pr': 23, 'pri': 23, 'rin': 23, 'int': 26, 'nt_': 6, 't_t': 6, '_ti': 25, 'me(': 6, 'e(n': 6, '(no': 21, 'nod': 56, 'ode': 148, 'des': 31, 'es_': 20, 's_d': 23, '_da': 26, 'dat': 26, 'ata': 26, 'ta)': 5, 'a):': 1, '):\n': 9, ':\n ': 14, '\n  ': 64, '   ': 252, '  f': 9, 'r (': 9, ' (n': 8, 'de_': 20, 'e_n': 20, '_nu': 20, 'num': 23, 'er,': 12, 'r, ': 12, ', l': 9, ' lo': 19, 'loc': 21, 'al_': 21, 'l_t': 14, 'me)': 10, 'e) ': 6, ') i': 9, ' in': 16, 'in ': 14, 'n n': 4, ' no': 17, 'ta:': 4, 'a:\n': 4, '  p': 21, 'nt(': 20, 't(f': 9, '(f""': 7, 'f""N': 3, '""No': 3, 'Nod': 92, 'de ': 98, 'e {': 8, ' {n': 8, '{no': 8, 'er}': 4, 'r}:': 2, '}: ': 5, ': {': 5, ' {l': 1, '{lo': 1, 'me}': 1, 'e}""': 1, '}"")': 5, '"")\n': 11, ')\n\n': 22, 't_s': 2, '_sk': 9, 'ws(': 2, 's(s': 2, '(sk': 3, 'ws)': 4, 't(""': 7, '(""\\': 3, '""\\n': 4, '\\n-': 1, 'n--': 1, '---': 36, '-- ': 14, '- S': 6, 's -': 6, ' --': 14, '--""': 3, '-"")': 3, ')\n ': 17, ' (i': 1, '(it': 1, 'ite': 10, 'tem': 7, 'em,': 1, 'm, ': 1, ', s': 4, 'ew_': 8, 'w_l': 2, '_ls': 5, 'lst': 8, 'n s': 2, 'ws.': 3, 's.i': 2, '.it': 3, 'ems': 4, 'ms(': 4, 's()': 3, '():': 2, ' {i': 1, '{it': 1, 'em}': 1, 'm}:': 1, ' {s': 3, '{sk': 2, 'st[': 1, 't[-': 1, '[-1': 2, '-1]': 1, '1]}': 2, ']}""': 3, 't()': 3, '()\n': 2, ' me': 3, 'mea': 2, 'ean': 2, 'an(': 2, 'n(l': 2, '(ls': 3, 't):': 1, '  r': 1, ' re': 10, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n (': 1, ' (s': 2, '(su': 1, 'sum': 1, 'um(': 1, 'm(l': 1, ') /': 1, ' / ': 1, '/ l': 1, ' le': 2, 'len': 2, 'en(': 2, 't))': 2, '))\n': 7, 'st_': 2, 'ta,': 5, 'a, ': 5, '  a': 5, 'avg': 13, 'vg_': 7, 'g_s': 7, '= [': 6, ' []': 4, '[]\n': 4, ']\n ': 6, '\\nC': 2, 'nCa': 1, 'd S': 2, 'l i': 2, ' it': 4, 'rat': 3, 'ns""': 1, 's"")': 1, 'ws_': 6, 's_l': 3, 'st}': 1, 't}""': 1, 's.a': 1, '.ap': 4, 'app': 4, 'ppe': 4, 'pen': 4, 'end': 18, 'nd(': 4, 'd((': 3, '((n': 3, ', m': 1, 'n(s': 1, ')))': 1, '  \n': 7, ' \n ': 8, ""t('"": 1, ""('\\"": 1, ""'\\n"": 1, '\\nA': 1, 'nAv': 1, 's C': 2, ' Co': 2, 'Com': 2, 'omp': 2, 'mpu': 2, 'ute': 3, 'ed:': 2, ""d:'"": 1, "":')"": 1, ""')\n"": 3, ', a': 4, 'vg)': 3, 'g) ': 2, 'n a': 2, 'ws:': 1, 's:\n': 1, ""(f'"": 2, ""f'N"": 1, ""'No"": 1, 'r} ': 2, '} :': 1, ' : ': 6, ' {a': 2, '{av': 1, 'vg}': 1, 'g} ': 1, ""} '"": 1, "" ',"": 1, ""', "": 1, ', e': 1, ' en': 1, 'nd=': 1, ""d='"": 1, ""=''"": 1, ""'')"": 1, '\n\n ': 13, '  s': 4, ' st': 1, 'tat': 2, 'atu': 2, 'tus': 2, 'us ': 1, ""= '"": 1, "" 'a"": 1, ""'ah"": 1, 'ahe': 3, 'hea': 3, 'ead': 3, ""ad'"": 1, ""d' "": 1, ""' i"": 1, ' if': 1, 'if ': 2, 'vg ': 2, 'g >': 1, ' >=': 1, '>= ': 1, '= 0': 1, ' 0 ': 3, '0 e': 1, ' el': 1, 'els': 1, 'lse': 1, ""e '"": 1, "" 'b"": 1, ""'be"": 1, 'beh': 4, 'ehi': 4, 'ind': 4, ""nd'"": 1, ""d'\n"": 1, ""'\n "": 1, ""f'("": 1, ""'(N"": 1, '(No': 6, '} i': 1, ' is': 6, 'is ': 6, 's {': 2, '{ab': 1, 'abs': 1, 'bs(': 1, 's(a': 1, '(av': 2, 'g)}': 1, ')} ': 1, '} u': 1, '{st': 1, 'us}': 1, 's})': 1, ""})'"": 1, "")')"": 1, '  #': 4, ' # ': 4, '# c': 1, ' cr': 1, 'cre': 1, 'rea': 1, 'eat': 1, 'tin': 1, 'ing': 5, 'ng ': 5, 'g a': 2, 'a d': 1, ' di': 3, 'dic': 6, 'ict': 6, 'ct ': 2, 't f': 1, 'r d': 1, 'dir': 1, 'ire': 1, 'rec': 1, 'ect': 1, 'ctl': 1, 'tly': 1, 'ly ': 1, 'y a': 1, ' ac': 2, 'acc': 2, 'cce': 1, 'ces': 1, 'ess': 1, 'ssi': 1, 'sin': 1, 'e l': 8, ' la': 1, 'er\n': 1, 'r\n ': 1, '_di': 4, 't =': 2, '= {': 2, 'er:': 3, 'r: ': 3, ': a': 1, 'g f': 1, 'ws}': 1, 's}\n': 1, '}\n ': 2, 't(a': 1, 'ct.': 1, 't.i': 1, '())': 1, '  n': 7, ' ne': 7, 'new': 6, 'w_d': 6, 'ta ': 5, 'a =': 5, 'ta.': 2, 'a.a': 2, 'ct[': 1, 't[n': 1, '[no': 2, 'er]': 2, 'r])': 1, ']))': 1, '\\nF': 1, 'nFi': 1, 'Fin': 2, 'ina': 2, 'nal': 2, 'l A': 2, ' Ad': 2, 'Adj': 2, 'd T': 2, 'me""': 1, 'e"")': 1, '(ne': 1, 'a)\n': 4, 'f D': 1, ' DG': 2, 'DGA': 2, 'GA(': 2, 'A(n': 2, ' ag': 5, 'agr': 5, 'ed_': 6, 'd_t': 5, 'e):': 1, '# d': 1, 'ct(': 1, '() ': 1, ') =': 1, ' =>': 2, '=> ': 2, '> n': 2, ' nu': 3, ': l': 1, ' li': 1, 'lis': 2, 'ist': 3, 'st ': 7, ': [': 6, ' [c': 1, '[ca': 1, 'd s': 1, 's a': 3, ' at': 1, 'at ': 1, 't e': 1, ' ev': 1, 'eve': 2, 'ery': 1, 'ry ': 1, 'y i': 1, 'on]': 1, 'n]\n': 1, ' {}': 1, '{}\n': 1, '  t': 3, 'tot': 6, 'ota': 6, 'tal': 6, 'l_n': 6, '_no': 8, '= l': 2, 'n(n': 1, 'r i': 2, ' i ': 2, 'i i': 2, 'n r': 3, ' ra': 3, 'ran': 4, 'ang': 4, 'nge': 4, 'ge(': 4, 'e(t': 4, '(to': 4, 'ws[': 2, 's[i': 1, '[i]': 5, 'i] ': 1, '] =': 1, ']\n\n': 3, ':\n\n': 1, 'f""\\': 1, 'nCu': 1, 't N': 6, ' No': 12, 'ta[': 4, 'a[i': 4, 'i][': 4, '][0': 2, '[0]': 2, '0]}': 2, ']}:': 1, '][1': 2, '[1]': 3, 'me_': 6, 'e_t': 3, '_to': 3, 'to_': 3, 'o_r': 3, '_re': 3, 'res': 11, 'esy': 11, 'syn': 11, 'ync': 11, 'nc ': 1, 'c =': 1, '= a': 1, '- n': 1, '1]\n': 1, 'f""-': 1, '""--': 2, ' Af': 6, 'Aft': 6, 'r {': 1, ' {t': 1, '{ti': 1, 'nc}': 1, 'c} ': 1, '} -': 1, '  l': 2, 'e =': 2, 'e +': 1, ' + ': 1, '+ t': 1, 'nc\n': 1, 'c\n ': 1, 'e))': 1, '= n': 1, 'ta\n': 1, 'a\n ': 1, 's[n': 1, 'r].': 1, '].a': 1, 'd(l': 1, '(lo': 1, 'e)\n': 4, 's)\n': 2, 'f""C': 1, '""Cu': 1, ' Se': 6, 'Sen': 6, 'nde': 6, 'der': 7, 'r w': 6, ' wh': 6, 'who': 6, 'ho ': 6, 'o s': 6, ' se': 6, 'sen': 6, 'nds': 6, 'ds ': 6, 's b': 9, ' br': 6, 'bro': 6, 'roa': 6, 'oad': 6, 'adc': 6, 'dca': 6, 'cas': 6, 'ast': 6, 't r': 6, 'nc:': 8, 'c: ': 8, ': N': 6, '(""_': 1, '""__': 2, '___': 408, '__""': 2, '_"")': 1, '\n\n\n': 3, '\n\ni': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, '= ""': 1, ' ""_': 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, '_"":': 1, '"":\n': 1, '= i': 2, 't(i': 3, '(in': 3, 'inp': 3, 'ut(': 3, '(""E': 2, '""En': 3, 'Ent': 10, 'nte': 10, 'r t': 10, 'he ': 14, 'e A': 2, 'e f': 2, 'r r': 2, ': ""': 3, ' "")': 3, '""))': 3, 'e n': 4, 'f n': 8, ' on': 2, 'net': 2, 'etw': 2, 'two': 2, 'wor': 2, 'ork': 2, 'rk:': 2, 'k: ': 2, 'e_o': 2, '_of': 2, 'of_': 2, 'f_n': 2, ' [i': 1, '[in': 1, 'f""E': 1, ' {x': 1, '{x}': 1, 'x}:': 1, ')) ': 1, ') f': 2, 'r x': 1, ' x ': 1, 'x i': 1, 's)]': 2, ')]\n': 2, '# [': 1, ' [l': 1, '[li': 1, 'st]': 1, 't] ': 1, '] o': 1, 'f (': 1, ' (t': 1, '(tu': 1, 'tup': 2, 'upl': 2, 'ple': 2, 'les': 1, 's) ': 1, ') \n': 1, ' [(': 1, '[(n': 1, 'n z': 1, ' zi': 1, 'zip': 1, 'ip(': 1, 'p(r': 1, '(ra': 1, 's),': 1, '), ': 5, '# S': 1, ' So': 1, 'Sor': 1, 'ort': 2, 'rt ': 1, 't i': 1, 'n d': 1, ' de': 1, 'esc': 1, 'sce': 1, 'cen': 1, 'ndi': 1, 'din': 2, 'g o': 1, ' or': 1, 'ord': 2, 'rde': 1, 'er;': 1, 'r; ': 1, '; a': 1, 'cco': 1, 'cor': 1, 'rdi': 1, 'g t': 1, 'o t': 1, 'e (': 1, '(se': 1, 'sec': 1, 'eco': 1, 'ond': 1, 'nd ': 1, 'd i': 1, 'em ': 1, 'm i': 1, ' tu': 1, 'le)': 1, '= s': 1, ' so': 1, 'sor': 1, 'rte': 1, 'ed(': 1, 'd(n': 1, ', k': 1, ' ke': 1, 'key': 1, 'ey=': 1, 'y=l': 1, '=la': 1, 'lam': 1, 'amb': 1, 'mbd': 1, 'bda': 1, 'da ': 1, 'a x': 1, ' x:': 1, 'x:x': 1, ':x[': 1, 'x[1': 1, '1],': 1, '], ': 1, ', r': 1, 'rev': 1, 'ers': 1, 'rse': 1, 'se=': 1, 'e=T': 1, '=Tr': 1, 'Tru': 1, 'rue': 1, 'ue)': 1, '(""-': 1, '- C': 2, 't T': 2, '  D': 1, ""\n\n'"": 1, ""'\n$"": 1, '\n$ ': 1, '$ p': 1, ' py': 1, 'py ': 1, 'y ""': 1, ' ""0': 1, '""03': 1, '03_': 1, '3_d': 1, 'dis': 1, 'str': 1, 'tri': 1, 'rib': 1, 'ibu': 1, 'but': 1, 'd_g': 1, '_gl': 1, 'glo': 1, 'lob': 1, 'oba': 1, 'bal': 1, 'l_a': 1, '_av': 1, 'agi': 1, 'gin': 1, 'g m': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od.': 1, 'd.p': 1, '.py': 1, 'py""': 1, 'y""\n': 1, '""\nE': 1, '\nEn': 7, ': 4': 8, ' 40': 6, '40\n': 6, '0\nE': 1, ': 5': 10, ' 5\n': 1, '5\nE': 3, 'e 0': 18, ' 0:': 15, '0: ': 15, ': 1': 10, ' 15': 3, '15\n': 2, 'e 1': 18, ' 1:': 15, '1: ': 15, ': 9': 2, ' 9\n': 2, '9\nE': 1, 'e 2': 18, ' 2:': 15, '2: ': 15, ': 2': 11, ' 25': 2, '25\n': 2, 'e 3': 18, ' 3:': 15, '3: ': 15, ': 3': 10, ' 36': 3, '36\n': 3, '6\nE': 1, 'e 4': 18, ' 4:': 15, '4: ': 15, ' 2\n': 3, '2\n-': 1, '\n--': 11, '--\n': 11, '-\nN': 11, '\nNo': 70, '6\nN': 7, '5\nN': 2, '9\nN': 3, '2\n\n': 1, '\nCu': 10, '6\n-': 1, 'r 4': 1, ' 4 ': 3, '4 -': 1, '0\nN': 12, ' 29': 2, '29\n': 2, ' 19': 1, '19\n': 1, ' 13': 3, '13\n': 3, '3\nN': 5, ': 6': 5, ' 6\n': 2, '6\n\n': 1, '\n\n-': 5, ': -': 13, ' -2': 6, '-21': 2, '21\n': 2, '1\nN': 6, '-27': 2, '27\n': 3, '7\nN': 5, ' -1': 9, '-11': 2, '11\n': 2, ': 0': 5, ' 0\n': 6, ' -3': 1, '-34': 2, '34\n': 4, '4\n\n': 1, ' 3\n': 1, '3\n_': 1, '\n__': 5, '__\n': 5, '_\n\n': 5, '9\n-': 1, 'r 1': 2, ' 11': 3, '11 ': 1, '1 -': 1, ' 51': 1, '51\n': 1, ' 30': 2, '30\n': 2, ' 24': 1, '24\n': 1, '4\nN': 8, ' 17': 1, '17\n': 1, '7\n\n': 3, '-10': 2, '10\n': 2, '-16': 2, '16\n': 2, '-23': 2, '23\n': 2, '3\n\n': 3, '2\n_': 1, '0\n-': 1, ' 10': 3, '10 ': 1, '0 -': 1, ' 61': 1, '61\n': 1, ' 50': 1, '50\n': 1, ' 34': 4, ' 27': 3, ' -6': 2, '-6\n': 1, ' 21': 2, '-13': 2, '0\n_': 1, '4\n-': 1, 'r 6': 1, ' 6 ': 1, '6 -': 1, ' 67': 1, '67\n': 1, ' 56': 1, '56\n': 1, ' 46': 1, '46\n': 1, ' 33': 2, '33\n': 2, ' 16': 2, ' -7': 2, '-7\n': 1, ' 1\n': 1, '1\n_': 1, '3\n-': 1, 'r 7': 1, ' 7 ': 1, '7 -': 1, ': 7': 3, ' 74': 1, '74\n': 1, ' 63': 1, '63\n': 1, ' 53': 1, '53\n': 1, ' 47': 1, '47\n': 1, '0\n\n': 2, ' 7\n': 1, ' 23': 2, ' 4\n': 1, '4\n_': 1, 's\nN': 1, ' [-': 4, '[-2': 2, '21,': 2, '1, ': 5, ', -': 9, '10,': 2, '0, ': 7, ', 0': 4, ' 0,': 3, ', 6': 1, ' 6,': 1, '6, ': 4, ', 1': 5, '13]': 1, '3]\n': 2, ']\nN': 4, '27,': 2, '7, ': 3, '16,': 2, '-6,': 1, ', 7': 2, ' 7]': 1, '7]\n': 1, '11,': 2, ', 2': 3, '23]': 1, ' [0': 1, '[0,': 1, ', 3': 1, '34]': 1, '4]\n': 1, '[-3': 1, '34,': 1, '4, ': 2, '23,': 1, '3, ': 3, '13,': 1, '-7,': 1, ' 0]': 1, '0]\n': 1, '\n\nA': 1, '\nAv': 1, 'd:\n': 1, ':\nN': 1, '0 :': 1, '-2.': 2, '2.4': 3, '.4 ': 6, '4 (': 3, ' (N': 5, '0 i': 1, 's 2': 1, ' 2.': 1, '4 u': 3, 'nd)': 3, 'd)\n': 5, '\n\nN': 4, ' 1 ': 2, '1 :': 1, ' -8': 2, '-8.': 2, '8.4': 3, '1 i': 1, 's 8': 1, ' 8.': 1, ' 2 ': 2, '2 :': 1, ' 7.': 3, '7.6': 3, '.6 ': 4, '6 (': 2, '2 i': 1, 's 7': 1, '6 u': 2, ' ah': 2, 'ad)': 2, ' 3 ': 2, '3 :': 1, ' 18': 3, '18.': 3, '8.6': 3, '3 i': 1, 's 1': 2, '4 :': 1, '-15': 2, '15.': 3, '5.4': 8, '4 i': 1, '\ndi': 1, 'ct_': 1, 't_i': 1, '_it': 1, 's([': 1, '([(': 1, '[(0': 1, '(0,': 1, '.4)': 3, '4),': 2, ', (': 4, ' (1': 1, '(1,': 1, ' (2': 1, '(2,': 1, '2, ': 1, '.6)': 2, '6),': 2, ' (3': 1, '(3,': 1, ' (4': 1, '(4,': 1, '4)]': 1, ')])': 1, '])\n': 1, '\n\nF': 1, '\nFi': 1, 'e\nN': 1, ' 55': 5, '55.': 5, '.4\n': 5, ""4\n'"": 1}"
Tushar Nankani,04_hashtag_analysis.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 5, 'numpy': 1, 'as': 4, 'np': 1, 'pandas': 1, 'pd': 1, 'matplotlib.pyplot': 1, 'plt': 1, 'seaborn': 1, 'sns': 1, 'ast': 1, 'df': 2, '=': 12, 'pd.read_csv(""tweets.csv"")': 1, ""df['content']"": 2, ""df['tweet'].copy()"": 1, ""df['content'].apply(lambda"": 2, 'tweet:': 1, 'tweet.split())': 1, ""df['hashtags']"": 1, 'tokens:': 1, '[token': 1, 'for': 3, 'token': 1, 'in': 4, 'tokens': 1, 'if': 2, 'token.startswith(""#"")])': 1, ""df['country']"": 1, ""'none'"": 1, 'i,': 1, 'row': 1, 'df.iterrows():': 1, 'loc_data': 1, ""ast.literal_eval(row['additional_data'])"": 1, ""loc_data['place']:"": 1, ""df['country'][i]"": 1, ""loc_data['place']['country']"": 1, 'df[df.country': 1, '!=': 1, '""none""]': 1, 'dataset': 2, ""df[['country',"": 1, ""'hashtags']]"": 1, '#': 2, 'important': 2, ""dataset.explode('hashtags')"": 1, ""'''"": 2, '1': 6, 'india': 6, '[#newprofilepic,': 1, '#andrewtate,': 1, '#khabib,': 1, '...]': 1, '~': 2, 'explosion': 1, '#newprofilepic': 1, '#andrewtate': 1, '#khabib': 1, '#conormcgregor': 1, '#asksr': 1, 'country': 1, ""dataset['country'].unique():"": 1, 'dataset_country': 1, ""dataset[dataset['country']"": 1, '==': 1, 'country]': 1, ""dataset_country['hashtags'].value_counts().plot(kind"": 1, ""'barh')"": 1, ""plt.xlabel('hashtag"": 1, ""count')"": 1, ""plt.ylabel('hashtags')"": 1, ""plt.title(f'hashtag"": 1, 'popularity': 1, ""{country}')"": 1, 'plt.show()': 1}","{'imp': 5, 'mpo': 7, 'por': 7, 'ort': 7, 'rt ': 5, 't n': 1, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 6, 'as ': 5, 's n': 1, ' np': 1, 'np\n': 1, 'p\ni': 1, '\nim': 4, 't p': 1, ' pa': 1, 'pan': 1, 'and': 1, 'nda': 1, 'das': 1, 's a': 1, 's p': 2, ' pd': 2, 'pd\n': 1, 'd\ni': 1, 't m': 1, ' ma': 1, 'mat': 1, 'atp': 1, 'tpl': 1, 'plo': 5, 'lot': 3, 'otl': 1, 'tli': 1, 'lib': 1, 'ib.': 1, 'b.p': 1, '.py': 1, 'pyp': 1, 'ypl': 1, 'ot ': 1, 't a': 2, ' pl': 5, 'plt': 5, 'lt\n': 1, 't\ni': 1, 't s': 1, ' se': 1, 'sea': 1, 'eab': 1, 'abo': 1, 'bor': 1, 'orn': 1, 'rn ': 1, 'n a': 1, 's s': 1, ' sn': 1, 'sns': 1, 'ns\n': 1, 's\n\n': 1, '\n\ni': 1, 'ast': 2, 'st\n': 1, 't\n\n': 1, '\n\nd': 6, '\ndf': 6, 'df ': 2, 'f =': 2, ' = ': 12, '= p': 1, 'pd.': 1, 'd.r': 1, '.re': 1, 'rea': 1, 'ead': 1, 'ad_': 1, 'd_c': 1, '_cs': 1, 'csv': 2, 'sv(': 1, 'v(""': 1, '(""t': 1, '""tw': 1, 'twe': 4, 'wee': 4, 'eet': 4, 'ets': 1, 'ts.': 1, 's.c': 1, '.cs': 1, 'sv""': 1, 'v"")': 1, '"")\n': 1, ')\n\n': 5, 'df[': 10, ""f['"": 8, ""['c"": 10, ""'co"": 10, 'con': 4, 'ont': 4, 'nte': 4, 'ten': 4, 'ent': 4, ""nt'"": 5, ""t']"": 5, ""'] "": 5, '] =': 6, '= d': 7, ' df': 7, ""['t"": 1, ""'tw"": 1, ""et'"": 1, ""']."": 5, '].c': 1, '.co': 2, 'cop': 1, 'opy': 1, 'py(': 1, 'y()': 1, '()\n': 2, ')\nd': 1, '].a': 2, '.ap': 2, 'app': 2, 'ppl': 2, 'ply': 2, 'ly(': 2, 'y(l': 2, '(la': 2, 'lam': 2, 'amb': 2, 'mbd': 2, 'bda': 2, 'da ': 2, 'a t': 2, ' tw': 2, 'et:': 1, 't: ': 1, ': t': 1, 'et.': 2, 't.s': 2, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 2, 'it(': 1, 't()': 1, '())': 1, '))\n': 1, ""['h"": 2, ""'ha"": 4, 'has': 4, 'ash': 7, 'sht': 7, 'hta': 7, 'tag': 7, 'ags': 5, ""gs'"": 5, ""s']"": 3, ' to': 4, 'tok': 5, 'oke': 5, 'ken': 5, 'ens': 2, 'ns:': 1, 's: ': 1, ': [': 1, ' [t': 1, '[to': 1, 'en ': 2, 'n f': 1, ' fo': 1, 'for': 3, 'or ': 3, 'r t': 1, 'n i': 1, ' in': 4, 'in ': 4, 'n t': 1, 'ns ': 1, 's i': 1, ' if': 2, 'if ': 2, 'f t': 1, 'en.': 1, 'n.s': 1, '.st': 1, 'sta': 1, 'tar': 1, 'art': 1, 'rts': 1, 'tsw': 1, 'swi': 1, 'wit': 1, 'ith': 1, 'th(': 1, 'h(""': 1, '(""#': 1, '""#""': 1, '#"")': 1, '"")]': 1, ')])': 1, '])\n': 2, 'cou': 13, 'oun': 14, 'unt': 14, 'ntr': 12, 'try': 12, ""ry'"": 6, ""y']"": 5, ""= '"": 2, "" 'N"": 1, ""'No"": 1, 'Non': 2, 'one': 2, ""ne'"": 1, ""e'\n"": 1, ""'\nf"": 1, '\nfo': 2, 'r i': 1, ' i,': 1, 'i, ': 1, ', r': 1, ' ro': 1, 'row': 3, 'ow ': 1, 'w i': 1, 'n d': 2, 'df.': 2, 'f.i': 1, '.it': 1, 'ite': 2, 'ter': 2, 'err': 1, 'rro': 1, 'ows': 1, 'ws(': 1, 's()': 2, '():': 2, '):\n': 2, ':\n ': 3, '\n  ': 11, '   ': 27, '  l': 1, ' lo': 3, 'loc': 3, 'oc_': 3, 'c_d': 3, '_da': 4, 'dat': 12, 'ata': 12, 'ta ': 1, 'a =': 1, '= a': 1, 'st.': 1, 't.l': 1, '.li': 1, 'era': 1, 'ral': 1, 'al_': 2, 'l_e': 1, '_ev': 1, 'eva': 1, 'val': 2, 'al(': 1, 'l(r': 1, '(ro': 1, 'ow[': 1, ""w['"": 1, ""['a"": 1, ""'ad"": 1, 'add': 1, 'ddi': 1, 'dit': 1, 'iti': 1, 'tio': 1, 'ion': 2, 'ona': 1, 'nal': 1, 'l_d': 1, ""ta'"": 1, ""a']"": 1, ""'])"": 1, '\n\n ': 2, '  i': 1, 'f l': 1, 'ta[': 2, ""a['"": 2, ""['p"": 2, ""'pl"": 2, 'pla': 2, 'lac': 2, 'ace': 2, ""ce'"": 2, ""e']"": 2, ""']:"": 1, ']:\n': 1, '  d': 3, ""']["": 2, '][i': 1, '[i]': 1, 'i] ': 1, '= l': 1, ""]['"": 1, ""']\n"": 1, ']\n\n': 5, 'f[d': 1, '[df': 1, 'f.c': 1, 'ry ': 3, 'y !': 1, ' !=': 1, '!= ': 1, '= ""': 1, ' ""N': 1, '""No': 1, 'ne""': 1, 'e""]': 1, '""]\n': 1, '\nda': 2, 'tas': 8, 'ase': 8, 'set': 8, 'et ': 2, 't =': 2, 'f[[': 1, ""[['"": 1, ""y',"": 1, ""', "": 1, "", '"": 1, "" 'h"": 1, ""']]"": 1, ']]\n': 1, '\n\n#': 1, '\n# ': 1, '# I': 2, ' Im': 2, 'Imp': 2, 'rta': 2, 'tan': 2, 'ant': 2, 'nt\n': 2, 't\nd': 1, ' da': 5, 't.e': 1, '.ex': 1, 'exp': 2, 'xpl': 2, 'lod': 1, 'ode': 1, 'de(': 1, ""e('"": 1, ""('h"": 1, ""s')"": 2, ""')\n"": 5, ""\n\n'"": 1, ""\n''"": 2, ""'''"": 2, ""''\n"": 2, ""'\n1"": 1, '\n1 ': 1, '1  ': 1, '  I': 1, ' In': 1, 'Ind': 6, 'ndi': 6, 'dia': 6, 'ia\t': 6, 'a\t[': 1, '\t[#': 1, '[#N': 1, '#Ne': 2, 'New': 2, 'ewP': 2, 'wPr': 2, 'Pro': 2, 'rof': 2, 'ofi': 2, 'fil': 2, 'ile': 2, 'leP': 2, 'ePi': 2, 'Pic': 2, 'ic,': 1, 'c, ': 1, ', #': 2, ' #A': 1, '#An': 2, 'And': 2, 'ndr': 2, 'dre': 2, 'rew': 2, 'ewT': 2, 'wTa': 2, 'Tat': 2, 'ate': 2, 'te,': 1, 'e, ': 1, ' #k': 1, '#kh': 2, 'kha': 2, 'hab': 2, 'abi': 2, 'bib': 2, 'ib,': 1, 'b, ': 1, ', .': 1, ' ..': 1, '...': 1, '..]': 1, '.]\n': 1, '\n\n~': 1, '\n~ ': 1, '~ e': 1, ' ex': 1, 'los': 1, 'osi': 1, 'sio': 1, 'on ': 1, 'n ~': 1, ' ~\n': 1, '~\n\n': 1, '\n\n1': 1, '\n1\t': 5, '1\tI': 5, '\tIn': 5, 'a\t#': 5, '\t#N': 1, 'ic\n': 1, 'c\n1': 1, '\t#A': 2, 'te\n': 1, 'e\n1': 1, '\t#k': 1, 'ib\n': 1, 'b\n1': 1, '\t#C': 1, '#Co': 1, 'Con': 1, 'ono': 1, 'nor': 1, 'orM': 1, 'rMc': 1, 'McG': 1, 'cGr': 1, 'Gre': 1, 'reg': 1, 'ego': 1, 'gor': 1, 'or\n': 1, 'r\n1': 1, '#As': 1, 'Ask': 1, 'skS': 1, 'kSR': 1, 'SR\n': 1, ""R\n'"": 1, ""'\n\n"": 1, '\n\n\n': 1, '\n\nf': 1, 'r c': 1, ' co': 2, 'y i': 2, 'et[': 3, ""t['"": 2, '].u': 1, '.un': 1, 'uni': 1, 'niq': 1, 'iqu': 1, 'que': 1, 'ue(': 1, 'e()': 1, 'et_': 2, 't_c': 2, '_co': 3, 'y =': 1, 't[d': 1, '[da': 1, ' ==': 1, '== ': 1, '= c': 1, 'ry]': 1, 'y]\n': 1, '  #': 1, ' # ': 1, 't\n ': 1, 'ry[': 1, ""y['"": 1, '].v': 1, '.va': 1, 'alu': 1, 'lue': 1, 'ue_': 1, 'e_c': 1, 'nts': 1, 'ts(': 1, '().': 1, ').p': 1, '.pl': 1, 'ot(': 1, 't(k': 1, '(ki': 1, 'kin': 1, 'ind': 1, 'nd ': 1, 'd =': 1, "" 'b"": 1, ""'ba"": 1, 'bar': 1, 'arh': 1, ""rh'"": 1, ""h')"": 1, ')\n ': 4, '  \n': 1, ' \n ': 1, '  p': 4, 'lt.': 4, 't.x': 1, '.xl': 1, 'xla': 1, 'lab': 2, 'abe': 2, 'bel': 2, 'el(': 2, ""l('"": 2, ""('H"": 2, ""'Ha"": 3, 'Has': 3, 'ag ': 2, 'g C': 1, ' Co': 1, 'Cou': 1, ""t')"": 1, 't.y': 1, '.yl': 1, 'yla': 1, 't.t': 1, '.ti': 1, 'tit': 1, 'itl': 1, 'tle': 1, 'le(': 1, 'e(f': 1, ""(f'"": 1, ""f'H"": 1, 'g P': 1, ' Po': 1, 'Pop': 1, 'opu': 1, 'pul': 1, 'ula': 1, 'lar': 1, 'ari': 1, 'rit': 1, 'ity': 1, 'ty ': 1, 'n {': 1, ' {c': 1, '{co': 1, 'ry}': 1, ""y}'"": 1, ""}')"": 1, '.sh': 1, 'sho': 1, 'how': 1, 'ow(': 1, 'w()': 1}"
Tushar Nankani,07_ricart_agarwala.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{""'''"": 2, 'enter': 14, 'number': 2, 'of': 5, 'sites:': 2, '4': 3, '___________________________________________': 11, 'select': 11, 'a': 12, 'site': 16, '(from': 12, '0': 20, 'to': 40, '3):': 11, 'what': 11, 'does': 12, 's0': 15, 'want': 12, 'do': 12, '?': 12, '1.': 11, 'request': 23, 'cs': 48, '2.': 11, 'execute': 20, '3.': 11, 'release': 13, '4.': 11, 'quit': 11, 'choice': 16, ':': 20, '1': 10, 'timestamp': 10, '(hh:mm)': 3, '5:10': 1, 'requests': 3, 'for': 13, 'at': 5, '05:10:00': 2, 'sends': 14, 'message': 16, 's1': 15, 'reply': 9, 's0...': 3, 's2': 8, 's3': 4, '5:15': 1, '05:15:00': 1, 'has': 7, 'also': 2, 'requested': 4, 'deferred': 4, 's1...': 2, '2': 10, 'received': 8, 'only': 5, 'replies': 9, 'so': 5, 'cannot': 6, 'yet...': 4, 'already': 3, 'cs...': 3, 'all': 3, '3': 3, 'and': 3, 'can': 3, 'now': 3, '!!': 2, 'is': 9, 'executing': 7, 'sending': 2, 's1..': 1, 's4': 1, 'import': 1, 'datetime': 1, 'n': 2, '=': 18, ""int(input('enter"": 2, ""'))"": 3, '{i:': 4, '[]': 2, 'i': 7, 'in': 6, 'range(n)}': 4, 'cs_available': 5, 'true': 3, 'requesting': 1, '[false,': 2, ""'-']"": 2, 'false': 3, 'def': 3, 'request_cs(site):': 1, 'if': 9, 'replies[site]': 5, '>': 2, '0:': 1, ""print(f'site"": 2, 's{site}': 6, ""cs...')"": 3, 'return': 5, ""input('enter"": 1, ""')"": 2, 'datetime.datetime.strptime(timestamp,': 1, ""'%h:%m').time()"": 1, ""{timestamp}')"": 1, 'requesting[site]': 2, '[true,': 1, 'timestamp]': 1, 'range(n):': 1, '==': 4, 'site:': 1, 'continue': 1, ""print(f's{site}"": 4, ""s{i}')"": 1, 'executing[i]:': 1, ""print(f's{i}"": 5, 'currently': 1, ""request')"": 2, 'deferred[i].append(site)': 2, 'elif': 3, 'requesting[i][0]:': 1, 'print(': 4, ""f's{i}"": 1, ""{requesting[i][1]}')"": 1, 'requesting[i][1]': 1, 'timestamp:': 1, ""s{site}...')"": 2, '+=': 3, 'else:': 3, 'print()': 7, 'execute_cs(site):': 1, 'executing[site]:': 2, ""cs..')"": 1, '!=': 1, '-': 1, '1:': 2, ""f's{site}"": 2, '{replies[site]}': 2, ""yet...'"": 1, ')': 1, 'global': 2, 'not': 4, 'cs_available:': 1, ""print('cs"": 1, ""available...')"": 1, ""!!')"": 1, 'executing[site]': 2, 'release_cs(site):': 1, ""f'site"": 1, 'because': 1, 'it': 1, ""yet..')"": 1, 'range(len(deferred[site])):': 1, ""s{deferred[site][i]}..')"": 1, 'replies[deferred[site][i]]': 1, 'deferred[site]': 1, 'while': 1, 'true:': 1, 'print(""\\n___________________________________________\\n"")': 1, ""int(input(f'select"": 1, '{n-1}):': 1, ""print(f'\\nwhat"": 1, ""print('1."": 1, ""cs')"": 3, ""print('2."": 1, ""print('3."": 1, ""print('4."": 1, ""quit')"": 1, 'request_cs(site)': 1, '2:': 1, 'execute_cs(site)': 1, '3:': 1, 'release_cs(site)': 1, 'break': 1}","{""'''"": 2, ""''\n"": 2, ""'\n\n"": 2, '\n\nE': 3, '\nEn': 14, 'Ent': 17, 'nte': 17, 'ter': 17, 'er ': 19, 'r n': 2, ' nu': 2, 'num': 2, 'umb': 2, 'mbe': 2, 'ber': 2, 'r o': 2, ' of': 5, 'of ': 5, 'f s': 2, ' si': 16, 'sit': 55, 'ite': 61, 'tes': 2, 'es:': 2, 's: ': 2, ': 4': 3, ' 4\n': 3, '4\n\n': 2, '\n\n_': 11, '\n__': 11, '___': 492, '__\n': 11, '_\n\n': 11, '\n\nS': 23, '\nSe': 11, 'Sel': 12, 'ele': 27, 'lec': 12, 'ect': 12, 'ct ': 12, 't a': 12, ' a ': 12, 'a s': 12, 'te ': 39, 'e (': 12, ' (f': 12, '(fr': 12, 'fro': 12, 'rom': 12, 'om ': 12, 'm 0': 12, ' 0 ': 15, '0 t': 12, ' to': 40, 'to ': 40, 'o 3': 11, ' 3)': 11, '3):': 11, '): ': 12, ': 0': 8, ' 0\n': 5, '0\n\n': 4, '\n\nW': 11, '\nWh': 11, 'Wha': 12, 'hat': 12, 'at ': 17, 't d': 13, ' do': 24, 'doe': 12, 'oes': 12, 'es ': 21, 's S': 12, ' S0': 10, 'S0 ': 14, '0 w': 4, ' wa': 12, 'wan': 12, 'ant': 12, 'nt ': 12, 't t': 17, 'o d': 12, 'do ': 12, 'o ?': 12, ' ? ': 12, '? \n': 11, ' \n1': 11, '\n1.': 11, '1. ': 12, '. R': 24, ' Re': 24, 'Req': 12, 'equ': 25, 'que': 25, 'ues': 25, 'est': 39, 'st ': 12, 't C': 12, ' CS': 58, 'CS\n': 33, 'S\n2': 11, '\n2.': 11, '2. ': 12, '. E': 12, ' Ex': 12, 'Exe': 12, 'xec': 34, 'ecu': 34, 'cut': 34, 'ute': 22, 'e C': 33, 'S\n3': 11, '\n3.': 11, '3. ': 12, 'Rel': 12, 'lea': 15, 'eas': 15, 'ase': 15, 'se ': 15, 'S\n4': 11, '\n4.': 11, '4. ': 12, '. Q': 12, ' Qu': 12, 'Qui': 12, 'uit': 12, 'it\n': 11, 't\nE': 11, 'r c': 12, ' ch': 16, 'cho': 16, 'hoi': 16, 'oic': 16, 'ice': 16, 'ce ': 16, 'e :': 12, ' : ': 20, ': 1': 7, ' 1\n': 10, '1\n\n': 9, 'r t': 3, ' ti': 12, 'tim': 19, 'ime': 19, 'mes': 30, 'sta': 14, 'tam': 14, 'amp': 14, 'mp ': 10, 'p o': 3, 'f R': 3, ' RE': 24, 'REQ': 15, 'EQU': 15, 'QUE': 15, 'UES': 15, 'EST': 15, 'ST ': 10, 'T (': 3, ' (H': 3, '(HH': 3, 'HH:': 3, 'H:M': 3, ':MM': 3, 'MM)': 3, 'M) ': 3, ') :': 3, ': 5': 2, ' 5:': 2, '5:1': 5, ':10': 3, '10\n': 1, '0\nS': 5, '\nSi': 3, 'Sit': 6, 'e S': 6, '0 r': 4, ' re': 41, 'req': 13, 'sts': 3, 'ts ': 3, 's f': 3, ' fo': 13, 'for': 13, 'or ': 13, 'r C': 7, 'CS ': 16, 'S a': 5, ' at': 5, 'p :': 5, ' 05': 3, '05:': 3, '10:': 2, '0:0': 2, ':00': 3, '00\n': 3, '\nS0': 8, '0 s': 3, ' se': 16, 'sen': 16, 'end': 18, 'nds': 14, 'ds ': 14, 's R': 14, 'T m': 7, ' me': 16, 'ess': 16, 'ssa': 16, 'sag': 16, 'age': 16, 'ge ': 16, 'e t': 16, 'o S': 16, ' S1': 10, 'S1\n': 1, '1\nS': 1, '\nS1': 8, 'S1 ': 14, '1 s': 4, 'REP': 9, 'EPL': 9, 'PLY': 9, 'LY ': 9, 'Y m': 9, 'S0.': 3, '0..': 3, '...': 19, '..\n': 13, '.\n\n': 13, ' S2': 4, 'S2\n': 2, '2\nS': 2, '\nS2': 4, 'S2 ': 6, '2 s': 2, ' S3': 2, 'S3\n': 2, '3\nS': 2, '\nS3': 2, 'S3 ': 2, '3 s': 2, '\n\n\n': 13, '1 w': 4, ':15': 2, '15\n': 1, '5\nS': 1, '1 r': 4, '15:': 1, '5:0': 1, 'S0\n': 1, '0 h': 3, ' ha': 7, 'has': 7, 'as ': 7, 's a': 8, ' al': 8, 'als': 7, 'lso': 2, 'so ': 7, 'o R': 2, 'STE': 2, 'TED': 2, 'ED ': 5, 'D f': 2, 's D': 3, ' DE': 3, 'DEF': 3, 'EFE': 3, 'FER': 3, 'ERR': 3, 'RRE': 3, 'RED': 3, 'D S': 3, '1 R': 1, 'ST\n': 1, 'T\n\n': 1, 'S1.': 3, '1..': 3, ': 2': 8, ' 2\n': 8, '2\n\n': 8, '2 w': 2, '2 r': 4, 'rec': 8, 'ece': 8, 'cei': 8, 'eiv': 8, 'ive': 8, 'ved': 8, 'ed ': 11, 'd o': 5, ' on': 5, 'onl': 5, 'nly': 5, 'ly ': 6, 'y 0': 2, 'rep': 17, 'epl': 17, 'pli': 17, 'lie': 17, 'ies': 17, 's s': 7, ' so': 5, 'o c': 5, ' ca': 9, 'can': 9, 'ann': 6, 'nno': 6, 'not': 9, 'ot ': 9, 't e': 7, ' ex': 21, 'exe': 22, 'S y': 6, ' ye': 6, 'yet': 6, 'et.': 6, 't..': 6, 'y 2': 2, ' 2 ': 2, 'alr': 3, 'lre': 3, 'rea': 4, 'ead': 3, 'ady': 3, 'dy ': 3, 'y r': 2, 'ste': 2, 'ted': 2, 'd f': 2, 'CS.': 7, 'S..': 7, 'd a': 3, 'all': 3, 'll ': 3, 'l 3': 2, ' 3 ': 2, '3 r': 2, ' an': 3, 'and': 3, 'nd ': 3, 'd c': 3, 'an ': 3, 'n n': 3, ' no': 6, 'now': 3, 'ow ': 3, 'w e': 3, 'S !': 3, ' !!': 3, '!!\n': 2, '!\nS': 2, '0 i': 2, ' is': 9, 'is ': 9, 's e': 3, 'uti': 12, 'tin': 19, 'ing': 20, 'ng ': 10, 'g C': 6, ': 3': 1, ' 3\n': 1, '3\n\n': 1, 'ndi': 2, 'din': 2, 'g R': 2, '1 i': 1, ' S4': 1, 'S4 ': 1, '4 w': 1, ""4\n'"": 1, ""\n''"": 1, '\n\ni': 1, '\nim': 1, 'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, ' da': 2, 'dat': 3, 'ate': 3, 'tet': 3, 'eti': 3, 'me\n': 1, 'e\n\n': 4, '\n\nn': 1, '\nn ': 1, 'n =': 1, ' = ': 18, '= i': 4, ' in': 10, 'int': 32, 'nt(': 32, 't(i': 3, '(in': 3, 'inp': 4, 'npu': 4, 'put': 4, 'ut(': 4, ""t('"": 8, ""('E"": 3, ""'En"": 3, "": '"": 4, "" ')"": 5, ""'))"": 3, '))\n': 3, ')\nd': 1, '\nde': 4, 'def': 10, 'efe': 7, 'fer': 7, 'err': 7, 'rre': 8, 'red': 7, 'd =': 1, '= {': 4, ' {i': 4, '{i:': 4, 'i: ': 4, ': [': 2, ' []': 2, '[] ': 1, '] f': 2, 'r i': 6, ' i ': 7, 'i i': 6, 'in ': 6, 'n r': 6, ' ra': 6, 'ran': 6, 'ang': 6, 'nge': 6, 'ge(': 6, 'e(n': 5, '(n)': 5, 'n)}': 4, ')}\n': 4, '}\nc': 1, '\ncs': 1, 'cs_': 6, 's_a': 6, '_av': 6, 'ava': 7, 'vai': 7, 'ail': 7, 'ila': 7, 'lab': 7, 'abl': 7, 'ble': 7, 'le ': 4, 'e =': 8, '= T': 3, ' Tr': 4, 'Tru': 5, 'rue': 5, 'ue\n': 4, 'e\nr': 1, '\nre': 2, 'sti': 6, 'g =': 2, ' [F': 2, '[Fa': 2, 'Fal': 5, 'lse': 8, 'se,': 2, 'e, ': 3, "", '"": 3, "" '-"": 2, ""'-'"": 2, ""-']"": 2, ""'] "": 1, '}\ne': 1, '\nex': 1, ': F': 1, ' Fa': 3, 'e f': 1, '}\nr': 1, 's =': 1, '0 f': 1, '}\n\n': 1, '\n\nd': 3, 'ef ': 3, 'f r': 6, 'st_': 2, 't_c': 2, '_cs': 6, 'cs(': 6, 's(s': 6, '(si': 8, 'te)': 8, 'e):': 3, '):\n': 5, ':\n ': 21, '\n  ': 80, '  i': 9, ' if': 9, 'if ': 12, 'es[': 8, 's[s': 7, '[si': 17, 'te]': 17, 'e] ': 10, '] >': 2, ' > ': 2, '> 0': 1, ' 0:': 1, '0:\n': 1, '   ': 128, '  p': 29, ' pr': 29, 'pri': 29, 'rin': 29, 't(f': 13, ""(f'"": 13, ""f'S"": 16, ""'Si"": 3, ' S{': 10, 'S{s': 14, '{si': 14, 'te}': 14, 'e} ': 12, '} h': 4, ""..'"": 10, "".')"": 9, ""')\n"": 21, ')\n ': 31, '  r': 13, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn\n': 5, 'n\n\n': 5, '\n\n ': 16, '  t': 2, 'p =': 2, '= d': 1, 'me.': 2, 'e.d': 1, '.da': 1, 'e.s': 1, '.st': 1, 'str': 1, 'trp': 1, 'rpt': 1, 'pti': 1, 'me(': 2, 'e(t': 1, '(ti': 1, 'mp,': 1, 'p, ': 1, "" '%"": 1, ""'%H"": 1, '%H:': 1, 'H:%': 1, ':%M': 1, ""%M'"": 1, ""M')"": 1, ""')."": 1, ').t': 1, '.ti': 1, 'e()': 1, '()\n': 8, '} r': 5, ': {': 2, ' {t': 1, '{ti': 1, 'mp}': 1, ""p}'"": 1, ""}')"": 3, 'ng[': 10, 'g[s': 6, '] =': 6, '= [': 3, ' [T': 1, '[Tr': 1, 'ue,': 1, ', t': 1, 'mp]': 1, 'p]\n': 1, ']\n\n': 2, '  f': 6, 'n):': 1, 'f i': 1, 'i =': 1, ' ==': 4, '== ': 4, '= s': 1, 'te:': 1, 'e:\n': 6, '  c': 4, ' co': 1, 'con': 1, 'ont': 1, 'nti': 1, 'inu': 1, 'nue': 1, ""'S{"": 12, '} s': 3, 'S{i': 7, '{i}': 7, ""i}'"": 1, ')\n\n': 7, 'f e': 3, 'g[i': 4, '[i]': 8, 'i]:': 1, ']:\n': 4, 'i} ': 6, '} i': 4, 's c': 1, ' cu': 1, 'cur': 1, 'urr': 1, 'ren': 1, 'ent': 1, 'ntl': 1, 'tly': 1, 'y e': 2, '} R': 2, ""ST'"": 2, ""T')"": 2, '  d': 3, ' de': 3, 'ed[': 6, 'd[i': 2, 'i].': 2, '].a': 2, '.ap': 2, 'app': 2, 'ppe': 2, 'pen': 2, 'nd(': 2, 'd(s': 2, 'e)\n': 5, '  e': 9, ' el': 6, 'eli': 3, 'lif': 3, 'i][': 3, '][0': 1, '[0]': 1, '0]:': 1, 't(\n': 4, '(\n ': 4, "" f'"": 4, ' {r': 3, '{re': 3, '][1': 2, '[1]': 2, '1]}': 1, ""]}'"": 1, '1] ': 1, '> t': 1, 'mp:': 1, 'p:\n': 1, 'e}.': 2, '}..': 3, '] +': 3, ' +=': 3, '+= ': 3, '= 1': 4, '1\n ': 1, 'els': 3, 'se:': 3, 't()': 7, 'te_': 2, 'e_c': 4, 'e]:': 2, '] !': 1, ' !=': 1, '!= ': 1, '= n': 1, ' n ': 1, 'n -': 1, ' - ': 1, '- 1': 1, ' 1:': 2, '1:\n': 2, 'y {': 1, 'e]}': 2, ']} ': 2, "".'\n"": 1, ""'\n "": 1, '  )': 1, ' )\n': 1, '  g': 2, ' gl': 2, 'glo': 2, 'lob': 2, 'oba': 2, 'bal': 2, 'al ': 2, 'l c': 2, ' cs': 5, 'le\n': 2, 'f n': 2, 't c': 1, 'le:': 1, ""('C"": 1, ""'CS"": 1, 'S i': 1, 's N': 1, ' NO': 1, 'NOT': 1, 'OT ': 1, 'T a': 1, ' av': 1, 'le.': 1, 'e..': 1, 'l {': 1, ""!!'"": 1, ""!')"": 1, '= F': 2, 'se\n': 2, 'e\n ': 4, 'rel': 3, 'se_': 2, '} c': 1, 't r': 1, 'S b': 1, ' be': 1, 'bec': 1, 'eca': 1, 'cau': 1, 'aus': 1, 'use': 1, 'e i': 1, ' it': 1, 'it ': 1, 't i': 1, 's n': 1, '= 0': 1, '0\n ': 1, ""']\n"": 1, 'e(l': 1, '(le': 1, 'len': 1, 'en(': 1, 'n(d': 1, '(de': 1, 'd[s': 4, 'e])': 1, ']))': 1, ')):': 1, 'S{d': 1, '{de': 1, 'e][': 2, '][i': 2, 'i]}': 1, ']}.': 1, 's[d': 1, '[de': 1, 'i]]': 1, ']] ': 1, '[]\n': 1, ']\n ': 1, '\n\nw': 1, '\nwh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'e T': 1, 'ue:': 1, 't(""': 1, '(""\\': 1, '""\\n': 1, '\\n_': 1, 'n__': 1, '__\\': 1, '_\\n': 1, '\\n""': 1, 'n"")': 1, '"")\n': 1, '  s': 1, ""'Se"": 1, 'o {': 1, ' {n': 1, '{n-': 1, 'n-1': 1, '-1}': 1, '1})': 1, '}):': 1, ""f'\\"": 1, ""'\\n"": 1, '\\nW': 1, 'nWh': 1, '} w': 1, ""? '"": 1, ""('1"": 1, ""'1."": 1, ""CS'"": 3, ""S')"": 3, ""('2"": 1, ""'2."": 1, ""('3"": 1, ""'3."": 1, ""('4"": 1, ""'4."": 1, ""it'"": 1, ""t')"": 1, 'f c': 3, '= 2': 1, ' 2:': 1, '2:\n': 1, '= 3': 1, ' 3:': 1, '3:\n': 1, '  b': 1, ' br': 1, 'bre': 1, 'eak': 1, 'ak\n': 1}"
Tushar Nankani,10_community_detection.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 6, 'numpy': 1, 'as': 5, 'np': 1, 'pandas': 1, 'pd': 1, 'matplotlib.pyplot': 1, 'plt': 1, 'seaborn': 1, 'sns': 1, 'networkx': 1, 'nx': 1, 'from': 2, 'networkx.algorithms': 1, 'community': 2, 'df': 1, '=': 19, ""pd.read_csv('tweets.csv')"": 1, 'df.info()': 1, 'dataset': 2, 'df[df.user_location.notnull()].sample(10)': 1, ""dataset['hashtags']"": 1, ""dataset['tweet'].apply(lambda"": 1, 'tweet:': 1, '[item': 1, 'for': 5, 'item': 1, 'in': 5, 'tweet.split()': 1, 'if': 1, 'item.startswith(""#"")])': 1, ""dataset.explode('hashtags')"": 1, 'users': 1, ""list(dataset['user'].unique())"": 1, 'hashtags': 1, ""list(dataset['hashtags'].unique())"": 1, 'vis': 1, 'nx.graph()': 1, '#': 12, 'create': 1, 'graph': 1, 'vis.add_nodes_from(users': 1, '+': 1, 'hashtags)': 1, 'add': 1, 'nodes': 2, 'unique': 1, 'entities': 1, 'important': 1, 'name,': 1, 'group': 1, ""dataset.groupby(['hashtags','user']):"": 1, 'hashtag,': 1, 'user': 1, 'name': 1, 'weight': 1, 'len(group)': 1, 'vis.add_edge(hashtag,': 1, 'user,': 1, 'weight=weight)': 1, 'detection': 1, '____________________________': 2, 'community_gen': 1, 'community.girvan_newman(vis)': 1, 'top_level_communities': 1, 'next(community_gen)': 1, 'communities': 1, 'list(top_level_communities)': 1, '[{""#sample"",': 1, '""#sample"",': 1, '...},': 1, '{""#sample"",': 1, '""sample"",': 1, '...}]': 1, 'assigning': 1, 'a': 1, 'node_colors': 3, 'map/dict': 1, 'colors': 1, ""['red',"": 1, ""'orange',"": 1, ""'yellow']"": 1, '{}': 1, 'i,': 1, 'comm': 1, 'enumerate(communities):': 1, 'node': 2, 'comm:': 1, 'node_colors[node]': 1, 'colors[i]': 1, 'nx.set_node_attributes(vis,': 1, 'node_colors,': 1, ""name='color')"": 1, 'set': 1, 'attributes': 2, 'nx.get_node_attributes(vis,': 1, ""'color')"": 1, 'get': 1, 'color': 1, 'nx.draw(vis,': 1, 'with_labels=true,': 1, 'node_color=node_colors.values())': 1, 'plt.axis(""off"")': 1, 'plt.show()': 1, 'influential': 1, 'analysis': 1, 'centrality': 1, 'nx.betweenness_centrality(vis)': 1, 'dict': 1, 'inf_nodes': 1, 'sorted(centrality.items(),': 1, 'key': 1, 'lambda': 1, 'item:item[1],': 1, 'reverse=true)[:5]': 1, 'inf_nodes:': 1, ""print(f'{nodes[0]}"": 1, ':': 1, ""{nodes[1]}')"": 1}","{'imp': 6, 'mpo': 6, 'por': 6, 'ort': 7, 'rt ': 6, 't n': 2, ' nu': 1, 'num': 2, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 5, 'as ': 6, 's n': 2, ' np': 1, 'np\n': 1, 'p\ni': 1, '\nim': 4, 't p': 1, ' pa': 1, 'pan': 1, 'and': 1, 'nda': 1, 'das': 1, 's a': 1, 's p': 2, ' pd': 2, 'pd\n': 1, 'd\ni': 1, 't m': 1, ' ma': 2, 'mat': 1, 'atp': 1, 'tpl': 1, 'plo': 3, 'lot': 2, 'otl': 1, 'tli': 1, 'lib': 1, 'ib.': 1, 'b.p': 1, '.py': 1, 'pyp': 1, 'ypl': 1, 'ot ': 1, 't a': 2, ' pl': 1, 'plt': 3, 'lt\n': 1, 't\ni': 2, 't s': 1, ' se': 2, 'sea': 1, 'eab': 1, 'abo': 1, 'bor': 1, 'orn': 1, 'rn ': 1, 'n a': 1, 's s': 1, ' sn': 1, 'sns': 1, 'ns\n': 1, 's\n\n': 3, '\n\ni': 1, ' ne': 3, 'net': 2, 'etw': 3, 'two': 2, 'wor': 2, 'ork': 2, 'rkx': 2, 'kx ': 1, 'x a': 1, ' nx': 4, 'nx\n': 1, 'x\nf': 1, '\nfr': 1, 'fro': 3, 'rom': 3, 'om ': 2, 'm n': 1, 'kx.': 1, 'x.a': 1, '.al': 1, 'alg': 1, 'lgo': 1, 'gor': 1, 'ori': 1, 'rit': 1, 'ith': 3, 'thm': 1, 'hms': 1, 'ms ': 1, 's i': 2, ' im': 1, 't c': 2, ' co': 6, 'com': 10, 'omm': 11, 'mmu': 9, 'mun': 9, 'uni': 12, 'nit': 9, 'ity': 8, 'ty\n': 1, 'y\n\n': 1, '\n\nd': 4, '\ndf': 2, 'df ': 1, 'f =': 1, ' = ': 19, '= p': 1, 'pd.': 1, 'd.r': 1, '.re': 1, 'rea': 2, 'ead': 1, 'ad_': 1, 'd_c': 1, '_cs': 1, 'csv': 2, 'sv(': 1, ""v('"": 1, ""('t"": 1, ""'tw"": 2, 'twe': 5, 'wee': 5, 'eet': 4, 'ets': 1, 'ts.': 1, 's.c': 1, '.cs': 1, ""sv'"": 1, ""v')"": 1, ""')\n"": 2, ')\nd': 1, 'df.': 2, 'f.i': 1, '.in': 1, 'inf': 3, 'nfo': 1, 'fo(': 1, 'o()': 1, '()\n': 2, ')\n\n': 8, '\nda': 3, 'dat': 8, 'ata': 8, 'tas': 8, 'ase': 8, 'set': 10, 'et ': 4, 't =': 3, '= d': 3, ' df': 1, 'df[': 1, 'f[d': 1, '[df': 1, 'f.u': 1, '.us': 1, 'use': 7, 'ser': 7, 'er_': 1, 'r_l': 1, '_lo': 1, 'loc': 1, 'oca': 1, 'cat': 1, 'ati': 1, 'tio': 2, 'ion': 2, 'on.': 1, 'n.n': 1, '.no': 1, 'not': 1, 'otn': 1, 'tnu': 1, 'nul': 1, 'ull': 1, 'll(': 1, 'l()': 1, '()]': 1, ')].': 1, '].s': 1, '.sa': 1, 'sam': 5, 'amp': 5, 'mpl': 5, 'ple': 5, 'le(': 1, 'e(1': 1, '(10': 1, '10)': 1, '0)\n': 1, 'et[': 4, ""t['"": 4, ""['h"": 3, ""'ha"": 4, 'has': 8, 'ash': 8, 'sht': 8, 'hta': 8, 'tag': 8, 'ags': 6, ""gs'"": 4, ""s']"": 2, ""'] "": 1, '] =': 2, ' da': 3, ""['t"": 1, ""et'"": 1, ""t']"": 1, ""']."": 3, '].a': 1, '.ap': 1, 'app': 1, 'ppl': 1, 'ply': 1, 'ly(': 1, 'y(l': 1, '(la': 1, 'lam': 2, 'amb': 2, 'mbd': 2, 'bda': 2, 'da ': 2, 'a t': 1, ' tw': 2, 'et:': 1, 't: ': 1, ': [': 1, ' [i': 1, '[it': 1, 'ite': 6, 'tem': 6, 'em ': 2, 'm f': 1, ' fo': 2, 'for': 5, 'or ': 6, 'r i': 2, ' it': 3, 'm i': 2, ' in': 6, 'in ': 5, 'n t': 1, 'et.': 3, 't.s': 2, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 4, 'it(': 1, 't()': 1, '() ': 2, ') i': 1, ' if': 1, 'if ': 1, 'f i': 1, 'em.': 1, 'm.s': 1, '.st': 1, 'sta': 1, 'tar': 1, 'art': 1, 'rts': 1, 'tsw': 1, 'swi': 1, 'wit': 2, 'th(': 1, 'h(""': 1, '(""#': 1, '""#""': 1, '#"")': 1, '"")]': 1, ')])': 1, '])\n': 1, 't.e': 1, '.ex': 1, 'exp': 1, 'xpl': 1, 'lod': 1, 'ode': 20, 'de(': 1, ""e('"": 1, ""('h"": 1, ""s')"": 1, '\n\nu': 1, '\nus': 1, 'ers': 3, 'rs ': 6, 's =': 9, '= l': 5, ' li': 3, 'lis': 3, 'ist': 3, 'st(': 3, 't(d': 2, '(da': 2, ""['u"": 1, ""'us"": 2, ""er'"": 2, ""r']"": 2, '].u': 2, '.un': 2, 'niq': 3, 'iqu': 3, 'que': 3, 'ue(': 2, 'e()': 2, '())': 3, '))\n': 3, ')\nh': 1, '\nha': 1, 'gs ': 1, '\n\nv': 1, '\nvi': 2, 'vis': 8, 'is ': 1, '= n': 5, 'nx.': 5, 'x.G': 1, '.Gr': 1, 'Gra': 2, 'rap': 2, 'aph': 2, 'ph(': 1, 'h()': 1, ') #': 6, ' # ': 6, '# C': 2, ' Cr': 1, 'Cre': 1, 'eat': 1, 'ate': 2, 'te ': 1, 'e G': 1, ' Gr': 1, 'ph\n': 1, 'h\nv': 1, 'is.': 2, 's.a': 2, '.ad': 2, 'add': 2, 'dd_': 2, 'd_n': 1, '_no': 5, 'nod': 18, 'des': 7, 'es_': 1, 's_f': 1, '_fr': 1, 'om(': 1, 'm(u': 1, '(us': 1, 's +': 1, ' + ': 1, '+ h': 1, ' ha': 2, 'gs)': 1, 's) ': 3, '# A': 2, ' Ad': 1, 'Add': 1, 'dd ': 1, 'd n': 1, ' no': 7, 'es ': 5, 's f': 1, ' fr': 1, 'm u': 1, ' un': 1, 'ue ': 1, 'e e': 1, ' en': 2, 'ent': 5, 'nti': 2, 'tit': 1, 'iti': 5, 'tie': 5, 'ies': 5, 'es\n': 3, '\n\n#': 4, '\n# ': 6, '# I': 2, ' IM': 1, 'IMP': 1, 'MPO': 1, 'POR': 1, 'ORT': 1, 'RTA': 1, 'TAN': 1, 'ANT': 1, 'NT\n': 1, 'T\nf': 1, '\nfo': 3, 'r n': 3, ' na': 3, 'nam': 3, 'ame': 3, 'me,': 1, 'e, ': 2, ', g': 1, ' gr': 1, 'gro': 3, 'rou': 3, 'oup': 3, 'up ': 1, 'p i': 1, 'n d': 1, 't.g': 1, '.gr': 1, 'upb': 1, 'pby': 1, 'by(': 1, 'y([': 1, ""(['"": 1, ""s',"": 1, ""','"": 1, "",'u"": 1, ""'])"": 1, ']):': 1, '):\n': 2, ':\n ': 4, '\n  ': 6, '   ': 10, '  h': 1, 'ag,': 2, 'g, ': 2, ', u': 2, ' us': 2, 'er ': 1, 'r =': 1, 'me\n': 1, 'e\n ': 1, '  w': 1, ' we': 2, 'wei': 3, 'eig': 3, 'igh': 3, 'ght': 3, 'ht ': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(g': 1, '(gr': 1, 'up)': 1, 'p)\n': 1, ')\n ': 1, '  v': 1, ' vi': 1, 'd_e': 1, '_ed': 1, 'edg': 1, 'dge': 1, 'ge(': 1, 'e(h': 1, '(ha': 1, 'er,': 1, 'r, ': 1, ', w': 2, 'ht=': 1, 't=w': 1, '=we': 1, 'ht)': 1, 't)\n': 1, '\n\n\n': 2, ' Co': 1, 'Com': 1, 'ty ': 2, 'y D': 1, ' De': 1, 'Det': 1, 'ete': 1, 'tec': 1, 'ect': 1, 'cti': 1, 'on\n': 1, 'n\n#': 1, '# _': 2, ' __': 2, '___': 52, '__\n': 2, '_\n\n': 2, '\n\nc': 3, '\nco': 3, 'ty_': 2, 'y_g': 2, '_ge': 2, 'gen': 2, 'en ': 1, 'n =': 1, '= c': 2, 'ty.': 2, 'y.g': 1, '.gi': 1, 'gir': 1, 'irv': 1, 'rva': 1, 'van': 1, 'an_': 1, 'n_n': 1, '_ne': 1, 'new': 1, 'ewm': 1, 'wma': 1, 'man': 1, 'an(': 1, 'n(v': 1, '(vi': 5, 'is)': 2, 's)\n': 1, ')\nt': 1, '\nto': 1, 'top': 2, 'op_': 2, 'p_l': 2, '_le': 2, 'lev': 2, 'eve': 3, 'vel': 2, 'el_': 2, 'l_c': 2, '_co': 9, 'nex': 1, 'ext': 1, 'xt(': 1, 't(c': 1, '(co': 2, 'en)': 1, 'n)\n': 1, 't(t': 1, '(to': 1, 'es)': 2, '# [': 1, ' [{': 1, '[{""': 1, '{""#': 2, '""#s': 3, '#sa': 3, 'le""': 4, 'e"",': 4, '"", ': 4, ', ""': 2, ' ""#': 1, ', .': 2, ' ..': 2, '...': 2, '..}': 2, '.},': 1, '}, ': 1, ', {': 1, ' {""': 1, ' ""s': 1, '""sa': 1, '.}]': 1, '}]\n': 1, ']\n\n': 3, ' As': 1, 'Ass': 1, 'ssi': 1, 'sig': 1, 'ign': 1, 'gni': 1, 'nin': 1, 'ing': 1, 'ng ': 1, 'g a': 1, ' a ': 1, 'a n': 1, 'de_': 9, 'e_c': 7, 'col': 12, 'olo': 12, 'lor': 12, 'ors': 8, 's m': 1, 'map': 1, 'ap/': 1, 'p/d': 1, '/di': 1, 'dic': 2, 'ict': 2, 'ct\n': 2, 't\nc': 1, '= [': 1, "" ['"": 1, ""['r"": 1, ""'re"": 1, 'red': 1, ""ed'"": 1, ""d',"": 1, ""', "": 2, "", '"": 3, "" 'o"": 1, ""'or"": 1, 'ora': 1, 'ran': 1, 'ang': 1, 'nge': 1, ""ge'"": 1, ""e',"": 1, "" 'y"": 1, ""'ye"": 1, 'yel': 1, 'ell': 1, 'llo': 1, 'low': 1, ""ow'"": 1, ""w']"": 1, ""']\n"": 1, ']\nn': 1, '\nno': 2, '= {': 1, ' {}': 1, '{}\n': 1, '}\n\n': 1, '\n\nf': 2, ' i,': 1, 'i, ': 1, ', c': 1, 'mm ': 1, 'n e': 1, 'enu': 1, 'ume': 1, 'mer': 1, 'era': 1, 'rat': 1, 'te(': 1, 'e(c': 1, 's):': 1, '  f': 1, 'de ': 2, 'e i': 1, 'n c': 1, 'mm:': 1, 'm:\n': 1, '  n': 1, 'rs[': 2, 's[n': 1, '[no': 1, 'de]': 1, 'e] ': 1, 's[i': 1, '[i]': 1, 'i]\n': 1, '\n\nn': 2, '\nnx': 2, 'x.s': 1, '.se': 1, 'et_': 2, 't_n': 2, 'e_a': 2, '_at': 2, 'att': 4, 'ttr': 4, 'tri': 4, 'rib': 4, 'ibu': 4, 'but': 4, 'ute': 4, 'tes': 4, 'es(': 3, 's(v': 2, 'is,': 3, 's, ': 4, ', n': 3, 'rs,': 1, 'me=': 1, ""e='"": 1, ""='c"": 1, ""'co"": 2, ""or'"": 2, ""r')"": 2, ""') "": 2, '# s': 1, ' at': 2, 's\nn': 1, 'x.g': 1, '.ge': 1, 'get': 2, "" 'c"": 1, '# g': 1, ' ge': 1, 'r a': 1, 'x.d': 1, '.dr': 1, 'dra': 1, 'raw': 1, 'aw(': 1, 'w(v': 1, ' wi': 1, 'th_': 1, 'h_l': 1, '_la': 1, 'lab': 1, 'abe': 1, 'bel': 1, 'els': 1, 'ls=': 1, 's=T': 1, '=Tr': 2, 'Tru': 2, 'rue': 2, 'ue,': 1, 'or=': 1, 'r=n': 1, '=no': 1, 'rs.': 1, 's.v': 1, '.va': 1, 'val': 1, 'alu': 1, 'lue': 2, 'ues': 1, 's()': 2, ')\np': 2, '\npl': 2, 'lt.': 2, 't.a': 1, '.ax': 1, 'axi': 1, 'xis': 1, 'is(': 1, 's(""': 1, '(""o': 1, '""of': 1, 'off': 1, 'ff""': 1, 'f"")': 1, '"")\n': 1, '.sh': 1, 'sho': 1, 'how': 1, 'ow(': 1, 'w()': 1, ' In': 1, 'Inf': 1, 'nfl': 1, 'flu': 1, 'uen': 1, 'tia': 1, 'ial': 1, 'al ': 1, 'l N': 1, ' No': 1, 'Nod': 1, 'e A': 1, ' An': 1, 'Ana': 1, 'nal': 1, 'aly': 1, 'lys': 1, 'ysi': 1, 'sis': 1, 'is\n': 1, 's\n#': 1, '\nce': 1, 'cen': 3, 'ntr': 3, 'tra': 3, 'ral': 3, 'ali': 3, 'y =': 2, 'x.b': 1, '.be': 1, 'bet': 1, 'een': 1, 'enn': 1, 'nne': 1, 'nes': 1, 'ess': 1, 'ss_': 1, 's_c': 1, '_ce': 1, 'ty(': 1, 'y(v': 1, '# d': 1, ' di': 1, '\nin': 1, 'nf_': 2, 'f_n': 2, '= s': 1, ' so': 1, 'sor': 1, 'rte': 1, 'ted': 1, 'ed(': 1, 'd(c': 1, '(ce': 1, 'y.i': 1, '.it': 1, 'ems': 1, 'ms(': 1, '(),': 1, '), ': 1, ', k': 1, ' ke': 1, 'key': 1, 'ey ': 1, ' la': 1, 'a i': 1, 'em:': 1, 'm:i': 1, ':it': 1, 'em[': 1, 'm[1': 1, '[1]': 2, '1],': 1, '], ': 1, ', r': 1, ' re': 1, 'rev': 1, 'ver': 1, 'rse': 1, 'se=': 1, 'e=T': 1, 'ue)': 1, 'e)[': 1, ')[:': 1, '[:5': 1, ':5]': 1, '5]\n': 1, 'n i': 1, 'es:': 1, 's:\n': 1, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 't(f': 1, ""(f'"": 1, ""f'{"": 1, ""'{n"": 1, '{no': 2, 'es[': 2, 's[0': 1, '[0]': 1, '0]}': 1, ']} ': 1, '} :': 1, ' : ': 1, ': {': 1, ' {n': 1, 's[1': 1, '1]}': 1, ""]}'"": 1, ""}')"": 1}"
Tushar Nankani,10_multithreading.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'import': 1, 'threading': 1, '#': 4, 'helper': 1, 'function': 1, 'to': 4, 'check': 1, 'if': 7, 'a': 4, 'number': 1, 'is': 1, 'prime': 3, 'def': 3, 'is_prime(n):': 1, 'n': 2, '<=': 1, '1:': 3, 'return': 3, 'false': 2, 'for': 4, 'i': 4, 'in': 3, 'range(2,': 3, 'n):': 1, '%': 1, '==': 1, '0:': 1, 'true': 1, 'create': 2, 'thread': 1, 'functions': 1, 'generate': 2, 'numbers': 2, 'and': 3, 'fibonacci': 2, 'sequence': 2, 'generate_primes(num):': 1, 'num+1):': 1, 'is_prime(i):': 1, 'print(f""prime:': 1, '{i}"",': 1, 'end=""\\n"")': 4, 'generate_fibonacci(num):': 1, '=': 7, '0': 1, 'b': 4, '1': 1, 'num': 3, '>=': 3, 'print(""fibo': 3, '"",': 2, 'a,': 1, '2:': 2, 'b,': 1, '3:': 1, 'num):': 1, 'c': 2, '+': 1, '{}:': 1, '"".format(i+1),': 1, 'c,': 1, 'start': 1, 'threads': 2, 'prime_thread': 1, 'threading.thread(target=generate_primes,': 1, 'args=(20,))': 1, 'fibonacci_thread': 1, 'threading.thread(target=generate_fibonacci,': 1, 'args=(10,))': 1, 'prime_thread.start()': 1, 'fibonacci_thread.start()': 1, 'wait': 1, 'the': 1, 'finish': 1, 'prime_thread.join()': 1, 'fibonacci_thread.join()': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 2, 't t': 2, ' th': 7, 'thr': 12, 'hre': 14, 'rea': 16, 'ead': 14, 'adi': 3, 'din': 3, 'ing': 3, 'ng\n': 1, 'g\n\n': 1, '\n\n#': 4, '\n# ': 4, '# H': 1, ' He': 1, 'Hel': 1, 'elp': 1, 'lpe': 1, 'per': 1, 'er ': 2, 'r F': 1, ' Fu': 1, 'Fun': 1, 'unc': 2, 'nct': 2, 'cti': 2, 'tio': 2, 'ion': 2, 'on ': 1, 'n t': 1, ' to': 4, 'to ': 4, 'o c': 1, ' ch': 1, 'che': 1, 'hec': 1, 'eck': 1, 'ck ': 1, 'k i': 1, ' if': 7, 'if ': 7, 'f a': 1, ' a ': 4, 'a n': 1, ' nu': 8, 'num': 10, 'umb': 3, 'mbe': 3, 'ber': 3, 'r i': 4, ' is': 3, 'is ': 1, 's p': 1, ' pr': 7, 'pri': 14, 'rim': 11, 'ime': 11, 'me\n': 1, 'e\nd': 2, '\nde': 3, 'def': 3, 'ef ': 3, 'f i': 2, 'is_': 2, 's_p': 2, '_pr': 4, 'me(': 2, 'e(n': 1, '(n)': 1, 'n):': 2, '):\n': 7, ':\n ': 12, '\n  ': 21, '   ': 114, '  i': 6, 'f n': 5, ' n ': 2, 'n <': 1, ' <=': 1, '<= ': 1, '= 1': 3, ' 1:': 3, '1:\n': 2, '  r': 3, ' re': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n F': 2, ' Fa': 2, 'Fal': 2, 'als': 2, 'lse': 2, 'se\n': 2, 'e\n ': 2, '  f': 3, ' fo': 4, 'for': 5, 'or ': 4, ' i ': 4, 'i i': 3, ' in': 3, 'in ': 3, 'n r': 3, ' ra': 3, 'ran': 3, 'ang': 3, 'nge': 3, 'ge(': 3, 'e(2': 3, '(2,': 3, '2, ': 3, ', n': 3, ' n)': 1, 'n %': 1, ' % ': 1, '% i': 1, 'i =': 1, ' ==': 1, '== ': 1, '= 0': 2, ' 0:': 1, '0:\n': 1, 'n T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1, 'e\n\n': 1, '# C': 2, ' Cr': 2, 'Cre': 2, 'eat': 2, 'ate': 8, 'te ': 4, 'e t': 2, 'ad ': 3, 'd f': 1, ' fu': 1, 'fun': 1, 'ons': 1, 'ns ': 1, 's t': 3, 'o g': 2, ' ge': 4, 'gen': 6, 'ene': 6, 'ner': 6, 'era': 6, 'rat': 6, 'e p': 2, 'me ': 2, 'e n': 2, 'ers': 2, 'rs ': 2, 's a': 2, ' an': 3, 'and': 3, 'nd ': 3, 'd F': 2, ' Fi': 2, 'Fib': 5, 'ibo': 10, 'bon': 7, 'ona': 7, 'nac': 7, 'acc': 7, 'cci': 7, 'ci ': 2, 'i s': 2, ' se': 2, 'seq': 2, 'equ': 2, 'que': 2, 'uen': 2, 'enc': 2, 'nce': 2, 'ce\n': 2, 'f g': 2, 'te_': 4, 'e_p': 2, 'mes': 2, 'es(': 1, 's(n': 1, '(nu': 2, 'um)': 3, 'm):': 3, 'um+': 1, 'm+1': 1, '+1)': 2, '1):': 1, 'e(i': 1, '(i)': 1, 'i):': 1, '  p': 4, 'rin': 4, 'int': 4, 'nt(': 4, 't(f': 1, '(f""': 1, 'f""P': 1, '""Pr': 1, 'Pri': 1, 'me:': 1, 'e: ': 1, ': {': 1, ' {i': 1, '{i}': 1, 'i}""': 1, '}"",': 1, '"", ': 3, ', e': 4, ' en': 4, 'end': 4, 'nd=': 4, 'd=""': 4, '=""\\': 4, '""\\n': 4, '\\n""': 4, 'n"")': 4, '"")\n': 4, ')\n\n': 2, '\n\nd': 1, 'e_f': 2, '_fi': 2, 'fib': 5, 'ci(': 1, 'i(n': 1, '  a': 2, 'a =': 2, ' = ': 7, ' 0\n': 1, '0\n ': 1, '  b': 2, ' b ': 2, 'b =': 2, ' 1\n': 1, '1\n ': 1, 'um ': 3, 'm >': 3, ' >=': 3, '>= ': 3, 't(""': 3, '(""F': 3, '""Fi': 3, 'bo ': 3, 'o 1': 1, '1: ': 1, ': ""': 3, ' "",': 2, ', a': 3, ' a,': 1, 'a, ': 1, ')\n ': 3, '= 2': 1, ' 2:': 2, '2:\n': 1, 'o 2': 1, '2: ': 1, ', b': 1, ' b,': 1, 'b, ': 1, '= 3': 1, ' 3:': 1, '3:\n': 1, '  c': 1, ' c ': 1, 'c =': 1, '= a': 1, 'a +': 1, ' + ': 1, '+ b': 1, ' b\n': 2, 'b\n ': 2, 'o {': 1, ' {}': 1, '{}:': 1, '}: ': 1, ' "".': 1, '"".f': 1, '.fo': 1, 'orm': 1, 'rma': 1, 'mat': 1, 'at(': 1, 't(i': 1, '(i+': 1, 'i+1': 1, '1),': 1, '), ': 1, ', c': 1, ' c,': 1, 'c, ': 1, '= b': 1, '= c': 1, ' c\n': 1, 'c\n\n': 1, 'e a': 1, 'd s': 1, ' st': 1, 'sta': 3, 'tar': 5, 'art': 3, 'ads': 2, 'ds ': 2, 'e\np': 1, '\npr': 3, 'me_': 3, 'e_t': 3, '_th': 6, 'd =': 2, '= t': 2, 'ng.': 2, 'g.T': 2, '.Th': 2, 'Thr': 2, 'ad(': 2, 'd(t': 2, '(ta': 2, 'arg': 4, 'rge': 2, 'get': 2, 'et=': 2, 't=g': 2, '=ge': 2, 'es,': 1, 's, ': 1, ' ar': 2, 'rgs': 2, 'gs=': 2, 's=(': 2, '=(2': 1, '(20': 1, '20,': 1, '0,)': 2, ',))': 2, '))\n': 2, ')\nf': 3, '\nfi': 3, 'ci_': 3, 'i_t': 3, 'ci,': 1, 'i, ': 1, '=(1': 1, '(10': 1, '10,': 1, ')\np': 1, 'ad.': 4, 'd.s': 2, '.st': 2, 'rt(': 2, 't()': 2, '()\n': 3, '# W': 1, ' Wa': 1, 'Wai': 1, 'ait': 1, 'it ': 1, 't f': 1, 'r t': 1, 'the': 1, 'he ': 1, 'o f': 1, ' fi': 1, 'fin': 1, 'ini': 1, 'nis': 1, 'ish': 1, 'sh\n': 1, 'h\np': 1, 'd.j': 2, '.jo': 2, 'joi': 2, 'oin': 2, 'in(': 2, 'n()': 2}"
Tushar Nankani,client.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'socket': 1, 'host': 2, '=': 5, ""'127.0.0.1'"": 1, 'port': 2, '2004': 1, 'if': 1, '__name__': 1, '==': 1, '""__main__"":': 1, 'with': 1, 'socket.socket(socket.af_inet,': 1, 'socket.sock_stream)': 1, 'as': 1, 's:': 1, 's.connect((host,': 1, 'port))': 2, 'print(""client': 1, 'connected': 1, 'to': 1, 'the': 2, 'server': 1, 'using': 1, '%s': 1, 'and': 1, '%d""': 1, '%': 1, '(host,': 1, 'res': 2, 's.recv(1024)': 2, 'while': 1, 'true:': 1, 'input': 1, ""input('enter"": 1, 'your': 1, 'message:': 1, ""')"": 1, 's.send(str.encode(input))': 1, ""print(res.decode('utf-8'))"": 1}","{'imp': 1, 'mpo': 1, 'por': 2, 'ort': 2, 'rt ': 2, 't s': 1, ' so': 3, 'soc': 5, 'ock': 5, 'cke': 5, 'ket': 5, 'et\n': 1, 't\n\n': 1, '\n\nH': 1, '\nHO': 1, 'HOS': 3, 'OST': 3, 'ST ': 1, 'T =': 2, ' = ': 5, ""= '"": 1, "" '1"": 1, ""'12"": 1, '127': 1, '27.': 1, '7.0': 1, '.0.': 2, '0.0': 1, '0.1': 1, "".1'"": 1, ""1'\n"": 1, ""'\nP"": 1, '\nPO': 1, 'POR': 3, 'ORT': 3, 'RT ': 1, '= 2': 1, ' 20': 1, '200': 1, '004': 1, '04\n': 1, '4\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, '= ""': 1, ' ""_': 1, '""__': 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, '__""': 1, '_"":': 1, '"":\n': 1, ':\n ': 3, '\n  ': 9, '   ': 66, '  w': 2, ' wi': 1, 'wit': 1, 'ith': 1, 'th ': 1, 'h s': 1, 'et.': 3, 't.s': 1, '.so': 1, 'et(': 1, 't(s': 1, '(so': 1, 't.A': 1, '.AF': 1, 'AF_': 1, 'F_I': 1, '_IN': 1, 'INE': 1, 'NET': 1, 'ET,': 1, 'T, ': 3, ', s': 1, 't.S': 1, '.SO': 1, 'SOC': 1, 'OCK': 1, 'CK_': 1, 'K_S': 1, '_ST': 1, 'STR': 1, 'TRE': 1, 'REA': 1, 'EAM': 1, 'AM)': 1, 'M) ': 1, ') a': 1, ' as': 1, 'as ': 1, 's s': 1, ' s:': 1, 's:\n': 1, '  s': 2, ' s.': 4, 's.c': 1, '.co': 1, 'con': 2, 'onn': 2, 'nne': 2, 'nec': 2, 'ect': 2, 'ct(': 1, 't((': 1, '((H': 1, '(HO': 2, 'ST,': 2, ', P': 2, ' PO': 2, 'RT)': 2, 'T))': 2, '))\n': 3, ')\n ': 5, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 2, 'int': 2, 'nt(': 2, 't(""': 1, '(""C': 1, '""Cl': 1, 'Cli': 1, 'lie': 1, 'ien': 1, 'ent': 1, 'nt ': 1, 't c': 1, ' co': 1, 'cte': 1, 'ted': 1, 'ed ': 1, 'd t': 1, ' to': 1, 'to ': 1, 'o t': 1, ' th': 2, 'the': 2, 'he ': 2, 'e s': 1, ' se': 1, 'ser': 1, 'erv': 1, 'rve': 1, 'ver': 1, 'er ': 2, 'r u': 1, ' us': 1, 'usi': 1, 'sin': 1, 'ing': 1, 'ng ': 1, 'g t': 1, 'e h': 1, ' ho': 1, 'hos': 1, 'ost': 1, 'st ': 1, 't %': 2, ' %s': 1, '%s ': 1, 's a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd p': 1, ' po': 1, ' %d': 1, '%d""': 1, 'd"" ': 1, '"" %': 1, ' % ': 1, '% (': 1, ' (H': 1, ')\n\n': 1, '\n\n ': 1, '  r': 2, ' re': 2, 'res': 3, 'es ': 2, 's =': 2, '= s': 2, 's.r': 2, '.re': 2, 'rec': 2, 'ecv': 2, 'cv(': 2, 'v(1': 2, '(10': 2, '102': 2, '024': 2, '24)': 2, '4)\n': 2, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue:': 1, 'e:\n': 1, '  I': 1, ' In': 1, 'Inp': 2, 'npu': 3, 'put': 3, 'ut ': 1, 't =': 1, '= i': 1, ' in': 1, 'inp': 1, 'ut(': 1, ""t('"": 1, ""('E"": 1, ""'En"": 1, 'Ent': 1, 'nte': 1, 'ter': 1, 'r y': 1, ' yo': 1, 'you': 1, 'our': 1, 'ur ': 1, 'r m': 1, ' me': 1, 'mes': 1, 'ess': 1, 'ssa': 1, 'sag': 1, 'age': 1, 'ge:': 1, 'e: ': 1, "": '"": 1, "" ')"": 1, ""')\n"": 1, 's.s': 1, '.se': 1, 'sen': 1, 'end': 1, 'nd(': 1, 'd(s': 1, '(st': 1, 'str': 1, 'tr.': 1, 'r.e': 1, '.en': 1, 'enc': 1, 'nco': 1, 'cod': 2, 'ode': 2, 'de(': 2, 'e(I': 1, '(In': 1, 'ut)': 1, 't))': 1, 't(r': 1, '(re': 1, 'es.': 1, 's.d': 1, '.de': 1, 'dec': 1, 'eco': 1, ""e('"": 1, ""('u"": 1, ""'ut"": 1, 'utf': 1, 'tf-': 1, 'f-8': 1, ""-8'"": 1, ""8')"": 1, ""'))"": 1}"
Tushar Nankani,client_1.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'socket': 1, 'host': 2, '=': 4, '""127.0.0.1""': 1, 'port': 2, '4568': 1, 'def': 1, 'sendable_data(data):': 1, 'return': 1, 'str(data).encode(""utf-8"")': 1, 'if': 1, '__name__': 1, '==': 1, '""__main__"":': 1, 'with': 1, 'socket.socket(socket.af_inet,': 1, 'socket.sock_stream)': 1, 'as': 1, 's:': 1, 's.connect((host,': 1, 'port))': 2, 'print(""client': 1, 'connected': 1, 'to': 1, 'the': 2, 'server': 1, 'using': 1, '%s': 1, 'and': 1, '%d""': 1, '%': 1, '(host,': 1, '#': 1, '---------------': 1, 'a,b': 1, 'input(""enter': 1, '2': 2, 'numbers:': 2, '"").split()': 1, 's.sendall(sendable_data(a))': 1, 's.sendall(sendable_data(b))': 1, 'data': 1, 's.recv(1024)': 1, ""print(f'addition"": 1, 'of': 1, '{data.decode(""utf-8"")}\')': 1}","{'imp': 1, 'mpo': 1, 'por': 2, 'ort': 2, 'rt ': 2, 't s': 1, ' so': 3, 'soc': 5, 'ock': 5, 'cke': 5, 'ket': 5, 'et\n': 1, 't\n\n': 1, '\n\nH': 1, '\nHO': 1, 'HOS': 3, 'OST': 3, 'ST ': 1, 'T =': 2, ' = ': 4, '= ""': 2, ' ""1': 1, '""12': 1, '127': 1, '27.': 1, '7.0': 1, '.0.': 2, '0.0': 1, '0.1': 1, '.1""': 1, '1""\n': 1, '""\nP': 1, '\nPO': 1, 'POR': 3, 'ORT': 3, 'RT ': 1, '= 4': 1, ' 45': 1, '456': 1, '568': 1, '68\n': 1, '8\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f s': 1, ' se': 2, 'sen': 5, 'end': 5, 'nda': 5, 'dab': 3, 'abl': 3, 'ble': 3, 'le_': 3, 'e_d': 3, '_da': 3, 'dat': 7, 'ata': 7, 'ta(': 3, 'a(d': 1, '(da': 2, 'ta)': 2, 'a):': 1, '):\n': 1, ':\n ': 3, '\n  ': 10, '   ': 48, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n s': 1, ' st': 1, 'str': 1, 'tr(': 1, 'r(d': 1, 'a).': 1, ').e': 1, '.en': 1, 'enc': 1, 'nco': 1, 'cod': 2, 'ode': 2, 'de(': 2, 'e(""': 2, '(""u': 2, '""ut': 2, 'utf': 2, 'tf-': 2, 'f-8': 2, '-8""': 2, '8"")': 2, '"")\n': 1, ')\n\n': 2, '\n\n\n': 1, '\n\ni': 1, '\nif': 1, 'if ': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, ' ""_': 1, '""__': 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, '__""': 1, '_"":': 1, '"":\n': 1, '  w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'th ': 1, 'h s': 1, 'et.': 3, 't.s': 1, '.so': 1, 'et(': 1, 't(s': 1, '(so': 1, 't.A': 1, '.AF': 1, 'AF_': 1, 'F_I': 1, '_IN': 1, 'INE': 1, 'NET': 1, 'ET,': 1, 'T, ': 3, ', s': 1, 't.S': 1, '.SO': 1, 'SOC': 1, 'OCK': 1, 'CK_': 1, 'K_S': 1, '_ST': 1, 'STR': 1, 'TRE': 1, 'REA': 1, 'EAM': 1, 'AM)': 1, 'M) ': 1, ') a': 1, ' as': 1, 'as ': 1, 's s': 1, ' s:': 1, 's:\n': 1, '  s': 3, ' s.': 4, 's.c': 1, '.co': 1, 'con': 2, 'onn': 2, 'nne': 2, 'nec': 2, 'ect': 2, 'ct(': 1, 't((': 1, '((H': 1, '(HO': 2, 'ST,': 2, ', P': 2, ' PO': 2, 'RT)': 2, 'T))': 2, '))\n': 4, ')\n ': 5, '  p': 2, ' pr': 2, 'pri': 2, 'rin': 2, 'int': 2, 'nt(': 2, 't(""': 2, '(""C': 1, '""Cl': 1, 'Cli': 1, 'lie': 1, 'ien': 1, 'ent': 1, 'nt ': 1, 't c': 1, ' co': 1, 'cte': 1, 'ted': 1, 'ed ': 1, 'd t': 1, ' to': 1, 'to ': 1, 'o t': 1, ' th': 2, 'the': 2, 'he ': 2, 'e s': 1, 'ser': 1, 'erv': 1, 'rve': 1, 'ver': 1, 'er ': 2, 'r u': 1, ' us': 1, 'usi': 1, 'sin': 1, 'ing': 1, 'ng ': 1, 'g t': 1, 'e h': 1, ' ho': 1, 'hos': 1, 'ost': 1, 'st ': 1, 't %': 2, ' %s': 1, '%s ': 1, 's a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd p': 1, ' po': 1, ' %d': 1, '%d""': 1, 'd"" ': 1, '"" %': 1, ' % ': 1, '% (': 1, ' (H': 1, '  #': 1, ' # ': 1, '# -': 1, ' --': 1, '---': 13, '--\n': 1, '-\n ': 1, '  a': 1, ' a,': 1, 'a,b': 1, ',b ': 1, 'b =': 1, '= i': 1, ' in': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut(': 1, '(""E': 1, '""En': 1, 'Ent': 1, 'nte': 1, 'ter': 1, 'r 2': 1, ' 2 ': 2, '2 n': 2, ' nu': 2, 'num': 2, 'umb': 2, 'mbe': 2, 'ber': 2, 'ers': 2, 'rs:': 2, 's: ': 2, ': ""': 1, ' "")': 1, '"").': 1, ').s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, 't()': 1, '()\n': 1, 's.s': 2, '.se': 2, 'dal': 2, 'all': 2, 'll(': 2, 'l(s': 2, '(se': 2, 'a(a': 1, '(a)': 1, 'a))': 1, 'a(b': 1, '(b)': 1, 'b))': 1, '\n\n ': 1, '  d': 1, ' da': 1, 'ta ': 1, 'a =': 1, '= s': 1, 's.r': 1, '.re': 1, 'rec': 1, 'ecv': 1, 'cv(': 1, 'v(1': 1, '(10': 1, '102': 1, '024': 1, '24)': 1, '4)\n': 1, 't(f': 1, ""(f'"": 1, ""f'A"": 1, ""'Ad"": 1, 'Add': 1, 'ddi': 1, 'dit': 1, 'iti': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n o': 1, ' of': 1, 'of ': 1, 'f 2': 1, ': {': 1, ' {d': 1, '{da': 1, 'ta.': 1, 'a.d': 1, '.de': 1, 'dec': 1, 'eco': 1, '"")}': 1, "")}'"": 1, ""}')"": 1, ""')\n"": 1}"
Tushar Nankani,continuous.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 2, 'itertools': 1, 'numpy': 1, 'as': 1, 'np': 1, 'def': 8, 'bipolar_activation(net,': 1, 'lambdaa': 2, '=': 35, '1):': 1, 'return': 8, '(2/(1+np.exp(-lambdaa*net)))': 1, '-': 2, '1': 6, 'unipolar_activation(net,': 1, '0.3):': 1, '(1/(1+np.exp(-lambdaa*net)))': 1, 'bipolar_fdash(y_pred):': 1, '(1/2)*(1-(y_pred**2))': 1, 'unipolar_fdash(y_pred):': 1, '(y_pred*(1-y_pred))': 1, 'predict(x,': 1, 'weights,': 3, 'type):': 3, 'net': 3, 'np.dot(x,weights)': 1, 'if': 5, 'type': 5, '==': 7, ""'unipolar':"": 3, 'unipolar_activation(net)': 1, 'elif': 2, ""'bipolar':"": 2, 'bipolar_activation(net)': 1, 'calculate_r(yi,': 2, 'y_pred,': 2, 'r': 2, 'yi': 2, 'y_pred': 4, 'r*unipolar_fdash(y_pred)': 1, 'r*bipolar_fdash(y_pred)': 1, 'train(x,y,weights,': 1, 'type,': 1, 'epochs': 1, '500,': 1, 'c': 1, '0.5):': 1, 'for': 6, 'epoch': 2, 'in': 6, 'range(epochs):': 1, 'loss': 3, '0': 4, 'xi,': 1, 'zip(x,y):': 1, 'predict(xi,': 1, 'type)': 3, '+=': 2, 'abs(r)': 1, 'delta_w': 2, 'c*r*xi': 1, 'weights': 6, '(epoch+1)%50': 1, ':': 8, ""print(f'weights"": 1, 'after': 1, '{epoch+1}': 1, ""',weights)"": 1, '0:': 1, 'break': 1, ""print('learned"": 1, ""',"": 3, 'weights)': 1, 'weights.reshape((n': 1, '+': 2, '1,': 1, '1))': 1, 'test(x,y,': 1, 'test(x,': 1, 'y,': 9, 'learned_weights,': 1, 'nets': 1, 'np.dot(x,learned_weights).flatten()': 1, ""print('actual"": 1, 'values': 3, ""',y)"": 1, 'np.array([unipolar_activation(net)': 1, 'nets])': 2, ""print('predicted"": 2, 'y_pred)': 2, 'else:': 1, 'np.array([bipolar_activation(net)': 1, 'n': 1, ""int(input('enter"": 1, 'number': 1, 'of': 1, 'bits': 1, ""'))"": 1, 'x': 1, 'np.array([list(i)': 1, '[1]': 1, 'i': 1, 'itertools.product([0,1],': 1, 'repeat': 1, 'n)])': 1, ""input(f'enter"": 1, 'initial': 1, '{n}': 1, 'and': 5, 'bias': 1, ""')"": 1, 'np.array([float(weight)': 1, 'weight': 1, 'weights.split()],': 1, ""dtype='longdouble')"": 1, 'print()': 17, '#': 8, '1)': 1, 'gate': 16, 'unipolar': 4, ""print('----"": 8, 'using': 8, 'perceptron': 8, ""----')"": 8, 'y': 8, 'np.array([0]*(2**n))': 2, 'y[-1]': 4, 'train(x,': 8, 'weights.copy(),': 8, ""'unipolar')"": 4, '2)': 1, 'or': 4, 'np.array([1]*(2**n))': 4, 'y[0]': 4, '3)': 1, 'nor': 4, '4)': 1, 'nand': 4, '5)': 1, 'bipolar': 4, 'np.array([-1]*(2**n))': 2, ""'bipolar')"": 4, '6)': 1, '-1': 2, '7)': 1, '8)': 1}","{'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't i': 4, ' it': 2, 'ite': 2, 'ter': 5, 'ert': 2, 'rto': 2, 'too': 2, 'ool': 2, 'ols': 2, 'ls\n': 1, 's\ni': 1, '\nim': 1, 't n': 1, ' nu': 2, 'num': 2, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 1, 'as ': 2, 's n': 1, ' np': 15, 'np\n': 1, 'p\n\n': 1, '\n\n\n': 8, '\n\nd': 8, '\nde': 8, 'def': 8, 'ef ': 8, 'f b': 3, ' bi': 5, 'bip': 11, 'ipo': 23, 'pol': 23, 'ola': 23, 'lar': 23, 'ar_': 10, 'r_a': 6, '_ac': 6, 'act': 6, 'cti': 6, 'tiv': 6, 'iva': 6, 'vat': 6, 'ati': 6, 'tio': 6, 'ion': 6, 'on(': 6, 'n(n': 6, '(ne': 6, 'net': 14, 'et,': 2, 't, ': 2, ', l': 3, ' la': 2, 'lam': 4, 'amb': 4, 'mbd': 4, 'bda': 4, 'daa': 4, 'aa ': 2, 'a =': 2, ' = ': 35, '= 1': 5, ' 1)': 3, '1):': 1, '):\n': 10, ':\n ': 18, '\n  ': 37, '   ': 178, '  r': 10, ' re': 9, 'ret': 8, 'etu': 8, 'tur': 8, 'urn': 8, 'rn ': 8, 'n (': 4, ' (2': 1, '(2/': 1, '2/(': 1, '/(1': 2, '(1+': 2, '1+n': 2, '+np': 2, 'np.': 16, 'p.e': 2, '.ex': 2, 'exp': 2, 'xp(': 2, 'p(-': 2, '(-l': 2, '-la': 2, 'aa*': 2, 'a*n': 2, '*ne': 2, 'et)': 6, 't))': 2, ')))': 2, ')) ': 1, ') -': 1, ' - ': 2, '- 1': 1, ' 1\n': 5, '1\n\n': 1, 'f u': 2, ' un': 3, 'uni': 12, 'nip': 12, '= 0': 7, ' 0.': 2, '0.3': 1, '.3)': 1, '3):': 1, ' (1': 2, '(1/': 2, '1/(': 1, '))\n': 13, ')\n\n': 16, 'r_f': 4, '_fd': 4, 'fda': 4, 'das': 4, 'ash': 4, 'sh(': 4, 'h(y': 4, '(y_': 6, 'y_p': 15, '_pr': 15, 'pre': 17, 'red': 19, 'ed)': 7, 'd):': 2, '1/2': 1, '/2)': 1, '2)*': 1, ')*(': 1, '*(1': 2, '(1-': 2, '1-(': 1, '-(y': 1, 'ed*': 2, 'd**': 1, '**2': 1, '*2)': 1, '2))': 1, ' (y': 1, 'd*(': 1, '1-y': 1, '-y_': 1, 'd))': 1, 'f p': 1, ' pr': 7, 'edi': 4, 'dic': 4, 'ict': 4, 'ct(': 3, 't(X': 6, '(X,': 15, 'X, ': 10, ', w': 12, ' we': 19, 'wei': 27, 'eig': 28, 'igh': 28, 'ght': 28, 'hts': 26, 'ts,': 5, 's, ': 5, ', t': 7, ' ty': 12, 'typ': 13, 'ype': 13, 'pe)': 6, 'e):': 3, '  n': 2, ' ne': 6, 'et ': 3, 't =': 2, '= n': 15, 'p.d': 2, '.do': 2, 'dot': 2, 'ot(': 2, 'X,w': 1, ',we': 3, 'ts)': 4, 's)\n': 3, ')\n ': 14, '  i': 5, ' if': 5, 'if ': 7, 'f t': 7, 'pe ': 5, 'e =': 5, ' ==': 7, '== ': 7, ""= '"": 5, "" 'u"": 7, ""'un"": 7, ""ar'"": 13, ""r':"": 5, ""':\n"": 5, 'n u': 1, 't)\n': 2, '  e': 3, ' el': 3, 'eli': 2, 'lif': 2, "" 'b"": 6, ""'bi"": 6, 'n b': 1, 'f c': 1, ' ca': 2, 'cal': 2, 'alc': 2, 'lcu': 2, 'cul': 2, 'ula': 2, 'lat': 3, 'ate': 2, 'te_': 2, 'e_r': 2, '_r(': 2, 'r(y': 2, '(yi': 2, 'yi,': 2, 'i, ': 4, ', y': 14, ' y_': 8, 'ed,': 2, 'd, ': 2, ' r ': 2, 'r =': 2, '= y': 1, ' yi': 2, 'yi ': 2, 'i -': 1, '- y': 1, 'ed\n': 1, 'd\n ': 1, 'n r': 3, ' r*': 2, 'r*u': 1, '*un': 1, 'd)\n': 4, 'r*b': 1, '*bi': 1, ' tr': 1, 'tra': 9, 'rai': 9, 'ain': 9, 'in(': 9, 'n(X': 9, 'X,y': 3, ',y,': 2, 'y,w': 1, 'pe,': 1, 'e, ': 1, ', e': 1, ' ep': 3, 'epo': 6, 'poc': 6, 'och': 6, 'chs': 2, 'hs ': 1, 's =': 7, '= 5': 1, ' 50': 1, '500': 1, '00,': 1, '0, ': 1, ', c': 1, ' c ': 1, 'c =': 1, '0.5': 1, '.5)': 1, '5):': 1, '  f': 2, ' fo': 6, 'for': 6, 'or ': 6, 'r e': 2, 'ch ': 2, 'h i': 1, ' in': 9, 'in ': 6, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(e': 1, '(ep': 2, 'hs)': 1, 's):': 1, '  l': 2, ' lo': 3, 'los': 3, 'oss': 3, 'ss ': 3, ' 0\n': 3, '0\n ': 1, 'r X': 1, ' Xi': 1, 'Xi,': 2, 'i i': 2, 'n z': 1, ' zi': 1, 'zip': 1, 'ip(': 1, 'p(X': 1, ',y)': 2, 'y):': 1, '  y': 3, 'ed ': 6, 'd =': 3, '= p': 1, '(Xi': 1, 'e)\n': 3, '= c': 2, 's +': 2, ' +=': 2, '+= ': 2, '= a': 1, ' ab': 1, 'abs': 1, 'bs(': 1, 's(r': 1, '(r)': 1, 'r)\n': 1, '  d': 1, ' de': 2, 'del': 2, 'elt': 2, 'lta': 2, 'ta_': 2, 'a_w': 2, '_w ': 1, 'w =': 1, ' c*': 1, 'c*r': 1, '*r*': 1, 'r*X': 1, '*Xi': 1, 'Xi\n': 1, 'i\n ': 1, '  w': 2, 'ts ': 9, '= d': 1, '_w\n': 1, 'w\n\n': 1, '\n\n ': 2, 'f (': 1, ' (e': 1, 'ch+': 2, 'h+1': 2, '+1)': 1, '1)%': 1, ')%5': 1, '%50': 1, '50 ': 1, '0 =': 1, ' 0 ': 1, '0 :': 1, ' :\n': 1, '  p': 5, 'pri': 30, 'rin': 30, 'int': 31, 'nt(': 31, 't(f': 2, ""(f'"": 2, ""f'W"": 1, ""'We"": 1, 'Wei': 1, 's a': 2, ' af': 1, 'aft': 1, 'fte': 1, 'er ': 4, 'h {': 1, ' {e': 1, '{ep': 1, '+1}': 1, '1} ': 1, '} :': 1, ' : ': 7, "": '"": 7, "" ',"": 5, ""',w"": 1, 'f l': 1, ' 0:': 1, '0:\n': 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n\n': 1, ""t('"": 13, ""('L"": 1, ""'Le"": 1, 'Lea': 1, 'ear': 3, 'arn': 3, 'rne': 3, 'ned': 3, 'd w': 1, 's :': 6, ""', "": 3, '= w': 1, 'ts.': 10, 's.r': 1, '.re': 1, 'res': 1, 'esh': 1, 'sha': 1, 'hap': 1, 'ape': 1, 'pe(': 1, 'e((': 1, '((n': 1, '(n ': 1, 'n +': 1, ' + ': 2, '+ 1': 1, ' 1,': 1, '1, ': 1, ', 1': 1, '1))': 1, '  t': 1, ' te': 2, 'tes': 2, 'est': 2, 'st(': 3, 'y, ': 10, ' y,': 9, ' le': 1, 'lea': 2, 'ed_': 2, 'd_w': 2, '_we': 2, 'ets': 3, 'X,l': 1, ',le': 1, 's).': 1, ').f': 1, '.fl': 1, 'fla': 1, 'att': 1, 'tte': 1, 'ten': 1, 'en(': 1, 'n()': 1, '()\n': 18, ""('A"": 1, ""'Ac"": 1, 'Act': 1, 'ctu': 1, 'tua': 1, 'ual': 1, 'al ': 2, 'l V': 1, ' Va': 3, 'Val': 3, 'alu': 3, 'lue': 3, 'ues': 3, 'es ': 3, ""',y"": 1, 'y)\n': 1, 'p.a': 12, '.ar': 12, 'arr': 12, 'rra': 12, 'ray': 12, 'ay(': 12, 'y([': 12, '([u': 1, '[un': 1, 't) ': 3, ') f': 3, 'r n': 3, 'n n': 2, 'ts]': 2, 's])': 2, '])\n': 3, ""('P"": 2, ""'Pr"": 2, 'Pre': 2, 'cte': 2, 'ted': 2, 'd V': 2, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, '([b': 1, '[bi': 1, '\n\nn': 1, '\nn ': 1, 'n =': 1, '= i': 2, 't(i': 2, '(in': 1, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, ""('E"": 1, ""'En"": 2, 'Ent': 2, 'nte': 2, 'umb': 1, 'mbe': 1, 'ber': 1, 'r o': 1, ' of': 1, 'of ': 1, 'bit': 1, 'its': 1, "" ')"": 2, ""'))"": 1, ')\nX': 1, '\nX ': 1, 'X =': 1, '([l': 1, '[li': 1, 'lis': 1, 'ist': 1, '(i)': 1, 'i) ': 1, ') +': 1, '+ [': 1, ' [1': 1, '[1]': 5, '1] ': 5, '] f': 1, 'r i': 2, ' i ': 1, 'n i': 1, 'ls.': 1, 's.p': 1, '.pr': 1, 'pro': 1, 'rod': 1, 'odu': 1, 'duc': 1, 'uct': 1, 't([': 1, '([0': 3, '[0,': 1, '0,1': 1, ',1]': 1, '1],': 1, '], ': 2, ', r': 1, 'rep': 1, 'epe': 1, 'pea': 1, 'eat': 1, 'at ': 1, ' n)': 1, 'n)]': 1, ')])': 1, '\n\nw': 1, '\nwe': 2, ""f'E"": 1, 'ini': 1, 'nit': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'l {': 1, ' {n': 1, '{n}': 1, 'n} ': 1, '} w': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd 1': 1, ' 1 ': 1, '1 b': 1, 'bia': 1, 'ias': 1, ""')\n"": 18, ')\nw': 1, '([f': 1, '[fl': 1, 'flo': 1, 'loa': 1, 'oat': 1, 'at(': 1, 't(w': 1, '(we': 1, 'ht)': 1, 'r w': 1, 'ht ': 1, 'n w': 1, 's.s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, 't()': 18, '()]': 1, ')],': 1, ', d': 1, ' dt': 1, 'dty': 1, 'pe=': 1, ""e='"": 1, ""='l"": 1, ""'lo"": 1, 'lon': 1, 'ong': 1, 'ngd': 1, 'gdo': 1, 'dou': 1, 'oub': 1, 'ubl': 1, 'ble': 1, ""le'"": 1, ""e')"": 1, ')\np': 17, '\npr': 25, '\n\n#': 8, '\n# ': 8, '# 1': 1, '1) ': 1, ') A': 2, ' AN': 4, 'AND': 8, 'ND ': 8, 'D G': 8, ' GA': 16, 'GAT': 16, 'ATE': 16, 'TE ': 16, 'E U': 12, ' UN': 4, 'UNI': 4, 'NIP': 4, 'IPO': 8, 'POL': 8, 'OLA': 8, 'LAR': 8, 'AR\n': 8, 'R\np': 8, ""('-"": 8, ""'--"": 8, '---': 32, '-- ': 8, '- A': 2, ' US': 8, 'USI': 8, 'SIN': 8, 'ING': 8, 'NG ': 8, 'G P': 8, ' PE': 8, 'PER': 8, 'ERC': 8, 'RCE': 8, 'CEP': 8, 'EPT': 8, 'PTR': 8, 'TRO': 8, 'RON': 8, 'ON ': 8, 'N -': 8, ' --': 8, ""--'"": 8, ""-')"": 8, ')\ny': 16, '\ny ': 8, 'y =': 8, '[0]': 6, '0]*': 2, ']*(': 8, '*(2': 8, '(2*': 8, '2**': 8, '**n': 8, '*n)': 8, 'n))': 8, '\ny[': 8, 'y[-': 4, '[-1': 6, '-1]': 6, '] =': 8, '1\nt': 6, '\ntr': 8, 's.c': 8, '.co': 8, 'cop': 8, 'opy': 8, 'py(': 8, 'y()': 8, '(),': 8, '), ': 8, "", '"": 8, ""r')"": 8, '# 2': 1, ' 2)': 1, '2) ': 1, ') O': 2, ' OR': 4, 'OR ': 8, 'R G': 8, '- O': 2, '([1': 4, '1]*': 6, 'y[0': 4, '0] ': 4, '0\nt': 2, '# 3': 1, ' 3)': 1, '3) ': 1, ') N': 4, ' NO': 4, 'NOR': 4, '- N': 4, '# 4': 1, ' 4)': 1, '4) ': 1, ' NA': 4, 'NAN': 4, '# 5': 1, ' 5)': 1, '5) ': 1, 'E B': 4, ' BI': 4, 'BIP': 4, '([-': 2, '# 6': 1, ' 6)': 1, '6) ': 1, '= -': 2, ' -1': 2, '-1\n': 2, '# 7': 1, ' 7)': 1, '7) ': 1, '# 8': 1, ' 8)': 1, '8) ': 1}"
Tushar Nankani,discrete.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 2, 'itertools': 1, 'numpy': 1, 'as': 1, 'np': 1, 'def': 5, 'bipolar_activation(net):': 1, 'return': 4, '1': 7, 'if': 7, '(net': 2, '>=': 3, '0)': 2, 'else': 4, '-1': 4, 'unipolar_activation(net):': 1, '0': 6, 'predict(x,': 1, 'weights,': 3, 'type):': 2, 'net': 5, '=': 32, 'np.dot(x,weights)': 1, 'type': 3, '==': 4, ""'unipolar':"": 2, 'unipolar_activation(net)': 1, 'elif': 1, ""'bipolar':"": 1, 'bipolar_activation(net)': 1, 'train(x,y,weights,': 1, 'type,': 1, 'epochs': 1, '500,': 1, 'c': 1, '0.5):': 1, 'for': 6, 'epoch': 2, 'in': 6, 'range(epochs):': 1, 'loss': 3, 'xi,': 1, 'yi': 2, 'zip(x,y):': 1, 'y_pred': 4, 'predict(xi,': 1, 'type)': 2, 'r': 1, '-': 1, '+=': 2, 'abs(r)': 1, 'delta_w': 2, 'c*r*xi': 1, 'weights': 6, ""print(f'weights"": 1, 'after': 1, '{epoch}': 1, ':': 7, ""',weights)"": 1, '0:': 1, 'break': 1, ""print('learned"": 1, ""',"": 3, 'weights)': 1, 'weights.reshape((n': 1, '+': 2, '1,': 1, '1))': 1, 'test(x,y,': 1, 'test(x,': 1, 'y,': 9, 'learned_weights,': 1, 'nets': 1, 'np.dot(x,learned_weights).flatten()': 1, ""print('actual"": 1, 'values': 3, ""',y)"": 1, 'np.array([1': 2, '>=0': 1, 'nets])': 2, ""print('predicted"": 2, 'y_pred)': 2, 'else:': 1, 'n': 1, ""int(input('enter"": 1, 'number': 1, 'of': 1, 'bits': 1, ""'))"": 1, 'x': 1, 'np.array([list(i)': 1, '[1]': 1, 'i': 1, 'itertools.product([0,1],': 1, 'repeat': 1, 'n)])': 1, ""input(f'enter"": 1, 'initial': 1, '{n}': 1, 'and': 5, 'bias': 1, ""')"": 1, 'np.array([float(weight)': 1, 'weight': 1, 'weights.split()],': 1, ""dtype='longdouble')"": 1, 'print()': 17, '#': 8, '1)': 1, 'gate': 16, 'unipolar': 4, ""print('----"": 8, 'using': 8, 'perceptron': 8, ""----')"": 8, 'y': 8, 'np.array([0]*(2**n))': 2, 'y[-1]': 4, 'train(x,': 8, 'weights.copy(),': 8, ""'unipolar')"": 4, '2)': 1, 'or': 4, 'np.array([1]*(2**n))': 4, 'y[0]': 4, '3)': 1, 'nor': 4, '4)': 1, 'nand': 4, '5)': 1, 'bipolar': 4, 'np.array([-1]*(2**n))': 2, ""'bipolar')"": 4, '6)': 1, '7)': 1, '8)': 1}","{'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't i': 4, ' it': 2, 'ite': 2, 'ter': 5, 'ert': 2, 'rto': 2, 'too': 2, 'ool': 2, 'ols': 2, 'ls\n': 1, 's\ni': 1, '\nim': 1, 't n': 1, ' nu': 2, 'num': 2, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 1, 'as ': 2, 's n': 1, ' np': 15, 'np\n': 1, 'p\n\n': 1, '\n\n\n': 8, '\n\nd': 5, '\nde': 5, 'def': 5, 'ef ': 5, 'f b': 2, ' bi': 4, 'bip': 7, 'ipo': 15, 'pol': 15, 'ola': 15, 'lar': 15, 'ar_': 4, 'r_a': 4, '_ac': 4, 'act': 4, 'cti': 4, 'tiv': 4, 'iva': 4, 'vat': 4, 'ati': 4, 'tio': 4, 'ion': 4, 'on(': 4, 'n(n': 4, '(ne': 6, 'net': 14, 'et)': 4, 't):': 2, '):\n': 7, ':\n ': 12, '\n  ': 29, '   ': 146, '  r': 5, ' re': 5, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 4, 'n 1': 2, ' 1 ': 3, '1 i': 4, ' if': 7, 'if ': 8, 'f (': 2, ' (n': 2, 'et ': 7, 't >': 4, ' >=': 4, '>= ': 3, '= 0': 8, ' 0)': 2, '0) ': 2, ') e': 2, ' el': 6, 'els': 5, 'lse': 5, 'se ': 4, 'e -': 2, ' -1': 4, '-1\n': 3, '1\n\n': 1, 'f u': 1, ' un': 2, 'uni': 8, 'nip': 8, 'e 0': 2, ' 0\n': 4, '0\n\n': 1, 'f p': 1, ' pr': 7, 'pre': 8, 'red': 10, 'edi': 4, 'dic': 4, 'ict': 4, 'ct(': 3, 't(X': 6, '(X,': 15, 'X, ': 10, ', w': 12, ' we': 19, 'wei': 27, 'eig': 28, 'igh': 28, 'ght': 28, 'hts': 26, 'ts,': 5, 's, ': 5, ', t': 5, ' ty': 8, 'typ': 9, 'ype': 9, 'pe)': 4, 'e):': 2, '  n': 2, ' ne': 8, 't =': 2, ' = ': 32, '= n': 15, 'np.': 14, 'p.d': 2, '.do': 2, 'dot': 2, 'ot(': 2, 'X,w': 1, ',we': 3, 'ts)': 4, 's)\n': 3, ')\n ': 12, '  i': 3, 'f t': 5, 'pe ': 3, 'e =': 3, ' ==': 4, '== ': 4, ""= '"": 3, "" 'u"": 6, ""'un"": 6, ""ar'"": 11, ""r':"": 3, ""':\n"": 3, 'n u': 1, 't)\n': 2, '  e': 2, 'eli': 1, 'lif': 1, "" 'b"": 5, ""'bi"": 5, 'n b': 1, ')\n\n': 12, ' tr': 1, 'tra': 9, 'rai': 9, 'ain': 9, 'in(': 9, 'n(X': 9, 'X,y': 3, ',y,': 2, 'y,w': 1, 'pe,': 1, 'e, ': 1, ', e': 1, ' ep': 3, 'epo': 5, 'poc': 5, 'och': 5, 'chs': 2, 'hs ': 1, 's =': 7, '= 5': 1, ' 50': 1, '500': 1, '00,': 1, '0, ': 1, ', c': 1, ' c ': 1, 'c =': 1, ' 0.': 1, '0.5': 1, '.5)': 1, '5):': 1, '  f': 2, ' fo': 6, 'for': 6, 'or ': 6, 'r e': 2, 'ch ': 2, 'h i': 1, ' in': 9, 'in ': 6, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(e': 1, '(ep': 1, 'hs)': 1, 's):': 1, '  l': 2, ' lo': 3, 'los': 3, 'oss': 3, 'ss ': 3, '0\n ': 1, 'r X': 1, ' Xi': 1, 'Xi,': 2, 'i, ': 2, ', y': 12, ' yi': 2, 'yi ': 2, 'i i': 2, 'n z': 1, ' zi': 1, 'zip': 1, 'ip(': 1, 'p(X': 1, ',y)': 2, 'y):': 1, '  y': 3, ' y_': 6, 'y_p': 6, '_pr': 6, 'ed ': 6, 'd =': 3, '= p': 1, '(Xi': 1, 'e)\n': 2, ' r ': 1, 'r =': 1, '= y': 1, 'i -': 1, ' - ': 1, '- y': 1, 'ed\n': 1, 'd\n ': 1, 's +': 2, ' +=': 2, '+= ': 2, '= a': 1, ' ab': 1, 'abs': 1, 'bs(': 1, 's(r': 1, '(r)': 1, 'r)\n': 1, '  d': 1, ' de': 2, 'del': 2, 'elt': 2, 'lta': 2, 'ta_': 2, 'a_w': 2, '_w ': 1, 'w =': 1, '= c': 1, ' c*': 1, 'c*r': 1, '*r*': 1, 'r*X': 1, '*Xi': 1, 'Xi\n': 1, 'i\n ': 1, '  w': 2, 'ts ': 9, '= d': 1, '_w\n': 1, 'w\n\n': 1, '\n\n ': 2, '  p': 5, 'pri': 30, 'rin': 30, 'int': 31, 'nt(': 31, 't(f': 2, ""(f'"": 2, ""f'W"": 1, ""'We"": 1, 'Wei': 1, 's a': 2, ' af': 1, 'aft': 1, 'fte': 1, 'er ': 4, 'h {': 1, ' {e': 1, '{ep': 1, 'ch}': 1, 'h} ': 1, '} :': 1, ' : ': 7, "": '"": 7, "" ',"": 5, ""',w"": 1, 'f l': 1, ' 0:': 1, '0:\n': 1, '  b': 1, ' br': 1, 'bre': 1, 'rea': 1, 'eak': 1, 'ak\n': 1, 'k\n\n': 1, ""t('"": 13, ""('L"": 1, ""'Le"": 1, 'Lea': 1, 'ear': 3, 'arn': 3, 'rne': 3, 'ned': 3, 'd w': 1, 's :': 6, ""', "": 3, '= w': 1, 'ts.': 10, 's.r': 1, '.re': 1, 'res': 1, 'esh': 1, 'sha': 1, 'hap': 1, 'ape': 1, 'pe(': 1, 'e((': 1, '((n': 1, '(n ': 1, 'n +': 1, ' + ': 2, '+ 1': 1, ' 1,': 1, '1, ': 1, ', 1': 1, ' 1)': 2, '1))': 1, '))\n': 10, '  t': 1, ' te': 2, 'tes': 2, 'est': 2, 'st(': 3, 'y, ': 10, ' y,': 9, ', l': 1, ' le': 1, 'lea': 2, 'ed_': 2, 'd_w': 2, '_we': 2, 'ets': 3, 'X,l': 1, ',le': 1, 's).': 1, ').f': 1, '.fl': 1, 'fla': 1, 'lat': 1, 'att': 1, 'tte': 1, 'ten': 1, 'en(': 1, 'n()': 1, '()\n': 18, ""('A"": 1, ""'Ac"": 1, 'Act': 1, 'ctu': 1, 'tua': 1, 'ual': 1, 'al ': 2, 'l V': 1, ' Va': 3, 'Val': 3, 'alu': 3, 'lue': 3, 'ues': 3, 'es ': 3, ""',y"": 1, 'y)\n': 1, 'p.a': 12, '.ar': 12, 'arr': 12, 'rra': 12, 'ray': 12, 'ay(': 12, 'y([': 12, '([1': 6, '[1 ': 2, 'f n': 2, '>=0': 1, '=0 ': 1, '0 e': 2, ' 0 ': 2, '0 f': 1, 'r n': 3, 'n n': 2, 'ts]': 2, 's])': 2, '])\n': 3, ""('P"": 2, ""'Pr"": 2, 'Pre': 2, 'cte': 2, 'ted': 2, 'd V': 2, 'ed)': 2, 'd)\n': 2, 'se:': 1, 'e:\n': 1, '-1 ': 1, '1 f': 1, '\n\nn': 1, '\nn ': 1, 'n =': 1, '= i': 2, 't(i': 2, '(in': 1, 'inp': 2, 'npu': 2, 'put': 2, 'ut(': 2, ""('E"": 1, ""'En"": 2, 'Ent': 2, 'nte': 2, 'umb': 1, 'mbe': 1, 'ber': 1, 'r o': 1, ' of': 1, 'of ': 1, 'bit': 1, 'its': 1, "" ')"": 2, ""'))"": 1, ')\nX': 1, '\nX ': 1, 'X =': 1, '([l': 1, '[li': 1, 'lis': 1, 'ist': 1, '(i)': 1, 'i) ': 1, ') +': 1, '+ [': 1, ' [1': 1, '[1]': 5, '1] ': 5, '] f': 1, 'r i': 2, ' i ': 1, 'n i': 1, 'ls.': 1, 's.p': 1, '.pr': 1, 'pro': 1, 'rod': 1, 'odu': 1, 'duc': 1, 'uct': 1, 't([': 1, '([0': 3, '[0,': 1, '0,1': 1, ',1]': 1, '1],': 1, '], ': 2, ', r': 1, 'rep': 1, 'epe': 1, 'pea': 1, 'eat': 1, 'at ': 1, ' n)': 1, 'n)]': 1, ')])': 1, '\n\nw': 1, '\nwe': 2, ""f'E"": 1, 'ini': 1, 'nit': 1, 'iti': 1, 'tia': 1, 'ial': 1, 'l {': 1, ' {n': 1, '{n}': 1, 'n} ': 1, '} w': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd 1': 1, '1 b': 1, 'bia': 1, 'ias': 1, ""')\n"": 18, ')\nw': 1, '([f': 1, '[fl': 1, 'flo': 1, 'loa': 1, 'oat': 1, 'at(': 1, 't(w': 1, '(we': 1, 'ht)': 1, 't) ': 1, ') f': 1, 'r w': 1, 'ht ': 1, 'n w': 1, 's.s': 1, '.sp': 1, 'spl': 1, 'pli': 1, 'lit': 1, 'it(': 1, 't()': 18, '()]': 1, ')],': 1, ', d': 1, ' dt': 1, 'dty': 1, 'pe=': 1, ""e='"": 1, ""='l"": 1, ""'lo"": 1, 'lon': 1, 'ong': 1, 'ngd': 1, 'gdo': 1, 'dou': 1, 'oub': 1, 'ubl': 1, 'ble': 1, ""le'"": 1, ""e')"": 1, ')\np': 17, '\npr': 25, '\n\n#': 8, '\n# ': 8, '# 1': 1, '1) ': 1, ') A': 2, ' AN': 4, 'AND': 8, 'ND ': 8, 'D G': 8, ' GA': 16, 'GAT': 16, 'ATE': 16, 'TE ': 16, 'E U': 12, ' UN': 4, 'UNI': 4, 'NIP': 4, 'IPO': 8, 'POL': 8, 'OLA': 8, 'LAR': 8, 'AR\n': 8, 'R\np': 8, ""('-"": 8, ""'--"": 8, '---': 32, '-- ': 8, '- A': 2, ' US': 8, 'USI': 8, 'SIN': 8, 'ING': 8, 'NG ': 8, 'G P': 8, ' PE': 8, 'PER': 8, 'ERC': 8, 'RCE': 8, 'CEP': 8, 'EPT': 8, 'PTR': 8, 'TRO': 8, 'RON': 8, 'ON ': 8, 'N -': 8, ' --': 8, ""--'"": 8, ""-')"": 8, ')\ny': 16, '\ny ': 8, 'y =': 8, '[0]': 6, '0]*': 2, ']*(': 8, '*(2': 8, '(2*': 8, '2**': 8, '**n': 8, '*n)': 8, 'n))': 8, '\ny[': 8, 'y[-': 4, '[-1': 6, '-1]': 6, '] =': 8, '= 1': 4, ' 1\n': 4, '1\nt': 6, '\ntr': 8, 's.c': 8, '.co': 8, 'cop': 8, 'opy': 8, 'py(': 8, 'y()': 8, '(),': 8, '), ': 8, "", '"": 8, ""r')"": 8, '# 2': 1, ' 2)': 1, '2) ': 1, ') O': 2, ' OR': 4, 'OR ': 8, 'R G': 8, '- O': 2, '1]*': 6, 'y[0': 4, '0] ': 4, '0\nt': 2, '# 3': 1, ' 3)': 1, '3) ': 1, ') N': 4, ' NO': 4, 'NOR': 4, '- N': 4, '# 4': 1, ' 4)': 1, '4) ': 1, ' NA': 4, 'NAN': 4, '# 5': 1, ' 5)': 1, '5) ': 1, 'E B': 4, ' BI': 4, 'BIP': 4, '([-': 2, '# 6': 1, ' 6)': 1, '6) ': 1, '= -': 2, '# 7': 1, ' 7)': 1, '7) ': 1, '# 8': 1, ' 8)': 1, '8) ': 1}"
Tushar Nankani,main_1.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 2, 'itertools': 1, 'numpy': 1, 'as': 1, 'np': 1, 'def': 1, 'predict(x,': 1, 'y,': 1, 'weights,': 1, 'threshold):': 1, 'net': 6, '=': 24, 'np.dot(x,weights)': 1, 'y_pred': 1, '(net': 1, '>=': 1, 'threshold).astype(int).flatten()': 1, ""print('net"": 1, ':': 32, ""',"": 2, 'net.flatten())': 1, ""print('weights"": 1, ""',weights.flatten())"": 1, ""print('threshold"": 1, ""',threshold)"": 1, ""print('actual"": 1, 'values': 12, 'y)': 1, ""print('predicted"": 1, ""',y_pred)"": 1, '#': 5, '1)': 1, 'not': 3, 'gate': 15, 'x': 2, 'np.array([[0],': 1, '[1]])': 1, 'y': 5, 'np.array([1,': 1, '0])': 1, 'w': 5, 'np.array([-1]).reshape((1,1))': 1, 't': 5, '0': 33, ""print('\\n----"": 1, ""----')"": 5, 'predict(x,y,w,t)': 5, 'n': 2, ""int(input('\\nenter"": 1, 'number': 2, 'of': 2, 'bits': 2, ""'))"": 1, 'np.array([list(i)': 1, 'for': 1, 'i': 1, 'in': 1, 'itertools.product([0,': 1, '1],': 1, 'repeat=n)])': 1, '2)': 1, 'and': 3, 'np.array([0]*(2**n))': 2, 'y[-1]': 2, '1': 36, 'np.array([1]*(n)).reshape((n,1))': 2, ""print('\\n\\n----"": 4, '3)': 1, 'or': 3, 'np.array([1]*(2**n))': 2, 'y[0]': 2, '4)': 1, 'nand': 3, 'np.array([-1]*(n)).reshape((n,1))': 2, '-n+1': 1, '5)': 1, 'nor': 3, ""'''"": 2, '----': 10, '[': 3, '-1]': 3, 'weights': 5, '[-1]': 1, 'threshold': 5, 'actual': 5, '[1': 8, '0]': 6, 'predicted': 5, 'enter': 1, '3': 2, '[0': 6, '2': 6, '3]': 2, '1]': 6, '-1': 8, '-2': 7, '-3]': 2, '[-1': 2}","{'imp': 2, 'mpo': 2, 'por': 2, 'ort': 2, 'rt ': 2, 't i': 1, ' it': 2, 'ite': 2, 'ter': 4, 'ert': 2, 'rto': 2, 'too': 2, 'ool': 2, 'ols': 2, 'ls\n': 1, 's\ni': 1, '\nim': 1, 't n': 1, ' nu': 3, 'num': 3, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 1, 'as ': 1, 's n': 1, ' np': 14, 'np\n': 1, 'p\n\n': 1, '\n\n\n': 10, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f p': 1, ' pr': 6, 'pre': 8, 'red': 14, 'edi': 12, 'dic': 12, 'ict': 12, 'ct(': 7, 't(X': 7, '(X,': 7, 'X, ': 1, ', y': 2, ' y,': 1, 'y, ': 1, ', w': 1, ' we': 1, 'wei': 3, 'eig': 9, 'igh': 9, 'ght': 9, 'hts': 9, 'ts,': 1, 's, ': 1, ', t': 1, ' th': 2, 'thr': 3, 'hre': 9, 'res': 14, 'esh': 14, 'sho': 9, 'hol': 9, 'old': 9, 'ld)': 3, 'd):': 1, '):\n': 1, ':\n ': 1, '\n  ': 7, '   ': 14, '  n': 1, ' ne': 2, 'net': 3, 'et ': 8, 't =': 1, ' = ': 24, '= n': 14, 'np.': 13, 'p.d': 1, '.do': 1, 'dot': 1, 'ot(': 1, 'X,w': 1, ',we': 2, 'ts)': 1, 's)\n': 1, ')\n ': 5, '  y': 1, ' y_': 1, 'y_p': 2, '_pr': 2, 'ed ': 7, 'd =': 1, '= (': 1, ' (n': 1, '(ne': 1, 't >': 1, ' >=': 1, '>= ': 1, '= t': 1, 'd).': 1, ').a': 1, '.as': 1, 'ast': 1, 'sty': 1, 'typ': 1, 'ype': 1, 'pe(': 6, 'e(i': 1, '(in': 2, 'int': 12, 'nt)': 1, 't).': 1, ').f': 1, '.fl': 3, 'fla': 3, 'lat': 3, 'att': 3, 'tte': 3, 'ten': 3, 'en(': 3, 'n()': 3, '()\n': 1, ')\n\n': 8, '\n\n ': 1, '  p': 5, 'pri': 10, 'rin': 10, 'nt(': 11, ""t('"": 11, ""('N"": 1, ""'Ne"": 1, 'Net': 6, 't :': 6, ' : ': 32, "": '"": 6, "" ',"": 5, ""', "": 2, ', n': 1, 'et.': 1, 't.f': 1, '())': 2, '))\n': 12, ""('W"": 1, ""'We"": 1, 'Wei': 6, 'ts ': 8, 's :': 20, ""',w"": 1, 'ts.': 1, 's.f': 1, ""('T"": 1, ""'Th"": 1, 'Thr': 6, 'ld ': 6, 'd :': 6, ""',t"": 1, ',th': 1, 'd)\n': 2, ""('A"": 1, ""'Ac"": 1, 'Act': 6, 'ctu': 6, 'tua': 6, 'ual': 6, 'al ': 6, 'l V': 6, ' Va': 12, 'Val': 12, 'alu': 12, 'lue': 12, 'ues': 12, 'es ': 12, ' y)': 1, 'y)\n': 1, ""('P"": 1, ""'Pr"": 1, 'Pre': 6, 'cte': 6, 'ted': 6, 'd V': 6, ""',y"": 1, ',y_': 1, 'ed)': 1, '\n\n#': 5, '\n# ': 5, '# 1': 1, ' 1)': 1, '1) ': 1, ') N': 3, ' NO': 6, 'NOT': 3, 'OT ': 3, 'T G': 3, ' GA': 15, 'GAT': 15, 'ATE': 15, 'TE\n': 5, 'E\nX': 1, '\nX ': 2, 'X =': 2, 'p.a': 12, '.ar': 12, 'arr': 12, 'rra': 12, 'ray': 12, 'ay(': 12, 'y([': 12, '([[': 1, '[[0': 1, '[0]': 5, '0],': 1, '], ': 2, ', [': 1, ' [1': 9, '[1]': 5, '1]]': 1, ']])': 1, '])\n': 3, ')\ny': 5, '\ny ': 5, 'y =': 5, '([1': 5, '[1,': 1, '1, ': 1, ', 0': 1, ' 0]': 7, '0])': 1, ')\nw': 1, '\nw ': 5, 'w =': 5, '([-': 3, '[-1': 8, '-1]': 9, '1])': 1, ']).': 1, ').r': 5, '.re': 5, 'sha': 5, 'hap': 5, 'ape': 5, 'e((': 5, '((1': 1, '(1,': 1, '1,1': 1, ',1)': 5, '1))': 5, ')\nT': 5, '\nT ': 5, 'T =': 5, '= 0': 4, ' 0\n': 6, '0\np': 2, '\npr': 10, ""('\\"": 6, ""'\\n"": 6, '\\n-': 5, 'n--': 5, '---': 40, '-- ': 10, '- N': 6, 'TE ': 10, 'E -': 10, ' --': 10, ""--'"": 5, ""-')"": 5, ""')\n"": 5, ')\np': 5, 'X,y': 5, ',y,': 5, 'y,w': 5, ',w,': 5, 'w,T': 5, ',T)': 5, 'T)\n': 5, '\n\nn': 1, '\nn ': 1, 'n =': 1, '= i': 1, ' in': 2, 't(i': 2, 'inp': 1, 'npu': 1, 'put': 1, 'ut(': 1, '\\nE': 1, 'nEn': 1, 'Ent': 2, 'nte': 2, 'er ': 4, 'r n': 2, 'umb': 2, 'mbe': 2, 'ber': 2, 'r o': 2, ' of': 2, 'of ': 2, 'f b': 2, ' bi': 2, 'bit': 2, 'its': 2, "" ')"": 1, ""'))"": 1, ')\nX': 1, '([l': 1, '[li': 1, 'lis': 1, 'ist': 1, 'st(': 1, '(i)': 1, 'i) ': 1, ') f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, 'in ': 1, 'n i': 1, 'ls.': 1, 's.p': 1, '.pr': 1, 'pro': 1, 'rod': 1, 'odu': 1, 'duc': 1, 'uct': 1, 't([': 1, '([0': 3, '[0,': 1, '0, ': 1, ', 1': 1, ' 1]': 7, '1],': 1, ', r': 1, ' re': 1, 'rep': 1, 'epe': 1, 'pea': 1, 'eat': 1, 'at=': 1, 't=n': 1, '=n)': 1, 'n)]': 1, ')])': 1, '# 2': 1, ' 2)': 1, '2) ': 1, ') A': 1, ' AN': 3, 'AND': 6, 'ND ': 6, 'D G': 6, 'E\ny': 4, '0]*': 2, ']*(': 8, '*(2': 4, '(2*': 4, '2**': 4, '**n': 4, '*n)': 4, 'n))': 8, '\ny[': 4, 'y[-': 2, '1] ': 2, '] =': 4, '= 1': 3, ' 1\n': 4, '1\nw': 2, '1]*': 6, '*(n': 4, '(n)': 4, ')).': 4, '((n': 4, '(n,': 4, 'n,1': 4, ' n\n': 1, 'n\np': 1, '\\n\\': 4, 'n\\n': 4, '- A': 2, '# 3': 1, ' 3)': 1, '3) ': 1, ') O': 1, ' OR': 3, 'OR ': 6, 'R G': 6, 'y[0': 2, '0] ': 2, '0\nw': 2, '1\np': 2, '- O': 2, '# 4': 1, ' 4)': 1, '4) ': 1, ' NA': 3, 'NAN': 3, '= -': 1, ' -n': 1, '-n+': 1, 'n+1': 1, '+1\n': 1, '# 5': 1, ' 5)': 1, '5) ': 1, 'NOR': 3, ""\n\n'"": 1, ""\n''"": 2, ""'''"": 2, ""''\n"": 1, ""'\n\n"": 1, '\n\n-': 5, '\n--': 5, '--\n': 5, '-\nN': 5, '\nNe': 5, ':  ': 25, '  [': 20, ' [ ': 3, '[ 0': 3, ' 0 ': 27, '0 -': 3, ' -1': 11, '1]\n': 10, ']\nW': 5, '\nWe': 5, ' [-': 3, ']\nT': 5, '\nTh': 5, '  0': 2, '0\nA': 2, '\nAc': 5, '[1 ': 8, '1 0': 6, '0]\n': 6, ']\nP': 5, '\nPr': 5, ']\n\n': 4, '\n\nE': 1, '\nEn': 1, ': 3': 1, ' 3\n': 2, '3\n\n': 1, ' [0': 6, '[0 ': 6, '0 1': 6, ' 1 ': 32, '1 1': 30, '1 2': 4, ' 2 ': 6, '2 1': 2, '2 2': 2, '2 3': 2, ' 3]': 2, '3]\n': 4, '  3': 1, '3\nA': 1, '0 0': 24, '  1': 1, '1\nA': 1, '-1 ': 10, '1 -': 10, ' -2': 7, '-2 ': 6, '2 -': 6, ' -3': 2, '-3]': 2, '  -': 1, '-2\n': 1, '2\nA': 1, ""]\n'"": 1}"
Tushar Nankani,main_2.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 3, 'pandas': 1, 'as': 2, 'pd': 1, 'numpy': 1, 'np': 1, 'from': 1, 'sklearn.model_selection': 1, 'train_test_split': 1, 'def': 6, 'predict(x,': 1, 'weights,': 4, 'lambdaa': 1, '=': 36, '1):': 4, 'net': 1, 'np.dot(x,': 1, 'weights)': 4, 'return': 3, '(1': 3, '/': 1, '+': 7, 'np.exp(-lambdaa': 1, '*': 13, 'net)))': 1, 'calculate_dw(x,': 1, 'y,': 6, 'y_pred):': 2, '((y_pred': 1, '-': 3, 'y)': 2, '(y_pred)': 1, 'y_pred)': 7, 'x)': 1, 'calculate_error(y,': 4, 'np.square(y_pred': 1, 'train_vanilla(x,': 2, 'epochs': 3, '500,': 3, 'lr': 3, '0.001,': 3, 'gamma': 3, '0.9):': 2, 'upd': 9, '0': 11, 'for': 7, 'i': 5, 'in': 7, 'range(epochs):': 3, 'dw': 7, 'error': 9, '(xi,': 3, 'yi)': 3, 'zip(x,': 3, 'y):': 3, 'y_pred': 3, 'predict(xi,': 3, '+=': 6, 'calculate_dw(xi,': 3, 'yi,': 3, '(lr': 3, 'dw)': 3, '(gamma': 3, 'upd)': 3, 'weights': 7, '-=': 3, '/=': 3, '(2': 3, 'len(x))': 3, 'if((i': 3, '1)': 4, '%': 4, '100': 3, '==': 5, 'print(f""weights': 3, 'after': 6, '{i}': 6, 'epochs:': 6, '{weights}': 3, '\\n"")': 6, 'print(f""error': 3, '{error}': 3, 'train_stochastic(x,': 1, 'train_minibatch(x,': 1, '0.9,': 1, 'bs': 2, '32):': 1, 'if': 1, 'or': 1, 'len(x):': 1, 'df': 1, ""pd.read_csv('./bank_note.csv')"": 1, 'df.insert(4,': 1, ""'x0',"": 1, 'x': 1, ""df[['variance',"": 1, ""'skewness',"": 1, ""'curtosis',"": 1, ""'entropy',"": 1, ""'x0']].values"": 1, 'y': 1, ""df['class'].values"": 1, 'x_train,': 1, 'x_test,': 1, 'y_train,': 1, 'y_test': 1, 'train_test_split(x,': 1, 'random_state=13,': 1, 'test': 1, '0.2)': 1, 'input(""enter': 1, '4': 1, 'and': 1, '1': 1, 'bias:': 1, '"").split()': 1, '[float(weight)': 1, 'weight': 1, 'weights]': 1, 'np.array(weights)': 1, 'weights.copy())': 1}","{'imp': 3, 'mpo': 3, 'por': 3, 'ort': 3, 'rt ': 3, 't p': 1, ' pa': 1, 'pan': 1, 'and': 3, 'nda': 1, 'das': 1, 'as ': 3, 's a': 5, ' as': 2, 's p': 1, ' pd': 2, 'pd\n': 4, 'd\ni': 1, '\nim': 1, 't n': 1, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, 's n': 1, ' np': 5, 'np\n': 1, 'p\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm s': 1, ' sk': 1, 'skl': 1, 'kle': 1, 'lea': 1, 'ear': 1, 'arn': 1, 'rn.': 1, 'n.m': 1, '.mo': 1, 'mod': 1, 'ode': 1, 'del': 1, 'el_': 1, 'l_s': 1, '_se': 1, 'sel': 1, 'ele': 1, 'lec': 1, 'ect': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n i': 1, ' im': 1, 't t': 1, ' tr': 5, 'tra': 8, 'rai': 8, 'ain': 8, 'in_': 6, 'n_t': 2, '_te': 4, 'tes': 5, 'est': 5, 'st_': 2, 't_s': 2, '_sp': 2, 'spl': 3, 'pli': 3, 'lit': 3, 'it\n': 1, 't\n\n': 1, '\n\nd': 7, '\nde': 6, 'def': 6, 'ef ': 6, 'f p': 1, ' pr': 10, 'pre': 19, 'red': 19, 'edi': 4, 'dic': 4, 'ict': 4, 'ct(': 4, 't(X': 6, '(X,': 11, 'X, ': 11, ', w': 9, ' we': 15, 'wei': 23, 'eig': 26, 'igh': 26, 'ght': 26, 'hts': 24, 'ts,': 4, 's, ': 4, ', l': 4, ' la': 1, 'lam': 2, 'amb': 2, 'mbd': 2, 'bda': 2, 'daa': 2, 'aa ': 2, 'a =': 4, ' = ': 36, '= 1': 4, ' 1)': 8, '1):': 4, '):\n': 16, ':\n ': 16, '\n  ': 51, '  n': 1, ' ne': 2, 'net': 2, 'et ': 1, 't =': 3, '= n': 2, 'np.': 4, 'p.d': 1, '.do': 1, 'dot': 1, 'ot(': 1, 'ts)': 5, 's)\n': 5, ')\n ': 17, '  r': 3, ' re': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n (': 2, ' (1': 3, '(1 ': 3, '1 /': 1, ' / ': 1, '/ (': 1, '1 +': 1, ' + ': 7, '+ n': 1, 'p.e': 1, '.ex': 1, 'exp': 1, 'xp(': 1, 'p(-': 1, '(-l': 1, '-la': 1, 'a *': 4, ' * ': 13, '* n': 1, 'et)': 1, 't))': 1, ')))': 1, '))\n': 5, ')\n\n': 12, 'f c': 2, ' ca': 8, 'cal': 8, 'alc': 8, 'lcu': 8, 'cul': 8, 'ula': 8, 'lat': 8, 'ate': 9, 'te_': 8, 'e_d': 4, '_dw': 4, 'dw(': 4, 'w(X': 4, ', y': 25, ' y,': 6, 'y, ': 10, ' y_': 14, 'y_p': 15, '_pr': 15, 'ed)': 10, 'd):': 2, ' ((': 1, '((y': 1, '(y_': 3, 'ed ': 5, 'd -': 2, ' - ': 3, '- y': 3, ' y)': 5, 'y) ': 1, ') *': 3, '* (': 2, ' (y': 1, 'd) ': 2, '1 -': 1, '* X': 1, ' X)': 1, 'X)\n': 1, 'e_e': 4, '_er': 4, 'err': 16, 'rro': 19, 'ror': 19, 'or(': 4, 'r(y': 4, '(y,': 4, 'n n': 1, 'p.s': 1, '.sq': 1, 'squ': 1, 'qua': 1, 'uar': 1, 'are': 1, 're(': 1, 'e(y': 1, 'y)\n': 1, 'f t': 3, 'n_v': 2, '_va': 2, 'van': 2, 'ani': 2, 'nil': 2, 'ill': 2, 'lla': 2, 'la(': 2, 'a(X': 2, ', e': 3, ' ep': 9, 'epo': 12, 'poc': 12, 'och': 13, 'chs': 12, 'hs ': 3, 's =': 8, '= 5': 3, ' 50': 3, '500': 3, '00,': 3, '0, ': 3, ' lr': 3, 'lr ': 6, 'r =': 6, '= 0': 18, ' 0.': 7, '0.0': 3, '.00': 3, '001': 3, '01,': 3, '1, ': 3, ', g': 3, ' ga': 3, 'gam': 6, 'amm': 6, 'mma': 6, 'ma ': 6, '0.9': 3, '.9)': 2, '9):': 2, '   ': 288, '  u': 6, ' up': 12, 'upd': 12, 'pd ': 6, 'd =': 9, ' 0\n': 10, '0\n\n': 7, '\n\n ': 11, '  f': 6, ' fo': 7, 'for': 7, 'or ': 20, 'r i': 4, ' i ': 5, 'i i': 3, ' in': 8, 'in ': 7, 'n r': 3, ' ra': 4, 'ran': 4, 'ang': 3, 'nge': 3, 'ge(': 3, 'e(e': 3, '(ep': 3, 'hs)': 3, 's):': 3, '  d': 7, ' dw': 10, 'dw ': 7, 'w =': 4, '0\n ': 3, '  e': 9, ' er': 9, 'r (': 3, ' (X': 3, '(Xi': 9, 'Xi,': 9, 'i, ': 12, ' yi': 6, 'yi)': 3, 'i) ': 3, ') i': 3, 'n z': 3, ' zi': 3, 'zip': 3, 'ip(': 3, 'p(X': 3, 'y):': 3, '  y': 3, '= p': 4, 'w +': 3, ' +=': 6, '+= ': 6, '= c': 6, 'yi,': 3, 'd)\n': 9, 'r +': 3, '= (': 6, ' (l': 3, '(lr': 3, 'r *': 3, '* d': 3, 'dw)': 3, 'w) ': 3, ') +': 3, '+ (': 3, ' (g': 3, '(ga': 3, '* u': 3, 'pd)': 3, '  w': 3, 'ts ': 10, 's -': 3, ' -=': 3, '-= ': 3, '= u': 3, 'd\n ': 2, 'r /': 3, ' /=': 3, '/= ': 3, ' (2': 3, '(2 ': 3, '2 *': 3, '* l': 3, ' le': 4, 'len': 4, 'en(': 4, 'n(X': 4, '(X)': 4, 'X))': 3, '  i': 4, ' if': 4, 'if(': 3, 'f((': 3, '((i': 3, '(i ': 3, 'i +': 3, '+ 1': 3, '1) ': 3, ') %': 3, ' % ': 4, '% 1': 3, ' 10': 3, '100': 3, '00 ': 3, '0 =': 3, ' ==': 5, '== ': 5, '  p': 6, 'pri': 6, 'rin': 6, 'int': 6, 'nt(': 6, 't(f': 6, '(f""': 6, 'f""W': 3, '""We': 3, 'Wei': 3, ' af': 6, 'aft': 6, 'fte': 6, 'ter': 7, 'er ': 7, 'r {': 6, ' {i': 6, '{i}': 6, 'i} ': 6, '} e': 6, 'hs:': 6, 's: ': 7, ': {': 6, ' {w': 3, '{we': 3, 'ts}': 3, 's} ': 3, '} \\': 6, ' \\n': 6, '\\n""': 6, 'n"")': 6, '"")\n': 6, 'f""E': 3, '""Er': 3, 'Err': 3, 'r a': 3, ' {e': 3, '{er': 3, 'or}': 3, 'r} ': 3, 'n_s': 1, '_st': 2, 'sto': 1, 'toc': 1, 'cha': 1, 'has': 1, 'ast': 1, 'sti': 1, 'tic': 1, 'ic(': 1, 'c(X': 1, 'd\n\n': 1, '  \n': 3, ' \n ': 2, ' \nd': 1, 'n_m': 1, '_mi': 1, 'min': 1, 'ini': 1, 'nib': 1, 'iba': 1, 'bat': 1, 'atc': 1, 'tch': 1, 'ch(': 1, 'h(X': 1, '.9,': 1, '9, ': 1, ', b': 1, ' bs': 2, 'bs ': 2, '= 3': 1, ' 32': 1, '32)': 1, '2):': 1, 'if ': 1, 'f i': 1, 'i %': 1, '% b': 1, ' 0 ': 1, '0 o': 1, ' or': 1, 'i =': 1, '= l': 1, 'X):': 1, '\ndf': 2, 'df ': 1, 'f =': 1, 'pd.': 1, 'd.r': 1, '.re': 1, 'rea': 1, 'ead': 1, 'ad_': 1, 'd_c': 1, '_cs': 1, 'csv': 2, 'sv(': 1, ""v('"": 1, ""('."": 1, ""'./"": 1, './b': 1, '/ba': 1, 'ban': 1, 'ank': 1, 'nk_': 1, 'k_n': 1, '_no': 1, 'not': 1, 'ote': 1, 'te.': 1, 'e.c': 1, '.cs': 1, ""sv'"": 1, ""v')"": 1, ""')\n"": 1, 'df.': 1, 'f.i': 1, '.in': 1, 'ins': 1, 'nse': 1, 'ser': 1, 'ert': 1, 'rt(': 1, 't(4': 1, '(4,': 1, '4, ': 1, "", '"": 5, "" 'x"": 2, ""'x0"": 2, ""x0'"": 2, ""0',"": 1, ""', "": 5, ', 1': 1, '1)\n': 1, '\n\nX': 2, '\nX ': 1, 'X =': 1, '= d': 2, ' df': 2, 'df[': 2, 'f[[': 1, ""[['"": 1, ""['v"": 1, ""'va"": 1, 'var': 1, 'ari': 1, 'ria': 1, 'ian': 1, 'anc': 1, 'nce': 1, ""ce'"": 1, ""e',"": 1, "" 's"": 1, ""'sk"": 1, 'ske': 1, 'kew': 1, 'ewn': 1, 'wne': 1, 'nes': 1, 'ess': 1, ""ss'"": 2, ""s',"": 2, "" 'c"": 1, ""'cu"": 1, 'cur': 1, 'urt': 1, 'rto': 1, 'tos': 1, 'osi': 1, 'sis': 1, ""is'"": 1, "" 'e"": 1, ""'en"": 1, 'ent': 1, 'ntr': 1, 'tro': 1, 'rop': 1, 'opy': 2, ""py'"": 1, ""y',"": 1, ""0']"": 1, ""']]"": 1, ']].': 1, '].v': 2, '.va': 2, 'val': 2, 'alu': 2, 'lue': 2, 'ues': 2, 'es\n': 2, 's\ny': 1, '\ny ': 1, 'y =': 1, ""f['"": 1, ""['c"": 1, ""'cl"": 1, 'cla': 1, 'las': 1, 'ass': 1, ""s']"": 1, ""']."": 1, 's\n\n': 1, '\nX_': 1, 'X_t': 2, '_tr': 2, 'in,': 2, 'n, ': 2, ', X': 1, ' X_': 1, 'st,': 1, 't, ': 1, 'y_t': 2, 'st ': 2, '= t': 1, 'it(': 2, ', r': 1, 'ndo': 1, 'dom': 1, 'om_': 1, 'm_s': 1, 'sta': 1, 'tat': 1, 'te=': 1, 'e=1': 1, '=13': 1, '13,': 1, '3, ': 1, ', t': 1, ' te': 1, '0.2': 1, '.2)': 1, '2)\n': 1, '\n\nw': 2, '\nwe': 3, '= i': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut(': 1, 't(""': 1, '(""E': 1, '""En': 1, 'Ent': 1, 'nte': 1, 'r 4': 1, ' 4 ': 1, '4 w': 1, ' an': 1, 'nd ': 1, 'd 1': 1, ' 1 ': 1, '1 b': 1, ' bi': 1, 'bia': 1, 'ias': 1, 'as:': 1, ': ""': 1, ' "")': 1, '"").': 1, ').s': 1, '.sp': 1, 't()': 1, '()\n': 1, ')\nw': 1, '= [': 1, ' [f': 1, '[fl': 1, 'flo': 1, 'loa': 1, 'oat': 1, 'at(': 1, 't(w': 1, '(we': 2, 'ht)': 1, 't) ': 1, ') f': 1, 'r w': 1, 'ht ': 1, 't i': 1, 'n w': 1, 'ts]': 1, 's]\n': 1, ']\n\n': 1, 'p.a': 1, '.ar': 1, 'arr': 1, 'rra': 1, 'ray': 1, 'ay(': 1, 'y(w': 1, '\n\nt': 1, '\ntr': 1, 'ts.': 1, 's.c': 1, '.co': 1, 'cop': 1, 'py(': 1, 'y()': 1, '())': 1}"
Tushar Nankani,main_3.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 3, 'pandas': 1, 'as': 2, 'pd': 1, 'numpy': 1, 'np': 1, 'from': 1, 'sklearn.model_selection': 1, 'train_test_split': 1, 'def': 6, 'predict(x,weights,lambdaa': 1, '=': 33, '1):': 1, 'net': 1, 'np.dot(x,weights)': 1, 'return': 3, '(1/(1': 1, '+': 4, 'np.exp(-lambdaa*net)))': 1, 'calculate_dw(x,y,y_pred):': 1, '((y_pred': 1, '-': 5, 'y)*(y_pred)*(1-y_pred)*x)': 1, 'calculate_error(yi,y_pred):': 1, 'np.square(y_pred-yi)': 1, 'train_vanilla(x,': 1, 'y,': 3, 'weights,': 3, 'epochs=500,': 3, 'lr': 3, '=0.001,': 3, 'gamma': 3, '0.9):': 2, 'vel': 9, '0': 11, 'for': 7, 'epoch': 9, 'in': 7, 'range(epochs):': 3, 'dw': 6, 'error': 9, 'w_lookahead': 4, 'weights': 10, '(gamma*vel)': 7, 'xi,yi': 3, 'zip(x,y):': 3, 'y_pred': 3, 'predict(xi,w_lookahead)': 3, '+=': 6, 'calculate_dw(xi,yi,y_pred)': 3, 'calculate_error(yi,y_pred)': 3, '(lr*dw)': 3, '-=': 3, '/=': 3, '(2*len(x))': 3, 'if': 4, '(epoch+1)%50': 3, '==': 4, '0:': 3, ""print(f'weights"": 3, 'after': 6, '{epoch+1}': 6, ':': 7, ""',weights)"": 3, ""print(f'error"": 3, ""',error)"": 3, 'train_stochastic(x,': 1, 'train_minibatch(x,': 1, '0.9,': 1, 'bs': 1, '32):': 1, 'i': 2, '1': 2, 'i%bs': 1, 'or': 1, 'i==len(x):': 1, 'dataset': 1, ""pd.read_csv('bank_note.csv')"": 1, ""dataset.insert(4,'x0',1)"": 1, 'x': 1, ""dataset[['variance','skewness','curtosis','entropy','x0']].values"": 1, 'y': 1, ""dataset['class']"": 1, 'x_train,': 1, 'x_test,': 1, 'y_train,': 1, 'y_test': 1, 'train_test_split(x,y,random_state=13,test_size=0.2)': 1, ""input('enter"": 1, '4': 1, 'and': 1, 'bias': 1, ""').split()"": 1, 'np.array([float(weight)': 1, 'weight': 1, 'weights],': 1, ""dtype='longdouble')"": 1, 'print()': 3, ""print('----"": 3, 'nesterov': 3, 'accelerator': 3, 'gd': 3, '(vanilla)': 1, ""----')"": 3, 'train_vanilla(x_train,y_train,weights.copy())': 1, '(stochastic)': 1, 'train_stochastic(x_train,y_train,weights.copy())': 1, '(mini': 1, 'batch)': 1, 'train_minibatch(x_train,y_train,weights.copy())': 1}","{'imp': 3, 'mpo': 3, 'por': 3, 'ort': 3, 'rt ': 3, 't p': 1, ' pa': 1, 'pan': 1, 'and': 3, 'nda': 1, 'das': 1, 'as ': 4, 's a': 5, ' as': 2, 's p': 1, ' pd': 2, 'pd\n': 1, 'd\ni': 1, '\nim': 1, 't n': 1, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, 's n': 1, ' np': 5, 'np\n': 1, 'p\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm s': 1, ' sk': 1, 'skl': 1, 'kle': 1, 'lea': 1, 'ear': 1, 'arn': 1, 'rn.': 1, 'n.m': 1, '.mo': 1, 'mod': 1, 'ode': 1, 'del': 1, 'el_': 1, 'l_s': 1, '_se': 1, 'sel': 1, 'ele': 4, 'lec': 1, 'ect': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n i': 1, ' im': 1, 't t': 1, ' tr': 5, 'tra': 16, 'rai': 16, 'ain': 16, 'in_': 8, 'n_t': 2, '_te': 4, 'tes': 5, 'est': 8, 'st_': 3, 't_s': 3, '_sp': 2, 'spl': 3, 'pli': 3, 'lit': 3, 'it\n': 1, 't\n\n': 1, '\n\nd': 7, '\nde': 6, 'def': 6, 'ef ': 6, 'f p': 1, ' pr': 10, 'pre': 19, 'red': 19, 'edi': 4, 'dic': 4, 'ict': 4, 'ct(': 4, 't(X': 6, '(X,': 10, 'X,w': 2, ',we': 8, 'wei': 24, 'eig': 27, 'igh': 27, 'ght': 27, 'hts': 25, 'ts,': 4, 's,l': 1, ',la': 1, 'lam': 2, 'amb': 2, 'mbd': 2, 'bda': 2, 'daa': 2, 'aa ': 1, 'a =': 4, ' = ': 33, '= 1': 2, ' 1)': 1, '1):': 1, '):\n': 13, ':\n ': 16, '\n  ': 53, '   ': 390, '  n': 1, ' ne': 1, 'net': 2, 'et ': 2, 't =': 3, '= n': 2, 'np.': 4, 'p.d': 1, '.do': 1, 'dot': 1, 'ot(': 1, 'ts)': 4, 's)\n': 4, ')\n ': 17, '  r': 3, ' re': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n (': 2, ' (1': 1, '(1/': 1, '1/(': 1, '/(1': 1, '(1 ': 1, '1 +': 1, ' + ': 4, '+ n': 1, 'p.e': 1, '.ex': 1, 'exp': 1, 'xp(': 1, 'p(-': 1, '(-l': 1, '-la': 1, 'aa*': 1, 'a*n': 1, '*ne': 1, 'et)': 1, 't))': 1, ')))': 1, '))\n': 7, ')\n\n': 16, 'f c': 2, ' ca': 8, 'cal': 8, 'alc': 8, 'lcu': 8, 'cul': 8, 'ula': 8, 'lat': 8, 'ate': 9, 'te_': 8, 'e_d': 4, '_dw': 4, 'dw(': 4, 'w(X': 4, 'X,y': 5, ',y,': 2, 'y,y': 1, ',y_': 11, 'y_p': 15, '_pr': 15, 'ed)': 10, 'd):': 2, ' ((': 1, '((y': 1, '(y_': 3, 'ed ': 4, 'd -': 1, ' - ': 5, '- y': 1, ' y)': 1, 'y)*': 1, ')*(': 2, '*(y': 1, 'd)*': 2, '*(1': 1, '(1-': 1, '1-y': 1, '-y_': 1, ')*X': 1, '*X)': 1, 'X)\n': 1, 'e_e': 4, '_er': 4, 'err': 16, 'rro': 19, 'ror': 19, 'or(': 4, 'r(y': 4, '(yi': 4, 'yi,': 7, 'i,y': 13, 'n n': 1, 'p.s': 1, '.sq': 1, 'squ': 1, 'qua': 1, 'uar': 1, 'are': 1, 're(': 1, 'e(y': 1, 'ed-': 1, 'd-y': 1, '-yi': 1, 'yi)': 1, 'i)\n': 1, 'f t': 3, 'n_v': 2, '_va': 2, 'van': 2, 'ani': 3, 'nil': 3, 'ill': 3, 'lla': 3, 'la(': 2, 'a(X': 2, 'X, ': 3, ', y': 5, ' y,': 3, 'y, ': 3, ', w': 3, ' we': 13, 's, ': 3, ', e': 3, ' ep': 12, 'epo': 24, 'poc': 24, 'och': 27, 'chs': 6, 'hs=': 3, 's=5': 3, '=50': 3, '500': 3, '00,': 3, '0, ': 3, ', l': 3, ' lr': 3, 'lr ': 3, 'r =': 6, ' =0': 3, '=0.': 4, '0.0': 3, '.00': 3, '001': 3, '01,': 3, '1, ': 3, ', g': 3, ' ga': 3, 'gam': 10, 'amm': 10, 'mma': 10, 'ma ': 3, '= 0': 17, ' 0.': 3, '0.9': 3, '.9)': 2, '9):': 2, '  v': 6, ' ve': 9, 'vel': 16, 'el ': 6, 'l =': 6, ' 0\n': 10, '0\n ': 10, '  f': 6, ' fo': 7, 'for': 7, 'or ': 23, 'r e': 9, 'ch ': 9, 'h i': 3, ' in': 8, 'in ': 7, 'n r': 3, ' ra': 3, 'ran': 4, 'ang': 3, 'nge': 3, 'ge(': 3, 'e(e': 3, '(ep': 6, 'hs)': 3, 's):': 3, '  d': 6, ' dw': 6, 'dw ': 6, 'w =': 4, '  e': 9, ' er': 9, '  w': 7, ' w_': 4, 'w_l': 7, '_lo': 7, 'loo': 7, 'ook': 7, 'oka': 7, 'kah': 7, 'ahe': 7, 'hea': 7, 'ead': 8, 'ad ': 4, 'd =': 7, '= w': 4, 'ts ': 13, 's -': 7, '- (': 4, ' (g': 7, '(ga': 7, 'ma*': 7, 'a*v': 7, '*ve': 7, 'el)': 7, 'l)\n': 4, 'r X': 3, ' Xi': 3, 'Xi,': 9, ',yi': 6, 'yi ': 3, 'i i': 3, 'n z': 3, ' zi': 3, 'zip': 3, 'ip(': 3, 'p(X': 3, ',y)': 3, 'y):': 3, '  y': 3, ' y_': 5, '= p': 4, '(Xi': 6, 'i,w': 3, ',w_': 3, 'ad)': 3, 'd)\n': 9, 'w +': 2, ' +=': 6, '+= ': 6, '= c': 6, 'r +': 3, '\n\n ': 7, '= (': 6, 'l) ': 3, ') +': 3, '+ (': 3, ' (l': 3, '(lr': 3, 'lr*': 3, 'r*d': 3, '*dw': 3, 'dw)': 3, 'w)\n': 3, ' -=': 3, '-= ': 3, '= v': 3, 'el\n': 3, 'l\n ': 2, 'r /': 3, ' /=': 3, '/= ': 3, ' (2': 3, '(2*': 3, '2*l': 3, '*le': 3, 'len': 4, 'en(': 4, 'n(X': 4, '(X)': 4, 'X))': 3, '  i': 6, ' if': 4, 'if ': 4, 'f (': 3, ' (e': 3, 'ch+': 9, 'h+1': 9, '+1)': 3, '1)%': 3, ')%5': 3, '%50': 3, '50 ': 3, '0 =': 3, ' ==': 4, '== ': 4, ' 0:': 3, '0:\n': 3, '  p': 6, 'pri': 12, 'rin': 12, 'int': 12, 'nt(': 12, 't(f': 6, ""(f'"": 6, ""f'W"": 3, ""'We"": 3, 'Wei': 3, ' af': 6, 'aft': 6, 'fte': 6, 'ter': 10, 'er ': 7, 'h {': 6, ' {e': 6, '{ep': 6, '+1}': 6, '1} ': 6, '} :': 6, ' : ': 7, "": '"": 7, "" ',"": 6, ""',w"": 3, ""f'E"": 3, ""'Er"": 3, 'Err': 3, 'r a': 3, ""',e"": 3, ',er': 3, 'or)': 3, 'r)\n': 3, '\n\n\n': 3, 'n_s': 2, '_st': 3, 'sto': 2, 'toc': 3, 'cha': 3, 'has': 3, 'ast': 3, 'sti': 3, 'tic': 3, 'ic(': 2, 'c(X': 2, 'l\n\n': 1, 'n_m': 2, '_mi': 2, 'min': 2, 'ini': 3, 'nib': 2, 'iba': 2, 'bat': 2, 'atc': 3, 'tch': 3, 'ch(': 2, 'h(X': 2, '.9,': 1, '9, ': 1, ', b': 1, ' bs': 1, 'bs ': 2, 's =': 4, '= 3': 1, ' 32': 1, '32)': 1, '2):': 1, ' i ': 2, 'i =': 1, 'i +': 1, ' 1\n': 1, '1\n ': 1, 'f i': 1, ' i%': 1, 'i%b': 1, '%bs': 1, ' 0 ': 1, '0 o': 1, ' or': 1, 'r i': 1, ' i=': 1, 'i==': 1, '==l': 1, '=le': 1, 'X):': 1, '\nda': 2, 'dat': 4, 'ata': 4, 'tas': 4, 'ase': 4, 'set': 4, 'pd.': 1, 'd.r': 1, '.re': 1, 'rea': 1, 'ad_': 1, 'd_c': 1, '_cs': 1, 'csv': 2, 'sv(': 1, ""v('"": 1, ""('b"": 1, ""'ba"": 1, 'ban': 1, 'ank': 1, 'nk_': 1, 'k_n': 1, '_no': 1, 'not': 1, 'ote': 1, 'te.': 1, 'e.c': 1, '.cs': 1, ""sv'"": 1, ""v')"": 1, ""')\n"": 5, ')\nd': 1, 'et.': 1, 't.i': 1, '.in': 1, 'ins': 1, 'nse': 1, 'ser': 1, 'ert': 1, 'rt(': 1, 't(4': 1, '(4,': 1, ""4,'"": 1, "",'x"": 2, ""'x0"": 2, ""x0'"": 2, ""0',"": 1, ""',1"": 1, ',1)': 1, '1)\n': 1, '\n\nX': 2, '\nX ': 1, 'X =': 1, '= d': 2, ' da': 2, 'et[': 2, 't[[': 1, ""[['"": 1, ""['v"": 1, ""'va"": 1, 'var': 1, 'ari': 1, 'ria': 1, 'ian': 1, 'anc': 1, 'nce': 1, ""ce'"": 1, ""e',"": 1, ""','"": 4, "",'s"": 1, ""'sk"": 1, 'ske': 1, 'kew': 1, 'ewn': 1, 'wne': 1, 'nes': 1, 'ess': 1, ""ss'"": 2, ""s',"": 2, "",'c"": 1, ""'cu"": 1, 'cur': 1, 'urt': 1, 'rto': 1, 'tos': 1, 'osi': 1, 'sis': 1, ""is'"": 1, "",'e"": 1, ""'en"": 1, 'ent': 1, 'ntr': 1, 'tro': 1, 'rop': 1, 'opy': 4, ""py'"": 1, ""y',"": 1, ""0']"": 1, ""']]"": 1, ']].': 1, '].v': 1, '.va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ues': 1, 'es\n': 1, 's\ny': 1, '\ny ': 1, 'y =': 1, ""t['"": 1, ""['c"": 1, ""'cl"": 1, 'cla': 1, 'las': 1, 'ass': 1, ""s']"": 1, ""']\n"": 1, ']\n\n': 1, '\nX_': 1, 'X_t': 5, '_tr': 8, 'in,': 8, 'n, ': 2, ', X': 1, ' X_': 1, 'st,': 1, 't, ': 1, 'y_t': 5, 'st ': 1, '= t': 1, 'it(': 2, 'y,r': 1, ',ra': 1, 'ndo': 1, 'dom': 1, 'om_': 1, 'm_s': 1, 'sta': 1, 'tat': 1, 'te=': 1, 'e=1': 1, '=13': 1, '13,': 1, '3,t': 1, ',te': 1, '_si': 1, 'siz': 1, 'ize': 1, 'ze=': 1, 'e=0': 1, '0.2': 1, '.2)': 1, '2)\n': 1, ')\nw': 2, '\nwe': 2, '= i': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut(': 1, ""t('"": 4, ""('E"": 1, ""'En"": 1, 'Ent': 1, 'nte': 1, 'r 4': 1, ' 4 ': 1, '4 w': 1, ' an': 1, 'nd ': 1, 'd 1': 1, ' 1 ': 1, '1 b': 1, ' bi': 1, 'bia': 1, 'ias': 1, 's :': 1, "" ')"": 1, ""')."": 1, ').s': 1, '.sp': 1, 't()': 4, '()\n': 4, 'p.a': 1, '.ar': 1, 'arr': 1, 'rra': 1, 'ray': 1, 'ay(': 1, 'y([': 1, '([f': 1, '[fl': 1, 'flo': 1, 'loa': 1, 'oat': 1, 'at(': 1, 't(w': 1, '(we': 1, 'ht)': 1, 't) ': 1, ') f': 1, 'r w': 1, 'ht ': 1, 't i': 1, 'n w': 1, 'ts]': 1, 's],': 1, '], ': 1, ', d': 1, ' dt': 1, 'dty': 1, 'typ': 1, 'ype': 1, 'pe=': 1, ""e='"": 1, ""='l"": 1, ""'lo"": 1, 'lon': 1, 'ong': 1, 'ngd': 1, 'gdo': 1, 'dou': 1, 'oub': 1, 'ubl': 1, 'ble': 1, ""le'"": 1, ""e')"": 1, '\n\np': 3, '\npr': 6, ')\np': 3, ""('-"": 3, ""'--"": 3, '---': 12, '-- ': 3, '- N': 3, ' Ne': 3, 'Nes': 3, 'ste': 3, 'ero': 3, 'rov': 3, 'ov ': 3, 'v A': 3, ' Ac': 3, 'Acc': 3, 'cce': 3, 'cel': 3, 'ler': 3, 'era': 3, 'rat': 3, 'ato': 3, 'tor': 3, 'r G': 3, ' GD': 3, 'GD ': 3, 'D (': 3, ' (V': 1, '(Va': 1, 'Van': 1, 'la)': 1, 'a) ': 1, ') -': 3, ' --': 3, ""--'"": 3, ""-')"": 3, ')\nt': 3, '\ntr': 3, '(X_': 3, 'n,y': 3, 'n,w': 3, 'ts.': 3, 's.c': 3, '.co': 3, 'cop': 3, 'py(': 3, 'y()': 3, '())': 3, ' (S': 1, '(St': 1, 'Sto': 1, 'ic)': 1, 'c) ': 1, ' (M': 1, '(Mi': 1, 'Min': 1, 'ni ': 1, 'i B': 1, ' Ba': 1, 'Bat': 1, 'ch)': 1, 'h) ': 1}"
Tushar Nankani,main_4.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 3, 'pandas': 1, 'as': 2, 'pd': 1, 'numpy': 1, 'np': 1, 'from': 1, 'sklearn.model_selection': 1, 'train_test_split': 1, 'def': 6, 'predict(x,weights,lambdaa': 1, '=': 29, '1):': 1, 'net': 1, 'np.dot(x,weights)': 1, 'return': 3, '(1/(1': 1, '+': 6, 'np.exp(-lambdaa*net)))': 1, 'calculate_dw(x,y,y_pred):': 1, '((y_pred': 1, '-': 1, 'y)*(y_pred)*(1-y_pred)*x)': 1, 'calculate_error(yi,y_pred):': 1, 'np.square(y_pred-yi)': 1, 'train_vanilla(x,': 1, 'y,': 3, 'weights,': 3, 'epochs=500,': 3, 'lr': 3, '=0.01,': 3, 'epsilon': 3, '1e-8):': 2, 'vel': 9, '0': 11, 'for': 7, 'epoch': 9, 'in': 7, 'range(epochs):': 3, 'dw': 6, 'error': 9, 'xi,yi': 3, 'zip(x,y):': 3, 'y_pred': 3, 'predict(xi,weights)': 3, '+=': 6, 'calculate_dw(xi,yi,y_pred)': 3, 'calculate_error(yi,y_pred)': 3, '(dw**2)': 1, 'weights': 6, '-=': 3, '((lr*dw)/(np.sqrt(vel+epsilon)))': 1, '/=': 3, '(2*len(x))': 3, 'if': 4, '(epoch+1)%50': 3, '==': 4, '0:': 3, ""print(f'weights"": 3, 'after': 6, '{epoch+1}': 6, ':': 7, ""',weights)"": 3, ""print(f'error"": 3, ""',error)"": 3, 'train_stochastic(x,': 1, '(dw': 2, '**': 2, '2)': 2, '((lr': 2, '*': 2, 'dw)': 2, '/': 2, '(np.sqrt(vel': 2, 'epsilon)))': 2, 'train_minibatch(x,': 1, '1e-8,': 1, 'bs': 1, '32):': 1, 'i': 2, '1': 2, 'i%bs': 1, 'or': 1, 'i==len(x):': 1, 'dataset': 1, ""pd.read_csv('bank_note.csv')"": 1, ""dataset.insert(4,'x0',1)"": 1, 'x': 1, ""dataset[['variance','skewness','curtosis','entropy','x0']].values"": 1, 'y': 1, ""dataset['class']"": 1, 'x_train,': 1, 'x_test,': 1, 'y_train,': 1, 'y_test': 1, 'train_test_split(x,y,random_state=13,test_size=0.2)': 1, ""input('enter"": 1, '4': 1, 'and': 1, 'bias': 1, ""').split()"": 1, 'np.array([float(weight)': 1, 'weight': 1, 'weights],': 1, ""dtype='longdouble')"": 1, 'print()': 3, ""print('----"": 3, 'adagrad': 3, '(vanilla)': 1, ""----')"": 3, 'train_vanilla(x_train,y_train,weights.copy())': 1, '(stochastic)': 1, 'train_stochastic(x_train,y_train,weights.copy())': 1, '(mini': 1, 'batch)': 1, 'train_minibatch(x_train,y_train,weights.copy())': 1}","{'imp': 3, 'mpo': 3, 'por': 3, 'ort': 3, 'rt ': 3, 't p': 1, ' pa': 1, 'pan': 1, 'and': 3, 'nda': 1, 'das': 1, 'as ': 4, 's a': 5, ' as': 2, 's p': 1, ' pd': 2, 'pd\n': 1, 'd\ni': 1, '\nim': 1, 't n': 1, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, 's n': 1, ' np': 5, 'np\n': 1, 'p\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm s': 1, ' sk': 1, 'skl': 1, 'kle': 1, 'lea': 1, 'ear': 1, 'arn': 1, 'rn.': 1, 'n.m': 1, '.mo': 1, 'mod': 1, 'ode': 1, 'del': 1, 'el_': 1, 'l_s': 1, '_se': 1, 'sel': 1, 'ele': 1, 'lec': 1, 'ect': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'on ': 4, 'n i': 1, ' im': 1, 't t': 1, ' tr': 5, 'tra': 16, 'rai': 16, 'ain': 16, 'in_': 8, 'n_t': 2, '_te': 4, 'tes': 5, 'est': 5, 'st_': 3, 't_s': 3, '_sp': 2, 'spl': 3, 'pli': 3, 'lit': 3, 'it\n': 1, 't\n\n': 1, '\n\nd': 7, '\nde': 6, 'def': 6, 'ef ': 6, 'f p': 1, ' pr': 10, 'pre': 19, 'red': 19, 'edi': 4, 'dic': 4, 'ict': 4, 'ct(': 4, 't(X': 6, '(X,': 10, 'X,w': 2, ',we': 11, 'wei': 23, 'eig': 26, 'igh': 26, 'ght': 26, 'hts': 24, 'ts,': 4, 's,l': 1, ',la': 1, 'lam': 2, 'amb': 2, 'mbd': 2, 'bda': 2, 'daa': 2, 'aa ': 1, 'a =': 1, ' = ': 29, '= 1': 5, ' 1)': 1, '1):': 1, '):\n': 13, ':\n ': 16, '\n  ': 49, '   ': 354, '  n': 1, ' ne': 1, 'net': 2, 'et ': 2, 't =': 3, '= n': 2, 'np.': 7, 'p.d': 1, '.do': 1, 'dot': 1, 'ot(': 1, 'ts)': 7, 's)\n': 7, ')\n ': 16, '  r': 3, ' re': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n (': 2, ' (1': 1, '(1/': 1, '1/(': 1, '/(1': 1, '(1 ': 1, '1 +': 1, ' + ': 6, '+ n': 1, 'p.e': 1, '.ex': 1, 'exp': 1, 'xp(': 1, 'p(-': 1, '(-l': 1, '-la': 1, 'aa*': 1, 'a*n': 1, '*ne': 1, 'et)': 1, 't))': 1, ')))': 4, '))\n': 10, ')\n\n': 16, 'f c': 2, ' ca': 8, 'cal': 8, 'alc': 8, 'lcu': 8, 'cul': 8, 'ula': 8, 'lat': 8, 'ate': 9, 'te_': 8, 'e_d': 4, '_dw': 4, 'dw(': 4, 'w(X': 4, 'X,y': 5, ',y,': 2, 'y,y': 1, ',y_': 11, 'y_p': 15, '_pr': 15, 'ed)': 10, 'd):': 2, ' ((': 4, '((y': 1, '(y_': 3, 'ed ': 4, 'd -': 1, ' - ': 1, '- y': 1, ' y)': 1, 'y)*': 1, ')*(': 2, '*(y': 1, 'd)*': 2, '*(1': 1, '(1-': 1, '1-y': 1, '-y_': 1, ')*X': 1, '*X)': 1, 'X)\n': 1, 'e_e': 4, '_er': 4, 'err': 16, 'rro': 19, 'ror': 19, 'or(': 4, 'r(y': 4, '(yi': 4, 'yi,': 7, 'i,y': 13, 'n n': 1, 'p.s': 4, '.sq': 4, 'squ': 1, 'qua': 1, 'uar': 1, 'are': 1, 're(': 1, 'e(y': 1, 'ed-': 1, 'd-y': 1, '-yi': 1, 'yi)': 1, 'i)\n': 1, 'f t': 3, 'n_v': 2, '_va': 2, 'van': 2, 'ani': 3, 'nil': 3, 'ill': 3, 'lla': 3, 'la(': 2, 'a(X': 2, 'X, ': 3, ', y': 5, ' y,': 3, 'y, ': 3, ', w': 3, ' we': 9, 's, ': 3, ', e': 6, ' ep': 17, 'epo': 24, 'poc': 24, 'och': 27, 'chs': 6, 'hs=': 3, 's=5': 3, '=50': 3, '500': 3, '00,': 3, '0, ': 3, ', l': 3, ' lr': 3, 'lr ': 5, 'r =': 6, ' =0': 3, '=0.': 4, '0.0': 3, '.01': 3, '01,': 3, '1, ': 3, 'eps': 6, 'psi': 6, 'sil': 6, 'ilo': 6, 'lon': 7, 'n =': 3, ' 1e': 3, '1e-': 3, 'e-8': 3, '-8)': 2, '8):': 2, '  v': 6, ' ve': 9, 'vel': 12, 'el ': 11, 'l =': 6, '= 0': 14, ' 0\n': 10, '0\n ': 9, '  f': 6, ' fo': 7, 'for': 7, 'or ': 20, 'r e': 9, 'ch ': 9, 'h i': 3, ' in': 8, 'in ': 7, 'n r': 3, ' ra': 3, 'ran': 4, 'ang': 3, 'nge': 3, 'ge(': 3, 'e(e': 3, '(ep': 6, 'hs)': 3, 's):': 3, '  d': 6, ' dw': 8, 'dw ': 8, 'w =': 4, '  e': 9, ' er': 9, 'r X': 3, ' Xi': 3, 'Xi,': 9, ',yi': 6, 'yi ': 3, 'i i': 3, 'n z': 3, ' zi': 3, 'zip': 3, 'ip(': 3, 'p(X': 3, ',y)': 3, 'y):': 3, '  y': 3, ' y_': 5, 'd =': 3, '= p': 4, '(Xi': 6, 'i,w': 3, 'w +': 2, ' +=': 6, '+= ': 6, '= c': 6, 'd)\n': 6, 'r +': 3, '\n\n ': 7, '= v': 3, 'l +': 5, '+ (': 3, ' (d': 3, '(dw': 3, 'dw*': 1, 'w**': 1, '**2': 1, '*2)': 1, '2)\n': 4, '  w': 3, 'ts ': 9, 's -': 3, ' -=': 3, '-= ': 3, '= (': 6, '((l': 3, '(lr': 3, 'lr*': 1, 'r*d': 1, '*dw': 1, 'dw)': 3, 'w)/': 1, ')/(': 1, '/(n': 1, '(np': 3, 'sqr': 3, 'qrt': 3, 'rt(': 4, 't(v': 3, '(ve': 3, 'el+': 1, 'l+e': 1, '+ep': 1, 'on)': 3, 'n))': 3, 'r /': 3, ' /=': 3, '/= ': 3, ' (2': 3, '(2*': 3, '2*l': 3, '*le': 3, 'len': 4, 'en(': 4, 'n(X': 4, '(X)': 4, 'X))': 3, '  i': 6, ' if': 4, 'if ': 4, 'f (': 3, ' (e': 3, 'ch+': 9, 'h+1': 9, '+1)': 3, '1)%': 3, ')%5': 3, '%50': 3, '50 ': 3, '0 =': 3, ' ==': 4, '== ': 4, ' 0:': 3, '0:\n': 3, '  p': 6, 'pri': 12, 'rin': 12, 'int': 12, 'nt(': 12, 't(f': 6, ""(f'"": 6, ""f'W"": 3, ""'We"": 3, 'Wei': 3, ' af': 6, 'aft': 6, 'fte': 6, 'ter': 7, 'er ': 7, 'h {': 6, ' {e': 6, '{ep': 6, '+1}': 6, '1} ': 6, '} :': 6, ' : ': 7, "": '"": 7, "" ',"": 6, ""',w"": 3, ""f'E"": 3, ""'Er"": 3, 'Err': 3, 'r a': 3, ""',e"": 3, ',er': 3, 'or)': 3, 'r)\n': 3, '\n\n\n': 3, 'n_s': 2, '_st': 3, 'sto': 2, 'toc': 3, 'cha': 3, 'has': 3, 'ast': 3, 'sti': 3, 'tic': 3, 'ic(': 2, 'c(X': 2, 'w *': 2, ' **': 2, '** ': 2, '* 2': 2, ' 2)': 2, 'r *': 2, ' * ': 2, '* d': 2, 'w) ': 2, ') /': 2, ' / ': 2, '/ (': 2, ' (n': 2, '+ e': 2, 'n_m': 2, '_mi': 2, 'min': 2, 'ini': 3, 'nib': 2, 'iba': 2, 'bat': 2, 'atc': 3, 'tch': 3, 'ch(': 2, 'h(X': 2, '-8,': 1, '8, ': 1, ', b': 1, ' bs': 1, 'bs ': 2, 's =': 4, '= 3': 1, ' 32': 1, '32)': 1, '2):': 1, ' i ': 2, 'i =': 1, 'i +': 1, ' 1\n': 1, '1\n ': 1, 'f i': 1, ' i%': 1, 'i%b': 1, '%bs': 1, ' 0 ': 1, '0 o': 1, ' or': 1, 'r i': 1, ' i=': 1, 'i==': 1, '==l': 1, '=le': 1, 'X):': 1, '0\n\n': 1, '\nda': 2, 'dat': 4, 'ata': 4, 'tas': 4, 'ase': 4, 'set': 4, 'pd.': 1, 'd.r': 1, '.re': 1, 'rea': 1, 'ead': 1, 'ad_': 1, 'd_c': 1, '_cs': 1, 'csv': 2, 'sv(': 1, ""v('"": 1, ""('b"": 1, ""'ba"": 1, 'ban': 1, 'ank': 1, 'nk_': 1, 'k_n': 1, '_no': 1, 'not': 1, 'ote': 1, 'te.': 1, 'e.c': 1, '.cs': 1, ""sv'"": 1, ""v')"": 1, ""')\n"": 5, ')\nd': 1, 'et.': 1, 't.i': 1, '.in': 1, 'ins': 1, 'nse': 1, 'ser': 1, 'ert': 1, 't(4': 1, '(4,': 1, ""4,'"": 1, "",'x"": 2, ""'x0"": 2, ""x0'"": 2, ""0',"": 1, ""',1"": 1, ',1)': 1, '1)\n': 1, '\n\nX': 2, '\nX ': 1, 'X =': 1, '= d': 2, ' da': 2, 'et[': 2, 't[[': 1, ""[['"": 1, ""['v"": 1, ""'va"": 1, 'var': 1, 'ari': 1, 'ria': 1, 'ian': 1, 'anc': 1, 'nce': 1, ""ce'"": 1, ""e',"": 1, ""','"": 4, "",'s"": 1, ""'sk"": 1, 'ske': 1, 'kew': 1, 'ewn': 1, 'wne': 1, 'nes': 1, 'ess': 1, ""ss'"": 2, ""s',"": 2, "",'c"": 1, ""'cu"": 1, 'cur': 1, 'urt': 1, 'rto': 1, 'tos': 1, 'osi': 1, 'sis': 1, ""is'"": 1, "",'e"": 1, ""'en"": 1, 'ent': 1, 'ntr': 1, 'tro': 1, 'rop': 1, 'opy': 4, ""py'"": 1, ""y',"": 1, ""0']"": 1, ""']]"": 1, ']].': 1, '].v': 1, '.va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ues': 1, 'es\n': 1, 's\ny': 1, '\ny ': 1, 'y =': 1, ""t['"": 1, ""['c"": 1, ""'cl"": 1, 'cla': 1, 'las': 1, 'ass': 1, ""s']"": 1, ""']\n"": 1, ']\n\n': 1, '\nX_': 1, 'X_t': 5, '_tr': 8, 'in,': 8, 'n, ': 2, ', X': 1, ' X_': 1, 'st,': 1, 't, ': 1, 'y_t': 5, 'st ': 1, '= t': 1, 'it(': 2, 'y,r': 1, ',ra': 1, 'ndo': 1, 'dom': 1, 'om_': 1, 'm_s': 1, 'sta': 1, 'tat': 1, 'te=': 1, 'e=1': 1, '=13': 1, '13,': 1, '3,t': 1, ',te': 1, '_si': 1, 'siz': 1, 'ize': 1, 'ze=': 1, 'e=0': 1, '0.2': 1, '.2)': 1, ')\nw': 2, '\nwe': 2, '= i': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut(': 1, ""t('"": 4, ""('E"": 1, ""'En"": 1, 'Ent': 1, 'nte': 1, 'r 4': 1, ' 4 ': 1, '4 w': 1, ' an': 1, 'nd ': 1, 'd 1': 1, ' 1 ': 1, '1 b': 1, ' bi': 1, 'bia': 1, 'ias': 1, 's :': 1, "" ')"": 1, ""')."": 1, ').s': 1, '.sp': 1, 't()': 4, '()\n': 4, 'p.a': 1, '.ar': 1, 'arr': 1, 'rra': 1, 'ray': 1, 'ay(': 1, 'y([': 1, '([f': 1, '[fl': 1, 'flo': 1, 'loa': 1, 'oat': 1, 'at(': 1, 't(w': 1, '(we': 1, 'ht)': 1, 't) ': 1, ') f': 1, 'r w': 1, 'ht ': 1, 't i': 1, 'n w': 1, 'ts]': 1, 's],': 1, '], ': 1, ', d': 1, ' dt': 1, 'dty': 1, 'typ': 1, 'ype': 1, 'pe=': 1, ""e='"": 1, ""='l"": 1, ""'lo"": 1, 'ong': 1, 'ngd': 1, 'gdo': 1, 'dou': 1, 'oub': 1, 'ubl': 1, 'ble': 1, ""le'"": 1, ""e')"": 1, '\n\np': 3, '\npr': 6, ')\np': 3, ""('-"": 3, ""'--"": 3, '---': 12, '-- ': 3, '- A': 3, ' Ad': 3, 'Ada': 3, 'dag': 3, 'agr': 3, 'gra': 3, 'rad': 3, 'ad ': 3, 'd (': 3, ' (V': 1, '(Va': 1, 'Van': 1, 'la)': 1, 'a) ': 1, ') -': 3, ' --': 3, ""--'"": 3, ""-')"": 3, ')\nt': 3, '\ntr': 3, '(X_': 3, 'n,y': 3, 'n,w': 3, 'ts.': 3, 's.c': 3, '.co': 3, 'cop': 3, 'py(': 3, 'y()': 3, '())': 3, ' (S': 1, '(St': 1, 'Sto': 1, 'ic)': 1, 'c) ': 1, ' (M': 1, '(Mi': 1, 'Min': 1, 'ni ': 1, 'i B': 1, ' Ba': 1, 'Bat': 1, 'ch)': 1, 'h) ': 1}"
Tushar Nankani,main_5.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 3, 'pandas': 1, 'as': 2, 'pd': 1, 'numpy': 1, 'np': 1, 'from': 1, 'sklearn.model_selection': 1, 'train_test_split': 1, 'def': 6, 'predict(x,weights,lambdaa': 1, '=': 50, '1):': 1, 'net': 1, 'np.dot(x,weights)': 1, 'return': 3, '(1/(1': 1, '+': 10, 'np.exp(-lambdaa*net)))': 1, 'calculate_dw(x,y,y_pred):': 1, '((y_pred': 1, '-': 13, 'y)*(y_pred)*(1-y_pred)*x)': 1, 'calculate_error(yi,y_pred):': 1, 'np.square(y_pred-yi)': 1, 'train_vanilla(x,': 1, 'y,': 3, 'weights,': 3, 'epochs=500,': 3, 'lr': 3, '=0.01,': 3, 'epsilon': 3, '1e-8,': 3, 'beta1': 3, '0.9,': 3, 'beta2': 3, '0.999):': 2, 'mom': 9, '0': 16, 'vel': 9, 'for': 7, 'epoch': 10, 'in': 7, 'range(epochs):': 3, 'dw': 6, 'error': 9, 'xi,yi': 3, 'zip(x,y):': 3, 'y_pred': 3, 'predict(xi,weights)': 3, '+=': 8, 'calculate_dw(xi,yi,y_pred)': 3, 'calculate_error(yi,y_pred)': 3, '(beta1': 6, '*': 14, 'mom)': 3, '((1': 6, 'beta1)': 3, 'dw)': 3, '(beta2': 6, 'vel)': 3, 'beta2)': 3, '(dw': 3, '**': 9, '2))': 3, 'step': 5, '1': 5, 'momcap': 3, '/': 8, '(1': 6, 'step))': 6, 'velcap': 3, 'weights': 6, '-=': 3, '((lr*momcap)/(np.sqrt(velcap+epsilon)))': 1, '/=': 3, '(2*len(x))': 3, 'if': 4, '(epoch+1)%50': 3, '==': 4, '0:': 3, ""print(f'weights"": 3, 'after': 6, '{epoch+1}': 6, ':': 7, ""',weights)"": 3, ""print(f'error"": 3, ""',error)"": 3, 'train_stochastic(x,': 1, '((lr': 2, 'momcap)': 2, '(np.sqrt(velcap': 2, 'epsilon)))': 2, 'train_minibatch(x,': 1, '0.999,': 1, 'bs': 1, '32):': 1, 'i': 2, 'i%bs': 1, 'or': 1, 'i==len(x):': 1, 'dataset': 1, ""pd.read_csv('bank_note.csv')"": 1, ""dataset.insert(4,'x0',1)"": 1, 'x': 1, ""dataset[['variance','skewness','curtosis','entropy','x0']].values"": 1, 'y': 1, ""dataset['class']"": 1, 'x_train,': 1, 'x_test,': 1, 'y_train,': 1, 'y_test': 1, 'train_test_split(x,y,random_state=13,test_size=0.2)': 1, ""input('enter"": 1, '4': 1, 'and': 1, 'bias': 1, ""').split()"": 1, 'np.array([float(weight)': 1, 'weight': 1, 'weights],': 1, ""dtype='longdouble')"": 1, 'print()': 3, ""print('----"": 3, 'adam': 3, '(vanilla)': 1, ""----')"": 3, 'train_vanilla(x_train,y_train,weights.copy())': 1, '(stochastic)': 1, 'train_stochastic(x_train,y_train,weights.copy())': 1, '(mini': 1, 'batch)': 1, 'train_minibatch(x_train,y_train,weights.copy())': 1}","{'imp': 3, 'mpo': 3, 'por': 3, 'ort': 3, 'rt ': 3, 't p': 1, ' pa': 1, 'pan': 1, 'and': 3, 'nda': 1, 'das': 1, 'as ': 4, 's a': 5, ' as': 2, 's p': 1, ' pd': 2, 'pd\n': 1, 'd\ni': 1, '\nim': 1, 't n': 1, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, 's n': 1, ' np': 5, 'np\n': 1, 'p\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 10, 'm s': 1, ' sk': 1, 'skl': 1, 'kle': 1, 'lea': 1, 'ear': 1, 'arn': 1, 'rn.': 1, 'n.m': 1, '.mo': 1, 'mod': 1, 'ode': 1, 'del': 1, 'el_': 1, 'l_s': 1, '_se': 1, 'sel': 1, 'ele': 1, 'lec': 1, 'ect': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'on ': 4, 'n i': 1, ' im': 1, 't t': 1, ' tr': 5, 'tra': 16, 'rai': 16, 'ain': 16, 'in_': 8, 'n_t': 2, '_te': 4, 'tes': 5, 'est': 5, 'st_': 3, 't_s': 3, '_sp': 2, 'spl': 3, 'pli': 3, 'lit': 3, 'it\n': 1, 't\n\n': 1, '\n\nd': 7, '\nde': 6, 'def': 6, 'ef ': 6, 'f p': 1, ' pr': 10, 'pre': 19, 'red': 19, 'edi': 4, 'dic': 4, 'ict': 4, 'ct(': 4, 't(X': 6, '(X,': 10, 'X,w': 2, ',we': 11, 'wei': 23, 'eig': 26, 'igh': 26, 'ght': 26, 'hts': 24, 'ts,': 4, 's,l': 1, ',la': 1, 'lam': 2, 'amb': 2, 'mbd': 2, 'bda': 2, 'daa': 2, 'aa ': 1, 'a =': 1, ' = ': 50, '= 1': 7, ' 1)': 1, '1):': 1, '):\n': 13, ':\n ': 16, '\n  ': 66, '   ': 484, '  n': 1, ' ne': 1, 'net': 2, 'et ': 2, 't =': 3, '= n': 2, 'np.': 7, 'p.d': 1, '.do': 1, 'dot': 1, 'ot(': 1, 'ts)': 7, 's)\n': 7, ')\n ': 25, '  r': 3, ' re': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n (': 2, ' (1': 7, '(1/': 1, '1/(': 1, '/(1': 1, '(1 ': 13, '1 +': 1, ' + ': 10, '+ n': 1, 'p.e': 1, '.ex': 1, 'exp': 1, 'xp(': 1, 'p(-': 1, '(-l': 1, '-la': 1, 'aa*': 1, 'a*n': 1, '*ne': 1, 'et)': 1, 't))': 1, ')))': 4, '))\n': 19, ')\n\n': 16, 'f c': 2, ' ca': 8, 'cal': 8, 'alc': 8, 'lcu': 8, 'cul': 8, 'ula': 8, 'lat': 8, 'ate': 9, 'te_': 8, 'e_d': 4, '_dw': 4, 'dw(': 4, 'w(X': 4, 'X,y': 5, ',y,': 2, 'y,y': 1, ',y_': 11, 'y_p': 15, '_pr': 15, 'ed)': 10, 'd):': 2, ' ((': 10, '((y': 1, '(y_': 3, 'ed ': 4, 'd -': 1, ' - ': 13, '- y': 1, ' y)': 1, 'y)*': 1, ')*(': 2, '*(y': 1, 'd)*': 2, '*(1': 1, '(1-': 1, '1-y': 1, '-y_': 1, ')*X': 1, '*X)': 1, 'X)\n': 1, 'e_e': 4, '_er': 4, 'err': 16, 'rro': 19, 'ror': 19, 'or(': 4, 'r(y': 4, '(yi': 4, 'yi,': 7, 'i,y': 13, 'n n': 1, 'p.s': 4, '.sq': 4, 'squ': 1, 'qua': 1, 'uar': 1, 'are': 1, 're(': 1, 'e(y': 1, 'ed-': 1, 'd-y': 1, '-yi': 1, 'yi)': 1, 'i)\n': 1, 'f t': 3, 'n_v': 2, '_va': 2, 'van': 2, 'ani': 3, 'nil': 3, 'ill': 3, 'lla': 3, 'la(': 2, 'a(X': 2, 'X, ': 3, ', y': 5, ' y,': 3, 'y, ': 3, ', w': 3, ' we': 9, 's, ': 3, ', e': 6, ' ep': 18, 'epo': 25, 'poc': 25, 'och': 28, 'chs': 6, 'hs=': 3, 's=5': 3, '=50': 3, '500': 3, '00,': 3, '0, ': 3, ', l': 3, ' lr': 3, 'lr ': 5, 'r =': 6, ' =0': 3, '=0.': 4, '0.0': 3, '.01': 3, '01,': 3, '1, ': 3, 'eps': 6, 'psi': 6, 'sil': 6, 'ilo': 6, 'lon': 7, 'n =': 3, ' 1e': 3, '1e-': 3, 'e-8': 3, '-8,': 3, '8, ': 3, ', b': 7, ' be': 12, 'bet': 24, 'eta': 24, 'ta1': 12, 'a1 ': 9, '1 =': 3, '= 0': 25, ' 0.': 6, '0.9': 6, '.9,': 3, '9, ': 4, 'ta2': 12, 'a2 ': 9, '2 =': 3, '.99': 3, '999': 3, '99)': 2, '9):': 2, '  m': 9, ' mo': 17, 'mom': 18, 'm =': 6, ' 0\n': 15, '0\n ': 13, '  v': 9, ' ve': 15, 'vel': 18, 'el ': 9, 'l =': 6, '  f': 6, ' fo': 7, 'for': 7, 'or ': 20, 'r e': 9, 'ch ': 10, 'h i': 3, ' in': 8, 'in ': 7, 'n r': 3, ' ra': 3, 'ran': 4, 'ang': 3, 'nge': 3, 'ge(': 3, 'e(e': 3, '(ep': 6, 'hs)': 3, 's):': 3, '  d': 6, ' dw': 9, 'dw ': 9, 'w =': 4, '  e': 9, ' er': 9, '0\n\n': 2, '\n\n ': 8, 'r X': 3, ' Xi': 3, 'Xi,': 9, ',yi': 6, 'yi ': 3, 'i i': 3, 'n z': 3, ' zi': 3, 'zip': 3, 'ip(': 3, 'p(X': 3, ',y)': 3, 'y):': 3, '  y': 3, ' y_': 5, 'd =': 3, '= p': 4, '(Xi': 6, 'i,w': 3, 'w +': 2, ' +=': 8, '+= ': 8, '= c': 6, 'd)\n': 6, 'r +': 3, '= (': 12, ' (b': 12, '(be': 12, '1 *': 6, ' * ': 14, '* m': 5, 'om)': 3, 'm) ': 3, ') +': 6, '+ (': 6, '((1': 6, '1 -': 12, '- b': 6, 'a1)': 3, '1) ': 3, ') *': 6, '* d': 3, 'dw)': 3, 'w)\n': 3, '2 *': 6, '* v': 3, 'el)': 3, 'l) ': 3, 'a2)': 3, '2) ': 3, '* (': 3, ' (d': 3, '(dw': 3, 'w *': 3, ' **': 9, '** ': 9, '* 2': 3, ' 2)': 3, '2))': 3, '  s': 5, ' st': 11, 'ste': 11, 'tep': 11, 'ep ': 5, 'p =': 9, '= e': 1, 'h +': 1, '+ 1': 1, ' 1\n': 4, '1\n ': 4, 'omc': 6, 'mca': 6, 'cap': 12, 'ap ': 8, '= m': 3, 'm /': 3, ' / ': 8, '/ (': 8, '- (': 6, '* s': 6, 'ep)': 6, 'p))': 6, 'elc': 6, 'lca': 6, '= v': 3, 'l /': 3, '  w': 3, 'ts ': 9, 's -': 3, ' -=': 3, '-= ': 3, '((l': 3, '(lr': 3, 'lr*': 1, 'r*m': 1, '*mo': 1, 'ap)': 3, 'p)/': 1, ')/(': 1, '/(n': 1, '(np': 3, 'sqr': 3, 'qrt': 3, 'rt(': 4, 't(v': 3, '(ve': 3, 'ap+': 1, 'p+e': 1, '+ep': 1, 'on)': 3, 'n))': 3, 'r /': 3, ' /=': 3, '/= ': 3, ' (2': 3, '(2*': 3, '2*l': 3, '*le': 3, 'len': 4, 'en(': 4, 'n(X': 4, '(X)': 4, 'X))': 3, '  i': 6, ' if': 4, 'if ': 4, 'f (': 3, ' (e': 3, 'ch+': 9, 'h+1': 9, '+1)': 3, '1)%': 3, ')%5': 3, '%50': 3, '50 ': 3, '0 =': 3, ' ==': 4, '== ': 4, ' 0:': 3, '0:\n': 3, '  p': 6, 'pri': 12, 'rin': 12, 'int': 12, 'nt(': 12, 't(f': 6, ""(f'"": 6, ""f'W"": 3, ""'We"": 3, 'Wei': 3, ' af': 6, 'aft': 6, 'fte': 6, 'ter': 7, 'er ': 7, 'h {': 6, ' {e': 6, '{ep': 6, '+1}': 6, '1} ': 6, '} :': 6, ' : ': 7, "": '"": 7, "" ',"": 6, ""',w"": 3, ""f'E"": 3, ""'Er"": 3, 'Err': 3, 'r a': 3, ""',e"": 3, ',er': 3, 'or)': 3, 'r)\n': 3, '\n\n\n': 3, 'n_s': 2, '_st': 3, 'sto': 2, 'toc': 3, 'cha': 3, 'has': 3, 'ast': 3, 'sti': 3, 'tic': 3, 'ic(': 2, 'c(X': 2, 'p +': 4, 'r *': 2, 'p) ': 2, ') /': 2, ' (n': 2, '+ e': 2, 'n_m': 2, '_mi': 2, 'min': 2, 'ini': 3, 'nib': 2, 'iba': 2, 'bat': 2, 'atc': 3, 'tch': 3, 'ch(': 2, 'h(X': 2, '99,': 1, ' bs': 1, 'bs ': 2, 's =': 4, '= 3': 1, ' 32': 1, '32)': 1, '2):': 1, ' i ': 2, 'i =': 1, 'i +': 1, 'f i': 1, ' i%': 1, 'i%b': 1, '%bs': 1, ' 0 ': 1, '0 o': 1, ' or': 1, 'r i': 1, ' i=': 1, 'i==': 1, '==l': 1, '=le': 1, 'X):': 1, '\nda': 2, 'dat': 4, 'ata': 4, 'tas': 4, 'ase': 4, 'set': 4, 'pd.': 1, 'd.r': 1, '.re': 1, 'rea': 1, 'ead': 1, 'ad_': 1, 'd_c': 1, '_cs': 1, 'csv': 2, 'sv(': 1, ""v('"": 1, ""('b"": 1, ""'ba"": 1, 'ban': 1, 'ank': 1, 'nk_': 1, 'k_n': 1, '_no': 1, 'not': 1, 'ote': 1, 'te.': 1, 'e.c': 1, '.cs': 1, ""sv'"": 1, ""v')"": 1, ""')\n"": 5, ')\nd': 1, 'et.': 1, 't.i': 1, '.in': 1, 'ins': 1, 'nse': 1, 'ser': 1, 'ert': 1, 't(4': 1, '(4,': 1, ""4,'"": 1, "",'x"": 2, ""'x0"": 2, ""x0'"": 2, ""0',"": 1, ""',1"": 1, ',1)': 1, '1)\n': 1, '\n\nX': 2, '\nX ': 1, 'X =': 1, '= d': 2, ' da': 2, 'et[': 2, 't[[': 1, ""[['"": 1, ""['v"": 1, ""'va"": 1, 'var': 1, 'ari': 1, 'ria': 1, 'ian': 1, 'anc': 1, 'nce': 1, ""ce'"": 1, ""e',"": 1, ""','"": 4, "",'s"": 1, ""'sk"": 1, 'ske': 1, 'kew': 1, 'ewn': 1, 'wne': 1, 'nes': 1, 'ess': 1, ""ss'"": 2, ""s',"": 2, "",'c"": 1, ""'cu"": 1, 'cur': 1, 'urt': 1, 'rto': 1, 'tos': 1, 'osi': 1, 'sis': 1, ""is'"": 1, "",'e"": 1, ""'en"": 1, 'ent': 1, 'ntr': 1, 'tro': 1, 'rop': 1, 'opy': 4, ""py'"": 1, ""y',"": 1, ""0']"": 1, ""']]"": 1, ']].': 1, '].v': 1, '.va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ues': 1, 'es\n': 1, 's\ny': 1, '\ny ': 1, 'y =': 1, ""t['"": 1, ""['c"": 1, ""'cl"": 1, 'cla': 1, 'las': 1, 'ass': 1, ""s']"": 1, ""']\n"": 1, ']\n\n': 1, '\nX_': 1, 'X_t': 5, '_tr': 8, 'in,': 8, 'n, ': 2, ', X': 1, ' X_': 1, 'st,': 1, 't, ': 1, 'y_t': 5, 'st ': 1, '= t': 1, 'it(': 2, 'y,r': 1, ',ra': 1, 'ndo': 1, 'dom': 1, 'om_': 1, 'm_s': 1, 'sta': 1, 'tat': 1, 'te=': 1, 'e=1': 1, '=13': 1, '13,': 1, '3,t': 1, ',te': 1, '_si': 1, 'siz': 1, 'ize': 1, 'ze=': 1, 'e=0': 1, '0.2': 1, '.2)': 1, '2)\n': 1, ')\nw': 2, '\nwe': 2, '= i': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut(': 1, ""t('"": 4, ""('E"": 1, ""'En"": 1, 'Ent': 1, 'nte': 1, 'r 4': 1, ' 4 ': 1, '4 w': 1, ' an': 1, 'nd ': 1, 'd 1': 1, ' 1 ': 1, '1 b': 1, ' bi': 1, 'bia': 1, 'ias': 1, 's :': 1, "" ')"": 1, ""')."": 1, ').s': 1, '.sp': 1, 't()': 4, '()\n': 4, 'p.a': 1, '.ar': 1, 'arr': 1, 'rra': 1, 'ray': 1, 'ay(': 1, 'y([': 1, '([f': 1, '[fl': 1, 'flo': 1, 'loa': 1, 'oat': 1, 'at(': 1, 't(w': 1, '(we': 1, 'ht)': 1, 't) ': 1, ') f': 1, 'r w': 1, 'ht ': 1, 't i': 1, 'n w': 1, 'ts]': 1, 's],': 1, '], ': 1, ', d': 1, ' dt': 1, 'dty': 1, 'typ': 1, 'ype': 1, 'pe=': 1, ""e='"": 1, ""='l"": 1, ""'lo"": 1, 'ong': 1, 'ngd': 1, 'gdo': 1, 'dou': 1, 'oub': 1, 'ubl': 1, 'ble': 1, ""le'"": 1, ""e')"": 1, '\n\np': 3, '\npr': 6, ')\np': 3, ""('-"": 3, ""'--"": 3, '---': 12, '-- ': 3, '- A': 3, ' Ad': 3, 'Ada': 3, 'dam': 3, 'am ': 3, 'm (': 3, ' (V': 1, '(Va': 1, 'Van': 1, 'la)': 1, 'a) ': 1, ') -': 3, ' --': 3, ""--'"": 3, ""-')"": 3, ')\nt': 3, '\ntr': 3, '(X_': 3, 'n,y': 3, 'n,w': 3, 'ts.': 3, 's.c': 3, '.co': 3, 'cop': 3, 'py(': 3, 'y()': 3, '())': 3, ' (S': 1, '(St': 1, 'Sto': 1, 'ic)': 1, 'c) ': 1, ' (M': 1, '(Mi': 1, 'Min': 1, 'ni ': 1, 'i B': 1, ' Ba': 1, 'Bat': 1, 'ch)': 1, 'h) ': 1}"
Tushar Nankani,main_6.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 3, 'pandas': 1, 'as': 2, 'pd': 1, 'numpy': 1, 'np': 1, 'from': 1, 'sklearn.model_selection': 1, 'train_test_split': 1, 'def': 6, 'predict(x,weights,lambdaa': 1, '=': 32, '1):': 1, 'net': 1, 'np.dot(x,weights)': 1, 'return': 3, '(1/(1': 1, '+': 6, 'np.exp(-lambdaa*net)))': 1, 'calculate_dw(x,y,y_pred):': 1, '((y_pred': 1, '-': 4, 'y)*(y_pred)*(1-y_pred)*x)': 1, 'calculate_error(yi,y_pred):': 1, 'np.square(y_pred-yi)': 1, 'train_vanilla(x,': 1, 'y,': 3, 'weights,': 3, 'epochs=500,': 3, 'lr': 3, '=0.001,': 3, 'epsilon': 3, '1e-8,': 3, 'beta': 3, '0.5):': 2, 'vel': 6, '0': 11, 'for': 7, 'epoch': 9, 'in': 7, 'range(epochs):': 3, 'dw': 6, 'error': 9, 'xi,yi': 3, 'zip(x,y):': 3, 'y_pred': 3, 'predict(xi,weights)': 3, '+=': 6, 'calculate_dw(xi,yi,y_pred)': 3, 'calculate_error(yi,y_pred)': 3, '(beta': 3, '*': 8, 'vel)': 3, '((1': 3, 'beta)': 3, '(dw': 3, '**': 3, '2))': 3, 'weights': 6, '-=': 3, '((lr*dw)/(np.sqrt(vel+epsilon)))': 1, '/=': 3, '(2*len(x))': 3, 'if': 4, '(epoch+1)%50': 3, '==': 4, '0:': 3, ""print(f'weights"": 3, 'after': 6, '{epoch+1}': 6, ':': 7, ""',weights)"": 3, ""print(f'error"": 3, ""',error)"": 3, 'train_stochastic(x,': 1, '((lr': 2, 'dw)': 2, '/': 2, '(np.sqrt(vel': 2, 'epsilon)))': 2, 'train_minibatch(x,': 1, '0.5,': 1, 'bs': 1, '32):': 1, 'i': 2, '1': 2, 'i%bs': 1, 'or': 1, 'i==len(x):': 1, 'dataset': 1, ""pd.read_csv('bank_note.csv')"": 1, ""dataset.insert(4,'x0',1)"": 1, 'x': 1, ""dataset[['variance','skewness','curtosis','entropy','x0']].values"": 1, 'y': 1, ""dataset['class']"": 1, 'x_train,': 1, 'x_test,': 1, 'y_train,': 1, 'y_test': 1, 'train_test_split(x,y,random_state=13,test_size=0.2)': 1, ""input('enter"": 1, '4': 1, 'and': 1, 'bias': 1, ""').split()"": 1, 'np.array([float(weight)': 1, 'weight': 1, 'weights],': 1, ""dtype='longdouble')"": 1, 'print()': 3, ""print('----"": 3, 'rmsprop': 3, '(vanilla)': 1, ""----')"": 3, 'train_vanilla(x_train,y_train,weights.copy())': 1, '(stochastic)': 1, 'train_stochastic(x_train,y_train,weights.copy())': 1, '(mini': 1, 'batch)': 1, 'train_minibatch(x_train,y_train,weights.copy())': 1}","{'imp': 3, 'mpo': 3, 'por': 3, 'ort': 3, 'rt ': 3, 't p': 1, ' pa': 1, 'pan': 1, 'and': 3, 'nda': 1, 'das': 1, 'as ': 4, 's a': 5, ' as': 2, 's p': 1, ' pd': 2, 'pd\n': 1, 'd\ni': 1, '\nim': 1, 't n': 1, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, 's n': 1, ' np': 5, 'np\n': 1, 'p\nf': 1, '\nfr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm s': 1, ' sk': 1, 'skl': 1, 'kle': 1, 'lea': 1, 'ear': 1, 'arn': 1, 'rn.': 1, 'n.m': 1, '.mo': 1, 'mod': 1, 'ode': 1, 'del': 1, 'el_': 1, 'l_s': 1, '_se': 1, 'sel': 1, 'ele': 1, 'lec': 1, 'ect': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'on ': 4, 'n i': 1, ' im': 1, 't t': 1, ' tr': 5, 'tra': 16, 'rai': 16, 'ain': 16, 'in_': 8, 'n_t': 2, '_te': 4, 'tes': 5, 'est': 5, 'st_': 3, 't_s': 3, '_sp': 2, 'spl': 3, 'pli': 3, 'lit': 3, 'it\n': 1, 't\n\n': 1, '\n\nd': 7, '\nde': 6, 'def': 6, 'ef ': 6, 'f p': 1, ' pr': 10, 'pre': 19, 'red': 19, 'edi': 4, 'dic': 4, 'ict': 4, 'ct(': 4, 't(X': 6, '(X,': 10, 'X,w': 2, ',we': 11, 'wei': 23, 'eig': 26, 'igh': 26, 'ght': 26, 'hts': 24, 'ts,': 4, 's,l': 1, ',la': 1, 'lam': 2, 'amb': 2, 'mbd': 2, 'bda': 2, 'daa': 2, 'aa ': 1, 'a =': 4, ' = ': 32, '= 1': 5, ' 1)': 1, '1):': 1, '):\n': 13, ':\n ': 16, '\n  ': 49, '   ': 354, '  n': 1, ' ne': 1, 'net': 2, 'et ': 2, 't =': 3, '= n': 2, 'np.': 7, 'p.d': 1, '.do': 1, 'dot': 1, 'ot(': 1, 'ts)': 7, 's)\n': 7, ')\n ': 16, '  r': 3, ' re': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n (': 2, ' (1': 1, '(1/': 1, '1/(': 1, '/(1': 1, '(1 ': 4, '1 +': 1, ' + ': 6, '+ n': 1, 'p.e': 1, '.ex': 1, 'exp': 1, 'xp(': 1, 'p(-': 1, '(-l': 1, '-la': 1, 'aa*': 1, 'a*n': 1, '*ne': 1, 'et)': 1, 't))': 1, ')))': 4, '))\n': 13, ')\n\n': 16, 'f c': 2, ' ca': 8, 'cal': 8, 'alc': 8, 'lcu': 8, 'cul': 8, 'ula': 8, 'lat': 8, 'ate': 9, 'te_': 8, 'e_d': 4, '_dw': 4, 'dw(': 4, 'w(X': 4, 'X,y': 5, ',y,': 2, 'y,y': 1, ',y_': 11, 'y_p': 15, '_pr': 15, 'ed)': 10, 'd):': 2, ' ((': 7, '((y': 1, '(y_': 3, 'ed ': 4, 'd -': 1, ' - ': 4, '- y': 1, ' y)': 1, 'y)*': 1, ')*(': 2, '*(y': 1, 'd)*': 2, '*(1': 1, '(1-': 1, '1-y': 1, '-y_': 1, ')*X': 1, '*X)': 1, 'X)\n': 1, 'e_e': 4, '_er': 4, 'err': 16, 'rro': 19, 'ror': 19, 'or(': 4, 'r(y': 4, '(yi': 4, 'yi,': 7, 'i,y': 13, 'n n': 1, 'p.s': 4, '.sq': 4, 'squ': 1, 'qua': 1, 'uar': 1, 'are': 1, 're(': 1, 'e(y': 1, 'ed-': 1, 'd-y': 1, '-yi': 1, 'yi)': 1, 'i)\n': 1, 'f t': 3, 'n_v': 2, '_va': 2, 'van': 2, 'ani': 3, 'nil': 3, 'ill': 3, 'lla': 3, 'la(': 2, 'a(X': 2, 'X, ': 3, ', y': 5, ' y,': 3, 'y, ': 3, ', w': 3, ' we': 9, 's, ': 3, ', e': 6, ' ep': 17, 'epo': 24, 'poc': 24, 'och': 27, 'chs': 6, 'hs=': 3, 's=5': 3, '=50': 3, '500': 3, '00,': 3, '0, ': 3, ', l': 3, ' lr': 3, 'lr ': 5, 'r =': 6, ' =0': 3, '=0.': 4, '0.0': 3, '.00': 3, '001': 3, '01,': 3, '1, ': 3, 'eps': 6, 'psi': 6, 'sil': 6, 'ilo': 6, 'lon': 7, 'n =': 3, ' 1e': 3, '1e-': 3, 'e-8': 3, '-8,': 3, '8, ': 3, ', b': 4, ' be': 6, 'bet': 9, 'eta': 9, 'ta ': 6, '= 0': 17, ' 0.': 3, '0.5': 3, '.5)': 2, '5):': 2, '  v': 6, ' ve': 9, 'vel': 12, 'el ': 8, 'l =': 6, ' 0\n': 10, '0\n ': 8, '  f': 6, ' fo': 7, 'for': 7, 'or ': 20, 'r e': 9, 'ch ': 9, 'h i': 3, ' in': 8, 'in ': 7, 'n r': 3, ' ra': 3, 'ran': 4, 'ang': 3, 'nge': 3, 'ge(': 3, 'e(e': 3, '(ep': 6, 'hs)': 3, 's):': 3, '  d': 6, ' dw': 8, 'dw ': 9, 'w =': 4, '  e': 9, ' er': 9, '0\n\n': 2, '\n\n ': 8, 'r X': 3, ' Xi': 3, 'Xi,': 9, ',yi': 6, 'yi ': 3, 'i i': 3, 'n z': 3, ' zi': 3, 'zip': 3, 'ip(': 3, 'p(X': 3, ',y)': 3, 'y):': 3, '  y': 3, ' y_': 5, 'd =': 3, '= p': 4, '(Xi': 6, 'i,w': 3, 'w +': 2, ' +=': 6, '+= ': 6, '= c': 6, 'd)\n': 6, 'r +': 3, '= (': 9, ' (b': 3, '(be': 3, 'a *': 3, ' * ': 8, '* v': 3, 'el)': 3, 'l) ': 3, ') +': 3, '+ (': 3, '((1': 3, '1 -': 3, '- b': 3, 'ta)': 3, 'a) ': 4, ') *': 3, '* (': 3, ' (d': 3, '(dw': 3, 'w *': 3, ' **': 3, '** ': 3, '* 2': 3, ' 2)': 3, '2))': 3, '  w': 3, 'ts ': 9, 's -': 3, ' -=': 3, '-= ': 3, '((l': 3, '(lr': 3, 'lr*': 1, 'r*d': 1, '*dw': 1, 'dw)': 3, 'w)/': 1, ')/(': 1, '/(n': 1, '(np': 3, 'sqr': 3, 'qrt': 3, 'rt(': 4, 't(v': 3, '(ve': 3, 'el+': 1, 'l+e': 1, '+ep': 1, 'on)': 3, 'n))': 3, 'r /': 3, ' /=': 3, '/= ': 3, ' (2': 3, '(2*': 3, '2*l': 3, '*le': 3, 'len': 4, 'en(': 4, 'n(X': 4, '(X)': 4, 'X))': 3, '  i': 6, ' if': 4, 'if ': 4, 'f (': 3, ' (e': 3, 'ch+': 9, 'h+1': 9, '+1)': 3, '1)%': 3, ')%5': 3, '%50': 3, '50 ': 3, '0 =': 3, ' ==': 4, '== ': 4, ' 0:': 3, '0:\n': 3, '  p': 6, 'pri': 12, 'rin': 12, 'int': 12, 'nt(': 12, 't(f': 6, ""(f'"": 6, ""f'W"": 3, ""'We"": 3, 'Wei': 3, ' af': 6, 'aft': 6, 'fte': 6, 'ter': 7, 'er ': 7, 'h {': 6, ' {e': 6, '{ep': 6, '+1}': 6, '1} ': 6, '} :': 6, ' : ': 7, "": '"": 7, "" ',"": 6, ""',w"": 3, ""f'E"": 3, ""'Er"": 3, 'Err': 3, 'r a': 3, ""',e"": 3, ',er': 3, 'or)': 3, 'r)\n': 3, '\n\n\n': 3, 'n_s': 2, '_st': 3, 'sto': 2, 'toc': 3, 'cha': 3, 'has': 3, 'ast': 3, 'sti': 3, 'tic': 3, 'ic(': 2, 'c(X': 2, 'r *': 2, '* d': 2, 'w) ': 2, ') /': 2, ' / ': 2, '/ (': 2, ' (n': 2, 'l +': 2, '+ e': 2, 'n_m': 2, '_mi': 2, 'min': 2, 'ini': 3, 'nib': 2, 'iba': 2, 'bat': 2, 'atc': 3, 'tch': 3, 'ch(': 2, 'h(X': 2, '.5,': 1, '5, ': 1, ' bs': 1, 'bs ': 2, 's =': 4, '= 3': 1, ' 32': 1, '32)': 1, '2):': 1, ' i ': 2, 'i =': 1, 'i +': 1, ' 1\n': 1, '1\n ': 1, 'f i': 1, ' i%': 1, 'i%b': 1, '%bs': 1, ' 0 ': 1, '0 o': 1, ' or': 1, 'r i': 1, ' i=': 1, 'i==': 1, '==l': 1, '=le': 1, 'X):': 1, '\nda': 2, 'dat': 4, 'ata': 4, 'tas': 4, 'ase': 4, 'set': 4, 'pd.': 1, 'd.r': 1, '.re': 1, 'rea': 1, 'ead': 1, 'ad_': 1, 'd_c': 1, '_cs': 1, 'csv': 2, 'sv(': 1, ""v('"": 1, ""('b"": 1, ""'ba"": 1, 'ban': 1, 'ank': 1, 'nk_': 1, 'k_n': 1, '_no': 1, 'not': 1, 'ote': 1, 'te.': 1, 'e.c': 1, '.cs': 1, ""sv'"": 1, ""v')"": 1, ""')\n"": 5, ')\nd': 1, 'et.': 1, 't.i': 1, '.in': 1, 'ins': 1, 'nse': 1, 'ser': 1, 'ert': 1, 't(4': 1, '(4,': 1, ""4,'"": 1, "",'x"": 2, ""'x0"": 2, ""x0'"": 2, ""0',"": 1, ""',1"": 1, ',1)': 1, '1)\n': 1, '\n\nX': 2, '\nX ': 1, 'X =': 1, '= d': 2, ' da': 2, 'et[': 2, 't[[': 1, ""[['"": 1, ""['v"": 1, ""'va"": 1, 'var': 1, 'ari': 1, 'ria': 1, 'ian': 1, 'anc': 1, 'nce': 1, ""ce'"": 1, ""e',"": 1, ""','"": 4, "",'s"": 1, ""'sk"": 1, 'ske': 1, 'kew': 1, 'ewn': 1, 'wne': 1, 'nes': 1, 'ess': 1, ""ss'"": 2, ""s',"": 2, "",'c"": 1, ""'cu"": 1, 'cur': 1, 'urt': 1, 'rto': 1, 'tos': 1, 'osi': 1, 'sis': 1, ""is'"": 1, "",'e"": 1, ""'en"": 1, 'ent': 1, 'ntr': 1, 'tro': 1, 'rop': 4, 'opy': 4, ""py'"": 1, ""y',"": 1, ""0']"": 1, ""']]"": 1, ']].': 1, '].v': 1, '.va': 1, 'val': 1, 'alu': 1, 'lue': 1, 'ues': 1, 'es\n': 1, 's\ny': 1, '\ny ': 1, 'y =': 1, ""t['"": 1, ""['c"": 1, ""'cl"": 1, 'cla': 1, 'las': 1, 'ass': 1, ""s']"": 1, ""']\n"": 1, ']\n\n': 1, '\nX_': 1, 'X_t': 5, '_tr': 8, 'in,': 8, 'n, ': 2, ', X': 1, ' X_': 1, 'st,': 1, 't, ': 1, 'y_t': 5, 'st ': 1, '= t': 1, 'it(': 2, 'y,r': 1, ',ra': 1, 'ndo': 1, 'dom': 1, 'om_': 1, 'm_s': 1, 'sta': 1, 'tat': 1, 'te=': 1, 'e=1': 1, '=13': 1, '13,': 1, '3,t': 1, ',te': 1, '_si': 1, 'siz': 1, 'ize': 1, 'ze=': 1, 'e=0': 1, '0.2': 1, '.2)': 1, '2)\n': 1, ')\nw': 2, '\nwe': 2, '= i': 1, 'inp': 1, 'npu': 1, 'put': 1, 'ut(': 1, ""t('"": 4, ""('E"": 1, ""'En"": 1, 'Ent': 1, 'nte': 1, 'r 4': 1, ' 4 ': 1, '4 w': 1, ' an': 1, 'nd ': 1, 'd 1': 1, ' 1 ': 1, '1 b': 1, ' bi': 1, 'bia': 1, 'ias': 1, 's :': 1, "" ')"": 1, ""')."": 1, ').s': 1, '.sp': 1, 't()': 4, '()\n': 4, 'p.a': 1, '.ar': 1, 'arr': 1, 'rra': 1, 'ray': 1, 'ay(': 1, 'y([': 1, '([f': 1, '[fl': 1, 'flo': 1, 'loa': 1, 'oat': 1, 'at(': 1, 't(w': 1, '(we': 1, 'ht)': 1, 't) ': 1, ') f': 1, 'r w': 1, 'ht ': 1, 't i': 1, 'n w': 1, 'ts]': 1, 's],': 1, '], ': 1, ', d': 1, ' dt': 1, 'dty': 1, 'typ': 1, 'ype': 1, 'pe=': 1, ""e='"": 1, ""='l"": 1, ""'lo"": 1, 'ong': 1, 'ngd': 1, 'gdo': 1, 'dou': 1, 'oub': 1, 'ubl': 1, 'ble': 1, ""le'"": 1, ""e')"": 1, '\n\np': 3, '\npr': 6, ')\np': 3, ""('-"": 3, ""'--"": 3, '---': 12, '-- ': 3, '- R': 3, ' RM': 3, 'RMS': 3, 'MSP': 3, 'SPr': 3, 'Pro': 3, 'op ': 3, 'p (': 3, ' (V': 1, '(Va': 1, 'Van': 1, 'la)': 1, ') -': 3, ' --': 3, ""--'"": 3, ""-')"": 3, ')\nt': 3, '\ntr': 3, '(X_': 3, 'n,y': 3, 'n,w': 3, 'ts.': 3, 's.c': 3, '.co': 3, 'cop': 3, 'py(': 3, 'y()': 3, '())': 3, ' (S': 1, '(St': 1, 'Sto': 1, 'ic)': 1, 'c) ': 1, ' (M': 1, '(Mi': 1, 'Min': 1, 'ni ': 1, 'i B': 1, ' Ba': 1, 'Bat': 1, 'ch)': 1, 'h) ': 1}"
Tushar Nankani,main_7.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'import': 1, 'numpy': 2, 'as': 1, 'np': 1, '#': 14, 'custom': 1, 'padding': 4, 'function,': 1, 'alternatively': 1, 'use': 1, 'pad...': 1, 'def': 2, 'pad(matrix,': 1, 'p,': 1, 'p_val):': 1, 'hpad': 1, '=': 32, '[p_val]*iw': 1, 'vpad': 1, '[p_val]*(ih+(2*p))': 1, 'for': 8, 'i': 6, 'in': 8, 'range(p):': 2, 'matrix': 12, 'np.insert(matrix,0,hpad,axis=0)': 1, 'np.insert(matrix,': 3, 'len(matrix),': 1, 'hpad,': 1, 'axis=0)': 1, 'j': 5, '0,': 1, 'vpad,': 2, 'axis=1)': 2, 'len(matrix[0]),': 1, 'return': 2, 'pool(matrix,': 2, 'stride,': 1, 'pool_size):': 1, 'op_matrix': 2, 'np.array([[0]*ow': 1, 'range(oh)])': 1, 'ih': 2, 'len(matrix)': 1, 'iw': 2, 'len(matrix[0])': 1, '0': 6, 'oi': 2, 'oj': 3, 'while': 2, '(i+pool_size': 1, '<=': 2, 'ih):': 1, '(j+pool_size': 1, 'iw):': 1, 'window': 1, '[]': 1, 'ph': 1, 'range(pool_size):': 2, 'pw': 1, 'window.append(matrix[i+ph][j+pw])': 1, 'op_matrix[oi][oj]': 1, 'max(window)': 1, '+=': 2, '1': 4, 'j+stride': 1, 'i+stride': 1, ""int(input('enter"": 6, 'height': 1, 'of': 5, ':': 7, ""'))"": 7, 'width': 1, '[[0]*iw': 1, 'range(ih)]': 1, 'range(ih):': 1, 'range(iw):': 1, 'matrix[i][j]': 1, ""int(input(f'enter"": 1, 'value': 2, 'matrix[{i}][{j}]': 1, 'p': 1, 'amount': 2, 'p_val': 1, 's': 1, 'stride': 1, 'pool_size': 3, 'pool': 1, 'size': 1, 'ow': 1, '((iw': 1, '-': 2, '+': 4, '(2*p))//s)': 2, 'oh': 1, '((ih': 1, 'np.array(matrix)': 1, 'print()': 3, ""print('input"": 1, ':-': 3, ""')"": 3, 'print(matrix)': 3, 'np.pad(matrix,p,': 1, 'constant_values=p_val)': 1, ""print('after"": 2, 's,': 1, 'pool_size)': 1, 'pooling': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't n': 1, ' nu': 2, 'num': 2, 'ump': 2, 'mpy': 2, 'py ': 2, 'y a': 1, ' as': 1, 'as ': 1, 's n': 1, ' np': 8, 'np\n': 1, 'p\n\n': 1, '\n\n#': 1, '\n# ': 11, '# c': 1, ' cu': 1, 'cus': 1, 'ust': 1, 'sto': 1, 'tom': 1, 'om ': 1, 'm p': 1, ' pa': 5, 'pad': 12, 'add': 4, 'ddi': 4, 'din': 4, 'ing': 5, 'ng ': 5, 'g f': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'on,': 1, 'n, ': 1, ', a': 4, ' al': 1, 'alt': 1, 'lte': 1, 'ter': 10, 'ern': 1, 'rna': 1, 'nat': 1, 'ati': 1, 'tiv': 1, 'ive': 1, 'vel': 1, 'ely': 1, 'ly ': 1, 'y u': 1, ' us': 1, 'use': 1, 'se ': 1, 'e n': 1, 'y p': 1, 'ad.': 1, 'd..': 1, '...': 1, '..\n': 1, '.\n#': 1, '# d': 1, ' de': 1, 'def': 2, 'ef ': 2, 'f p': 3, 'ad(': 2, 'd(m': 3, '(ma': 17, 'mat': 33, 'atr': 34, 'tri': 38, 'rix': 34, 'ix,': 8, 'x, ': 6, ', p': 4, ' p,': 1, 'p, ': 2, ' p_': 1, 'p_v': 5, '_va': 6, 'val': 8, 'al)': 2, 'l):': 1, '):\n': 10, ':\n#': 3, '#  ': 9, '   ': 181, '  h': 1, ' hp': 2, 'hpa': 3, 'ad ': 2, 'd =': 2, ' = ': 32, '= [': 4, ' [p': 2, '[p_': 2, 'al]': 2, 'l]*': 2, ']*i': 2, '*iw': 2, 'iw\n': 1, 'w\n#': 1, '  v': 1, ' vp': 3, 'vpa': 3, ']*(': 1, '*(i': 1, '(ih': 4, 'ih+': 1, 'h+(': 1, '+(2': 1, '(2*': 3, '2*p': 3, '*p)': 3, 'p))': 3, '))\n': 8, ')\n#': 5, '\n#\n': 3, '#\n#': 3, '  f': 5, ' fo': 7, 'for': 8, 'or ': 8, 'r i': 4, ' i ': 6, 'i i': 4, ' in': 15, 'in ': 8, 'n r': 8, ' ra': 8, 'ran': 8, 'ang': 8, 'nge': 8, 'ge(': 8, 'e(p': 4, '(p)': 2, 'p):': 2, '  m': 5, ' ma': 10, 'ix ': 12, 'x =': 9, '= n': 7, 'np.': 7, 'p.i': 4, '.in': 4, 'ins': 4, 'nse': 4, 'ser': 4, 'ert': 4, 'rt(': 4, 't(m': 7, 'x,0': 1, ',0,': 1, '0,h': 1, ',hp': 1, 'ad,': 4, 'd,a': 1, ',ax': 1, 'axi': 4, 'xis': 4, 'is=': 4, 's=0': 2, '=0)': 2, '0)\n': 2, ', l': 2, ' le': 4, 'len': 4, 'en(': 4, 'n(m': 4, 'ix)': 6, 'x),': 1, '), ': 2, ', h': 1, 'd, ': 3, ' ax': 3, 'r j': 2, ' j ': 5, 'j i': 2, ', 0': 1, ' 0,': 1, '0, ': 1, ', v': 2, 's=1': 2, '=1)': 2, '1)\n': 2, 'ix[': 6, 'x[0': 2, '[0]': 4, '0])': 2, ']),': 1, '  r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n m': 1, 'ix\n': 2, 'x\n\n': 2, '\n\nd': 1, '\nde': 1, ' po': 7, 'poo': 12, 'ool': 13, 'ol(': 2, 'l(m': 2, ', s': 2, ' st': 2, 'str': 4, 'rid': 4, 'ide': 4, 'de,': 1, 'e, ': 1, 'ol_': 9, 'l_s': 9, '_si': 9, 'siz': 10, 'ize': 10, 'ze)': 4, 'e):': 3, ':\n ': 7, '\n  ': 23, '  o': 7, ' op': 3, 'op_': 3, 'p_m': 3, '_ma': 3, 'p.a': 2, '.ar': 2, 'arr': 2, 'rra': 2, 'ray': 2, 'ay(': 2, 'y([': 1, '([[': 1, '[[0': 2, '0]*': 2, ']*o': 1, '*ow': 1, 'ow ': 3, 'w f': 2, 'e(o': 1, '(oh': 1, 'oh)': 1, 'h)]': 2, ')])': 1, '])\n': 3, ')\n ': 4, '  i': 4, ' ih': 2, 'ih ': 3, 'h =': 3, '= l': 2, 'x)\n': 5, ' iw': 2, 'iw ': 4, 'w =': 4, 'i =': 3, '= 0': 6, ' 0\n': 6, '0\n ': 4, '  j': 3, 'j =': 5, ' oi': 2, 'oi ': 2, ' oj': 3, 'oj ': 3, '0\n\n': 2, '\n\n ': 5, '  w': 4, ' wh': 2, 'whi': 2, 'hil': 2, 'ile': 2, 'le ': 2, 'e (': 2, ' (i': 1, '(i+': 1, 'i+p': 2, '+po': 2, 'ze ': 6, 'e <': 2, ' <=': 2, '<= ': 2, '= i': 10, 'ih)': 3, 'h):': 2, ' (j': 1, '(j+': 1, 'j+p': 2, 'iw)': 2, 'w):': 2, ' wi': 3, 'win': 3, 'ind': 3, 'ndo': 3, 'dow': 3, ' []': 1, '[]\n': 1, ']\n\n': 2, 'r p': 4, ' ph': 1, 'ph ': 1, 'h i': 1, '(po': 2, ' pw': 1, 'pw ': 1, 'w i': 1, 'ow.': 1, 'w.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'x[i': 2, '[i+': 1, '+ph': 1, 'ph]': 1, 'h][': 1, '][j': 2, '[j+': 1, '+pw': 1, 'pw]': 1, 'w])': 1, ')\n\n': 5, 'x[o': 1, '[oi': 1, 'oi]': 1, 'i][': 2, '][o': 1, '[oj': 1, 'oj]': 1, 'j] ': 2, '] =': 2, '= m': 1, 'max': 1, 'ax(': 1, 'x(w': 1, '(wi': 1, 'ow)': 1, 'w)\n': 1, 'j +': 1, ' +=': 2, '+= ': 2, '= 1': 2, ' 1\n': 4, '1\n ': 2, '= j': 1, ' j+': 1, 'j+s': 1, '+st': 2, 'de\n': 2, 'e\n\n': 1, ' i+': 1, 'i+s': 1, 'e\n ': 1, 'i +': 1, 'n o': 1, '\n\ni': 1, '\nih': 1, 'int': 16, 'nt(': 16, 't(i': 7, '(in': 7, 'inp': 7, 'npu': 8, 'put': 8, 'ut(': 7, ""t('"": 9, ""('E"": 6, ""'En"": 7, 'Ent': 7, 'nte': 7, 'er ': 9, 'r h': 1, ' he': 1, 'hei': 1, 'eig': 1, 'igh': 1, 'ght': 1, 'ht ': 1, 't o': 3, ' of': 5, 'of ': 5, 'f m': 3, 'x :': 3, ' : ': 7, "": '"": 7, "" ')"": 10, ""'))"": 7, ')\ni': 1, '\niw': 1, 'r w': 1, 'wid': 1, 'idt': 1, 'dth': 1, 'th ': 1, 'h o': 1, ')\nm': 3, '\nma': 4, ' [[': 1, 'e(i': 3, ')]\n': 1, '\n\nf': 1, '\nfo': 1, '(iw': 2, '[i]': 1, '[j]': 1, 't(f': 1, ""(f'"": 1, ""f'E"": 1, 'r v': 1, ' va': 2, 'alu': 3, 'lue': 3, 'ue ': 2, 'e o': 1, 'x[{': 1, '[{i': 1, '{i}': 1, 'i}]': 1, '}][': 1, '][{': 1, '[{j': 1, '{j}': 1, 'j}]': 1, '}] ': 1, '] :': 1, '\n\np': 3, '\np ': 1, 'p =': 1, 'r a': 2, ' am': 2, 'amo': 2, 'mou': 2, 'oun': 2, 'unt': 2, 'nt ': 2, 'g :': 3, ')\np': 9, '\np_': 1, 'al ': 1, 'l =': 1, 'g v': 1, 'e :': 3, ')\ns': 1, '\ns ': 1, 's =': 1, 'f s': 1, 'de ': 1, '\npo': 1, 'e =': 1, 'ol ': 1, 'l s': 1, ' si': 1, '\n\no': 1, '\now': 1, '= (': 2, ' ((': 2, '((i': 2, 'w -': 1, ' - ': 2, '- p': 2, 'e +': 2, ' + ': 4, '+ (': 2, ' (2': 2, '))/': 2, ')//': 2, '//s': 2, '/s)': 2, 's) ': 2, ') +': 2, '+ 1': 2, '1\no': 1, '\noh': 1, 'oh ': 1, 'h -': 1, '1\n\n': 1, '\n\nm': 1, 'y(m': 1, '\npr': 9, 'pri': 9, 'rin': 9, 't()': 3, '()\n': 3, ""('I"": 1, ""'In"": 1, 'Inp': 1, 'ut ': 1, 't M': 1, ' Ma': 1, 'Mat': 1, ' :-': 3, ':- ': 3, ""- '"": 3, ""')\n"": 3, 'p.p': 1, '.pa': 1, 'x,p': 1, ',p,': 1, ', c': 1, ' co': 1, 'con': 1, 'ons': 1, 'nst': 1, 'sta': 1, 'tan': 1, 'ant': 1, 'nt_': 1, 't_v': 1, 'ues': 1, 'es=': 1, 's=p': 1, '=p_': 1, 'l)\n': 1, ""('A"": 2, ""'Af"": 2, 'Aft': 2, 'fte': 2, 'r P': 2, ' Pa': 1, 'Pad': 1, '= p': 1, ' s,': 1, 's, ': 1, 'e)\n': 1, ' Po': 1, 'Poo': 1, 'oli': 1, 'lin': 1}"
Tushar Nankani,main_8.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'import': 1, 'numpy': 1, 'as': 1, 'np': 1, 'def': 1, 'convolve(matrix,': 2, 'fil,': 2, 'stride):': 1, 'op_matrix': 3, '=': 28, 'np.array([[0]*ow': 1, 'for': 9, 'i': 7, 'in': 9, 'range(oh)])': 1, '0': 6, 'j': 5, 'oi': 2, 'oj': 3, 'while': 2, '(i+fh': 1, '<=': 2, 'ih):': 1, '(j+fw': 1, 'iw):': 1, 'window': 1, '[]': 1, 'winh': 1, 'range(fh):': 2, 'winw': 1, 'range(fw):': 2, 'window.append(matrix[i+winh][j+winw])': 1, 'print(window,': 1, '""': 1, '*': 1, '"",': 1, 'fil.ravel())': 2, 'op_matrix[oi][oj]': 1, 'np.dot(np.array(window),': 1, '+=': 2, '1': 4, 'j+stride': 1, 'i+stride': 1, 'return': 1, 'ih': 1, ""int(input('enter"": 7, 'height': 2, 'of': 8, 'matrix': 6, ':': 9, ""'))"": 9, 'iw': 1, 'width': 2, 'fh': 2, 'filter': 3, 'fw': 2, 'print()': 3, '[[0]*iw': 1, 'range(ih)]': 1, 'fil': 2, '[[0]*fw': 1, 'range(fh)]': 1, 'range(ih):': 1, 'range(iw):': 1, 'matrix[i][j]': 1, ""int(input(f'enter"": 2, 'value': 3, 'matrix[{i}][{j}]': 1, 'fil[i][j]': 1, 'filter[{i}][{j}]': 1, 'p': 1, 'amount': 2, 'padding': 3, 'p_val': 1, 's': 1, 'stride': 1, 'ow': 1, '((iw': 1, '-': 2, '+': 4, '(2*p))//s)': 2, 'oh': 1, '((ih': 1, 'np.array(fil)': 1, ""print('\\ninput"": 2, ':-': 4, ""')"": 4, 'print(fil)': 1, 'np.array(matrix)': 1, 'print(matrix)': 2, 'np.pad(matrix,': 1, 'p,': 1, 'constant_values=p_val)': 1, ""print('\\nafter"": 2, 's)': 1, 'convolution': 1, 'print(op_matrix)': 1}","{'imp': 1, 'mpo': 1, 'por': 1, 'ort': 1, 'rt ': 1, 't n': 1, ' nu': 1, 'num': 1, 'ump': 1, 'mpy': 1, 'py ': 1, 'y a': 1, ' as': 1, 'as ': 1, 's n': 1, ' np': 6, 'np\n': 1, 'p\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f c': 1, ' co': 3, 'con': 3, 'onv': 3, 'nvo': 3, 'vol': 3, 'olv': 2, 'lve': 2, 've(': 2, 'e(m': 2, '(ma': 7, 'mat': 19, 'atr': 20, 'tri': 24, 'rix': 20, 'ix,': 3, 'x, ': 3, ', f': 3, ' fi': 8, 'fil': 12, 'il,': 2, 'l, ': 2, ', s': 2, ' st': 2, 'str': 4, 'rid': 4, 'ide': 4, 'de)': 1, 'e):': 1, '):\n': 9, ':\n ': 8, '\n  ': 24, '   ': 152, '  o': 7, ' op': 3, 'op_': 5, 'p_m': 5, '_ma': 5, 'ix ': 8, 'x =': 5, ' = ': 28, '= n': 5, 'np.': 6, 'p.a': 4, '.ar': 4, 'arr': 4, 'rra': 4, 'ray': 4, 'ay(': 4, 'y([': 1, '([[': 1, '[[0': 3, '[0]': 3, '0]*': 3, ']*o': 1, '*ow': 1, 'ow ': 3, 'w f': 3, ' fo': 7, 'for': 9, 'or ': 9, 'r i': 5, ' i ': 7, 'i i': 5, ' in': 18, 'in ': 9, 'n r': 9, ' ra': 9, 'ran': 9, 'ang': 9, 'nge': 9, 'ge(': 9, 'e(o': 1, '(oh': 1, 'oh)': 1, 'h)]': 3, ')])': 1, '])\n': 2, ')\n\n': 10, '\n\n ': 7, '  i': 2, 'i =': 3, '= 0': 6, ' 0\n': 6, '0\n ': 4, '  j': 3, ' j ': 5, 'j =': 5, ' oi': 2, 'oi ': 2, ' oj': 3, 'oj ': 3, '0\n\n': 2, '  w': 4, ' wh': 2, 'whi': 2, 'hil': 2, 'ile': 2, 'le ': 2, 'e (': 2, ' (i': 1, '(i+': 1, 'i+f': 1, '+fh': 1, 'fh ': 3, 'h <': 1, ' <=': 2, '<= ': 2, '= i': 12, ' ih': 1, 'ih)': 3, 'h):': 4, ' (j': 1, '(j+': 1, 'j+f': 1, '+fw': 1, 'fw ': 4, 'w <': 1, ' iw': 1, 'iw)': 2, 'w):': 4, ':\n\n': 1, ' wi': 6, 'win': 8, 'ind': 4, 'ndo': 4, 'dow': 4, 'w =': 4, '= [': 3, ' []': 1, '[]\n': 1, ']\n ': 1, '  f': 6, 'r w': 4, 'inh': 2, 'nh ': 1, 'h i': 1, 'e(f': 5, '(fh': 3, 'fh)': 3, 'inw': 2, 'nw ': 1, 'w i': 1, '(fw': 2, 'fw)': 2, 'ow.': 1, 'w.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(m': 2, 'ix[': 4, 'x[i': 2, '[i+': 1, 'i+w': 1, '+wi': 2, 'nh]': 1, 'h][': 1, '][j': 3, '[j+': 1, 'j+w': 1, 'nw]': 1, 'w])': 1, '  p': 1, ' pr': 1, 'pri': 12, 'rin': 12, 'int': 21, 'nt(': 21, 't(w': 1, '(wi': 2, 'ow,': 1, 'w, ': 1, ', ""': 1, ' "" ': 1, '"" *': 1, ' * ': 1, '* ""': 1, ' "",': 1, '"", ': 1, ',  ': 1, 'il.': 2, 'l.r': 2, '.ra': 2, 'rav': 2, 'ave': 2, 'vel': 2, 'el(': 2, 'l()': 2, '())': 2, '))\n': 11, 'x[o': 1, '[oi': 1, 'oi]': 1, 'i][': 3, '][o': 1, '[oj': 1, 'oj]': 1, 'j] ': 3, '] =': 3, 'p.d': 1, '.do': 1, 'dot': 1, 'ot(': 1, 't(n': 1, '(np': 1, 'y(w': 1, 'ow)': 1, 'w),': 1, '), ': 1, ')\n ': 1, 'j +': 1, ' +=': 2, '+= ': 2, '= 1': 2, ' 1\n': 4, '1\n ': 2, '= j': 1, ' j+': 1, 'j+s': 1, '+st': 2, 'de\n': 2, 'e\n\n': 1, ' i+': 1, 'i+s': 1, 'e\n ': 1, 'i +': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n o': 1, 'ix\n': 1, 'x\n\n': 1, '\n\ni': 1, '\nih': 1, 'ih ': 2, 'h =': 3, 't(i': 9, '(in': 9, 'inp': 9, 'npu': 11, 'put': 11, 'ut(': 9, ""t('"": 11, ""('E"": 7, ""'En"": 9, 'Ent': 9, 'nte': 9, 'ter': 15, 'er ': 14, 'r h': 2, ' he': 2, 'hei': 2, 'eig': 2, 'igh': 2, 'ght': 2, 'ht ': 2, 't o': 4, ' of': 8, 'of ': 8, 'f m': 3, ' ma': 4, 'x :': 3, ' : ': 9, "": '"": 9, "" ')"": 13, ""'))"": 9, ')\ni': 1, '\niw': 1, 'iw ': 3, 'wid': 2, 'idt': 2, 'dth': 2, 'th ': 2, 'h o': 2, ')\nf': 2, '\nfh': 1, 'f f': 3, 'ilt': 4, 'lte': 4, 'r :': 3, '\nfw': 1, ')\np': 12, '\npr': 11, 't()': 3, '()\n': 3, '\n\nm': 3, '\nma': 3, ' [[': 2, ']*i': 1, '*iw': 1, 'e(i': 3, '(ih': 3, ')]\n': 2, ']\nf': 1, '\nfi': 2, 'il ': 2, 'l =': 3, ']*f': 1, '*fw': 1, ']\n\n': 1, '\n\nf': 3, '\nfo': 2, 'r j': 2, 'j i': 2, '(iw': 2, '  m': 1, '[i]': 2, '[j]': 2, 't(f': 3, ""(f'"": 2, ""f'E"": 2, 'r v': 2, ' va': 3, 'val': 6, 'alu': 4, 'lue': 4, 'ue ': 3, 'e o': 2, 'x[{': 1, '[{i': 2, '{i}': 2, 'i}]': 2, '}][': 2, '][{': 2, '[{j': 2, '{j}': 2, 'j}]': 2, '}] ': 2, '] :': 2, 'il[': 1, 'l[i': 1, 'er[': 1, 'r[{': 1, '\n\np': 1, '\np ': 1, 'p =': 1, 'r a': 2, ' am': 2, 'amo': 2, 'mou': 2, 'oun': 2, 'unt': 2, 'nt ': 2, 'f p': 1, ' pa': 2, 'pad': 3, 'add': 3, 'ddi': 3, 'din': 3, 'ing': 3, 'ng ': 3, 'g :': 2, '\np_': 1, 'p_v': 2, '_va': 3, 'al ': 1, 'r p': 1, 'g v': 1, 'e :': 2, ')\ns': 1, '\ns ': 1, 's =': 1, 'f s': 1, 'de ': 1, '\n\no': 2, '\now': 1, '= (': 2, ' ((': 2, '((i': 2, 'w -': 1, ' - ': 2, '- f': 2, ' fw': 1, 'w +': 1, ' + ': 4, '+ (': 2, ' (2': 2, '(2*': 2, '2*p': 2, '*p)': 2, 'p))': 2, '))/': 2, ')//': 2, '//s': 2, '/s)': 2, 's) ': 2, ') +': 2, '+ 1': 2, '1\no': 1, '\noh': 1, 'oh ': 1, 'h -': 1, ' fh': 1, 'h +': 1, '1\n\n': 1, 'y(f': 1, '(fi': 2, 'il)': 2, 'l)\n': 3, ""('\\"": 4, ""'\\n"": 4, '\\nI': 2, 'nIn': 2, 'Inp': 2, 'ut ': 2, 't F': 1, ' Fi': 1, 'Fil': 1, ' :-': 4, ':- ': 4, ""- '"": 4, ""')\n"": 4, 'y(m': 1, 'ix)': 4, 'x)\n': 4, 't M': 1, ' Ma': 1, 'Mat': 1, 't(m': 2, 'p.p': 1, '.pa': 1, 'ad(': 1, ', p': 1, ' p,': 1, 'p, ': 1, ', c': 1, 'ons': 1, 'nst': 1, 'sta': 1, 'tan': 1, 'ant': 1, 'nt_': 1, 't_v': 1, 'ues': 1, 'es=': 1, 's=p': 1, '=p_': 1, 'al)': 1, '\\nA': 2, 'nAf': 2, 'Aft': 2, 'fte': 2, 'r P': 1, ' Pa': 1, 'Pad': 1, '\nop': 1, '= c': 1, ' s)': 1, 's)\n': 1, 'r C': 1, ' Co': 1, 'Con': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n :': 1, 't(o': 1, '(op': 1}"
Tushar Nankani,server.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 3, 'socket': 1, 'os': 1, 'from': 2, '_thread': 1, '*': 1, 'host': 2, '=': 6, ""'127.0.0.1'"": 1, 'port': 2, '2004': 1, 'threadcount': 2, '0': 1, 'def': 1, 'multi_threaded_client(connection):': 1, ""connection.send(str.encode('server"": 1, 'is': 1, ""working:'))"": 1, 'while': 2, 'true:': 2, 'data': 1, 'connection.recv(2048)': 1, 'print(""recieved': 1, 'message:': 2, '""': 3, '+': 8, ""data.decode('utf-8')"": 2, 'thread:': 1, 'str(threadcount))': 2, 'response': 1, ""'server"": 1, ""'"": 3, 'if': 2, 'not': 1, 'data:': 1, 'break': 1, 'connection.sendall(str.encode(response))': 1, 'connection.close()': 1, '__name__': 1, '==': 1, '""__main__"":': 1, 'with': 1, 'socket.socket(socket.af_inet,': 1, 'socket.sock_stream)': 1, 'as': 1, 's:': 1, 's.bind((host,': 1, 'port))': 1, 'print(""server': 1, 'binded': 1, 'to': 1, 'the': 1, '%s': 1, 'and': 1, '%d""': 1, '%(host,port))': 1, 's.listen(5)': 1, 'client,': 1, 'address': 1, 's.accept()': 1, ""print('connected"": 1, 'to:': 1, 'address[0]': 1, ""':'"": 1, 'str(address[1]))': 1, 'start_new_thread(multi_threaded_client,': 1, '(client,': 1, '))': 1, '+=': 1, '1': 1, ""print('thread"": 1, 'number:': 1}","{'imp': 3, 'mpo': 3, 'por': 4, 'ort': 4, 'rt ': 4, 't s': 1, ' so': 3, 'soc': 5, 'ock': 5, 'cke': 5, 'ket': 5, 'et\n': 1, 't\ni': 1, '\nim': 1, 't o': 1, ' os': 1, 'os\n': 1, 's\nf': 1, '\nfr': 1, 'fro': 2, 'rom': 2, 'om ': 2, 'm _': 1, ' _t': 1, '_th': 4, 'thr': 4, 'hre': 10, 'rea': 11, 'ead': 10, 'ad ': 2, 'd i': 1, ' im': 1, 't *': 1, ' *\n': 1, '*\n\n': 1, '\n\nH': 1, '\nHO': 1, 'HOS': 3, 'OST': 3, 'ST ': 1, 'T =': 2, ' = ': 6, ""= '"": 2, "" '1"": 1, ""'12"": 1, '127': 1, '27.': 1, '7.0': 1, '.0.': 2, '0.0': 1, '0.1': 1, "".1'"": 1, ""1'\n"": 1, ""'\nP"": 1, '\nPO': 1, 'POR': 3, 'ORT': 3, 'RT ': 1, '= 2': 1, ' 20': 1, '200': 1, '004': 1, '04\n': 1, '4\nT': 1, '\nTh': 1, 'Thr': 6, 'adC': 4, 'dCo': 4, 'Cou': 4, 'oun': 4, 'unt': 4, 'nt ': 2, 't =': 1, '= 0': 1, ' 0\n': 1, '0\n\n': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f m': 1, ' mu': 1, 'mul': 2, 'ult': 2, 'lti': 2, 'ti_': 2, 'i_t': 2, 'ade': 2, 'ded': 3, 'ed_': 2, 'd_c': 2, '_cl': 2, 'cli': 2, 'lie': 4, 'ien': 4, 'ent': 4, 'nt(': 5, 't(c': 1, '(co': 1, 'con': 5, 'onn': 6, 'nne': 6, 'nec': 6, 'ect': 6, 'cti': 5, 'tio': 5, 'ion': 5, 'on)': 1, 'n):': 1, '):\n': 1, ':\n ': 6, '\n  ': 19, '   ': 122, '  c': 3, ' co': 4, 'on.': 4, 'n.s': 2, '.se': 2, 'sen': 2, 'end': 2, 'nd(': 2, 'd(s': 1, '(st': 2, 'str': 5, 'tr.': 2, 'r.e': 2, '.en': 2, 'enc': 2, 'nco': 2, 'cod': 4, 'ode': 4, 'de(': 4, ""e('"": 3, ""('S"": 1, ""'Se"": 2, 'Ser': 3, 'erv': 3, 'rve': 3, 'ver': 3, 'er ': 3, 'r i': 1, ' is': 1, 'is ': 1, 's w': 1, ' wo': 1, 'wor': 1, 'ork': 1, 'rki': 1, 'kin': 1, 'ing': 1, 'ng:': 1, ""g:'"": 1, "":')"": 1, ""'))"": 1, '))\n': 7, ')\n ': 10, '  w': 3, ' wh': 2, 'whi': 2, 'hil': 2, 'ile': 2, 'le ': 2, 'e T': 2, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue:': 2, 'e:\n': 2, '  d': 1, ' da': 4, 'dat': 4, 'ata': 4, 'ta ': 1, 'a =': 1, '= c': 1, 'n.r': 1, '.re': 1, 'rec': 1, 'ecv': 1, 'cv(': 1, 'v(2': 1, '(20': 1, '204': 1, '048': 1, '48)': 1, '8)\n': 1, '  p': 4, ' pr': 4, 'pri': 4, 'rin': 4, 'int': 4, 't(""': 2, '(""R': 1, '""Re': 1, 'Rec': 1, 'eci': 1, 'cie': 1, 'iev': 1, 'eve': 1, 'ved': 1, 'ed ': 3, 'd m': 1, ' me': 2, 'mes': 2, 'ess': 5, 'ssa': 2, 'sag': 2, 'age': 2, 'ge:': 2, 'e: ': 2, ': ""': 2, ' "" ': 3, '"" +': 2, ' + ': 8, '+ d': 2, 'ta.': 2, 'a.d': 2, '.de': 2, 'dec': 2, 'eco': 2, ""('u"": 2, ""'ut"": 2, 'utf': 2, 'tf-': 2, 'f-8': 2, ""-8'"": 2, ""8')"": 2, ""') "": 1, ') +': 1, '+ ""': 1, '"" f': 1, ' fr': 1, 'm T': 1, ' Th': 2, 'ad:': 1, 'd: ': 1, '+ s': 3, ' st': 4, 'tr(': 3, 'r(T': 2, '(Th': 2, 'nt)': 2, 't))': 2, '  r': 1, ' re': 1, 'res': 5, 'esp': 2, 'spo': 2, 'pon': 2, 'ons': 2, 'nse': 2, 'se ': 1, 'e =': 1, "" 'S"": 1, 'r m': 1, "": '"": 3, "" ' "": 3, ""' +"": 4, ""')\n"": 1, '  i': 1, ' if': 1, 'if ': 2, 'f n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't d': 1, 'ta:': 1, 'a:\n': 1, '  b': 1, ' br': 1, 'bre': 1, 'eak': 1, 'ak\n': 1, 'k\n ': 1, 'nda': 1, 'dal': 1, 'all': 1, 'll(': 1, 'l(s': 1, 'e(r': 1, '(re': 1, 'se)': 1, 'e))': 1, 'n.c': 1, '.cl': 1, 'clo': 1, 'los': 1, 'ose': 1, 'se(': 1, 'e()': 1, '()\n': 2, ')\n\n': 2, '\n\ni': 1, '\nif': 1, 'f _': 1, ' __': 1, '__n': 1, '_na': 1, 'nam': 1, 'ame': 1, 'me_': 1, 'e__': 1, '__ ': 1, '_ =': 1, ' ==': 1, '== ': 1, '= ""': 1, ' ""_': 1, '""__': 1, '__m': 1, '_ma': 1, 'mai': 1, 'ain': 1, 'in_': 1, 'n__': 1, '__""': 1, '_"":': 1, '"":\n': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'th ': 1, 'h s': 1, 'et.': 3, 't.s': 1, '.so': 1, 'et(': 1, 't(s': 1, '(so': 1, 't.A': 1, '.AF': 1, 'AF_': 1, 'F_I': 1, '_IN': 1, 'INE': 1, 'NET': 1, 'ET,': 1, 'T, ': 2, ', s': 1, 't.S': 1, '.SO': 1, 'SOC': 1, 'OCK': 1, 'CK_': 1, 'K_S': 1, '_ST': 1, 'STR': 1, 'TRE': 1, 'REA': 1, 'EAM': 1, 'AM)': 1, 'M) ': 1, ') a': 1, ' as': 1, 'as ': 1, 's s': 1, ' s:': 1, 's:\n': 1, '  s': 3, ' s.': 3, 's.b': 1, '.bi': 1, 'bin': 2, 'ind': 2, 'd((': 1, '((H': 1, '(HO': 2, 'ST,': 2, ', P': 1, ' PO': 1, 'RT)': 2, 'T))': 2, '(""S': 1, '""Se': 1, 'r b': 1, ' bi': 1, 'nde': 1, 'd t': 2, ' to': 2, 'to ': 1, 'o t': 1, ' th': 1, 'the': 1, 'he ': 1, 'e h': 1, ' ho': 1, 'hos': 1, 'ost': 1, 'st ': 1, 't %': 2, ' %s': 1, '%s ': 1, 's a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd p': 1, ' po': 1, ' %d': 1, '%d""': 1, 'd"" ': 1, '"" %': 1, ' %(': 1, '%(H': 1, 'T,P': 1, ',PO': 1, 's.l': 1, '.li': 1, 'lis': 1, 'ist': 1, 'ste': 1, 'ten': 1, 'en(': 1, 'n(5': 1, '(5)': 1, '5)\n': 1, '\n\n ': 1, '  C': 1, ' Cl': 1, 'Cli': 2, 'nt,': 3, 't, ': 3, ', a': 1, ' ad': 2, 'add': 3, 'ddr': 3, 'dre': 3, 'ss ': 1, 's =': 1, '= s': 1, 's.a': 1, '.ac': 1, 'acc': 1, 'cce': 1, 'cep': 1, 'ept': 1, 'pt(': 1, 't()': 1, ""t('"": 2, ""('C"": 1, ""'Co"": 1, 'Con': 1, 'cte': 1, 'ted': 1, 'to:': 1, 'o: ': 1, '+ a': 1, 'ss[': 2, 's[0': 1, '[0]': 1, '0] ': 1, '] +': 1, ""+ '"": 1, "" ':"": 1, ""':'"": 1, "":' "": 1, 'r(a': 1, '(ad': 1, 's[1': 1, '[1]': 1, '1])': 1, ']))': 1, 'sta': 1, 'tar': 1, 'art': 1, 'rt_': 1, 't_n': 1, '_ne': 1, 'new': 1, 'ew_': 1, 'w_t': 1, 'ad(': 1, 'd(m': 1, '(mu': 1, ', (': 1, ' (C': 1, '(Cl': 1, ', )': 1, ' ))': 1, '  T': 1, 't +': 1, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 1, '1\n ': 1, ""('T"": 1, ""'Th"": 1, 'd N': 1, ' Nu': 1, 'Num': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'er:': 1, 'r: ': 1}"
Tushar Nankani,server_1.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'import': 1, 'socket': 1, 'host': 2, '=': 7, '""127.0.0.1""': 1, 'port': 2, '4568': 1, 'def': 1, 'sendable_data(data):': 1, 'return': 1, 'str(data).encode(""utf-8"")': 1, 'with': 2, 'socket.socket(socket.af_inet,': 1, 'socket.sock_stream)': 1, 'as': 1, 's:': 1, 's.bind((host,': 1, 'port))': 1, 'print(""server': 1, 'binded': 1, 'to': 1, 'the': 1, '%s': 1, 'and': 1, '%d""': 1, '%(host,port))': 1, 's.listen()': 1, '#': 1, '---------------------': 1, 'wait': 1, 'for': 1, 'client': 1, 'conn,': 1, 'addr': 1, 's.accept()': 1, 'conn:': 1, 'print(""connected': 1, 'by"",': 1, 'addr)': 1, 'print(conn)': 1, 'data': 1, 'conn.recv(1024)': 2, 'data2': 1, 'print(""data': 2, '1': 1, 'received': 2, 'from': 2, 'client:"",data.decode(""utf-8""))': 1, '2': 1, 'client:"",data2.decode(""utf-8""))': 1, 'a': 1, 'int(data.decode(""utf-8""))': 1, 'b': 1, 'int(data2.decode(""utf-8""))': 1, 'conn.sendall(sendable_data(a': 1, '+': 1, 'b))': 1}","{'imp': 1, 'mpo': 1, 'por': 2, 'ort': 2, 'rt ': 2, 't s': 1, ' so': 3, 'soc': 5, 'ock': 5, 'cke': 5, 'ket': 5, 'et\n': 1, 't\n\n': 1, '\n\nH': 1, '\nHO': 1, 'HOS': 3, 'OST': 3, 'ST ': 1, 'T =': 2, ' = ': 7, '= ""': 1, ' ""1': 1, '""12': 1, '127': 1, '27.': 1, '7.0': 1, '.0.': 2, '0.0': 1, '0.1': 1, '.1""': 1, '1""\n': 1, '""\nP': 1, '\nPO': 1, 'POR': 3, 'ORT': 3, 'RT ': 1, '= 4': 1, ' 45': 1, '456': 1, '568': 1, '68\n': 1, '8\n\n': 1, '\n\n\n': 1, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f s': 1, ' se': 1, 'sen': 3, 'end': 3, 'nda': 3, 'dab': 2, 'abl': 2, 'ble': 2, 'le_': 2, 'e_d': 2, '_da': 2, 'dat': 10, 'ata': 12, 'ta(': 2, 'a(d': 1, '(da': 4, 'ta)': 2, 'a):': 1, '):\n': 1, ':\n ': 3, '\n  ': 16, '   ': 68, '  r': 1, ' re': 3, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n s': 1, ' st': 1, 'str': 1, 'tr(': 1, 'r(d': 1, 'a).': 1, ').e': 1, '.en': 1, 'enc': 1, 'nco': 1, 'cod': 5, 'ode': 5, 'de(': 5, 'e(""': 5, '(""u': 5, '""ut': 5, 'utf': 5, 'tf-': 5, 'f-8': 5, '-8""': 5, '8"")': 5, '"")\n': 1, ')\n\n': 2, '\n\nw': 1, '\nwi': 1, 'wit': 2, 'ith': 2, 'th ': 2, 'h s': 1, 'et.': 3, 't.s': 1, '.so': 1, 'et(': 1, 't(s': 1, '(so': 1, 't.A': 1, '.AF': 1, 'AF_': 1, 'F_I': 1, '_IN': 1, 'INE': 1, 'NET': 1, 'ET,': 1, 'T, ': 2, ', s': 1, 't.S': 1, '.SO': 1, 'SOC': 1, 'OCK': 1, 'CK_': 1, 'K_S': 1, '_ST': 1, 'STR': 1, 'TRE': 1, 'REA': 1, 'EAM': 1, 'AM)': 1, 'M) ': 1, ') a': 1, ' as': 1, 'as ': 1, 's s': 1, ' s:': 1, 's:\n': 1, '  s': 2, ' s.': 3, 's.b': 1, '.bi': 1, 'bin': 2, 'ind': 2, 'nd(': 1, 'd((': 1, '((H': 1, '(HO': 2, 'ST,': 2, ', P': 1, ' PO': 1, 'RT)': 2, 'T))': 2, '))\n': 7, ')\n ': 11, '  p': 5, ' pr': 5, 'pri': 5, 'rin': 5, 'int': 7, 'nt(': 7, 't(""': 4, '(""S': 1, '""Se': 1, 'Ser': 1, 'erv': 1, 'rve': 1, 'ver': 1, 'er ': 1, 'r b': 1, ' bi': 1, 'nde': 1, 'ded': 1, 'ed ': 4, 'd t': 1, ' to': 1, 'to ': 1, 'o t': 1, ' th': 1, 'the': 1, 'he ': 1, 'e h': 1, ' ho': 1, 'hos': 1, 'ost': 1, 'st ': 1, 't %': 2, ' %s': 1, '%s ': 1, 's a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd p': 1, ' po': 1, ' %d': 1, '%d""': 1, 'd"" ': 1, '"" %': 1, ' %(': 1, '%(H': 1, 'T,P': 1, ',PO': 1, 's.l': 1, '.li': 1, 'lis': 1, 'ist': 1, 'ste': 1, 'ten': 1, 'en(': 1, 'n()': 1, '()\n': 2, '  #': 1, ' # ': 1, '# -': 1, ' --': 1, '---': 19, '-- ': 1, '- w': 1, ' wa': 1, 'wai': 1, 'ait': 1, 'it ': 1, 't f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r c': 1, ' cl': 3, 'cli': 3, 'lie': 3, 'ien': 3, 'ent': 3, 'nt\n': 1, 't\n ': 1, '  c': 2, ' co': 5, 'con': 6, 'onn': 7, 'nn,': 1, 'n, ': 1, ', a': 2, ' ad': 2, 'add': 2, 'ddr': 2, 'dr ': 1, 'r =': 1, '= s': 1, 's.a': 1, '.ac': 1, 'acc': 1, 'cce': 1, 'cep': 1, 'ept': 1, 'pt(': 1, 't()': 1, '  w': 1, ' wi': 1, 'h c': 1, 'nn:': 1, 'n:\n': 1, '(""C': 1, '""Co': 1, 'Con': 1, 'nne': 1, 'nec': 1, 'ect': 1, 'cte': 1, 'ted': 1, 'd b': 1, ' by': 1, 'by""': 1, 'y"",': 1, '"", ': 1, 'dr)': 1, 'r)\n': 1, 't(c': 1, '(co': 1, 'nn)': 1, 'n)\n': 1, '  d': 2, ' da': 2, 'ta ': 3, 'a =': 2, '= c': 2, 'nn.': 3, 'n.r': 2, '.re': 2, 'rec': 4, 'ecv': 2, 'cv(': 2, 'v(1': 2, '(10': 2, '102': 2, '024': 2, '24)': 2, '4)\n': 2, 'ta2': 3, 'a2 ': 1, '2 =': 1, '(""D': 2, '""Da': 2, 'Dat': 2, 'a 1': 1, ' 1 ': 1, '1 r': 1, 'ece': 2, 'cei': 2, 'eiv': 2, 'ive': 2, 'ved': 2, 'd f': 2, ' fr': 2, 'fro': 2, 'rom': 2, 'om ': 2, 'm c': 2, 'nt:': 2, 't:""': 2, ':"",': 2, '"",d': 2, ',da': 2, 'ta.': 2, 'a.d': 2, '.de': 4, 'dec': 4, 'eco': 4, '""))': 4, 'a 2': 1, ' 2 ': 1, '2 r': 1, 'a2.': 2, '2.d': 2, '\n\n ': 1, '  a': 1, ' a ': 1, '= i': 2, ' in': 2, 't(d': 2, '  b': 1, ' b ': 1, 'b =': 1, 'n.s': 1, '.se': 1, 'dal': 1, 'all': 1, 'll(': 1, 'l(s': 1, '(se': 1, 'a(a': 1, '(a ': 1, 'a +': 1, ' + ': 1, '+ b': 1, ' b)': 1, 'b))': 1}"
Vincent Russo,anagram.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 4, 'youtube': 1, 'video:': 1, 'https://www.youtube.com/watch?v=pb7pmvifbf4': 1, 's1': 2, '=': 7, '""fairy': 1, 'tales""': 1, 's2': 2, '""rail': 1, 'safety""': 1, 's1.replace(""': 1, '"",': 2, '"""").lower()': 2, 's2.replace(""': 1, 'requires': 2, 'n': 4, 'log': 2, 'time': 2, '(since': 1, 'any': 1, 'comparison': 1, 'based': 1, 'sorting': 1, 'algorithm': 1, 'at': 1, 'least': 1, 'to': 1, 'sort).': 1, '#print(sorted(s1)': 1, '==': 1, 'sorted(s2))': 1, 'def': 1, 'is_anagram(s1,': 1, 's2):': 1, 'ht': 1, 'dict()': 1, 'if': 4, 'len(s1)': 1, '!=': 2, 'len(s2):': 1, 'return': 3, 'false': 2, 'for': 3, 'i': 5, 'in': 5, 's1:': 1, 'ht:': 3, 'ht[i]': 5, '+=': 1, '1': 4, 'else:': 2, 's2:': 1, '-=': 1, '0:': 1, 'true': 1, 'print(is_anagram(s1,': 1, 's2))': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 2, 'be ': 1, 'e V': 1, ' Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eo:': 1, 'o: ': 1, ': h': 1, ' ht': 10, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.y': 1, '.yo': 1, 'you': 1, 'out': 1, 'utu': 1, 'tub': 1, 'be.': 1, 'e.c': 1, '.co': 1, 'com': 2, 'om/': 1, 'm/w': 1, '/wa': 1, 'wat': 1, 'atc': 1, 'tch': 1, 'ch?': 1, 'h?v': 1, '?v=': 1, 'v=P': 1, '=Pb': 1, 'Pb7': 1, 'b7p': 1, '7pm': 1, 'pmv': 1, 'mvi': 1, 'vif': 1, 'ifB': 1, 'fBf': 1, 'Bf4': 1, 'f4\n': 1, '4\ns': 1, '\ns1': 2, 's1 ': 2, '1 =': 2, ' = ': 7, '= ""': 2, ' ""f': 1, '""fa': 1, 'fai': 1, 'air': 1, 'iry': 1, 'ry ': 1, 'y t': 1, ' ta': 1, 'tal': 1, 'ale': 1, 'les': 1, 'es""': 1, 's""\n': 1, '""\ns': 1, '\ns2': 2, 's2 ': 2, '2 =': 2, ' ""r': 1, '""ra': 1, 'rai': 1, 'ail': 1, 'il ': 1, 'l s': 1, ' sa': 1, 'saf': 1, 'afe': 1, 'fet': 1, 'ety': 1, 'ty""': 1, 'y""\n': 1, '""\n\n': 1, '\n\ns': 1, '= s': 3, ' s1': 2, 's1.': 1, '1.r': 1, '.re': 2, 'rep': 2, 'epl': 2, 'pla': 2, 'lac': 2, 'ace': 2, 'ce(': 2, 'e(""': 2, '("" ': 2, '"" ""': 2, ' "",': 2, '"", ': 2, ', ""': 2, ' """"': 2, '"""")': 2, '"").': 2, ').l': 2, '.lo': 2, 'low': 2, 'owe': 2, 'wer': 2, 'er(': 2, 'r()': 2, '()\n': 3, ')\ns': 1, ' s2': 4, 's2.': 1, '2.r': 1, ')\n\n': 3, '\n\n#': 1, '\n# ': 3, '# R': 1, ' Re': 1, 'Req': 1, 'equ': 2, 'qui': 2, 'uir': 2, 'ire': 2, 'res': 2, 'es ': 2, 's n': 1, ' n ': 4, 'n l': 2, ' lo': 2, 'log': 2, 'og ': 2, 'g n': 2, 'n t': 2, ' ti': 2, 'tim': 2, 'ime': 2, 'me ': 2, 'e (': 1, ' (s': 1, '(si': 1, 'sin': 1, 'inc': 1, 'nce': 1, 'ce ': 1, 'e a': 1, ' an': 1, 'any': 1, 'ny ': 1, 'y c': 1, ' co': 1, 'omp': 1, 'mpa': 1, 'par': 1, 'ari': 1, 'ris': 1, 'iso': 1, 'son': 1, 'on ': 1, 'n \n': 1, ' \n#': 2, '# b': 1, ' ba': 1, 'bas': 1, 'ase': 1, 'sed': 1, 'ed ': 1, 'd s': 1, ' so': 3, 'sor': 4, 'ort': 4, 'rti': 1, 'tin': 1, 'ing': 1, 'ng ': 1, 'g a': 1, ' al': 1, 'alg': 1, 'lgo': 1, 'gor': 1, 'ori': 1, 'rit': 1, 'ith': 1, 'thm': 1, 'hm ': 1, 'm r': 1, ' re': 4, 'req': 1, 's a': 1, ' at': 1, 'at ': 1, 't l': 1, ' le': 3, 'lea': 1, 'eas': 1, 'ast': 1, 'st ': 1, 't \n': 1, '# n': 1, 'e t': 1, ' to': 1, 'to ': 1, 'o s': 1, 'rt)': 1, 't).': 1, ').\n': 1, '.\n#': 1, '\n#p': 1, '#pr': 1, 'pri': 2, 'rin': 2, 'int': 2, 'nt(': 2, 't(s': 1, '(so': 1, 'rte': 2, 'ted': 2, 'ed(': 2, 'd(s': 2, '(s1': 4, 's1)': 2, '1) ': 2, ') =': 1, ' ==': 1, '== ': 1, '(s2': 2, 's2)': 4, '2))': 2, '))\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f i': 3, ' is': 1, 'is_': 2, 's_a': 2, '_an': 2, 'ana': 2, 'nag': 2, 'agr': 2, 'gra': 2, 'ram': 2, 'am(': 2, 'm(s': 2, 's1,': 2, '1, ': 2, ', s': 2, '2):': 2, '):\n': 2, ':\n ': 10, '\n  ': 17, '   ': 98, '  h': 5, 'ht ': 1, 't =': 1, '= d': 1, ' di': 1, 'dic': 1, 'ict': 1, 'ct(': 1, 't()': 1, '\n\n ': 2, '  i': 4, ' if': 4, 'if ': 4, 'f l': 1, 'len': 2, 'en(': 2, 'n(s': 2, ') !': 1, ' !=': 2, '!= ': 2, '= l': 1, '  r': 3, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n F': 2, ' Fa': 2, 'Fal': 2, 'als': 2, 'lse': 4, 'se\n': 2, 'e\n\n': 2, '  f': 3, ' fo': 3, 'for': 3, 'or ': 3, 'r i': 3, ' i ': 5, 'i i': 5, ' in': 5, 'in ': 5, 'n s': 2, 's1:': 1, '1:\n': 1, 'n h': 3, 'ht:': 3, 't:\n': 3, 'ht[': 5, 't[i': 5, '[i]': 5, 'i] ': 5, '] +': 1, ' +=': 1, '+= ': 1, '= 1': 4, ' 1\n': 4, '1\n ': 4, '  e': 2, ' el': 2, 'els': 2, 'se:': 2, 'e:\n': 2, '] =': 2, 's2:': 1, '2:\n': 1, '] -': 1, ' -=': 1, '-= ': 1, 'f h': 1, '] !': 1, '= 0': 1, ' 0:': 1, '0:\n': 1, 'e\n ': 1, 'n T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1, '\n\np': 1, '\npr': 1, 't(i': 1, '(is': 1}"
Vincent Russo,binary_search.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 4, 'youtube': 1, 'video:': 1, 'https://www.youtube.com/watch?v=zeulw-a7mw8': 1, 'linear': 1, 'search': 3, 'def': 3, 'linear_search(data,': 1, 'target):': 2, 'for': 1, 'i': 1, 'in': 1, 'range(len(data)):': 1, 'if': 4, 'data[i]': 1, '==': 3, 'target:': 1, 'return': 8, 'true': 3, 'false': 3, 'iterative': 1, 'binary': 2, 'binary_search_iterative(data,': 1, 'low': 4, '=': 8, '0': 1, 'high': 2, 'len(data)': 1, '-': 2, '1': 3, 'while': 1, '<=': 1, 'high:': 2, 'mid': 4, '(low': 2, '+': 3, 'high)': 3, '//': 2, '2': 2, 'target': 5, 'data[mid]:': 4, 'elif': 2, '<': 2, 'else:': 3, 'recursive': 1, 'binary_search_recursive(data,': 3, 'target,': 4, 'low,': 2, 'high):': 1, '>': 1, 'mid-1)': 1, 'mid+1,': 1, 'data': 1, '[2,4,5,7,8,9,12,14,17,19,22,25,27,28,33,37]': 1, '37': 1, 'print(binary_search_recursive(data,': 1, '0,': 1, 'len(data)-1))': 1, 'print(binary_search_iterative(data,': 1, 'target))': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 2, 'be ': 1, 'e V': 1, ' Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eo:': 1, 'o: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.y': 1, '.yo': 1, 'you': 1, 'out': 1, 'utu': 1, 'tub': 1, 'be.': 1, 'e.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/w': 1, '/wa': 1, 'wat': 1, 'atc': 1, 'tch': 1, 'ch?': 1, 'h?v': 1, '?v=': 1, 'v=z': 1, '=ze': 1, 'zeU': 1, 'eUL': 1, 'ULw': 1, 'Lw-': 1, 'w-a': 1, '-a7': 1, 'a7M': 1, '7Mw': 1, 'Mw8': 1, 'w8\n': 1, '8\n\n': 1, '\n\n#': 3, '\n# ': 3, '# L': 1, ' Li': 1, 'Lin': 1, 'ine': 2, 'nea': 2, 'ear': 12, 'ar ': 1, 'r S': 1, ' Se': 3, 'Sea': 3, 'arc': 10, 'rch': 10, 'ch\n': 1, 'h\nd': 1, '\nde': 3, 'def': 3, 'ef ': 3, 'f l': 2, ' li': 1, 'lin': 1, 'ar_': 1, 'r_s': 1, '_se': 7, 'sea': 7, 'ch(': 1, 'h(d': 1, '(da': 10, 'dat': 16, 'ata': 16, 'ta,': 7, 'a, ': 7, ', t': 7, ' ta': 12, 'tar': 13, 'arg': 13, 'rge': 13, 'get': 13, 'et)': 3, 't):': 2, '):\t': 1, ':\t\n': 1, '\t\n\t': 1, '\n\tf': 1, '\tfo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, ' in': 1, 'in ': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(l': 1, '(le': 1, 'len': 3, 'en(': 3, 'n(d': 3, 'ta)': 3, 'a))': 1, ')):': 1, '):\n': 3, ':\n\t': 13, '\n\t\t': 17, '\t\ti': 3, '\tif': 4, 'if ': 6, 'f d': 1, ' da': 5, 'ta[': 5, 'a[i': 1, '[i]': 1, 'i] ': 1, '] =': 1, ' ==': 3, '== ': 3, '= t': 1, 'et:': 1, 't:\n': 1, '\t\t\t': 7, '\t\tr': 6, '\tre': 8, 'ret': 8, 'etu': 8, 'tur': 8, 'urn': 8, 'rn ': 8, 'n T': 3, ' Tr': 3, 'Tru': 3, 'rue': 3, 'ue\n': 3, 'e\n\t': 4, '\n\tr': 2, 'n F': 3, ' Fa': 3, 'Fal': 3, 'als': 3, 'lse': 6, 'se\n': 2, 'e\n\n': 1, '# I': 1, ' It': 1, 'Ite': 1, 'ter': 3, 'era': 3, 'rat': 3, 'ati': 3, 'tiv': 3, 'ive': 8, 've ': 2, 'e B': 2, ' Bi': 2, 'Bin': 2, 'ina': 8, 'nar': 8, 'ary': 8, 'ry ': 2, 'y S': 2, 'ch ': 2, 'h \n': 2, ' \nd': 2, 'f b': 2, ' bi': 4, 'bin': 6, 'ry_': 6, 'y_s': 6, 'ch_': 6, 'h_i': 2, '_it': 2, 'ite': 2, 've(': 6, 'e(d': 6, '\n\tl': 1, '\tlo': 2, 'low': 8, 'ow ': 6, 'w =': 2, ' = ': 8, '= 0': 1, ' 0\n': 1, '0\n\t': 1, '\n\th': 1, '\thi': 2, 'hig': 8, 'igh': 8, 'gh ': 2, 'h =': 2, '= l': 1, ' le': 2, 'a) ': 1, ') -': 1, ' - ': 2, '- 1': 2, ' 1\n': 3, '1\n\n': 1, '\n\n\t': 1, '\n\tw': 1, '\twh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 1, ' lo': 4, 'w <': 1, ' <=': 1, '<= ': 1, '= h': 1, ' hi': 6, 'gh:': 2, 'h:\n': 2, '\t\tm': 2, '\tmi': 2, 'mid': 10, 'id ': 4, 'd =': 2, '= (': 2, ' (l': 2, '(lo': 2, 'w +': 2, ' + ': 3, '+ h': 2, 'gh)': 4, 'h) ': 2, ') /': 2, ' //': 2, '// ': 2, '/ 2': 2, ' 2\n': 2, '2\n\t': 2, 'f t': 4, 'et ': 5, 't =': 3, '= d': 2, 'a[m': 4, '[mi': 4, 'id]': 4, 'd]:': 4, ']:\n': 4, '\t\te': 4, '\tel': 5, 'eli': 2, 'lif': 2, 't <': 2, ' < ': 2, '< d': 2, '\t\th': 1, '= m': 2, ' mi': 4, 'd -': 1, '1\n\t': 2, 'els': 3, 'se:': 3, 'e:\n': 3, '\t\tl': 1, 'd +': 1, '+ 1': 1, 'se ': 1, 'e \n': 1, ' \n\n': 1, '# R': 1, ' Re': 1, 'Rec': 1, 'ecu': 5, 'cur': 5, 'urs': 5, 'rsi': 5, 'siv': 5, 'h_r': 4, '_re': 4, 'rec': 4, 'et,': 4, 't, ': 4, ', l': 3, 'ow,': 2, 'w, ': 2, ', h': 2, 'h):': 1, '\n\ti': 1, 'w >': 1, ' > ': 1, '> h': 1, '\n\te': 1, 'n b': 2, ', m': 2, 'id-': 1, 'd-1': 1, '-1)': 2, '1)\n': 1, ')\n\t': 1, 'id+': 1, 'd+1': 1, '+1,': 1, '1, ': 1, 'h)\n': 1, ')\n\n': 1, '\n\n\n': 1, '\n\nd': 1, '\nda': 1, 'ta ': 1, 'a =': 1, '= [': 1, ' [2': 1, '[2,': 1, '2,4': 1, ',4,': 1, '4,5': 1, ',5,': 1, '5,7': 1, ',7,': 1, '7,8': 1, ',8,': 1, '8,9': 1, ',9,': 1, '9,1': 1, ',12': 1, '12,': 1, '2,1': 1, ',14': 1, '14,': 1, '4,1': 1, ',17': 1, '17,': 1, '7,1': 1, ',19': 1, '19,': 1, '9,2': 1, ',22': 1, '22,': 1, '2,2': 1, ',25': 1, '25,': 1, '5,2': 1, ',27': 1, '27,': 1, '7,2': 1, ',28': 1, '28,': 1, '8,3': 1, ',33': 1, '33,': 1, '3,3': 1, ',37': 1, '37]': 1, '7]\n': 1, ']\nt': 1, '\nta': 1, '= 3': 1, ' 37': 1, '37\n': 1, '7\n\n': 1, '\n\np': 1, '\npr': 2, 'pri': 2, 'rin': 2, 'int': 2, 'nt(': 2, 't(b': 2, '(bi': 2, ', 0': 1, ' 0,': 1, '0, ': 1, 'a)-': 1, ')-1': 1, '1))': 1, '))\n': 2, ')\np': 1, 't))': 1}"
Vincent Russo,bisect_ex.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 21, 'youtube': 1, 'video:': 1, 'https://www.youtube.com/watch?v=mqaf7vj1ada&list=pl5tcwhg-uph1kjie-fqt1xcskcwyfn2jb': 1, '""""""': 2, 'bisect:': 1, '-""built-in""': 1, 'binary': 1, 'search': 2, 'method': 1, 'in': 5, 'python.': 1, '-can': 1, 'be': 2, 'used': 2, 'to': 9, 'for': 1, 'an': 1, 'element': 1, 'a': 6, 'sorted': 2, 'list.': 2, 'import': 2, 'allows': 1, 'us': 1, 'make': 1, 'use': 1, 'of': 8, 'the': 17, 'bisect': 2, 'module.': 1, 'this': 3, 'list': 3, 'will': 1, 'throughout': 1, 'video': 1, 'showcase': 1, 'functionality': 1, '""bisect""': 2, 'method.': 1, '=': 1, '[-14,': 1, '-10,': 1, '2,': 1, '108,': 2, '243,': 1, '285,': 3, '401]': 1, 'bisect_left': 2, 'function': 4, 'finds': 1, 'index': 8, 'target': 2, 'element.': 1, 'event': 1, 'where': 1, 'there': 2, 'are': 1, 'duplicate': 1, 'entries': 2, 'satisfying': 1, 'element,': 1, 'returns': 2, 'left-most': 1, 'occurrence.': 1, '-10': 3, 'is': 10, 'at': 3, '1': 1, 'print(bisect.bisect_left(a,': 2, '-10))': 3, 'first': 1, 'occurrence': 3, '285': 3, '6': 1, '285))': 3, 'bisect_right': 1, 'insertion': 1, 'point': 1, 'which': 1, 'comes': 1, 'after,': 1, 'or': 1, 'right': 3, 'of,': 1, 'any': 1, 'existing': 1, 'position': 4, '2.': 2, 'print(bisect.bisect_right(a,': 2, 'after': 2, 'last': 2, '9.': 2, 'also': 1, 'just': 1, 'regular': 1, 'default': 1, 'function.': 1, 'equivalent': 1, '""bisect_right"":': 1, '(same': 2, 'as': 2, 'bisect_right)': 1, 'print(bisect.bisect(a,': 2, 'bisect_right).': 1, 'given': 1, 'that': 2, 'sorted,': 1, 'it': 1, 'possible': 1, 'insert': 2, 'elements': 1, 'into': 1, 'such': 1, 'remains': 1, 'sorted.': 1, 'functions': 2, '""insort_left""': 1, 'and': 2, '""insort_right""': 1, 'behave': 1, 'similar': 1, 'way': 1, '""bisect_left""': 1, '""bisect_right"",': 1, 'only': 1, 'insort': 1, 'positions.': 1, 'print(a)': 3, 'bisect.insort_left(a,': 1, '108)': 2, 'bisect.insort_right(a,': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 2, 'be ': 3, 'e V': 1, ' Vi': 1, 'Vid': 1, 'ide': 2, 'deo': 2, 'eo:': 1, 'o: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.y': 1, '.yo': 1, 'you': 1, 'out': 2, 'utu': 1, 'tub': 1, 'be.': 1, 'e.c': 1, '.co': 1, 'com': 2, 'om/': 1, 'm/w': 1, '/wa': 1, 'wat': 1, 'atc': 1, 'tch': 1, 'ch?': 1, 'h?v': 1, '?v=': 1, 'v=m': 1, '=mq': 1, 'mqa': 1, 'qaf': 1, 'af7': 1, 'f7v': 1, '7vj': 1, 'vj1': 1, 'j1A': 1, '1Ad': 1, 'AdA': 1, 'dA&': 1, 'A&l': 1, '&li': 1, 'lis': 6, 'ist': 7, 'st=': 1, 't=P': 1, '=PL': 1, 'PL5': 1, 'L5t': 1, '5tc': 1, 'tcW': 1, 'cWH': 1, 'WHG': 1, 'HG-': 1, 'G-U': 1, '-UP': 1, 'UPH': 1, 'PH1': 1, 'H1k': 1, '1kj': 1, 'kji': 1, 'jiE': 1, 'iE-': 1, 'E-F': 1, '-Fq': 1, 'Fqt': 1, 'qt1': 1, 't1x': 1, '1xC': 1, 'xCS': 1, 'CSk': 1, 'Skc': 1, 'kcw': 1, 'cwy': 1, 'wyf': 1, 'yfn': 1, 'fn2': 1, 'n2J': 1, '2Jb': 1, 'Jb\n': 1, 'b\n""': 1, '\n""""': 2, '""""""': 2, '""""\n': 2, '""\nB': 1, '\nBi': 1, 'Bis': 1, 'ise': 27, 'sec': 27, 'ect': 27, 'ct:': 1, 't:\n': 1, ':\n ': 1, '\n  ': 2, '   ': 4, '  -': 2, ' -""': 1, '-""B': 1, '""Bu': 1, 'Bui': 1, 'uil': 1, 'ilt': 1, 'lt-': 1, 't-i': 1, '-in': 1, 'in""': 1, 'n"" ': 1, '"" b': 2, ' bi': 8, 'bin': 1, 'ina': 1, 'nar': 1, 'ary': 1, 'ry ': 1, 'y s': 1, ' se': 2, 'sea': 2, 'ear': 2, 'arc': 2, 'rch': 2, 'ch ': 4, 'h m': 1, ' me': 2, 'met': 2, 'eth': 2, 'tho': 3, 'hod': 2, 'od ': 1, 'd i': 1, ' in': 13, 'in ': 4, 'n P': 1, ' Py': 1, 'Pyt': 1, 'yth': 1, 'hon': 1, 'on.': 2, 'n.\n': 1, '.\n ': 1, ' -C': 1, '-Ca': 1, 'Can': 1, 'an ': 2, 'n b': 1, ' be': 3, 'e u': 3, ' us': 4, 'use': 3, 'sed': 2, 'ed ': 4, 'd t': 2, ' to': 9, 'to ': 9, 'o s': 2, 'h f': 1, ' fo': 1, 'for': 1, 'or ': 2, 'r a': 1, ' an': 4, 'n e': 1, ' el': 4, 'ele': 4, 'lem': 4, 'eme': 4, 'men': 4, 'ent': 8, 'nt ': 4, 't i': 4, 'n a': 4, ' a ': 3, 'a s': 2, ' so': 4, 'sor': 9, 'ort': 11, 'rte': 4, 'ted': 4, 'd l': 2, ' li': 5, 'st.': 2, 't.\n': 3, '.\n""': 1, '""\n\n': 1, '\n\n#': 12, '\n# ': 20, '# I': 6, ' Im': 1, 'Imp': 1, 'mpo': 2, 'por': 2, 'rt ': 5, 't a': 3, ' al': 2, 'all': 1, 'llo': 1, 'low': 1, 'ows': 1, 'ws ': 1, 's u': 1, 'us ': 1, 's t': 3, 'o m': 1, ' ma': 1, 'mak': 1, 'ake': 1, 'ke ': 1, 'se ': 2, 'e o': 4, ' of': 9, 'of ': 8, 'f t': 3, ' th': 20, 'the': 16, 'he ': 17, 'e b': 4, 'bis': 26, 'ct ': 1, 't m': 1, ' mo': 1, 'mod': 1, 'odu': 1, 'dul': 1, 'ule': 1, 'le.': 1, 'e.\n': 2, '.\ni': 1, '\nim': 1, 'imp': 1, 't b': 1, 'ct\n': 1, 't\n\n': 1, '# T': 4, ' Th': 5, 'Thi': 2, 'his': 3, 'is ': 13, 's s': 4, 'st ': 8, 't w': 3, ' wi': 1, 'wil': 1, 'ill': 1, 'll ': 1, 'l b': 1, 'thr': 1, 'hro': 1, 'rou': 1, 'oug': 1, 'ugh': 1, 'gho': 1, 'hou': 1, 'ut ': 1, 't t': 5, 'thi': 1, 's v': 1, ' vi': 1, 'vid': 1, 'eo\n': 1, 'o\n#': 2, '# t': 1, ' sh': 1, 'sho': 1, 'how': 1, 'owc': 1, 'wca': 1, 'cas': 1, 'ase': 1, 'e t': 5, 'e f': 1, ' fu': 7, 'fun': 7, 'unc': 8, 'nct': 8, 'cti': 8, 'tio': 14, 'ion': 14, 'ona': 1, 'nal': 1, 'ali': 1, 'lit': 1, 'ity': 1, 'ty ': 1, 'y o': 1, 'e ""': 1, ' ""b': 5, '""bi': 5, 'ct""': 2, 't"" ': 5, '"" m': 1, 'od.': 1, 'd.\n': 1, '.\nA': 1, '\nA ': 1, 'A =': 1, ' = ': 1, '= [': 1, ' [-': 1, '[-1': 1, '-14': 1, '14,': 1, '4, ': 1, ', -': 4, ' -1': 7, '-10': 7, '10,': 1, '0, ': 1, ', 2': 8, ' 2,': 1, '2, ': 1, ', 1': 4, ' 10': 4, '108': 4, '08,': 2, '8, ': 2, ' 24': 1, '243': 1, '43,': 1, '3, ': 1, ' 28': 9, '285': 9, '85,': 3, '5, ': 3, ', 4': 1, ' 40': 1, '401': 1, '01]': 1, '1]\n': 1, ']\n\n': 1, 'The': 3, 'ct_': 12, 't_l': 7, '_le': 7, 'lef': 8, 'eft': 8, 'ft ': 2, 't f': 4, 'on ': 8, 'n f': 1, ' fi': 1, 'fin': 1, 'ind': 5, 'nds': 1, 'ds ': 1, 's i': 4, 'nde': 8, 'dex': 8, 'ex ': 8, 'x o': 1, ' ta': 2, 'tar': 2, 'arg': 2, 'rge': 2, 'get': 2, 'et ': 1, 't e': 2, 'nt.': 1, '.\n#': 1, ' In': 5, 'In ': 1, 'n t': 5, 'e e': 2, ' ev': 1, 'eve': 1, 'ven': 2, ' wh': 2, 'whe': 1, 'her': 3, 'ere': 3, 're ': 4, 'e a': 3, ' ar': 1, 'are': 1, 'e d': 1, ' du': 1, 'dup': 1, 'upl': 1, 'pli': 1, 'lic': 1, 'ica': 1, 'cat': 1, 'ate': 1, 'te ': 1, ' en': 2, 'ntr': 2, 'tri': 2, 'rie': 2, 'ies': 2, 'es ': 3, ' sa': 1, 'sat': 1, 'ati': 1, 'tis': 1, 'isf': 1, 'sfy': 1, 'fyi': 1, 'yin': 1, 'ing': 2, 'ng ': 2, 'g t': 1, 'et\n': 1, 't\n#': 1, '# e': 1, 'nt,': 1, 't, ': 1, ', t': 1, 'n r': 2, ' re': 4, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rns': 2, 'ns ': 5, 'e l': 4, ' le': 1, 'ft-': 1, 't-m': 1, '-mo': 1, 'mos': 1, 'ost': 1, 't o': 7, ' oc': 4, 'occ': 4, 'ccu': 4, 'cur': 4, 'urr': 4, 'rre': 4, 'ren': 4, 'enc': 4, 'nce': 4, 'ce.': 1, '.\n\n': 2, '# -': 1, '10 ': 3, '0 i': 3, ' is': 10, 's a': 4, ' at': 3, 'at ': 5, 'x 1': 1, ' 1\n': 1, '1\np': 1, '\npr': 9, 'pri': 9, 'rin': 9, 'int': 11, 'nt(': 9, 't(b': 6, '(bi': 6, 'ct.': 8, 't.b': 6, '.bi': 6, 'ft(': 3, 't(A': 11, '(A,': 8, 'A, ': 8, '10)': 3, '0))': 3, '))\n': 4, ')\n\n': 5, '# F': 1, ' Fi': 1, 'Fir': 1, 'irs': 1, 'rst': 1, 'ce ': 3, 'f 2': 3, '85 ': 3, '5 i': 3, 'x 6': 1, ' 6\n': 1, '6\np': 1, '85)': 3, '5))': 3, 't_r': 9, '_ri': 9, 'rig': 12, 'igh': 12, 'ght': 12, 'ht ': 4, 'e i': 5, 'ins': 9, 'nse': 3, 'ser': 3, 'ert': 3, 'rti': 1, 'n p': 1, ' po': 7, 'poi': 1, 'oin': 1, 'whi': 1, 'hic': 1, 'ich': 1, 'h c': 1, ' co': 1, 'ome': 1, 'mes': 1, ' af': 3, 'aft': 3, 'fte': 3, 'ter': 3, 'er,': 1, 'r,\n': 1, ',\n#': 2, '# o': 2, ' or': 1, 'r t': 1, 'o t': 1, 'e r': 1, ' ri': 3, 'of,': 1, 'f, ': 1, ', a': 1, 'any': 1, 'ny ': 1, 'y e': 1, ' ex': 1, 'exi': 1, 'xis': 1, 'sti': 1, 'tin': 1, 'g e': 1, 'Ind': 4, 'x p': 5, 'pos': 6, 'osi': 5, 'sit': 5, 'iti': 5, 'o r': 2, 'f -': 2, 's 2': 2, ' 2.': 2, '2.\n': 1, '.\np': 4, 'ht(': 3, ')) ': 2, ') \n': 2, ' \n\n': 2, 'er ': 2, 'r l': 2, ' la': 2, 'las': 2, 'ast': 2, 's 9': 2, ' 9.': 2, '9.\n': 1, 'als': 1, 'lso': 1, 'so ': 1, 'o j': 1, ' ju': 1, 'jus': 1, 'ust': 1, 'a r': 1, 'reg': 1, 'egu': 1, 'gul': 1, 'ula': 1, 'lar': 2, 'ar ': 2, 'r d': 1, ' de': 1, 'def': 1, 'efa': 1, 'fau': 1, 'aul': 1, 'ult': 1, 'lt ': 1, 't ""': 1, '"" f': 1, 'n. ': 1, '. T': 1, 's f': 1, 'on\n': 1, 'n\n#': 1, '# i': 1, 's e': 1, ' eq': 1, 'equ': 1, 'qui': 1, 'uiv': 1, 'iva': 1, 'val': 1, 'ale': 1, 'len': 1, 'o ""': 2, 'ht""': 3, 't"":': 1, '"":\n': 1, ':\n\n': 1, '2. ': 1, '. (': 2, ' (S': 2, '(Sa': 2, 'Sam': 2, 'ame': 2, 'me ': 2, ' as': 2, 'as ': 2, 's b': 2, 'ht)': 2, 't)\n': 1, ')\np': 3, 'ct(': 2, '9. ': 1, 't).': 1, ').\n': 1, '# G': 1, ' Gi': 1, 'Giv': 1, 'ive': 1, 'en ': 1, 'tha': 2, 'hat': 2, 't A': 1, ' A ': 2, 'A i': 1, 'ed,': 1, 'd, ': 1, ', i': 1, ' it': 1, 'it ': 1, 's p': 1, 'oss': 1, 'ssi': 1, 'sib': 1, 'ibl': 1, 'ble': 1, 'le ': 1, 'o i': 1, 'nts': 1, 'ts ': 1, 'nto': 1, 'to\n': 1, '# A': 1, 'A s': 1, ' su': 1, 'suc': 1, 'uch': 1, 'h t': 1, 't r': 1, 'rem': 1, 'ema': 1, 'mai': 1, 'ain': 1, 'ed.': 1, 'd. ': 1, '. F': 1, ' Fu': 1, 'Fun': 1, 'ons': 3, 's ""': 1, ' ""i': 2, '""in': 2, 'nso': 5, 'rt_': 4, 'ft""': 2, '"" a': 2, 'and': 2, 'nd ': 2, 'd \n': 1, ' \n#': 1, '# ""': 1, 'beh': 1, 'eha': 1, 'hav': 1, 'ave': 1, 've ': 1, ' si': 1, 'sim': 1, 'imi': 1, 'mil': 1, 'ila': 1, 'r w': 1, ' wa': 1, 'way': 1, 'ay ': 1, 'y t': 2, 'd ""': 1, 't"",': 1, '"",\n': 1, ' on': 1, 'onl': 1, 'nly': 1, 'ly ': 1, 'ns.': 1, 's.\n': 1, '(A)': 3, 'A)\n': 3, ')\nb': 1, '\nbi': 2, 't.i': 2, '.in': 2, '08)': 2, '8)\n': 2, '\n\nb': 1}"
Vincent Russo,bitonic_peak.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 3, 'youtube': 1, 'link:': 1, 'https://www.youtube.com/watch?v=ghhjjccc_4w&list=pl5tcwhg-uph1kjie-fqt1xcskcwyfn2jb': 1, '""""""': 2, 'define': 1, 'a': 8, 'bitonic': 3, 'sequence': 2, 'as': 1, 'of': 1, 'integers': 1, 'such': 3, 'that:': 1, 'x_1': 1, '<': 9, '...': 2, 'x_k': 1, '>': 5, 'x_n-1': 1, 'for': 3, 'some': 1, 'k,': 1, '0': 3, '<=': 2, 'k': 1, 'n.': 1, 'example:': 1, '1,': 1, '2,': 4, '3,': 4, '4,': 4, '5,': 2, '1': 6, 'is': 2, 'sequence.': 3, 'write': 1, 'program': 2, 'to': 1, 'find': 1, 'the': 3, 'largest': 1, 'element': 3, 'in': 2, 'example': 1, 'above,': 1, 'should': 1, 'return': 4, '""5"".': 2, 'we': 1, 'assume': 1, 'that': 1, '""peak""': 1, 'exists.': 1, 'peak': 1, '=': 9, '[1,': 1, '1]': 3, 'def': 1, 'find_highest_number(a):': 1, 'low': 3, 'high': 2, 'len(a)': 3, '-': 4, 'require': 1, 'at': 1, 'least': 1, '3': 1, 'elements': 1, 'if': 4, '3:': 1, 'none': 2, 'while': 1, 'high:': 1, 'mid': 5, '(low': 1, '+': 4, 'high)//2': 1, 'mid_left': 4, 'a[mid': 2, 'else': 2, 'float(""-inf"")': 1, 'mid_right': 4, 'float(""inf"")': 1, 'a[mid]': 4, 'and': 3, 'a[mid]:': 3, 'elif': 2, 'else:': 1, 'x': 1, 'find_highest_number(a)': 1, 'print(x)': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 2, 'be ': 1, 'e L': 1, ' Li': 1, 'Lin': 1, 'ink': 1, 'nk:': 1, 'k: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.y': 1, '.yo': 1, 'you': 1, 'out': 1, 'utu': 1, 'tub': 1, 'be.': 1, 'e.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/w': 1, '/wa': 1, 'wat': 1, 'atc': 1, 'tch': 1, 'ch?': 1, 'h?v': 1, '?v=': 1, 'v=g': 1, '=gH': 1, 'gHH': 1, 'HHj': 1, 'Hjj': 1, 'jjc': 1, 'jcC': 1, 'cCc': 1, 'Cc_': 1, 'c_4': 1, '_4w': 1, '4w&': 1, 'w&l': 1, '&li': 1, 'lis': 1, 'ist': 2, 'st=': 1, 't=P': 1, '=PL': 1, 'PL5': 1, 'L5t': 1, '5tc': 1, 'tcW': 1, 'cWH': 1, 'WHG': 1, 'HG-': 1, 'G-U': 1, '-UP': 1, 'UPH': 1, 'PH1': 1, 'H1k': 1, '1kj': 1, 'kji': 1, 'jiE': 1, 'iE-': 1, 'E-F': 1, '-Fq': 1, 'Fqt': 1, 'qt1': 1, 't1x': 1, '1xC': 1, 'xCS': 1, 'CSk': 1, 'Skc': 1, 'kcw': 1, 'cwy': 1, 'wyf': 1, 'yfn': 1, 'fn2': 1, 'n2J': 1, '2Jb': 1, 'Jb\n': 1, 'b\n""': 1, '\n""""': 2, '""""""': 2, '""""\n': 2, '""\nD': 1, '\nDe': 1, 'Def': 1, 'efi': 1, 'fin': 4, 'ine': 1, 'ne ': 1, 'e a': 6, ' a ': 6, 'a b': 3, ' bi': 3, 'bit': 3, 'ito': 3, 'ton': 3, 'oni': 3, 'nic': 3, 'ic ': 3, 'c s': 3, ' se': 4, 'seq': 5, 'equ': 6, 'que': 5, 'uen': 5, 'enc': 5, 'nce': 5, 'ce ': 2, ' as': 2, 'as ': 1, 's a': 2, 'a s': 1, 'e o': 1, ' of': 1, 'of ': 1, 'f i': 1, ' in': 2, 'int': 2, 'nte': 1, 'teg': 1, 'ege': 1, 'ger': 1, 'ers': 1, 'rs ': 1, 's s': 1, ' su': 3, 'suc': 3, 'uch': 3, 'ch ': 3, 'h t': 1, ' th': 5, 'tha': 2, 'hat': 2, 'at:': 1, 't:\n': 1, ':\n ': 9, '\n  ': 19, '   ': 102, '  x': 1, ' x_': 3, 'x_1': 1, '_1 ': 1, '1 <': 2, ' < ': 9, '< .': 1, ' ..': 2, '...': 2, '.. ': 2, '. <': 1, '< x': 1, 'x_k': 1, '_k ': 1, 'k >': 1, ' > ': 5, '> .': 1, '. >': 1, '> x': 1, 'x_n': 1, '_n-': 1, 'n-1': 1, '-1 ': 1, '1 f': 1, ' fo': 2, 'for': 2, 'or ': 3, 'r s': 1, ' so': 1, 'som': 1, 'ome': 1, 'me ': 2, 'e k': 1, ' k,': 1, 'k, ': 1, ', 0': 1, ' 0 ': 2, '0 <': 1, ' <=': 2, '<= ': 2, '= k': 1, ' k ': 1, 'k <': 1, '< n': 1, ' n.': 1, 'n.\n': 1, '.\n\n': 2, '\n\nF': 1, '\nFo': 1, 'For': 1, 'r e': 1, ' ex': 3, 'exa': 2, 'xam': 2, 'amp': 2, 'mpl': 2, 'ple': 2, 'le:': 1, 'e:\n': 2, '  1': 1, ' 1,': 1, '1, ': 2, ', 2': 4, ' 2,': 4, '2, ': 4, ', 3': 4, ' 3,': 4, '3, ': 4, ', 4': 4, ' 4,': 4, '4, ': 4, ', 5': 2, ' 5,': 2, '5, ': 2, ', 1': 2, ' 1\n': 4, '1\n\n': 2, '\n\ni': 1, '\nis': 1, 'is ': 2, 'ce.': 3, 'e. ': 2, '. W': 1, ' Wr': 1, 'Wri': 1, 'rit': 1, 'ite': 1, 'te ': 1, 'a p': 1, ' pr': 2, 'pro': 2, 'rog': 2, 'ogr': 2, 'gra': 2, 'ram': 2, 'am ': 2, 'm t': 1, ' to': 1, 'to ': 1, 'o f': 1, ' fi': 3, 'ind': 3, 'nd ': 4, 'd t': 1, 'the': 3, 'he ': 3, 'e l': 2, ' la': 1, 'lar': 1, 'arg': 1, 'rge': 1, 'ges': 1, 'est': 3, 'st ': 2, 't e': 2, ' el': 9, 'ele': 4, 'lem': 4, 'eme': 4, 'men': 4, 'ent': 4, 'nt ': 3, 't i': 2, 'in ': 1, 'n s': 1, 'h a': 2, ' a\n': 1, 'a\ns': 1, '\nse': 1, '. I': 1, ' In': 1, 'In ': 1, 'n t': 1, 'e e': 1, 'le ': 2, ' ab': 1, 'abo': 1, 'bov': 1, 'ove': 1, 've,': 1, 'e, ': 1, ', t': 1, 'e p': 1, 'm s': 1, ' sh': 1, 'sho': 1, 'hou': 1, 'oul': 1, 'uld': 1, 'ld ': 1, 'd r': 1, ' re': 4, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 4, 'n ""': 1, ' ""5': 2, '""5""': 2, '5"".': 2, '"".\n': 2, '\n\nW': 1, '\nWe': 1, 'We ': 1, 'ass': 1, 'ssu': 1, 'sum': 1, 'ume': 1, 'e t': 1, 'at ': 2, 't s': 1, 'a ""': 1, ' ""p': 1, '""pe': 1, 'pea': 1, 'eak': 2, 'ak""': 1, 'k"" ': 1, '"" e': 1, 'exi': 1, 'xis': 1, 'sts': 1, 'ts.': 1, 's.\n': 1, '.\n""': 1, '""\n\n': 1, '\n\n#': 1, '\n# ': 1, '# P': 1, ' Pe': 1, 'Pea': 1, 'ak ': 1, 'k e': 1, ' is': 1, 's ""': 1, '.\nA': 1, '\nA ': 1, 'A =': 1, ' = ': 9, '= [': 1, ' [1': 1, '[1,': 1, ' 1]': 3, '1]\n': 1, ']\n\n': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f f': 1, 'nd_': 2, 'd_h': 2, '_hi': 2, 'hig': 6, 'igh': 10, 'ghe': 2, 'hes': 2, 'st_': 2, 't_n': 2, '_nu': 2, 'num': 2, 'umb': 2, 'mbe': 2, 'ber': 2, 'er(': 2, 'r(A': 2, '(A)': 5, 'A):': 1, '):\n': 1, '  l': 2, ' lo': 3, 'low': 4, 'ow ': 4, 'w =': 2, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  h': 2, ' hi': 4, 'gh ': 2, 'h =': 2, '= l': 1, ' le': 4, 'len': 3, 'en(': 3, 'n(A': 3, 'A) ': 3, ') -': 1, ' - ': 4, '- 1': 4, '\n\n ': 4, '  #': 1, ' # ': 1, '# R': 1, ' Re': 1, 'Req': 1, 'qui': 1, 'uir': 1, 'ire': 1, 're ': 1, ' at': 1, 't l': 1, 'lea': 1, 'eas': 1, 'ast': 1, 't 3': 1, ' 3 ': 1, '3 e': 1, 'nts': 1, 'ts ': 1, 's f': 1, 'r a': 1, 'e.\n': 1, '.\n ': 1, '  i': 2, ' if': 4, 'if ': 6, 'f l': 1, ') <': 1, '< 3': 1, ' 3:': 1, '3:\n': 1, '  r': 3, 'n N': 2, ' No': 2, 'Non': 2, 'one': 2, 'ne\n': 2, 'e\n\n': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'w <': 1, '= h': 1, 'gh:': 1, 'h:\n': 1, '  m': 3, ' mi': 13, 'mid': 22, 'id ': 7, 'd =': 1, '= (': 1, ' (l': 1, '(lo': 1, 'w +': 1, ' + ': 4, '+ h': 1, 'gh)': 1, 'h)/': 1, ')//': 1, '//2': 1, '/2\n': 1, '2\n\n': 1, 'id_': 8, 'd_l': 4, '_le': 4, 'lef': 4, 'eft': 4, 'ft ': 4, 't =': 2, '= A': 2, ' A[': 9, 'A[m': 9, '[mi': 9, 'd -': 3, '1] ': 2, '] i': 2, 'f m': 5, ' 1 ': 2, '1 >': 1, '> 0': 1, '0 e': 1, 'els': 3, 'lse': 3, 'se ': 2, 'e f': 2, ' fl': 2, 'flo': 2, 'loa': 2, 'oat': 2, 'at(': 2, 't(""': 2, '(""-': 1, '""-i': 1, '-in': 1, 'inf': 2, 'nf""': 2, 'f"")': 2, '"")\n': 2, ')\n ': 1, 'd_r': 4, '_ri': 4, 'rig': 4, 'ght': 4, 'ht ': 4, 'd +': 3, '+ 1': 3, '< l': 1, ') e': 1, '(""i': 1, '""in': 1, ')\n\n': 1, 't <': 4, '< A': 4, 'id]': 7, 'd] ': 3, '] a': 3, ' an': 3, 'and': 3, 'd m': 3, 't >': 2, '> A': 2, 'd]:': 3, ']:\n': 3, '= m': 2, '1\n ': 2, '  e': 3, 'eli': 2, 'lif': 2, 'n A': 1, 'd]\n': 1, ']\n ': 1, 'se:': 1, '\n\nx': 1, '\nx ': 1, 'x =': 1, '= f': 1, 'A)\n': 1, ')\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'nt(': 1, 't(x': 1, '(x)': 1, 'x)\n': 1}"
Vincent Russo,closest_number.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 12, 'youtube': 1, 'video:': 1, 'https://www.youtube.com/watch?v=0gkwzne1h4y&list=pl5tcwhg-uph1kjie-fqt1xcskcwyfn2jb': 1, '""""""': 2, 'given': 3, 'an': 1, 'array': 3, 'of': 3, 'sorted': 1, 'integers.': 1, 'we': 1, 'need': 1, 'to': 4, 'find': 1, 'the': 10, 'closest': 3, 'value': 2, 'number.': 2, 'may': 1, 'contain': 1, 'duplicate': 1, 'values': 1, 'and': 2, 'negative': 1, 'numbers.': 1, 'examples:': 1, 'input': 2, ':': 3, 'arr[]': 1, '=': 20, '{1,': 1, '2,': 2, '4,': 2, '5,': 4, '6,': 6, '8,': 6, '9}': 1, 'target': 2, 'number': 3, '11': 2, 'output': 2, '9': 2, 'is': 4, 'in': 1, ':arr[]': 1, '{2,': 1, '7,': 2, '9};': 1, '4': 1, '5': 1, 'a': 2, '[1,': 1, '9]': 2, '[2,': 1, 'def': 1, 'find_closest_num(a,': 2, 'target):': 1, 'min_diff': 3, 'float(""inf"")': 1, 'low': 3, '0': 1, 'high': 2, 'len(a)': 3, '-': 6, '1': 3, 'closest_num': 4, 'none': 2, 'edge': 1, 'cases': 1, 'for': 1, 'empty': 1, 'list': 2, 'with': 1, 'only': 1, 'one': 1, 'element:': 1, 'if': 9, '==': 2, '0:': 2, 'return': 5, '1:': 1, 'a[0]': 1, 'while': 1, '<=': 1, 'high:': 1, 'mid': 4, '(low': 1, '+': 4, 'high)//2': 1, 'ensure': 1, 'you': 1, 'do': 1, 'not': 1, 'read': 1, 'beyond': 1, 'bounds': 1, 'list.': 1, 'mid+1': 1, '<': 4, 'len(a):': 1, 'min_diff_right': 3, 'abs(a[mid': 2, '1]': 4, 'target)': 2, '>': 2, 'min_diff_left': 3, 'check': 1, 'absolute': 1, 'between': 1, 'left': 1, 'right': 1, 'elements': 1, 'are': 1, 'smaller': 1, 'than': 1, 'any': 1, 'seen': 1, 'prior.': 1, 'min_diff:': 2, 'a[mid': 2, 'move': 1, 'mid-point': 1, 'appropriately': 1, 'as': 1, 'done': 1, 'via': 1, 'binary': 1, 'search.': 1, 'a[mid]': 3, 'target:': 2, 'elif': 1, 'element': 1, 'itself': 1, 'target,': 1, 'it': 1, 'itself.': 1, 'else:': 1, 'y': 1, '4)': 1, 'print(y)': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 2, 'be ': 1, 'e V': 1, ' Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eo:': 1, 'o: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.y': 1, '.yo': 1, 'you': 2, 'out': 1, 'utu': 1, 'tub': 1, 'be.': 1, 'e.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/w': 1, '/wa': 1, 'wat': 1, 'atc': 1, 'tch': 1, 'ch?': 1, 'h?v': 1, '?v=': 1, 'v=0': 1, '=0g': 1, '0gk': 1, 'gkW': 1, 'kWZ': 1, 'WZN': 1, 'ZNE': 1, 'NE1': 1, 'E1H': 1, '1H4': 1, 'H4Y': 1, '4Y&': 1, 'Y&l': 1, '&li': 1, 'lis': 4, 'ist': 4, 'st=': 1, 't=P': 1, '=PL': 1, 'PL5': 1, 'L5t': 1, '5tc': 1, 'tcW': 1, 'cWH': 1, 'WHG': 1, 'HG-': 1, 'G-U': 1, '-UP': 1, 'UPH': 1, 'PH1': 1, 'H1k': 1, '1kj': 1, 'kji': 1, 'jiE': 1, 'iE-': 1, 'E-F': 1, '-Fq': 1, 'Fqt': 1, 'qt1': 1, 't1x': 1, '1xC': 1, 'xCS': 1, 'CSk': 1, 'Skc': 1, 'kcw': 1, 'cwy': 1, 'wyf': 1, 'yfn': 1, 'fn2': 1, 'n2J': 1, '2Jb': 1, 'Jb\n': 1, 'b\n""': 1, '\n""""': 2, '""""""': 2, '""""\n': 2, '""\nG': 1, '\nGi': 1, 'Giv': 1, 'ive': 4, 'ven': 3, 'en ': 5, 'n a': 4, ' an': 4, 'an ': 2, ' ar': 4, 'arr': 4, 'rra': 3, 'ray': 3, 'ay ': 3, 'y o': 2, ' of': 3, 'of ': 3, 'f s': 1, ' so': 1, 'sor': 1, 'ort': 1, 'rte': 1, 'ted': 1, 'ed ': 2, 'd i': 1, ' in': 2, 'int': 3, 'nte': 1, 'teg': 1, 'ege': 1, 'ger': 1, 'ers': 2, 'rs.': 2, 's. ': 1, '. W': 1, ' We': 1, 'We ': 1, 'e n': 3, ' ne': 2, 'nee': 1, 'eed': 1, 'd t': 3, ' to': 4, 'to ': 4, 'o f': 1, ' fi': 3, 'fin': 3, 'ind': 3, 'nd ': 4, ' th': 11, 'the': 10, 'he ': 10, 'e c': 3, ' cl': 7, 'clo': 9, 'los': 9, 'ose': 9, 'ses': 10, 'est': 9, 'st ': 3, 't v': 1, ' va': 3, 'val': 3, 'alu': 3, 'lue': 3, 'ue ': 2, 'e t': 3, 'o t': 1, 'e \n': 1, ' \ng': 1, '\ngi': 1, 'giv': 2, 'n n': 1, ' nu': 6, 'num': 12, 'umb': 6, 'mbe': 6, 'ber': 6, 'er.': 2, 'r.\n': 3, '.\n\n': 2, '\n\nA': 2, '\nAr': 1, 'Arr': 1, 'y m': 1, ' ma': 1, 'may': 1, 'y c': 1, ' co': 1, 'con': 1, 'ont': 1, 'nta': 1, 'tai': 1, 'ain': 1, 'in ': 2, 'n d': 1, ' du': 1, 'dup': 1, 'upl': 1, 'pli': 1, 'lic': 1, 'ica': 1, 'cat': 1, 'ate': 2, 'te ': 2, 'e v': 2, 'ues': 1, 'es ': 2, 's a': 2, 'and': 2, 'd n': 1, 'neg': 1, 'ega': 1, 'gat': 1, 'ati': 1, 'tiv': 1, 've ': 2, 's.\n': 1, '\n\nE': 1, '\nEx': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'les': 1, 'es:': 1, 's:\n': 1, ':\n\n': 1, '\n\n ': 9, '\n  ': 45, '   ': 238, '  I': 2, ' In': 2, 'Inp': 2, 'npu': 2, 'put': 4, 'ut ': 4, 't :': 4, ' : ': 3, ': a': 1, 'rr[': 2, 'r[]': 2, '[] ': 2, '] =': 2, ' = ': 20, '= {': 2, ' {1': 1, '{1,': 1, '1, ': 2, ', 2': 2, ' 2,': 2, '2, ': 4, ', 4': 3, ' 4,': 2, '4, ': 2, ', 5': 4, ' 5,': 4, '5, ': 4, ', 6': 6, ' 6,': 6, '6, ': 6, ', 8': 6, ' 8,': 6, '8, ': 6, ', 9': 4, ' 9}': 2, '9}\n': 1, '}\n\n': 1, '  T': 2, ' Ta': 2, 'Tar': 2, 'arg': 8, 'rge': 8, 'get': 8, 'et ': 2, 't n': 2, 'er ': 4, 'r =': 2, '= 1': 2, ' 11': 2, '11\n': 1, '1\n ': 4, '  O': 2, ' Ou': 2, 'Out': 2, 'utp': 2, 'tpu': 2, ': 9': 1, ' 9\n': 1, '9\n ': 1, '  9': 1, ' 9 ': 1, '9 i': 1, ' is': 4, 'is ': 4, 's c': 1, 't t': 1, 'o 1': 1, '11 ': 1, '1 i': 1, 'n g': 1, ' gi': 1, 'ay\n': 1, 'y\n\n': 1, ' :a': 1, ':ar': 1, ' {2': 1, '{2,': 1, ', 7': 2, ' 7,': 2, '7, ': 2, '9};': 1, '};\n': 1, ';\n ': 1, '= 4': 1, ' 4\n': 1, '4\n ': 1, ': 5': 1, ' 5\n': 1, '5\n""': 1, '""\n\n': 1, '\nA ': 2, 'A =': 2, '= [': 2, ' [1': 1, '[1,': 1, ' 9]': 2, '9]\n': 2, ']\nA': 1, ' [2': 1, '[2,': 1, ']\n\n': 4, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f f': 1, 'nd_': 2, 'd_c': 2, '_cl': 2, 'st_': 6, 't_n': 6, '_nu': 6, 'um(': 2, 'm(A': 2, '(A,': 2, 'A, ': 2, ', t': 2, ' ta': 6, 'tar': 6, 'et)': 3, 't):': 1, '):\n': 2, ':\n ': 12, '  m': 6, ' mi': 17, 'min': 11, 'in_': 11, 'n_d': 11, '_di': 11, 'dif': 11, 'iff': 11, 'ff ': 3, 'f =': 3, '= f': 2, ' fl': 1, 'flo': 1, 'loa': 1, 'oat': 1, 'at(': 1, 't(""': 1, '(""i': 1, '""in': 1, 'inf': 1, 'nf""': 1, 'f"")': 1, '"")\n': 1, ')\n ': 2, '  l': 2, ' lo': 3, 'low': 4, 'ow ': 4, 'w =': 2, '= 0': 2, ' 0\n': 1, '0\n ': 1, '  h': 2, ' hi': 4, 'hig': 4, 'igh': 8, 'gh ': 2, 'h =': 2, '= l': 1, ' le': 5, 'len': 4, 'en(': 4, 'n(A': 4, '(A)': 4, 'A) ': 3, ') -': 1, ' - ': 6, '- 1': 4, ' 1\n': 3, '  c': 3, 'um ': 3, 'm =': 3, '= N': 1, ' No': 2, 'Non': 2, 'one': 4, 'ne\n': 3, 'e\n\n': 1, '  #': 11, ' # ': 11, '# E': 2, ' Ed': 1, 'Edg': 1, 'dge': 1, 'ge ': 1, ' ca': 1, 'cas': 1, 'ase': 1, 's f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r e': 1, ' em': 1, 'emp': 1, 'mpt': 1, 'pty': 1, 'ty ': 1, 'y l': 1, ' li': 3, 't o': 1, 'f l': 3, 'st\n': 2, 't\n ': 5, '# w': 1, ' wi': 1, 'wit': 1, 'ith': 1, 'th ': 1, 'h o': 1, ' on': 2, 'onl': 1, 'nly': 1, 'ly ': 2, 'ne ': 1, 'e e': 2, ' el': 5, 'ele': 3, 'lem': 3, 'eme': 3, 'men': 3, 'ent': 3, 'nt:': 1, 't:\n': 3, '  i': 7, ' if': 8, 'if ': 9, ') =': 2, ' ==': 2, '== ': 2, ' 0:': 2, '0:\n': 2, '  r': 4, ' re': 5, 'ret': 4, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 5, 'n N': 1, 'e\n ': 2, ' 1:': 1, '1:\n': 1, 'n A': 2, ' A[': 6, 'A[0': 1, '[0]': 1, '0]\n': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 2, 'w <': 1, ' <=': 1, '<= ': 1, '= h': 1, 'gh:': 1, 'h:\n': 1, 'mid': 13, 'id ': 8, 'd =': 1, '= (': 1, ' (l': 1, '(lo': 1, 'w +': 1, ' + ': 4, '+ h': 1, 'gh)': 1, 'h)/': 1, ')//': 1, '//2': 1, '/2\n': 1, '2\n\n': 1, ' En': 1, 'Ens': 1, 'nsu': 1, 'sur': 1, 'ure': 1, 're ': 2, 'e y': 1, ' yo': 1, 'ou ': 1, 'u d': 1, ' do': 2, 'do ': 1, 'o n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't r': 1, 'rea': 1, 'ead': 1, 'ad ': 1, 'd b': 1, ' be': 2, 'bey': 1, 'eyo': 1, 'yon': 1, 'ond': 1, 'e b': 2, ' bo': 1, 'bou': 1, 'oun': 1, 'und': 1, 'nds': 1, 'ds\n': 1, 's\n ': 1, '# o': 1, 'f t': 3, 'st.': 1, 't.\n': 1, '.\n ': 4, 'f m': 4, 'id+': 1, 'd+1': 1, '+1 ': 1, '1 <': 1, ' < ': 4, '< l': 1, 'A):': 1, 'ff_': 6, 'f_r': 3, '_ri': 3, 'rig': 4, 'ght': 4, 'ht ': 3, 't =': 2, '= a': 2, ' ab': 3, 'abs': 3, 'bs(': 2, 's(A': 2, '(A[': 2, 'A[m': 7, '[mi': 7, 'd +': 3, '+ 1': 3, ' 1]': 4, '1] ': 2, '] -': 2, '- t': 2, 't)\n': 2, 'd >': 1, ' > ': 2, '> 0': 1, 'f_l': 3, '_le': 3, 'lef': 4, 'eft': 4, 'ft ': 2, 'd -': 3, ')\n\n': 1, '# C': 1, ' Ch': 1, 'Che': 1, 'hec': 1, 'eck': 1, 'ck ': 1, 'k i': 1, 'e a': 1, 'bso': 1, 'sol': 1, 'olu': 1, 'lut': 1, 'ute': 1, 'bet': 1, 'etw': 1, 'twe': 1, 'wee': 1, 'een': 2, 'n l': 1, 'ft\n': 2, '# a': 1, 'd r': 1, ' ri': 1, 't e': 1, 'nts': 1, 'ts ': 1, 'are': 1, 'e s': 1, ' sm': 1, 'sma': 1, 'mal': 1, 'all': 1, 'lle': 1, 'ler': 1, 'r t': 2, 'tha': 1, 'han': 1, 'any': 1, 'ny\n': 1, 'y\n ': 1, '# s': 1, ' se': 2, 'see': 1, 'n p': 1, ' pr': 1, 'pri': 3, 'rio': 1, 'ior': 1, 'or.': 1, 't <': 2, '< m': 2, 'ff:': 2, 'f:\n': 2, '= m': 4, '= A': 2, '1]\n': 2, 'ht\n': 1, '# M': 1, ' Mo': 1, 'Mov': 1, 'ove': 1, 'e m': 1, 'id-': 1, 'd-p': 1, '-po': 1, 'poi': 1, 'oin': 1, 'nt ': 2, 't a': 1, ' ap': 1, 'app': 1, 'ppr': 1, 'pro': 1, 'rop': 1, 'opr': 1, 'ria': 1, 'iat': 1, 'tel': 1, 'ely': 1, 'y a': 1, ' as': 1, 'as ': 1, 's i': 2, 's d': 1, 'don': 1, '# v': 1, ' vi': 1, 'via': 1, 'ia ': 1, 'a b': 1, ' bi': 1, 'bin': 1, 'ina': 1, 'nar': 1, 'ary': 1, 'ry ': 1, 'y s': 1, 'sea': 1, 'ear': 1, 'arc': 1, 'rch': 1, 'ch.': 1, 'h.\n': 1, 'f A': 2, 'id]': 3, 'd] ': 2, '] <': 1, '< t': 1, 'et:': 2, '  e': 2, 'eli': 1, 'lif': 1, '] >': 1, '> t': 1, '# I': 1, ' If': 1, 'If ': 1, 't i': 2, ' it': 3, 'its': 2, 'tse': 2, 'sel': 2, 'elf': 2, 'lf ': 1, 'f i': 1, 's t': 1, 'et,': 1, 't, ': 1, '# n': 1, 'o i': 1, 'it ': 1, 'lf.': 1, 'f. ': 1, '. R': 1, ' Re': 1, 'Ret': 1, 'n t': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, 'd]\n': 1, ']\n ': 1, 'n c': 1, 'um\n': 1, 'm\n\n': 1, '\n\ny': 1, '\ny ': 1, 'y =': 1, ' 4)': 1, '4)\n': 1, ')\np': 1, '\npr': 1, 'rin': 1, 'nt(': 1, 't(y': 1, '(y)': 1, 'y)\n': 1}"
Vincent Russo,count_constants.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'youtube': 1, 'video:': 1, 'https://www.youtube.com/watch?v=ftotytxix6i': 1, 'vowels': 3, '=': 4, '""aeiou""': 1, 'input_str': 3, '""abc': 1, 'de""': 1, '""lucidprogramming""': 1, 'def': 2, 'iterative_count_consonants(input_str):': 1, 'consonant_count': 3, '0': 2, 'for': 1, 'i': 1, 'in': 3, 'range(len(input_str)):': 1, 'if': 3, 'input_str[i].lower()': 1, 'not': 2, 'and': 2, 'input_str[i].isalpha():': 1, '+=': 1, '1': 2, 'return': 4, 'recursive_count_consonants(input_str):': 1, '==': 1, ""'':"": 1, 'input_str[0].lower()': 1, 'input_str[0].isalpha():': 1, '+': 1, 'recursive_count_consonants(input_str[1:])': 2, 'else:': 1, 'print(iterative_count_consonants(input_str))': 1, 'print(recursive_count_consonants(input_str))': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 2, 'be ': 1, 'e V': 1, ' Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eo:': 1, 'o: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.y': 1, '.yo': 1, 'you': 1, 'out': 1, 'utu': 1, 'tub': 1, 'be.': 1, 'e.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/w': 1, '/wa': 1, 'wat': 1, 'atc': 1, 'tch': 1, 'ch?': 1, 'h?v': 1, '?v=': 1, 'v=F': 1, '=FT': 1, 'FTO': 1, 'TOT': 1, 'OTy': 1, 'TyT': 1, 'yTX': 1, 'TXI': 1, 'XIX': 1, 'IX6': 1, 'X6I': 1, '6I\n': 1, 'I\nv': 1, '\nvo': 1, 'vow': 3, 'owe': 5, 'wel': 3, 'els': 4, 'ls ': 3, 's =': 1, ' = ': 4, '= ""': 3, ' ""a': 2, '""ae': 1, 'aei': 1, 'eio': 1, 'iou': 1, 'ou""': 1, 'u""\n': 1, '""\n\n': 2, '\n\ni': 1, '\nin': 2, 'inp': 14, 'npu': 14, 'put': 14, 'ut_': 14, 't_s': 14, '_st': 14, 'str': 14, 'tr ': 3, 'r =': 3, '""ab': 1, 'abc': 1, 'bc ': 1, 'c d': 1, ' de': 1, 'de""': 1, 'e""\n': 1, '""\ni': 1, ' ""L': 1, '""Lu': 1, 'LuC': 1, 'uCi': 1, 'CiD': 1, 'iDP': 1, 'DPr': 1, 'Pro': 1, 'rog': 1, 'ogr': 1, 'gra': 1, 'raM': 1, 'aMM': 1, 'MMi': 1, 'MiN': 1, 'iNG': 1, 'NG""': 1, 'G""\n': 1, '\n\n\n': 3, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f i': 4, ' it': 1, 'ite': 2, 'ter': 2, 'era': 2, 'rat': 2, 'ati': 2, 'tiv': 2, 'ive': 6, 've_': 6, 'e_c': 6, '_co': 15, 'cou': 9, 'oun': 9, 'unt': 9, 'nt_': 9, 't_c': 9, 'con': 9, 'ons': 9, 'nso': 9, 'son': 9, 'ona': 9, 'nan': 9, 'ant': 9, 'nts': 6, 'ts(': 6, 's(i': 6, '(in': 7, 'tr)': 5, 'r):': 2, '):\n': 5, ':\n ': 7, '\n  ': 11, '   ': 46, '  c': 2, ' co': 3, 'nt ': 2, 't =': 1, '= 0': 1, ' 0\n': 2, '0\n ': 1, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, ' in': 8, 'in ': 3, 'n r': 2, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(l': 1, '(le': 1, 'len': 1, 'en(': 1, 'n(i': 1, 'r))': 3, ')):': 1, '  i': 3, ' if': 3, 'if ': 3, 'tr[': 6, 'r[i': 2, '[i]': 2, 'i].': 2, '].l': 2, '.lo': 2, 'low': 2, 'wer': 2, 'er(': 2, 'r()': 2, '() ': 2, ') n': 2, ' no': 2, 'not': 2, 'ot ': 2, 't i': 2, 'n v': 2, ' vo': 2, 's a': 2, ' an': 2, 'and': 2, 'nd ': 2, 'd i': 2, '].i': 2, '.is': 2, 'isa': 2, 'sal': 2, 'alp': 2, 'lph': 2, 'pha': 2, 'ha(': 2, 'a()': 2, '():': 2, 't +': 1, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 1, '1\n ': 1, '  r': 4, ' re': 7, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 4, 'n c': 1, 'nt\n': 1, 't\n\n': 1, 'f r': 1, 'rec': 4, 'ecu': 4, 'cur': 4, 'urs': 4, 'rsi': 4, 'siv': 4, ' ==': 1, '== ': 1, ""= '"": 1, "" ''"": 1, ""'':"": 1, ""':\n"": 1, 'n 0': 1, '0\n\n': 1, '\n\n ': 1, 'r[0': 2, '[0]': 2, '0].': 2, 'n 1': 1, ' 1 ': 1, '1 +': 1, ' + ': 1, '+ r': 1, 'r[1': 2, '[1:': 2, '1:]': 2, ':])': 2, '])\n': 2, ')\n ': 1, '  e': 1, ' el': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, ')\n\n': 1, '\n\np': 1, '\npr': 2, 'pri': 2, 'rin': 2, 'int': 2, 'nt(': 2, 't(i': 1, '(it': 1, '))\n': 2, ')\np': 1, 't(r': 1, '(re': 1}"
Vincent Russo,cyclic_sort.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 1, 'youtube': 1, 'video:': 1, 'https://www.youtube.com/watch?v=l7swjrixyum': 1, '""""""': 2, 'an': 2, 'array': 1, 'is': 3, '""cyclically': 1, 'sorted""': 1, 'if': 2, 'it': 2, 'possible': 1, 'to': 1, 'cyclically': 3, 'shift': 1, 'its': 1, 'entries': 1, 'so': 1, 'that': 2, 'becomes': 1, 'sorted.': 1, 'the': 4, 'following': 1, 'list': 1, 'example': 1, 'of': 3, 'a': 4, 'sorted': 2, 'array:': 1, '=': 8, '[4,': 2, '5,': 2, '6,': 2, '7,': 2, '1,': 2, '2,': 2, '3]': 2, 'write': 1, 'funtion': 1, 'determines': 1, 'index': 1, 'smallest': 1, 'element': 1, 'array.': 1, 'def': 1, 'find(a):': 1, 'low': 4, '0': 1, 'high': 2, 'len(a)': 1, '-': 1, '1': 2, 'while': 1, '<': 1, 'high:': 1, 'mid': 3, '(low': 1, '+': 2, 'high)': 1, '//': 1, '2': 1, 'print(a[mid])': 1, 'a[mid]': 2, '>': 1, 'a[high]:': 2, 'elif': 1, '<=': 1, 'return': 1, 'idx': 1, 'find(a)': 1, 'print(a[idx])': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 2, 'be ': 1, 'e V': 1, ' Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eo:': 1, 'o: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.y': 1, '.yo': 1, 'you': 1, 'out': 1, 'utu': 1, 'tub': 1, 'be.': 1, 'e.c': 1, '.co': 1, 'com': 2, 'om/': 1, 'm/w': 1, '/wa': 1, 'wat': 1, 'atc': 1, 'tch': 1, 'ch?': 1, 'h?v': 1, '?v=': 1, 'v=l': 1, '=l7': 1, 'l7s': 1, '7sw': 1, 'swJ': 1, 'wJR': 1, 'JRi': 1, 'Rix': 1, 'ixY': 1, 'xYU': 1, 'YUM': 1, 'UM\n': 1, 'M\n""': 1, '\n""""': 2, '""""""': 2, '""""\n': 2, '""\nA': 1, '\nAn': 1, 'An ': 1, 'n a': 1, ' ar': 3, 'arr': 3, 'rra': 3, 'ray': 3, 'ay ': 1, 'y i': 1, ' is': 3, 'is ': 3, 's ""': 1, ' ""c': 1, '""cy': 1, 'cyc': 4, 'ycl': 4, 'cli': 4, 'lic': 4, 'ica': 4, 'cal': 4, 'all': 5, 'lly': 4, 'ly ': 4, 'y s': 4, ' so': 5, 'sor': 4, 'ort': 4, 'rte': 4, 'ted': 4, 'ed""': 1, 'd"" ': 1, '"" i': 1, ' if': 2, 'if ': 3, 'f i': 1, ' it': 2, 'it ': 2, 't i': 3, 's p': 1, ' po': 1, 'pos': 1, 'oss': 1, 'ssi': 1, 'sib': 1, 'ibl': 1, 'ble': 1, 'le ': 3, 'e t': 1, ' to': 1, 'to ': 1, 'o c': 1, ' cy': 3, ' sh': 1, 'shi': 1, 'hif': 1, 'ift': 1, 'ft\n': 1, 't\ni': 1, '\nit': 1, 'its': 1, 'ts ': 1, 's e': 1, ' en': 1, 'ent': 2, 'ntr': 1, 'tri': 1, 'rie': 1, 'ies': 1, 'es ': 3, 's s': 2, 'so ': 1, 'o t': 1, ' th': 5, 'tha': 2, 'hat': 2, 'at ': 2, 't b': 1, ' be': 1, 'bec': 1, 'eco': 1, 'ome': 1, 'mes': 1, 'ed.': 1, 'd.\n': 1, '.\n\n': 1, '\n\nT': 1, '\nTh': 1, 'The': 1, 'he ': 4, 'e f': 1, ' fo': 1, 'fol': 1, 'oll': 1, 'llo': 1, 'low': 6, 'owi': 1, 'win': 1, 'ing': 1, 'ng ': 1, 'g l': 1, ' li': 1, 'lis': 1, 'ist': 1, 'st ': 2, 's a': 1, ' an': 1, 'an ': 1, 'n e': 1, ' ex': 1, 'exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'e o': 1, ' of': 2, 'of ': 3, 'f a': 1, ' a ': 2, 'a c': 1, 'ed ': 2, 'd a': 2, 'ay:': 1, 'y:\n': 1, ':\n\n': 1, '\n\n ': 4, '\n  ': 11, '   ': 54, '  A': 1, ' A ': 1, 'A =': 2, ' = ': 8, '= [': 2, ' [4': 2, '[4,': 2, '4, ': 2, ', 5': 2, ' 5,': 2, '5, ': 2, ', 6': 2, ' 6,': 2, '6, ': 2, ', 7': 2, ' 7,': 2, '7, ': 2, ', 1': 2, ' 1,': 2, '1, ': 2, ', 2': 2, ' 2,': 2, '2, ': 2, ', 3': 2, ' 3]': 2, '3]\n': 2, ']\n\n': 2, '\n\nW': 1, '\nWr': 1, 'Wri': 1, 'rit': 1, 'ite': 1, 'te ': 1, 'e a': 1, 'a f': 1, ' fu': 1, 'fun': 1, 'unt': 1, 'nti': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n t': 1, 't d': 1, ' de': 1, 'det': 1, 'ete': 1, 'ter': 1, 'erm': 1, 'rmi': 1, 'min': 1, 'ine': 1, 'nes': 1, 's t': 1, 'the': 3, 'e i': 1, ' in': 1, 'ind': 3, 'nde': 1, 'dex': 1, 'ex ': 1, 'x o': 1, 'f t': 2, 'e s': 1, ' sm': 1, 'sma': 1, 'mal': 1, 'lle': 1, 'les': 1, 'est': 1, 't e': 1, ' el': 2, 'ele': 1, 'lem': 1, 'eme': 1, 'men': 1, 'nt\n': 1, 't\no': 1, '\nof': 1, 'e c': 1, 'ay.': 1, 'y.\n': 1, '.\n""': 1, '""\n\n': 1, '\n\nA': 1, '\nA ': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f f': 1, ' fi': 2, 'fin': 2, 'nd(': 2, 'd(A': 2, '(A)': 3, 'A):': 1, '):\n': 1, ':\n ': 4, '  l': 2, ' lo': 4, 'ow ': 4, 'w =': 2, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  h': 2, ' hi': 4, 'hig': 6, 'igh': 6, 'gh ': 2, 'h =': 2, '= l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(A': 1, 'A) ': 1, ') -': 1, ' - ': 1, '- 1': 1, ' 1\n': 2, '1\n\n': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'e l': 1, 'w <': 1, ' < ': 1, '< h': 1, 'gh:': 1, 'h:\n': 1, '  m': 1, ' mi': 3, 'mid': 6, 'id ': 2, 'd =': 1, '= (': 1, ' (l': 1, '(lo': 1, 'w +': 1, ' + ': 2, '+ h': 1, 'gh)': 1, 'h) ': 1, ') /': 1, ' //': 1, '// ': 1, '/ 2': 1, ' 2\n': 1, '2\n ': 1, '  p': 1, ' pr': 1, 'pri': 2, 'rin': 2, 'int': 2, 'nt(': 2, 't(A': 2, '(A[': 2, 'A[m': 3, '[mi': 3, 'id]': 3, 'd])': 1, '])\n': 2, ')\n\n': 1, '  i': 1, 'f A': 2, ' A[': 4, 'd] ': 2, '] >': 1, ' > ': 1, '> A': 1, 'A[h': 2, '[hi': 2, 'gh]': 2, 'h]:': 2, ']:\n': 2, '= m': 2, 'd +': 1, '+ 1': 1, '1\n ': 1, '  e': 1, 'eli': 1, 'lif': 1, '] <': 1, ' <=': 1, '<= ': 1, '= A': 1, 'id\n': 1, 'd\n\n': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n l': 1, 'ow\n': 1, 'w\n\n': 1, '\n\ni': 1, '\nid': 1, 'idx': 2, 'dx ': 1, 'x =': 1, '= f': 1, 'A)\n': 1, ')\np': 1, '\npr': 1, 'A[i': 1, '[id': 1, 'dx]': 1, 'x])': 1}"
Vincent Russo,find_constants.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 3, 'youtube': 1, 'video:': 1, 'https://www.youtube.com/watch?v=dlcgc92taqo': 1, 'given': 1, 'a': 1, 'string,': 1, 'find': 1, 'the': 1, 'first': 1, 'uppercase': 3, 'character.': 1, 'solve': 1, 'using': 1, 'both': 1, 'an': 1, 'iterative': 1, 'and': 1, 'recursive': 1, 'solution.': 1, 'input_str_1': 1, '=': 3, '""lucidprogramming""': 3, 'input_str_2': 1, 'input_str_3': 1, 'def': 2, 'find_uppercase_iterative(input_str):': 1, 'for': 1, 'i': 1, 'in': 1, 'range(len(input_str)):': 1, 'if': 3, 'input_str[i].isupper():': 1, 'return': 5, 'input_str[i]': 1, '""no': 2, 'character': 2, 'found""': 2, 'find_uppercase_recursive(input_str,': 2, 'idx=0):': 1, 'input_str[idx].isupper():': 1, 'input_str[idx]': 1, 'idx': 1, '==': 1, 'len(input_str)': 1, '-': 1, '1:': 1, 'idx+1)': 1, 'print(find_uppercase_iterative(input_str_1))': 1, 'print(find_uppercase_iterative(input_str_2))': 1, 'print(find_uppercase_iterative(input_str_3))': 1, 'print(find_uppercase_recursive(input_str_1))': 1, 'print(find_uppercase_recursive(input_str_2))': 1, 'print(find_uppercase_recursive(input_str_3))': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 2, 'be ': 1, 'e V': 1, ' Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eo:': 1, 'o: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.y': 1, '.yo': 1, 'you': 1, 'out': 1, 'utu': 1, 'tub': 1, 'be.': 1, 'e.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/w': 1, '/wa': 1, 'wat': 1, 'atc': 1, 'tch': 1, 'ch?': 1, 'h?v': 1, '?v=': 1, 'v=d': 1, '=dl': 1, 'dlC': 1, 'lCG': 1, 'CGc': 1, 'Gc9': 1, 'c92': 1, '92t': 1, '2tA': 1, 'tAq': 1, 'Aqo': 1, 'qo\n': 1, 'o\n#': 1, '\n# ': 2, '# G': 1, ' Gi': 1, 'Giv': 1, 'ive': 12, 'ven': 1, 'en ': 1, 'n a': 1, ' a ': 1, 'a s': 1, ' st': 1, 'str': 19, 'tri': 1, 'rin': 7, 'ing': 5, 'ng,': 1, 'g, ': 1, ', f': 1, ' fi': 5, 'fin': 10, 'ind': 10, 'nd ': 2, 'd t': 1, ' th': 1, 'the': 1, 'he ': 1, 'e f': 1, 'fir': 1, 'irs': 1, 'rst': 1, 'st ': 1, 't u': 1, ' up': 3, 'upp': 14, 'ppe': 14, 'per': 14, 'erc': 12, 'rca': 12, 'cas': 12, 'ase': 12, 'se ': 3, 'e c': 3, ' ch': 3, 'cha': 3, 'har': 3, 'ara': 3, 'rac': 3, 'act': 3, 'cte': 3, 'ter': 8, 'er.': 1, 'r. ': 1, '. \n': 1, ' \n#': 1, '# S': 1, ' So': 1, 'Sol': 1, 'olv': 1, 'lve': 1, 've ': 3, 'e u': 1, ' us': 1, 'usi': 1, 'sin': 1, 'ng ': 1, 'g b': 1, ' bo': 1, 'bot': 1, 'oth': 1, 'th ': 1, 'h a': 1, ' an': 2, 'an ': 1, 'n i': 3, ' it': 1, 'ite': 5, 'era': 5, 'rat': 5, 'ati': 5, 'tiv': 5, 'e a': 1, 'and': 1, 'd r': 1, ' re': 6, 'rec': 6, 'ecu': 6, 'cur': 6, 'urs': 6, 'rsi': 6, 'siv': 6, 'e s': 1, ' so': 1, 'sol': 1, 'olu': 1, 'lut': 1, 'uti': 1, 'tio': 1, 'ion': 1, 'on.': 1, 'n.\n': 1, '.\n\n': 1, '\n\ni': 1, '\nin': 3, 'inp': 18, 'npu': 18, 'put': 18, 'ut_': 18, 't_s': 18, '_st': 18, 'tr_': 9, 'r_1': 3, '_1 ': 1, '1 =': 1, ' = ': 3, '= ""': 3, ' ""l': 2, '""lu': 2, 'luc': 2, 'uci': 3, 'cid': 3, 'idP': 2, 'dPr': 2, 'Pro': 2, 'rog': 3, 'ogr': 3, 'gra': 3, 'ram': 3, 'amm': 3, 'mmi': 3, 'min': 3, 'ng""': 3, 'g""\n': 3, '""\ni': 2, 'r_2': 3, '_2 ': 1, '2 =': 1, ' ""L': 1, '""Lu': 1, 'Luc': 1, 'r_3': 3, '_3 ': 1, '3 =': 1, 'idp': 1, 'dpr': 1, 'pro': 1, '""\n\n': 2, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f f': 2, 'nd_': 9, 'd_u': 9, '_up': 9, 'se_': 9, 'e_i': 4, '_it': 4, 've(': 9, 'e(i': 9, '(in': 11, 'tr)': 3, 'r):': 1, '):\n': 5, ':\n ': 6, '\n  ': 9, '   ': 38, '  f': 1, ' fo': 3, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, ' in': 5, 'in ': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(l': 1, '(le': 1, 'len': 2, 'en(': 2, 'n(i': 2, 'r))': 1, ')):': 1, '  i': 3, ' if': 3, 'if ': 3, 'f i': 3, 'tr[': 4, 'r[i': 4, '[i]': 2, 'i].': 1, '].i': 2, '.is': 2, 'isu': 2, 'sup': 2, 'er(': 2, 'r()': 2, '():': 2, '  r': 5, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 5, 'i]\n': 1, ']\n ': 2, 'n ""': 2, ' ""N': 2, '""No': 2, 'No ': 2, 'o u': 2, 'er ': 2, 'r f': 2, 'fou': 2, 'oun': 2, 'und': 2, 'nd""': 2, 'd""\n': 2, 'e_r': 5, '_re': 5, 'tr,': 2, 'r, ': 2, ', i': 2, ' id': 3, 'idx': 5, 'dx=': 1, 'x=0': 1, '=0)': 1, '0):': 1, '[id': 2, 'dx]': 2, 'x].': 1, 'x]\n': 1, 'dx ': 1, 'x =': 1, ' ==': 1, '== ': 1, '= l': 1, ' le': 1, 'r) ': 1, ') -': 1, ' - ': 1, '- 1': 1, ' 1:': 1, '1:\n': 1, '""\n ': 1, 'n f': 1, 'dx+': 1, 'x+1': 1, '+1)': 1, '1)\n': 1, ')\n\n': 2, '\n\np': 2, '\npr': 6, 'pri': 6, 'int': 6, 'nt(': 6, 't(f': 6, '(fi': 6, '_1)': 2, '1))': 2, '))\n': 6, ')\np': 4, '_2)': 2, '2))': 2, '_3)': 2, '3))': 2, '\n\n\n': 1}"
Vincent Russo,first_duplicate_entry.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 1, 'youtube': 1, 'video:': 1, 'https://www.youtube.com/watch?v=mgaamvgpqpw&list=pl5tcwhg-uph1kjie-fqt1xcskcwyfn2jb': 1, '""""""': 2, 'write': 1, 'a': 4, 'function': 1, 'that': 2, 'takes': 1, 'an': 1, 'array': 1, 'of': 3, 'sorted': 1, 'integers': 1, 'and': 2, 'key': 2, 'returns': 2, 'the': 4, 'index': 3, 'first': 2, 'occurrence': 1, 'from': 1, 'array.': 1, 'example:': 1, 'idx': 1, '0': 2, '1': 6, '2': 2, '3': 2, '4': 1, '5': 1, '6': 1, '7': 1, '8': 1, '9': 1, '=': 11, '[-14,': 2, '-10,': 2, '2,': 2, '108,': 4, '243,': 2, '285,': 6, '401]': 2, 'target': 2, '108': 3, 'since': 1, 'appears': 1, 'for': 1, 'time': 1, 'at': 1, '3.': 1, 'def': 1, 'find(a,': 2, 'target):': 1, 'low': 3, 'high': 3, 'len(a)': 1, '-': 5, 'while': 1, '<=': 1, 'high:': 1, 'mid': 7, '(low': 1, '+': 2, 'high)': 1, '//': 1, 'if': 3, 'a[mid]': 2, '<': 2, 'target:': 3, 'elif': 1, '>': 1, 'else:': 1, '0:': 1, 'return': 2, 'a[mid': 1, '1]': 1, '!=': 1, 'x': 1, 'target)': 1, 'print(x)': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 2, 'be ': 1, 'e V': 1, ' Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eo:': 1, 'o: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.y': 1, '.yo': 1, 'you': 1, 'out': 1, 'utu': 1, 'tub': 1, 'be.': 1, 'e.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/w': 1, '/wa': 1, 'wat': 1, 'atc': 1, 'tch': 1, 'ch?': 1, 'h?v': 1, '?v=': 1, 'v=m': 1, '=mG': 1, 'mGa': 1, 'Gaa': 1, 'aam': 1, 'amv': 1, 'mvg': 1, 'vgP': 1, 'gPq': 1, 'Pqp': 1, 'qpw': 1, 'pw&': 1, 'w&l': 1, '&li': 1, 'lis': 1, 'ist': 1, 'st=': 1, 't=P': 1, '=PL': 1, 'PL5': 1, 'L5t': 1, '5tc': 1, 'tcW': 1, 'cWH': 1, 'WHG': 1, 'HG-': 1, 'G-U': 1, '-UP': 1, 'UPH': 1, 'PH1': 1, 'H1k': 1, '1kj': 1, 'kji': 1, 'jiE': 1, 'iE-': 1, 'E-F': 1, '-Fq': 1, 'Fqt': 1, 'qt1': 1, 't1x': 1, '1xC': 1, 'xCS': 1, 'CSk': 1, 'Skc': 1, 'kcw': 1, 'cwy': 1, 'wyf': 1, 'yfn': 1, 'fn2': 1, 'n2J': 1, '2Jb': 1, 'Jb\n': 1, 'b\n""': 1, '\n""""': 2, '""""""': 2, '""""\n': 2, '""\nW': 1, '\nWr': 1, 'Wri': 1, 'rit': 1, 'ite': 1, 'te ': 1, 'e a': 3, ' a ': 2, 'a f': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n t': 1, ' th': 6, 'tha': 2, 'hat': 2, 'at ': 2, 't t': 2, ' ta': 7, 'tak': 1, 'ake': 1, 'kes': 1, 'es ': 1, 's a': 2, ' an': 3, 'an ': 1, 'n a': 1, ' ar': 2, 'arr': 2, 'rra': 2, 'ray': 2, 'ay ': 1, 'y o': 1, ' of': 3, 'of ': 3, 'f s': 1, ' so': 1, 'sor': 1, 'ort': 1, 'rte': 1, 'ted': 1, 'ed ': 1, 'd i': 1, ' in': 4, 'int': 2, 'nte': 1, 'teg': 1, 'ege': 1, 'ger': 1, 'ers': 1, 'rs ': 2, 'and': 2, 'nd ': 1, 'd a': 1, 'a k': 1, ' ke': 2, 'key': 2, 'ey ': 2, 'y a': 1, 'nd\n': 1, 'd\nr': 1, '\nre': 1, 'ret': 3, 'etu': 4, 'tur': 4, 'urn': 4, 'rns': 2, 'ns ': 2, 's t': 1, 'the': 4, 'he ': 4, 'e i': 1, 'ind': 5, 'nde': 3, 'dex': 3, 'ex ': 3, 'x o': 1, 'f t': 2, 'e f': 2, ' fi': 4, 'fir': 2, 'irs': 2, 'rst': 2, 'st ': 2, 't o': 1, ' oc': 1, 'occ': 1, 'ccu': 1, 'cur': 1, 'urr': 1, 'rre': 1, 'ren': 1, 'enc': 1, 'nce': 2, 'ce ': 2, 'e o': 1, 't k': 1, 'y f': 1, ' fr': 1, 'fro': 1, 'rom': 1, 'om ': 1, 'm t': 1, 'ay.': 1, 'y.\n': 1, '.\n\n': 1, '\n\nE': 1, '\nEx': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le:': 1, 'e:\n': 2, ':\n ': 8, '\n  ': 19, '   ': 135, '  i': 5, ' id': 1, 'idx': 1, 'dx ': 1, 'x  ': 1, '  0': 1, ' 0 ': 1, '0  ': 1, '  1': 1, ' 1 ': 2, '1  ': 1, '  2': 1, ' 2 ': 1, '2  ': 1, '  3': 1, ' 3 ': 2, '3  ': 1, '  4': 1, ' 4 ': 1, '4  ': 1, '  5': 1, ' 5 ': 1, '5  ': 1, '  6': 1, ' 6 ': 1, '6  ': 1, '  7': 1, ' 7 ': 1, '7  ': 1, '  8': 1, ' 8 ': 1, '8  ': 1, '  9': 1, ' 9\n': 1, '9\n ': 1, '  A': 1, ' A ': 1, 'A =': 2, ' = ': 11, '= [': 2, ' [-': 2, '[-1': 2, '-14': 2, '14,': 2, '4, ': 2, ', -': 2, ' -1': 2, '-10': 2, '10,': 2, '0, ': 2, ', 2': 10, ' 2,': 2, '2, ': 2, ', 1': 4, ' 10': 7, '108': 7, '08,': 4, '8, ': 4, ' 24': 2, '243': 2, '43,': 2, '3, ': 2, ' 28': 6, '285': 6, '85,': 6, '5, ': 6, ', 4': 2, ' 40': 2, '401': 2, '01]': 2, '1]\n': 2, ']\n ': 1, '  t': 1, 'tar': 7, 'arg': 7, 'rge': 7, 'get': 7, 'et ': 2, 't =': 2, '= 1': 2, '08\n': 2, '8\n\n': 2, '\n\n ': 3, '  R': 1, ' Re': 1, 'Ret': 1, 's i': 1, 'x 3': 2, '3 s': 1, ' si': 1, 'sin': 1, 'inc': 1, 'e 1': 1, '08 ': 1, '8 a': 1, ' ap': 1, 'app': 1, 'ppe': 1, 'pea': 1, 'ear': 1, 'ars': 1, 's f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r t': 1, ' ti': 1, 'tim': 1, 'ime': 1, 'me ': 1, ' at': 1, 'at\n': 1, 't\n ': 1, ' 3.': 1, '3.\n': 1, '.\n""': 1, '""\n\n': 1, '\n\nA': 1, '\nA ': 1, ']\nt': 1, '\nta': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f f': 1, 'fin': 2, 'nd(': 2, 'd(A': 2, '(A,': 2, 'A, ': 2, ', t': 2, 'et)': 2, 't):': 1, '):\n': 1, '  l': 2, ' lo': 3, 'low': 4, 'ow ': 4, 'w =': 2, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  h': 3, ' hi': 5, 'hig': 5, 'igh': 5, 'gh ': 3, 'h =': 3, '= l': 1, ' le': 1, 'len': 1, 'en(': 1, 'n(A': 1, '(A)': 1, 'A) ': 1, ') -': 1, ' - ': 5, '- 1': 5, ' 1\n': 4, '1\n\n': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 1, 'w <': 1, ' <=': 1, '<= ': 1, '= h': 1, 'gh:': 1, 'h:\n': 1, '  m': 1, ' mi': 7, 'mid': 10, 'id ': 6, 'd =': 1, '= (': 1, ' (l': 1, '(lo': 1, 'w +': 1, ' + ': 2, '+ h': 1, 'gh)': 1, 'h) ': 1, ') /': 1, ' //': 1, '// ': 1, '/ 2': 1, ' 2\n': 1, '2\n\n': 1, ' if': 3, 'if ': 4, 'f A': 3, ' A[': 3, 'A[m': 3, '[mi': 3, 'id]': 2, 'd] ': 2, '] <': 1, ' < ': 2, '< t': 1, 'et:': 3, 't:\n': 3, '= m': 3, 'd +': 1, '+ 1': 1, '1\n ': 2, '  e': 2, ' el': 2, 'eli': 1, 'lif': 1, '] >': 1, ' > ': 1, '> t': 1, 'd -': 4, 'els': 1, 'lse': 1, 'se:': 1, 'f m': 1, '1 <': 1, '< 0': 1, ' 0:': 1, '0:\n': 1, '  r': 2, ' re': 2, 'rn ': 2, 'n m': 2, 'id\n': 2, 'd\n ': 2, ' 1]': 1, '1] ': 1, '] !': 1, ' !=': 1, '!= ': 1, '= t': 1, '\n\nx': 1, '\nx ': 1, 'x =': 1, '= f': 1, 't)\n': 1, ')\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'nt(': 1, 't(x': 1, '(x)': 1, 'x)\n': 1}"
Vincent Russo,fixed_point.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 8, 'youtube': 1, 'video:': 1, 'https://www.youtube.com/watch?v=bqa1hi6fnoe&list=pl5tcwhg-uph1kjie-fqt1xcskcwyfn2jb': 1, '""""""': 2, 'a': 5, 'fixed': 5, 'point': 4, 'in': 4, 'an': 3, 'array': 2, '""a""': 1, 'is': 5, 'index': 1, '""i""': 1, 'such': 1, 'that': 2, 'a[i]': 3, 'equal': 1, 'to': 1, '""i"".': 1, 'given': 1, 'of': 1, 'n': 1, 'distinct': 1, 'integers': 1, 'sorted': 1, 'ascending': 1, 'order,': 1, 'write': 1, 'function': 1, 'returns': 1, '""fixed': 1, 'point""': 1, 'the': 1, 'array.': 1, 'if': 3, 'there': 1, 'not': 1, 'return': 6, '""none"".': 1, '3:': 1, '=': 8, '[-10,': 2, '-5,': 2, '0,': 1, '3,': 2, '7]': 1, '0:': 1, '#a': 2, '[0,': 1, '2,': 1, '5,': 1, '8,': 1, '17]': 1, 'no': 1, 'point.': 1, '""none"":': 1, '4,': 1, '7,': 1, '9]': 1, 'time': 2, 'complexity:': 4, 'o(n)': 1, 'space': 2, 'o(1)': 2, 'def': 2, 'find_fixed_point_linear(a):': 1, 'for': 1, 'i': 1, 'range(len(a)):': 1, '==': 1, 'i:': 1, 'none': 2, 'o(log': 1, 'n)': 1, 'find_fixed_point(a):': 1, 'low': 3, '0': 1, 'high': 2, 'len(a)': 1, '-': 2, '1': 3, 'while': 1, '<=': 1, 'high:': 1, 'mid': 3, '(low': 1, '+': 2, 'high)//2': 1, 'a[mid]': 3, '<': 1, 'mid:': 2, 'elif': 1, '>': 1, 'else:': 1, 'print(find_fixed_point(a))': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 2, 'be ': 1, 'e V': 1, ' Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eo:': 1, 'o: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.y': 1, '.yo': 1, 'you': 1, 'out': 1, 'utu': 1, 'tub': 1, 'be.': 1, 'e.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/w': 1, '/wa': 1, 'wat': 1, 'atc': 1, 'tch': 1, 'ch?': 1, 'h?v': 1, '?v=': 1, 'v=B': 1, '=BQ': 1, 'BQa': 1, 'Qa1': 1, 'a1h': 1, '1hi': 1, 'hi6': 1, 'i6f': 1, '6fn': 1, 'fnO': 1, 'nOE': 1, 'OE&': 1, 'E&l': 1, '&li': 1, 'lis': 1, 'ist': 2, 'st=': 1, 't=P': 1, '=PL': 1, 'PL5': 1, 'L5t': 1, '5tc': 1, 'tcW': 1, 'cWH': 1, 'WHG': 1, 'HG-': 1, 'G-U': 1, '-UP': 1, 'UPH': 1, 'PH1': 1, 'H1k': 1, '1kj': 1, 'kji': 1, 'jiE': 1, 'iE-': 1, 'E-F': 1, '-Fq': 1, 'Fqt': 1, 'qt1': 1, 't1x': 1, '1xC': 1, 'xCS': 1, 'CSk': 1, 'Skc': 1, 'kcw': 1, 'cwy': 1, 'wyf': 1, 'yfn': 1, 'fn2': 1, 'n2J': 1, '2Jb': 1, 'Jb\n': 1, 'b\n""': 1, '\n""""': 2, '""""""': 2, '""""\n': 2, '""\nA': 1, '\nA ': 2, 'A f': 1, ' fi': 4, 'fix': 7, 'ixe': 9, 'xed': 9, 'ed ': 7, 'd p': 6, ' po': 6, 'poi': 9, 'oin': 9, 'int': 11, 'nt ': 4, 't i': 4, ' in': 6, 'in ': 4, 'n a': 5, ' an': 3, 'an ': 3, ' ar': 3, 'arr': 3, 'rra': 3, 'ray': 3, 'ay ': 2, 'y ""': 1, ' ""A': 1, '""A""': 1, 'A"" ': 1, '"" i': 2, ' is': 5, 'is ': 5, 's a': 2, 'n i': 1, 'ind': 4, 'nde': 1, 'dex': 1, 'ex ': 1, 'x ""': 1, ' ""i': 2, '""i""': 2, 'i"" ': 1, '"" s': 1, ' su': 1, 'suc': 1, 'uch': 1, 'ch ': 1, 'h t': 1, ' th': 4, 'tha': 2, 'hat': 2, 'at ': 2, 't A': 1, ' A[': 6, 'A[i': 3, '[i]': 3, 'i] ': 2, '] i': 1, 's e': 1, ' eq': 1, 'equ': 1, 'qua': 1, 'ual': 1, 'al ': 1, 'l t': 1, ' to': 1, 'to ': 1, 'o ""': 1, 'i"".': 1, '"".\n': 2, '.\n\n': 1, '\n\nG': 1, '\nGi': 1, 'Giv': 1, 'ive': 1, 'ven': 1, 'en ': 1, 'y o': 1, ' of': 1, 'of ': 1, 'f n': 1, ' n ': 1, 'n d': 1, ' di': 1, 'dis': 1, 'sti': 1, 'tin': 1, 'inc': 1, 'nct': 2, 'ct ': 1, 'nte': 1, 'teg': 1, 'ege': 1, 'ger': 1, 'ers': 1, 'rs ': 1, 's s': 1, ' so': 1, 'sor': 1, 'ort': 1, 'rte': 1, 'ted': 1, 'd i': 1, ' as': 1, 'asc': 1, 'sce': 1, 'cen': 1, 'end': 1, 'ndi': 1, 'din': 1, 'ing': 1, 'ng ': 1, 'g o': 1, ' or': 1, 'ord': 1, 'rde': 1, 'der': 1, 'er,': 1, 'r, ': 1, ', w': 1, ' wr': 1, 'wri': 1, 'rit': 1, 'ite': 1, 'te ': 1, 'e a': 2, ' a\n': 2, 'a\nf': 2, '\nfu': 1, 'fun': 1, 'unc': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'on ': 1, 'n t': 2, 't r': 2, ' re': 6, 'ret': 6, 'etu': 7, 'tur': 7, 'urn': 7, 'rns': 1, 'ns ': 1, ' a ': 1, 'a ""': 1, ' ""f': 1, '""fi': 1, 'nt""': 1, 't"" ': 1, 'the': 2, 'he ': 1, 'ay.': 1, 'y. ': 1, '. I': 1, ' If': 1, 'If ': 1, 'f t': 1, 'her': 1, 'ere': 1, 're ': 1, 'e i': 1, 's n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't a': 1, '\nfi': 1, 'rn ': 6, 'n ""': 2, ' ""N': 2, '""No': 2, 'Non': 4, 'one': 4, 'ne""': 2, 'e"".': 1, '.\n""': 1, '""\n\n': 1, '\n\n#': 5, '\n# ': 7, '# F': 2, ' Fi': 2, 'Fix': 2, 's 3': 1, ' 3:': 1, '3:\n': 1, ':\nA': 1, 'A =': 3, ' = ': 8, '= [': 3, ' [-': 2, '[-1': 2, '-10': 2, '10,': 2, '0, ': 4, ', -': 2, ' -5': 2, '-5,': 2, '5, ': 3, ', 0': 1, ' 0,': 1, ', 3': 2, ' 3,': 2, '3, ': 2, ', 7': 2, ' 7]': 1, '7]\n': 2, ']\n\n': 3, 's 0': 1, ' 0:': 1, '0:\n': 1, ':\n#': 2, '\n#A': 2, '#A ': 2, ' [0': 1, '[0,': 1, ', 2': 1, ' 2,': 1, '2, ': 1, ', 5': 1, ' 5,': 1, ', 8': 1, ' 8,': 1, '8, ': 1, ', 1': 1, ' 17': 1, '17]': 1, '# N': 1, ' No': 3, 'No ': 1, 'o f': 1, 'nt.': 1, 't. ': 1, '. R': 1, ' Re': 1, 'Ret': 1, 'e"":': 1, '"":\n': 1, ', 4': 1, ' 4,': 1, '4, ': 1, ' 7,': 1, '7, ': 1, ', 9': 1, ' 9]': 1, '9]\n': 1, '\n\n\n': 3, '# T': 2, ' Ti': 2, 'Tim': 2, 'ime': 2, 'me ': 2, 'e C': 4, ' Co': 4, 'Com': 4, 'omp': 4, 'mpl': 4, 'ple': 4, 'lex': 4, 'exi': 4, 'xit': 4, 'ity': 4, 'ty:': 4, 'y: ': 4, ': O': 4, ' O(': 4, 'O(n': 1, '(n)': 1, 'n)\n': 2, ')\n#': 2, '# S': 2, ' Sp': 2, 'Spa': 2, 'pac': 2, 'ace': 2, 'ce ': 2, 'O(1': 2, '(1)': 2, '1)\n': 2, ')\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f f': 2, 'fin': 3, 'nd_': 3, 'd_f': 3, '_fi': 3, 'ed_': 3, 'd_p': 3, '_po': 3, 'nt_': 1, 't_l': 1, '_li': 1, 'lin': 1, 'ine': 1, 'nea': 1, 'ear': 1, 'ar(': 1, 'r(A': 1, '(A)': 5, 'A):': 2, '):\n': 3, ':\n ': 8, '\n  ': 15, '   ': 82, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(l': 1, '(le': 1, 'len': 2, 'en(': 2, 'n(A': 2, 'A))': 2, ')):': 1, '  i': 2, ' if': 2, 'if ': 3, 'f A': 3, '] =': 1, ' ==': 1, '== ': 1, '= i': 1, ' i:': 1, 'i:\n': 1, '  r': 4, 'n A': 2, 'i]\n': 1, ']\n ': 2, 'n N': 2, 'ne\n': 2, 'e\n\n': 2, 'O(l': 1, '(lo': 2, 'log': 1, 'og ': 1, 'g n': 1, ' n)': 1, 'nt(': 3, 't(A': 2, '  l': 2, ' lo': 3, 'low': 4, 'ow ': 4, 'w =': 2, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  h': 2, ' hi': 4, 'hig': 4, 'igh': 4, 'gh ': 2, 'h =': 2, '= l': 1, ' le': 1, 'A) ': 1, ') -': 1, ' - ': 2, '- 1': 2, ' 1\n': 3, '1\n\n': 1, '\n\n ': 2, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e l': 1, 'w <': 1, ' <=': 1, '<= ': 1, '= h': 1, 'gh:': 1, 'h:\n': 1, '  m': 1, ' mi': 5, 'mid': 8, 'id ': 3, 'd =': 1, '= (': 1, ' (l': 1, 'w +': 1, ' + ': 2, '+ h': 1, 'gh)': 1, 'h)/': 1, ')//': 1, '//2': 1, '/2\n': 1, '2\n\n': 1, 'A[m': 3, '[mi': 3, 'id]': 3, 'd] ': 2, '] <': 1, ' < ': 1, '< m': 1, 'id:': 2, 'd:\n': 2, '= m': 2, 'd +': 1, '+ 1': 1, '1\n ': 2, '  e': 2, ' el': 2, 'eli': 1, 'lif': 1, '] >': 1, ' > ': 1, '> m': 1, 'd -': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, 'd]\n': 1, '\n\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 't(f': 1, '(fi': 1, '))\n': 1}"
Vincent Russo,intersected_sort_arrays.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 5, 'youtube': 1, 'video:': 1, 'https://www.youtube.com/watch?v=vnm2nvdyyls': 1, 'a': 3, '=': 5, '[2,': 1, '3,': 3, '5,': 1, '7,': 2, '11]': 1, 'b': 2, '[3,': 1, '15,': 1, '31]': 1, 'one-liner.': 1, 'this': 2, 'works,': 1, 'but': 1, 'does': 1, 'not': 1, 'take': 1, 'advantage': 2, 'of': 2, 'the': 1, 'fact': 1, 'that': 1, 'and': 2, 'are': 1, 'sorted.': 1, 'we': 1, 'can': 1, 'do': 1, 'bit': 1, 'better': 1, 'by': 1, 'taking': 1, 'fact.': 1, 'print(set(a)': 1, '&': 1, 'set(b))': 1, 'def': 1, 'intersect_sorted_array(a,': 1, 'b):': 1, 'i': 5, '0': 3, 'j': 4, 'intersection': 2, '[]': 1, 'while': 1, '<': 3, 'len(a)': 1, 'len(b):': 1, 'if': 2, 'a[i]': 3, '==': 2, 'b[j]:': 2, 'or': 1, '!=': 1, 'a[i': 1, '-': 1, '1]:': 1, 'intersection.append(a[i])': 1, '+=': 4, '1': 4, 'elif': 1, 'else:': 1, 'return': 1, 'print(intersect_sorted_array(a,': 1, 'b))': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 2, 'be ': 1, 'e V': 1, ' Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eo:': 1, 'o: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.y': 1, '.yo': 1, 'you': 1, 'out': 1, 'utu': 1, 'tub': 1, 'be.': 1, 'e.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/w': 1, '/wa': 1, 'wat': 1, 'atc': 1, 'tch': 1, 'ch?': 1, 'h?v': 1, '?v=': 1, 'v=v': 1, '=vN': 1, 'vNm': 1, 'Nm2': 1, 'm2n': 1, '2nv': 1, 'nvD': 1, 'vDy': 1, 'Dyy': 1, 'yyl': 1, 'yls': 1, 'ls\n': 1, 's\nA': 1, '\nA ': 1, 'A =': 1, ' = ': 5, '= [': 3, ' [2': 1, '[2,': 1, '2, ': 1, ', 3': 4, ' 3,': 3, '3, ': 4, ', 5': 1, ' 5,': 1, '5, ': 2, ', 7': 2, ' 7,': 2, '7, ': 2, ', 1': 2, ' 11': 1, '11]': 1, '1]\n': 2, ']\nB': 1, '\nB ': 1, 'B =': 1, ' [3': 1, '[3,': 1, ' 15': 1, '15,': 1, ' 31': 1, '31]': 1, ']\n\n': 2, '\n\n#': 1, '\n# ': 4, '# O': 1, ' On': 1, 'One': 1, 'ne-': 1, 'e-l': 1, '-li': 1, 'lin': 1, 'ine': 1, 'ner': 1, 'er.': 1, 'r. ': 1, '. T': 1, ' Th': 1, 'Thi': 1, 'his': 2, 'is ': 2, 's w': 1, ' wo': 1, 'wor': 1, 'ork': 1, 'rks': 1, 'ks,': 1, 's, ': 1, ', b': 1, ' bu': 1, 'but': 1, 'ut ': 1, 't d': 1, ' do': 2, 'doe': 1, 'oes': 1, 'es ': 1, 's n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't t': 2, ' ta': 2, 'tak': 2, 'ake': 1, 'ke ': 1, 'e a': 1, ' ad': 2, 'adv': 2, 'dva': 2, 'van': 2, 'ant': 2, 'nta': 2, 'tag': 2, 'age': 2, 'ge ': 2, 'e o': 2, ' of': 2, 'of\n': 1, 'f\n#': 1, '# t': 1, ' th': 3, 'the': 1, 'he ': 1, 'e f': 1, ' fa': 2, 'fac': 2, 'act': 2, 'ct ': 1, 'tha': 1, 'hat': 1, 'at ': 1, 't A': 1, ' A ': 1, 'A a': 1, ' an': 2, 'and': 2, 'nd ': 2, 'd B': 1, ' B ': 1, 'B a': 1, ' ar': 1, 'are': 1, 're ': 1, 'e s': 1, ' so': 1, 'sor': 3, 'ort': 3, 'rte': 3, 'ted': 3, 'ed.': 1, 'd. ': 1, '. W': 1, ' We': 1, 'We ': 1, 'e c': 1, ' ca': 1, 'can': 1, 'an ': 1, 'n d': 1, 'do ': 1, 'o a': 1, ' a ': 1, 'a b': 1, ' bi': 1, 'bit': 1, 'it\n': 1, 't\n#': 1, '# b': 1, ' be': 1, 'bet': 1, 'ett': 1, 'tte': 1, 'ter': 6, 'er ': 1, 'r b': 1, ' by': 1, 'by ': 1, 'y t': 1, 'aki': 1, 'kin': 1, 'ing': 1, 'ng ': 1, 'g a': 1, 'of ': 1, 'f t': 1, 'thi': 1, 's f': 1, 'ct.': 1, 't.\n': 1, '.\n#': 1, '# p': 1, ' pr': 1, 'pri': 2, 'rin': 2, 'int': 7, 'nt(': 2, 't(s': 1, '(se': 1, 'set': 2, 'et(': 2, 't(A': 1, '(A)': 2, 'A) ': 2, ') &': 1, ' & ': 1, '& s': 1, ' se': 1, 't(B': 1, '(B)': 2, 'B))': 2, '))\n': 2, ')\n\n': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f i': 2, ' in': 4, 'nte': 5, 'ers': 5, 'rse': 5, 'sec': 5, 'ect': 5, 'ct_': 2, 't_s': 2, '_so': 2, 'ed_': 2, 'd_a': 2, '_ar': 2, 'arr': 2, 'rra': 2, 'ray': 2, 'ay(': 2, 'y(A': 2, '(A,': 2, 'A, ': 2, ', B': 2, ' B)': 2, 'B):': 2, '):\n': 2, ':\n ': 6, '\n  ': 14, '   ': 92, '  i': 7, ' i ': 5, 'i =': 2, '= 0': 3, ' 0\n': 2, '0\n ': 2, '  j': 3, ' j ': 4, 'j =': 1, 'cti': 3, 'tio': 3, 'ion': 3, 'on ': 1, 'n =': 1, ' []': 1, '[]\n': 1, '\n\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'e i': 1, 'i <': 1, ' < ': 3, '< l': 2, ' le': 2, 'len': 2, 'en(': 2, 'n(A': 1, ') a': 1, 'd j': 1, 'j <': 1, 'n(B': 1, ' if': 2, 'if ': 3, 'f A': 2, ' A[': 4, 'A[i': 5, '[i]': 4, 'i] ': 3, '] =': 1, ' ==': 2, '== ': 2, '= B': 1, ' B[': 2, 'B[j': 2, '[j]': 2, 'j]:': 2, ']:\n': 3, ' 0 ': 1, '0 o': 1, ' or': 1, 'or ': 1, 'r A': 1, '] !': 1, ' !=': 1, '!= ': 1, '= A': 1, '[i ': 1, 'i -': 1, ' - ': 1, '- 1': 1, ' 1]': 1, '1]:': 1, 'on.': 1, 'n.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(A': 1, '(A[': 1, 'i])': 1, '])\n': 1, ')\n ': 1, 'i +': 2, ' +=': 4, '+= ': 4, '= 1': 4, ' 1\n': 4, '1\n ': 4, 'j +': 2, '  e': 2, ' el': 2, 'eli': 1, 'lif': 1, '] <': 1, '< B': 1, 'els': 1, 'lse': 1, 'se:': 1, 'e:\n': 1, '  r': 1, ' re': 1, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, 'n i': 1, 'on\n': 1, 'n\n\n': 1, '\n\np': 1, '\npr': 1, 't(i': 1, '(in': 1}"
Vincent Russo,int_to_str.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'""""""': 2, 'you': 2, 'are': 2, 'given': 2, 'some': 1, 'integer': 2, 'as': 1, 'input,': 1, '(i.e.': 1, '...': 1, '-3,': 1, '-2,': 1, '-1,': 1, '0,': 1, '1,': 1, '2,': 1, '3': 1, '...)': 1, 'convert': 1, 'the': 2, 'to': 1, 'a': 1, 'string.': 1, 'do': 1, 'not': 1, 'make': 1, 'use': 1, 'of': 1, 'built-in': 1, '""str""': 1, 'function.': 1, 'examples:': 1, 'input:': 2, '123': 2, 'output:': 2, '""123""': 1, '-123': 1, '""-123""': 1, 'def': 1, 'int_to_str(input_int):': 1, 'if': 2, 'input_int': 6, '<': 1, '0:': 2, 'is_negative': 2, '=': 7, 'true': 1, '*=': 1, '-1': 1, 'else:': 2, 'false': 1, 'output_str': 6, '[]': 1, 'while': 1, '>': 1, ""output_str.append(chr(ord('0')"": 1, '+': 2, '%': 1, '10))': 1, '//=': 1, '10': 1, 'output_str[::-1]': 1, ""''.join(output_str)"": 1, 'is_negative:': 1, 'return': 2, ""'-'"": 1, 'print(type(input_int))': 1, 'int_to_str(input_int)': 1, 'print(type(output_str))': 1}","{'""""""': 2, '""""\n': 2, '""\nY': 1, '\nYo': 1, 'You': 1, 'ou ': 2, 'u a': 2, ' ar': 2, 'are': 2, 're ': 2, 'e g': 2, ' gi': 2, 'giv': 2, 'ive': 5, 'ven': 2, 'en ': 2, 'n s': 1, ' so': 1, 'som': 1, 'ome': 1, 'me ': 1, 'e i': 3, ' in': 10, 'int': 15, 'nte': 2, 'teg': 2, 'ege': 2, 'ger': 2, 'er ': 2, 'r a': 1, ' as': 1, 'as ': 1, 's i': 1, 'inp': 10, 'npu': 12, 'put': 24, 'ut,': 1, 't, ': 1, ', (': 1, ' (i': 1, '(i.': 1, 'i.e': 1, '.e.': 1, 'e. ': 1, '. .': 1, ' ..': 2, '...': 2, '.. ': 1, '. -': 1, ' -3': 1, '-3,': 1, '3, ': 1, ', -': 2, ' -2': 1, '-2,': 1, '2, ': 2, ' -1': 3, '-1,': 1, '1, ': 2, ', 0': 1, ' 0,': 1, '0, ': 1, ', 1': 1, ' 1,': 1, ', 2': 1, ' 2,': 1, ', 3': 1, ' 3 ': 1, '3 .': 1, '..)': 1, '.)\n': 1, ')\n\n': 4, '\n\nC': 1, '\nCo': 1, 'Con': 1, 'onv': 1, 'nve': 1, 'ver': 1, 'ert': 1, 'rt ': 1, 't t': 1, ' th': 2, 'the': 2, 'he ': 2, 'r y': 1, ' yo': 1, 'you': 1, 'n t': 1, ' to': 1, 'to ': 1, 'o a': 1, ' a ': 1, 'a s': 1, ' st': 1, 'str': 14, 'tri': 1, 'rin': 3, 'ing': 1, 'ng.': 1, 'g. ': 1, '. D': 1, ' Do': 1, 'Do ': 1, 'o n': 1, ' no': 1, 'not': 1, 'ot ': 1, 't m': 1, ' ma': 1, 'mak': 1, 'ake': 1, 'ke ': 1, 'e u': 1, ' us': 1, 'use': 1, 'se\n': 2, 'e\no': 1, '\nof': 1, 'of ': 1, 'f t': 1, 'e b': 1, ' bu': 1, 'bui': 1, 'uil': 1, 'ilt': 1, 'lt-': 1, 't-i': 1, '-in': 1, 'in ': 1, 'n ""': 1, ' ""s': 1, '""st': 1, 'tr""': 1, 'r"" ': 1, '"" f': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 1, 'tio': 1, 'ion': 1, 'on.': 1, 'n.\n': 1, '.\n\n': 1, '\n\nE': 1, '\nEx': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'les': 1, 'es:': 1, 's:\n': 1, ':\n ': 7, '\n  ': 20, '   ': 68, '  I': 2, ' In': 2, 'Inp': 2, 'ut:': 4, 't: ': 4, ': 1': 1, ' 12': 2, '123': 5, '23\n': 3, '3\n ': 2, '  O': 2, ' Ou': 2, 'Out': 2, 'utp': 12, 'tpu': 12, ': ""': 2, ' ""1': 1, '""12': 1, '23""': 2, '3""\n': 2, '""\n\n': 2, '\n\n ': 4, ': -': 1, '-12': 2, ' ""-': 1, '""-1': 1, '""\n""': 1, '\n""""': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f i': 3, 'nt_': 2, 't_t': 2, '_to': 2, 'to_': 2, 'o_s': 2, '_st': 12, 'tr(': 2, 'r(i': 2, '(in': 3, 'ut_': 19, 't_i': 9, '_in': 9, 'nt)': 3, 't):': 1, '):\n': 1, '  \n': 1, ' \n ': 1, '  i': 6, ' if': 2, 'if ': 2, 'nt ': 6, 't <': 1, ' < ': 1, '< 0': 1, ' 0:': 2, '0:\n': 2, ' is': 3, 'is_': 3, 's_n': 3, '_ne': 3, 'neg': 3, 'ega': 3, 'gat': 3, 'ati': 3, 'tiv': 3, 've ': 2, 'e =': 2, ' = ': 7, '= T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1, 'e\n ': 1, 't *': 1, ' *=': 1, '*= ': 1, '= -': 1, '-1\n': 1, '1\n ': 1, '  e': 2, ' el': 2, 'els': 2, 'lse': 3, 'se:': 2, 'e:\n': 3, '= F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'e\n\n': 1, '  o': 4, ' ou': 7, 'out': 10, 't_s': 10, 'tr ': 4, 'r =': 4, '= [': 1, ' []': 1, '[]\n': 1, ']\n ': 1, '  w': 1, ' wh': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 't >': 1, ' > ': 1, '> 0': 1, 'tr.': 1, 'r.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(c': 1, '(ch': 1, 'chr': 1, 'hr(': 1, 'r(o': 1, '(or': 1, 'ord': 1, 'rd(': 1, ""d('"": 1, ""('0"": 1, ""'0'"": 1, ""0')"": 1, ""') "": 1, ') +': 1, ' + ': 2, '+ i': 1, 't %': 1, ' % ': 1, '% 1': 1, ' 10': 2, '10)': 1, '0))': 1, '))\n': 3, ')\n ': 1, 't /': 1, ' //': 1, '//=': 1, '/= ': 1, '= 1': 2, '10\n': 1, '0\n ': 1, '= o': 1, 'tr[': 1, 'r[:': 1, '[::': 1, '::-': 1, ':-1': 1, '-1]': 1, '1]\n': 1, ']\n\n': 1, ""= '"": 1, "" ''"": 1, ""''."": 1, ""'.j"": 1, '.jo': 1, 'joi': 1, 'oin': 1, 'in(': 1, 'n(o': 1, '(ou': 2, 'tr)': 2, 'r)\n': 1, 've:': 1, '  r': 2, ' re': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, ""n '"": 1, "" '-"": 1, ""'-'"": 1, ""-' "": 1, ""' +"": 1, '+ o': 1, 'tr\n': 2, 'r\n ': 1, 'n o': 1, 'r\n\n': 1, '\n\ni': 1, '\nin': 1, 't =': 1, '3\n\n': 1, '\n\np': 2, '\npr': 2, 'pri': 2, 'nt(': 2, 't(t': 2, '(ty': 2, 'typ': 2, 'ype': 2, 'pe(': 2, 'e(i': 1, 't))': 1, '\n\no': 1, '\nou': 1, '= i': 1, 't)\n': 1, 'e(o': 1, 'r))': 1}"
Vincent Russo,look_and_say_sequence.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'youtube': 1, 'video:': 1, 'https://www.youtube.com/watch?v=_1wp4bww8rs': 1, 'def': 1, 'next_number(s):': 1, 'result': 1, '=': 6, '[]': 1, 'i': 6, '0': 1, 'while': 2, '<': 2, 'len(s):': 1, 'count': 2, '1': 5, '+': 2, 'len(s)': 1, 'and': 1, 's[i]': 1, '==': 1, 's[i+1]:': 1, '+=': 3, 'result.append(str(count)': 1, 's[i])': 1, 'return': 1, ""''.join(result)"": 1, 's': 2, '""1""': 1, 'n': 1, '4': 1, 'for': 1, 'in': 1, 'range(n-1):': 1, 'next_number(s)': 1, 'print(s)': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 2, 'be ': 1, 'e V': 1, ' Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eo:': 1, 'o: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.y': 1, '.yo': 1, 'you': 1, 'out': 1, 'utu': 1, 'tub': 1, 'be.': 1, 'e.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/w': 1, '/wa': 1, 'wat': 1, 'atc': 1, 'tch': 1, 'ch?': 1, 'h?v': 1, '?v=': 1, 'v=_': 1, '=_1': 1, '_1W': 1, '1Wp': 1, 'Wp4': 1, 'p4B': 1, '4Bw': 1, 'Bww': 1, 'ww8': 1, 'w8R': 1, '8Rs': 1, 'Rs\n': 1, 's\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f n': 1, ' ne': 2, 'nex': 2, 'ext': 2, 'xt_': 2, 't_n': 2, '_nu': 2, 'num': 2, 'umb': 2, 'mbe': 2, 'ber': 2, 'er(': 2, 'r(s': 2, '(s)': 5, 's):': 2, '):\n': 3, ':\n ': 4, '\n  ': 12, '   ': 56, '  r': 3, ' re': 3, 'res': 3, 'esu': 3, 'sul': 3, 'ult': 3, 'lt ': 1, 't =': 2, ' = ': 6, '= [': 1, ' []': 1, '[]\n': 1, ']\n ': 1, '  i': 3, ' i ': 6, 'i =': 1, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  w': 2, ' wh': 2, 'whi': 2, 'hil': 2, 'ile': 2, 'le ': 2, 'e i': 2, 'i <': 1, ' < ': 2, '< l': 2, ' le': 2, 'len': 2, 'en(': 2, 'n(s': 2, '  c': 2, ' co': 2, 'cou': 3, 'oun': 3, 'unt': 3, 'nt ': 2, '= 1': 4, ' 1\n': 4, '1\n ': 4, 'i +': 3, ' + ': 2, '+ 1': 1, ' 1 ': 1, '1 <': 1, 's) ': 1, ') a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd s': 1, ' s[': 3, 's[i': 3, '[i]': 2, 'i] ': 1, '] =': 1, ' ==': 1, '== ': 1, '= s': 1, '[i+': 1, 'i+1': 1, '+1]': 1, '1]:': 1, ']:\n': 1, ' +=': 3, '+= ': 3, 't +': 1, 'lt.': 1, 't.a': 1, '.ap': 1, 'app': 1, 'ppe': 1, 'pen': 1, 'end': 1, 'nd(': 1, 'd(s': 1, '(st': 1, 'str': 1, 'tr(': 1, 'r(c': 1, '(co': 1, 'nt)': 1, 't) ': 1, ') +': 1, '+ s': 1, 'i])': 1, '])\n': 1, ')\n ': 2, 'ret': 1, 'etu': 1, 'tur': 1, 'urn': 1, 'rn ': 1, ""n '"": 1, "" ''"": 1, ""''."": 1, ""'.j"": 1, '.jo': 1, 'joi': 1, 'oin': 1, 'in(': 1, 'n(r': 1, '(re': 1, 'lt)': 1, 't)\n': 1, ')\n\n': 1, '\n\ns': 1, '\ns ': 1, 's =': 2, '= ""': 1, ' ""1': 1, '""1""': 1, '1""\n': 1, '""\nn': 1, '\nn ': 1, 'n =': 1, '= 4': 1, ' 4\n': 1, '4\nf': 1, '\nfo': 1, 'for': 1, 'or ': 1, 'r i': 1, 'i i': 1, ' in': 1, 'in ': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(n': 1, '(n-': 1, 'n-1': 1, '-1)': 1, '1):': 1, '  s': 1, ' s ': 1, '= n': 1, 's)\n': 2, '  p': 1, ' pr': 1, 'pri': 1, 'rin': 1, 'int': 1, 'nt(': 1, 't(s': 1}"
Vincent Russo,palindrome_permutation.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'youtube': 1, 'video:': 1, 'https://www.youtube.com/watch?v=dcnxqgmpkz0&index=6&list=pl5tcwhg-uph03aqnbtkbuh5qibhshbg_k': 1, '""""""': 2, 'given': 1, 'a': 9, 'string,': 1, 'write': 1, 'function': 1, 'to': 3, 'check': 1, 'if': 3, 'it': 1, 'is': 5, 'permutation': 2, 'of': 2, 'palindrome.': 1, 'palindrome': 3, 'word': 1, 'or': 1, 'phrase': 1, 'that': 1, 'the': 2, 'same': 1, 'forwards': 1, 'and': 3, 'backwards.': 1, 'rearrangement': 1, 'letters.': 1, 'does': 1, 'not': 2, 'need': 1, 'be': 1, 'limited': 1, 'just': 1, 'dictionary': 1, 'words.': 1, 'palin_perm': 1, '=': 7, '""tact': 1, 'coa""': 1, 'not_palin_perm': 1, '""this': 1, 'permutation""': 1, 'def': 1, 'is_palin_perm(input_str):': 1, 'input_str': 2, 'input_str.replace(""': 1, '"",': 1, '"""")': 1, 'input_str.lower()': 1, 'd': 1, 'dict()': 1, 'for': 2, 'i': 2, 'in': 3, 'input_str:': 1, 'd:': 1, 'd[i]': 2, '+=': 2, '1': 3, 'else:': 1, 'odd_count': 4, '0': 3, 'k,': 1, 'v': 3, 'd.items():': 1, '%': 2, '2': 2, '!=': 3, '==': 1, '0:': 2, 'elif': 1, 'return': 2, 'false': 1, 'true': 1, 'print(is_palin_perm(palin_perm))': 1, 'print(is_palin_perm(not_palin_perm))': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 2, 'be ': 2, 'e V': 1, ' Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eo:': 1, 'o: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.y': 1, '.yo': 1, 'you': 1, 'out': 1, 'utu': 1, 'tub': 1, 'be.': 1, 'e.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/w': 1, '/wa': 1, 'wat': 1, 'atc': 1, 'tch': 1, 'ch?': 1, 'h?v': 1, '?v=': 1, 'v=d': 1, '=dC': 1, 'dCn': 1, 'Cnx': 1, 'nxQ': 1, 'xQG': 1, 'QGM': 1, 'GMp': 1, 'MpK': 1, 'pKz': 1, 'Kz0': 1, 'z0&': 1, '0&i': 1, '&in': 1, 'ind': 5, 'nde': 1, 'dex': 1, 'ex=': 1, 'x=6': 1, '=6&': 1, '6&l': 1, '&li': 1, 'lis': 1, 'ist': 1, 'st=': 1, 't=P': 1, '=PL': 1, 'PL5': 1, 'L5t': 1, '5tc': 1, 'tcW': 1, 'cWH': 1, 'WHG': 1, 'HG-': 1, 'G-U': 1, '-UP': 1, 'UPH': 1, 'PH0': 1, 'H03': 1, '03a': 1, '3aq': 1, 'aqn': 1, 'qnB': 1, 'nBT': 1, 'BTk': 1, 'TkB': 1, 'kBu': 1, 'BuH': 1, 'uH5': 1, 'H5q': 1, '5qI': 1, 'qIb': 1, 'Ibh': 1, 'bhs': 1, 'hsh': 1, 'shb': 1, 'hbg': 1, 'bg_': 1, 'g_K': 1, '_K\n': 1, 'K\n""': 1, '\n""""': 2, '""""""': 2, '""""\n': 2, '""\nG': 1, '\nGi': 1, 'Giv': 1, 'ive': 1, 'ven': 1, 'en ': 1, 'n a': 1, ' a ': 6, 'a s': 1, ' st': 1, 'str': 7, 'tri': 1, 'rin': 3, 'ing': 1, 'ng,': 1, 'g, ': 1, ', w': 1, ' wr': 1, 'wri': 1, 'rit': 1, 'ite': 3, 'te ': 1, 'e a': 1, 'a f': 1, ' fu': 1, 'fun': 1, 'unc': 1, 'nct': 1, 'cti': 2, 'tio': 5, 'ion': 5, 'on ': 3, 'n t': 1, ' to': 3, 'to ': 3, 'o c': 1, ' ch': 1, 'che': 1, 'hec': 1, 'eck': 1, 'ck ': 1, 'k i': 1, ' if': 3, 'if ': 4, 'f i': 3, ' it': 1, 'it ': 1, 't i': 2, ' is': 6, 'is\n': 1, 's\na': 1, '\na ': 1, 'a p': 3, ' pe': 3, 'per': 10, 'erm': 10, 'rmu': 3, 'mut': 3, 'uta': 3, 'tat': 3, 'ati': 3, 'n o': 1, ' of': 2, 'of ': 2, 'f a': 1, ' pa': 3, 'pal': 11, 'ali': 11, 'lin': 11, 'ndr': 4, 'dro': 4, 'rom': 4, 'ome': 4, 'me.': 1, 'e. ': 1, '. A': 1, ' A ': 1, 'A p': 2, 'me ': 4, 'e i': 1, 'is ': 5, 's a': 3, 'a w': 1, ' wo': 2, 'wor': 2, 'ord': 2, 'rd\n': 1, 'd\no': 1, '\nor': 1, 'or ': 3, 'r p': 1, ' ph': 1, 'phr': 1, 'hra': 1, 'ras': 1, 'ase': 1, 'se ': 1, 'e t': 1, ' th': 2, 'tha': 1, 'hat': 1, 'at ': 1, 's t': 1, 'the': 1, 'he ': 1, 'e s': 1, ' sa': 1, 'sam': 1, 'ame': 1, 'e f': 1, ' fo': 3, 'for': 3, 'orw': 1, 'rwa': 1, 'war': 2, 'ard': 2, 'rds': 3, 'ds ': 1, ' an': 3, 'and': 3, 'nd ': 3, 'd b': 1, ' ba': 1, 'bac': 1, 'ack': 1, 'ckw': 1, 'kwa': 1, 'ds.': 2, 's.\n': 2, '.\nA': 1, '\nA ': 1, 'n i': 2, 'a r': 1, ' re': 3, 'rea': 1, 'ear': 1, 'arr': 1, 'rra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'gem': 1, 'eme': 1, 'men': 1, 'ent': 1, 'nt ': 5, 't o': 1, 'f l': 1, ' le': 1, 'let': 1, 'ett': 1, 'tte': 1, 'ter': 1, 'ers': 1, 'rs.': 1, 's. ': 1, '. T': 1, ' Th': 1, 'The': 1, 'he\n': 1, 'e\np': 1, '\npa': 2, 'e d': 1, ' do': 1, 'doe': 1, 'oes': 1, 'es ': 1, 's n': 2, ' no': 2, 'not': 4, 'ot ': 2, 't n': 1, ' ne': 1, 'nee': 1, 'eed': 1, 'ed ': 2, 'd t': 2, 'o b': 1, ' be': 1, 'e l': 1, ' li': 1, 'lim': 1, 'imi': 1, 'mit': 1, 'ted': 1, 'o j': 1, ' ju': 1, 'jus': 1, 'ust': 1, 'st\n': 1, 't\nd': 1, '\ndi': 1, 'dic': 2, 'ict': 2, 'ona': 1, 'nar': 1, 'ary': 1, 'ry ': 1, 'y w': 1, '.\n""': 1, '""\n\n': 2, '\n\np': 2, 'in_': 7, 'n_p': 7, '_pe': 7, 'rm ': 2, 'm =': 2, ' = ': 7, '= ""': 2, ' ""T': 2, '""Ta': 1, 'Tac': 1, 'act': 1, 'ct ': 1, 't C': 1, ' Co': 1, 'Coa': 1, 'oa""': 1, 'a""\n': 1, '""\nn': 1, '\nno': 1, 'ot_': 2, 't_p': 2, '_pa': 5, '""Th': 1, 'Thi': 1, 'his': 1, 's i': 1, 't a': 1, 'e p': 1, 'on""': 1, 'n""\n': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'is_': 3, 's_p': 3, 'rm(': 3, 'm(i': 1, '(in': 1, 'inp': 6, 'npu': 6, 'put': 6, 'ut_': 6, 't_s': 6, '_st': 6, 'tr)': 1, 'r):': 1, '):\n': 2, ':\n ': 7, '\n  ': 15, '   ': 78, '  i': 4, ' in': 8, 'tr ': 2, 'r =': 2, '= i': 2, 'tr.': 2, 'r.r': 1, '.re': 1, 'rep': 1, 'epl': 1, 'pla': 1, 'lac': 1, 'ace': 1, 'ce(': 1, 'e(""': 1, '("" ': 1, '"" ""': 1, ' "",': 1, '"", ': 1, ', ""': 1, ' """"': 1, '"""")': 1, '"")\n': 1, ')\n ': 1, 'r.l': 1, '.lo': 1, 'low': 1, 'owe': 1, 'wer': 1, 'er(': 1, 'r()': 1, '()\n': 2, ')\n\n': 2, '\n\n ': 3, '  d': 3, ' d ': 1, 'd =': 1, '= d': 1, ' di': 1, 'ct(': 1, 't()': 1, '  f': 2, 'r i': 1, ' i ': 2, 'i i': 2, 'in ': 3, 'tr:': 1, 'r:\n': 1, 'n d': 2, ' d:': 1, 'd:\n': 1, ' d[': 2, 'd[i': 2, '[i]': 2, 'i] ': 2, '] +': 1, ' +=': 2, '+= ': 2, '= 1': 3, ' 1\n': 3, '1\n ': 2, '  e': 2, ' el': 2, 'els': 1, 'lse': 2, 'se:': 1, 'e:\n': 1, '] =': 1, '1\n\n': 1, '  o': 2, ' od': 4, 'odd': 4, 'dd_': 4, 'd_c': 4, '_co': 4, 'cou': 4, 'oun': 4, 'unt': 4, 't =': 2, '= 0': 5, ' 0\n': 1, '0\n ': 1, 'r k': 1, ' k,': 1, 'k, ': 1, ', v': 1, ' v ': 3, 'v i': 1, ' d.': 1, 'd.i': 1, '.it': 1, 'tem': 1, 'ems': 1, 'ms(': 1, 's()': 1, '():': 1, 'f v': 2, 'v %': 2, ' % ': 2, '% 2': 2, ' 2 ': 2, '2 !': 2, ' !=': 3, '!= ': 3, ' 0 ': 2, '0 a': 2, 'd o': 2, ' ==': 1, '== ': 1, ' 0:': 2, '0:\n': 2, 't +': 1, 'eli': 1, 'lif': 1, 't !': 1, '  r': 2, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rn ': 2, 'n F': 1, ' Fa': 1, 'Fal': 1, 'als': 1, 'se\n': 1, 'e\n ': 1, 'n T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1, 'e\n\n': 1, '\npr': 2, 'pri': 2, 'int': 2, 'nt(': 2, 't(i': 2, '(is': 2, 'm(p': 1, '(pa': 1, 'rm)': 2, 'm))': 2, '))\n': 2, ')\np': 1, 'm(n': 1, '(no': 1}"
Vincent Russo,permutation.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 7, 'youtube': 1, 'video:': 1, 'https://www.youtube.com/watch?v=qjuxuwzvo_q&index=4&list=pl5tcwhg-uph03aqnbtkbuh5qibhshbg_k': 1, '""""""': 2, 'given': 1, 'two': 1, 'strings,': 1, 'write': 1, 'a': 2, 'method': 1, 'to': 1, 'decide': 1, 'if': 6, 'one': 1, 'is': 1, 'permutation': 1, 'of': 1, 'the': 1, 'other.': 1, 'is_permutation_1': 1, '=': 14, '""google""': 1, 'is_permutation_2': 1, '""ooggle""': 1, 'not_permutation_1': 1, '""not""': 1, 'not_permutation_2': 1, '""top""': 1, 'approach': 2, '1:': 1, 'sorting': 1, 'time': 2, 'complexity:': 4, 'o(n': 1, 'log': 1, 'n)': 1, 'space': 2, 'o(1)': 1, 'def': 2, 'is_perm_1(str_1,': 1, 'str_2):': 2, 'str_1': 3, 'str_1.lower()': 2, 'str_2': 3, 'str_2.lower()': 2, 'len(str_1)': 3, '!=': 3, 'len(str_2):': 2, 'return': 5, 'false': 3, ""''.join(sorted(str_1))"": 1, ""''.join(sorted(str_2))"": 1, 'n': 1, 'for': 4, 'i': 5, 'in': 6, 'range(n):': 1, 'str_1[i]': 1, 'str_2[i]:': 1, 'true': 1, '2:': 1, 'hash': 1, 'table': 1, 'o(n)': 2, 'is_perm_2(str_1,': 1, 'd': 1, 'dict()': 1, 'str_1:': 1, 'd:': 2, 'd[i]': 4, '+=': 1, '1': 4, 'else:': 2, 'str_2:': 1, '-=': 1, 'all(value': 1, '==': 1, '0': 1, 'value': 1, 'd.values())': 1, 'print(is_perm_1(is_permutation_1,': 1, 'is_permutation_2))': 2, '#print(is_perm_1(not_permutation_1,': 1, 'not_permutation_2))': 2, 'print(is_perm_2(is_permutation_1,': 1, '#print(is_perm_2(not_permutation_1,': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 2, 'be ': 1, 'e V': 1, ' Vi': 1, 'Vid': 1, 'ide': 2, 'deo': 1, 'eo:': 1, 'o: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.y': 1, '.yo': 1, 'you': 1, 'out': 1, 'utu': 1, 'tub': 1, 'be.': 1, 'e.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/w': 1, '/wa': 1, 'wat': 1, 'atc': 1, 'tch': 1, 'ch?': 1, 'h?v': 1, '?v=': 1, 'v=q': 1, '=qj': 1, 'qju': 1, 'juX': 1, 'uXU': 1, 'XUW': 1, 'UWz': 1, 'WzV': 1, 'zVO': 1, 'VO_': 1, 'O_Q': 1, '_Q&': 1, 'Q&i': 1, '&in': 1, 'ind': 1, 'nde': 1, 'dex': 1, 'ex=': 1, 'x=4': 1, '=4&': 1, '4&l': 1, '&li': 1, 'lis': 1, 'ist': 1, 'st=': 1, 't=P': 1, '=PL': 1, 'PL5': 1, 'L5t': 1, '5tc': 1, 'tcW': 1, 'cWH': 1, 'WHG': 1, 'HG-': 1, 'G-U': 1, '-UP': 1, 'UPH': 1, 'PH0': 1, 'H03': 1, '03a': 1, '3aq': 1, 'aqn': 1, 'qnB': 1, 'nBT': 1, 'BTk': 1, 'TkB': 1, 'kBu': 1, 'BuH': 1, 'uH5': 1, 'H5q': 1, '5qI': 1, 'qIb': 1, 'Ibh': 1, 'bhs': 1, 'hsh': 1, 'shb': 1, 'hbg': 1, 'bg_': 1, 'g_K': 1, '_K\n': 1, 'K\n""': 1, '\n""""': 2, '""""""': 2, '""""\n': 2, '""\nG': 1, '\nGi': 1, 'Giv': 1, 'ive': 1, 'ven': 1, 'en ': 1, 'n t': 1, ' tw': 1, 'two': 1, 'wo ': 1, 'o s': 1, ' st': 17, 'str': 26, 'tri': 1, 'rin': 5, 'ing': 2, 'ngs': 1, 'gs,': 1, 's, ': 1, ', w': 1, ' wr': 1, 'wri': 1, 'rit': 1, 'ite': 1, 'te ': 1, 'e a': 1, ' a ': 2, 'a m': 1, ' me': 1, 'met': 1, 'eth': 1, 'tho': 1, 'hod': 1, 'od ': 1, 'd t': 1, ' to': 1, 'to ': 1, 'o d': 1, ' de': 1, 'dec': 1, 'eci': 1, 'cid': 1, 'de ': 1, 'e i': 3, ' if': 6, 'if ': 6, 'f \n': 1, ' \no': 1, '\non': 1, 'one': 1, 'ne ': 1, ' is': 5, 'is ': 1, 's a': 1, 'a p': 1, ' pe': 1, 'per': 19, 'erm': 19, 'rmu': 13, 'mut': 13, 'uta': 13, 'tat': 13, 'ati': 13, 'tio': 13, 'ion': 13, 'on ': 1, 'n o': 1, ' of': 1, 'of ': 1, 'f t': 1, ' th': 1, 'the': 2, 'he ': 1, 'e o': 1, ' ot': 1, 'oth': 1, 'her': 1, 'er.': 1, 'r.\n': 1, '.\n""': 1, '""\n\n': 3, '\n\ni': 1, '\nis': 2, 'is_': 12, 's_p': 12, '_pe': 18, 'on_': 12, 'n_1': 6, '_1 ': 5, '1 =': 5, ' = ': 14, '= ""': 4, ' ""g': 1, '""go': 1, 'goo': 1, 'oog': 2, 'ogl': 1, 'gle': 2, 'le""': 2, 'e""\n': 2, '""\ni': 1, 'n_2': 6, '_2 ': 5, '2 =': 5, ' ""o': 1, '""oo': 1, 'ogg': 1, 'ggl': 1, '\n\nn': 1, '\nno': 2, 'not': 7, 'ot_': 6, 't_p': 6, ' ""n': 1, '""no': 1, 'ot""': 1, 't""\n': 1, '""\nn': 1, ' ""t': 1, '""to': 1, 'top': 1, 'op""': 1, 'p""\n': 1, '\n\n\n': 2, '\n\n#': 2, '\n# ': 6, '# A': 2, ' Ap': 2, 'App': 2, 'ppr': 2, 'pro': 2, 'roa': 2, 'oac': 2, 'ach': 2, 'ch ': 2, 'h 1': 1, ' 1:': 1, '1: ': 1, ': S': 1, ' So': 1, 'Sor': 1, 'ort': 3, 'rti': 1, 'tin': 1, 'ng\n': 1, 'g\n#': 1, '# T': 2, ' Ti': 2, 'Tim': 2, 'ime': 2, 'me ': 2, 'e C': 4, ' Co': 4, 'Com': 4, 'omp': 4, 'mpl': 4, 'ple': 4, 'lex': 4, 'exi': 4, 'xit': 4, 'ity': 4, 'ty:': 4, 'y: ': 4, ': O': 4, ' O(': 4, 'O(n': 3, '(n ': 1, 'n l': 1, ' lo': 1, 'log': 1, 'og ': 1, 'g n': 1, ' n)': 1, 'n)\n': 3, ')\n#': 4, '# S': 2, ' Sp': 2, 'Spa': 2, 'pac': 2, 'ace': 2, 'ce ': 2, 'O(1': 1, '(1)': 1, '1)\n': 2, ')\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f i': 4, 'rm_': 6, 'm_1': 3, '_1(': 3, '1(s': 1, '(st': 9, 'tr_': 25, 'r_1': 13, '_1,': 6, '1, ': 6, ', s': 2, 'r_2': 12, '_2)': 9, '2):': 4, '):\n': 5, ':\n ': 12, '\n  ': 29, '   ': 126, '  s': 6, '= s': 5, '_1.': 2, '1.l': 2, '.lo': 4, 'low': 4, 'owe': 4, 'wer': 4, 'er(': 4, 'r()': 4, '()\n': 5, ')\n ': 4, '_2.': 2, '2.l': 2, ')\n\n': 6, '\n\n ': 7, '  i': 5, 'f l': 2, ' le': 5, 'len': 5, 'en(': 5, 'n(s': 7, '_1)': 4, '1) ': 2, ') !': 2, ' !=': 3, '!= ': 3, '= l': 3, '  r': 5, ' re': 5, 'ret': 5, 'etu': 5, 'tur': 5, 'urn': 5, 'rn ': 5, 'n F': 3, ' Fa': 3, 'Fal': 3, 'als': 3, 'lse': 5, 'se\n': 3, 'e\n\n': 2, ""= '"": 2, "" ''"": 2, ""''."": 2, ""'.j"": 2, '.jo': 2, 'joi': 2, 'oin': 2, 'in(': 2, '(so': 2, 'sor': 2, 'rte': 2, 'ted': 2, 'ed(': 2, 'd(s': 2, '1))': 1, '))\n': 7, '2))': 5, '  n': 1, ' n ': 1, 'n =': 1, '  f': 3, ' fo': 4, 'for': 4, 'or ': 4, 'r i': 3, ' i ': 5, 'i i': 5, ' in': 6, 'in ': 6, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(n': 1, '(n)': 3, 'n):': 1, 'f s': 1, '_1[': 1, '1[i': 1, '[i]': 6, 'i] ': 5, '] !': 1, '_2[': 1, '2[i': 1, 'i]:': 1, ']:\n': 1, 'e\n ': 2, 'n T': 1, ' Tr': 1, 'Tru': 1, 'rue': 1, 'ue\n': 1, '  \n': 2, ' \n\n': 1, 'h 2': 1, ' 2:': 1, '2: ': 1, ': H': 1, ' Ha': 1, 'Has': 1, 'ash': 1, 'sh ': 1, 'h T': 1, ' Ta': 1, 'Tab': 1, 'abl': 1, 'ble': 1, 'le\n': 1, 'e\n#': 1, 'm_2': 3, '_2(': 3, '2(s': 1, '  d': 5, ' d ': 1, 'd =': 1, '= d': 1, ' di': 1, 'dic': 1, 'ict': 1, 'ct(': 1, 't()': 1, ' \n ': 1, 'n s': 2, '_1:': 1, '1:\n': 1, 'n d': 3, ' d:': 2, 'd:\n': 2, ' d[': 4, 'd[i': 4, '] +': 1, ' +=': 1, '+= ': 1, '= 1': 4, ' 1\n': 4, '1\n ': 3, '  e': 2, ' el': 2, 'els': 2, 'se:': 2, 'e:\n': 2, '] =': 2, '_2:': 1, '2:\n': 1, '] -': 1, ' -=': 1, '-= ': 1, '1\n\n': 1, 'n a': 1, ' al': 1, 'all': 1, 'll(': 1, 'l(v': 1, '(va': 1, 'val': 3, 'alu': 3, 'lue': 3, 'ue ': 2, 'e =': 1, ' ==': 1, '== ': 1, '= 0': 1, ' 0 ': 1, '0 f': 1, 'r v': 1, ' va': 1, ' d.': 1, 'd.v': 1, '.va': 1, 'ues': 1, 'es(': 1, 's()': 1, '())': 1, '\n\np': 2, '\npr': 2, 'pri': 4, 'int': 4, 'nt(': 4, 't(i': 4, '(is': 6, '1(i': 1, ', i': 2, '\n#p': 2, '#pr': 2, '1(n': 1, '(no': 2, ', n': 2, ' no': 2, '2(i': 1, '2(n': 1}"
Vincent Russo,remove_first_name_duplicate.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 5, '(john,': 4, 'carmack),': 2, 'romero),': 2, '(bill,': 3, 'gates),': 3, '(elon,': 3, 'musk)': 3, '-->': 1, 'or': 1, 'a': 3, '=': 6, '[(""john"",': 1, '""carmack""),': 2, '(""john""': 1, '""romero""),': 2, '(""bill"",': 1, '""gates""),': 2, '(""elon"",': 1, '""musk"")]': 2, 'class': 1, 'firstlastname():': 1, 'def': 5, '__init__(self,': 1, 'first_name,': 1, 'last_name):': 1, 'self.first_name': 4, 'first_name': 1, 'self.last_name': 3, 'last_name': 1, '__str__(self):': 1, 'return': 4, '+': 2, '""': 2, '__eq__(self,': 1, 'other):': 2, '==': 1, 'other.first_name': 3, '__lt__(self,': 1, '(self.first_name': 1, '<': 2, 'if': 2, '!=': 2, 'else': 1, 'other.last_name)': 1, '[firstlastname(""john"",': 1, 'firstlastname(""john"",': 1, 'firstlastname(""bill"",': 1, 'firstlastname(""elon"",': 1, 'remove_duplicate(a):': 1, 'a.sort()': 1, 'for': 3, 'name': 5, 'in': 3, 'a:': 3, 'print(name)': 2, 'print(""\\n"")': 2, 'write_idx': 2, '1': 2, 'a[write_idx': 1, '-': 1, '1]:': 1, 'a[write_idx]': 1, '+=': 1, 'del': 1, 'a[write_idx:]': 1, 'remove_duplicate(a)': 1}","{'\n# ': 5, '# (': 3, ' (J': 4, '(Jo': 4, 'Joh': 8, 'ohn': 8, 'hn,': 4, 'n, ': 7, ', C': 2, ' Ca': 2, 'Car': 4, 'arm': 4, 'rma': 4, 'mac': 4, 'ack': 4, 'ck)': 2, 'k),': 2, '), ': 13, ', (': 10, ', R': 2, ' Ro': 2, 'Rom': 4, 'ome': 4, 'mer': 4, 'ero': 4, 'ro)': 2, 'o),': 2, ' (B': 3, '(Bi': 3, 'Bil': 5, 'ill': 5, 'll,': 3, 'l, ': 3, ', G': 3, ' Ga': 3, 'Gat': 5, 'ate': 7, 'tes': 5, 'es)': 3, 's),': 3, ' (E': 3, '(El': 3, 'Elo': 5, 'lon': 5, 'on,': 3, ', M': 3, ' Mu': 3, 'Mus': 5, 'usk': 5, 'sk)': 3, 'k) ': 1, ') \n': 1, ' \n#': 1, '# -': 1, ' --': 1, '-->': 1, '->\n': 1, '>\n#': 1, 'k)\n': 2, ')\n#': 1, '# o': 1, ' or': 1, 'or\n': 1, 'r\n#': 1, ')\nA': 1, '\nA ': 2, 'A =': 2, ' = ': 6, '= [': 2, ' [(': 1, '[(""': 1, '(""J': 4, '""Jo': 4, 'hn""': 4, 'n"",': 5, '"", ': 7, ', ""': 7, ' ""C': 2, '""Ca': 2, 'ck""': 2, 'k"")': 4, '""),': 6, ' (""': 3, 'n"" ': 1, '"" ""': 2, ' ""R': 2, '""Ro': 2, 'ro""': 2, 'o"")': 2, '(""B': 2, '""Bi': 2, 'll""': 2, 'l"",': 2, ' ""G': 2, '""Ga': 2, 'es""': 2, 's"")': 2, '(""E': 2, '""El': 2, 'on""': 2, ' ""M': 2, '""Mu': 2, 'sk""': 2, '"")]': 2, ')]\n': 2, ']\n\n': 3, '\n\n\n': 4, '\n\nc': 1, '\ncl': 1, 'cla': 1, 'las': 7, 'ass': 1, 'ss ': 1, 's F': 1, ' Fi': 4, 'Fir': 5, 'irs': 15, 'rst': 15, 'stL': 5, 'tLa': 5, 'Las': 5, 'ast': 11, 'stN': 5, 'tNa': 5, 'Nam': 5, 'ame': 28, 'me(': 5, 'e()': 1, '():': 1, '):\n': 6, ':\n ': 10, '\n  ': 25, '   ': 122, '  d': 5, ' de': 5, 'def': 5, 'ef ': 5, 'f _': 4, ' __': 4, '__i': 1, '_in': 1, 'ini': 1, 'nit': 1, 'it_': 1, 't__': 2, '__(': 4, '_(s': 4, '(se': 5, 'sel': 12, 'elf': 12, 'lf,': 3, 'f, ': 3, ', f': 1, ' fi': 2, 'fir': 10, 'st_': 16, 't_n': 16, '_na': 16, 'nam': 23, 'me,': 1, 'e, ': 1, ', l': 1, ' la': 2, 'me)': 4, 'e):': 1, '  s': 3, ' se': 7, 'lf.': 8, 'f.f': 5, '.fi': 8, 'me ': 15, 'e =': 3, '= f': 1, 'e \n': 3, ' \n ': 2, 'f.l': 3, '.la': 4, '= l': 1, ' \n\n': 1, '\n\n ': 7, '__s': 1, '_st': 1, 'str': 1, 'tr_': 1, 'r__': 1, 'lf)': 1, 'f):': 1, '  r': 4, ' re': 5, 'ret': 4, 'etu': 4, 'tur': 4, 'urn': 4, 'rn ': 4, 'n s': 2, 'e +': 1, ' + ': 2, '+ ""': 1, ' "" ': 2, '"" +': 1, '+ s': 1, 'me\n': 3, 'e\n\n': 2, '__e': 1, '_eq': 1, 'eq_': 1, 'q__': 1, ', o': 2, ' ot': 6, 'oth': 6, 'the': 6, 'her': 6, 'er)': 2, 'r):': 2, ' ==': 1, '== ': 1, '= o': 2, 'er.': 4, 'r.f': 3, '__l': 1, '_lt': 1, 'lt_': 1, 'n (': 1, ' (s': 1, 'e <': 2, ' < ': 2, '< o': 2, '  i': 2, ' if': 2, 'if ': 2, 'f s': 1, 'e !': 2, ' !=': 2, '!= ': 2, 'e e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se\n': 1, 'e\n ': 2, 'r.l': 1, 'e)\n': 3, ')\n\n': 4, '\n\nA': 1, ' [F': 1, '[Fi': 1, 'e(""': 4, ', F': 3, '\n\nd': 1, '\nde': 1, 'f r': 1, 'rem': 2, 'emo': 2, 'mov': 2, 'ove': 2, 've_': 2, 'e_d': 2, '_du': 2, 'dup': 2, 'upl': 2, 'pli': 2, 'lic': 2, 'ica': 2, 'cat': 2, 'te(': 2, 'e(A': 2, '(A)': 2, 'A):': 1, '  A': 2, ' A.': 1, 'A.s': 1, '.so': 1, 'sor': 1, 'ort': 1, 'rt(': 1, 't()': 1, '()\n': 1, '  f': 3, ' fo': 3, 'for': 3, 'or ': 3, 'r n': 3, ' na': 5, 'e i': 3, ' in': 3, 'in ': 3, 'n A': 4, ' A:': 3, 'A:\n': 3, '  p': 4, ' pr': 4, 'pri': 4, 'rin': 4, 'int': 4, 'nt(': 4, 't(n': 2, '(na': 2, ')\n ': 2, 't(""': 2, '(""\\': 2, '""\\n': 2, '\\n""': 2, 'n"")': 2, '"")\n': 2, '  w': 2, ' wr': 2, 'wri': 5, 'rit': 5, 'ite': 5, 'te_': 5, 'e_i': 5, '_id': 5, 'idx': 5, 'dx ': 3, 'x =': 1, '= 1': 2, ' 1\n': 2, '1\n ': 2, 'f n': 1, '= A': 1, ' A[': 3, 'A[w': 3, '[wr': 3, 'x -': 1, ' - ': 1, '- 1': 1, ' 1]': 1, '1]:': 1, ']:\n': 1, 'dx]': 1, 'x] ': 1, '] =': 1, '= n': 1, 'x +': 1, ' +=': 1, '+= ': 1, 'del': 1, 'el ': 1, 'l A': 1, 'dx:': 1, 'x:]': 1, ':]\n': 1, ' A\n': 1, 'A\n\n': 1, '\n\nr': 1, '\nre': 1, 'A)\n': 1}"
Vincent Russo,run_lenght_encode.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 3, 'youtube': 1, 'link:': 1, '""""""': 6, 'run-length': 4, 'encoding': 2, '(rle)': 2, 'is': 1, 'a': 5, 'very': 1, 'simple': 1, 'form': 1, 'of': 4, 'lossless': 1, 'data': 7, 'compression': 2, 'in': 3, 'which': 2, 'runs': 1, '(that': 1, 'is,': 1, 'sequences': 1, 'the': 5, 'same': 1, 'value': 2, 'occurs': 1, 'many': 1, 'consecutive': 1, 'elements)': 1, 'are': 1, 'stored': 1, 'as': 4, 'single': 1, 'and': 3, 'count,': 1, 'rather': 1, 'than': 1, 'original': 1, 'run.': 1, 'example:': 1, 'wwwwwwwwwwwwbwwwwwwwwwwwwbbbwwwwwwwwwwwwwwwwwwwwwwwwbwwwwwwwwwwwwww': 1, 'with': 1, 'algorithm': 1, 'applied': 1, 'to': 1, 'above': 1, 'hypothetical': 1, 'scan': 1, 'line,': 1, 'it': 1, 'can': 2, 'be': 2, 'rendered': 1, 'follows:': 1, '12w1b12w3b24w1b14w': 1, 'this': 1, 'interpreted': 1, 'sequence': 1, 'twelve': 2, 'ws,': 2, 'one': 1, 'b,': 1, 'three': 1, 'bs,': 1, 'etc..,': 1, 'def': 2, 'run_length_encode(uncompressed_data):': 1, 'takes': 2, 'an': 1, 'uncompressed': 2, 'string': 2, 'returns': 2, 'encoded': 2, 'string.': 1, 'compressed_data': 3, '=': 5, '""""': 2, 'return': 2, 'run_length_decode(compressed_data):': 1, 'compressed': 1, 'decoded': 1, 'data.': 1, 'uncompressed_data': 4, '""aaaaahhhhhhmmmmmmmuiiiiiiiaaaaaa""': 2, 'expects:': 2, 'run_length_encode(uncompressed_data)': 1, 'run_length_decode(compressed_data)': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 1, 'be ': 3, 'e L': 1, ' Li': 1, 'Lin': 1, 'ink': 1, 'nk:': 1, 'k:\n': 1, ':\n\n': 2, '\n\n""': 1, '\n""""': 2, '""""""': 6, '""""\n': 8, '""\nR': 1, '\nRu': 1, 'Run': 1, 'un-': 4, 'n-l': 4, '-le': 4, 'len': 8, 'eng': 8, 'ngt': 8, 'gth': 8, 'th ': 5, 'h e': 4, ' en': 4, 'enc': 8, 'nco': 14, 'cod': 9, 'odi': 2, 'din': 2, 'ing': 6, 'ng ': 3, 'g (': 2, ' (R': 2, '(RL': 2, 'RLE': 2, 'LE)': 2, 'E) ': 2, ') i': 1, ' is': 2, 'is ': 2, 's a': 5, ' a ': 5, 'a v': 3, ' ve': 1, 'ver': 1, 'ery': 1, 'ry ': 1, 'y s': 1, ' si': 2, 'sim': 1, 'imp': 1, 'mpl': 2, 'ple': 2, 'le ': 2, 'e f': 1, ' fo': 2, 'for': 1, 'orm': 1, 'rm ': 1, 'm o': 1, ' of': 4, 'of ': 4, 'f l': 1, ' lo': 1, 'los': 1, 'oss': 1, 'ssl': 1, 'sle': 1, 'les': 1, 'ess': 17, 'ss ': 1, 's d': 1, ' da': 8, 'dat': 19, 'ata': 19, 'ta ': 12, 'a c': 2, ' co': 7, 'com': 16, 'omp': 16, 'mpr': 16, 'pre': 17, 'res': 16, 'ssi': 2, 'sio': 2, 'ion': 2, 'on\n': 1, 'n\ni': 1, '\nin': 2, 'in ': 3, 'n w': 2, ' wh': 2, 'whi': 2, 'hic': 2, 'ich': 2, 'ch ': 2, 'h r': 1, ' ru': 9, 'run': 9, 'uns': 1, 'ns ': 3, 's o': 1, 'f d': 2, 'a (': 1, ' (t': 1, '(th': 1, 'tha': 2, 'hat': 1, 'at ': 1, 't i': 1, 'is,': 1, 's, ': 3, ', s': 1, ' se': 2, 'seq': 2, 'equ': 2, 'que': 2, 'uen': 2, 'nce': 2, 'ces': 1, 'es ': 3, 's i': 1, ' in': 2, 'h t': 1, ' th': 7, 'the': 7, 'he ': 5, 'e s': 2, ' sa': 1, 'sam': 1, 'ame': 1, 'me ': 1, 'e d': 3, ' va': 2, 'val': 2, 'alu': 2, 'lue': 2, 'ue ': 2, 'e o': 3, ' oc': 1, 'occ': 1, 'ccu': 1, 'cur': 1, 'urs': 1, 'rs\n': 1, 's\ni': 1, 'n m': 1, ' ma': 1, 'man': 1, 'any': 1, 'ny ': 1, 'y c': 1, 'con': 1, 'ons': 1, 'nse': 1, 'sec': 1, 'ecu': 1, 'cut': 1, 'uti': 1, 'tiv': 1, 'ive': 1, 've ': 4, 'a e': 1, ' el': 1, 'ele': 1, 'lem': 1, 'eme': 1, 'men': 1, 'ent': 1, 'nts': 1, 'ts)': 1, 's) ': 1, ') a': 1, ' ar': 1, 'are': 1, 're ': 1, ' st': 4, 'sto': 1, 'tor': 1, 'ore': 1, 'red': 2, 'ed ': 10, 'd a': 3, ' as': 4, 'as ': 4, 'a s': 2, 'sin': 1, 'ngl': 1, 'gle': 1, 'e a': 2, ' an': 4, 'and': 3, 'nd ': 2, 'd c': 2, 'cou': 1, 'oun': 1, 'unt': 1, 'nt,': 1, 't,\n': 1, ',\nr': 1, '\nra': 1, 'rat': 1, 'ath': 1, 'her': 1, 'er ': 1, 'r t': 1, 'han': 1, 'an ': 5, 'n a': 2, 's t': 3, ' or': 1, 'ori': 2, 'rig': 1, 'igi': 1, 'gin': 1, 'ina': 1, 'nal': 1, 'al ': 2, 'l r': 1, 'un.': 1, 'n.\n': 1, '.\n\n': 1, '\n\nE': 1, '\nEx': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'le:': 1, 'e:\n': 1, ':\n ': 3, '\n  ': 18, '   ': 36, '  W': 2, ' WW': 1, 'WWW': 54, 'WWB': 3, 'WBW': 2, 'BWW': 3, 'WBB': 1, 'BBB': 1, 'BBW': 1, 'WW\n': 1, 'W\n ': 2, ' Wi': 1, 'Wit': 1, 'ith': 2, 'h a': 1, 'a r': 2, ') d': 1, 'on ': 1, ' al': 1, 'alg': 1, 'lgo': 1, 'gor': 1, 'rit': 1, 'thm': 1, 'hm ': 1, 'm a': 1, ' ap': 1, 'app': 1, 'ppl': 1, 'pli': 1, 'lie': 1, 'ied': 1, 'd t': 1, ' to': 1, 'to\n': 1, 'o\n ': 1, '  t': 2, ' ab': 1, 'abo': 1, 'bov': 1, 'ove': 1, 'e h': 1, ' hy': 1, 'hyp': 1, 'ypo': 1, 'pot': 1, 'oth': 1, 'het': 1, 'eti': 1, 'tic': 1, 'ica': 1, 'cal': 1, 'l s': 1, ' sc': 1, 'sca': 1, 'can': 3, 'n l': 1, ' li': 1, 'lin': 1, 'ine': 1, 'ne,': 1, 'e, ': 1, ', i': 1, ' it': 1, 'it ': 1, 't c': 1, ' ca': 2, 'n b': 2, ' be': 2, 'e r': 2, ' re': 5, 'ren': 1, 'end': 1, 'nde': 1, 'der': 1, 'ere': 1, 's f': 1, 'fol': 1, 'oll': 1, 'llo': 1, 'low': 1, 'ows': 1, 'ws:': 1, 's:\n': 1, '\n\n ': 1, '  1': 1, ' 12': 1, '12W': 2, '2W1': 1, 'W1B': 2, '1B1': 2, 'B12': 1, '2W3': 1, 'W3B': 1, '3B2': 1, 'B24': 1, '24W': 1, '4W1': 1, 'B14': 1, '14W': 1, '4W\n': 1, '  T': 3, ' Th': 1, 'Thi': 1, 'his': 1, 's c': 1, 'e i': 1, 'int': 1, 'nte': 1, 'ter': 1, 'erp': 1, 'rpr': 1, 'ret': 5, 'ete': 1, 'ted': 1, 'ce ': 1, 'f t': 1, ' tw': 2, 'twe': 2, 'wel': 2, 'elv': 2, 'lve': 2, 'e W': 2, ' Ws': 2, 'Ws,': 2, ', o': 1, ' on': 1, 'one': 1, 'ne ': 1, 'e B': 2, ' B,': 1, 'B, ': 1, ', t': 1, 's,\n': 1, ',\n ': 1, 'thr': 1, 'hre': 1, 'ree': 1, 'ee ': 1, ' Bs': 1, 'Bs,': 1, ', e': 1, ' et': 1, 'etc': 1, 'tc.': 1, 'c..': 1, '..,': 1, '.,\n': 1, ',\n""': 1, '""\n\n': 2, '\n\n\n': 3, '\n\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f r': 2, 'un_': 4, 'n_l': 4, '_le': 4, 'th_': 4, 'h_e': 2, '_en': 2, 'ode': 7, 'de(': 4, 'e(u': 2, '(un': 2, 'unc': 8, 'sse': 14, 'sed': 14, 'ed_': 11, 'd_d': 11, '_da': 11, 'ta)': 4, 'a):': 2, '):\n': 2, '  ""': 4, ' """"': 6, '""\n ': 6, ' Ta': 2, 'Tak': 2, 'ake': 2, 'kes': 2, 'n u': 2, ' un': 4, 'd s': 3, 'str': 3, 'tri': 3, 'rin': 3, 'g o': 1, 'a a': 1, 'nd\n': 1, 'd\n ': 1, '  r': 3, 'etu': 4, 'tur': 4, 'urn': 4, 'rns': 2, 'ded': 3, 'ng.': 1, 'g.\n': 1, '.\n ': 2, '  c': 1, 'a =': 5, ' = ': 5, '= ""': 3, 'rn ': 2, 'n c': 1, 'ta\n': 2, 'a\n\n': 2, 'h_d': 2, '_de': 2, 'dec': 3, 'eco': 3, 'e(c': 2, '(co': 2, 'ng\n': 1, 'g\n ': 1, '  a': 1, 'd r': 1, 'e u': 1, 'd d': 2, ' de': 1, 'ta.': 1, 'a.\n': 1, '  u': 1, '\n\nu': 1, '\nun': 2, ' ""a': 2, '""aa': 2, 'aaa': 14, 'aah': 2, 'ahh': 2, 'hhh': 8, 'hhm': 2, 'hmm': 2, 'mmm': 10, 'mmu': 2, 'mui': 2, 'uii': 2, 'iii': 10, 'iia': 2, 'iaa': 2, 'aa""': 2, 'a""\n': 2, '\n\n#': 2, '\n# ': 2, '# E': 2, ' Ex': 2, 'Exp': 2, 'xpe': 2, 'pec': 2, 'ect': 2, 'cts': 2, 'ts:': 2, 's: ': 2, ': \n': 1, ' \nc': 1, '\nco': 1, '= r': 2, 'a)\n': 2, ')\n\n': 1, ': ""': 1, '""\nu': 1}"
Vincent Russo,square_root.py,"[0.0378, 0.0615, 0.1381, 0.1443, 0.0031, 0.1519, 0.1319, 0.1427, 0.0484, 0.1509, 0.2793, 0.0674, 0.0821, 0.0645, 0.2478, 0.0314, 0.2924, 0.3234, 0.2444, 0.0388, 0.2044, 0.2145, 0.0758, 0.0993, 0.1229, 0.1313, 0.0036, 0.0789, 0.0208, 0.1664, 0.1096, 0.2105, 0.1544, 0.0068]","[0.0621, 0.0268, 0.2539, 0.128, 0.1876, 0.0216, 0.0404, 0.0866, 0.0018, 0.0979, 0.1317, 0.0781, 0.1459, 0.0891, 0.1721, 0.0237, 0.0858, 0.2081, 0.178, 0.1091, 0.0915, 0.1894, 0.031, 0.195, 0.0235, 0.1353, 0.0141, 0.3389, 0.2911, 0.2836, 0.0764, 0.0967, 0.1481]","[0.1417, 0.0491, 0.0848, 0.1074, 0.0976, 0.0749, 0.2674, 0.2157, 0.1084, 0.2566, 0.0281, 0.0932, 0.0348, 0.0373, 0.1968, 0.0346, 0.1153, 0.1151, 0.269, 0.0202, 0.0573, 0.1074, 0.1562, 0.2323, 0.1864, 0.1298]","[0.1222, 0.0201, 0.1273, 0.1895, 0.1915, 0.1892, 0.0402, 0.218, 0.2712, 0.3708, 0.3062, 0.0421, 0.1079, 0.1358, 0.0679, 0.1867, 0.1274, 0.0738, 0.0074, 0.1158, 0.0307, 0.3119, 0.1737, 0.0717, 0.2647, 0.0952, 0.0164, 0.1287, 0.2317, 0.0142, 0.0728, 0.0592, 0.1479, 0.1103, 0.1748, 0.1932]","{'#': 1, 'youtube': 1, 'video:': 1, 'https://www.youtube.com/watch?v=plbsgflct74&list=pl5tcwhg-uph1kjie-fqt1xcskcwyfn2jb': 1, '""""""': 2, 'write': 1, 'a': 2, 'function': 2, 'that': 2, 'takes': 1, 'non-negative': 1, 'integer': 4, 'and': 1, 'returns': 1, 'the': 6, 'largest': 1, 'whose': 1, 'square': 1, 'is': 3, 'less': 1, 'than': 1, 'or': 1, 'equal': 1, 'to': 1, 'given.': 1, 'example:': 1, 'assume': 1, 'input': 1, '300.': 2, 'then': 1, 'expected': 1, 'output': 1, 'of': 1, 'should': 1, 'be': 1, '17,': 1, 'since': 1, '17^2': 1, '=': 9, '289': 1, '<': 1, 'note': 1, '18^2': 1, '324': 1, '>': 1, '300,': 1, 'so': 1, 'number': 1, '17': 1, 'correct': 1, 'response.': 1, 'k': 2, '300': 1, 'def': 1, 'integer_square_root(k):': 1, 'low': 4, '0': 1, 'high': 2, 'while': 1, '<=': 2, 'high:': 1, 'mid': 5, '(low': 1, '+': 2, 'high)': 1, '//': 1, '2': 1, 'mid_squared': 2, '*': 1, 'if': 1, 'k:': 1, '1': 3, 'else:': 1, '-': 2, 'return': 1, 'print(integer_square_root(k))': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 2, 'be ': 1, 'e V': 1, ' Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eo:': 1, 'o: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.y': 1, '.yo': 1, 'you': 1, 'out': 2, 'utu': 1, 'tub': 1, 'be.': 1, 'e.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/w': 1, '/wa': 1, 'wat': 1, 'atc': 1, 'tch': 1, 'ch?': 1, 'h?v': 1, '?v=': 1, 'v=p': 1, '=pl': 1, 'plb': 1, 'lbS': 1, 'bSg': 1, 'Sgf': 1, 'gfL': 1, 'fLC': 1, 'LCt': 1, 'Ct7': 1, 't74': 1, '74&': 1, '4&l': 1, '&li': 1, 'lis': 1, 'ist': 1, 'st=': 1, 't=P': 1, '=PL': 1, 'PL5': 1, 'L5t': 1, '5tc': 1, 'tcW': 1, 'cWH': 1, 'WHG': 1, 'HG-': 1, 'G-U': 1, '-UP': 1, 'UPH': 1, 'PH1': 1, 'H1k': 1, '1kj': 1, 'kji': 1, 'jiE': 1, 'iE-': 1, 'E-F': 1, '-Fq': 1, 'Fqt': 1, 'qt1': 1, 't1x': 1, '1xC': 1, 'xCS': 1, 'CSk': 1, 'Skc': 1, 'kcw': 1, 'cwy': 1, 'wyf': 1, 'yfn': 1, 'fn2': 1, 'n2J': 1, '2Jb': 1, 'Jb\n': 1, 'b\n""': 1, '\n""""': 2, '""""""': 2, '""""\n': 2, '""\nW': 1, '\nWr': 1, 'Wri': 1, 'rit': 1, 'ite': 1, 'te ': 2, 'e a': 1, ' a ': 2, 'a f': 1, ' fu': 2, 'fun': 2, 'unc': 2, 'nct': 2, 'cti': 2, 'tio': 2, 'ion': 2, 'on ': 2, 'n t': 2, ' th': 7, 'tha': 3, 'hat': 2, 'at ': 2, 't t': 1, ' ta': 1, 'tak': 1, 'ake': 1, 'kes': 1, 'es ': 1, 's a': 1, 'a n': 1, ' no': 1, 'non': 1, 'on-': 1, 'n-n': 1, '-ne': 1, 'neg': 1, 'ega': 1, 'gat': 1, 'ati': 1, 'tiv': 1, 'ive': 2, 've ': 1, 'e i': 4, ' in': 6, 'int': 7, 'nte': 6, 'teg': 6, 'ege': 6, 'ger': 6, 'er ': 5, 'r a': 1, ' an': 1, 'and': 1, 'nd ': 1, 'd r': 1, ' re': 3, 'ret': 2, 'etu': 2, 'tur': 2, 'urn': 2, 'rns': 1, 'ns\n': 1, 's\nt': 1, '\nth': 2, 'the': 6, 'he ': 6, 'e l': 2, ' la': 1, 'lar': 1, 'arg': 1, 'rge': 1, 'ges': 1, 'est': 1, 'st ': 1, 't i': 2, 'r w': 1, ' wh': 2, 'who': 1, 'hos': 1, 'ose': 1, 'se ': 1, 'e s': 1, ' sq': 1, 'squ': 5, 'qua': 6, 'uar': 5, 'are': 5, 're ': 1, ' is': 3, 'is ': 3, 's l': 1, ' le': 1, 'les': 1, 'ess': 1, 'ss ': 1, 's t': 2, 'han': 1, 'an ': 1, 'n o': 1, ' or': 1, 'or ': 1, 'r e': 1, ' eq': 1, 'equ': 1, 'ual': 1, 'al ': 1, 'l t': 1, ' to': 1, 'to\n': 1, 'o\nt': 1, 'r g': 1, ' gi': 1, 'giv': 1, 'ven': 1, 'en.': 1, 'n.\n': 1, '.\n\n': 2, '\n\nE': 1, '\nEx': 1, 'Exa': 1, 'xam': 1, 'amp': 1, 'mpl': 1, 'ple': 1, 'le:': 1, 'e:\n': 2, ':\n ': 5, '\n  ': 15, '   ': 62, '  A': 1, ' As': 1, 'Ass': 1, 'ssu': 1, 'sum': 1, 'ume': 1, 'me ': 1, 'inp': 1, 'npu': 1, 'put': 2, 'ut ': 2, 's i': 1, 'r 3': 1, ' 30': 4, '300': 4, '00.': 2, '0.\n': 1, '\n\n ': 3, '  T': 1, ' Th': 1, 'The': 1, 'hen': 1, 'en ': 1, 'e e': 1, ' ex': 1, 'exp': 1, 'xpe': 1, 'pec': 1, 'ect': 2, 'cte': 1, 'ted': 1, 'ed ': 3, 'd o': 1, ' ou': 1, 'utp': 1, 'tpu': 1, 't o': 1, ' of': 1, 'of ': 1, 'f t': 1, 'e f': 1, 'n s': 1, ' sh': 1, 'sho': 1, 'hou': 1, 'oul': 1, 'uld': 1, 'ld ': 1, 'd b': 1, ' be': 1, 'be\n': 1, 'e\n ': 1, '  1': 1, ' 17': 3, '17,': 1, '7, ': 1, ', s': 1, ' si': 1, 'sin': 1, 'inc': 1, 'nce': 1, 'ce ': 1, 'e 1': 1, '17^': 1, '7^2': 1, '^2 ': 2, '2 =': 2, ' = ': 9, '= 2': 1, ' 28': 1, '289': 1, '89 ': 1, '9 <': 1, ' < ': 1, '< 3': 1, '0. ': 1, '. N': 1, ' No': 1, 'Not': 1, 'ote': 1, 'e t': 1, 't 1': 1, ' 18': 1, '18^': 1, '8^2': 1, '= 3': 2, ' 32': 1, '324': 1, '24 ': 1, '4 >': 1, ' > ': 1, '> 3': 1, '00,': 1, '0,\n': 1, ',\n ': 1, '  s': 1, ' so': 1, 'so ': 1, 'o t': 1, 'e n': 1, ' nu': 1, 'num': 1, 'umb': 1, 'mbe': 1, 'ber': 1, 'r 1': 1, '17 ': 1, '7 i': 1, 'e c': 1, ' co': 1, 'cor': 1, 'orr': 1, 'rre': 1, 'rec': 1, 'ct ': 1, 't r': 1, 'res': 1, 'esp': 1, 'spo': 1, 'pon': 1, 'ons': 1, 'nse': 1, 'se.': 1, 'e.\n': 1, '.\n""': 1, '""\n\n': 1, '\n\nk': 1, '\nk ': 1, 'k =': 1, '00\n': 1, '0\n\n': 1, '\n\n\n': 2, '\n\nd': 1, '\nde': 1, 'def': 1, 'ef ': 1, 'f i': 1, 'er_': 2, 'r_s': 2, '_sq': 4, 're_': 2, 'e_r': 2, '_ro': 2, 'roo': 2, 'oot': 2, 'ot(': 2, 't(k': 2, '(k)': 2, 'k):': 1, '):\n': 1, '  \n': 1, ' \n ': 1, '  l': 2, ' lo': 4, 'low': 5, 'ow ': 5, 'w =': 2, '= 0': 1, ' 0\n': 1, '0\n ': 1, '  h': 2, ' hi': 4, 'hig': 4, 'igh': 4, 'gh ': 2, 'h =': 2, '= k': 2, ' k\n': 1, 'k\n\n': 1, '  w': 1, 'whi': 1, 'hil': 1, 'ile': 1, 'le ': 1, 'w <': 1, ' <=': 2, '<= ': 2, '= h': 1, 'gh:': 1, 'h:\n': 1, '  m': 2, ' mi': 7, 'mid': 7, 'id ': 4, 'd =': 2, '= (': 1, ' (l': 1, '(lo': 1, 'w +': 1, ' + ': 2, '+ h': 1, 'gh)': 1, 'h) ': 1, ') /': 1, ' //': 1, '// ': 1, '/ 2': 1, ' 2\n': 1, '2\n ': 1, 'id_': 2, 'd_s': 2, 'red': 2, '= m': 3, 'd *': 1, ' * ': 1, '* m': 1, 'id\n': 1, 'd\n\n': 1, '  i': 1, ' if': 1, 'if ': 1, 'f m': 1, 'd <': 1, ' k:': 1, 'k:\n': 1, 'd +': 1, '+ 1': 1, ' 1\n': 3, '1\n ': 2, '  e': 1, ' el': 1, 'els': 1, 'lse': 1, 'se:': 1, 'd -': 1, ' - ': 2, '- 1': 2, '  r': 1, 'rn ': 1, 'n l': 1, 'w -': 1, '1\n\n': 1, '\n\np': 1, '\npr': 1, 'pri': 1, 'rin': 1, 'nt(': 1, 't(i': 1, '(in': 1, 'k))': 1, '))\n': 1}"
Vincent Russo,str_len.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 6, 'youtube': 1, 'video:': 1, 'https://www.youtube.com/watch?v=rrk0gd77ln0': 1, 'given': 1, 'a': 1, 'string,': 1, 'calculate': 1, 'the': 2, 'length': 3, 'of': 1, 'string.': 1, 'input_str': 2, '=': 2, '""lucidprogramming""': 1, 'standard': 1, 'pythonic': 1, 'way:': 1, 'print(len(input_str))': 1, 'iterative': 1, 'calculation:': 2, 'o(n)': 2, 'def': 2, 'iterative_str_len(input_str):': 1, 'input_str_len': 3, '0': 2, 'for': 1, 'i': 1, 'in': 1, 'range(len(input_str)):': 1, '+=': 1, '1': 2, 'return': 3, 'recursive': 1, 'recursive_str_len(input_str):': 1, 'if': 1, '==': 1, ""'':"": 1, '+': 1, 'recursive_str_len(input_str[1:])': 1, 'print(iterative_str_len(input_str))': 1, 'print(recursive_str_len(input_str))': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 2, 'be ': 1, 'e V': 1, ' Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eo:': 1, 'o: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.y': 1, '.yo': 1, 'you': 1, 'out': 1, 'utu': 1, 'tub': 1, 'be.': 1, 'e.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/w': 1, '/wa': 1, 'wat': 1, 'atc': 1, 'tch': 1, 'ch?': 1, 'h?v': 1, '?v=': 1, 'v=R': 1, '=RR': 1, 'RRK': 1, 'RK0': 1, 'K0g': 1, '0gd': 1, 'gd7': 1, 'd77': 1, '77L': 1, '7Ln': 1, 'Ln0': 1, 'n0\n': 1, '0\n#': 1, '\n# ': 5, '# G': 1, ' Gi': 1, 'Giv': 1, 'ive': 8, 'ven': 1, 'en ': 3, 'n a': 1, ' a ': 1, 'a s': 1, ' st': 2, 'str': 19, 'tri': 2, 'rin': 5, 'ing': 3, 'ng,': 1, 'g, ': 1, ', c': 1, ' ca': 3, 'cal': 3, 'alc': 3, 'lcu': 3, 'cul': 3, 'ula': 3, 'lat': 3, 'ate': 1, 'te ': 1, 'e t': 1, ' th': 2, 'the': 2, 'he ': 2, 'e l': 3, ' le': 3, 'len': 13, 'eng': 3, 'ngt': 3, 'gth': 3, 'th ': 3, 'h o': 1, ' of': 1, 'of ': 1, 'f t': 1, 'e s': 1, 'ng.': 1, 'g. ': 1, '. \n': 1, ' \n\n': 1, '\n\ni': 1, '\nin': 1, 'inp': 12, 'npu': 12, 'put': 12, 'ut_': 12, 't_s': 12, '_st': 17, 'tr ': 2, 'r =': 2, ' = ': 2, '= ""': 1, ' ""L': 1, '""Lu': 1, 'Luc': 1, 'uci': 1, 'cid': 1, 'idP': 1, 'dPr': 1, 'Pro': 1, 'rog': 1, 'ogr': 1, 'gra': 1, 'ram': 1, 'amm': 1, 'mmi': 1, 'min': 1, 'ng""': 1, 'g""\n': 1, '""\n\n': 1, '\n\n#': 3, '# S': 1, ' St': 1, 'Sta': 1, 'tan': 1, 'and': 1, 'nda': 1, 'dar': 1, 'ard': 1, 'rd ': 1, 'd P': 1, ' Py': 1, 'Pyt': 1, 'yth': 1, 'tho': 1, 'hon': 1, 'oni': 1, 'nic': 1, 'ic ': 1, 'c w': 1, ' wa': 1, 'way': 1, 'ay:': 1, 'y:\n': 1, ':\n#': 1, '# p': 1, ' pr': 1, 'pri': 3, 'int': 3, 'nt(': 3, 't(l': 1, '(le': 2, 'en(': 7, 'n(i': 7, '(in': 7, 'tr)': 6, 'r))': 4, '))\n': 3, ')\n\n': 2, '# I': 1, ' It': 1, 'Ite': 1, 'ter': 3, 'era': 3, 'rat': 3, 'ati': 5, 'tiv': 3, 've ': 2, 'h c': 2, 'tio': 2, 'ion': 2, 'on:': 2, 'n: ': 2, ': O': 2, ' O(': 2, 'O(n': 2, '(n)': 2, 'n)\n': 2, ')\nd': 2, '\nde': 2, 'def': 2, 'ef ': 2, 'f i': 2, ' it': 1, 'ite': 2, 've_': 5, 'e_s': 5, 'tr_': 8, 'r_l': 8, '_le': 8, 'r):': 2, '):\n': 3, ':\n ': 4, '\n  ': 7, '   ': 22, '  i': 3, ' in': 5, 'n =': 1, '= 0': 1, ' 0\n': 2, '0\n ': 2, '  f': 1, ' fo': 1, 'for': 1, 'or ': 1, 'r i': 1, ' i ': 1, 'i i': 1, 'in ': 1, 'n r': 1, ' ra': 1, 'ran': 1, 'ang': 1, 'nge': 1, 'ge(': 1, 'e(l': 1, ')):': 1, 'n +': 1, ' +=': 1, '+= ': 1, '= 1': 1, ' 1\n': 1, '1\n ': 1, '  r': 3, ' re': 5, 'ret': 3, 'etu': 3, 'tur': 3, 'urn': 3, 'rn ': 3, 'n i': 1, 'en\n': 1, 'n\n\n': 1, '# R': 1, ' Re': 1, 'Rec': 1, 'ecu': 4, 'cur': 4, 'urs': 4, 'rsi': 4, 'siv': 4, 'f r': 1, 'rec': 3, ' if': 1, 'if ': 1, ' ==': 1, '== ': 1, ""= '"": 1, "" ''"": 1, ""'':"": 1, ""':\n"": 1, 'n 0': 1, 'n 1': 1, ' 1 ': 1, '1 +': 1, ' + ': 1, '+ r': 1, 'tr[': 1, 'r[1': 1, '[1:': 1, '1:]': 1, ':])': 1, '])\n': 1, '\n\np': 1, '\npr': 2, 't(i': 1, '(it': 1, ')\np': 1, 't(r': 1, '(re': 1}"
Vincent Russo,unique.py,"[0.0993, 0.0435, 0.0615, 0.1105, 0.1047, 0.2085, 0.1043, 0.0861, 0.0086, 0.0719, 0.015, 0.0231, 0.0288, 0.0805, 0.1463, 0.2093, 0.2535, 0.0427, 0.0368, 0.2006, 0.1742, 0.1466, 0.0225, 0.0073, 0.0143, 0.06, 0.0751, 0.0814, 0.1296, 0.2029, 0.1413, 0.1121, 0.1091, 0.0536, 0.181]","[0.1514, 0.2335, 0.1364, 0.1732, 0.2345, 0.0566, 0.081, 0.083, 0.0169, 0.0176, 0.1542, 0.0511, 0.319, 0.153, 0.0412, 0.0283, 0.0161, 0.0999, 0.0929, 0.1333, 0.0693, 0.0602, 0.0831, 0.0415, 0.1319, 0.0356, 0.1436, 0.0362, 0.1054, 0.0093, 0.0217, 0.1462, 0.1828, 0.1598, 0.1149]","[0.0309, 0.2346, 0.1167, 0.0689, 0.232, 0.2553, 0.0692, 0.1049, 0.0736, 0.1358, 0.1089, 0.0915, 0.0272, 0.0154, 0.0777, 0.197, 0.1866, 0.0887, 0.0141, 0.0083, 0.1056, 0.0173, 0.142, 0.0466, 0.0217, 0.0332, 0.2765, 0.2982, 0.1766, 0.0312]","[0.0224, 0.0776, 0.2426, 0.175, 0.0066, 0.1356, 0.1717, 0.0584, 0.0885, 0.026, 0.1767, 0.0735, 0.0068, 0.0006, 0.0101, 0.0375, 0.0519, 0.2223, 0.1517, 0.0601, 0.0622, 0.0586, 0.2342, 0.1239, 0.1452, 0.2137, 0.2644, 0.0865, 0.0821, 0.0062, 0.136, 0.0087, 0.124, 0.232]","{'#': 1, 'youtube': 1, 'video:': 1, 'https://www.youtube.com/watch?v=ktkgfnzom5o&index=8&list=pl5tcwhg-uph03aqnbtkbuh5qibhshbg_k': 1, '""""""': 2, 'implement': 1, 'an': 1, 'algorithm': 1, 'to': 1, 'determine': 1, 'if': 3, 'a': 1, 'string': 1, 'has': 1, 'all': 1, 'unique': 2, 'characters.': 1, 'unique_str': 2, '=': 9, '""abcdefg""': 1, 'non_unique_str': 2, '""non': 1, 'str""': 1, 'def': 4, 'normalize_str(input_str):': 1, 'input_str': 1, 'input_str.replace(""': 1, '"",': 1, '"""")': 2, 'return': 6, 'input_str.lower()': 1, 'is_unique_1(input_str):': 1, 'd': 1, 'dict()': 1, 'for': 2, 'i': 4, 'in': 4, 'input_str:': 2, 'd:': 1, 'false': 2, 'else:': 2, 'd[i]': 1, '1': 1, 'true': 2, 'is_unique_2(input_str):': 1, 'len(set(input_str))': 1, '==': 1, 'len(input_str)': 1, 'is_unique_3(input_str):': 1, 'alpha': 2, '""abcdefghijklmnopqrstuvwxyz""': 1, 'alpha:': 1, 'alpha.replace(i,': 1, 'normalize_str(unique_str)': 1, 'normalize_str(non_unique_str)': 1, 'print(unique_str)': 1, 'print(non_unique_str)': 1, 'print(is_unique_1(unique_str))': 1, 'print(is_unique_1(non_unique_str))': 1, 'print(is_unique_2(unique_str))': 1, 'print(is_unique_2(non_unique_str))': 1, 'print(is_unique_3(unique_str))': 1, 'print(is_unique_3(non_unique_str))': 1}","{'# Y': 1, ' Yo': 1, 'You': 1, 'ouT': 1, 'uTu': 1, 'Tub': 1, 'ube': 2, 'be ': 1, 'e V': 1, ' Vi': 1, 'Vid': 1, 'ide': 1, 'deo': 1, 'eo:': 1, 'o: ': 1, ': h': 1, ' ht': 1, 'htt': 1, 'ttp': 1, 'tps': 1, 'ps:': 1, 's:/': 1, '://': 1, '//w': 1, '/ww': 1, 'www': 1, 'ww.': 1, 'w.y': 1, '.yo': 1, 'you': 1, 'out': 1, 'utu': 1, 'tub': 1, 'be.': 1, 'e.c': 1, '.co': 1, 'com': 1, 'om/': 1, 'm/w': 1, '/wa': 1, 'wat': 1, 'atc': 1, 'tch': 1, 'ch?': 1, 'h?v': 1, '?v=': 1, 'v=K': 1, '=Kt': 1, 'KtK': 1, 'tKg': 1, 'KgF': 1, 'gFn': 1, 'FnZ': 1, 'nZo': 1, 'ZoM': 1, 'oM5': 1, 'M5o': 1, '5o&': 1, 'o&i': 1, '&in': 1, 'ind': 1, 'nde': 1, 'dex': 1, 'ex=': 1, 'x=8': 1, '=8&': 1, '8&l': 1, '&li': 1, 'lis': 1, 'ist': 1, 'st=': 1, 't=P': 1, '=PL': 1, 'PL5': 1, 'L5t': 1, '5tc': 1, 'tcW': 1, 'cWH': 1, 'WHG': 1, 'HG-': 1, 'G-U': 1, '-UP': 1, 'UPH': 1, 'PH0': 1, 'H03': 1, '03a': 1, '3aq': 1, 'aqn': 1, 'qnB': 1, 'nBT': 1, 'BTk': 1, 'TkB': 1, 'kBu': 1, 'BuH': 1, 'uH5': 1, 'H5q': 1, '5qI': 1, 'qIb': 1, 'Ibh': 1, 'bhs': 1, 'hsh': 1, 'shb': 1, 'hbg': 1, 'bg_': 1, 'g_K': 1, '_K\n': 1, 'K\n""': 1, '\n""""': 2, '""""""': 2, '""""\n': 2, '""\nI': 1, '\nIm': 1, 'Imp': 1, 'mpl': 1, 'ple': 1, 'lem': 1, 'eme': 1, 'men': 1, 'ent': 1, 'nt ': 1, 't a': 1, ' an': 1, 'an ': 1, 'n a': 2, ' al': 6, 'alg': 1, 'lgo': 1, 'gor': 1, 'ori': 1, 'rit': 1, 'ith': 1, 'thm': 1, 'hm ': 1, 'm t': 1, ' to': 1, 'to ': 1, 'o d': 1, ' de': 1, 'det': 1, 'ete': 1, 'ter': 2, 'erm': 1, 'rmi': 1, 'min': 1, 'ine': 1, 'ne ': 1, 'e i': 1, ' if': 3, 'if ': 3, 'f a': 1, ' a ': 1, 'a s': 1, ' st': 1, 'str': 29, 'tri': 1, 'rin': 9, 'ing': 1, 'ng ': 1, 'g h': 1, ' ha': 1, 'has': 1, 'as ': 1, 's a': 1, 'all': 1, 'll\n': 1, 'l\nu': 1, '\nun': 3, 'uni': 24, 'niq': 25, 'iqu': 25, 'que': 25, 'ue ': 2, 'e c': 1, ' ch': 1, 'cha': 1, 'har': 1, 'ara': 1, 'rac': 1, 'act': 1, 'cte': 1, 'ers': 1, 'rs.': 1, 's.\n': 1, '.\n""': 1, '""\n\n': 2, '\n\nu': 2, 'ue_': 23, 'e_s': 17, '_st': 28, 'tr ': 5, 'r =': 5, ' = ': 9, '= ""': 3, ' ""A': 1, '""Ab': 1, 'AbC': 1, 'bCD': 1, 'CDe': 1, 'Def': 1, 'efG': 1, 'fG""': 1, 'G""\n': 1, '""\nn': 1, '\nno': 2, 'non': 8, 'on_': 7, 'n_u': 7, '_un': 16, ' ""n': 1, '""no': 1, 'on ': 1, 'n U': 1, ' Un': 1, 'Uni': 1, 'e S': 1, ' ST': 1, 'STR': 1, 'TR""': 1, 'R""\n': 1, '\n\n\n': 5, '\n\nd': 4, '\nde': 4, 'def': 5, 'ef ': 4, 'f n': 1, ' no': 3, 'nor': 3, 'orm': 3, 'rma': 3, 'mal': 3, 'ali': 3, 'liz': 3, 'ize': 3, 'ze_': 3, 'tr(': 3, 'r(i': 1, '(in': 6, 'inp': 11, 'npu': 11, 'put': 11, 'ut_': 11, 't_s': 11, 'tr)': 16, 'r):': 4, '):\n': 4, ':\n ': 10, '\n  ': 17, '   ': 82, '  i': 3, ' in': 9, '= i': 1, 'tr.': 2, 'r.r': 1, '.re': 2, 'rep': 2, 'epl': 2, 'pla': 2, 'lac': 2, 'ace': 2, 'ce(': 2, 'e(""': 1, '("" ': 1, '"" ""': 1, ' "",': 1, '"", ': 1, ', ""': 2, ' """"': 2, '"""")': 2, '"")\n': 2, ')\n ': 3, '  r': 6, ' re': 6, 'ret': 6, 'etu': 6, 'tur': 6, 'urn': 6, 'rn ': 6, 'n i': 3, 'r.l': 1, '.lo': 1, 'low': 1, 'owe': 1, 'wer': 1, 'er(': 1, 'r()': 1, '()\n': 2, ')\n\n': 6, 'f i': 5, ' is': 3, 'is_': 9, 's_u': 9, 'e_1': 3, '_1(': 3, '1(i': 1, '  d': 2, ' d ': 1, 'd =': 1, '= d': 1, ' di': 1, 'dic': 1, 'ict': 1, 'ct(': 1, 't()': 1, '  f': 2, ' fo': 2, 'for': 2, 'or ': 2, 'r i': 2, ' i ': 4, 'i i': 4, 'in ': 4, 'tr:': 2, 'r:\n': 2, 'n d': 1, ' d:': 1, 'd:\n': 1, 'n F': 2, ' Fa': 2, 'Fal': 2, 'als': 2, 'lse': 4, 'se\n': 2, 'e\n ': 2, '  e': 2, ' el': 2, 'els': 2, 'se:': 2, 'e:\n': 2, ' d[': 1, 'd[i': 1, '[i]': 1, 'i] ': 1, '] =': 1, '= 1': 1, ' 1\n': 1, '1\n ': 1, 'n T': 2, ' Tr': 2, 'Tru': 2, 'rue': 2, 'ue\n': 2, 'e\n\n': 2, 'e_2': 3, '_2(': 3, '2(i': 1, 'n l': 1, ' le': 2, 'len': 2, 'en(': 2, 'n(s': 1, '(se': 1, 'set': 1, 'et(': 1, 't(i': 7, 'r))': 7, ')) ': 1, ') =': 1, ' ==': 1, '== ': 1, '= l': 1, 'n(i': 1, 'r)\n': 5, 'e_3': 3, '_3(': 3, '3(i': 1, '  a': 2, 'alp': 4, 'lph': 4, 'pha': 4, 'ha ': 2, 'a =': 2, ' ""a': 1, '""ab': 1, 'abc': 1, 'bcd': 1, 'cde': 1, 'efg': 1, 'fgh': 1, 'ghi': 1, 'hij': 1, 'ijk': 1, 'jkl': 1, 'klm': 1, 'lmn': 1, 'mno': 1, 'nop': 1, 'opq': 1, 'pqr': 1, 'qrs': 1, 'rst': 1, 'stu': 1, 'tuv': 1, 'uvw': 1, 'vwx': 1, 'wxy': 1, 'xyz': 1, 'yz""': 1, 'z""\n': 1, '""\n ': 1, 'ha:': 1, 'a:\n': 1, '= a': 1, 'ha.': 1, 'a.r': 1, 'e(i': 1, '(i,': 1, 'i, ': 1, '= n': 2, 'r(u': 1, '(un': 5, ')\nn': 1, 'r(n': 1, '(no': 5, '\n\np': 4, '\npr': 8, 'pri': 8, 'int': 8, 'nt(': 8, 't(u': 1, ')\np': 4, 't(n': 1, '(is': 6, '1(u': 1, '))\n': 6, '1(n': 1, '2(u': 1, '2(n': 1, '3(u': 1, '3(n': 1}"
